class FakeSetupActivity
!!!13362572.java!!!	onCreate(inout savedInstanceState : Bundle) : void
        super.onCreate(savedInstanceState);

        Log.d(TAG, "Running FakeSetupActivity");
        mHandler = new Handler();
        setVisible(false);
        setupLocation();
        setupOneWayVideo();
        login();
!!!13362700.java!!!	finish() : void
        Intent rebootIntent = new Intent(Intent.ACTION_REBOOT);
        // Flags that are required for WatchDog to not ignore the intent.
        rebootIntent.putExtra("nowait", 1);
        rebootIntent.putExtra("interval", 1);
        rebootIntent.putExtra("window", 0);
        sendBroadcast(rebootIntent);
!!!13362828.java!!!	setupLocation() : void
        Settings.Secure.putString(this.getContentResolver(),
                TvSettings.Secure.LOCATION_LINEUP_LOOKUP, getString(
                        R.string.location));
!!!13362956.java!!!	login() : void
        final Bundle addAccountOptions = new Bundle();
        addAccountOptions.putString(KEY_ACCOUNT_USERNAME, getString(
                R.string.username));
        // If the gservice entry is not set or wrong, FakeSetup will bring up account login dialog.
        final String password = Gservices.getString(getContentResolver(),
                "test:fake_setup_account_password");
        addAccountOptions.putString(KEY_PASSWORD, password);

        AccountManager.get(this).addAccount(
                ACCOUNT_TYPE,
                "SID",
                new String[] {FEATURE_LEGACY_HOSTED_OR_GOOGLE},
                addAccountOptions,
                this,
                new AccountManagerCallback<Bundle>() {
                    public void run(AccountManagerFuture<Bundle> future) {
                        Bundle resultBundle;
                        try {
                            resultBundle = future.getResult();
                            if (resultBundle.get(AccountManager.KEY_ERROR_CODE)
                                    == null) {
                                enableSync(addAccountOptions);
                                Log.d(TAG, "logged in successfully, finishing");
                                disableSetupWizard();
                            } else {
                                Log.d(TAG, "Login failed");
                            }
                        } catch (OperationCanceledException e) {
                            // Happens when we go into create account. Don't
                            // need to set failedLogin.
                            Log.d(TAG, "Cancelled login to create account.", e);
                        } catch (AuthenticatorException e) {
                            Log.d(TAG, "Invalid login during setup.", e);
                        } catch (IOException e) {
                            Log.d(TAG, "Login failed", e);
                        }
                    }
                },
                null);
!!!13363084.java!!!	enableSync(inout optionsBundle : Bundle) : void
        if (optionsBundle == null) {
            // if optionsBundle is null, means we went through SetupWizard login
            // which means sync is automatically enabled.
            return;
        }

        // Enable sync for all of the adapters for the account we just created
        String username = optionsBundle.getString(KEY_ACCOUNT_USERNAME);
        Account account = new Account(username, ACCOUNT_TYPE);
        SyncAdapterType[] types = ContentResolver.getSyncAdapterTypes();
        for (SyncAdapterType syncType: types) {
            if (ACCOUNT_TYPE.equals(syncType.accountType)) {
                Log.i(TAG, "Turning on sync for account=" + username +
                        " authority=" + syncType.authority);
                ContentResolver.setSyncAutomatically(account,
                        syncType.authority, true);
            }
        }
!!!13363212.java!!!	disableSetupWizard() : void
        setDeviceProvisioned(true);
        enableStrippedMode(false);
        enableComponentWithinPackageManager(false);
        finish();
!!!13363340.java!!!	enableStrippedMode(inout enabled : boolean) : void
        Settings.Secure.putInt(getContentResolver(),
                TvSettings.Secure.STRIPPED_MODE_ENABLED, enabled ? 1 : 0);
!!!13363468.java!!!	setDeviceProvisioned(inout provisioned : boolean) : void
        Settings.Global.putInt(getContentResolver(),
                Settings.Global.DEVICE_PROVISIONED,
                provisioned ? 1 : 0);
!!!13363596.java!!!	setupOneWayVideo() : void
        final String deviceId = "00000";
        final String label = "Generic video source";
        final int portNumber = getResources().getInteger(R.integer.port);
        Uri videoUri = Uri.parse("hdmi://localhost?port=" + portNumber);
        String portName = "HDMI " + portNumber;
        Device device = new Device.Builder("com.google.tv.mediadevicesapp", deviceId)
                .setLabel(label)
                .setCapability(Capability.IS_PASSTHROUGH_ONLY, true)
                .setCapability(Capability.USES_CHANNEL_LINEUP, false)
                .build();

        // insert device stream
        ContentValues values = new ContentValues();
        values.put(StreamsColumns.NAME, label);
        values.put(StreamsColumns.SUB_NAME, "Video Port: " + portName);
        values.put(StreamsColumns.DEVICE_ID, deviceId);
        values.put(StreamsColumns.URI, TvUriUtils.addDeviceId(Uri.parse("tv://generic"),
                deviceId).toString());
        values.put(StreamsColumns.STREAM_TYPE, Streams.STREAM_TYPE_CHANNEL);

        ContentResolver resolver = getContentResolver();
        resolver.insert(Streams.STREAMS_URI, values);

        // Start pairing service
        final Intent pairingIntent = new Intent(
                MediaDevicesConstants.ACTION_PAIR_DEVICE_IN_SERVICE)
                .putExtra(MediaDevicesConstants.EXTRA_DEVICE_ID, deviceId)
                .putExtra(MediaDevicesConstants.EXTRA_DEVICE, device)
                .putExtra(MediaDevicesConstants.EXTRA_PACKAGE_NAME, device.getPackageName())
                .putExtra(MediaDevicesConstants.EXTRA_VIDEO_URI, videoUri)
                .putExtra(MediaDevicesConstants.EXTRA_LABEL, label);

        startService(pairingIntent);
!!!13363724.java!!!	enableComponentWithinPackageManager(inout enable : boolean) : void
        PackageManager pm = getPackageManager();
        ComponentName name = new ComponentName(this,
                FakeSetupActivity.class);
        pm.setComponentEnabledSetting(name,
                enable ? PackageManager.COMPONENT_ENABLED_STATE_ENABLED :
                        PackageManager.COMPONENT_ENABLED_STATE_DISABLED,
                PackageManager.DONT_KILL_APP);

        ComponentName nameModularSetup = new ComponentName(
                "com.google.tv.welcome", "com.google.tv.welcome.ModularSetupActivity");
        pm.setComponentEnabledSetting(nameModularSetup,
                enable ? PackageManager.COMPONENT_ENABLED_STATE_ENABLED :
                    PackageManager.COMPONENT_ENABLED_STATE_DISABLED,
                    PackageManager.DONT_KILL_APP);
