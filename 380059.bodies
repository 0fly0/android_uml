class DexClassLoaderTest
!!!2594203.java!!!	setUp() : void
        TMP_DIR.mkdirs();

        ClassLoader cl = DexClassLoaderTest.class.getClassLoader();
        copyResource(cl, JAR_NAME, JAR_FILE);
        copyResource(cl, DEX_NAME, DEX_FILE);
        copyResource(cl, JAR2_NAME, JAR2_FILE);
        copyResource(cl, DEX2_NAME, DEX2_FILE);

        OPTIMIZED_DIR.mkdirs();
        File[] files = OPTIMIZED_DIR.listFiles();
        for (File file : files) {
            file.delete();
        }
!!!2594331.java!!!	copyResource(inout loader : ClassLoader, inout resourceName : String, inout destination : File) : void
        if (destination.exists()) {
            return;
        }

        InputStream in =
            loader.getResourceAsStream(PACKAGE_PATH + resourceName);
        FileOutputStream out = new FileOutputStream(destination);
        Streams.copy(in, out);
        in.close();
        out.close();
!!!2594459.java!!!	createInstance(inout config : Configuration) : DexClassLoader
        File file1;
        File file2;

        switch (config) {
            case ONE_DEX: file1 = DEX_FILE; file2 = null;      break;
            case ONE_JAR: file1 = JAR_FILE; file2 = null;      break;
            case TWO_DEX: file1 = DEX_FILE; file2 = DEX2_FILE; break;
            case TWO_JAR: file1 = JAR_FILE; file2 = JAR2_FILE; break;
            default: throw new AssertionError("shouldn't happen");
        }

        String path = file1.getAbsolutePath();
        if (file2 != null) {
            path += File.pathSeparator + file2.getAbsolutePath();
        }

        return new DexClassLoader(
            path, OPTIMIZED_DIR.getAbsolutePath(), null,
            ClassLoader.getSystemClassLoader());
!!!2594587.java!!!	createInstanceAndCallStaticMethod(inout config : Configuration, inout className : String, inout methodName : String) : Object
        DexClassLoader dcl = createInstance(config);
        Class c = dcl.loadClass(className);
        Method m = c.getMethod(methodName, (Class[]) null);
        return m.invoke(null, (Object[]) null);
!!!2594715.java!!!	test_init(inout config : Configuration) : void
        createInstance(config);

        int expectedFiles = config.expectedFiles;
        int actualFiles = OPTIMIZED_DIR.listFiles().length;

        assertEquals(expectedFiles, actualFiles);
!!!2594843.java!!!	test_simpleUse(inout config : Configuration) : void
        String result = (String)
            createInstanceAndCallStaticMethod(config, "test.Test1", "test");

        assertSame("blort", result);
!!!2594971.java!!!	test_constructor(inout config : Configuration) : void
        createInstanceAndCallStaticMethod(
            config, "test.TestMethods", "test_constructor");
!!!2595099.java!!!	test_callStaticMethod(inout config : Configuration) : void
        createInstanceAndCallStaticMethod(
            config, "test.TestMethods", "test_callStaticMethod");
!!!2595227.java!!!	test_getStaticVariable(inout config : Configuration) : void
        createInstanceAndCallStaticMethod(
            config, "test.TestMethods", "test_getStaticVariable");
!!!2595355.java!!!	test_callInstanceMethod(inout config : Configuration) : void
        createInstanceAndCallStaticMethod(
            config, "test.TestMethods", "test_callInstanceMethod");
!!!2595483.java!!!	test_getInstanceVariable(inout config : Configuration) : void
        createInstanceAndCallStaticMethod(
            config, "test.TestMethods", "test_getInstanceVariable");
!!!2595611.java!!!	test_diff_constructor(inout config : Configuration) : void
        createInstanceAndCallStaticMethod(
            config, "test.TestMethods", "test_diff_constructor");
!!!2595739.java!!!	test_diff_callStaticMethod(inout config : Configuration) : void
        createInstanceAndCallStaticMethod(
            config, "test.TestMethods", "test_diff_callStaticMethod");
!!!2595867.java!!!	test_diff_getStaticVariable(inout config : Configuration) : void
        createInstanceAndCallStaticMethod(
            config, "test.TestMethods", "test_diff_getStaticVariable");
!!!2595995.java!!!	test_diff_callInstanceMethod(inout config : Configuration) : void
        createInstanceAndCallStaticMethod(
            config, "test.TestMethods", "test_diff_callInstanceMethod");
!!!2596123.java!!!	test_diff_getInstanceVariable(inout config : Configuration) : void
        createInstanceAndCallStaticMethod(
            config, "test.TestMethods", "test_diff_getInstanceVariable");
!!!2596251.java!!!	test_oneJar_init() : void
        test_init(Configuration.ONE_JAR);
!!!2596379.java!!!	test_oneJar_simpleUse() : void
        test_simpleUse(Configuration.ONE_JAR);
!!!2596507.java!!!	test_oneJar_constructor() : void
        test_constructor(Configuration.ONE_JAR);
!!!2596635.java!!!	test_oneJar_callStaticMethod() : void
        test_callStaticMethod(Configuration.ONE_JAR);
!!!2596763.java!!!	test_oneJar_getStaticVariable() : void
        test_getStaticVariable(Configuration.ONE_JAR);
!!!2596891.java!!!	test_oneJar_callInstanceMethod() : void
        test_callInstanceMethod(Configuration.ONE_JAR);
!!!2597019.java!!!	test_oneJar_getInstanceVariable() : void
        test_getInstanceVariable(Configuration.ONE_JAR);
!!!2597147.java!!!	test_oneDex_init() : void
        test_init(Configuration.ONE_DEX);
!!!2597275.java!!!	test_oneDex_simpleUse() : void
        test_simpleUse(Configuration.ONE_DEX);
!!!2597403.java!!!	test_oneDex_constructor() : void
        test_constructor(Configuration.ONE_DEX);
!!!2597531.java!!!	test_oneDex_callStaticMethod() : void
        test_callStaticMethod(Configuration.ONE_DEX);
!!!2597659.java!!!	test_oneDex_getStaticVariable() : void
        test_getStaticVariable(Configuration.ONE_DEX);
!!!2597787.java!!!	test_oneDex_callInstanceMethod() : void
        test_callInstanceMethod(Configuration.ONE_DEX);
!!!2597915.java!!!	test_oneDex_getInstanceVariable() : void
        test_getInstanceVariable(Configuration.ONE_DEX);
!!!2598043.java!!!	test_twoJar_init() : void
        test_init(Configuration.TWO_JAR);
!!!2598171.java!!!	test_twoJar_simpleUse() : void
        test_simpleUse(Configuration.TWO_JAR);
!!!2598299.java!!!	test_twoJar_constructor() : void
        test_constructor(Configuration.TWO_JAR);
!!!2598427.java!!!	test_twoJar_callStaticMethod() : void
        test_callStaticMethod(Configuration.TWO_JAR);
!!!2598555.java!!!	test_twoJar_getStaticVariable() : void
        test_getStaticVariable(Configuration.TWO_JAR);
!!!2598683.java!!!	test_twoJar_callInstanceMethod() : void
        test_callInstanceMethod(Configuration.TWO_JAR);
!!!2598811.java!!!	test_twoJar_getInstanceVariable() : void
        test_getInstanceVariable(Configuration.TWO_JAR);
!!!2598939.java!!!	test_twoJar_diff_constructor() : void
        test_diff_constructor(Configuration.TWO_JAR);
!!!2599067.java!!!	test_twoJar_diff_callStaticMethod() : void
        test_diff_callStaticMethod(Configuration.TWO_JAR);
!!!2599195.java!!!	test_twoJar_diff_getStaticVariable() : void
        test_diff_getStaticVariable(Configuration.TWO_JAR);
!!!2599323.java!!!	test_twoJar_diff_callInstanceMethod() : void
        test_diff_callInstanceMethod(Configuration.TWO_JAR);
!!!2599451.java!!!	test_twoJar_diff_getInstanceVariable() : void
        test_diff_getInstanceVariable(Configuration.TWO_JAR);
!!!2599579.java!!!	test_twoDex_init() : void
        test_init(Configuration.TWO_DEX);
!!!2599707.java!!!	test_twoDex_simpleUse() : void
        test_simpleUse(Configuration.TWO_DEX);
!!!2599835.java!!!	test_twoDex_constructor() : void
        test_constructor(Configuration.TWO_DEX);
!!!2599963.java!!!	test_twoDex_callStaticMethod() : void
        test_callStaticMethod(Configuration.TWO_DEX);
!!!2600091.java!!!	test_twoDex_getStaticVariable() : void
        test_getStaticVariable(Configuration.TWO_DEX);
!!!2600219.java!!!	test_twoDex_callInstanceMethod() : void
        test_callInstanceMethod(Configuration.TWO_DEX);
!!!2600347.java!!!	test_twoDex_getInstanceVariable() : void
        test_getInstanceVariable(Configuration.TWO_DEX);
!!!2600475.java!!!	test_twoDex_diff_constructor() : void
        test_diff_constructor(Configuration.TWO_DEX);
!!!2600603.java!!!	test_twoDex_diff_callStaticMethod() : void
        test_diff_callStaticMethod(Configuration.TWO_DEX);
!!!2600731.java!!!	test_twoDex_diff_getStaticVariable() : void
        test_diff_getStaticVariable(Configuration.TWO_DEX);
!!!2600859.java!!!	test_twoDex_diff_callInstanceMethod() : void
        test_diff_callInstanceMethod(Configuration.TWO_DEX);
!!!2600987.java!!!	test_twoDex_diff_getInstanceVariable() : void
        test_diff_getInstanceVariable(Configuration.TWO_DEX);
!!!2601115.java!!!	test_directGetResourceAsStream(inout config : Configuration, inout resourceName : String, inout expectedContents : String) : void
        DexClassLoader dcl = createInstance(config);
        InputStream in = dcl.getResourceAsStream(resourceName);
        byte[] contents = Streams.readFully(in);
        String s = new String(contents, "UTF-8");

        assertEquals(expectedContents, s);
!!!2601243.java!!!	test_directGetResourceAsStream(inout config : Configuration) : void
        test_directGetResourceAsStream(
            config, "test/Resource1.txt", "Muffins are tasty!\n");
!!!2601371.java!!!	test_getResourceAsStream(inout config : Configuration) : void
        createInstanceAndCallStaticMethod(
            config, "test.TestMethods", "test_getResourceAsStream");
!!!2601499.java!!!	test_oneJar_directGetResourceAsStream() : void
        test_directGetResourceAsStream(Configuration.ONE_JAR);
!!!2601627.java!!!	test_oneJar_getResourceAsStream() : void
        test_getResourceAsStream(Configuration.ONE_JAR);
!!!2601755.java!!!	test_twoJar_directGetResourceAsStream() : void
        test_directGetResourceAsStream(Configuration.TWO_JAR);
!!!2601883.java!!!	test_twoJar_getResourceAsStream() : void
        test_getResourceAsStream(Configuration.TWO_JAR);
!!!2602011.java!!!	test_twoJar_diff_directGetResourceAsStream() : void
        test_directGetResourceAsStream(
            Configuration.TWO_JAR, "test2/Resource2.txt",
            "Who doesn't like a good biscuit?\n");
!!!2602139.java!!!	test_twoJar_diff_getResourceAsStream() : void
        createInstanceAndCallStaticMethod(
            Configuration.TWO_JAR, "test.TestMethods",
            "test_diff_getResourceAsStream");
