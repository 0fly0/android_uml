format 74
"statusbartest" // framework::base::cmds::am::src::com::android::statusbartest
  revision 2
  modified_by 12 "shchen"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "/home/shchen/work/jellybean/framework/base/tests/StatusBar/src/com/android/statusbartest/"
  java_package "com.android.statusbartest"
  classview 215564 "statusbartest"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 1521164 "ConfirmationActivity"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 3332748 // <generalisation>
	relation 3332748 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 3332748 // <generalisation>
	  b parent class_ref 693260 // Activity
      end

      attribute 6024972 "EXTRA_TITLE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"title\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 6025100 "EXTRA_TEXT"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"text\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 9333772 "onResume"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 9333900 "getTextExtra"
	private explicit_return_type "String"
	nparams 2
	  param in name "extra" explicit_type "String"
	  param in name "def" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1521292 "NotificationBuilderTest"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 3332876 // <generalisation>
	relation 3332876 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 3332876 // <generalisation>
	  b parent class_ref 693260 // Activity
      end

      attribute 6025228 "TAG"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"NotificationTestList\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 3333004 // mNM (<unidirectional association>)
	relation 3333004 --->
	  a role_name "mNM" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3333004 // mNM (<unidirectional association>)
	  b parent class_ref 770060 // NotificationManager
      end

      classrelation 3333132 // mHandler (<unidirectional association>)
	relation 3333132 --->
	  a role_name "mHandler" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3333132 // mHandler (<unidirectional association>)
	  b parent class_ref 687500 // Handler
      end

      attribute 6025356 "mStartDelay"
	package explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 9334028 "onCreate"
	public explicit_return_type "void"
	nparams 1
	  param inout name "icicle" type class_ref 678924 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 9334156 "setDefaults"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 3333260 // mClickListener (<unidirectional association>)
	relation 3333260 --->
	  a role_name "mClickListener" init_value " new View.OnClickListener() {
        public void onClick(View v) {
            switch (v.getId()) {
                case R.id.clear_1:
                    mNM.cancel(1);
                    break;
                case R.id.clear_2:
                    mNM.cancel(2);
                    break;
                case R.id.clear_3:
                    mNM.cancel(3);
                    break;
                case R.id.clear_4:
                    mNM.cancel(4);
                    break;
                case R.id.clear_5:
                    mNM.cancel(5);
                    break;
                case R.id.clear_6:
                    mNM.cancel(6);
                    break;
                case R.id.clear_7:
                    mNM.cancel(7);
                    break;
                case R.id.clear_8:
                    mNM.cancel(8);
                    break;
                case R.id.clear_9:
                    mNM.cancel(9);
                    break;
                case R.id.clear_10:
                    mNM.cancel(10);
                    break;
                case R.id.notify_1:
                    sendNotification(1);
                    break;
                case R.id.notify_2:
                    sendNotification(2);
                    break;
                case R.id.notify_3:
                    sendNotification(3);
                    break;
                case R.id.notify_4:
                    sendNotification(4);
                    break;
                case R.id.notify_5:
                    sendNotification(5);
                    break;
                case R.id.notify_6:
                    sendNotification(6);
                    break;
                case R.id.notify_7:
                    sendNotification(7);
                    break;
                case R.id.notify_8:
                    sendNotification(8);
                    break;
                case R.id.notify_9:
                    sendNotification(9);
                    break;
                case R.id.notify_10:
                    sendNotification(10);
                    break;
                case R.id.ten: {
                    for (int id=1; id<=10; id++) {
                        sendNotification(id);
                    }
                    break;
                }
                case R.id.clear_all: {
                    for (int id=1; id<=10; id++) {
                        mNM.cancel(id);
                    }
                    break;
                }
            }
        }
    }" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3333260 // mClickListener (<unidirectional association>)
	  b parent class_ref 699148 // OnClickListener
      end

      operation 9334284 "sendNotification"
	private explicit_return_type "void"
	nparams 1
	  param in name "id" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9334412 "subst"
	class_operation private explicit_return_type "CharSequence"
	nparams 3
	  param inout name "in" explicit_type "CharSequence"
	  param in name "ch" explicit_type "char"
	  param inout name "sub" explicit_type "CharSequence"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9334540 "buildNotification"
	private return_type class_ref 688780 // Notification
	nparams 1
	  param in name "id" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9334668 "setChecked"
	private explicit_return_type "void"
	nparams 1
	  param in name "id" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9334796 "getRadioChecked"
	private explicit_return_type "int"
	nparams 1
	  param in name "id" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9334924 "getRadioTag"
	private explicit_return_type "String"
	nparams 1
	  param in name "id" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9335052 "getRadioInt"
	private explicit_return_type "int"
	nparams 2
	  param in name "id" explicit_type "int"
	  param in name "def" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9335180 "getRadioHex"
	private explicit_return_type "int"
	nparams 2
	  param in name "id" explicit_type "int"
	  param in name "def" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9335308 "getChecked"
	private explicit_return_type "boolean"
	nparams 1
	  param in name "id" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9335436 "loadBitmap"
	private return_type class_ref 686860 // Bitmap
	nparams 1
	  param in name "id" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9335564 "makeDeleteIntent"
	private return_type class_ref 711948 // PendingIntent
	nparams 1
	  param in name "id" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9335692 "makeContentIntent"
	private return_type class_ref 711948 // PendingIntent
	nparams 1
	  param in name "id" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1521420 "NotificationTestList"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 3333644 // <generalisation>
	relation 3333644 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 3333644 // <generalisation>
	  b parent class_ref 1521548 // TestActivity
      end

      attribute 6025612 "TAG"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"NotificationTestList\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 3333772 // mNM (<unidirectional association>)
	relation 3333772 --->
	  a role_name "mNM" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3333772 // mNM (<unidirectional association>)
	  b parent class_ref 770060 // NotificationManager
      end

      classrelation 3333900 // mVibrator (<unidirectional association>)
	relation 3333900 --->
	  a role_name "mVibrator" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3333900 // mVibrator (<unidirectional association>)
	  b parent class_ref 822284 // Vibrator
      end

      classrelation 3334028 // mHandler (<unidirectional association>)
	relation 3334028 --->
	  a role_name "mHandler" init_value " new Handler()" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3334028 // mHandler (<unidirectional association>)
	  b parent class_ref 687500 // Handler
      end

      attribute 6025740 "mActivityCreateTime"
	package explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 6025868 "mChronometerBase"
	package explicit_type "long"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 6025996 "mProgressDone"
	package explicit_type "boolean"
	init_value " true"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 6026124 "kNumberedIconResIDs"
	const_attribute package explicit_type "int"
	multiplicity "[]"
	init_value " {
        R.drawable.notification0,
        R.drawable.notification1,
        R.drawable.notification2,
        R.drawable.notification3,
        R.drawable.notification4,
        R.drawable.notification5,
        R.drawable.notification6,
        R.drawable.notification7,
        R.drawable.notification8,
        R.drawable.notification9
    }"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 6026252 "kUnnumberedIconResID"
	const_attribute package explicit_type "int"
	init_value " R.drawable.notificationx"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 9336588 "onCreate"
	public explicit_return_type "void"
	nparams 1
	  param inout name "icicle" type class_ref 678924 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 9336716 "tag"
	protected explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 9336844 "tests"
	protected return_type class_ref 1521676 // Test
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      classrelation 3334156 // mTests (<unidirectional association>)
	relation 3334156 --->
	  a role_name "mTests" multiplicity "[]" init_value " new Test[] {
        new Test(\"Off and sound\") {
            public void run() {
                PowerManager pm = (PowerManager)NotificationTestList.this.getSystemService(Context.POWER_SERVICE);
                PowerManager.WakeLock wl = 
                            pm.newWakeLock(PowerManager.PARTIAL_WAKE_LOCK, \"sound\");
                wl.acquire();

                pm.goToSleep(SystemClock.uptimeMillis());

                Notification n = new Notification();
                n.sound = Uri.parse(\"file://\" + Environment.getExternalStorageDirectory() +
                        \"/virtual-void.mp3\");
                Log.d(TAG, \"n.sound=\" + n.sound);

                mNM.notify(1, n);

                Log.d(TAG, \"releasing wake lock\");
                wl.release();
                Log.d(TAG, \"released wake lock\");
            }
        },

        new Test(\"Cancel #1\") {
            public void run()
            {
                mNM.cancel(1);
            }
        },

        new Test(\"Button\") {
            public void run() {
                Notification n = new Notification(R.drawable.icon1, null,
                        mActivityCreateTime);
                n.contentView = new RemoteViews(getPackageName(), R.layout.button_notification);
                n.flags |= Notification.FLAG_ONGOING_EVENT;
                n.contentIntent = makeIntent();
                n.contentView.setOnClickPendingIntent(R.id.button, makeIntent2());

                mNM.notify(1, n);
            }
        },

        new Test(\"custom intent on text view\") {
            public void run() {
                Notification n = new Notification(R.drawable.icon1, null,
                        mActivityCreateTime);
                n.setLatestEventInfo(NotificationTestList.this, \"Persistent #1\",
                            \"This is a notification!!!\", null);
                n.contentView.setOnClickPendingIntent(com.android.internal.R.id.text,
                        makeIntent2());
                mNM.notify(1, n);
            }
        },

        new Test(\"Ticker 1 line\") {
            public void run() {
                Notification n = new Notification(R.drawable.icon1, \"tick tick tick\",
                        mActivityCreateTime);
                n.setLatestEventInfo(NotificationTestList.this, \"Persistent #1\",
                            \"This is a notification!!!\", makeIntent());
                mNM.notify(1, n);
            }
        },

        new Test(\"No view\") {
            public void run() {
                Notification n = new Notification(R.drawable.icon1, \"No view\",
                        System.currentTimeMillis());
                mNM.notify(1, n);
            }
        },

        new Test(\"No intent\") {
            public void run() {
                Notification n = new Notification(R.drawable.icon1, \"No intent\",
                        System.currentTimeMillis());
                n.setLatestEventInfo(NotificationTestList.this, \"No intent\",
                            \"No intent\", null);
                mNM.notify(1, n);
            }
        },

        new Test(\"Layout\") {
            public void run()
            {
                Notification n;

                n = new Notification(NotificationTestList.this,
                            R.drawable.ic_statusbar_missedcall,
                            null, System.currentTimeMillis()-(1000*60*60*24),
                            \"(453) 123-2328\",
                            \"\", null);
                n.flags |= Notification.FLAG_ONGOING_EVENT;

                mNM.notify(1, n);

                mNM.notify(2, new Notification(NotificationTestList.this,
                            R.drawable.ic_statusbar_email,
                            null, System.currentTimeMillis(),
                            \"Mark Willem, Me (2)\",
                            \"Re: Didn't you get the memo?\", null));

                mNM.notify(3, new Notification(NotificationTestList.this,
                            R.drawable.ic_statusbar_chat,
                            null, System.currentTimeMillis()+(1000*60*60*24),
                            \"Sophia Winterlanden\",
                            \"Lorem ipsum dolor sit amet.\", null));
            }
        },

        new Test(\"Bad Icon #1 (when=create)\") {
            public void run() {
                Notification n = new Notification(R.layout.chrono_notification /* not an icon */,
                        null, mActivityCreateTime);
                n.setLatestEventInfo(NotificationTestList.this, \"Persistent #1\",
                            \"This is the same notification!!!\", makeIntent());
                mNM.notify(1, n);
            }
        },

        new Test(\"Bad Icon #1 (when=now)\") {
            public void run() {
                Notification n = new Notification(R.layout.chrono_notification /* not an icon */,
                        null, System.currentTimeMillis());
                n.setLatestEventInfo(NotificationTestList.this, \"Persistent #1\",
                            \"This is the same notification!!!\", makeIntent());
                mNM.notify(1, n);
            }
        },

        new Test(\"Null Icon #1 (when=now)\") {
            public void run() {
                Notification n = new Notification(0, null, System.currentTimeMillis());
                n.setLatestEventInfo(NotificationTestList.this, \"Persistent #1\",
                            \"This is the same notification!!!\", makeIntent());
                mNM.notify(1, n);
            }
        },

        new Test(\"Bad resource #1 (when=create)\") {
            public void run() {
                Notification n = new Notification(R.drawable.icon2,
                        null, mActivityCreateTime);
                n.setLatestEventInfo(NotificationTestList.this, \"Persistent #1\",
                            \"This is the same notification!!!\", makeIntent());
                n.contentView.setInt(1 /*bogus*/, \"bogus method\", 666);
                mNM.notify(1, n);
            }
        },

        new Test(\"Bad resource #1 (when=now)\") {
            public void run() {
                Notification n = new Notification(R.drawable.icon2,
                        null, System.currentTimeMillis());
                n.setLatestEventInfo(NotificationTestList.this, \"Persistent #1\",
                            \"This is the same notification!!!\", makeIntent());
                n.contentView.setInt(1 /*bogus*/, \"bogus method\", 666);
                mNM.notify(1, n);
            }
        },


        new Test(\"Bad resource #3\") {
            public void run()
            {
                Notification n = new Notification(NotificationTestList.this,
                            R.drawable.ic_statusbar_missedcall,
                            null, System.currentTimeMillis()-(1000*60*60*24),
                            \"(453) 123-2328\",
                            \"\", null);
                n.contentView.setInt(1 /*bogus*/, \"bogus method\", 666);
                mNM.notify(3, n);
            }
        },

        new Test(\"Times\") {
            public void run()
            {
                long now = System.currentTimeMillis();

                timeNotification(7, \"24 hours from now\", now+(1000*60*60*24));
                timeNotification(6, \"12:01:00 from now\", now+(1000*60*60*12)+(60*1000));
                timeNotification(5, \"12 hours from now\", now+(1000*60*60*12));
                timeNotification(4, \"now\", now);
                timeNotification(3, \"11:59:00 ago\", now-((1000*60*60*12)-(60*1000)));
                timeNotification(2, \"12 hours ago\", now-(1000*60*60*12));
                timeNotification(1, \"24 hours ago\", now-(1000*60*60*24));
            }
        },
        new StateStress(\"Stress - Ongoing / Latest\", 100, 100, new Runnable[] {
                new Runnable() {
                    public void run() {
                        Log.d(TAG, \"Stress - Ongoing/Latest 0\");
                        Notification n = new Notification(NotificationTestList.this,
                                R.drawable.icon3,
                                null, System.currentTimeMillis(), \"Stress - Ongoing\",
                                \"Notify me!!!\", null);
                        n.flags |= Notification.FLAG_ONGOING_EVENT;
                        mNM.notify(1, n);
                    }
                },
                new Runnable() {
                    public void run() {
                        Log.d(TAG, \"Stress - Ongoing/Latest 1\");
                        Notification n = new Notification(NotificationTestList.this,
                                R.drawable.icon4,
                                null, System.currentTimeMillis(), \"Stress - Latest\",
                                \"Notify me!!!\", null);
                        //n.flags |= Notification.FLAG_ONGOING_EVENT;
                        mNM.notify(1, n);
                    }
                }
            }),

        new Test(\"Long\") {
            public void run()
            {
                Notification n = new Notification();
                n.defaults |= Notification.DEFAULT_SOUND ;
                n.vibrate = new long[] {
                        300, 400, 300, 400, 300, 400, 300, 400, 300, 400, 300, 400,
                        300, 400, 300, 400, 300, 400, 300, 400, 300, 400, 300, 400, 
                        300, 400, 300, 400, 300, 400, 300, 400, 300, 400, 300, 400 };
                mNM.notify(1, n);
            }
        },

        new Test(\"Progress #1\") {
            public void run() {
                final boolean PROGRESS_UPDATES_WHEN = true;
                if (!mProgressDone) return;
                mProgressDone = false;
                Thread t = new Thread() {
                    public void run() {
                        int x = 0;
                        while (!mProgressDone) {
                            Notification n = new Notification(R.drawable.icon1, null,
                                    PROGRESS_UPDATES_WHEN
                                    ? System.currentTimeMillis()
                                    : mActivityCreateTime);
                            RemoteViews v = new RemoteViews(getPackageName(),
                                    R.layout.progress_notification);
                            
                            v.setProgressBar(R.id.progress_bar, 100, x, false);
                            v.setTextViewText(R.id.status_text, \"Progress: \" + x + \"%\");
                    
                            n.contentView = v;
                            n.flags |= Notification.FLAG_ONGOING_EVENT;

                            mNM.notify(500, n);
                            x = (x + 7) % 100;

                            try {
                                Thread.sleep(1000);
                            } catch (InterruptedException e) {
                                break;
                            }
                        }
                    }
                };
                t.start();
            }
        },

        new Test(\"Stop Progress\") {
            public void run() {
                mProgressDone = true;
                mNM.cancel(500);
            }
        },

        new Test(\"Blue Lights\") {
            public void run()
            {
                Notification n = new Notification();
                n.flags |= Notification.FLAG_SHOW_LIGHTS;
                n.ledARGB = 0xff0000ff;
                n.ledOnMS = 1;
                n.ledOffMS = 0;
                mNM.notify(1, n);
            }
        },

        new Test(\"Red Lights\") {
            public void run()
            {
                Notification n = new Notification();
                n.flags |= Notification.FLAG_SHOW_LIGHTS;
                n.ledARGB = 0xffff0000;
                n.ledOnMS = 1;
                n.ledOffMS = 0;
                mNM.notify(1, n);
            }
        },

        new Test(\"Yellow Lights\") {
            public void run()
            {
                Notification n = new Notification();
                n.flags |= Notification.FLAG_SHOW_LIGHTS;
                n.ledARGB = 0xffffff00;
                n.ledOnMS = 1;
                n.ledOffMS = 0;
                mNM.notify(1, n);
            }
        },

        new Test(\"Lights off\") {
            public void run()
            {
                Notification n = new Notification();
                n.flags |= Notification.FLAG_SHOW_LIGHTS;
                n.ledARGB = 0x00000000;
                n.ledOnMS = 0;
                n.ledOffMS = 0;
                mNM.notify(1, n);
            }
        },

        new Test(\"Blue Blinking Slow\") {
            public void run()
            {
                Notification n = new Notification();
                n.flags |= Notification.FLAG_SHOW_LIGHTS;
                n.ledARGB = 0xff0000ff;
                n.ledOnMS = 1300;
                n.ledOffMS = 1300;
                mNM.notify(1, n);
            }
        },

        new Test(\"Blue Blinking Fast\") {
            public void run()
            {
                Notification n = new Notification();
                n.flags |= Notification.FLAG_SHOW_LIGHTS;
                n.ledARGB = 0xff0000ff;
                n.ledOnMS = 300;
                n.ledOffMS = 300;
                mNM.notify(1, n);
            }
        },

        new Test(\"Default All\") {
            public void run()
            {
                Notification n = new Notification();
                n.defaults |= Notification.DEFAULT_ALL;
                mNM.notify(1, n);
            }
        },

        new Test(\"Default All, once\") {
            public void run()
            {
                Notification n = new Notification();
                n.defaults |= Notification.DEFAULT_ALL;
                n.flags |= Notification.FLAG_ONLY_ALERT_ONCE ;
                mNM.notify(1, n);
            }
        },

        new Test(\"Content Sound\") {
            public void run()
            {
                Notification n = new Notification();
                n.sound = Uri.parse(
                        \"content://media/internal/audio/media/7\");

                mNM.notify(1, n);
            }
        },

        new Test(\"Resource Sound\") {
            public void run()
            {
                Notification n = new Notification();
                n.sound = Uri.parse(
                        ContentResolver.SCHEME_ANDROID_RESOURCE + \"://\" +
                        getPackageName() + \"/raw/ringer\");
                Log.d(TAG, \"n.sound=\" + n.sound);

                mNM.notify(1, n);
            }
        },

        new Test(\"Sound and Cancel\") {
            public void run()
            {
                Notification n = new Notification();
                n.sound = Uri.parse(
                            \"content://media/internal/audio/media/7\");

                mNM.notify(1, n);
                SystemClock.sleep(200);
                mNM.cancel(1);
            }
        },

        new Test(\"Vibrate\") {
            public void run()
            {
                Notification n = new Notification();
                    n.vibrate = new long[] { 0, 700, 500, 1000 };

                mNM.notify(1, n);
            }
        },

        new Test(\"Vibrate and cancel\") {
            public void run()
            {
                Notification n = new Notification();
                    n.vibrate = new long[] { 0, 700, 500, 1000 };

                mNM.notify(1, n);
                SystemClock.sleep(500);
                mNM.cancel(1);
            }
        },

        new Test(\"Vibrate pattern\") {
            public void run()
            {
                mVibrator.vibrate(new long[] { 250, 1000, 500, 2000 }, -1);
            }
        },

        new Test(\"Vibrate pattern repeating\") {
            public void run()
            {
                mVibrator.vibrate(new long[] { 250, 1000, 500 }, 1);
            }
        },

        new Test(\"Vibrate 3s\") {
            public void run()
            {
                mVibrator.vibrate(3000);
            }
        },

        new Test(\"Vibrate 100s\") {
            public void run()
            {
                mVibrator.vibrate(100000);
            }
        },

        new Test(\"Vibrate off\") {
            public void run()
            {
                mVibrator.cancel();
            }
        },

        new Test(\"Cancel #1\") {
            public void run() {
                mNM.cancel(1);
            }
        },

        new Test(\"Cancel #1 in 3 sec\") {
            public void run() {
                mHandler.postDelayed(new Runnable() {
                            public void run() {
                                Log.d(TAG, \"Cancelling now...\");
                                mNM.cancel(1);
                            }
                        }, 3000);
            }
        },

        new Test(\"Cancel #2\") {
            public void run() {
                mNM.cancel(2);
            }
        },

        new Test(\"Persistent #1\") {
            public void run() {
                Notification n = new Notification(R.drawable.icon1, \"tick tick tick\",
                        mActivityCreateTime);
                n.setLatestEventInfo(NotificationTestList.this, \"Persistent #1\",
                            \"This is a notification!!!\", makeIntent());
                mNM.notify(1, n);
            }
        },

        new Test(\"Persistent #1 in 3 sec\") {
            public void run() {
                mHandler.postDelayed(new Runnable() {
                            public void run() {
                                Notification n = new Notification(R.drawable.icon1,
                                        \"            \"
                                        + \"tick tock tick tock\\n\\nSometimes notifications can \"
                                        + \"be really long and wrap to more than one line.\\n\"
                                        + \"Sometimes.\"
                                        + \"Ohandwhathappensifwehaveonereallylongstringarewesure\"
                                        + \"thatwesegmentitcorrectly?\\n\",
                                        System.currentTimeMillis());
                                n.setLatestEventInfo(NotificationTestList.this,
                                        \"Still Persistent #1\",
                                        \"This is still a notification!!!\",
                                        makeIntent());
                                mNM.notify(1, n);
                            }
                        }, 3000);
            }
        },

        new Test(\"Persistent #2\") {
            public void run() {
                Notification n = new Notification(R.drawable.icon2, \"tock tock tock\",
                        System.currentTimeMillis());
                n.setLatestEventInfo(NotificationTestList.this, \"Persistent #2\",
                            \"Notify me!!!\", makeIntent());
                mNM.notify(2, n);
            }
        },

        new Test(\"Persistent #3\") {
            public void run() {
                Notification n = new Notification(R.drawable.icon2, \"tock tock tock\\nmooooo\",
                        System.currentTimeMillis());
                n.setLatestEventInfo(NotificationTestList.this, \"Persistent #3\",
                            \"Notify me!!!\", makeIntent());
                mNM.notify(3, n);
            }
        },

        new Test(\"Persistent #2 Vibrate\") {
            public void run() {
                Notification n = new Notification(R.drawable.icon2, \"tock tock tock\",
                        System.currentTimeMillis());
                n.setLatestEventInfo(NotificationTestList.this, \"Persistent #2\",
                            \"Notify me!!!\", makeIntent());
                n.defaults = Notification.DEFAULT_VIBRATE;
                mNM.notify(2, n);
            }
        },

        new Test(\"Persistent #1 - different icon\") {
            public void run() {
                Notification n = new Notification(R.drawable.icon2, null,
                        mActivityCreateTime);
                n.setLatestEventInfo(NotificationTestList.this, \"Persistent #1\",
                            \"This is the same notification!!!\", makeIntent());
                mNM.notify(1, n);
            }
        },

        new Test(\"Chronometer Start\") {
            public void run() {
                Notification n = new Notification(R.drawable.icon2, \"me me me me\",
                                                    System.currentTimeMillis());
                n.contentView = new RemoteViews(getPackageName(), R.layout.chrono_notification);
                mChronometerBase = SystemClock.elapsedRealtime();
                n.contentView.setChronometer(R.id.time, mChronometerBase, \"Yay! (%s)\", true);
                n.flags |= Notification.FLAG_ONGOING_EVENT;
                n.contentIntent = makeIntent();
                mNM.notify(2, n);
            }
        },

        new Test(\"Chronometer Stop\") {
            public void run() {
                mHandler.postDelayed(new Runnable() {
                        public void run() {
                            Log.d(TAG, \"Chronometer Stop\");
                            Notification n = new Notification();
                            n.icon = R.drawable.icon1;
                            n.contentView = new RemoteViews(getPackageName(),
                                                             R.layout.chrono_notification);
                            n.contentView.setChronometer(R.id.time, mChronometerBase, null, false);
                            n.contentIntent = makeIntent();
                            mNM.notify(2, n);
                        }
                    }, 3000);
            }
        },

        new Test(\"Sequential Persistent\") {
            public void run() {
                mNM.notify(1, notificationWithNumbers(1));
                mNM.notify(2, notificationWithNumbers(2));
            }
        },

        new Test(\"Replace Persistent\") {
            public void run() {
                mNM.notify(1, notificationWithNumbers(1));
                mNM.notify(1, notificationWithNumbers(1));
            }
        },

        new Test(\"Run and Cancel (n=1)\") {
            public void run() {
                mNM.notify(1, notificationWithNumbers(1));
                mNM.cancel(1);
            }
        },

        new Test(\"Run an Cancel (n=2)\") {
            public void run() {
                mNM.notify(1, notificationWithNumbers(1));
                mNM.notify(2, notificationWithNumbers(2));
                mNM.cancel(2);
            }
        },

        // Repeatedly notify and cancel -- triggers bug #670627
        new Test(\"Bug 670627\") {
            public void run() {
                for (int i = 0; i < 10; i++) {
                  Log.d(TAG, \"Add two notifications\");
                  mNM.notify(1, notificationWithNumbers(1));
                  mNM.notify(2, notificationWithNumbers(2));
                  Log.d(TAG, \"Cancel two notifications\");
                  mNM.cancel(1);
                  mNM.cancel(2);
                }
            }
        },

        new Test(\"Ten Notifications\") {
            public void run() {
                for (int i = 0; i < 2; i++) {
                    Notification n = new Notification(
                            kNumberedIconResIDs[i],
                            null, System.currentTimeMillis());
                    n.number = i;
                    n.setLatestEventInfo(
                            NotificationTestList.this,
                            \"Persistent #\" + i,
                            \"Notify me!!!\" + i, 
                            null);
                    n.flags |= Notification.FLAG_ONGOING_EVENT;
                    mNM.notify((i+1)*10, n);
                }
                for (int i = 2; i < 10; i++) {
                    Notification n = new Notification(
                            kNumberedIconResIDs[i],
                            null, System.currentTimeMillis());
                    n.number = i;
                    n.setLatestEventInfo(
                            NotificationTestList.this,
                            \"Persistent #\" + i,
                            \"Notify me!!!\" + i, 
                            null);
                    mNM.notify((i+1)*10, n);
                }
            }
        },
        
        new Test(\"Cancel eight notifications\") {
            public void run() {
                for (int i = 1; i < 9; i++) {
                    mNM.cancel((i+1)*10);
                }
            }
        },
        
        new Test(\"Cancel the other two notifications\") {
            public void run() {
                mNM.cancel(10);
                mNM.cancel(100);
            }
        },
        
        new Test(\"Persistent with numbers 1\") {
            public void run() {
                mNM.notify(1, notificationWithNumbers(1));
            }
        },

        new Test(\"Persistent with numbers 22\") {
            public void run() {
                mNM.notify(1, notificationWithNumbers(22));
            }
        },

        new Test(\"Persistent with numbers 333\") {
            public void run() {
                mNM.notify(1, notificationWithNumbers(333));
            }
        },

        new Test(\"Persistent with numbers 4444\") {
            public void run() {
                mNM.notify(1, notificationWithNumbers(4444));
            }
        },

        new Test(\"PRIORITY_HIGH\") {
            public void run() {
                Notification n = new Notification.Builder(NotificationTestList.this)
                    .setSmallIcon(R.drawable.notification5)
                    .setContentTitle(\"High priority\")
                    .setContentText(\"This should appear before all others\")
                    .setPriority(Notification.PRIORITY_HIGH)
                    .getNotification();

                int[] idOut = new int[1];
                try {
                    INotificationManager directLine = mNM.getService();
                    directLine.enqueueNotificationWithTag(
                            getPackageName(),
                            null, 
                            100, 
                            n,
                            idOut,
                            UserHandle.myUserId());
                } catch (android.os.RemoteException ex) {
                    // oh well
                }
            }
        },

        new Test(\"PRIORITY_MAX\") {
            public void run() {
                Notification n = new Notification.Builder(NotificationTestList.this)
                    .setSmallIcon(R.drawable.notification9)
                    .setContentTitle(\"MAX priority\")
                    .setContentText(\"This might appear as an intruder alert\")
                    .setPriority(Notification.PRIORITY_MAX)
                    .getNotification();

                int[] idOut = new int[1];
                try {
                    INotificationManager directLine = mNM.getService();
                    directLine.enqueueNotificationWithTag(
                            getPackageName(),
                            null, 
                            200, 
                            n,
                            idOut,
                            UserHandle.myUserId());
                } catch (android.os.RemoteException ex) {
                    // oh well
                }
            }
        },

        new Test(\"PRIORITY_MIN\") {
            public void run() {
                Notification n = new Notification.Builder(NotificationTestList.this)
                    .setSmallIcon(R.drawable.notification0)
                    .setContentTitle(\"MIN priority\")
                    .setContentText(\"You should not see this\")
                    .setPriority(Notification.PRIORITY_MIN)
                    .getNotification();

                int[] idOut = new int[1];
                try {
                    INotificationManager directLine = mNM.getService();
                    directLine.enqueueNotificationWithTag(
                            getPackageName(),
                            null, 
                            1, 
                            n,
                            idOut,
                            UserHandle.myUserId());
                } catch (android.os.RemoteException ex) {
                    // oh well
                }
            }
        },

        new Test(\"Crash\") {
            public void run()
            {
                PowerManager.WakeLock wl
                        = ((PowerManager)NotificationTestList.this.getSystemService(Context.POWER_SERVICE))
                            .newWakeLock(PowerManager.PARTIAL_WAKE_LOCK, \"crasher\");
                wl.acquire();
                mHandler.postDelayed(new Runnable() {
                            public void run() {
                                throw new RuntimeException(\"Die!\");
                            }
                        }, 10000);

            }
        },

    }" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 3334156 // mTests (<unidirectional association>)
	  b parent class_ref 1521676 // Test
      end

      operation 9336972 "notificationWithNumbers"
	private return_type class_ref 688780 // Notification
	nparams 1
	  param in name "num" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9337100 "makeIntent"
	private return_type class_ref 711948 // PendingIntent
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9337228 "makeIntent2"
	private return_type class_ref 711948 // PendingIntent
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 1521804 "StateStress"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 3334284 // <generalisation>
	  relation 3334284 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 3334284 // <generalisation>
	    b parent class_ref 1521676 // Test
	end

	operation 9337356 "StateStress"
	  package explicit_return_type ""
	  nparams 4
	    param in name "name" explicit_type "String"
	    param in name "pause" explicit_type "int"
	    param in name "iterations" explicit_type "int"
	    param inout name "tasks" explicit_type "Runnable"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	attribute 6026380 "mTasks"
	  package explicit_type "Runnable"
	  multiplicity "[]"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 6026508 "mNext"
	  package explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 6026636 "mIteration"
	  package explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 6026764 "mPause"
	  package explicit_type "long"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 6026892 "mRunnable"
	  package explicit_type "Runnable"
	  init_value " new Runnable() {
            public void run() {
                mTasks[mNext].run();
                mNext++;
                if (mNext >= mTasks.length) {
                    mNext = 0;
                    mIteration--;
                    if (mIteration <= 0) {
                        return;
                    }
                }
                mHandler.postDelayed(mRunnable, mPause);
            }
        }"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 9337484 "run"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 9337612 "timeNotification"
	package explicit_return_type "void"
	nparams 3
	  param in name "n" explicit_type "int"
	  param in name "label" explicit_type "String"
	  param in name "time" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9337740 "loadBitmap"
	package return_type class_ref 686860 // Bitmap
	nparams 1
	  param in name "resId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1521548 "TestActivity"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 3333388 // <generalisation>
	relation 3333388 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 3333388 // <generalisation>
	  b parent class_ref 759052 // ListActivity
      end

      class 1521676 "Test"
	abstract visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 6025484 "name"
	  package explicit_type "String"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 9336076 "Test"
	  package explicit_return_type ""
	  nparams 1
	    param in name "n" explicit_type "String"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 9336204 "run"
	  abstract package explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 3333516 // mTests (<unidirectional association>)
	relation 3333516 --->
	  a role_name "mTests" multiplicity "[]" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 3333516 // mTests (<unidirectional association>)
	  b parent class_ref 1521676 // Test
      end

      operation 9335820 "tag"
	abstract protected explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9335948 "tests"
	abstract protected return_type class_ref 1521676 // Test
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9336332 "onCreate"
	public explicit_return_type "void"
	nparams 1
	  param inout name "icicle" type class_ref 678924 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 9336460 "onListItemClick"
	public explicit_return_type "void"
	nparams 4
	  param inout name "l" type class_ref 717580 // ListView
	  param inout name "v" type class_ref 694028 // View
	  param in name "position" explicit_type "int"
	  param in name "id" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 1521932 "PowerTest"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 3334412 // <generalisation>
	relation 3334412 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 3334412 // <generalisation>
	  b parent class_ref 1521548 // TestActivity
      end

      attribute 6027020 "TAG"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"PowerTest\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 6027148 "mPowerManager"
	package explicit_type "IPowerManager"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 6027276 "mPokeState"
	package explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 3334540 // mPokeToken (<unidirectional association>)
	relation 3334540 --->
	  a role_name "mPokeToken" init_value " new Binder()" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3334540 // mPokeToken (<unidirectional association>)
	  b parent class_ref 688652 // IBinder
      end

      classrelation 3334668 // mHandler (<unidirectional association>)
	relation 3334668 --->
	  a role_name "mHandler" init_value " new Handler()" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3334668 // mHandler (<unidirectional association>)
	  b parent class_ref 687500 // Handler
      end

      classrelation 3334796 // mPm (<unidirectional association>)
	relation 3334796 --->
	  a role_name "mPm" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3334796 // mPm (<unidirectional association>)
	  b parent class_ref 792716 // PowerManager
      end

      classrelation 3334924 // mProx (<unidirectional association>)
	relation 3334924 --->
	  a role_name "mProx" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3334924 // mProx (<unidirectional association>)
	  b parent class_ref 792844 // WakeLock
      end

      operation 9337868 "tag"
	protected explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 9337996 "tests"
	protected return_type class_ref 1521676 // Test
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      classrelation 3335052 // mTests (<unidirectional association>)
	relation 3335052 --->
	  a role_name "mTests" multiplicity "[]" init_value " new Test[] {
        new Test(\"Enable settings widget\") {
            public void run() {
                PackageManager pm = getPackageManager();
                pm.setComponentEnabledSetting(new ComponentName(\"com.android.settings\",
                            \"com.android.settings.widget.SettingsAppWidgetProvider\"),
                        PackageManager.COMPONENT_ENABLED_STATE_ENABLED, 0);

            }
        },
        new Test(\"Disable settings widget\") {
            public void run() {
                PackageManager pm = getPackageManager();
                pm.setComponentEnabledSetting(new ComponentName(\"com.android.settings\",
                            \"com.android.settings.widget.SettingsAppWidgetProvider\"),
                        PackageManager.COMPONENT_ENABLED_STATE_DISABLED, 0);

            }
        },
        new Test(\"Enable proximity\") {
            public void run() {
                mProx.acquire();
            }
        },
        new Test(\"Disable proximity\") {
            public void run() {
                mProx.release();
            }
        },
        new Test(\"Disable proximity (WAIT_FOR_PROXIMITY_NEGATIVE)\") {
            public void run() {
                mProx.release(PowerManager.WAIT_FOR_PROXIMITY_NEGATIVE);
            }
        },
        new Test(\"Enable proximity, wait 5 seconds then disable\") {
            public void run() {
                mProx.acquire();
                mHandler.postDelayed(new Runnable() {
                    @Override
                    public void run() {
                        mProx.release();
                    }
                }, 5000);
            }
        },
        new Test(\"Enable proximity, wait 5 seconds then disable  (WAIT_FOR_PROXIMITY_NEGATIVE)\") {
            public void run() {
                mProx.acquire();
                mHandler.postDelayed(new Runnable() {
                    @Override
                    public void run() {
                        mProx.release(PowerManager.WAIT_FOR_PROXIMITY_NEGATIVE);
                    }
                }, 5000);
            }
        },
    }" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 3335052 // mTests (<unidirectional association>)
	  b parent class_ref 1521676 // Test
      end
    end

    class 1522060 "StatusBarTest"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 3335180 // <generalisation>
	relation 3335180 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 3335180 // <generalisation>
	  b parent class_ref 1521548 // TestActivity
      end

      attribute 6027404 "TAG"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"StatusBarTest\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 3335308 // mStatusBarManager (<unidirectional association>)
	relation 3335308 --->
	  a role_name "mStatusBarManager" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3335308 // mStatusBarManager (<unidirectional association>)
	  b parent class_ref 773004 // StatusBarManager
      end

      classrelation 3335436 // mNotificationManager (<unidirectional association>)
	relation 3335436 --->
	  a role_name "mNotificationManager" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3335436 // mNotificationManager (<unidirectional association>)
	  b parent class_ref 770060 // NotificationManager
      end

      classrelation 3335564 // mHandler (<unidirectional association>)
	relation 3335564 --->
	  a role_name "mHandler" init_value " new Handler()" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3335564 // mHandler (<unidirectional association>)
	  b parent class_ref 687500 // Handler
      end

      attribute 6027532 "mUiVisibility"
	package explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 3335692 // mListView (<unidirectional association>)
	relation 3335692 --->
	  a role_name "mListView" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3335692 // mListView (<unidirectional association>)
	  b parent class_ref 694028 // View
      end

      classrelation 3335820 // mOnSystemUiVisibilityChangeListener (<unidirectional association>)
	relation 3335820 --->
	  a role_name "mOnSystemUiVisibilityChangeListener" init_value " new View.OnSystemUiVisibilityChangeListener() {
        public void onSystemUiVisibilityChange(int visibility) {
            Log.d(TAG, \"onSystemUiVisibilityChange visibility=\" + visibility);
        }
    }" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3335820 // mOnSystemUiVisibilityChangeListener (<unidirectional association>)
	  b parent class_ref 700172 // OnSystemUiVisibilityChangeListener
      end

      operation 9338124 "tag"
	protected explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 9338252 "tests"
	protected return_type class_ref 1521676 // Test
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 9338380 "onResume"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      classrelation 3335948 // mTests (<unidirectional association>)
	relation 3335948 --->
	  a role_name "mTests" multiplicity "[]" init_value " new Test[] {
        new Test(\"toggle LOW_PROFILE (lights out)\") {
            public void run() {
                if (0 != (mUiVisibility & View.SYSTEM_UI_FLAG_LOW_PROFILE)) {
                    mUiVisibility &= ~View.SYSTEM_UI_FLAG_LOW_PROFILE;
                } else {
                    mUiVisibility |= View.SYSTEM_UI_FLAG_LOW_PROFILE;
                }
                mListView.setSystemUiVisibility(mUiVisibility);
            }
        },
        new Test(\"toggle HIDE_NAVIGATION\") {
            public void run() {
                if (0 != (mUiVisibility & View.SYSTEM_UI_FLAG_HIDE_NAVIGATION)) {
                    mUiVisibility &= ~View.SYSTEM_UI_FLAG_HIDE_NAVIGATION;
                } else {
                    mUiVisibility |= View.SYSTEM_UI_FLAG_HIDE_NAVIGATION;
                }
                mListView.setSystemUiVisibility(mUiVisibility);

            }
        },
        new Test(\"clear SYSTEM_UI_FLAGs\") {
            public void run() {
                mUiVisibility = 0;
                mListView.setSystemUiVisibility(mUiVisibility);
            }
        },
//        new Test(\"no setSystemUiVisibility\") {
//            public void run() {
//                View v = findViewById(android.R.id.list);
//                v.setOnSystemUiVisibilityChangeListener(null);
//                v.setSystemUiVisibility(View.SYSTEM_UI_FLAG_VISIBLE);
//            }
//        },
        new Test(\"systemUiVisibility: STATUS_BAR_DISABLE_HOME\") {
            public void run() {
                mListView.setSystemUiVisibility(View.STATUS_BAR_DISABLE_HOME);
            }
        },
        new Test(\"Double Remove\") {
            public void run() {
                Log.d(TAG, \"set 0\");
                mStatusBarManager.setIcon(\"speakerphone\", R.drawable.stat_sys_phone, 0, null);
                Log.d(TAG, \"remove 1\");
                mStatusBarManager.removeIcon(\"tty\");

                SystemClock.sleep(1000);

                Log.d(TAG, \"set 1\");
                mStatusBarManager.setIcon(\"tty\", R.drawable.stat_sys_phone, 0, null);
                if (false) {
                    Log.d(TAG, \"set 2\");
                    mStatusBarManager.setIcon(\"tty\", R.drawable.stat_sys_phone, 0, null);
                }
                Log.d(TAG, \"remove 2\");
                mStatusBarManager.removeIcon(\"tty\");
                Log.d(TAG, \"set 3\");
                mStatusBarManager.setIcon(\"speakerphone\", R.drawable.stat_sys_phone, 0, null);
            }
        },
        new Test(\"Hide (FLAG_FULLSCREEN)\") {
            public void run() {
                Window win = getWindow();
                win.setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,
                        WindowManager.LayoutParams.FLAG_FULLSCREEN);
                Log.d(TAG, \"flags=\" + Integer.toHexString(win.getAttributes().flags));
            }
        },
        new Test(\"Show (~FLAG_FULLSCREEN)\") {
            public void run() {
                Window win = getWindow();
                win.setFlags(0, WindowManager.LayoutParams.FLAG_FULLSCREEN);
                Log.d(TAG, \"flags=\" + Integer.toHexString(win.getAttributes().flags));
            }
        },
        new Test(\"Immersive: Enter\") {
            public void run() {
                setImmersive(true);
            }
        },
        new Test(\"Immersive: Exit\") {
            public void run() {
                setImmersive(false);
            }
        },
        new Test(\"Priority notification\") {
            public void run() {
                Notification not = new Notification();
                not.icon = R.drawable.stat_sys_phone;
                not.when = System.currentTimeMillis()-(1000*60*60*24);
                not.setLatestEventInfo(StatusBarTest.this,
                                \"Incoming call\",
                                \"from: Imperious Leader\",
                                null
                                );
                not.flags |= Notification.FLAG_HIGH_PRIORITY;
                Intent fullScreenIntent = new Intent(StatusBarTest.this, TestAlertActivity.class);
                int id = (int)System.currentTimeMillis(); // XXX HAX
                fullScreenIntent.putExtra(\"id\", id);
                not.fullScreenIntent = PendingIntent.getActivity(
                    StatusBarTest.this,
                    0,
                    fullScreenIntent,
                    PendingIntent.FLAG_CANCEL_CURRENT);
                // if you tap on it you should get the original alert box
                not.contentIntent = not.fullScreenIntent;
                mNotificationManager.notify(id, not);
            }
        },
        new Test(\"Disable Alerts\") {
            public void run() {
                mStatusBarManager.disable(StatusBarManager.DISABLE_NOTIFICATION_ALERTS);
            }
        },
        new Test(\"Disable Ticker\") {
            public void run() {
                mStatusBarManager.disable(StatusBarManager.DISABLE_NOTIFICATION_TICKER);
            }
        },
        new Test(\"Disable Expand in 3 sec.\") {
            public void run() {
                mHandler.postDelayed(new Runnable() {
                        public void run() {
                            mStatusBarManager.disable(StatusBarManager.DISABLE_EXPAND);
                        }
                    }, 3000);
            }
        },
        new Test(\"Disable Notifications in 3 sec.\") {
            public void run() {
                mHandler.postDelayed(new Runnable() {
                        public void run() {
                            mStatusBarManager.disable(StatusBarManager.DISABLE_NOTIFICATION_ICONS);
                        }
                    }, 3000);
            }
        },
        new Test(\"Disable Expand + Notifications in 3 sec.\") {
            public void run() {
                mHandler.postDelayed(new Runnable() {
                        public void run() {
                            mStatusBarManager.disable(StatusBarManager.DISABLE_EXPAND
                                    | StatusBarManager.DISABLE_NOTIFICATION_ICONS);
                        }
                    }, 3000);
            }
        },
        new Test(\"Disable Home (StatusBarManager)\") {
            public void run() {
                mStatusBarManager.disable(StatusBarManager.DISABLE_HOME);
            }
        },
        new Test(\"Disable Back (StatusBarManager)\") {
            public void run() {
                mStatusBarManager.disable(StatusBarManager.DISABLE_BACK);
            }
        },
        new Test(\"Disable Recent (StatusBarManager)\") {
            public void run() {
                mStatusBarManager.disable(StatusBarManager.DISABLE_RECENT);
            }
        },
        new Test(\"Disable Clock\") {
            public void run() {
                mStatusBarManager.disable(StatusBarManager.DISABLE_CLOCK);
            }
        },
        new Test(\"Disable System Info\") {
            public void run() {
                mStatusBarManager.disable(StatusBarManager.DISABLE_SYSTEM_INFO);
            }
        },
        new Test(\"Disable everything in 3 sec\") {
            public void run() {
                mHandler.postDelayed(new Runnable() {
                        public void run() {
                            mStatusBarManager.disable(~StatusBarManager.DISABLE_NONE);
                        }
                    }, 3000);
            }
        },
        new Test(\"Enable everything\") {
            public void run() {
                mStatusBarManager.disable(StatusBarManager.DISABLE_NONE);
            }
        },
        new Test(\"Enable everything in 3 sec.\") {
            public void run() {
                mHandler.postDelayed(new Runnable() {
                        public void run() {
                            mStatusBarManager.disable(0);
                        }
                    }, 3000);
            }
        },
        new Test(\"Notify in 3 sec.\") {
            public void run() {
                mHandler.postDelayed(new Runnable() {
                        public void run() {
                            mNotificationManager.notify(1,
                                    new Notification(
                                            R.drawable.ic_statusbar_missedcall,
                                            \"tick tick tick\",
                                            System.currentTimeMillis()-(1000*60*60*24)
                                            ));
                        }
                    }, 3000);
            }
        },
        new Test(\"Cancel Notification in 3 sec.\") {
            public void run() {
                mHandler.postDelayed(new Runnable() {
                        public void run() {
                            mNotificationManager.cancel(1);
                        }
                    }, 3000);
            }
        },
        new Test(\"Expand notifications\") {
            public void run() {
                mStatusBarManager.expandNotificationsPanel();
            }
        },
        new Test(\" ... in 3 sec.\") {
            public void run() {
                mHandler.postDelayed(new Runnable() {
                        public void run() {
                            mStatusBarManager.expandNotificationsPanel();
                        }
                    }, 3000);
            }
        },
        new Test(\"Expand settings\") {
            public void run() {
                mStatusBarManager.expandSettingsPanel();
            }
        },
        new Test(\" ... in 3 sec.\") {
            public void run() {
                mHandler.postDelayed(new Runnable() {
                        public void run() {
                            mStatusBarManager.expandSettingsPanel();
                        }
                    }, 3000);
            }
        },
        new Test(\"Collapse panels in 3 sec.\") {
            public void run() {
                mHandler.postDelayed(new Runnable() {
                        public void run() {
                            mStatusBarManager.collapsePanels();
                        }
                    }, 3000);
            }
        },
        new Test(\"More icons\") {
            public void run() {
                for (String slot: new String[] {
                            \"sync_failing\",
                            \"gps\",
                            \"bluetooth\",
                            \"tty\",
                            \"speakerphone\",
                            \"mute\",
                            \"wifi\",
                            \"alarm_clock\",
                            \"secure\",
                        }) {
                    mStatusBarManager.setIconVisibility(slot, true);
                }
            }
        },
    }" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 3335948 // mTests (<unidirectional association>)
	  b parent class_ref 1521676 // Test
      end
    end

    class 1522188 "TestAlertActivity"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 3336076 // <generalisation>
	relation 3336076 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 3336076 // <generalisation>
	  b parent class_ref 693260 // Activity
      end

      attribute 6027660 "mId"
	package explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 9338508 "onResume"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 9338636 "onPause"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 9338764 "dismiss"
	public explicit_return_type "void"
	nparams 1
	  param inout name "v" type class_ref 694028 // View
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings({\"UnusedDeclaration\"})
"
	
	
	
      end
    end

    class 1522316 "ToastTest"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 3336204 // <generalisation>
	relation 3336204 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 3336204 // <generalisation>
	  b parent class_ref 1521548 // TestActivity
      end

      attribute 6027788 "TAG"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"ToastTest\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 3336332 // mHandler (<unidirectional association>)
	relation 3336332 --->
	  a role_name "mHandler" init_value " new Handler()" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3336332 // mHandler (<unidirectional association>)
	  b parent class_ref 687500 // Handler
      end

      classrelation 3336460 // mToast1 (<unidirectional association>)
	relation 3336460 --->
	  a role_name "mToast1" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3336460 // mToast1 (<unidirectional association>)
	  b parent class_ref 1021708 // Toast
      end

      classrelation 3336588 // mToast2 (<unidirectional association>)
	relation 3336588 --->
	  a role_name "mToast2" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3336588 // mToast2 (<unidirectional association>)
	  b parent class_ref 1021708 // Toast
      end

      operation 9338892 "tag"
	protected explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 9339020 "tests"
	protected return_type class_ref 1521676 // Test
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 9339148 "readFile"
	class_operation private explicit_return_type "String"
	nparams 1
	  param in name "fn" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 3336716 // mTests (<unidirectional association>)
	relation 3336716 --->
	  a role_name "mTests" multiplicity "[]" init_value " new Test[] {
        new Test(\"Read lights\") {
            public void run()
            {
                String text = \"freq=\" + readFile(\"/sys/class/leds/red/device/grpfreq\")
                        + \"\\npwm=\" + readFile(\"/sys/class/leds/red/device/grppwm\");
                mToast1 = Toast.makeText(ToastTest.this, text, Toast.LENGTH_SHORT);
                mToast1.show();
            }
        },

        new Test(\"Make Toast #1\") {
            public void run()
            {
                mToast1 = Toast.makeText(ToastTest.this, \"hi 1\", Toast.LENGTH_SHORT);
            }
        },

        new Test(\"Show Toast #1\") {
            public void run()
            {
                mToast1.show();
            }
        },

        new Test(\"Update Toast #1\") {
            public void run()
            {
                TextView view = new TextView(ToastTest.this);
                view.setText(\"replaced!\");
                mToast1.setView(view);
                mToast1.show();
            }
        },

        new Test(\"Make Toast #2\") {
            public void run()
            {
                mToast2 = Toast.makeText(ToastTest.this, \"hi 2\", Toast.LENGTH_SHORT);
            }
        },

        new Test(\"Show Toast #2\") {
            public void run()
            {
                mToast2.show();
            }
        },

        new Test(\"Gravity Toast LEFT\") {
            public void run()
            {
                Toast toast = Toast.makeText(ToastTest.this, \"LEFT\", Toast.LENGTH_SHORT);
                toast.setGravity(Gravity.LEFT, 0, 0);
                toast.show();
            }
        },

        new Test(\"Gravity Toast FILL_HORIZONTAL\") {
            public void run()
            {
                Toast toast = Toast.makeText(ToastTest.this, \"FILL_HORIZONTAL\",
                        Toast.LENGTH_SHORT);
                toast.setGravity(Gravity.FILL_HORIZONTAL, 0, 0);
                toast.show();
            }
        },

    }" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 3336716 // mTests (<unidirectional association>)
	  b parent class_ref 1521676 // Test
      end
    end
  end

  deploymentview 203660 "statusbartest"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 765708 "ConfirmationActivity"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.app.Activity;
import android.view.View;
import android.widget.TextView;
${definition}"
      associated_classes
	class_ref 1521164 // ConfirmationActivity
      end
    end

    artifact 765836 "NotificationBuilderTest"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.util.GregorianCalendar;
import android.app.Activity;
import android.app.Notification;
import android.app.NotificationManager;
import android.app.PendingIntent;
import android.content.Context;
import android.content.ContentResolver;
import android.content.Intent;
import android.graphics.Bitmap;
import android.graphics.drawable.BitmapDrawable;
import android.net.Uri;
import android.os.Bundle;
import android.os.Environment;
import android.os.Handler;
import android.os.Vibrator;
import android.os.Handler;
import android.text.SpannableStringBuilder;
import android.text.TextUtils;
import android.util.Log;
import android.net.Uri;
import android.os.SystemClock;
import android.view.View;
import android.widget.CompoundButton;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.RemoteViews;
import android.os.PowerManager;
${definition}"
      associated_classes
	class_ref 1521292 // NotificationBuilderTest
      end
      comment "Copyright (C) 2010 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 765964 "TestActivity"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.app.ListActivity;
import android.app.Notification;
import android.app.NotificationManager;
import android.widget.ArrayAdapter;
import android.view.View;
import android.widget.ListView;
import android.content.Intent;
import android.os.Vibrator;
import android.os.Bundle;
import android.os.Handler;
import android.util.Log;
import android.net.Uri;
import android.os.SystemClock;
import android.widget.RemoteViews;
import android.widget.Toast;
import android.os.PowerManager;
${definition}"
      associated_classes
	class_ref 1521548 // TestActivity
      end
      comment "Copyright (C) 2008 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 766092 "NotificationTestList"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.app.Notification;
import android.app.NotificationManager;
import android.app.PendingIntent;
import android.content.Context;
import android.content.ContentResolver;
import android.content.Intent;
import android.graphics.Bitmap;
import android.graphics.drawable.BitmapDrawable;
import android.os.Bundle;
import android.os.Environment;
import android.os.Vibrator;
import android.os.Handler;
import android.os.UserHandle;
import android.util.Log;
import android.net.Uri;
import android.os.SystemClock;
import android.widget.RemoteViews;
import android.widget.TextView;
import android.widget.ProgressBar;
import android.os.PowerManager;
import android.app.INotificationManager;
import com.android.internal.statusbar.StatusBarNotification;
${definition}"
      associated_classes
	class_ref 1521420 // NotificationTestList
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 766220 "PowerTest"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.Binder;
import android.os.IBinder;
import android.os.IPowerManager;
import android.content.ComponentName;
import android.content.pm.PackageManager;
import android.os.Handler;
import android.os.ServiceManager;
import android.os.PowerManager;
${definition}"
      associated_classes
	class_ref 1521932 // PowerTest
      end
      comment "Copyright (C) 2008 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 766348 "StatusBarTest"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.app.Notification;
import android.app.NotificationManager;
import android.view.View;
import android.content.Intent;
import android.app.PendingIntent;
import android.app.StatusBarManager;
import android.os.Handler;
import android.util.Log;
import android.os.SystemClock;
import android.view.Window;
import android.view.WindowManager;
${definition}"
      associated_classes
	class_ref 1522060 // StatusBarTest
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 766476 "TestAlertActivity"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.app.Activity;
import android.app.NotificationManager;
import android.content.Intent;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
${definition}"
      associated_classes
	class_ref 1522188 // TestAlertActivity
      end
    end

    artifact 766604 "ToastTest"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.app.ListActivity;
import android.app.PendingIntent;
import android.widget.ArrayAdapter;
import android.view.View;
import android.widget.ListView;
import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.util.Log;
import android.net.Uri;
import android.os.SystemClock;
import android.view.Gravity;
import android.widget.RemoteViews;
import android.widget.Toast;
import android.widget.TextView;
import android.os.PowerManager;
import java.io.FileReader;
import java.io.IOException;
${definition}"
      associated_classes
	class_ref 1522316 // ToastTest
      end
      comment "Copyright (C) 2008 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end
  end
end
