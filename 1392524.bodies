class PkgUsageStatsExtended
!!!8475532.java!!!	PkgUsageStatsExtended()
            mLaunchCount = 0;
            mUsageTime = 0;
!!!8475660.java!!!	PkgUsageStatsExtended(inout in : Parcel)
            mLaunchCount = in.readInt();
            mUsageTime = in.readLong();
            if (localLOGV) Slog.v(TAG, "Launch count: " + mLaunchCount
                    + ", Usage time:" + mUsageTime);
            
            final int numTimeStats = in.readInt();
            if (localLOGV) Slog.v(TAG, "Reading comps: " + numTimeStats);
            for (int i=0; i<numTimeStats; i++) {
                String comp = in.readString();
                if (localLOGV) Slog.v(TAG, "Component: " + comp);
                TimeStats times = new TimeStats(in);
                mLaunchTimes.put(comp, times);
            }
!!!8475788.java!!!	updateResume(in comp : String, inout launched : boolean) : void
            if (launched) {
                mLaunchCount ++;
            }
            mResumedTime = SystemClock.elapsedRealtime();
!!!8475916.java!!!	updatePause() : void
            mPausedTime =  SystemClock.elapsedRealtime();
            mUsageTime += (mPausedTime - mResumedTime);
!!!8476044.java!!!	addLaunchCount(in comp : String) : void
            TimeStats times = mLaunchTimes.get(comp);
            if (times == null) {
                times = new TimeStats();
                mLaunchTimes.put(comp, times);
            }
            times.incCount();
!!!8476172.java!!!	addLaunchTime(in comp : String, in millis : int) : void
            TimeStats times = mLaunchTimes.get(comp);
            if (times == null) {
                times = new TimeStats();
                mLaunchTimes.put(comp, times);
            }
            times.add(millis);
!!!8476300.java!!!	writeToParcel(inout out : Parcel) : void
            out.writeInt(mLaunchCount);
            out.writeLong(mUsageTime);
            final int numTimeStats = mLaunchTimes.size();
            out.writeInt(numTimeStats);
            if (numTimeStats > 0) {
                for (Map.Entry<String, TimeStats> ent : mLaunchTimes.entrySet()) {
                    out.writeString(ent.getKey());
                    TimeStats times = ent.getValue();
                    times.writeToParcel(out);
                }
            }
!!!8476428.java!!!	clear() : void
            mLaunchTimes.clear();
            mLaunchCount = 0;
            mUsageTime = 0;
