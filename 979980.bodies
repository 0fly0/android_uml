class HTML5VideoInline
!!!4894348.java!!!	start() : void
        if (!getPauseDuringPreparing()) {
            super.start();
        }
!!!4894476.java!!!	HTML5VideoInline(in videoLayerId : int, in position : int, inout skipPrepare : boolean)
        init(videoLayerId, position, skipPrepare);
!!!4894604.java!!!	decideDisplayMode() : void
        SurfaceTexture surfaceTexture = getSurfaceTexture(getVideoLayerId());
        Surface surface = new Surface(surfaceTexture);
        mPlayer.setSurface(surface);
        surface.release();
!!!4894732.java!!!	prepareDataAndDisplayMode(inout proxy : HTML5VideoViewProxy) : void
        super.prepareDataAndDisplayMode(proxy);
        setFrameAvailableListener(proxy);
        // TODO: This is a workaround, after b/5375681 fixed, we should switch
        // to the better way.
        if (mProxy.getContext().checkCallingOrSelfPermission(permission.WAKE_LOCK)
                == PackageManager.PERMISSION_GRANTED) {
            mPlayer.setWakeMode(proxy.getContext(), PowerManager.FULL_WAKE_LOCK);
        }
!!!4894860.java!!!	pauseAndDispatch(inout proxy : HTML5VideoViewProxy) : void
        super.pauseAndDispatch(proxy);
!!!4894988.java!!!	getSurfaceTexture(in videoLayerId : int) : SurfaceTexture
        // Create the surface texture.
        if (videoLayerId != mVideoLayerUsingSurfaceTexture
            || mSurfaceTexture == null
            || mTextureNames == null) {
            // The GL texture will store in the VideoLayerManager at native side.
            // They will be clean up when requested.
            // The reason we recreated GL texture name is for screen shot support.
            mTextureNames = new int[1];
            GLES20.glGenTextures(1, mTextureNames, 0);
            mSurfaceTexture = new SurfaceTexture(mTextureNames[0]);
        }
        mVideoLayerUsingSurfaceTexture = videoLayerId;
        return mSurfaceTexture;
!!!4895116.java!!!	surfaceTextureDeleted() : boolean
        return (mSurfaceTexture == null);
!!!4895244.java!!!	deleteSurfaceTexture() : void
        cleanupSurfaceTexture();
        return;
!!!4895372.java!!!	cleanupSurfaceTexture() : void
        mSurfaceTexture = null;
        mVideoLayerUsingSurfaceTexture = -1;
        return;
!!!4895500.java!!!	getTextureName() : int
        if (mTextureNames != null) {
            return mTextureNames[0];
        } else {
            return 0;
        }
!!!4895628.java!!!	setFrameAvailableListener(inout l : OnFrameAvailableListener) : void
        if (mSurfaceTexture != null) {
            mSurfaceTexture.setOnFrameAvailableListener(l);
        }
