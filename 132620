format 74
"hardware" // framework::native::include::media::hardware
  revision 1
  modified_by 12 "shchen"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  cpp_h_dir "/home/shchen/work/jellybean/framework/native/include/media/hardware/"
  cpp_src_dir "/home/shchen/work/jellybean/framework/native/include/media/hardware/"
  cpp_namespace "android"
  classview 130444 "hardware"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 152076 "CryptoPlugin"
      abstract visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      class 152204 "Mode"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum ${name} {
${items}
};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 1313676 "kMode_Unencrypted"
	  public type class_ref 152204 // Mode
	  init_value " 0"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1313804 "kMode_AES_CTR"
	  public type class_ref 152204 // Mode
	  init_value " 1"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1313932 "kMode_AES_WV"
	  public type class_ref 152204 // Mode
	  init_value " 2"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      class 152332 "SubSample"
	visibility package stereotype "struct"
	cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 1314060 "mNumBytesOfClearData"
	  public explicit_type "size_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1314188 "mNumBytesOfEncryptedData"
	  public explicit_type "size_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      operation 1527948 "CryptoPlugin"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} {};
"
	
	
	
	
      end

      operation 1528076 "~CryptoPlugin"
	cpp_virtual cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {};
"
	
	
	
	
      end

      operation 1528204 "requiresSecureDecoderComponent"
	abstract const cpp_virtual public explicit_return_type "bool"
	nparams 1
	  param in name "mime" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
	comment " If this method returns false, a non-secure decoder will be used to
 decode the data after decryption. The decrypt API below will have
 to support insecure decryption of the data (secure = false) for
 media data of the given mime type."
      end

      operation 1528332 "decrypt"
	abstract cpp_virtual public explicit_return_type "ssize_t"
	nparams 9
	  param in name "secure" explicit_type "bool"
	  param in name "key" explicit_type "uint8_t"
	  param in name "iv" explicit_type "uint8_t"
	  param in name "mode" type class_ref 152204 // Mode
	  param in name "srcPtr" explicit_type "void"
	  param in name "subSamples" type class_ref 152332 // SubSample
	  param in name "numSubSamples" explicit_type "size_t"
	  param inout name "dstPtr" explicit_type "void"
	  param inout name "errorDetailMsg" type class_ref 129548 // AString
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} ${p1}[16]${v1}, const ${t2} ${p2}[16]${v2}, ${t3} ${p3}${v3}, const ${t4} * ${p4}${v4}, const ${t5} * ${p5}${v5}, ${t6} ${p6}${v6}, ${t7} * ${p7}${v7}, ${t8} * ${p8}${v8}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
	comment " If the error returned falls into the range
 ERROR_DRM_VENDOR_MIN..ERROR_DRM_VENDOR_MAX, errorDetailMsg should be
 filled in with an appropriate string.
 At the java level these special errors will then trigger a
 MediaCodec.CryptoException that gives clients access to both
 the error code and the errorDetailMsg.
 Returns a non-negative result to indicate the number of bytes written
 to the dstPtr, or a negative result to indicate an error."
      end

      operation 1528460 "CryptoPlugin"
	private explicit_return_type ""
	nparams 1
	  param in name "" type class_ref 152076 // CryptoPlugin
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}const ${t0} & ${p0}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 1528588 "operator ="
	private return_type class_ref 152076 // CryptoPlugin
	nparams 1
	  param in name "" type class_ref 152076 // CryptoPlugin
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} & ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end
    end

    class 268940 "CryptoFactory"
      abstract visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      operation 1527180 "CryptoFactory"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} {};
"
	
	
	
	
      end

      operation 1527308 "~CryptoFactory"
	cpp_virtual cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {};
"
	
	
	
	
      end

      operation 1527436 "isCryptoSchemeSupported"
	abstract const cpp_virtual public explicit_return_type "bool"
	nparams 1
	  param in name "uuid" explicit_type "uint8_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} ${p0}[16]${v0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
      end

      operation 1527564 "createPlugin"
	abstract cpp_virtual public return_type class_ref 128268 // status_t
	nparams 4
	  param in name "uuid" explicit_type "uint8_t"
	  param in name "data" explicit_type "void"
	  param in name "size" explicit_type "size_t"
	  param inout name "plugin" type class_ref 152076 // CryptoPlugin
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} ${p0}[16]${v0}, const ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} * * ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
      end

      operation 1527692 "CryptoFactory"
	private explicit_return_type ""
	nparams 1
	  param in name "" type class_ref 268940 // CryptoFactory
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}const ${t0} & ${p0}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 1527820 "operator ="
	private return_type class_ref 268940 // CryptoFactory
	nparams 1
	  param in name "" type class_ref 268940 // CryptoFactory
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} & ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end
    end

    class 269196 "HDCPModule"
      abstract visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      class 518540 "ObserverFunc"
	visibility package stereotype "typedef" explicit_base_type "void"
	cpp_decl "${comment}typedef ${type}(* ${name})(void *cookie, int msg, int ext1, int ext2);
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
      end

      class 518668 "anonymous288"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum  {
${items}
};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 1314572 "HDCP_INITIALIZATION_COMPLETE"
	  public type class_ref 518668 // anonymous288
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1314700 "HDCP_INITIALIZATION_FAILED"
	  public type class_ref 518668 // anonymous288
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1314828 "HDCP_SHUTDOWN_COMPLETE"
	  public type class_ref 518668 // anonymous288
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1314956 "HDCP_SHUTDOWN_FAILED"
	  public type class_ref 518668 // anonymous288
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1315084 "HDCP_UNAUTHENTICATED_CONNECTION"
	  public type class_ref 518668 // anonymous288
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1315212 "HDCP_UNAUTHORIZED_CONNECTION"
	  public type class_ref 518668 // anonymous288
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1315340 "HDCP_REVOKED_CONNECTION"
	  public type class_ref 518668 // anonymous288
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1315468 "HDCP_TOPOLOGY_EXECEEDED"
	  public type class_ref 518668 // anonymous288
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1315596 "HDCP_UNKNOWN_ERROR"
	  public type class_ref 518668 // anonymous288
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      operation 1528716 "HDCPModule"
	cpp_inline public explicit_return_type ""
	nparams 2
	  param inout name "cookie" explicit_type "void"
	  param in name "observerNotify" type class_ref 518540 // ObserverFunc
	cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${volatile}${throw} {};
"
	
	
	
	
	comment " Module can call the notification function to signal completion/failure
 of asynchronous operations (such as initialization) or out of band
 events."
      end

      operation 1528844 "~HDCPModule"
	cpp_virtual cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {};
"
	
	
	
	
      end

      operation 1528972 "initAsync"
	abstract cpp_virtual public return_type class_ref 128268 // status_t
	nparams 2
	  param in name "host" explicit_type "char"
	  param in name "port" explicit_type "uint"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
	comment " Request to setup an HDCP session with the specified host listening
 on the specified port."
      end

      operation 1529100 "shutdownAsync"
	abstract cpp_virtual public return_type class_ref 128268 // status_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
	comment " Request to shutdown the active HDCP session."
      end

      operation 1529228 "encrypt"
	abstract cpp_virtual public return_type class_ref 128268 // status_t
	nparams 5
	  param in name "inData" explicit_type "void"
	  param in name "size" explicit_type "size_t"
	  param in name "streamCTR" explicit_type "uint32_t"
	  param inout name "outInputCTR" explicit_type "uint64_t"
	  param inout name "outData" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} * ${p3}${v3}, ${t4} * ${p4}${v4}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
	comment " Encrypt a data according to the HDCP spec. The data is to be
 encrypted in-place, only size bytes of data should be read/write,
 even if the size is not a multiple of 128 bit (16 bytes).
 This operation is to be synchronous, i.e. this call does not return
 until outData contains size bytes of encrypted data.
 streamCTR will be assigned by the caller (to 0 for the first PES stream,
 1 for the second and so on)
 inputCTR will be maintained by the callee for each PES stream."
      end

      operation 1529356 "HDCPModule"
	private explicit_return_type ""
	nparams 1
	  param in name "" type class_ref 269196 // HDCPModule
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}const ${t0} & ${p0}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 1529484 "operator ="
	private return_type class_ref 269196 // HDCPModule
	nparams 1
	  param in name "" type class_ref 269196 // HDCPModule
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} & ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end
    end

    class 361228 "OMXPluginBase"
      abstract visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      operation 1529612 "OMXPluginBase"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} {};
"
	
	
	
	
      end

      operation 1529740 "~OMXPluginBase"
	cpp_virtual cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {};
"
	
	
	
	
      end

      operation 1529868 "makeComponentInstance"
	abstract cpp_virtual public return_type class_ref 176268 // OMX_ERRORTYPE
	nparams 4
	  param in name "name" explicit_type "char"
	  param in name "callbacks" type class_ref 278412 // OMX_CALLBACKTYPE
	  param in name "appData" type class_ref 278540 // OMX_PTR
	  param inout name "component" type class_ref 278668 // OMX_COMPONENTTYPE
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, const ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} * * ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
      end

      operation 1529996 "destroyComponentInstance"
	abstract cpp_virtual public return_type class_ref 176268 // OMX_ERRORTYPE
	nparams 1
	  param inout name "component" type class_ref 278668 // OMX_COMPONENTTYPE
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
      end

      operation 1530124 "enumerateComponents"
	abstract cpp_virtual public return_type class_ref 176268 // OMX_ERRORTYPE
	nparams 3
	  param in name "name" type class_ref 357772 // OMX_STRING
	  param in name "size" explicit_type "size_t"
	  param in name "index" type class_ref 156428 // OMX_U32
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
      end

      operation 1530252 "getRolesOfComponent"
	abstract cpp_virtual public return_type class_ref 176268 // OMX_ERRORTYPE
	nparams 2
	  param in name "name" explicit_type "char"
	  param inout name "roles" explicit_type "Vector<String8>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
      end

      operation 1530380 "OMXPluginBase"
	private explicit_return_type ""
	nparams 1
	  param in name "" type class_ref 361228 // OMXPluginBase
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}const ${t0} & ${p0}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 1530508 "operator ="
	private return_type class_ref 361228 // OMXPluginBase
	nparams 1
	  param in name "" type class_ref 361228 // OMXPluginBase
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} & ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end
    end

    class 517772 "EnableAndroidNativeBuffersParams"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " A pointer to this struct is passed to the OMX_SetParameter when the extension
 index for the 'OMX.google.android.index.enableAndroidNativeBuffers' extension
 is given.

 When Android native buffer use is disabled for a port (the default state),
 the OMX node should operate as normal, and expect UseBuffer calls to set its
 buffers.  This is the mode that will be used when CPU access to the buffer is
 required.

 When Android native buffer use has been enabled for a given port, the video
 color format for the port is to be interpreted as an Android pixel format
 rather than an OMX color format.  The node should then expect to receive
 UseAndroidNativeBuffer calls (via OMX_SetParameter) rather than UseBuffer
 calls for that port."
      classrelation 1038732 // nSize (<directional composition>)
	relation 1038732 *-->
	  a role_name "nSize" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 1038732 // nSize (<directional composition>)
	  b parent class_ref 156428 // OMX_U32
      end

      classrelation 1038860 // nVersion (<directional composition>)
	relation 1038860 *-->
	  a role_name "nVersion" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 1038860 // nVersion (<directional composition>)
	  b parent class_ref 517900 // OMX_VERSIONTYPE
      end

      classrelation 1038988 // nPortIndex (<directional composition>)
	relation 1038988 *-->
	  a role_name "nPortIndex" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 1038988 // nPortIndex (<directional composition>)
	  b parent class_ref 156428 // OMX_U32
      end

      classrelation 1039116 // enable (<directional composition>)
	relation 1039116 *-->
	  a role_name "enable" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 1039116 // enable (<directional composition>)
	  b parent class_ref 156556 // OMX_BOOL
      end
    end

    class 518028 "StoreMetaDataInBuffersParams"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " A pointer to this struct is passed to OMX_SetParameter() when the extension
 index \"OMX.google.android.index.storeMetaDataInBuffers\"
 is given.

 When meta data is stored in the video buffers passed between OMX clients
 and OMX components, interpretation of the buffer data is up to the
 buffer receiver, and the data may or may not be the actual video data, but
 some information helpful for the receiver to locate the actual data.
 The buffer receiver thus needs to know how to interpret what is stored
 in these buffers, with mechanisms pre-determined externally. How to
 interpret the meta data is outside of the scope of this method.

 Currently, this is specifically used to pass meta data from video source
 (camera component, for instance) to video encoder to avoid memcpying of
 input video frame data. To do this, bStoreMetaDta is set to OMX_TRUE.
 If bStoreMetaData is set to false, real YUV frame data will be stored
 in the buffers. In addition, if no OMX_SetParameter() call is made
 with the corresponding extension index, real YUV data is stored
 in the buffers."
      classrelation 1039244 // nSize (<directional composition>)
	relation 1039244 *-->
	  a role_name "nSize" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 1039244 // nSize (<directional composition>)
	  b parent class_ref 156428 // OMX_U32
      end

      classrelation 1039372 // nVersion (<directional composition>)
	relation 1039372 *-->
	  a role_name "nVersion" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 1039372 // nVersion (<directional composition>)
	  b parent class_ref 517900 // OMX_VERSIONTYPE
      end

      classrelation 1039500 // nPortIndex (<directional composition>)
	relation 1039500 *-->
	  a role_name "nPortIndex" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 1039500 // nPortIndex (<directional composition>)
	  b parent class_ref 156428 // OMX_U32
      end

      classrelation 1039628 // bStoreMetaData (<directional composition>)
	relation 1039628 *-->
	  a role_name "bStoreMetaData" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 1039628 // bStoreMetaData (<directional composition>)
	  b parent class_ref 156556 // OMX_BOOL
      end
    end

    class 518156 "UseAndroidNativeBufferParams"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " A pointer to this struct is passed to OMX_SetParameter when the extension
 index for the 'OMX.google.android.index.useAndroidNativeBuffer' extension is
 given.  This call will only be performed if a prior call was made with the
 'OMX.google.android.index.enableAndroidNativeBuffers' extension index,
 enabling use of Android native buffers."
      classrelation 1039756 // nSize (<directional composition>)
	relation 1039756 *-->
	  a role_name "nSize" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 1039756 // nSize (<directional composition>)
	  b parent class_ref 156428 // OMX_U32
      end

      classrelation 1039884 // nVersion (<directional composition>)
	relation 1039884 *-->
	  a role_name "nVersion" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 1039884 // nVersion (<directional composition>)
	  b parent class_ref 517900 // OMX_VERSIONTYPE
      end

      classrelation 1040012 // nPortIndex (<directional composition>)
	relation 1040012 *-->
	  a role_name "nPortIndex" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 1040012 // nPortIndex (<directional composition>)
	  b parent class_ref 156428 // OMX_U32
      end

      classrelation 1040140 // pAppPrivate (<directional composition>)
	relation 1040140 *-->
	  a role_name "pAppPrivate" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 1040140 // pAppPrivate (<directional composition>)
	  b parent class_ref 278540 // OMX_PTR
      end

      attribute 1314316 "bufferHeader"
	public type class_ref 327308 // OMX_BUFFERHEADERTYPE
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1314444 "nativeBuffer"
	const_attribute public explicit_type "ANativeWindowBuffer"
	stereotype "sp"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> & ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 518284 "GetAndroidNativeBufferUsageParams"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " A pointer to this struct is passed to OMX_GetParameter when the extension
 index for the 'OMX.google.android.index.getAndroidNativeBufferUsage'
 extension is given.  The usage bits returned from this query will be used to
 allocate the Gralloc buffers that get passed to the useAndroidNativeBuffer
 command."
      classrelation 1040268 // nSize (<directional composition>)
	relation 1040268 *-->
	  a role_name "nSize" public
	    comment " IN"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 1040268 // nSize (<directional composition>)
	  b parent class_ref 156428 // OMX_U32
      end

      classrelation 1040396 // nVersion (<directional composition>)
	relation 1040396 *-->
	  a role_name "nVersion" public
	    comment " IN"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 1040396 // nVersion (<directional composition>)
	  b parent class_ref 517900 // OMX_VERSIONTYPE
      end

      classrelation 1040524 // nPortIndex (<directional composition>)
	relation 1040524 *-->
	  a role_name "nPortIndex" public
	    comment " IN"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 1040524 // nPortIndex (<directional composition>)
	  b parent class_ref 156428 // OMX_U32
      end

      classrelation 1040652 // nUsage (<directional composition>)
	relation 1040652 *-->
	  a role_name "nUsage" public
	    comment " OUT"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 1040652 // nUsage (<directional composition>)
	  b parent class_ref 156428 // OMX_U32
      end
    end

    class 518412 "PrependSPSPPSToIDRFramesParams"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " An enum OMX_COLOR_FormatAndroidOpaque to indicate an opaque colorformat
 is declared in media/stagefright/openmax/OMX_IVCommon.h
 This will inform the encoder that the actual
 colorformat will be relayed by the GRalloc Buffers.
 OMX_COLOR_FormatAndroidOpaque  = 0x7F000001,
 A pointer to this struct is passed to OMX_SetParameter when the extension
 index for the 'OMX.google.android.index.prependSPSPPSToIDRFrames' extension
 is given.
 A successful result indicates that future IDR frames will be prefixed by
 SPS/PPS."
      classrelation 1040780 // nSize (<directional composition>)
	relation 1040780 *-->
	  a role_name "nSize" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 1040780 // nSize (<directional composition>)
	  b parent class_ref 156428 // OMX_U32
      end

      classrelation 1040908 // nVersion (<directional composition>)
	relation 1040908 *-->
	  a role_name "nVersion" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 1040908 // nVersion (<directional composition>)
	  b parent class_ref 517900 // OMX_VERSIONTYPE
      end

      classrelation 1041036 // bEnable (<directional composition>)
	relation 1041036 *-->
	  a role_name "bEnable" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 1041036 // bEnable (<directional composition>)
	  b parent class_ref 156556 // OMX_BOOL
      end
    end

    class 518796 "MetadataBufferType"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}
};
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " * MetadataBufferType defines the type of the metadata buffers that
 * can be passed to video encoder component for encoding, via Stagefright
 * media recording framework. To see how to work with the metadata buffers
 * in media recording framework, please consult HardwareAPI.h
 *
 * The creator of metadata buffers and video encoder share common knowledge
 * on what is actually being stored in these metadata buffers, and
 * how the information can be used by the video encoder component
 * to locate the actual pixel data as the source input for video
 * encoder, plus whatever other information that is necessary. Stagefright
 * media recording framework does not need to know anything specific about the
 * metadata buffers, except for receving each individual metadata buffer
 * as the source input, making a copy of the metadata buffer, and passing the
 * copy via OpenMAX API to the video encoder component.
 *
 * The creator of the metadata buffers must ensure that the first
 * 4 bytes in every metadata buffer indicates its buffer type,
 * and the rest of the metadata buffer contains the
 * actual metadata information. When a video encoder component receives
 * a metadata buffer, it uses the first 4 bytes in that buffer to find
 * out the type of the metadata buffer, and takes action appropriate
 * to that type of metadata buffers (for instance, locate the actual
 * pixel data input and then encoding the input data to produce a
 * compressed output buffer).
 *
 * The following shows the layout of a metadata buffer,
 * where buffer type is a 4-byte field of MetadataBufferType,
 * and the payload is the metadata information.
 *
 * --------------------------------------------------------------
 * |  buffer type  |          payload                           |
 * --------------------------------------------------------------
 *"
      attribute 1315724 "kMetadataBufferTypeCameraSource"
	public type class_ref 518796 // MetadataBufferType
	init_value " 0"
	cpp_decl "  ${name}${value},${comment}"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1315852 "kMetadataBufferTypeGrallocSource"
	public type class_ref 518796 // MetadataBufferType
	init_value " 1"
	cpp_decl "  ${name}${value},${comment}"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end
  end

  deploymentview 148876 "hardware"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 224652 "CryptoAPI"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 268940 // CryptoFactory
	class_ref 152076 // CryptoPlugin
      end
    end

    artifact 224780 "HardwareAPI"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 517772 // EnableAndroidNativeBuffersParams
	class_ref 518028 // StoreMetaDataInBuffersParams
	class_ref 518156 // UseAndroidNativeBufferParams
	class_ref 518284 // GetAndroidNativeBufferUsageParams
	class_ref 518412 // PrependSPSPPSToIDRFramesParams
      end
    end

    artifact 224908 "HDCPAPI"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 269196 // HDCPModule
      end
    end

    artifact 225036 "MetadataBufferType"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 518796 // MetadataBufferType
      end
    end

    artifact 225164 "OMXPluginBase"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 361228 // OMXPluginBase
      end
    end
  end
end
