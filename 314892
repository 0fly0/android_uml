format 74
"dev" // vendor::tv::chrome::plugins::drmserver_adapter::jni::ppapi::c::dev
  revision 1
  modified_by 12 "shchen"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  cpp_h_dir "/home/shchen/work/jellybean/vendor/tv/chrome/plugins/drmserver_adapter/jni/ppapi/c/dev/"
  cpp_src_dir "/home/shchen/work/jellybean/vendor/tv/chrome/plugins/drmserver_adapter/jni/ppapi/c/dev/"
  classview 274444 "dev"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 2756748 "PP_CursorType_Dev"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}
};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @file
 * This file defines enumerations for cursor types.
 
*
 * @addtogroup Enums
 * @{"
      attribute 9947788 "PP_CURSORTYPE_CUSTOM"
	public type class_ref 2756748 // PP_CursorType_Dev
	init_value " -1"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9947916 "PP_CURSORTYPE_POINTER"
	public type class_ref 2756748 // PP_CursorType_Dev
	init_value " 0"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9948044 "PP_CURSORTYPE_CROSS"
	public type class_ref 2756748 // PP_CursorType_Dev
	init_value " 1"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9948172 "PP_CURSORTYPE_HAND"
	public type class_ref 2756748 // PP_CursorType_Dev
	init_value " 2"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9948300 "PP_CURSORTYPE_IBEAM"
	public type class_ref 2756748 // PP_CursorType_Dev
	init_value " 3"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9948428 "PP_CURSORTYPE_WAIT"
	public type class_ref 2756748 // PP_CursorType_Dev
	init_value " 4"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9948556 "PP_CURSORTYPE_HELP"
	public type class_ref 2756748 // PP_CursorType_Dev
	init_value " 5"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9948684 "PP_CURSORTYPE_EASTRESIZE"
	public type class_ref 2756748 // PP_CursorType_Dev
	init_value " 6"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9948812 "PP_CURSORTYPE_NORTHRESIZE"
	public type class_ref 2756748 // PP_CursorType_Dev
	init_value " 7"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9948940 "PP_CURSORTYPE_NORTHEASTRESIZE"
	public type class_ref 2756748 // PP_CursorType_Dev
	init_value " 8"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9949068 "PP_CURSORTYPE_NORTHWESTRESIZE"
	public type class_ref 2756748 // PP_CursorType_Dev
	init_value " 9"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9949196 "PP_CURSORTYPE_SOUTHRESIZE"
	public type class_ref 2756748 // PP_CursorType_Dev
	init_value " 10"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9949324 "PP_CURSORTYPE_SOUTHEASTRESIZE"
	public type class_ref 2756748 // PP_CursorType_Dev
	init_value " 11"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9949452 "PP_CURSORTYPE_SOUTHWESTRESIZE"
	public type class_ref 2756748 // PP_CursorType_Dev
	init_value " 12"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9949580 "PP_CURSORTYPE_WESTRESIZE"
	public type class_ref 2756748 // PP_CursorType_Dev
	init_value " 13"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9949708 "PP_CURSORTYPE_NORTHSOUTHRESIZE"
	public type class_ref 2756748 // PP_CursorType_Dev
	init_value " 14"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9949836 "PP_CURSORTYPE_EASTWESTRESIZE"
	public type class_ref 2756748 // PP_CursorType_Dev
	init_value " 15"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9949964 "PP_CURSORTYPE_NORTHEASTSOUTHWESTRESIZE"
	public type class_ref 2756748 // PP_CursorType_Dev
	init_value " 16"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9950092 "PP_CURSORTYPE_NORTHWESTSOUTHEASTRESIZE"
	public type class_ref 2756748 // PP_CursorType_Dev
	init_value " 17"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9950220 "PP_CURSORTYPE_COLUMNRESIZE"
	public type class_ref 2756748 // PP_CursorType_Dev
	init_value " 18"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9950348 "PP_CURSORTYPE_ROWRESIZE"
	public type class_ref 2756748 // PP_CursorType_Dev
	init_value " 19"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9950476 "PP_CURSORTYPE_MIDDLEPANNING"
	public type class_ref 2756748 // PP_CursorType_Dev
	init_value " 20"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9950604 "PP_CURSORTYPE_EASTPANNING"
	public type class_ref 2756748 // PP_CursorType_Dev
	init_value " 21"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9950732 "PP_CURSORTYPE_NORTHPANNING"
	public type class_ref 2756748 // PP_CursorType_Dev
	init_value " 22"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9950860 "PP_CURSORTYPE_NORTHEASTPANNING"
	public type class_ref 2756748 // PP_CursorType_Dev
	init_value " 23"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9950988 "PP_CURSORTYPE_NORTHWESTPANNING"
	public type class_ref 2756748 // PP_CursorType_Dev
	init_value " 24"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9951116 "PP_CURSORTYPE_SOUTHPANNING"
	public type class_ref 2756748 // PP_CursorType_Dev
	init_value " 25"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9951244 "PP_CURSORTYPE_SOUTHEASTPANNING"
	public type class_ref 2756748 // PP_CursorType_Dev
	init_value " 26"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9951372 "PP_CURSORTYPE_SOUTHWESTPANNING"
	public type class_ref 2756748 // PP_CursorType_Dev
	init_value " 27"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9951500 "PP_CURSORTYPE_WESTPANNING"
	public type class_ref 2756748 // PP_CursorType_Dev
	init_value " 28"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9951628 "PP_CURSORTYPE_MOVE"
	public type class_ref 2756748 // PP_CursorType_Dev
	init_value " 29"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9951756 "PP_CURSORTYPE_VERTICALTEXT"
	public type class_ref 2756748 // PP_CursorType_Dev
	init_value " 30"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9951884 "PP_CURSORTYPE_CELL"
	public type class_ref 2756748 // PP_CursorType_Dev
	init_value " 31"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9952012 "PP_CURSORTYPE_CONTEXTMENU"
	public type class_ref 2756748 // PP_CursorType_Dev
	init_value " 32"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9952140 "PP_CURSORTYPE_ALIAS"
	public type class_ref 2756748 // PP_CursorType_Dev
	init_value " 33"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9952268 "PP_CURSORTYPE_PROGRESS"
	public type class_ref 2756748 // PP_CursorType_Dev
	init_value " 34"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9952396 "PP_CURSORTYPE_NODROP"
	public type class_ref 2756748 // PP_CursorType_Dev
	init_value " 35"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9952524 "PP_CURSORTYPE_COPY"
	public type class_ref 2756748 // PP_CursorType_Dev
	init_value " 36"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9952652 "PP_CURSORTYPE_NONE"
	public type class_ref 2756748 // PP_CursorType_Dev
	init_value " 37"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9952780 "PP_CURSORTYPE_NOTALLOWED"
	public type class_ref 2756748 // PP_CursorType_Dev
	init_value " 38"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9952908 "PP_CURSORTYPE_ZOOMIN"
	public type class_ref 2756748 // PP_CursorType_Dev
	init_value " 39"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9953036 "PP_CURSORTYPE_ZOOMOUT"
	public type class_ref 2756748 // PP_CursorType_Dev
	init_value " 40"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9953164 "PP_CURSORTYPE_GRAB"
	public type class_ref 2756748 // PP_CursorType_Dev
	init_value " 41"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9953292 "PP_CURSORTYPE_GRABBING"
	public type class_ref 2756748 // PP_CursorType_Dev
	init_value " 42
"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2756876 "PP_PrintOrientation_Dev"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}
};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @file
 * This file defines the struct for PrintSettings.
 
*
 * @addtogroup Enums
 * @{"
      attribute 9953420 "PP_PRINTORIENTATION_NORMAL"
	public type class_ref 2756876 // PP_PrintOrientation_Dev
	init_value " 0"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9953548 "PP_PRINTORIENTATION_ROTATED_90_CW"
	public type class_ref 2756876 // PP_PrintOrientation_Dev
	init_value " 1"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9953676 "PP_PRINTORIENTATION_ROTATED_180"
	public type class_ref 2756876 // PP_PrintOrientation_Dev
	init_value " 2"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9953804 "PP_PRINTORIENTATION_ROTATED_90_CCW"
	public type class_ref 2756876 // PP_PrintOrientation_Dev
	init_value " 3
"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2757004 "PP_PrintOutputFormat_Dev"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}
};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      attribute 9953932 "PP_PRINTOUTPUTFORMAT_RASTER"
	public type class_ref 2757004 // PP_PrintOutputFormat_Dev
	init_value " 1u << 0"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9954060 "PP_PRINTOUTPUTFORMAT_PDF"
	public type class_ref 2757004 // PP_PrintOutputFormat_Dev
	init_value " 1u << 1"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9954188 "PP_PRINTOUTPUTFORMAT_POSTSCRIPT"
	public type class_ref 2757004 // PP_PrintOutputFormat_Dev
	init_value " 1u << 2"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9954316 "PP_PRINTOUTPUTFORMAT_EMF"
	public type class_ref 2757004 // PP_PrintOutputFormat_Dev
	init_value " 1u << 3
"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2757132 "PP_PrintScalingOption_Dev"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}
};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      attribute 9954444 "PP_PRINTSCALINGOPTION_NONE"
	public type class_ref 2757132 // PP_PrintScalingOption_Dev
	init_value " 0"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9954572 "PP_PRINTSCALINGOPTION_FIT_TO_PRINTABLE_AREA"
	public type class_ref 2757132 // PP_PrintScalingOption_Dev
	init_value " 1"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9954700 "PP_PRINTSCALINGOPTION_SOURCE_SIZE"
	public type class_ref 2757132 // PP_PrintScalingOption_Dev
	init_value " 2
"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2757260 "PP_PrintSettings_Dev"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @}
 
*
 * @addtogroup Structs
 * @{"
      classrelation 5195020 // printable_area (<directional composition>)
	relation 5194892 *-->
	  a role_name "printable_area" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}struct ${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5195020 // printable_area (<directional composition>)
	  b parent class_ref 2740620 // PP_Rect
      end

      classrelation 5195148 // content_area (<directional composition>)
	relation 5195020 *-->
	  a role_name "content_area" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}struct ${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5195148 // content_area (<directional composition>)
	  b parent class_ref 2740620 // PP_Rect
      end

      classrelation 5195276 // paper_size (<directional composition>)
	relation 5195148 *-->
	  a role_name "paper_size" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}struct ${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5195276 // paper_size (<directional composition>)
	  b parent class_ref 2740748 // PP_Size
      end

      classrelation 5195404 // dpi (<directional composition>)
	relation 5195276 *-->
	  a role_name "dpi" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5195404 // dpi (<directional composition>)
	  b parent class_ref 2409996 // int32_t
      end

      classrelation 5195532 // orientation (<directional composition>)
	relation 5195404 *-->
	  a role_name "orientation" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5195532 // orientation (<directional composition>)
	  b parent class_ref 2756876 // PP_PrintOrientation_Dev
      end

      classrelation 5195660 // print_scaling_option (<directional composition>)
	relation 5195532 *-->
	  a role_name "print_scaling_option" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5195660 // print_scaling_option (<directional composition>)
	  b parent class_ref 2757132 // PP_PrintScalingOption_Dev
      end

      classrelation 5195788 // grayscale (<directional composition>)
	relation 5195660 *-->
	  a role_name "grayscale" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5195788 // grayscale (<directional composition>)
	  b parent class_ref 2738188 // PP_Bool
      end

      classrelation 5195916 // format (<directional composition>)
	relation 5195788 *-->
	  a role_name "format" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5195916 // format (<directional composition>)
	  b parent class_ref 2757004 // PP_PrintOutputFormat_Dev
      end
    end

    class 2757388 "PP_VideoCaptureDeviceInfo_Dev"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @file
 * Structs for dealing with video capture.
 
*
 * @addtogroup Structs
 * @{
 
*
 * PP_VideoCaptureDeviceInfo_Dev is a structure that represent a video capture
 * configuration, such as resolution and frame rate."
      classrelation 5196044 // width (<directional composition>)
	relation 5195916 *-->
	  a role_name "width" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5196044 // width (<directional composition>)
	  b parent class_ref 2345996 // uint32_t
      end

      classrelation 5196172 // height (<directional composition>)
	relation 5196044 *-->
	  a role_name "height" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5196172 // height (<directional composition>)
	  b parent class_ref 2345996 // uint32_t
      end

      classrelation 5196300 // frames_per_second (<directional composition>)
	relation 5196172 *-->
	  a role_name "frames_per_second" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5196300 // frames_per_second (<directional composition>)
	  b parent class_ref 2345996 // uint32_t
      end
    end

    class 2757516 "PP_VideoCaptureStatus_Dev"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}
};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @}
 
*
 * @addtogroup Enums
 * @{
 
*
 * PP_VideoCaptureStatus_Dev is an enumeration that defines the various possible
 * states of a VideoCapture."
      attribute 9954828 "PP_VIDEO_CAPTURE_STATUS_STOPPED"
	public type class_ref 2757516 // PP_VideoCaptureStatus_Dev
	init_value " 0"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9954956 "PP_VIDEO_CAPTURE_STATUS_STARTING"
	public type class_ref 2757516 // PP_VideoCaptureStatus_Dev
	init_value " 1"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9955084 "PP_VIDEO_CAPTURE_STATUS_STARTED"
	public type class_ref 2757516 // PP_VideoCaptureStatus_Dev
	init_value " 2"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9955212 "PP_VIDEO_CAPTURE_STATUS_PAUSED"
	public type class_ref 2757516 // PP_VideoCaptureStatus_Dev
	init_value " 3"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9955340 "PP_VIDEO_CAPTURE_STATUS_STOPPING"
	public type class_ref 2757516 // PP_VideoCaptureStatus_Dev
	init_value " 4
"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2757644 "PP_VideoDecoder_Profile"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}
};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @file
 * NOTE: these must be kept in sync with the versions in media/!
 
*
 * @addtogroup Enums
 * @{
 
*
 * Video format.
 *
 * Keep the values in this enum unique, as they imply format (h.264 vs. VP8,
 * for example), and keep the values for a particular format grouped together
 * for clarity.
 * Note: Keep these in sync with media::VideoCodecProfile."
      attribute 9955468 "PP_VIDEODECODER_PROFILE_UNKNOWN"
	public type class_ref 2757644 // PP_VideoDecoder_Profile
	init_value " -1"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9955596 "PP_VIDEODECODER_H264PROFILE_NONE"
	public type class_ref 2757644 // PP_VideoDecoder_Profile
	init_value " 0"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9955724 "PP_VIDEODECODER_H264PROFILE_BASELINE"
	public type class_ref 2757644 // PP_VideoDecoder_Profile
	init_value " 1"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9955852 "PP_VIDEODECODER_H264PROFILE_MAIN"
	public type class_ref 2757644 // PP_VideoDecoder_Profile
	init_value " 2"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9955980 "PP_VIDEODECODER_H264PROFILE_EXTENDED"
	public type class_ref 2757644 // PP_VideoDecoder_Profile
	init_value " 3"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9956108 "PP_VIDEODECODER_H264PROFILE_HIGH"
	public type class_ref 2757644 // PP_VideoDecoder_Profile
	init_value " 4"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9956236 "PP_VIDEODECODER_H264PROFILE_HIGH10PROFILE"
	public type class_ref 2757644 // PP_VideoDecoder_Profile
	init_value " 5"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9956364 "PP_VIDEODECODER_H264PROFILE_HIGH422PROFILE"
	public type class_ref 2757644 // PP_VideoDecoder_Profile
	init_value " 6"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9956492 "PP_VIDEODECODER_H264PROFILE_HIGH444PREDICTIVEPROFILE"
	public type class_ref 2757644 // PP_VideoDecoder_Profile
	init_value " 7"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9956620 "PP_VIDEODECODER_H264PROFILE_SCALABLEBASELINE"
	public type class_ref 2757644 // PP_VideoDecoder_Profile
	init_value " 8"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9956748 "PP_VIDEODECODER_H264PROFILE_SCALABLEHIGH"
	public type class_ref 2757644 // PP_VideoDecoder_Profile
	init_value " 9"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9956876 "PP_VIDEODECODER_H264PROFILE_STEREOHIGH"
	public type class_ref 2757644 // PP_VideoDecoder_Profile
	init_value " 10"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9957004 "PP_VIDEODECODER_H264PROFILE_MULTIVIEWHIGH"
	public type class_ref 2757644 // PP_VideoDecoder_Profile
	init_value " 11"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9957132 "PP_VIDEODECODER_VP8PROFILE_MAIN"
	public type class_ref 2757644 // PP_VideoDecoder_Profile
	init_value " 12
"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2757772 "PP_VideoBitstreamBuffer_Dev"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @}
 
*
 * @addtogroup Structs
 * @{
 
*
 * The data structure for video bitstream buffer."
      classrelation 5196428 // id (<directional composition>)
	relation 5196300 *-->
	  a role_name "id" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5196428 // id (<directional composition>)
	  b parent class_ref 2409996 // int32_t
      end

      classrelation 5196556 // data (<directional composition>)
	relation 5196428 *-->
	  a role_name "data" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5196556 // data (<directional composition>)
	  b parent class_ref 2734220 // PP_Resource
      end

      classrelation 5196684 // size (<directional composition>)
	relation 5196556 *-->
	  a role_name "size" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5196684 // size (<directional composition>)
	  b parent class_ref 2345996 // uint32_t
      end
    end

    class 2757900 "PP_PictureBuffer_Dev"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * Struct for specifying texture-backed picture data."
      classrelation 5196812 // id (<directional composition>)
	relation 5196684 *-->
	  a role_name "id" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5196812 // id (<directional composition>)
	  b parent class_ref 2409996 // int32_t
      end

      classrelation 5196940 // size (<directional composition>)
	relation 5196812 *-->
	  a role_name "size" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}struct ${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5196940 // size (<directional composition>)
	  b parent class_ref 2740748 // PP_Size
      end

      classrelation 5197068 // texture_id (<directional composition>)
	relation 5196940 *-->
	  a role_name "texture_id" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5197068 // texture_id (<directional composition>)
	  b parent class_ref 2345996 // uint32_t
      end
    end

    class 2758028 "PP_Picture_Dev"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * Structure to describe a decoded output frame."
      classrelation 5197196 // picture_buffer_id (<directional composition>)
	relation 5197068 *-->
	  a role_name "picture_buffer_id" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5197196 // picture_buffer_id (<directional composition>)
	  b parent class_ref 2409996 // int32_t
      end

      classrelation 5197324 // bitstream_buffer_id (<directional composition>)
	relation 5197196 *-->
	  a role_name "bitstream_buffer_id" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5197324 // bitstream_buffer_id (<directional composition>)
	  b parent class_ref 2409996 // int32_t
      end
    end

    class 2758156 "PP_VideoDecodeError_Dev"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}
};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @}
 
*
 * @addtogroup Enums
 * @{
 
*
 * Decoder error codes reported to the plugin.  A reasonable naive
 * error handling policy is for the plugin to Destroy() the decoder on error.
 * Note: Keep these in sync with media::VideoDecodeAccelerator::Error."
      attribute 9957260 "PP_VIDEODECODERERROR_ILLEGAL_STATE"
	public type class_ref 2758156 // PP_VideoDecodeError_Dev
	init_value " 1"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9957388 "PP_VIDEODECODERERROR_INVALID_ARGUMENT"
	public type class_ref 2758156 // PP_VideoDecodeError_Dev
	init_value " 2"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9957516 "PP_VIDEODECODERERROR_UNREADABLE_INPUT"
	public type class_ref 2758156 // PP_VideoDecodeError_Dev
	init_value " 3"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9957644 "PP_VIDEODECODERERROR_PLATFORM_FAILURE"
	public type class_ref 2758156 // PP_VideoDecodeError_Dev
	init_value " 4
"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2758284 "PPB_AudioInput_Callback"
      visibility package stereotype "typedef" explicit_base_type "void"
      cpp_decl "${comment}typedef ${type}(* ${name})(const void* sample_buffer,
                                        uint32_t buffer_size_in_bytes,
                                        void* user_data);
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @file
 * This file defines the <code>PPB_AudioInput_Dev</code> interface, which
 * provides realtime audio input capture.
 
*
 * @addtogroup Typedefs
 * @{
 
*
 * <code>PPB_AudioInput_Callback</code> defines the type of an audio callback
 * function used to provide the audio buffer with data. This callback will be
 * called on a separate thread from the creation thread."
    end

    class 2758412 "PPB_AudioInput_Dev_0_3"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @}
 
*
 * @addtogroup Interfaces
 * @{
 
*
 * The <code>PPB_AudioInput_Dev</code> interface contains pointers to several
 * functions for handling audio input resources.
 *
 * TODO(brettw) before moving out of dev, we need to resolve the issue of
 * the mismatch between the current audio config interface and this one.
 *
 * In particular, the params for input assume stereo, but this class takes
 * everything as mono. We either need to not use an audio config resource, or
 * add mono support.
 *
 * In addition, RecommendSampleFrameCount is completely wrong for audio input.
 * RecommendSampleFrameCount returns the frame count for the current
 * low-latency output device, which is likely inappropriate for a random input
 * device. We may want to move the \"recommend\" functions to the input or output
 * classes rather than the config."
      attribute 9957772 "Create"
	public explicit_type "/** * Creates an audio input resource. * * @param[in] instance A <code>PP_Instance</code> identifying one instance of * a module. * * @return A <code>PP_Resource</code> corresponding to an audio input resource * if successful, 0 if failed. */ PP_Resource (*)(PP_Instance instance)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  /**
   * Creates an audio input resource.
   *
   * @param[in] instance A <code>PP_Instance</code> identifying one instance of
   * a module.
   *
   * @return A <code>PP_Resource</code> corresponding to an audio input resource
   * if successful, 0 if failed.
   */
  PP_Resource (*${name})(PP_Instance instance)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9957900 "IsAudioInput"
	public explicit_type "/** * Determines if the given resource is an audio input resource. * * @param[in] resource A <code>PP_Resource</code> containing a resource. * * @return A <code>PP_Bool</code> containing <code>PP_TRUE</code> if the given * resource is an audio input resource, otherwise <code>PP_FALSE</code>. */ PP_Bool (*)(PP_Resource resource)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Determines if the given resource is an audio input resource.
   *
   * @param[in] resource A <code>PP_Resource</code> containing a resource.
   *
   * @return A <code>PP_Bool</code> containing <code>PP_TRUE</code> if the given
   * resource is an audio input resource, otherwise <code>PP_FALSE</code>.
   */
  PP_Bool (*${name})(PP_Resource resource)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9958028 "EnumerateDevices"
	public explicit_type "/** * Enumerates audio input devices. * * @param[in] audio_input A <code>PP_Resource</code> corresponding to an audio * input resource. * @param[in] output An output array which will receive * <code>PPB_DeviceRef_Dev</code> resources on success. Please note that the * ref count of those resources has already been increased by 1 for the * caller. * @param[in] callback A <code>PP_CompletionCallback</code> to run on * completion. * * @return An error code from <code>pp_errors.h</code>. */ int32_t (*)(PP_Resource audio_input, struct PP_ArrayOutput output, struct PP_CompletionCallback callback)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Enumerates audio input devices.
   *
   * @param[in] audio_input A <code>PP_Resource</code> corresponding to an audio
   * input resource.
   * @param[in] output An output array which will receive
   * <code>PPB_DeviceRef_Dev</code> resources on success. Please note that the
   * ref count of those resources has already been increased by 1 for the
   * caller.
   * @param[in] callback A <code>PP_CompletionCallback</code> to run on
   * completion.
   *
   * @return An error code from <code>pp_errors.h</code>.
   */
  int32_t (*${name})(PP_Resource audio_input,
                              struct PP_ArrayOutput output,
                              struct PP_CompletionCallback callback)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9958156 "MonitorDeviceChange"
	public explicit_type "/** * Requests device change notifications. * * @param[in] audio_input A <code>PP_Resource</code> corresponding to an audio * input resource. * @param[in] callback The callback to receive notifications. If not NULL, it * will be called once for the currently available devices, and then every * time the list of available devices changes. All calls will happen on the * same thread as the one on which MonitorDeviceChange() is called. It will * receive notifications until <code>audio_input</code> is destroyed or * <code>MonitorDeviceChange()</code> is called to set a new callback for * <code>audio_input</code>. You can pass NULL to cancel sending * notifications. * @param[inout] user_data An opaque pointer that will be passed to * <code>callback</code>. * * @return An error code from <code>pp_errors.h</code>. */ int32_t (*)(PP_Resource audio_input, PP_MonitorDeviceChangeCallback callback, void* user_data)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Requests device change notifications.
   *
   * @param[in] audio_input A <code>PP_Resource</code> corresponding to an audio
   * input resource.
   * @param[in] callback The callback to receive notifications. If not NULL, it
   * will be called once for the currently available devices, and then every
   * time the list of available devices changes. All calls will happen on the
   * same thread as the one on which MonitorDeviceChange() is called. It will
   * receive notifications until <code>audio_input</code> is destroyed or
   * <code>MonitorDeviceChange()</code> is called to set a new callback for
   * <code>audio_input</code>. You can pass NULL to cancel sending
   * notifications.
   * @param[inout] user_data An opaque pointer that will be passed to
   * <code>callback</code>.
   *
   * @return An error code from <code>pp_errors.h</code>.
   */
  int32_t (*${name})(PP_Resource audio_input,
                                 PP_MonitorDeviceChangeCallback callback,
                                 void* user_data)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9958284 "Open"
	public explicit_type "/** * Opens an audio input device. No sound will be captured until * StartCapture() is called. * * @param[in] audio_input A <code>PP_Resource</code> corresponding to an audio * input resource. * @param[in] device_ref Identifies an audio input device. It could be one of * the resource in the array returned by EnumerateDevices(), or 0 which means * the default device. * @param[in] config A <code>PPB_AudioConfig</code> audio configuration * resource. * @param[in] audio_input_callback A <code>PPB_AudioInput_Callback</code> * function that will be called when data is available. * @param[inout] user_data An opaque pointer that will be passed into * <code>audio_input_callback</code>. * @param[in] callback A <code>PP_CompletionCallback</code> to run when this * open operation is completed. * * @return An error code from <code>pp_errors.h</code>. */ int32_t (*)(PP_Resource audio_input, PP_Resource device_ref, PP_Resource config, PPB_AudioInput_Callback audio_input_callback, void* user_data, struct PP_CompletionCallback callback)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Opens an audio input device. No sound will be captured until
   * StartCapture() is called.
   *
   * @param[in] audio_input A <code>PP_Resource</code> corresponding to an audio
   * input resource.
   * @param[in] device_ref Identifies an audio input device. It could be one of
   * the resource in the array returned by EnumerateDevices(), or 0 which means
   * the default device.
   * @param[in] config A <code>PPB_AudioConfig</code> audio configuration
   * resource.
   * @param[in] audio_input_callback A <code>PPB_AudioInput_Callback</code>
   * function that will be called when data is available.
   * @param[inout] user_data An opaque pointer that will be passed into
   * <code>audio_input_callback</code>.
   * @param[in] callback A <code>PP_CompletionCallback</code> to run when this
   * open operation is completed.
   *
   * @return An error code from <code>pp_errors.h</code>.
   */
  int32_t (*${name})(PP_Resource audio_input,
                  PP_Resource device_ref,
                  PP_Resource config,
                  PPB_AudioInput_Callback audio_input_callback,
                  void* user_data,
                  struct PP_CompletionCallback callback)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9958412 "GetCurrentConfig"
	public explicit_type "/** * Returns an audio config resource for the given audio input resource. * * @param[in] audio_input A <code>PP_Resource</code> corresponding to an audio * input resource. * * @return A <code>PP_Resource</code> containing the audio config resource if * successful. */ PP_Resource (*)(PP_Resource audio_input)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Returns an audio config resource for the given audio input resource.
   *
   * @param[in] audio_input A <code>PP_Resource</code> corresponding to an audio
   * input resource.
   *
   * @return A <code>PP_Resource</code> containing the audio config resource if
   * successful.
   */
  PP_Resource (*${name})(PP_Resource audio_input)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9958540 "StartCapture"
	public explicit_type "/** * Starts the capture of the audio input resource and begins periodically * calling the callback. * * @param[in] audio_input A <code>PP_Resource</code> corresponding to an audio * input resource. * * @return A <code>PP_Bool</code> containing <code>PP_TRUE</code> if * successful, otherwise <code>PP_FALSE</code>. * Also returns <code>PP_TRUE</code> (and is a no-op) if called while capture * is already started. */ PP_Bool (*)(PP_Resource audio_input)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Starts the capture of the audio input resource and begins periodically
   * calling the callback.
   *
   * @param[in] audio_input A <code>PP_Resource</code> corresponding to an audio
   * input resource.
   *
   * @return A <code>PP_Bool</code> containing <code>PP_TRUE</code> if
   * successful, otherwise <code>PP_FALSE</code>.
   * Also returns <code>PP_TRUE</code> (and is a no-op) if called while capture
   * is already started.
   */
  PP_Bool (*${name})(PP_Resource audio_input)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9958668 "StopCapture"
	public explicit_type "/** * Stops the capture of the audio input resource. * * @param[in] audio_input A PP_Resource containing the audio input resource. * * @return A <code>PP_Bool</code> containing <code>PP_TRUE</code> if * successful, otherwise <code>PP_FALSE</code>. * Also returns <code>PP_TRUE</code> (and is a no-op) if called while capture * is already stopped. If a buffer is being captured, StopCapture will block * until the call completes. */ PP_Bool (*)(PP_Resource audio_input)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Stops the capture of the audio input resource.
   *
   * @param[in] audio_input A PP_Resource containing the audio input resource.
   *
   * @return A <code>PP_Bool</code> containing <code>PP_TRUE</code> if
   * successful, otherwise <code>PP_FALSE</code>.
   * Also returns <code>PP_TRUE</code> (and is a no-op) if called while capture
   * is already stopped. If a buffer is being captured, StopCapture will block
   * until the call completes.
   */
  PP_Bool (*${name})(PP_Resource audio_input)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9958796 "Close"
	public explicit_type "/** * Closes the audio input device, and stops capturing if necessary. It is * not valid to call Open() again after a call to this method. * If an audio input resource is destroyed while a device is still open, then * it will be implicitly closed, so you are not required to call this method. * * @param[in] audio_input A <code>PP_Resource</code> corresponding to an audio * input resource. */ void (*)(PP_Resource audio_input)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Closes the audio input device, and stops capturing if necessary. It is
   * not valid to call Open() again after a call to this method.
   * If an audio input resource is destroyed while a device is still open, then
   * it will be implicitly closed, so you are not required to call this method.
   *
   * @param[in] audio_input A <code>PP_Resource</code> corresponding to an audio
   * input resource.
   */
  void (*${name})(PP_Resource audio_input)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2758540 "PPB_AudioInput_Dev"
      visibility package stereotype "typedef" base_type class_ref 2758412 // PPB_AudioInput_Dev_0_3
      cpp_decl "${comment}typedef struct ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 5197452 // <dependency>
	relation 5197324 -_->
	  a default
	    cpp default "#include in source"
	    classrelation_ref 5197452 // <dependency>
	  b parent class_ref 2758412 // PPB_AudioInput_Dev_0_3
      end
    end

    class 2758668 "PPB_AudioInput_Dev_0_2"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      attribute 9958924 "Create"
	public explicit_type "PP_Resource (*)(PP_Instance instance)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  PP_Resource (*${name})(PP_Instance instance)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9959052 "IsAudioInput"
	public explicit_type "PP_Bool (*)(PP_Resource resource)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  PP_Bool (*${name})(PP_Resource resource)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9959180 "EnumerateDevices"
	public explicit_type "int32_t (*)(PP_Resource audio_input, PP_Resource* devices, struct PP_CompletionCallback callback)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  int32_t (*${name})(PP_Resource audio_input,
                              PP_Resource* devices,
                              struct PP_CompletionCallback callback)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9959308 "Open"
	public explicit_type "int32_t (*)(PP_Resource audio_input, PP_Resource device_ref, PP_Resource config, PPB_AudioInput_Callback audio_input_callback, void* user_data, struct PP_CompletionCallback callback)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  int32_t (*${name})(PP_Resource audio_input,
                  PP_Resource device_ref,
                  PP_Resource config,
                  PPB_AudioInput_Callback audio_input_callback,
                  void* user_data,
                  struct PP_CompletionCallback callback)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9959436 "GetCurrentConfig"
	public explicit_type "PP_Resource (*)(PP_Resource audio_input)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  PP_Resource (*${name})(PP_Resource audio_input)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9959564 "StartCapture"
	public explicit_type "PP_Bool (*)(PP_Resource audio_input)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  PP_Bool (*${name})(PP_Resource audio_input)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9959692 "StopCapture"
	public explicit_type "PP_Bool (*)(PP_Resource audio_input)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  PP_Bool (*${name})(PP_Resource audio_input)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9959820 "Close"
	public explicit_type "void (*)(PP_Resource audio_input)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  void (*${name})(PP_Resource audio_input)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2758796 "PPB_Buffer_Dev_0_4"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @file
 * This file defines the <code>PPB_Buffer_Dev</code> interface.
 
*
 * @addtogroup Interfaces
 * @{"
      attribute 9959948 "Create"
	public explicit_type "/** * Allocates a buffer of the given size in bytes. The return value will have * a non-zero ID on success, or zero on failure. Failure means the module * handle was invalid. The buffer will be initialized to contain zeroes. */ PP_Resource (*)(PP_Instance instance, uint32_t size_in_bytes)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  /**
   * Allocates a buffer of the given size in bytes. The return value will have
   * a non-zero ID on success, or zero on failure. Failure means the module
   * handle was invalid. The buffer will be initialized to contain zeroes.
   */
  PP_Resource (*${name})(PP_Instance instance, uint32_t size_in_bytes)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9960076 "IsBuffer"
	public explicit_type "/** * Returns PP_TRUE if the given resource is a Buffer. Returns PP_FALSE if the * resource is invalid or some type other than a Buffer. */ PP_Bool (*)(PP_Resource resource)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Returns PP_TRUE if the given resource is a Buffer. Returns PP_FALSE if the
   * resource is invalid or some type other than a Buffer.
   */
  PP_Bool (*${name})(PP_Resource resource)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9960204 "Describe"
	public explicit_type "/** * Gets the size of the buffer. Returns PP_TRUE on success, PP_FALSE * if the resource is not a buffer. On failure, |*size_in_bytes| is not set. */ PP_Bool (*)(PP_Resource resource, uint32_t* size_in_bytes)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Gets the size of the buffer. Returns PP_TRUE on success, PP_FALSE
   * if the resource is not a buffer. On failure, |*size_in_bytes| is not set.
   */
  PP_Bool (*${name})(PP_Resource resource, uint32_t* size_in_bytes)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9960332 "Map"
	public explicit_type "/** * Maps this buffer into the plugin address space and returns a pointer to * the beginning of the data. */ void* (*)(PP_Resource resource)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Maps this buffer into the plugin address space and returns a pointer to
   * the beginning of the data.
   */
  void* (*${name})(PP_Resource resource)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9960460 "Unmap"
	public explicit_type "/** * Unmaps this buffer. */ void (*)(PP_Resource resource)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Unmaps this buffer.
   */
  void (*${name})(PP_Resource resource)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2758924 "PPB_Buffer_Dev"
      visibility package stereotype "typedef" base_type class_ref 2758796 // PPB_Buffer_Dev_0_4
      cpp_decl "${comment}typedef struct ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 5197580 // <dependency>
	relation 5197452 -_->
	  a default
	    cpp default "#include in source"
	    classrelation_ref 5197580 // <dependency>
	  b parent class_ref 2758796 // PPB_Buffer_Dev_0_4
      end
    end

    class 2759052 "PP_CharSet_ConversionError"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}
};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " Specifies the error behavior for the character set conversion functions.
 This will affect two cases: where the input is not encoded correctly, and
 when the requested character can not be converted to the destination
 character set."
      attribute 9960588 "PP_CHARSET_CONVERSIONERROR_FAIL"
	public type class_ref 2759052 // PP_CharSet_ConversionError
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9960716 "PP_CHARSET_CONVERSIONERROR_SKIP"
	public type class_ref 2759052 // PP_CharSet_ConversionError
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9960844 "PP_CHARSET_CONVERSIONERROR_SUBSTITUTE"
	public type class_ref 2759052 // PP_CharSet_ConversionError
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2759180 "PPB_CharSet_Dev_0_4"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      attribute 9960972 "UTF16ToCharSet"
	public explicit_type "// Converts the UTF-16 string pointed to in |*utf16| to an 8-bit string in the // specified code page. |utf16_len| is measured in UTF-16 units, not bytes. // This value may not be NULL. // // The return value is a NULL-terminated 8-bit string corresponding to the // new character set, or NULL on failure. THIS STRING MUST BE FREED USING // PPB_Core::MemFree(). The length of the returned string, not including the // terminating NULL, will be placed into *output_length. When there is no // error, the result will always be non-NULL, even if the output is 0-length. // In this case, it will only contain the terminator. You must still call // MemFree any time the return value is non-NULL. // // This function will return NULL if there was an error converting the string // and you requested PP_CHARSET_CONVERSIONERROR_FAIL, or the output character // set was unknown. char* (*)(PP_Instance instance, const uint16_t* utf16, uint32_t utf16_len, const char* output_char_set, enum PP_CharSet_ConversionError on_error, uint32_t* output_length)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  // Converts the UTF-16 string pointed to in |*utf16| to an 8-bit string in the
  // specified code page. |utf16_len| is measured in UTF-16 units, not bytes.
  // This value may not be NULL.
  //
  // The return value is a NULL-terminated 8-bit string corresponding to the
  // new character set, or NULL on failure. THIS STRING MUST BE FREED USING
  // PPB_Core::MemFree(). The length of the returned string, not including the
  // terminating NULL, will be placed into *output_length. When there is no
  // error, the result will always be non-NULL, even if the output is 0-length.
  // In this case, it will only contain the terminator. You must still call
  // MemFree any time the return value is non-NULL.
  //
  // This function will return NULL if there was an error converting the string
  // and you requested PP_CHARSET_CONVERSIONERROR_FAIL, or the output character
  // set was unknown.
  char* (*${name})(PP_Instance instance,
                          const uint16_t* utf16, uint32_t utf16_len,
                          const char* output_char_set,
                          enum PP_CharSet_ConversionError on_error,
                          uint32_t* output_length)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9961100 "CharSetToUTF16"
	public explicit_type "// Same as UTF16ToCharSet except converts in the other direction. The input // is in the given charset, and the |input_len| is the number of bytes in // the |input| string. |*output_length| is the number of 16-bit values in // the output not counting the terminating NULL. // // Since UTF16 can represent every Unicode character, the only time the // replacement character will be used is if the encoding in the input string // is incorrect. uint16_t* (*)(PP_Instance instance, const char* input, uint32_t input_len, const char* input_char_set, enum PP_CharSet_ConversionError on_error, uint32_t* output_length)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  // Same as UTF16ToCharSet except converts in the other direction. The input
  // is in the given charset, and the |input_len| is the number of bytes in
  // the |input| string. |*output_length| is the number of 16-bit values in
  // the output not counting the terminating NULL.
  //
  // Since UTF16 can represent every Unicode character, the only time the
  // replacement character will be used is if the encoding in the input string
  // is incorrect.
  uint16_t* (*${name})(PP_Instance instance,
                              const char* input, uint32_t input_len,
                              const char* input_char_set,
                              enum PP_CharSet_ConversionError on_error,
                              uint32_t* output_length)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9961228 "GetDefaultCharSet"
	public explicit_type "PP_Var (*)(PP_Instance instance)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const} PP_Var (*${name})(PP_Instance instance)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2759308 "PPB_CharSet_Dev"
      visibility package stereotype "typedef" base_type class_ref 2759180 // PPB_CharSet_Dev_0_4
      cpp_decl "${comment}typedef struct ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 5197708 // <dependency>
	relation 5197580 -_->
	  a default
	    cpp default "#include in source"
	    classrelation_ref 5197708 // <dependency>
	  b parent class_ref 2759180 // PPB_CharSet_Dev_0_4
      end
    end

    class 2759436 "PP_LogLevel_Dev"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}
};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @file
 * This file defines the <code>PPB_Console_Dev</code> interface.
 
*
 * @addtogroup Enums
 * @{"
      attribute 9961356 "PP_LOGLEVEL_TIP"
	public type class_ref 2759436 // PP_LogLevel_Dev
	init_value " 0"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9961484 "PP_LOGLEVEL_LOG"
	public type class_ref 2759436 // PP_LogLevel_Dev
	init_value " 1"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9961612 "PP_LOGLEVEL_WARNING"
	public type class_ref 2759436 // PP_LogLevel_Dev
	init_value " 2"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9961740 "PP_LOGLEVEL_ERROR"
	public type class_ref 2759436 // PP_LogLevel_Dev
	init_value " 3
"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2759564 "PPB_Console_Dev_0_1"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @}
 
*
 * @addtogroup Interfaces
 * @{"
      attribute 9961868 "Log"
	public explicit_type "/** * Logs the given message to the JavaScript console associated with the * given plugin instance with the given logging level. The name of the plugin * issuing the log message will be automatically prepended to the message. * The value may be any type of Var. */ void (*)(PP_Instance instance, PP_LogLevel_Dev level, struct PP_Var value)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  /**
   * Logs the given message to the JavaScript console associated with the
   * given plugin instance with the given logging level. The name of the plugin
   * issuing the log message will be automatically prepended to the message.
   * The value may be any type of Var.
   */
  void (*${name})(PP_Instance instance, PP_LogLevel_Dev level, struct PP_Var value)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9961996 "LogWithSource"
	public explicit_type "/** * Logs a message to the console with the given source information rather * than using the internal PPAPI plugin name. The name must be a string var. * * The regular log function will automatically prepend the name of your * plugin to the message as the \"source\" of the message. Some plugins may * wish to override this. For example, if your plugin is a Python * interpreter, you would want log messages to contain the source .py file * doing the log statement rather than have \"python\" show up in the console. */ void (*)(PP_Instance instance, PP_LogLevel_Dev level, struct PP_Var source, struct PP_Var value)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Logs a message to the console with the given source information rather
   * than using the internal PPAPI plugin name. The name must be a string var.
   *
   * The regular log function will automatically prepend the name of your
   * plugin to the message as the \"source\" of the message. Some plugins may
   * wish to override this. For example, if your plugin is a Python
   * interpreter, you would want log messages to contain the source .py file
   * doing the log statement rather than have \"python\" show up in the console.
   */
  void (*${name})(PP_Instance instance,
                        PP_LogLevel_Dev level,
                        struct PP_Var source,
                        struct PP_Var value)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2759692 "PPB_Console_Dev"
      visibility package stereotype "typedef" base_type class_ref 2759564 // PPB_Console_Dev_0_1
      cpp_decl "${comment}typedef struct ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 5197836 // <dependency>
	relation 5197708 -_->
	  a default
	    cpp default "#include in source"
	    classrelation_ref 5197836 // <dependency>
	  b parent class_ref 2759564 // PPB_Console_Dev_0_1
      end
    end

    class 2759820 "PPB_Crypto_Dev_0_1"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @file
 * This file defines the PPB_Crypto_Dev interface.
 
*
 * @addtogroup Interfaces
 * @{"
      attribute 9962124 "GetRandomBytes"
	public explicit_type "/** * Fills the given buffer with random bytes. This is potentially slow so only * request the amount of data you need. */ void (*)(char* buffer, uint32_t num_bytes)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  /**
   * Fills the given buffer with random bytes. This is potentially slow so only
   * request the amount of data you need.
   */
  void (*${name})(char* buffer, uint32_t num_bytes)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2759948 "PPB_Crypto_Dev"
      visibility package stereotype "typedef" base_type class_ref 2759820 // PPB_Crypto_Dev_0_1
      cpp_decl "${comment}typedef struct ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 5197964 // <dependency>
	relation 5197836 -_->
	  a default
	    cpp default "#include in source"
	    classrelation_ref 5197964 // <dependency>
	  b parent class_ref 2759820 // PPB_Crypto_Dev_0_1
      end
    end

    class 2760076 "PPB_CursorControl_Dev_0_4"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @file
 * This file defines the <code>PPB_CursorControl_Dev</code> interface
 * implemented by the browser for controlling the cursor.
 
*
 * @addtogroup Interfaces
 * @{"
      attribute 9962252 "SetCursor"
	public explicit_type "/** * Set a cursor. If \"type\" is PP_CURSORTYPE_CUSTOM, then \"custom_image\" * must be an ImageData resource containing the cursor and \"hot_spot\" must * contain the offset within that image that refers to the cursor's position. */ PP_Bool (*)(PP_Instance instance, enum PP_CursorType_Dev type, PP_Resource custom_image, const struct PP_Point* hot_spot)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  /**
   * Set a cursor.  If \"type\" is PP_CURSORTYPE_CUSTOM, then \"custom_image\"
   * must be an ImageData resource containing the cursor and \"hot_spot\" must
   * contain the offset within that image that refers to the cursor's position.
   */
  PP_Bool (*${name})(PP_Instance instance,
                       enum PP_CursorType_Dev type,
                       PP_Resource custom_image,
                       const struct PP_Point* hot_spot)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9962380 "LockCursor"
	public explicit_type "/** * This method causes the cursor to be moved to the center of the * instance and be locked, preventing the user from moving it. * The cursor is implicitly hidden from the user while locked. * Cursor lock may only be requested in response to a * PP_InputEvent_MouseDown, and then only if the event was generated via * user gesture. * * While the cursor is locked, any movement of the mouse will * generate a PP_InputEvent_Type_MouseMove, whose x and y values * indicate the position the cursor would have been moved to had * the cursor not been locked, and had the screen been infinite in size. * * The browser may revoke cursor lock for reasons including but not * limited to the user pressing the ESC key, the user activating * another program via a reserved keystroke (e.g., ALT+TAB), or * some other system event. * * Returns PP_TRUE if the cursor could be locked, PP_FALSE otherwise. */ PP_Bool (*)(PP_Instance instance)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * This method causes the cursor to be moved to the center of the
   * instance and be locked, preventing the user from moving it.
   * The cursor is implicitly hidden from the user while locked.
   * Cursor lock may only be requested in response to a
   * PP_InputEvent_MouseDown, and then only if the event was generated via
   * user gesture.
   *
   * While the cursor is locked, any movement of the mouse will
   * generate a PP_InputEvent_Type_MouseMove, whose x and y values
   * indicate the position the cursor would have been moved to had
   * the cursor not been locked, and had the screen been infinite in size.
   *
   * The browser may revoke cursor lock for reasons including but not
   * limited to the user pressing the ESC key, the user activating
   * another program via a reserved keystroke (e.g., ALT+TAB), or
   * some other system event.
   *
   * Returns PP_TRUE if the cursor could be locked, PP_FALSE otherwise.
   */
  PP_Bool (*${name})(PP_Instance instance)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9962508 "UnlockCursor"
	public explicit_type "/** * Causes the cursor to be unlocked, allowing it to track user * movement again. */ PP_Bool (*)(PP_Instance instance)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Causes the cursor to be unlocked, allowing it to track user
   * movement again.
   */
  PP_Bool (*${name})(PP_Instance instance)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9962636 "HasCursorLock"
	public explicit_type "/** * Returns PP_TRUE if the cursor is locked, PP_FALSE otherwise. */ PP_Bool (*)(PP_Instance instance)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Returns PP_TRUE if the cursor is locked, PP_FALSE otherwise.
   */
  PP_Bool (*${name})(PP_Instance instance)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9962764 "CanLockCursor"
	public explicit_type "/** * Returns PP_TRUE if the cursor can be locked, PP_FALSE otherwise. */ PP_Bool (*)(PP_Instance instance)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Returns PP_TRUE if the cursor can be locked, PP_FALSE otherwise.
   */
  PP_Bool (*${name})(PP_Instance instance)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2760204 "PPB_CursorControl_Dev"
      visibility package stereotype "typedef" base_type class_ref 2760076 // PPB_CursorControl_Dev_0_4
      cpp_decl "${comment}typedef struct ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 5198092 // <dependency>
	relation 5197964 -_->
	  a default
	    cpp default "#include in source"
	    classrelation_ref 5198092 // <dependency>
	  b parent class_ref 2760076 // PPB_CursorControl_Dev_0_4
      end
    end

    class 2760332 "PP_MonitorDeviceChangeCallback"
      visibility package stereotype "typedef" explicit_base_type "void"
      cpp_decl "${comment}typedef ${type}(* ${name})(void* user_data,
                                               uint32_t device_count,
                                               const PP_Resource devices[]);
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @file
 * This file defines the <code>PPB_DeviceRef_Dev</code> interface.
 
*
 * @addtogroup Typedefs
 * @{
 
*
 * Defines the callback type to receive device change notifications for
 * <code>PPB_AudioInput_Dev.MonitorDeviceChange()</code> and
 * <code>PPB_VideoCapture_Dev.MonitorDeviceChange()</code>.
 *
 * @param[inout] user_data The opaque pointer that the caller passed into
 * <code>MonitorDeviceChange()</code>.
 * @param[in] device_count How many devices in the array.
 * @param[in] devices An array of <code>PPB_DeviceRef_Dev</code>. Please note
 * that the ref count of the elements is not increased on behalf of the plugin."
    end

    class 2760460 "PP_DeviceType_Dev"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}
};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @}
 
*
 * @addtogroup Enums
 * @{
 
*
 * Device types."
      attribute 9962892 "PP_DEVICETYPE_DEV_INVALID"
	public type class_ref 2760460 // PP_DeviceType_Dev
	init_value " 0"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9963020 "PP_DEVICETYPE_DEV_AUDIOCAPTURE"
	public type class_ref 2760460 // PP_DeviceType_Dev
	init_value " 1"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9963148 "PP_DEVICETYPE_DEV_VIDEOCAPTURE"
	public type class_ref 2760460 // PP_DeviceType_Dev
	init_value " 2
"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2760588 "PPB_DeviceRef_Dev_0_1"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @}
 
*
 * @addtogroup Interfaces
 * @{"
      attribute 9963276 "IsDeviceRef"
	public explicit_type "/** * Determines if the provided resource is a device reference. * * @param[in] resource A <code>PP_Resource</code> corresponding to a generic * resource. * * @return A <code>PP_Bool</code> that is <code>PP_TRUE</code> if the given * resource is a device reference, otherwise <code>PP_FALSE</code>. */ PP_Bool (*)(PP_Resource resource)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  /**
   * Determines if the provided resource is a device reference.
   *
   * @param[in] resource A <code>PP_Resource</code> corresponding to a generic
   * resource.
   *
   * @return A <code>PP_Bool</code> that is <code>PP_TRUE</code> if the given
   * resource is a device reference, otherwise <code>PP_FALSE</code>.
   */
  PP_Bool (*${name})(PP_Resource resource)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9963404 "GetType"
	public explicit_type "/** * Gets the device type. * * @param[in] device_ref A <code>PP_Resource</code> corresponding to a device * reference. * * @return A <code>PP_DeviceType_Dev</code> value. */ PP_DeviceType_Dev (*)(PP_Resource device_ref)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Gets the device type.
   *
   * @param[in] device_ref A <code>PP_Resource</code> corresponding to a device
   * reference.
   *
   * @return A <code>PP_DeviceType_Dev</code> value.
   */
  PP_DeviceType_Dev (*${name})(PP_Resource device_ref)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9963532 "GetName"
	public explicit_type "PP_Var (*)(PP_Resource device_ref)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const} PP_Var (*${name})(PP_Resource device_ref)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2760716 "PPB_DeviceRef_Dev"
      visibility package stereotype "typedef" base_type class_ref 2760588 // PPB_DeviceRef_Dev_0_1
      cpp_decl "${comment}typedef struct ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 5198220 // <dependency>
	relation 5198092 -_->
	  a default
	    cpp default "#include in source"
	    classrelation_ref 5198220 // <dependency>
	  b parent class_ref 2760588 // PPB_DeviceRef_Dev_0_1
      end
    end

    class 2760844 "PP_DirectoryEntry_Dev"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @file
 *
 * This file defines the <code>PPB_DirectoryReader_Dev</code> interface.
 
*
 * @addtogroup Structs
 * @{"
      classrelation 5198348 // file_ref (<directional composition>)
	relation 5198220 *-->
	  a role_name "file_ref" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5198348 // file_ref (<directional composition>)
	  b parent class_ref 2734220 // PP_Resource
      end

      classrelation 5198476 // file_type (<directional composition>)
	relation 5198348 *-->
	  a role_name "file_type" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5198476 // file_type (<directional composition>)
	  b parent class_ref 2738828 // PP_FileType
      end
    end

    class 2760972 "PPB_DirectoryReader_Dev_0_6"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @}
 
*
 * @addtogroup Interfaces
 * @{"
      attribute 9963660 "Create"
	public explicit_type "/* Creates a DirectoryReader for the given directory. Upon success, the * corresponding directory is classified as \"in use\" by the resulting * DirectoryReader object until such time as the DirectoryReader object is * destroyed. */ PP_Resource (*)(PP_Resource directory_ref)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  /* Creates a DirectoryReader for the given directory.  Upon success, the
   * corresponding directory is classified as \"in use\" by the resulting
   * DirectoryReader object until such time as the DirectoryReader object is
   * destroyed. */
  PP_Resource (*${name})(PP_Resource directory_ref)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9963788 "IsDirectoryReader"
	public explicit_type "/* Returns PP_TRUE if the given resource is a DirectoryReader. Returns * PP_FALSE if the resource is invalid or some type other than a * DirectoryReader. */ PP_Bool (*)(PP_Resource resource)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /* Returns PP_TRUE if the given resource is a DirectoryReader. Returns
   * PP_FALSE if the resource is invalid or some type other than a
   * DirectoryReader. */
  PP_Bool (*${name})(PP_Resource resource)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9963916 "ReadEntries"
	public explicit_type "/* Reads all entries in the directory. * * @param[in] directory_reader A <code>PP_Resource</code> * corresponding to a directory reader resource. * @param[in] output An output array which will receive * <code>PP_DirectoryEntry_Dev</code> objects on success. * @param[in] callback A <code>PP_CompletionCallback</code> to run on * completion. * * @return An error code from <code>pp_errors.h</code>. */ int32_t (*)(PP_Resource directory_reader, struct PP_ArrayOutput output, struct PP_CompletionCallback callback)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /* Reads all entries in the directory.
   *
   * @param[in] directory_reader A <code>PP_Resource</code>
   * corresponding to a directory reader resource.
   * @param[in] output An output array which will receive
   * <code>PP_DirectoryEntry_Dev</code> objects on success.
   * @param[in] callback A <code>PP_CompletionCallback</code> to run on
   * completion.
   *
   * @return An error code from <code>pp_errors.h</code>.
   */
  int32_t (*${name})(PP_Resource directory_reader,
                         struct PP_ArrayOutput output,
                         struct PP_CompletionCallback callback)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2761100 "PPB_DirectoryReader_Dev"
      visibility package stereotype "typedef" base_type class_ref 2760972 // PPB_DirectoryReader_Dev_0_6
      cpp_decl "${comment}typedef struct ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 5198604 // <dependency>
	relation 5198476 -_->
	  a default
	    cpp default "#include in source"
	    classrelation_ref 5198604 // <dependency>
	  b parent class_ref 2760972 // PPB_DirectoryReader_Dev_0_6
      end
    end

    class 2761228 "PP_FileChooserMode_Dev"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}
};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @file
 * This file defines the <code>PPB_FileChooser_Dev</code> interface.
 
*
 * @addtogroup Enums
 * @{
 
*
 * This enumeration contains constants to control the behavior of the file
 * chooser dialog."
      attribute 9964044 "PP_FILECHOOSERMODE_OPEN"
	public type class_ref 2761228 // PP_FileChooserMode_Dev
	init_value " 0"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9964172 "PP_FILECHOOSERMODE_OPENMULTIPLE"
	public type class_ref 2761228 // PP_FileChooserMode_Dev
	init_value " 1
"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2761356 "PPB_FileChooser_Dev_0_6"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @}
 
*
 * @addtogroup Interfaces
 * @{"
      attribute 9964300 "Create"
	public explicit_type "/** * This function creates a file chooser dialog resource. The chooser is * associated with a particular instance, so that it may be positioned on the * screen relative to the tab containing the instance. * * @param[in] instance A <code>PP_Instance</code> identifying one instance * of a module. * @param[in] mode A <code>PP_FileChooserMode_Dev</code> value that controls * the behavior of the file chooser dialog. * @param[in] accept_types A comma-separated list of MIME types and file * extensions such as \"audio/ *,text/plain,.html\" (note there should be no * space between the '/' and the '*', but one is added to avoid confusing C++ * comments). The dialog may restrict selectable files to the specified MIME * types and file extensions. If a string in the comma-separated list begins * with a period (.) then the string is interpreted as a file extension, * otherwise it is interpreted as a MIME-type. An empty string or an undefined * var may be given to indicate that all types should be accepted. * * @return A <code>PP_Resource</code> containing the file chooser if * successful or 0 if it could not be created. */ PP_Resource (*)(PP_Instance instance, PP_FileChooserMode_Dev mode, struct PP_Var accept_types)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  /**
   * This function creates a file chooser dialog resource.  The chooser is
   * associated with a particular instance, so that it may be positioned on the
   * screen relative to the tab containing the instance.
   *
   * @param[in] instance A <code>PP_Instance</code> identifying one instance
   * of a module.
   * @param[in] mode A <code>PP_FileChooserMode_Dev</code> value that controls
   * the behavior of the file chooser dialog.
   * @param[in] accept_types A comma-separated list of MIME types and file
   * extensions such as \"audio/ *,text/plain,.html\" (note there should be no
   * space between the '/' and the '*', but one is added to avoid confusing C++
   * comments). The dialog may restrict selectable files to the specified MIME
   * types and file extensions. If a string in the comma-separated list begins
   * with a period (.) then the string is interpreted as a file extension,
   * otherwise it is interpreted as a MIME-type. An empty string or an undefined
   * var may be given to indicate that all types should be accepted.
   *
   * @return A <code>PP_Resource</code> containing the file chooser if
   * successful or 0 if it could not be created.
   */
  PP_Resource (*${name})(PP_Instance instance,
                        PP_FileChooserMode_Dev mode,
                        struct PP_Var accept_types)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9964428 "IsFileChooser"
	public explicit_type "/** * Determines if the provided resource is a file chooser. * * @param[in] resource A <code>PP_Resource</code> corresponding to a generic * resource. * * @return A <code>PP_Bool</code> that is <code>PP_TRUE</code> if the given * resource is a file chooser resource, otherwise <code>PP_FALSE</code>. */ PP_Bool (*)(PP_Resource resource)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Determines if the provided resource is a file chooser.
   *
   * @param[in] resource A <code>PP_Resource</code> corresponding to a generic
   * resource.
   *
   * @return A <code>PP_Bool</code> that is <code>PP_TRUE</code> if the given
   * resource is a file chooser resource, otherwise <code>PP_FALSE</code>.
   */
  PP_Bool (*${name})(PP_Resource resource)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9964556 "Show"
	public explicit_type "/** * This function displays a previously created file chooser resource as a * dialog box, prompting the user to choose a file or files. This function * must be called in response to a user gesture, such as a mouse click or * touch event. The callback is called with PP_OK on successful completion * with a file (or files) selected, PP_ERROR_USERCANCEL if the user selected * no file, or another error code from pp_errors.h on failure. * * <b>Subtle note:</b> This function will only work when the tab containing * the plugin is visible. Show() will fail if the tab is in the background. * Since it's not normally possible to get input events while invisible, this * is not normally an issue. But there is a race condition because events are * processed asynchronously. If the user clicks and switches tabs very * quickly, a plugin could believe the tab is visible while Chrome believes * it is invisible and the Show() call will fail. This will not generally * cause user confusion since the user will have switched tabs and will not * want to see a file chooser from a different tab. * * @param[in] chooser The file chooser resource. * * @param[in] output An output array which will receive PP_Resource(s) * identifying the <code>PPB_FileRef</code> objects that the user selected on * success. * * @param[in] callback A <code>CompletionCallback</code> to be called after * the user has closed the file chooser dialog. * * @return PP_OK_COMPLETIONPENDING if request to show the dialog was * successful, another error code from pp_errors.h on failure. */ int32_t (*)(PP_Resource chooser, struct PP_ArrayOutput output, struct PP_CompletionCallback callback)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * This function displays a previously created file chooser resource as a
   * dialog box, prompting the user to choose a file or files. This function
   * must be called in response to a user gesture, such as a mouse click or
   * touch event. The callback is called with PP_OK on successful completion
   * with a file (or files) selected, PP_ERROR_USERCANCEL if the user selected
   * no file, or another error code from pp_errors.h on failure.
   *
   * <b>Subtle note:</b> This function will only work when the tab containing
   * the plugin is visible. Show() will fail if the tab is in the background.
   * Since it's not normally possible to get input events while invisible, this
   * is not normally an issue. But there is a race condition because events are
   * processed asynchronously. If the user clicks and switches tabs very
   * quickly, a plugin could believe the tab is visible while Chrome believes
   * it is invisible and the Show() call will fail. This will not generally
   * cause user confusion since the user will have switched tabs and will not
   * want to see a file chooser from a different tab.
   *
   * @param[in] chooser The file chooser resource.
   *
   * @param[in] output An output array which will receive PP_Resource(s)
   * identifying the <code>PPB_FileRef</code> objects that the user selected on
   * success.
   *
   * @param[in] callback A <code>CompletionCallback</code> to be called after
   * the user has closed the file chooser dialog.
   *
   * @return PP_OK_COMPLETIONPENDING if request to show the dialog was
   * successful, another error code from pp_errors.h on failure.
   */
  int32_t (*${name})(PP_Resource chooser,
                  struct PP_ArrayOutput output,
                  struct PP_CompletionCallback callback)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2761484 "PPB_FileChooser_Dev"
      visibility package stereotype "typedef" base_type class_ref 2761356 // PPB_FileChooser_Dev_0_6
      cpp_decl "${comment}typedef struct ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 5198732 // <dependency>
	relation 5198604 -_->
	  a default
	    cpp default "#include in source"
	    classrelation_ref 5198732 // <dependency>
	  b parent class_ref 2761356 // PPB_FileChooser_Dev_0_6
      end
    end

    class 2761612 "PPB_FileChooser_Dev_0_5"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      attribute 9964684 "Create"
	public explicit_type "PP_Resource (*)(PP_Instance instance, PP_FileChooserMode_Dev mode, struct PP_Var accept_types)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  PP_Resource (*${name})(PP_Instance instance,
                        PP_FileChooserMode_Dev mode,
                        struct PP_Var accept_types)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9964812 "IsFileChooser"
	public explicit_type "PP_Bool (*)(PP_Resource resource)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  PP_Bool (*${name})(PP_Resource resource)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9964940 "Show"
	public explicit_type "int32_t (*)(PP_Resource chooser, struct PP_CompletionCallback callback)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  int32_t (*${name})(PP_Resource chooser, struct PP_CompletionCallback callback)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9965068 "GetNextChosenFile"
	public explicit_type "PP_Resource (*)(PP_Resource chooser)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  PP_Resource (*${name})(PP_Resource chooser)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2761740 "PPB_Find_Dev_0_3"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @file
 * This file defines the <code>PPB_Find_Dev</code> interface.
 
*
 * @addtogroup Interfaces
 * @{"
      attribute 9965196 "NumberOfFindResultsChanged"
	public explicit_type "/** * Updates the number of find results for the current search term. If * there are no matches 0 should be passed in. Only when the plugin has * finished searching should it pass in the final count with final_result set * to PP_TRUE. */ void (*)(PP_Instance instance, int32_t total, PP_Bool final_result)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  /**
   * Updates the number of find results for the current search term.  If
   * there are no matches 0 should be passed in.  Only when the plugin has
   * finished searching should it pass in the final count with final_result set
   * to PP_TRUE.
   */
  void (*${name})(PP_Instance instance,
                                     int32_t total,
                                     PP_Bool final_result)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9965324 "SelectedFindResultChanged"
	public explicit_type "/** * Updates the index of the currently selected search item. */ void (*)(PP_Instance instance, int32_t index)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Updates the index of the currently selected search item.
   */
  void (*${name})(PP_Instance instance, int32_t index)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2761868 "PPB_Find_Dev"
      visibility package stereotype "typedef" base_type class_ref 2761740 // PPB_Find_Dev_0_3
      cpp_decl "${comment}typedef struct ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 5198860 // <dependency>
	relation 5198732 -_->
	  a default
	    cpp default "#include in source"
	    classrelation_ref 5198860 // <dependency>
	  b parent class_ref 2761740 // PPB_Find_Dev_0_3
      end
    end

    class 2761996 "PP_FontFamily_Dev"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}
};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @file
 * This file defines the <code>PPB_Font_Dev</code> interface.
 
*
 * @addtogroup Enums
 * @{"
      attribute 9965452 "PP_FONTFAMILY_DEFAULT"
	public type class_ref 2761996 // PP_FontFamily_Dev
	init_value " 0"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9965580 "PP_FONTFAMILY_SERIF"
	public type class_ref 2761996 // PP_FontFamily_Dev
	init_value " 1"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9965708 "PP_FONTFAMILY_SANSSERIF"
	public type class_ref 2761996 // PP_FontFamily_Dev
	init_value " 2"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9965836 "PP_FONTFAMILY_MONOSPACE"
	public type class_ref 2761996 // PP_FontFamily_Dev
	init_value " 3
"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2762124 "PP_FontWeight_Dev"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}
};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * Specifies the font weight. Normally users will only use NORMAL or BOLD."
      attribute 9965964 "PP_FONTWEIGHT_100"
	public type class_ref 2762124 // PP_FontWeight_Dev
	init_value " 0"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9966092 "PP_FONTWEIGHT_200"
	public type class_ref 2762124 // PP_FontWeight_Dev
	init_value " 1"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9966220 "PP_FONTWEIGHT_300"
	public type class_ref 2762124 // PP_FontWeight_Dev
	init_value " 2"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9966348 "PP_FONTWEIGHT_400"
	public type class_ref 2762124 // PP_FontWeight_Dev
	init_value " 3"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9966476 "PP_FONTWEIGHT_500"
	public type class_ref 2762124 // PP_FontWeight_Dev
	init_value " 4"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9966604 "PP_FONTWEIGHT_600"
	public type class_ref 2762124 // PP_FontWeight_Dev
	init_value " 5"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9966732 "PP_FONTWEIGHT_700"
	public type class_ref 2762124 // PP_FontWeight_Dev
	init_value " 6"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9966860 "PP_FONTWEIGHT_800"
	public type class_ref 2762124 // PP_FontWeight_Dev
	init_value " 7"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9966988 "PP_FONTWEIGHT_900"
	public type class_ref 2762124 // PP_FontWeight_Dev
	init_value " 8"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9967116 "PP_FONTWEIGHT_NORMAL"
	public type class_ref 2762124 // PP_FontWeight_Dev
	init_value " PP_FONTWEIGHT_400"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9967244 "PP_FONTWEIGHT_BOLD"
	public type class_ref 2762124 // PP_FontWeight_Dev
	init_value " PP_FONTWEIGHT_700
"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2762252 "PP_FontDescription_Dev"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @}
 
*
 * @addtogroup Structs
 * @{"
      classrelation 5198988 // face (<directional composition>)
	relation 5198860 *-->
	  a role_name "face" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}struct ${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5198988 // face (<directional composition>)
	  b parent class_ref 2741388 // PP_Var
      end

      classrelation 5199116 // family (<directional composition>)
	relation 5198988 *-->
	  a role_name "family" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5199116 // family (<directional composition>)
	  b parent class_ref 2761996 // PP_FontFamily_Dev
      end

      classrelation 5199244 // size (<directional composition>)
	relation 5199116 *-->
	  a role_name "size" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5199244 // size (<directional composition>)
	  b parent class_ref 2345996 // uint32_t
      end

      classrelation 5199372 // weight (<directional composition>)
	relation 5199244 *-->
	  a role_name "weight" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5199372 // weight (<directional composition>)
	  b parent class_ref 2762124 // PP_FontWeight_Dev
      end

      classrelation 5199500 // italic (<directional composition>)
	relation 5199372 *-->
	  a role_name "italic" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5199500 // italic (<directional composition>)
	  b parent class_ref 2738188 // PP_Bool
      end

      classrelation 5199628 // small_caps (<directional composition>)
	relation 5199500 *-->
	  a role_name "small_caps" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5199628 // small_caps (<directional composition>)
	  b parent class_ref 2738188 // PP_Bool
      end

      classrelation 5199756 // letter_spacing (<directional composition>)
	relation 5199628 *-->
	  a role_name "letter_spacing" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5199756 // letter_spacing (<directional composition>)
	  b parent class_ref 2409996 // int32_t
      end

      classrelation 5199884 // word_spacing (<directional composition>)
	relation 5199756 *-->
	  a role_name "word_spacing" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5199884 // word_spacing (<directional composition>)
	  b parent class_ref 2409996 // int32_t
      end

      classrelation 5200012 // padding (<directional composition>)
	relation 5199884 *-->
	  a role_name "padding" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5200012 // padding (<directional composition>)
	  b parent class_ref 2409996 // int32_t
      end
    end

    class 2762380 "PP_FontMetrics_Dev"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 5200140 // height (<directional composition>)
	relation 5200012 *-->
	  a role_name "height" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5200140 // height (<directional composition>)
	  b parent class_ref 2409996 // int32_t
      end

      classrelation 5200268 // ascent (<directional composition>)
	relation 5200140 *-->
	  a role_name "ascent" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5200268 // ascent (<directional composition>)
	  b parent class_ref 2409996 // int32_t
      end

      classrelation 5200396 // descent (<directional composition>)
	relation 5200268 *-->
	  a role_name "descent" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5200396 // descent (<directional composition>)
	  b parent class_ref 2409996 // int32_t
      end

      classrelation 5200524 // line_spacing (<directional composition>)
	relation 5200396 *-->
	  a role_name "line_spacing" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5200524 // line_spacing (<directional composition>)
	  b parent class_ref 2409996 // int32_t
      end

      classrelation 5200652 // x_height (<directional composition>)
	relation 5200524 *-->
	  a role_name "x_height" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5200652 // x_height (<directional composition>)
	  b parent class_ref 2409996 // int32_t
      end
    end

    class 2762508 "PP_TextRun_Dev"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 5200780 // text (<directional composition>)
	relation 5200652 *-->
	  a role_name "text" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}struct ${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5200780 // text (<directional composition>)
	  b parent class_ref 2741388 // PP_Var
      end

      classrelation 5200908 // rtl (<directional composition>)
	relation 5200780 *-->
	  a role_name "rtl" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5200908 // rtl (<directional composition>)
	  b parent class_ref 2738188 // PP_Bool
      end

      classrelation 5201036 // override_direction (<directional composition>)
	relation 5200908 *-->
	  a role_name "override_direction" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5201036 // override_direction (<directional composition>)
	  b parent class_ref 2738188 // PP_Bool
      end
    end

    class 2762636 "PPB_Font_Dev_0_6"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @}
 
*
 * @addtogroup Interfaces
 * @{"
      attribute 9967372 "GetFontFamilies"
	public explicit_type "PP_Var (*)(PP_Instance instance)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const} PP_Var (*${name})(PP_Instance instance)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9967500 "Create"
	public explicit_type "/** * Returns a font which best matches the given description. The return value * will have a non-zero ID on success, or zero on failure. */ PP_Resource (*)(PP_Instance instance, const struct PP_FontDescription_Dev* description)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Returns a font which best matches the given description. The return value
   * will have a non-zero ID on success, or zero on failure.
   */
  PP_Resource (*${name})(PP_Instance instance,
                        const struct PP_FontDescription_Dev* description)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9967628 "IsFont"
	public explicit_type "/** * Returns PP_TRUE if the given resource is a Font. Returns PP_FALSE if the * resource is invalid or some type other than a Font. */ PP_Bool (*)(PP_Resource resource)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Returns PP_TRUE if the given resource is a Font. Returns PP_FALSE if the
   * resource is invalid or some type other than a Font.
   */
  PP_Bool (*${name})(PP_Resource resource)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9967756 "Describe"
	public explicit_type "/** * Loads the description and metrics of the font into the given structures. * The description will be different than the description the font was * created with since it will be filled with the real values from the font * that was actually selected. * * The PP_Var in the description should be of type Void on input. On output, * this will contain the string and will have a reference count of 1. The * plugin is responsible for calling Release on this var. * * Returns PP_TRUE on success, PP_FALSE if the font is invalid or if the Var * in the description isn't Null (to prevent leaks). */ PP_Bool (*)(PP_Resource font, struct PP_FontDescription_Dev* description, struct PP_FontMetrics_Dev* metrics)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Loads the description and metrics of the font into the given structures.
   * The description will be different than the description the font was
   * created with since it will be filled with the real values from the font
   * that was actually selected.
   *
   * The PP_Var in the description should be of type Void on input. On output,
   * this will contain the string and will have a reference count of 1. The
   * plugin is responsible for calling Release on this var.
   *
   * Returns PP_TRUE on success, PP_FALSE if the font is invalid or if the Var
   * in the description isn't Null (to prevent leaks).
   */
  PP_Bool (*${name})(PP_Resource font,
                      struct PP_FontDescription_Dev* description,
                      struct PP_FontMetrics_Dev* metrics)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9967884 "DrawTextAt"
	public explicit_type "/** * Draws the text to the image buffer. * * The given point represents the baseline of the left edge of the font, * regardless of whether it is left-to-right or right-to-left (in the case of * RTL text, this will actually represent the logical end of the text). * * The clip is optional and may be NULL. In this case, the text will be * clipped to the image. * * The image_data_is_opaque flag indicates whether subpixel antialiasing can * be performend, if it is supported. When the image below the text is * opaque, subpixel antialiasing is supported and you should set this to * PP_TRUE to pick up the user's default preferences. If your plugin is * partially transparent, then subpixel antialiasing is not possible and * grayscale antialiasing will be used instead (assuming the user has * antialiasing enabled at all). */ PP_Bool (*)(PP_Resource font, PP_Resource image_data, const struct PP_TextRun_Dev* text, const struct PP_Point* position, uint32_t color, const struct PP_Rect* clip, PP_Bool image_data_is_opaque)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Draws the text to the image buffer.
   *
   * The given point represents the baseline of the left edge of the font,
   * regardless of whether it is left-to-right or right-to-left (in the case of
   * RTL text, this will actually represent the logical end of the text).
   *
   * The clip is optional and may be NULL. In this case, the text will be
   * clipped to the image.
   *
   * The image_data_is_opaque flag indicates whether subpixel antialiasing can
   * be performend, if it is supported. When the image below the text is
   * opaque, subpixel antialiasing is supported and you should set this to
   * PP_TRUE to pick up the user's default preferences. If your plugin is
   * partially transparent, then subpixel antialiasing is not possible and
   * grayscale antialiasing will be used instead (assuming the user has
   * antialiasing enabled at all).
   */
  PP_Bool (*${name})(PP_Resource font,
                        PP_Resource image_data,
                        const struct PP_TextRun_Dev* text,
                        const struct PP_Point* position,
                        uint32_t color,
                        const struct PP_Rect* clip,
                        PP_Bool image_data_is_opaque)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9968012 "MeasureText"
	public explicit_type "/** * Returns the width of the given string. If the font is invalid or the var * isn't a valid string, this will return -1. * * Note that this function handles complex scripts such as Arabic, combining * accents, etc. so that adding the width of substrings won't necessarily * produce the correct width of the entire string. * * Returns -1 on failure. */ int32_t (*)(PP_Resource font, const struct PP_TextRun_Dev* text)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Returns the width of the given string. If the font is invalid or the var
   * isn't a valid string, this will return -1.
   *
   * Note that this function handles complex scripts such as Arabic, combining
   * accents, etc. so that adding the width of substrings won't necessarily
   * produce the correct width of the entire string.
   *
   * Returns -1 on failure.
   */
  int32_t (*${name})(PP_Resource font, const struct PP_TextRun_Dev* text)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9968140 "CharacterOffsetForPixel"
	public explicit_type "/** * Returns the character at the given pixel X position from the beginning of * the string. This handles complex scripts such as Arabic, where characters * may be combined or replaced depending on the context. Returns (uint32)-1 * on failure. */ uint32_t (*)(PP_Resource font, const struct PP_TextRun_Dev* text, int32_t pixel_position)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Returns the character at the given pixel X position from the beginning of
   * the string. This handles complex scripts such as Arabic, where characters
   * may be combined or replaced depending on the context. Returns (uint32)-1
   * on failure.
   */
  uint32_t (*${name})(PP_Resource font,
                                      const struct PP_TextRun_Dev* text,
                                      int32_t pixel_position)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9968268 "PixelOffsetForCharacter"
	public explicit_type "/** * Returns the horizontal advance to the given character if the string was * placed at the given position. This handles complex scripts such as Arabic, * where characters may be combined or replaced depending on context. Returns * -1 on error. */ int32_t (*)(PP_Resource font, const struct PP_TextRun_Dev* text, uint32_t char_offset)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Returns the horizontal advance to the given character if the string was
   * placed at the given position. This handles complex scripts such as Arabic,
   * where characters may be combined or replaced depending on context. Returns
   * -1 on error.
   */
  int32_t (*${name})(PP_Resource font,
                                     const struct PP_TextRun_Dev* text,
                                     uint32_t char_offset)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2762764 "PPB_Font_Dev"
      visibility package stereotype "typedef" base_type class_ref 2762636 // PPB_Font_Dev_0_6
      cpp_decl "${comment}typedef struct ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 5201164 // <dependency>
	relation 5201036 -_->
	  a default
	    cpp default "#include in source"
	    classrelation_ref 5201164 // <dependency>
	  b parent class_ref 2762636 // PPB_Font_Dev_0_6
      end
    end

    class 2762892 "PPB_GLESChromiumTextureMapping_Dev_0_1"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " PPB_OPENGLES2_CHROMIUMMAPSUB_DEV_INTERFACE_1_0 is also deprecated.  Please
 use PPB_OPENGLES2_CHROMIUMMAPSUB_INTERFACE instead."
      attribute 9968396 "MapTexSubImage2DCHROMIUM"
	public explicit_type "// Maps the sub-image of a texture. 'level', 'xoffset', 'yoffset', 'width', // 'height', 'format' and 'type' correspond to the similarly named parameters // of TexSubImage2D, and define the sub-image region, as well as the format of // the data. 'access' must be one of GL_READ_ONLY, GL_WRITE_ONLY or // GL_READ_WRITE. If READ is included, the returned buffer will contain the // pixel data for the sub-image. If WRITE is included, the pixel data for the // sub-image will be updated to the contents of the buffer when // UnmapTexSubImage2DCHROMIUM is called. NOTE: for a GL_WRITE_ONLY map, it // means that all the values of the buffer must be written. void* (*)( PP_Resource context, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, GLenum access)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  // Maps the sub-image of a texture. 'level', 'xoffset', 'yoffset', 'width',
  // 'height', 'format' and 'type' correspond to the similarly named parameters
  // of TexSubImage2D, and define the sub-image region, as well as the format of
  // the data. 'access' must be one of GL_READ_ONLY, GL_WRITE_ONLY or
  // GL_READ_WRITE. If READ is included, the returned buffer will contain the
  // pixel data for the sub-image. If WRITE is included, the pixel data for the
  // sub-image will be updated to the contents of the buffer when
  // UnmapTexSubImage2DCHROMIUM is called. NOTE: for a GL_WRITE_ONLY map, it
  // means that all the values of the buffer must be written.
  void* (*${name})(
     PP_Resource context,
     GLenum target,
     GLint level,
     GLint xoffset,
     GLint yoffset,
     GLsizei width,
     GLsizei height,
     GLenum format,
     GLenum type,
     GLenum access)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9968524 "UnmapTexSubImage2DCHROMIUM"
	public explicit_type "// Unmaps the sub-image of a texture. If the sub-image was mapped with one of // the WRITE accesses, the pixels are updated at this time to the contents of // the buffer. 'mem' must be the pointer returned by MapTexSubImage2DCHROMIUM. void (*)(PP_Resource context, const void* mem)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  // Unmaps the sub-image of a texture. If the sub-image was mapped with one of
  // the WRITE accesses, the pixels are updated at this time to the contents of
  // the buffer. 'mem' must be the pointer returned by MapTexSubImage2DCHROMIUM.
  void (*${name})(PP_Resource context, const void* mem)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2763020 "PPB_GLESChromiumTextureMapping_Dev"
      visibility package stereotype "typedef" base_type class_ref 2762892 // PPB_GLESChromiumTextureMapping_Dev_0_1
      cpp_decl "${comment}typedef struct ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 5201292 // <dependency>
	relation 5201164 -_->
	  a default
	    cpp default "#include in source"
	    classrelation_ref 5201292 // <dependency>
	  b parent class_ref 2762892 // PPB_GLESChromiumTextureMapping_Dev_0_1
      end
    end

    class 2763148 "PPB_Graphics2D_Dev_0_1"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @file
 * This file contains the <code>PPB_Graphics2D_Dev</code> interface. 
*
 * @addtogroup Interfaces
 * @{
 
 PPB_Graphics2D_Dev interface "
      attribute 9968652 "SetScale"
	public explicit_type "/** * SetScale() sets the scale factor that will be applied when painting the * graphics context onto the output device. Typically, if rendering at device * resolution is desired, the context would be created with the width and * height scaled up by the view's GetDeviceScale and SetScale called with a * scale of 1.0 / GetDeviceScale(). For example, if the view resource passed * to DidChangeView has a rectangle of (w=200, h=100) and a device scale of * 2.0, one would call Create with a size of (w=400, h=200) and then call * SetScale with 0.5. One would then treat each pixel in the context as a * single device pixel. * * @param[in] resource A <code>Graphics2D</code> context resource. * @param[in] scale The scale to apply when painting. * * @return Returns <code>PP_TRUE</code> on success or <code>PP_FALSE</code> if * the resource is invalid or the scale factor is 0 or less. */ PP_Bool (*)(PP_Resource resource, float scale)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  /**
   * SetScale() sets the scale factor that will be applied when painting the
   * graphics context onto the output device. Typically, if rendering at device
   * resolution is desired, the context would be created with the width and
   * height scaled up by the view's GetDeviceScale and SetScale called with a
   * scale of 1.0 / GetDeviceScale(). For example, if the view resource passed
   * to DidChangeView has a rectangle of (w=200, h=100) and a device scale of
   * 2.0, one would call Create with a size of (w=400, h=200) and then call
   * SetScale with 0.5. One would then treat each pixel in the context as a
   * single device pixel.
   *
   * @param[in] resource A <code>Graphics2D</code> context resource.
   * @param[in] scale The scale to apply when painting.
   *
   * @return Returns <code>PP_TRUE</code> on success or <code>PP_FALSE</code> if
   * the resource is invalid or the scale factor is 0 or less.
   */
  PP_Bool (*${name})(PP_Resource resource, float scale)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9968780 "GetScale"
	public explicit_type "/*** * GetScale() gets the scale factor that will be applied when painting the * graphics context onto the output device. * * @param[in] resource A <code>Graphics2D</code> context resource. * * @return Returns the scale factor for the graphics context. If the resource * is not a valid <code>Graphics2D</code> context, this will return 0.0. */ float (*)(PP_Resource resource)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /***
   * GetScale() gets the scale factor that will be applied when painting the
   * graphics context onto the output device.
   *
   * @param[in] resource A <code>Graphics2D</code> context resource.
   *
   * @return Returns the scale factor for the graphics context. If the resource
   * is not a valid <code>Graphics2D</code> context, this will return 0.0.
   */
  float (*${name})(PP_Resource resource)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2763276 "PPB_Graphics2D_Dev"
      visibility package stereotype "typedef" base_type class_ref 2763148 // PPB_Graphics2D_Dev_0_1
      cpp_decl "${comment}typedef struct ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 5201420 // <dependency>
	relation 5201292 -_->
	  a default
	    cpp default "#include in source"
	    classrelation_ref 5201420 // <dependency>
	  b parent class_ref 2763148 // PPB_Graphics2D_Dev_0_1
      end
    end

    class 2763404 "PPB_IMEInputEvent_Dev_0_2"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @file
 * This file defines the <code>PPB_IMEInputEvent_Dev</code> interface.
 
*
 * @addtogroup Interfaces
 * @{"
      attribute 9968908 "Create"
	public explicit_type "/** * Create() creates an IME input event with the given parameters. Normally * you will get an IME event passed through the <code>HandleInputEvent</code> * and will not need to create them, but some applications may want to create * their own for internal use. * * @param[in] instance The instance for which this event occurred. * * @param[in] type A <code>PP_InputEvent_Type</code> identifying the type of * input event. The type must be one of the IME event types. * * @param[in] time_stamp A <code>PP_TimeTicks</code> indicating the time * when the event occurred. * * @param[in] text The string returned by <code>GetText</code>. * * @param[in] segment_number The number returned by * <code>GetSegmentNumber</code>. * * @param[in] segment_offsets The array of numbers returned by * <code>GetSegmentOffset</code>. If <code>segment_number</code> is zero, * the number of elements of the array should be zero. If * <code>segment_number</code> is non-zero, the length of the array must be * <code>segment_number</code> + 1. * * @param[in] target_segment The number returned by * <code>GetTargetSegment</code>. * * @param[in] selection_start The start index returned by * <code>GetSelection</code>. * * @param[in] selection_end The end index returned by * <code>GetSelection</code>. * * @return A <code>PP_Resource</code> containing the new IME input event. */ PP_Resource (*)(PP_Instance instance, PP_InputEvent_Type type, PP_TimeTicks time_stamp, struct PP_Var text, uint32_t segment_number, const uint32_t segment_offsets[], int32_t target_segment, uint32_t selection_start, uint32_t selection_end)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  /**
   * Create() creates an IME input event with the given parameters. Normally
   * you will get an IME event passed through the <code>HandleInputEvent</code>
   * and will not need to create them, but some applications may want to create
   * their own for internal use.
   *
   * @param[in] instance The instance for which this event occurred.
   *
   * @param[in] type A <code>PP_InputEvent_Type</code> identifying the type of
   * input event. The type must be one of the IME event types.
   *
   * @param[in] time_stamp A <code>PP_TimeTicks</code> indicating the time
   * when the event occurred.
   *
   * @param[in] text The string returned by <code>GetText</code>.
   *
   * @param[in] segment_number The number returned by
   * <code>GetSegmentNumber</code>.
   *
   * @param[in] segment_offsets The array of numbers returned by
   * <code>GetSegmentOffset</code>. If <code>segment_number</code> is zero,
   * the number of elements of the array should be zero. If
   * <code>segment_number</code> is non-zero, the length of the array must be
   * <code>segment_number</code> + 1.
   *
   * @param[in] target_segment The number returned by
   * <code>GetTargetSegment</code>.
   *
   * @param[in] selection_start The start index returned by
   * <code>GetSelection</code>.
   *
   * @param[in] selection_end The end index returned by
   * <code>GetSelection</code>.
   *
   * @return A <code>PP_Resource</code> containing the new IME input event.
   */
  PP_Resource (*${name})(PP_Instance instance,
                        PP_InputEvent_Type type,
                        PP_TimeTicks time_stamp,
                        struct PP_Var text,
                        uint32_t segment_number,
                        const uint32_t segment_offsets[],
                        int32_t target_segment,
                        uint32_t selection_start,
                        uint32_t selection_end)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9969036 "IsIMEInputEvent"
	public explicit_type "/** * IsIMEInputEvent() determines if a resource is an IME event. * * @param[in] resource A <code>PP_Resource</code> corresponding to an event. * * @return <code>PP_TRUE</code> if the given resource is a valid input event. */ PP_Bool (*)(PP_Resource resource)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * IsIMEInputEvent() determines if a resource is an IME event.
   *
   * @param[in] resource A <code>PP_Resource</code> corresponding to an event.
   *
   * @return <code>PP_TRUE</code> if the given resource is a valid input event.
   */
  PP_Bool (*${name})(PP_Resource resource)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9969164 "GetText"
	public explicit_type "PP_Var (*)(PP_Resource ime_event)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const} PP_Var (*${name})(PP_Resource ime_event)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9969292 "GetSegmentNumber"
	public explicit_type "/** * GetSegmentNumber() returns the number of segments in the composition text. * * @param[in] ime_event A <code>PP_Resource</code> corresponding to an IME * event. * * @return The number of segments. For events other than COMPOSITION_UPDATE, * returns 0. */ uint32_t (*)(PP_Resource ime_event)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * GetSegmentNumber() returns the number of segments in the composition text.
   *
   * @param[in] ime_event A <code>PP_Resource</code> corresponding to an IME
   * event.
   *
   * @return The number of segments. For events other than COMPOSITION_UPDATE,
   * returns 0.
   */
  uint32_t (*${name})(PP_Resource ime_event)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9969420 "GetSegmentOffset"
	public explicit_type "/** * GetSegmentOffset() returns the position of the index-th segmentation point * in the composition text. The position is given by a byte-offset (not a * character-offset) of the string returned by GetText(). It always satisfies * 0=GetSegmentOffset(0) < ... < GetSegmentOffset(i) < GetSegmentOffset(i+1) * < ... < GetSegmentOffset(GetSegmentNumber())=(byte-length of GetText()). * Note that [GetSegmentOffset(i), GetSegmentOffset(i+1)) represents the range * of the i-th segment, and hence GetSegmentNumber() can be a valid argument * to this function instead of an off-by-1 error. * * @param[in] ime_event A <code>PP_Resource</code> corresponding to an IME * event. * * @param[in] index An integer indicating a segment. * * @return The byte-offset of the segmentation point. If the event is not * COMPOSITION_UPDATE or index is out of range, returns 0. */ uint32_t (*)(PP_Resource ime_event, uint32_t index)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * GetSegmentOffset() returns the position of the index-th segmentation point
   * in the composition text. The position is given by a byte-offset (not a
   * character-offset) of the string returned by GetText(). It always satisfies
   * 0=GetSegmentOffset(0) < ... < GetSegmentOffset(i) < GetSegmentOffset(i+1)
   * < ... < GetSegmentOffset(GetSegmentNumber())=(byte-length of GetText()).
   * Note that [GetSegmentOffset(i), GetSegmentOffset(i+1)) represents the range
   * of the i-th segment, and hence GetSegmentNumber() can be a valid argument
   * to this function instead of an off-by-1 error.
   *
   * @param[in] ime_event A <code>PP_Resource</code> corresponding to an IME
   * event.
   *
   * @param[in] index An integer indicating a segment.
   *
   * @return The byte-offset of the segmentation point. If the event is not
   * COMPOSITION_UPDATE or index is out of range, returns 0.
   */
  uint32_t (*${name})(PP_Resource ime_event, uint32_t index)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9969548 "GetTargetSegment"
	public explicit_type "/** * GetTargetSegment() returns the index of the current target segment of * composition. * * @param[in] ime_event A <code>PP_Resource</code> corresponding to an IME * event. * * @return An integer indicating the index of the target segment. When there * is no active target segment, or the event is not COMPOSITION_UPDATE, * returns -1. */ int32_t (*)(PP_Resource ime_event)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * GetTargetSegment() returns the index of the current target segment of
   * composition.
   *
   * @param[in] ime_event A <code>PP_Resource</code> corresponding to an IME
   * event.
   *
   * @return An integer indicating the index of the target segment. When there
   * is no active target segment, or the event is not COMPOSITION_UPDATE,
   * returns -1.
   */
  int32_t (*${name})(PP_Resource ime_event)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 5201548 // GetSelection (<unidirectional association>)
	relation 5201420 --->
	  stereotype "void(*${name})(PP_Resource ime_event,${type}*start,uint32_t*end)"
	  a role_name "GetSelection" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5201548 // GetSelection (<unidirectional association>)
	  b parent class_ref 2345996 // uint32_t
      end
    end

    class 2763532 "PPB_IMEInputEvent_Dev"
      visibility package stereotype "typedef" base_type class_ref 2763404 // PPB_IMEInputEvent_Dev_0_2
      cpp_decl "${comment}typedef struct ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 5201676 // <dependency>
	relation 5201548 -_->
	  a default
	    cpp default "#include in source"
	    classrelation_ref 5201676 // <dependency>
	  b parent class_ref 2763404 // PPB_IMEInputEvent_Dev_0_2
      end
    end

    class 2763660 "PPB_IMEInputEvent_Dev_0_1"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      attribute 9969676 "IsIMEInputEvent"
	public explicit_type "PP_Bool (*)(PP_Resource resource)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  PP_Bool (*${name})(PP_Resource resource)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9969804 "GetText"
	public explicit_type "PP_Var (*)(PP_Resource ime_event)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const} PP_Var (*${name})(PP_Resource ime_event)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9969932 "GetSegmentNumber"
	public explicit_type "uint32_t (*)(PP_Resource ime_event)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  uint32_t (*${name})(PP_Resource ime_event)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9970060 "GetSegmentOffset"
	public explicit_type "uint32_t (*)(PP_Resource ime_event, uint32_t index)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  uint32_t (*${name})(PP_Resource ime_event, uint32_t index)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9970188 "GetTargetSegment"
	public explicit_type "int32_t (*)(PP_Resource ime_event)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  int32_t (*${name})(PP_Resource ime_event)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9970316 "GetSelection"
	public explicit_type "void (*)(PP_Resource ime_event, uint32_t* start, uint32_t* end)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  void (*${name})(PP_Resource ime_event, uint32_t* start, uint32_t* end)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2763788 "PPB_KeyboardInputEvent_Dev_0_1"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @file
 * This file defines the <code>PPB_KeyboardInputEvent_Dev</code> interface,
 * which provides access to USB key codes that identify the physical key being
 * pressed.
 
*
 * @addtogroup Interfaces
 * @{
 
*
 * The <code>PPB_KeyboardInputEvent_Dev</code> interface is an extension to the
 * PPB_KeyboardInputEvent</code> interface that provides"
      attribute 9970444 "SetUsbKeyCode"
	public explicit_type "/** * This sets a USB key code in the given <code>PP_Resource</code>. It is * intended that this method be called immediately after any call to * <code>Create</code>. * * @param[in] key_event A <code>PP_Resource</code> created by * <code>PPB_KeyboardInputEvent</code>'s <code>Create</code> method. * * @param[in] usb_key_code The USB key code to associate with this * <code>key_event</code>. * * @return <code>PP_TRUE</code> if the USB key code was set successfully. */ PP_Bool (*)(PP_Resource key_event, uint32_t usb_key_code)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  /**
   * This sets a USB key code in the given <code>PP_Resource</code>. It is
   * intended that this method be called immediately after any call to
   * <code>Create</code>.
   *
   * @param[in] key_event A <code>PP_Resource</code> created by
   * <code>PPB_KeyboardInputEvent</code>'s <code>Create</code> method.
   *
   * @param[in] usb_key_code The USB key code to associate with this
   * <code>key_event</code>.
   *
   * @return <code>PP_TRUE</code> if the USB key code was set successfully.
   */
  PP_Bool (*${name})(PP_Resource key_event, uint32_t usb_key_code)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9970572 "GetUsbKeyCode"
	public explicit_type "/** * GetUsbKeyCode() returns the USB key code associated with this keyboard * event. * * @param[in] key_event The key event for which to return the key code. * * @return The USB key code field for the keyboard event. If there is no * USB scancode associated with this event, or if the PP_Resource does not * support the PPB_InputEvent_API (i.e., it is not an input event), then * a 0 is returned. */ uint32_t (*)(PP_Resource key_event)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * GetUsbKeyCode() returns the USB key code associated with this keyboard
   * event.
   *
   * @param[in] key_event The key event for which to return the key code.
   *
   * @return The USB key code field for the keyboard event. If there is no
   * USB scancode associated with this event, or if the PP_Resource does not
   * support the PPB_InputEvent_API (i.e., it is not an input event), then
   * a 0 is returned.
   */
  uint32_t (*${name})(PP_Resource key_event)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2763916 "PPB_KeyboardInputEvent_Dev"
      visibility package stereotype "typedef" base_type class_ref 2763788 // PPB_KeyboardInputEvent_Dev_0_1
      cpp_decl "${comment}typedef struct ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 5201804 // <dependency>
	relation 5201676 -_->
	  a default
	    cpp default "#include in source"
	    classrelation_ref 5201804 // <dependency>
	  b parent class_ref 2763788 // PPB_KeyboardInputEvent_Dev_0_1
      end
    end

    class 2764044 "PPB_Memory_Dev_0_1"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @file
 * This file defines the <code>PPB_Memory interface</code> for functions
 * related to memory management.
 
*
 * @addtogroup Interfaces
 * @{
 
*
 * The PPB_Memory_Dev interface contains pointers to functions related to memory
 * management.
 *"
      attribute 9970700 "MemAlloc"
	public explicit_type "/** * MemAlloc is a pointer to a function that allocate memory. * * @param[in] num_bytes A number of bytes to allocate. * @return A pointer to the memory if successful, NULL If the * allocation fails. */ void* (*)(uint32_t num_bytes)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  /**
   * MemAlloc is a pointer to a function that allocate memory.
   *
   * @param[in] num_bytes A number of bytes to allocate.
   * @return A pointer to the memory if successful, NULL If the
   * allocation fails.
   */
  void* (*${name})(uint32_t num_bytes)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9970828 "MemFree"
	public explicit_type "/** * MemFree is a pointer to a function that deallocates memory. * * @param[in] ptr A pointer to the memory to deallocate. It is safe to * pass NULL to this function. */ void (*)(void* ptr)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * MemFree is a pointer to a function that deallocates memory.
   *
   * @param[in] ptr A pointer to the memory to deallocate. It is safe to
   * pass NULL to this function.
   */
  void (*${name})(void* ptr)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2764172 "PPB_Memory_Dev"
      visibility package stereotype "typedef" base_type class_ref 2764044 // PPB_Memory_Dev_0_1
      cpp_decl "${comment}typedef struct ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 5201932 // <dependency>
	relation 5201804 -_->
	  a default
	    cpp default "#include in source"
	    classrelation_ref 5201932 // <dependency>
	  b parent class_ref 2764044 // PPB_Memory_Dev_0_1
      end
    end

    class 2764300 "PPB_Printing_Dev_0_7"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @file
 * Definition of the PPB_Printing interface.
 
*
 * @addtogroup Interfaces
 * @{"
      attribute 9970956 "Create"
	public explicit_type "/** Create a resource for accessing printing functionality. * * @param[in] instance A <code>PP_Instance</code> identifying one instance * of a module. * * @return A <code>PP_Resource</code> containing the printing resource if * successful or 0 if it could not be created. */ PP_Resource (*)(PP_Instance instance)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  /** Create a resource for accessing printing functionality.
   *
   * @param[in] instance A <code>PP_Instance</code> identifying one instance
   * of a module.
   *
   * @return A <code>PP_Resource</code> containing the printing resource if
   * successful or 0 if it could not be created.
   */
  PP_Resource (*${name})(PP_Instance instance)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9971084 "GetDefaultPrintSettings"
	public explicit_type "/** * Outputs the default print settings for the default printer into * <code>print_settings</code>. The callback is called with * <code>PP_OK</code> when the settings have been retrieved successfully. * * @param[in] resource The printing resource. * * @param[in] callback A <code>CompletionCallback</code> to be called when * <code>print_settings</code> have been retrieved. * * @return PP_OK_COMPLETIONPENDING if request for the default print settings * was successful, another error code from pp_errors.h on failure. */ int32_t (*)( PP_Resource resource, struct PP_PrintSettings_Dev* print_settings, struct PP_CompletionCallback callback)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Outputs the default print settings for the default printer into
   * <code>print_settings</code>. The callback is called with
   * <code>PP_OK</code> when the settings have been retrieved successfully.
   *
   * @param[in] resource The printing resource.
   *
   * @param[in] callback A <code>CompletionCallback</code> to be called when
   * <code>print_settings</code> have been retrieved.
   *
   * @return PP_OK_COMPLETIONPENDING if request for the default print settings
   * was successful, another error code from pp_errors.h on failure.
   */
  int32_t (*${name})(
      PP_Resource resource,
      struct PP_PrintSettings_Dev* print_settings,
      struct PP_CompletionCallback callback)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2764428 "PPB_Printing_Dev"
      visibility package stereotype "typedef" base_type class_ref 2764300 // PPB_Printing_Dev_0_7
      cpp_decl "${comment}typedef struct ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 5202060 // <dependency>
	relation 5201932 -_->
	  a default
	    cpp default "#include in source"
	    classrelation_ref 5202060 // <dependency>
	  b parent class_ref 2764300 // PPB_Printing_Dev_0_7
      end
    end

    class 2764556 "PPB_Printing_Dev_0_6"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      attribute 9971212 "GetDefaultPrintSettings"
	public explicit_type "PP_Bool (*)( PP_Instance instance, struct PP_PrintSettings_Dev* print_settings)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  PP_Bool (*${name})(
      PP_Instance instance,
      struct PP_PrintSettings_Dev* print_settings)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2764684 "PPB_ResourceArray_Dev_0_1"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @file
 * This file defines the <code>PPB_ResourceArray_Dev</code> interface.
 
*
 * @addtogroup Interfaces
 * @{
 
*
 * A resource array holds a list of resources and retains a reference to each of
 * them."
      attribute 9971340 "Create"
	public explicit_type "/** * Creates a resource array. * Note: It will add a reference to each of the elements. * * @param[in] elements <code>PP_Resource</code>s to be stored in the created * resource array. * @param[in] size The number of elements. * * @return A <code>PP_Resource</code> corresponding to a resource array if * successful; 0 if failed. */ PP_Resource (*)(PP_Instance instance, const PP_Resource elements[], uint32_t size)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  /**
   * Creates a resource array.
   * Note: It will add a reference to each of the elements.
   *
   * @param[in] elements <code>PP_Resource</code>s to be stored in the created
   * resource array.
   * @param[in] size The number of elements.
   *
   * @return A <code>PP_Resource</code> corresponding to a resource array if
   * successful; 0 if failed.
   */
  PP_Resource (*${name})(PP_Instance instance,
                        const PP_Resource elements[],
                        uint32_t size)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9971468 "IsResourceArray"
	public explicit_type "/** * Determines if the provided resource is a resource array. * * @param[in] resource A <code>PP_Resource</code> corresponding to a generic * resource. * * @return A <code>PP_Bool</code> that is <code>PP_TRUE</code> if the given * resource is a resource array, otherwise <code>PP_FALSE</code>. */ PP_Bool (*)(PP_Resource resource)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Determines if the provided resource is a resource array.
   *
   * @param[in] resource A <code>PP_Resource</code> corresponding to a generic
   * resource.
   *
   * @return A <code>PP_Bool</code> that is <code>PP_TRUE</code> if the given
   * resource is a resource array, otherwise <code>PP_FALSE</code>.
   */
  PP_Bool (*${name})(PP_Resource resource)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9971596 "GetSize"
	public explicit_type "/** * Gets the array size. * * @param[in] resource_array The resource array. * * @return How many elements are there in the array. */ uint32_t (*)(PP_Resource resource_array)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Gets the array size.
   *
   * @param[in] resource_array The resource array.
   *
   * @return How many elements are there in the array.
   */
  uint32_t (*${name})(PP_Resource resource_array)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9971724 "GetAt"
	public explicit_type "/** * Gets the element at the specified position. * Note: It doesn't add a reference to the returned resource for the caller. * * @param[in] resource_array The resource array. * @param[in] index An integer indicating a position in the array. * * @return A <code>PP_Resource</code>. Returns 0 if the index is out of range. */ PP_Resource (*)(PP_Resource resource_array, uint32_t index)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Gets the element at the specified position.
   * Note: It doesn't add a reference to the returned resource for the caller.
   *
   * @param[in] resource_array The resource array.
   * @param[in] index An integer indicating a position in the array.
   *
   * @return A <code>PP_Resource</code>. Returns 0 if the index is out of range.
   */
  PP_Resource (*${name})(PP_Resource resource_array, uint32_t index)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2764812 "PPB_ResourceArray_Dev"
      visibility package stereotype "typedef" base_type class_ref 2764684 // PPB_ResourceArray_Dev_0_1
      cpp_decl "${comment}typedef struct ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 5202188 // <dependency>
	relation 5202060 -_->
	  a default
	    cpp default "#include in source"
	    classrelation_ref 5202188 // <dependency>
	  b parent class_ref 2764684 // PPB_ResourceArray_Dev_0_1
      end
    end

    class 2764940 "PP_ScrollBy_Dev"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}
};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @file
 * This file defines the <code>PPB_Buffer_Dev</code> interface.
 
*
 * @addtogroup Enums
 * @{"
      attribute 9971852 "PP_SCROLLBY_PIXEL"
	public type class_ref 2764940 // PP_ScrollBy_Dev
	init_value " 0"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9971980 "PP_SCROLLBY_LINE"
	public type class_ref 2764940 // PP_ScrollBy_Dev
	init_value " 1"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9972108 "PP_SCROLLBY_PAGE"
	public type class_ref 2764940 // PP_ScrollBy_Dev
	init_value " 2"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9972236 "PP_SCROLLBY_DOCUMENT"
	public type class_ref 2764940 // PP_ScrollBy_Dev
	init_value " 3
"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2765068 "PPB_Scrollbar_Dev_0_5"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @}
 
*
 * @addtogroup Interfaces
 * @{
 
*
 * The interface for a scrollbar.  A scrollbar is a widget, so the functions
 * in PPB_Widget can also be used with scrollbar objects."
      attribute 9972364 "Create"
	public explicit_type "/** * Create a new scrollbar. Returns 0 if the instance is invalid. */ PP_Resource (*)(PP_Instance instance, PP_Bool vertical)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  /**
   * Create a new scrollbar.  Returns 0 if the instance is invalid.
   */
  PP_Resource (*${name})(PP_Instance instance, PP_Bool vertical)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9972492 "IsScrollbar"
	public explicit_type "/** * Returns PP_TRUE if the given resource is a Scrollbar. Returns PP_FALSE if * the resource is invalid or some type other than a scrollbar. */ PP_Bool (*)(PP_Resource resource)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Returns PP_TRUE if the given resource is a Scrollbar. Returns PP_FALSE if
   * the resource is invalid or some type other than a scrollbar.
   */
  PP_Bool (*${name})(PP_Resource resource)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9972620 "GetThickness"
	public explicit_type "/** * Gets the thickness of a scrollbar. */ uint32_t (*)(PP_Resource resource)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Gets the thickness of a scrollbar.
   */
  uint32_t (*${name})(PP_Resource resource)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9972748 "IsOverlay"
	public explicit_type "/** * Returns PP_TRUE if the system scrollbar style is an overlap scrollbar. */ PP_Bool (*)(PP_Resource scrollbar)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Returns PP_TRUE if the system scrollbar style is an overlap scrollbar.
   */
  PP_Bool (*${name})(PP_Resource scrollbar)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9972876 "GetValue"
	public explicit_type "/** * Gets the value of the scrollbar. */ uint32_t (*)(PP_Resource scrollbar)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Gets the value of the scrollbar.
   */
  uint32_t (*${name})(PP_Resource scrollbar)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9973004 "SetValue"
	public explicit_type "/** * Sets the value of the scrollbar. */ void (*)(PP_Resource scrollbar, uint32_t value)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Sets the value of the scrollbar.
   */
  void (*${name})(PP_Resource scrollbar, uint32_t value)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9973132 "SetDocumentSize"
	public explicit_type "/** * Set the document size (i.e. total length of the region that's being * scrolled). */ void (*)(PP_Resource scrollbar, uint32_t size)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Set the document size (i.e. total length of the region that's being
   * scrolled).
   */
  void (*${name})(PP_Resource scrollbar, uint32_t size)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9973260 "SetTickMarks"
	public explicit_type "/** * Updates the tickmarks. Only valid for vertical scrollbars. \"tick_marks\" * contains \"count\" PP_Rect objects. */ void (*)(PP_Resource scrollbar, const struct PP_Rect tick_marks[], uint32_t count)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Updates the tickmarks.  Only valid for vertical scrollbars.  \"tick_marks\"
   * contains \"count\" PP_Rect objects.
   */
  void (*${name})(PP_Resource scrollbar,
                       const struct PP_Rect tick_marks[],
                       uint32_t count)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9973388 "ScrollBy"
	public explicit_type "/** * Scroll by \"multiplier\" pixels/lines/pages units. Positive values are * forward and negative are backward. If \"unit\" is document then any positive * value goes to the end while any negative value goes to the beginning. */ void (*)(PP_Resource scrollbar, PP_ScrollBy_Dev unit, int32_t multiplier)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Scroll by \"multiplier\" pixels/lines/pages units.  Positive values are
   * forward and negative are backward.  If \"unit\" is document then any positive
   * value goes to the end while any negative value goes to the beginning.
   */
  void (*${name})(PP_Resource scrollbar,
                   PP_ScrollBy_Dev unit,
                   int32_t multiplier)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2765196 "PPB_Scrollbar_Dev"
      visibility package stereotype "typedef" base_type class_ref 2765068 // PPB_Scrollbar_Dev_0_5
      cpp_decl "${comment}typedef struct ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 5202316 // <dependency>
	relation 5202188 -_->
	  a default
	    cpp default "#include in source"
	    classrelation_ref 5202316 // <dependency>
	  b parent class_ref 2765068 // PPB_Scrollbar_Dev_0_5
      end
    end

    class 2765324 "PPB_Testing_Dev_0_91"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @file
 * This file contains interface functions used for unit testing. Do not use in
 * production code. They are not guaranteed to be available in normal plugin
 * environments so you should not depend on them.
 
*
 * @addtogroup Interfaces
 * @{"
      attribute 9973516 "ReadImageData"
	public explicit_type "/** * Reads the bitmap data out of the backing store for the given * DeviceContext2D and into the given image. If the data was successfully * read, it will return PP_TRUE. * * This function should not generally be necessary for normal plugin * operation. If you want to update portions of a device, the expectation is * that you will either regenerate the data, or maintain a backing store * pushing updates to the device from your backing store via PaintImageData. * Using this function will introduce an extra copy which will make your * plugin slower. In some cases, this may be a very expensive operation (it * may require slow cross-process transitions or graphics card readbacks). * * Data will be read into the image starting at |top_left| in the device * context, and proceeding down and to the right for as many pixels as the * image is large. If any part of the image bound would fall outside of the * backing store of the device if positioned at |top_left|, this function * will fail and return PP_FALSE. * * The image format must be of the format * PPB_ImageData.GetNativeImageDataFormat() or this function will fail and * return PP_FALSE. * * The returned image data will represent the current status of the backing * store. This will not include any paint, scroll, or replace operations * that have not yet been flushed; these operations are only reflected in * the backing store (and hence ReadImageData) until after a Flush() * operation has completed. */ PP_Bool (*)(PP_Resource device_context_2d, PP_Resource image, const struct PP_Point* top_left)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  /**
   * Reads the bitmap data out of the backing store for the given
   * DeviceContext2D and into the given image. If the data was successfully
   * read, it will return PP_TRUE.
   *
   * This function should not generally be necessary for normal plugin
   * operation. If you want to update portions of a device, the expectation is
   * that you will either regenerate the data, or maintain a backing store
   * pushing updates to the device from your backing store via PaintImageData.
   * Using this function will introduce an extra copy which will make your
   * plugin slower. In some cases, this may be a very expensive operation (it
   * may require slow cross-process transitions or graphics card readbacks).
   *
   * Data will be read into the image starting at |top_left| in the device
   * context, and proceeding down and to the right for as many pixels as the
   * image is large. If any part of the image bound would fall outside of the
   * backing store of the device if positioned at |top_left|, this function
   * will fail and return PP_FALSE.
   *
   * The image format must be of the format
   * PPB_ImageData.GetNativeImageDataFormat() or this function will fail and
   * return PP_FALSE.
   *
   * The returned image data will represent the current status of the backing
   * store. This will not include any paint, scroll, or replace operations
   * that have not yet been flushed; these operations are only reflected in
   * the backing store (and hence ReadImageData) until after a Flush()
   * operation has completed.
   */
  PP_Bool (*${name})(PP_Resource device_context_2d,
                           PP_Resource image,
                           const struct PP_Point* top_left)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9973644 "RunMessageLoop"
	public explicit_type "/** * Runs a nested message loop. The plugin will be reentered from this call. * This function is used for unit testing the API. The normal pattern is to * issue some asynchronous call that has a callback. Then you call * RunMessageLoop which will suspend the plugin and go back to processing * messages, giving the asynchronous operation time to complete. In your * callback, you save the data and call QuitMessageLoop, which will then * pop back up and continue with the test. This avoids having to write a * complicated state machine for simple tests for asynchronous APIs. */ void (*)(PP_Instance instance)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Runs a nested message loop. The plugin will be reentered from this call.
   * This function is used for unit testing the API. The normal pattern is to
   * issue some asynchronous call that has a callback. Then you call
   * RunMessageLoop which will suspend the plugin and go back to processing
   * messages, giving the asynchronous operation time to complete. In your
   * callback, you save the data and call QuitMessageLoop, which will then
   * pop back up and continue with the test. This avoids having to write a
   * complicated state machine for simple tests for asynchronous APIs.
   */
  void (*${name})(PP_Instance instance)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9973772 "QuitMessageLoop"
	public explicit_type "/** * Posts a quit message for the outermost nested message loop. Use this to * exit and return back to the caller after you call RunMessageLoop. */ void (*)(PP_Instance instance)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Posts a quit message for the outermost nested message loop. Use this to
   * exit and return back to the caller after you call RunMessageLoop.
   */
  void (*${name})(PP_Instance instance)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9973900 "GetLiveObjectsForInstance"
	public explicit_type "/** * Returns the number of live objects (resources + strings + objects) * associated with this plugin instance. Used for detecting leaks. Returns * (uint32_t)-1 on failure. */ uint32_t (*)(PP_Instance instance)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Returns the number of live objects (resources + strings + objects)
   * associated with this plugin instance. Used for detecting leaks. Returns
   * (uint32_t)-1 on failure.
   */
  uint32_t (*${name})(PP_Instance instance)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9974028 "IsOutOfProcess"
	public explicit_type "/** * Returns PP_TRUE if the plugin is running out-of-process, PP_FALSE * otherwise. */ PP_Bool (*)(void)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Returns PP_TRUE if the plugin is running out-of-process, PP_FALSE
   * otherwise.
   */
  PP_Bool (*${name})(void)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9974156 "SimulateInputEvent"
	public explicit_type "/** * Passes the input event to the browser, which sends it back to the * plugin. The plugin should implement PPP_InputEvent and register for * the input event type. * * This method sends an input event through the browser just as if it had * come from the user. If the browser determines that it is an event for the * plugin, it will be sent to be handled by the plugin's PPP_InputEvent * interface. When generating mouse events, make sure the position is within * the plugin's area on the page. When generating a keyboard event, make sure * the plugin is focused. * * Note that the browser may generate extra input events in order to * maintain certain invariants, such as always having a \"mouse enter\" event * before any other mouse event. Furthermore, the event the plugin receives * after sending a simulated event will be slightly different from the * original event. The browser may change the timestamp, add modifiers, and * slightly alter the mouse position, due to coordinate transforms it * performs. */ void (*)(PP_Instance instance, PP_Resource input_event)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Passes the input event to the browser, which sends it back to the
   * plugin. The plugin should implement PPP_InputEvent and register for
   * the input event type.
   *
   * This method sends an input event through the browser just as if it had
   * come from the user. If the browser determines that it is an event for the
   * plugin, it will be sent to be handled by the plugin's PPP_InputEvent
   * interface. When generating mouse events, make sure the position is within
   * the plugin's area on the page. When generating a keyboard event, make sure
   * the plugin is focused.
   *
   * Note that the browser may generate extra input events in order to
   * maintain certain invariants, such as always having a \"mouse enter\" event
   * before any other mouse event. Furthermore, the event the plugin receives
   * after sending a simulated event will be slightly different from the
   * original event. The browser may change the timestamp, add modifiers, and
   * slightly alter the mouse position, due to coordinate transforms it
   * performs.
   */
  void (*${name})(PP_Instance instance, PP_Resource input_event)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9974284 "GetDocumentURL"
	public explicit_type "PP_Var (*)(PP_Instance instance, struct PP_URLComponents_Dev* components)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const} PP_Var (*${name})(PP_Instance instance,
                                  struct PP_URLComponents_Dev* components)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9974412 "GetLiveVars"
	public explicit_type "/** * Fetches up to |array_size| active PP_Vars in the tracker. Returns the * number of vars in the tracker. The active vars are written to |live_vars| * contiguously starting at index 0. The vars are not in any particular order. * If the number of live vars is greater than |array_size|, then an arbitrary * subset of |array_size| vars is written to |live_vars|. The reference count * of the returned PP_Vars will *not* be affected by this call. */ uint32_t (*)(struct PP_Var live_vars[], uint32_t array_size)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Fetches up to |array_size| active PP_Vars in the tracker. Returns the
   * number of vars in the tracker. The active vars are written to |live_vars|
   * contiguously starting at index 0. The vars are not in any particular order.
   * If the number of live vars is greater than |array_size|, then an arbitrary
   * subset of |array_size| vars is written to |live_vars|. The reference count
   * of the returned PP_Vars will *not* be affected by this call.
   */
  uint32_t (*${name})(struct PP_Var live_vars[], uint32_t array_size)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2765452 "PPB_Testing_Dev"
      visibility package stereotype "typedef" base_type class_ref 2765324 // PPB_Testing_Dev_0_91
      cpp_decl "${comment}typedef struct ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 5202444 // <dependency>
	relation 5202316 -_->
	  a default
	    cpp default "#include in source"
	    classrelation_ref 5202444 // <dependency>
	  b parent class_ref 2765324 // PPB_Testing_Dev_0_91
      end
    end

    class 2765580 "PPB_Testing_Dev_0_7"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      attribute 9974540 "ReadImageData"
	public explicit_type "PP_Bool (*)(PP_Resource device_context_2d, PP_Resource image, const struct PP_Point* top_left)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  PP_Bool (*${name})(PP_Resource device_context_2d,
                           PP_Resource image,
                           const struct PP_Point* top_left)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9974668 "RunMessageLoop"
	public explicit_type "void (*)(PP_Instance instance)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  void (*${name})(PP_Instance instance)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9974796 "QuitMessageLoop"
	public explicit_type "void (*)(PP_Instance instance)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  void (*${name})(PP_Instance instance)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9974924 "GetLiveObjectsForInstance"
	public explicit_type "uint32_t (*)(PP_Instance instance)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  uint32_t (*${name})(PP_Instance instance)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9975052 "IsOutOfProcess"
	public explicit_type "PP_Bool (*)(void)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  PP_Bool (*${name})(void)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2765708 "PPB_Testing_Dev_0_8"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      attribute 9975180 "ReadImageData"
	public explicit_type "PP_Bool (*)(PP_Resource device_context_2d, PP_Resource image, const struct PP_Point* top_left)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  PP_Bool (*${name})(PP_Resource device_context_2d,
                           PP_Resource image,
                           const struct PP_Point* top_left)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9975308 "RunMessageLoop"
	public explicit_type "void (*)(PP_Instance instance)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  void (*${name})(PP_Instance instance)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9975436 "QuitMessageLoop"
	public explicit_type "void (*)(PP_Instance instance)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  void (*${name})(PP_Instance instance)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9975564 "GetLiveObjectsForInstance"
	public explicit_type "uint32_t (*)(PP_Instance instance)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  uint32_t (*${name})(PP_Instance instance)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9975692 "IsOutOfProcess"
	public explicit_type "PP_Bool (*)(void)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  PP_Bool (*${name})(void)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9975820 "SimulateInputEvent"
	public explicit_type "void (*)(PP_Instance instance, PP_Resource input_event)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  void (*${name})(PP_Instance instance, PP_Resource input_event)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2765836 "PPB_Testing_Dev_0_9"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      attribute 9975948 "ReadImageData"
	public explicit_type "PP_Bool (*)(PP_Resource device_context_2d, PP_Resource image, const struct PP_Point* top_left)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  PP_Bool (*${name})(PP_Resource device_context_2d,
                           PP_Resource image,
                           const struct PP_Point* top_left)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9976076 "RunMessageLoop"
	public explicit_type "void (*)(PP_Instance instance)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  void (*${name})(PP_Instance instance)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9976204 "QuitMessageLoop"
	public explicit_type "void (*)(PP_Instance instance)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  void (*${name})(PP_Instance instance)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9976332 "GetLiveObjectsForInstance"
	public explicit_type "uint32_t (*)(PP_Instance instance)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  uint32_t (*${name})(PP_Instance instance)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9976460 "IsOutOfProcess"
	public explicit_type "PP_Bool (*)(void)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  PP_Bool (*${name})(void)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9976588 "SimulateInputEvent"
	public explicit_type "void (*)(PP_Instance instance, PP_Resource input_event)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  void (*${name})(PP_Instance instance, PP_Resource input_event)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9976716 "GetDocumentURL"
	public explicit_type "PP_Var (*)(PP_Instance instance, struct PP_URLComponents_Dev* components)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const} PP_Var (*${name})(PP_Instance instance,
                                  struct PP_URLComponents_Dev* components)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2765964 "PP_TextInput_Type"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}
};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @file
 * This file defines the <code>PPB_TextInput_Dev</code> interface.
 
*
 * @addtogroup Enums
 * @{
 
*
 * PP_TextInput_Type is used to indicate the status of a plugin in regard to
 * text input."
      attribute 9976844 "PP_TEXTINPUT_TYPE_NONE"
	public type class_ref 2765964 // PP_TextInput_Type
	init_value " 0"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9976972 "PP_TEXTINPUT_TYPE_TEXT"
	public type class_ref 2765964 // PP_TextInput_Type
	init_value " 1"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9977100 "PP_TEXTINPUT_TYPE_PASSWORD"
	public type class_ref 2765964 // PP_TextInput_Type
	init_value " 2"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9977228 "PP_TEXTINPUT_TYPE_SEARCH"
	public type class_ref 2765964 // PP_TextInput_Type
	init_value " 3"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9977356 "PP_TEXTINPUT_TYPE_EMAIL"
	public type class_ref 2765964 // PP_TextInput_Type
	init_value " 4"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9977484 "PP_TEXTINPUT_TYPE_NUMBER"
	public type class_ref 2765964 // PP_TextInput_Type
	init_value " 5"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9977612 "PP_TEXTINPUT_TYPE_TELEPHONE"
	public type class_ref 2765964 // PP_TextInput_Type
	init_value " 6"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9977740 "PP_TEXTINPUT_TYPE_URL"
	public type class_ref 2765964 // PP_TextInput_Type
	init_value " 7
"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2766092 "PPB_TextInput_Dev_0_2"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @}
 
*
 * @addtogroup Interfaces
 * @{
 
*
 * <code>PPB_TextInput_Dev</code> provides a set of functions for giving hints
 * to the browser about the text input status of plugins, and functions for
 * controlling input method editors (IMEs)."
      attribute 9977868 "SetTextInputType"
	public explicit_type "/** * Informs the browser about the current text input mode of the plugin. * Typical use of this information in the browser is to properly * display/suppress tools for supporting text inputs (such as virtual * keyboards in touch screen based devices, or input method editors often * used for composing East Asian characters). */ void (*)(PP_Instance instance, PP_TextInput_Type type)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  /**
   * Informs the browser about the current text input mode of the plugin.
   * Typical use of this information in the browser is to properly
   * display/suppress tools for supporting text inputs (such as virtual
   * keyboards in touch screen based devices, or input method editors often
   * used for composing East Asian characters).
   */
  void (*${name})(PP_Instance instance, PP_TextInput_Type type)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9977996 "UpdateCaretPosition"
	public explicit_type "/** * Informs the browser about the coordinates of the text input caret and the * bounding box of the text input area. Typical use of this information in * the browser is to layout IME windows etc. */ void (*)(PP_Instance instance, const struct PP_Rect* caret, const struct PP_Rect* bounding_box)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Informs the browser about the coordinates of the text input caret and the
   * bounding box of the text input area. Typical use of this information in
   * the browser is to layout IME windows etc.
   */
  void (*${name})(PP_Instance instance,
                              const struct PP_Rect* caret,
                              const struct PP_Rect* bounding_box)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9978124 "CancelCompositionText"
	public explicit_type "/** * Cancels the current composition in IME. */ void (*)(PP_Instance instance)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Cancels the current composition in IME.
   */
  void (*${name})(PP_Instance instance)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9978252 "UpdateSurroundingText"
	public explicit_type "/** * In response to the <code>PPP_TextInput_Dev::RequestSurroundingText</code> * call, informs the browser about the current text selection and surrounding * text. <code>text</code> is a UTF-8 string that contains the current range * of text selection in the plugin. <code>caret</code> is the byte-index of * the caret poisition within <code>text</code>. <code>anchor</code> is the * byte-index of the anchor position (i.e., if a range of text is selected, * it is the other edge of selection diffrent from <code>caret</code>. If * there are no selection, <code>anchor</code> is equal to <code>caret</code>. * * Typical use of this information in the browser is to enable \"reconversion\" * features of IME that puts back the already committed text into the * pre-commit composition state. Another use is to improve the precision * of suggestion of IME by taking the context into account (e.g., if the caret * looks to be on the begining of a sentense, suggest capital letters in a * virtual keyboard). * * When the focus is not on text, call this function setting <code>text</code> * to an empty string and <code>caret</code> and <code>anchor</code> to zero. * Also, the plugin should send the empty text when it does not want to reveal * the selection to IME (e.g., when the surrounding text is containing * password text). */ void (*)(PP_Instance instance, const char* text, uint32_t caret, uint32_t anchor)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * In response to the <code>PPP_TextInput_Dev::RequestSurroundingText</code>
   * call, informs the browser about the current text selection and surrounding
   * text. <code>text</code> is a UTF-8 string that contains the current range
   * of text selection in the plugin. <code>caret</code> is the byte-index of
   * the caret poisition within <code>text</code>. <code>anchor</code> is the
   * byte-index of the anchor position (i.e., if a range of text is selected,
   * it is the other edge of selection diffrent from <code>caret</code>. If
   * there are no selection, <code>anchor</code> is equal to <code>caret</code>.
   *
   * Typical use of this information in the browser is to enable \"reconversion\"
   * features of IME that puts back the already committed text into the
   * pre-commit composition state. Another use is to improve the precision
   * of suggestion of IME by taking the context into account (e.g., if the caret
   * looks to be on the begining of a sentense, suggest capital letters in a
   * virtual keyboard).
   *
   * When the focus is not on text, call this function setting <code>text</code>
   * to an empty string and <code>caret</code> and <code>anchor</code> to zero.
   * Also, the plugin should send the empty text when it does not want to reveal
   * the selection to IME (e.g., when the surrounding text is containing
   * password text).
   */
  void (*${name})(PP_Instance instance,
                                const char* text,
                                uint32_t caret,
                                uint32_t anchor)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9978380 "SelectionChanged"
	public explicit_type "/** * Informs the browser when a range of text selection is changed in a plugin. * When the browser needs to know the content of the updated selection, it * pings back by <code>PPP_TextInput_Dev::RequestSurroundingText</code>. The * plugin then should send the information with * <code>UpdateSurroundingText</code>. */ void (*)(PP_Instance instance)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Informs the browser when a range of text selection is changed in a plugin.
   * When the browser needs to know the content of the updated selection, it
   * pings back by <code>PPP_TextInput_Dev::RequestSurroundingText</code>. The
   * plugin then should send the information with
   * <code>UpdateSurroundingText</code>.
   */
  void (*${name})(PP_Instance instance)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2766220 "PPB_TextInput_Dev"
      visibility package stereotype "typedef" base_type class_ref 2766092 // PPB_TextInput_Dev_0_2
      cpp_decl "${comment}typedef struct ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 5202572 // <dependency>
	relation 5202444 -_->
	  a default
	    cpp default "#include in source"
	    classrelation_ref 5202572 // <dependency>
	  b parent class_ref 2766092 // PPB_TextInput_Dev_0_2
      end
    end

    class 2766348 "PPB_TextInput_Dev_0_1"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      attribute 9978508 "SetTextInputType"
	public explicit_type "void (*)(PP_Instance instance, PP_TextInput_Type type)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  void (*${name})(PP_Instance instance, PP_TextInput_Type type)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9978636 "UpdateCaretPosition"
	public explicit_type "void (*)(PP_Instance instance, const struct PP_Rect* caret, const struct PP_Rect* bounding_box)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  void (*${name})(PP_Instance instance,
                              const struct PP_Rect* caret,
                              const struct PP_Rect* bounding_box)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9978764 "CancelCompositionText"
	public explicit_type "void (*)(PP_Instance instance)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  void (*${name})(PP_Instance instance)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2766476 "PPB_Trace_Event_Dev_0_1"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @file
 * This file defines the <code>PPB_Trace_Event</code> interface. It is meant
 * to be used in plugins as the API that trace macros from trace_event.h use.
 
*
 * @addtogroup Interfaces
 * @{"
      attribute 9978892 "GetCategoryEnabled"
	public explicit_type "/** * Gets a pointer to a character for identifying a category name in the * tracing system as well as for being able to early exit in client-side * tracing code. * * NB: This mem_t return value should technically be const, but return values * for Pepper IDL of mem_t type are not const. The same is true for the arg * |category_enabled| for AddTraceEvent. */ void* (*)(const char* category_name)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  /**
   * Gets a pointer to a character for identifying a category name in the
   * tracing system as well as for being able to early exit in client-side
   * tracing code.
   *
   * NB: This mem_t return value should technically be const, but return values
   * for Pepper IDL of mem_t type are not const.  The same is true for the arg
   * |category_enabled| for AddTraceEvent.
   */
  void* (*${name})(const char* category_name)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9979020 "AddTraceEvent"
	public explicit_type "/** * Adds a trace event to the platform tracing system. This function call is * usually the result of a TRACE_* macro from trace_event.h when tracing and * the category of the particular trace are enabled. It is not advisable to * call this function on its own; it is really only meant to be used by the * trace macros. */ void (*)(int8_t phase, const void* category_enabled, const char* name, uint64_t id, uint32_t num_args, const char* arg_names[], const uint8_t arg_types[], const uint64_t arg_values[], uint8_t flags)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Adds a trace event to the platform tracing system. This function call is
   * usually the result of a TRACE_* macro from trace_event.h when tracing and
   * the category of the particular trace are enabled. It is not advisable to
   * call this function on its own; it is really only meant to be used by the
   * trace macros.
   */
  void (*${name})(int8_t phase,
                        const void* category_enabled,
                        const char* name,
                        uint64_t id,
                        uint32_t num_args,
                        const char* arg_names[],
                        const uint8_t arg_types[],
                        const uint64_t arg_values[],
                        uint8_t flags)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9979148 "SetThreadName"
	public explicit_type "/** * Sets the thread name of the calling thread in the tracing system so it will * show up properly in chrome://tracing. */ void (*)(const char* thread_name)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Sets the thread name of the calling thread in the tracing system so it will
   * show up properly in chrome://tracing.
   */
  void (*${name})(const char* thread_name)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2766604 "PPB_Trace_Event_Dev"
      visibility package stereotype "typedef" base_type class_ref 2766476 // PPB_Trace_Event_Dev_0_1
      cpp_decl "${comment}typedef struct ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 5202700 // <dependency>
	relation 5202572 -_->
	  a default
	    cpp default "#include in source"
	    classrelation_ref 5202700 // <dependency>
	  b parent class_ref 2766476 // PPB_Trace_Event_Dev_0_1
      end
    end

    class 2766732 "PP_TrueTypeFontFamily_Dev"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}
};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @file
 * This file defines the <code>PPB_TrueTypeFont_Dev</code> interface. This
 * interface exposes font table data for 'sfnt' fonts on the host system. These
 * include TrueType and OpenType fonts.
 
*
 * @addtogroup Enums
 * @{
 
*
 * The PP_TrueTypeFontFamily_Dev defines generic font families. These can be
 * used to create generic fonts consistent with the user's browser settings."
      attribute 9979276 "PP_TRUETYPEFONTFAMILY_SERIF"
	public type class_ref 2766732 // PP_TrueTypeFontFamily_Dev
	init_value " 0"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9979404 "PP_TRUETYPEFONTFAMILY_SANSSERIF"
	public type class_ref 2766732 // PP_TrueTypeFontFamily_Dev
	init_value " 1"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9979532 "PP_TRUETYPEFONTFAMILY_CURSIVE"
	public type class_ref 2766732 // PP_TrueTypeFontFamily_Dev
	init_value " 2"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9979660 "PP_TRUETYPEFONTFAMILY_FANTASY"
	public type class_ref 2766732 // PP_TrueTypeFontFamily_Dev
	init_value " 3"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9979788 "PP_TRUETYPEFONTFAMILY_MONOSPACE"
	public type class_ref 2766732 // PP_TrueTypeFontFamily_Dev
	init_value " 4
"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2766860 "PP_TrueTypeFontStyle_Dev"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}
};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * The PP_TrueTypeFontStyle_Dev defines font styles."
      attribute 9979916 "PP_TRUETYPEFONTSTYLE_NORMAL"
	public type class_ref 2766860 // PP_TrueTypeFontStyle_Dev
	init_value " 0"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9980044 "PP_TRUETYPEFONTSTYLE_ITALIC"
	public type class_ref 2766860 // PP_TrueTypeFontStyle_Dev
	init_value " 1
"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2766988 "PP_TrueTypeFontWeight_Dev"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}
};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * The PP_TrueTypeFontWeight_Dev defines font weights."
      attribute 9980172 "PP_TRUETYPEFONTWEIGHT_THIN"
	public type class_ref 2766988 // PP_TrueTypeFontWeight_Dev
	init_value " 100"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9980300 "PP_TRUETYPEFONTWEIGHT_ULTRALIGHT"
	public type class_ref 2766988 // PP_TrueTypeFontWeight_Dev
	init_value " 200"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9980428 "PP_TRUETYPEFONTWEIGHT_LIGHT"
	public type class_ref 2766988 // PP_TrueTypeFontWeight_Dev
	init_value " 300"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9980556 "PP_TRUETYPEFONTWEIGHT_NORMAL"
	public type class_ref 2766988 // PP_TrueTypeFontWeight_Dev
	init_value " 400"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9980684 "PP_TRUETYPEFONTWEIGHT_MEDIUM"
	public type class_ref 2766988 // PP_TrueTypeFontWeight_Dev
	init_value " 500"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9980812 "PP_TRUETYPEFONTWEIGHT_SEMIBOLD"
	public type class_ref 2766988 // PP_TrueTypeFontWeight_Dev
	init_value " 600"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9980940 "PP_TRUETYPEFONTWEIGHT_BOLD"
	public type class_ref 2766988 // PP_TrueTypeFontWeight_Dev
	init_value " 700"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9981068 "PP_TRUETYPEFONTWEIGHT_ULTRABOLD"
	public type class_ref 2766988 // PP_TrueTypeFontWeight_Dev
	init_value " 800"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9981196 "PP_TRUETYPEFONTWEIGHT_HEAVY"
	public type class_ref 2766988 // PP_TrueTypeFontWeight_Dev
	init_value " 900
"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2767116 "PP_TrueTypeFontWidth_Dev"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}
};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * The PP_TrueTypeFontWidth_Dev defines font widths."
      attribute 9981324 "PP_TRUETYPEFONTWIDTH_ULTRACONDENSED"
	public type class_ref 2767116 // PP_TrueTypeFontWidth_Dev
	init_value " 0"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9981452 "PP_TRUETYPEFONTWIDTH_EXTRACONDENSED"
	public type class_ref 2767116 // PP_TrueTypeFontWidth_Dev
	init_value " 1"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9981580 "PP_TRUETYPEFONTWIDTH_CONDENSED"
	public type class_ref 2767116 // PP_TrueTypeFontWidth_Dev
	init_value " 2"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9981708 "PP_TRUETYPEFONTWIDTH_SEMICONDENSED"
	public type class_ref 2767116 // PP_TrueTypeFontWidth_Dev
	init_value " 3"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9981836 "PP_TRUETYPEFONTWIDTH_NORMAL"
	public type class_ref 2767116 // PP_TrueTypeFontWidth_Dev
	init_value " 4"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9981964 "PP_TRUETYPEFONTWIDTH_SEMIEXPANDED"
	public type class_ref 2767116 // PP_TrueTypeFontWidth_Dev
	init_value " 5"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9982092 "PP_TRUETYPEFONTWIDTH_EXPANDED"
	public type class_ref 2767116 // PP_TrueTypeFontWidth_Dev
	init_value " 6"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9982220 "PP_TRUETYPEFONTWIDTH_EXTRAEXPANDED"
	public type class_ref 2767116 // PP_TrueTypeFontWidth_Dev
	init_value " 7"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9982348 "PP_TRUETYPEFONTWIDTH_ULTRAEXPANDED"
	public type class_ref 2767116 // PP_TrueTypeFontWidth_Dev
	init_value " 8
"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2767244 "PP_TrueTypeFontCharset_Dev"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}
};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * The PP_TrueTypeFontCharset defines font character sets."
      attribute 9982476 "PP_TRUETYPEFONTCHARSET_ANSI"
	public type class_ref 2767244 // PP_TrueTypeFontCharset_Dev
	init_value " 0"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9982604 "PP_TRUETYPEFONTCHARSET_DEFAULT"
	public type class_ref 2767244 // PP_TrueTypeFontCharset_Dev
	init_value " 1"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9982732 "PP_TRUETYPEFONTCHARSET_SYMBOL"
	public type class_ref 2767244 // PP_TrueTypeFontCharset_Dev
	init_value " 2"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9982860 "PP_TRUETYPEFONTCHARSET_MAC"
	public type class_ref 2767244 // PP_TrueTypeFontCharset_Dev
	init_value " 77"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9982988 "PP_TRUETYPEFONTCHARSET_SHIFTJIS"
	public type class_ref 2767244 // PP_TrueTypeFontCharset_Dev
	init_value " 128"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9983116 "PP_TRUETYPEFONTCHARSET_HANGUL"
	public type class_ref 2767244 // PP_TrueTypeFontCharset_Dev
	init_value " 129"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9983244 "PP_TRUETYPEFONTCHARSET_JOHAB"
	public type class_ref 2767244 // PP_TrueTypeFontCharset_Dev
	init_value " 130"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9983372 "PP_TRUETYPEFONTCHARSET_GB2312"
	public type class_ref 2767244 // PP_TrueTypeFontCharset_Dev
	init_value " 134"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9983500 "PP_TRUETYPEFONTCHARSET_CHINESEBIG5"
	public type class_ref 2767244 // PP_TrueTypeFontCharset_Dev
	init_value " 136"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9983628 "PP_TRUETYPEFONTCHARSET_GREEK"
	public type class_ref 2767244 // PP_TrueTypeFontCharset_Dev
	init_value " 161"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9983756 "PP_TRUETYPEFONTCHARSET_TURKISH"
	public type class_ref 2767244 // PP_TrueTypeFontCharset_Dev
	init_value " 162"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9983884 "PP_TRUETYPEFONTCHARSET_VIETNAMESE"
	public type class_ref 2767244 // PP_TrueTypeFontCharset_Dev
	init_value " 163"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9984012 "PP_TRUETYPEFONTCHARSET_HEBREW"
	public type class_ref 2767244 // PP_TrueTypeFontCharset_Dev
	init_value " 177"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9984140 "PP_TRUETYPEFONTCHARSET_ARABIC"
	public type class_ref 2767244 // PP_TrueTypeFontCharset_Dev
	init_value " 178"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9984268 "PP_TRUETYPEFONTCHARSET_BALTIC"
	public type class_ref 2767244 // PP_TrueTypeFontCharset_Dev
	init_value " 186"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9984396 "PP_TRUETYPEFONTCHARSET_RUSSIAN"
	public type class_ref 2767244 // PP_TrueTypeFontCharset_Dev
	init_value " 204"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9984524 "PP_TRUETYPEFONTCHARSET_THAI"
	public type class_ref 2767244 // PP_TrueTypeFontCharset_Dev
	init_value " 222"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9984652 "PP_TRUETYPEFONTCHARSET_EASTEUROPE"
	public type class_ref 2767244 // PP_TrueTypeFontCharset_Dev
	init_value " 238"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9984780 "PP_TRUETYPEFONTCHARSET_OEM"
	public type class_ref 2767244 // PP_TrueTypeFontCharset_Dev
	init_value " 255
"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2767372 "PP_TrueTypeFontDesc_Dev"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @}
 
*
 * @addtogroup Structs
 * @{
 
*
 * The <code>PP_TrueTypeFontDesc</code> structure describes a TrueType font. It
 * is passed to Create, and returned by Describe."
      classrelation 5202828 // family (<directional composition>)
	relation 5202700 *-->
	  a role_name "family" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}struct ${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5202828 // family (<directional composition>)
	  b parent class_ref 2741388 // PP_Var
      end

      classrelation 5202956 // generic_family (<directional composition>)
	relation 5202828 *-->
	  a role_name "generic_family" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5202956 // generic_family (<directional composition>)
	  b parent class_ref 2766732 // PP_TrueTypeFontFamily_Dev
      end

      classrelation 5203084 // style (<directional composition>)
	relation 5202956 *-->
	  a role_name "style" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5203084 // style (<directional composition>)
	  b parent class_ref 2766860 // PP_TrueTypeFontStyle_Dev
      end

      classrelation 5203212 // weight (<directional composition>)
	relation 5203084 *-->
	  a role_name "weight" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5203212 // weight (<directional composition>)
	  b parent class_ref 2766988 // PP_TrueTypeFontWeight_Dev
      end

      classrelation 5203340 // width (<directional composition>)
	relation 5203212 *-->
	  a role_name "width" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5203340 // width (<directional composition>)
	  b parent class_ref 2767116 // PP_TrueTypeFontWidth_Dev
      end

      classrelation 5203468 // charset (<directional composition>)
	relation 5203340 *-->
	  a role_name "charset" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5203468 // charset (<directional composition>)
	  b parent class_ref 2767244 // PP_TrueTypeFontCharset_Dev
      end

      classrelation 5203596 // padding (<directional composition>)
	relation 5203468 *-->
	  a role_name "padding" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5203596 // padding (<directional composition>)
	  b parent class_ref 2409996 // int32_t
      end
    end

    class 2767500 "PPB_TrueTypeFont_Dev_0_1"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @}
 
*
 * @addtogroup Interfaces
 * @{"
      attribute 9984908 "GetFontFamilies"
	public explicit_type "/** * Gets an array of TrueType font family names available on the host. * These names can be used to create a font from a specific family. * * @param[in] instance A <code>PP_Instance</code> requesting the family names. * @param[in] output A <code>PP_ArrayOutput</code> to hold the names. * The output is an array of PP_Vars, each holding a family name. * @param[in] callback A <code>PP_CompletionCallback</code> to be called upon * completion of GetFontFamilies. * * @return If >= 0, the number of family names returned, otherwise an error * code from <code>pp_errors.h</code>. */ int32_t (*)(PP_Instance instance, struct PP_ArrayOutput output, struct PP_CompletionCallback callback)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  /**
   * Gets an array of TrueType font family names available on the host.
   * These names can be used to create a font from a specific family.
   *
   * @param[in] instance A <code>PP_Instance</code> requesting the family names.
   * @param[in] output A <code>PP_ArrayOutput</code> to hold the names.
   * The output is an array of PP_Vars, each holding a family name.
   * @param[in] callback A <code>PP_CompletionCallback</code> to be called upon
   * completion of GetFontFamilies.
   *
   * @return If >= 0, the number of family names returned, otherwise an error
   * code from <code>pp_errors.h</code>.
   */
  int32_t (*${name})(PP_Instance instance,
                             struct PP_ArrayOutput output,
                             struct PP_CompletionCallback callback)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9985036 "Create"
	public explicit_type "/** * Creates a font resource matching the given font characteristics. The * resource id will be non-zero on success, or zero on failure. * * @param[in] instance A <code>PP_Instance</code> to own the font. * @param[in] desc A pointer to a <code>PP_TrueTypeFontDesc</code> describing * the font. */ PP_Resource (*)(PP_Instance instance, const struct PP_TrueTypeFontDesc_Dev* desc)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Creates a font resource matching the given font characteristics. The
   * resource id will be non-zero on success, or zero on failure.
   *
   * @param[in] instance A <code>PP_Instance</code> to own the font.
   * @param[in] desc A pointer to a <code>PP_TrueTypeFontDesc</code> describing
   * the font.
   */
  PP_Resource (*${name})(PP_Instance instance,
                        const struct PP_TrueTypeFontDesc_Dev* desc)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9985164 "IsFont"
	public explicit_type "/** * Determines if the given resource is a font. * * @param[in] resource A <code>PP_Resource</code> corresponding to a font. * * @return <code>PP_TRUE</code> if the resource is a * <code>PPB_TrueTypeFont_Dev</code>, <code>PP_FALSE</code> otherwise. */ PP_Bool (*)(PP_Resource resource)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Determines if the given resource is a font.
   *
   * @param[in] resource A <code>PP_Resource</code> corresponding to a font.
   *
   * @return <code>PP_TRUE</code> if the resource is a
   * <code>PPB_TrueTypeFont_Dev</code>, <code>PP_FALSE</code> otherwise.
   */
  PP_Bool (*${name})(PP_Resource resource)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9985292 "Describe"
	public explicit_type "/** * Returns a description of the given font resource. This description may * differ from the description passed to Create, reflecting the host's font * matching and fallback algorithm. * * @param[in] font A <code>PP_Resource</code> corresponding to a font. * @param[out] desc A pointer to a <code>PP_TrueTypeFontDesc</code> to hold * the description. The internal 'family' PP_Var should be set to undefined, * since this function overwrites the <code>PP_TrueTypeFontDesc</code>. After * successful completion, the family will be set to a PP_Var with a single * reference, which the caller must release after use. * @param[in] callback A <code>PP_CompletionCallback</code> to be called upon * completion of Describe. * * @return A return code from <code>pp_errors.h</code>. If an error code is * returned, the <code>PP_TrueTypeFontDesc</code> will be unchanged. */ int32_t (*)(PP_Resource font, struct PP_TrueTypeFontDesc_Dev* desc, struct PP_CompletionCallback callback)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Returns a description of the given font resource. This description may
   * differ from the description passed to Create, reflecting the host's font
   * matching and fallback algorithm.
   *
   * @param[in] font A <code>PP_Resource</code> corresponding to a font.
   * @param[out] desc A pointer to a <code>PP_TrueTypeFontDesc</code> to hold
   * the description. The internal 'family' PP_Var should be set to undefined,
   * since this function overwrites the <code>PP_TrueTypeFontDesc</code>. After
   * successful completion, the family will be set to a PP_Var with a single
   * reference, which the caller must release after use.
   * @param[in] callback A <code>PP_CompletionCallback</code> to be called upon
   * completion of Describe.
   *
   * @return A return code from <code>pp_errors.h</code>. If an error code is
   * returned, the <code>PP_TrueTypeFontDesc</code> will be unchanged.
   */
  int32_t (*${name})(PP_Resource font,
                      struct PP_TrueTypeFontDesc_Dev* desc,
                      struct PP_CompletionCallback callback)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9985420 "GetTableTags"
	public explicit_type "/** * Gets an array of identifying tags for each table in the font. * These tags can be used to request specific tables using GetTable. * * @param[in] font A <code>PP_Resource</code> corresponding to a font. * @param[in] output A <code>PP_ArrayOutput</code> to hold the tags. * The output is an array of 4 byte integers, each representing a table tag. * @param[in] callback A <code>PP_CompletionCallback</code> to be called upon * completion of GetTableTags. * * @return If >= 0, the number of table tags returned, otherwise an error * code from <code>pp_errors.h</code>. */ int32_t (*)(PP_Resource font, struct PP_ArrayOutput output, struct PP_CompletionCallback callback)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Gets an array of identifying tags for each table in the font.
   * These tags can be used to request specific tables using GetTable.
   *
   * @param[in] font A <code>PP_Resource</code> corresponding to a font.
   * @param[in] output A <code>PP_ArrayOutput</code> to hold the tags.
   * The output is an array of 4 byte integers, each representing a table tag.
   * @param[in] callback A <code>PP_CompletionCallback</code> to be called upon
   * completion of GetTableTags.
   *
   * @return If >= 0, the number of table tags returned, otherwise an error
   * code from <code>pp_errors.h</code>.
   */
  int32_t (*${name})(PP_Resource font,
                          struct PP_ArrayOutput output,
                          struct PP_CompletionCallback callback)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9985548 "GetTable"
	public explicit_type "/** * Copies the given font table into client memory. * * @param[in] font A <code>PP_Resource</code> corresponding to a font. * @param[in] table A 4 byte value indicating which table to copy. * For example, 'glyf' will cause the outline table to be copied into the * output array. A zero tag value will cause the entire font to be copied. * @param[in] offset The offset into the font table. * @param[in] max_data_length The maximum number of bytes to transfer from * <code>offset</code>. * @param[in] output A <code>PP_ArrayOutput</code> to hold the font data. * The output is an array of bytes. * @param[in] callback A <code>PP_CompletionCallback</code> to be called upon * completion of GetTable. * * @return If >= 0, the table size in bytes, otherwise an error code from * <code>pp_errors.h</code>. */ int32_t (*)(PP_Resource font, uint32_t table, int32_t offset, int32_t max_data_length, struct PP_ArrayOutput output, struct PP_CompletionCallback callback)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Copies the given font table into client memory.
   *
   * @param[in] font A <code>PP_Resource</code> corresponding to a font.
   * @param[in] table A 4 byte value indicating which table to copy.
   * For example, 'glyf' will cause the outline table to be copied into the
   * output array. A zero tag value will cause the entire font to be copied.
   * @param[in] offset The offset into the font table.
   * @param[in] max_data_length The maximum number of bytes to transfer from
   * <code>offset</code>.
   * @param[in] output A <code>PP_ArrayOutput</code> to hold the font data.
   * The output is an array of bytes.
   * @param[in] callback A <code>PP_CompletionCallback</code> to be called upon
   * completion of GetTable.
   *
   * @return If >= 0, the table size in bytes, otherwise an error code from
   * <code>pp_errors.h</code>.
   */
  int32_t (*${name})(PP_Resource font,
                      uint32_t table,
                      int32_t offset,
                      int32_t max_data_length,
                      struct PP_ArrayOutput output,
                      struct PP_CompletionCallback callback)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2767628 "PPB_TrueTypeFont_Dev"
      visibility package stereotype "typedef" base_type class_ref 2767500 // PPB_TrueTypeFont_Dev_0_1
      cpp_decl "${comment}typedef struct ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 5203724 // <dependency>
	relation 5203596 -_->
	  a default
	    cpp default "#include in source"
	    classrelation_ref 5203724 // <dependency>
	  b parent class_ref 2767500 // PPB_TrueTypeFont_Dev_0_1
      end
    end

    class 2767756 "PP_URLComponent_Dev"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @file
 * This file defines the <code>PPB_URLUtil_Dev</code> interface.
 
*
 * @addtogroup Structs
 * @{
 

 * A component specifies the range of the part of the URL. The begin specifies
 * the index into the string of the first character of that component. The len
 * specifies the length of that component.
 *
 * This range does not include any special delimiter for that component, so
 * the scheme doesn't include the trailing colon, the username and password
 * don't include the @ and :, the port doesn't include the colon, the query
 * doesn't include the ?, and the ref doesn't include the #.
 *
 * The exception is that the path *does* include the first /, since that's an
 * integral part of the path.
 *
 * If the component is not present at all, begin will be 0 and len will be -1.
 * If the component is present but empty, the length will be 0 instead. Example:
 *   http://foo/search    -> query = (0, -1)
 *   http://foo/search?   -> query = (18, 0)"
      classrelation 5203852 // begin (<directional composition>)
	relation 5203724 *-->
	  a role_name "begin" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5203852 // begin (<directional composition>)
	  b parent class_ref 2409996 // int32_t
      end

      classrelation 5203980 // len (<directional composition>)
	relation 5203852 *-->
	  a role_name "len" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5203980 // len (<directional composition>)
	  b parent class_ref 2409996 // int32_t
      end
    end

    class 2767884 "PP_URLComponents_Dev"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 5204108 // scheme (<directional composition>)
	relation 5203980 *-->
	  a role_name "scheme" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}struct ${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5204108 // scheme (<directional composition>)
	  b parent class_ref 2767756 // PP_URLComponent_Dev
      end

      classrelation 5204236 // username (<directional composition>)
	relation 5204108 *-->
	  a role_name "username" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}struct ${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5204236 // username (<directional composition>)
	  b parent class_ref 2767756 // PP_URLComponent_Dev
      end

      classrelation 5204364 // password (<directional composition>)
	relation 5204236 *-->
	  a role_name "password" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}struct ${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5204364 // password (<directional composition>)
	  b parent class_ref 2767756 // PP_URLComponent_Dev
      end

      classrelation 5204492 // host (<directional composition>)
	relation 5204364 *-->
	  a role_name "host" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}struct ${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5204492 // host (<directional composition>)
	  b parent class_ref 2767756 // PP_URLComponent_Dev
      end

      classrelation 5204620 // port (<directional composition>)
	relation 5204492 *-->
	  a role_name "port" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}struct ${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5204620 // port (<directional composition>)
	  b parent class_ref 2767756 // PP_URLComponent_Dev
      end

      classrelation 5204748 // path (<directional composition>)
	relation 5204620 *-->
	  a role_name "path" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}struct ${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5204748 // path (<directional composition>)
	  b parent class_ref 2767756 // PP_URLComponent_Dev
      end

      classrelation 5204876 // query (<directional composition>)
	relation 5204748 *-->
	  a role_name "query" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}struct ${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5204876 // query (<directional composition>)
	  b parent class_ref 2767756 // PP_URLComponent_Dev
      end

      classrelation 5205004 // ref (<directional composition>)
	relation 5204876 *-->
	  a role_name "ref" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}struct ${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5205004 // ref (<directional composition>)
	  b parent class_ref 2767756 // PP_URLComponent_Dev
      end
    end

    class 2768012 "PPB_URLUtil_Dev_0_6"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @}
 
*
 * @addtogroup Interfaces
 * @{
 

 * URL encoding: URLs are supplied to this interface as NULL-terminated 8-bit
 * strings. You can pass non-ASCII characters which will be interpreted as
 * UTF-8. Canonicalized URL strings returned by these functions will be ASCII
 * except for the reference fragment (stuff after the '#') which will be
 * encoded as UTF-8."
      attribute 9985676 "Canonicalize"
	public explicit_type "PP_Var (*)(struct PP_Var url, struct PP_URLComponents_Dev* components)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const} PP_Var (*${name})(struct PP_Var url,
                                struct PP_URLComponents_Dev* components)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9985804 "ResolveRelativeToURL"
	public explicit_type "PP_Var (*)( struct PP_Var base_url, struct PP_Var relative_string, struct PP_URLComponents_Dev* components)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const} PP_Var (*${name})(
      struct PP_Var base_url,
      struct PP_Var relative_string,
      struct PP_URLComponents_Dev* components)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9985932 "ResolveRelativeToDocument"
	public explicit_type "PP_Var (*)( PP_Instance instance, struct PP_Var relative_string, struct PP_URLComponents_Dev* components)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const} PP_Var (*${name})(
      PP_Instance instance,
      struct PP_Var relative_string,
      struct PP_URLComponents_Dev* components)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9986060 "IsSameSecurityOrigin"
	public explicit_type "/* * Checks whether the given two URLs are in the same security origin. Returns * FALSE if either of the URLs are invalid. */ PP_Bool (*)(struct PP_Var url_a, struct PP_Var url_b)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /*
   * Checks whether the given two URLs are in the same security origin. Returns
   * FALSE if either of the URLs are invalid.
   */
  PP_Bool (*${name})(struct PP_Var url_a, struct PP_Var url_b)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9986188 "DocumentCanRequest"
	public explicit_type "/* * Checks whether the document hosting the given plugin instance can access * the given URL according to the same origin policy of the browser. Returns * PP_FALSE if the instance or the URL is invalid. */ PP_Bool (*)(PP_Instance instance, struct PP_Var url)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /*
   * Checks whether the document hosting the given plugin instance can access
   * the given URL according to the same origin policy of the browser. Returns
   * PP_FALSE if the instance or the URL is invalid.
   */
  PP_Bool (*${name})(PP_Instance instance, struct PP_Var url)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9986316 "DocumentCanAccessDocument"
	public explicit_type "/* * Checks whether the document containing the |active| plugin instance can * access the document containing the |target| plugin instance according to * the security policy of the browser. This includes the same origin policy * and any cross-origin capabilities enabled by the document. If either of * the plugin instances are invalid, returns PP_FALSE. */ PP_Bool (*)(PP_Instance active, PP_Instance target)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /*
   * Checks whether the document containing the |active| plugin instance can
   * access the document containing the |target| plugin instance according to
   * the security policy of the browser. This includes the same origin policy
   * and any cross-origin capabilities enabled by the document. If either of
   * the plugin instances are invalid, returns PP_FALSE.
   */
  PP_Bool (*${name})(PP_Instance active, PP_Instance target)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9986444 "GetDocumentURL"
	public explicit_type "PP_Var (*)(PP_Instance instance, struct PP_URLComponents_Dev* components)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const} PP_Var (*${name})(PP_Instance instance,
                                  struct PP_URLComponents_Dev* components)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9986572 "GetPluginInstanceURL"
	public explicit_type "PP_Var (*)( PP_Instance instance, struct PP_URLComponents_Dev* components)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const} PP_Var (*${name})(
      PP_Instance instance,
      struct PP_URLComponents_Dev* components)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2768140 "PPB_URLUtil_Dev"
      visibility package stereotype "typedef" base_type class_ref 2768012 // PPB_URLUtil_Dev_0_6
      cpp_decl "${comment}typedef struct ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 5205132 // <dependency>
	relation 5205004 -_->
	  a default
	    cpp default "#include in source"
	    classrelation_ref 5205132 // <dependency>
	  b parent class_ref 2768012 // PPB_URLUtil_Dev_0_6
      end
    end

    class 2768268 "PPB_VarArray_Dev_0_1"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @file
 * This file defines the <code>PPB_VarArray_Dev</code> struct providing
 * a way to interact with array vars.
 
*
 * @addtogroup Interfaces
 * @{"
      attribute 9986700 "Create"
	public explicit_type "PP_Var (*)(void)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const} PP_Var (*${name})(void)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9986828 "Get"
	public explicit_type "PP_Var (*)(struct PP_Var array, uint32_t index)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const} PP_Var (*${name})(struct PP_Var array, uint32_t index)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9986956 "Set"
	public explicit_type "/** * Sets the value of an element in the array. * * @param[in] array An array var. * @param[in] index An index indicating which element to modify. If * <code>index</code> is larger than or equal to the array length, the length * is updated to be <code>index</code> + 1. Any position in the array that * hasn't been set before is set to undefined, i.e., <code>PP_Var</code> of * type <code>PP_VARTYPE_UNDEFINED</code>. * @param[in] value The value to set. The array holds a reference to it on * success. * * @return A <code>PP_Bool</code> indicating whether the operation succeeds. */ PP_Bool (*)(struct PP_Var array, uint32_t index, struct PP_Var value)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Sets the value of an element in the array.
   *
   * @param[in] array An array var.
   * @param[in] index An index indicating which element to modify. If
   * <code>index</code> is larger than or equal to the array length, the length
   * is updated to be <code>index</code> + 1. Any position in the array that
   * hasn't been set before is set to undefined, i.e., <code>PP_Var</code> of
   * type <code>PP_VARTYPE_UNDEFINED</code>.
   * @param[in] value The value to set. The array holds a reference to it on
   * success.
   *
   * @return A <code>PP_Bool</code> indicating whether the operation succeeds.
   */
  PP_Bool (*${name})(struct PP_Var array, uint32_t index, struct PP_Var value)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9987084 "GetLength"
	public explicit_type "/** * Gets the array length. * * @param[in] array An array var. * * @return The array length. */ uint32_t (*)(struct PP_Var array)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Gets the array length.
   *
   * @param[in] array An array var.
   *
   * @return The array length.
   */
  uint32_t (*${name})(struct PP_Var array)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9987212 "SetLength"
	public explicit_type "/** * Sets the array length. * * @param[in] array An array var. * @param[in] length The new array length. If <code>length</code> is smaller * than its current value, the array is truncated to the new length; any * elements that no longer fit are removed. If <code>length</code> is larger * than its current value, undefined vars are appended to increase the array * to the specified length. * * @return A <code>PP_Bool</code> indicating whether the operation succeeds. */ PP_Bool (*)(struct PP_Var array, uint32_t length)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Sets the array length.
   *
   * @param[in] array An array var.
   * @param[in] length The new array length. If <code>length</code> is smaller
   * than its current value, the array is truncated to the new length; any
   * elements that no longer fit are removed. If <code>length</code> is larger
   * than its current value, undefined vars are appended to increase the array
   * to the specified length.
   *
   * @return A <code>PP_Bool</code> indicating whether the operation succeeds.
   */
  PP_Bool (*${name})(struct PP_Var array, uint32_t length)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2768396 "PPB_VarArray_Dev"
      visibility package stereotype "typedef" base_type class_ref 2768268 // PPB_VarArray_Dev_0_1
      cpp_decl "${comment}typedef struct ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 5205260 // <dependency>
	relation 5205132 -_->
	  a default
	    cpp default "#include in source"
	    classrelation_ref 5205260 // <dependency>
	  b parent class_ref 2768268 // PPB_VarArray_Dev_0_1
      end
    end

    class 2768524 "PPB_Var_Deprecated"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @file
 * Defines the PPB_Var_Deprecated struct.
 * See http://code.google.com/p/ppapi/wiki/InterfacingWithJavaScript
 * for general information on using this interface.
 * {PENDING: Should the generated doc really be pointing to methods?}
 *
 * @addtogroup PPB
 * @{"
      attribute 9987340 "AddRef"
	public explicit_type "/** * Adds a reference to the given var. If this is not a refcounted object, * this function will do nothing so you can always call it no matter what the * type. */ void (*)(struct PP_Var var)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  /**
   * Adds a reference to the given var. If this is not a refcounted object,
   * this function will do nothing so you can always call it no matter what the
   * type.
   */
  void (*${name})(struct PP_Var var)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9987468 "Release"
	public explicit_type "/** * Removes a reference to given var, deleting it if the internal refcount * becomes 0. If the given var is not a refcounted object, this function will * do nothing so you can always call it no matter what the type. */ void (*)(struct PP_Var var)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  /**
   * Removes a reference to given var, deleting it if the internal refcount
   * becomes 0. If the given var is not a refcounted object, this function will
   * do nothing so you can always call it no matter what the type.
   */
  void (*${name})(struct PP_Var var)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9987596 "VarFromUtf8"
	public explicit_type "PP_Var (*)(PP_Module module, const char* data, uint32_t len)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const} PP_Var (*${name})(PP_Module module,
                               const char* data, uint32_t len)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9987724 "VarToUtf8"
	const_attribute public explicit_type "char* (*)(struct PP_Var var, uint32_t* len)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const} char* (*${name})(struct PP_Var var, uint32_t* len)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9987852 "HasProperty"
	public explicit_type "/** * Returns true if the property with the given name exists on the given * object, false if it does not. Methods are also counted as properties. * * The name can either be a string or an integer var. It is an error to pass * another type of var as the name. * * If you pass an invalid name or object, the exception will be set (if it is * non-NULL, and the return value will be false). */ bool (*)(struct PP_Var object, struct PP_Var name, struct PP_Var* exception)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  /**
   * Returns true if the property with the given name exists on the given
   * object, false if it does not. Methods are also counted as properties.
   *
   * The name can either be a string or an integer var. It is an error to pass
   * another type of var as the name.
   *
   * If you pass an invalid name or object, the exception will be set (if it is
   * non-NULL, and the return value will be false).
   */
  bool (*${name})(struct PP_Var object,
                      struct PP_Var name,
                      struct PP_Var* exception)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9987980 "HasMethod"
	public explicit_type "/** * Identical to HasProperty, except that HasMethod additionally checks if the * property is a function. */ bool (*)(struct PP_Var object, struct PP_Var name, struct PP_Var* exception)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  /**
   * Identical to HasProperty, except that HasMethod additionally checks if the
   * property is a function.
   */
  bool (*${name})(struct PP_Var object,
                    struct PP_Var name,
                    struct PP_Var* exception)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9988108 "GetProperty"
	public explicit_type "PP_Var (*)(struct PP_Var object, struct PP_Var name, struct PP_Var* exception)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const} PP_Var (*${name})(struct PP_Var object,
                               struct PP_Var name,
                               struct PP_Var* exception)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 5205388 // GetAllPropertyNames (<unidirectional association>)
	relation 5205260 --->
	  stereotype "void(*${name})(struct PP_Var object,${type}*property_count,struct PP_Var**properties,struct PP_Var*exception)"
	  a role_name "GetAllPropertyNames" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5205388 // GetAllPropertyNames (<unidirectional association>)
	  b parent class_ref 2345996 // uint32_t
      end

      attribute 9988236 "SetProperty"
	public explicit_type "/** * Sets the property with the given name on the given object. The exception * will be set, if it is non-NULL, on failure. */ void (*)(struct PP_Var object, struct PP_Var name, struct PP_Var value, struct PP_Var* exception)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  /**
   * Sets the property with the given name on the given object. The exception
   * will be set, if it is non-NULL, on failure.
   */
  void (*${name})(struct PP_Var object,
                      struct PP_Var name,
                      struct PP_Var value,
                      struct PP_Var* exception)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9988364 "RemoveProperty"
	public explicit_type "/** * Removes the given property from the given object. The property name must * be an string or integer var, using other types will throw an exception * (assuming the exception pointer is non-NULL). */ void (*)(struct PP_Var object, struct PP_Var name, struct PP_Var* exception)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  /**
   * Removes the given property from the given object. The property name must
   * be an string or integer var, using other types will throw an exception
   * (assuming the exception pointer is non-NULL).
   */
  void (*${name})(struct PP_Var object,
                         struct PP_Var name,
                         struct PP_Var* exception)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9988492 "Call"
	public explicit_type "PP_Var (*)(struct PP_Var object, struct PP_Var method_name, uint32_t argc, struct PP_Var* argv, struct PP_Var* exception)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const} PP_Var (*${name})(struct PP_Var object,
                        struct PP_Var method_name,
                        uint32_t argc,
                        struct PP_Var* argv,
                        struct PP_Var* exception)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9988620 "Construct"
	public explicit_type "PP_Var (*)(struct PP_Var object, uint32_t argc, struct PP_Var* argv, struct PP_Var* exception)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const} PP_Var (*${name})(struct PP_Var object,
                             uint32_t argc,
                             struct PP_Var* argv,
                             struct PP_Var* exception)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9988748 "IsInstanceOf"
	public explicit_type "/** * If the object is an instance of the given class, then this method returns * true and sets *object_data to the value passed to CreateObject provided * object_data is non-NULL. Otherwise, this method returns false. */ bool (*)(struct PP_Var var, const struct PPP_Class_Deprecated* object_class, void** object_data)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  /**
   * If the object is an instance of the given class, then this method returns
   * true and sets *object_data to the value passed to CreateObject provided
   * object_data is non-NULL. Otherwise, this method returns false.
   */
  bool (*${name})(struct PP_Var var,
                       const struct PPP_Class_Deprecated* object_class,
                       void** object_data)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9988876 "CreateObject"
	public explicit_type "PP_Var (*)(PP_Instance instance, const struct PPP_Class_Deprecated* object_class, void* object_data)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const} PP_Var (*${name})(PP_Instance instance,
                                const struct PPP_Class_Deprecated* object_class,
                                void* object_data)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9989004 "CreateObjectWithModuleDeprecated"
	public explicit_type "PP_Var (*)( PP_Module module, const struct PPP_Class_Deprecated* object_class, void* object_data)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const} PP_Var (*${name})(
      PP_Module module,
      const struct PPP_Class_Deprecated* object_class,
      void* object_data)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2768652 "PPB_VarDictionary_Dev_0_1"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @file
 * This file defines the <code>PPB_VarDictionary_Dev</code> struct providing
 * a way to interact with dictionary vars.
 
*
 * @addtogroup Interfaces
 * @{
 
*
 * A dictionary var contains key-value pairs with unique keys. The keys are
 * strings while the values can be arbitrary vars. Key comparison is always
 * done by value instead of by reference."
      attribute 9989132 "Create"
	public explicit_type "PP_Var (*)(void)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const} PP_Var (*${name})(void)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9989260 "Get"
	public explicit_type "PP_Var (*)(struct PP_Var dict, struct PP_Var key)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const} PP_Var (*${name})(struct PP_Var dict, struct PP_Var key)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9989388 "Set"
	public explicit_type "/** * Sets the value associated with the specified key. The dictionary is * responsible for holding references to its children to keep them alive. * * @param[in] dict A dictionary var. * @param[in] key A string var. If this key hasn't existed in * <code>dict</code>, it is added and associated with <code>value</code>; * otherwise, the previous value is replaced with <code>value</code>. * @param[in] value The value to set. * * @return A <code>PP_Bool</code> indicating whether the operation succeeds. */ PP_Bool (*)(struct PP_Var dict, struct PP_Var key, struct PP_Var value)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Sets the value associated with the specified key. The dictionary is
   * responsible for holding references to its children to keep them alive.
   *
   * @param[in] dict A dictionary var.
   * @param[in] key A string var. If this key hasn't existed in
   * <code>dict</code>, it is added and associated with <code>value</code>;
   * otherwise, the previous value is replaced with <code>value</code>.
   * @param[in] value The value to set.
   *
   * @return A <code>PP_Bool</code> indicating whether the operation succeeds.
   */
  PP_Bool (*${name})(struct PP_Var dict, struct PP_Var key, struct PP_Var value)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9989516 "Delete"
	public explicit_type "/** * Deletes the specified key and its associated value, if the key exists. * * @param[in] dict A dictionary var. * @param[in] key A string var. */ void (*)(struct PP_Var dict, struct PP_Var key)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Deletes the specified key and its associated value, if the key exists.
   *
   * @param[in] dict A dictionary var.
   * @param[in] key A string var.
   */
  void (*${name})(struct PP_Var dict, struct PP_Var key)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9989644 "HasKey"
	public explicit_type "/** * Checks whether a key exists. * * @param[in] dict A dictionary var. * @param[in] key A string var. * * @return A <code>PP_Bool</code> indicating whether the key exists. */ PP_Bool (*)(struct PP_Var dict, struct PP_Var key)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Checks whether a key exists.
   *
   * @param[in] dict A dictionary var.
   * @param[in] key A string var.
   *
   * @return A <code>PP_Bool</code> indicating whether the key exists.
   */
  PP_Bool (*${name})(struct PP_Var dict, struct PP_Var key)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9989772 "GetKeys"
	public explicit_type "PP_Var (*)(struct PP_Var dict)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const} PP_Var (*${name})(struct PP_Var dict)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2768780 "PPB_VarDictionary_Dev"
      visibility package stereotype "typedef" base_type class_ref 2768652 // PPB_VarDictionary_Dev_0_1
      cpp_decl "${comment}typedef struct ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 5205516 // <dependency>
	relation 5205388 -_->
	  a default
	    cpp default "#include in source"
	    classrelation_ref 5205516 // <dependency>
	  b parent class_ref 2768652 // PPB_VarDictionary_Dev_0_1
      end
    end

    class 2768908 "PPB_VideoCapture_Dev_0_3"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @file
 * This file defines the <code>PPB_VideoCapture_Dev</code> interface.
 
*
 * @addtogroup Interfaces
 * @{
 
*
 * Video capture interface. It goes hand-in-hand with PPP_VideoCapture_Dev.
 *
 * Theory of operation:
 * 1- Create a VideoCapture resource using Create.
 * 2- Find available video capture devices using EnumerateDevices.
 * 3- Open a video capture device. In addition to a device reference (0 can be
 * used to indicate the default device), you pass in the requested info
 * (resolution, frame rate), as well as suggest a number of buffers you will
 * need.
 * 4- Start the capture using StartCapture.
 * 5- Receive the OnDeviceInfo callback, in PPP_VideoCapture_Dev, which will
 * give you the actual capture info (the requested one is not guaranteed), as
 * well as an array of buffers allocated by the browser.
 * 6- On every frame captured by the browser, OnBufferReady (in
 * PPP_VideoCapture_Dev) is called with the index of the buffer from the array
 * containing the new frame. The buffer is now \"owned\" by the plugin, and the
 * browser won't reuse it until ReuseBuffer is called.
 * 7- When the plugin is done with the buffer, call ReuseBuffer.
 * 8- Stop the capture using StopCapture.
 * 9- Close the device.
 *
 * The browser may change the resolution based on the constraints of the system,
 * in which case OnDeviceInfo will be called again, with new buffers.
 *
 * The buffers contain the pixel data for a frame. The format is planar YUV
 * 4:2:0, one byte per pixel, tightly packed (width x height Y values, then
 * width/2 x height/2 U values, then width/2 x height/2 V values)."
      attribute 9989900 "Create"
	public explicit_type "/** * Creates a new VideoCapture. */ PP_Resource (*)(PP_Instance instance)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  /**
   * Creates a new VideoCapture.
   */
  PP_Resource (*${name})(PP_Instance instance)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9990028 "IsVideoCapture"
	public explicit_type "/** * Returns PP_TRUE if the given resource is a VideoCapture. */ PP_Bool (*)(PP_Resource video_capture)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Returns PP_TRUE if the given resource is a VideoCapture.
   */
  PP_Bool (*${name})(PP_Resource video_capture)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9990156 "EnumerateDevices"
	public explicit_type "/** * Enumerates video capture devices. * * @param[in] video_capture A <code>PP_Resource</code> corresponding to a * video capture resource. * @param[in] output An output array which will receive * <code>PPB_DeviceRef_Dev</code> resources on success. Please note that the * ref count of those resources has already been increased by 1 for the * caller. * @param[in] callback A <code>PP_CompletionCallback</code> to run on * completion. * * @return An error code from <code>pp_errors.h</code>. */ int32_t (*)(PP_Resource video_capture, struct PP_ArrayOutput output, struct PP_CompletionCallback callback)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Enumerates video capture devices.
   *
   * @param[in] video_capture A <code>PP_Resource</code> corresponding to a
   * video capture resource.
   * @param[in] output An output array which will receive
   * <code>PPB_DeviceRef_Dev</code> resources on success. Please note that the
   * ref count of those resources has already been increased by 1 for the
   * caller.
   * @param[in] callback A <code>PP_CompletionCallback</code> to run on
   * completion.
   *
   * @return An error code from <code>pp_errors.h</code>.
   */
  int32_t (*${name})(PP_Resource video_capture,
                              struct PP_ArrayOutput output,
                              struct PP_CompletionCallback callback)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9990284 "MonitorDeviceChange"
	public explicit_type "/** * Requests device change notifications. * * @param[in] video_capture A <code>PP_Resource</code> corresponding to a * video capture resource. * @param[in] callback The callback to receive notifications. If not NULL, it * will be called once for the currently available devices, and then every * time the list of available devices changes. All calls will happen on the * same thread as the one on which MonitorDeviceChange() is called. It will * receive notifications until <code>video_capture</code> is destroyed or * <code>MonitorDeviceChange()</code> is called to set a new callback for * <code>video_capture</code>. You can pass NULL to cancel sending * notifications. * @param[inout] user_data An opaque pointer that will be passed to * <code>callback</code>. * * @return An error code from <code>pp_errors.h</code>. */ int32_t (*)(PP_Resource video_capture, PP_MonitorDeviceChangeCallback callback, void* user_data)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Requests device change notifications.
   *
   * @param[in] video_capture A <code>PP_Resource</code> corresponding to a
   * video capture resource.
   * @param[in] callback The callback to receive notifications. If not NULL, it
   * will be called once for the currently available devices, and then every
   * time the list of available devices changes. All calls will happen on the
   * same thread as the one on which MonitorDeviceChange() is called. It will
   * receive notifications until <code>video_capture</code> is destroyed or
   * <code>MonitorDeviceChange()</code> is called to set a new callback for
   * <code>video_capture</code>. You can pass NULL to cancel sending
   * notifications.
   * @param[inout] user_data An opaque pointer that will be passed to
   * <code>callback</code>.
   *
   * @return An error code from <code>pp_errors.h</code>.
   */
  int32_t (*${name})(PP_Resource video_capture,
                                 PP_MonitorDeviceChangeCallback callback,
                                 void* user_data)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9990412 "Open"
	public explicit_type "/** * Opens a video capture device. |device_ref| identifies a video capture * device. It could be one of the resource in the array returned by * |EnumerateDevices()|, or 0 which means the default device. * |requested_info| is a pointer to a structure containing the requested * resolution and frame rate. |buffer_count| is the number of buffers * requested by the plugin. Note: it is only used as advisory, the browser may * allocate more or fewer based on available resources. How many buffers * depends on usage. At least 2 to make sure latency doesn't cause lost * frames. If the plugin expects to hold on to more than one buffer at a time * (e.g. to do multi-frame processing, like video encoding), it should request * that many more. */ int32_t (*)(PP_Resource video_capture, PP_Resource device_ref, const struct PP_VideoCaptureDeviceInfo_Dev* requested_info, uint32_t buffer_count, struct PP_CompletionCallback callback)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Opens a video capture device. |device_ref| identifies a video capture
   * device. It could be one of the resource in the array returned by
   * |EnumerateDevices()|, or 0 which means the default device.
   * |requested_info| is a pointer to a structure containing the requested
   * resolution and frame rate. |buffer_count| is the number of buffers
   * requested by the plugin. Note: it is only used as advisory, the browser may
   * allocate more or fewer based on available resources. How many buffers
   * depends on usage. At least 2 to make sure latency doesn't cause lost
   * frames. If the plugin expects to hold on to more than one buffer at a time
   * (e.g. to do multi-frame processing, like video encoding), it should request
   * that many more.
   */
  int32_t (*${name})(PP_Resource video_capture,
                  PP_Resource device_ref,
                  const struct PP_VideoCaptureDeviceInfo_Dev* requested_info,
                  uint32_t buffer_count,
                  struct PP_CompletionCallback callback)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9990540 "StartCapture"
	public explicit_type "/** * Starts the capture. * * Returns PP_ERROR_FAILED if called when the capture was already started, or * PP_OK on success. */ int32_t (*)(PP_Resource video_capture)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Starts the capture.
   *
   * Returns PP_ERROR_FAILED if called when the capture was already started, or
   * PP_OK on success.
   */
  int32_t (*${name})(PP_Resource video_capture)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9990668 "ReuseBuffer"
	public explicit_type "/** * Allows the browser to reuse a buffer that was previously sent by * PPP_VideoCapture_Dev.OnBufferReady. |buffer| is the index of the buffer in * the array returned by PPP_VideoCapture_Dev.OnDeviceInfo. * * Returns PP_ERROR_BADARGUMENT if buffer is out of range (greater than the * number of buffers returned by PPP_VideoCapture_Dev.OnDeviceInfo), or if it * is not currently owned by the plugin. Returns PP_OK otherwise. */ int32_t (*)(PP_Resource video_capture, uint32_t buffer)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Allows the browser to reuse a buffer that was previously sent by
   * PPP_VideoCapture_Dev.OnBufferReady. |buffer| is the index of the buffer in
   * the array returned by PPP_VideoCapture_Dev.OnDeviceInfo.
   *
   * Returns PP_ERROR_BADARGUMENT if buffer is out of range (greater than the
   * number of buffers returned by PPP_VideoCapture_Dev.OnDeviceInfo), or if it
   * is not currently owned by the plugin. Returns PP_OK otherwise.
   */
  int32_t (*${name})(PP_Resource video_capture, uint32_t buffer)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9990796 "StopCapture"
	public explicit_type "/** * Stops the capture. * * Returns PP_ERROR_FAILED if the capture wasn't already started, or PP_OK on * success. */ int32_t (*)(PP_Resource video_capture)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Stops the capture.
   *
   * Returns PP_ERROR_FAILED if the capture wasn't already started, or PP_OK on
   * success.
   */
  int32_t (*${name})(PP_Resource video_capture)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9990924 "Close"
	public explicit_type "/** * Closes the video capture device, and stops capturing if necessary. It is * not valid to call |Open()| again after a call to this method. * If a video capture resource is destroyed while a device is still open, then * it will be implicitly closed, so you are not required to call this method. */ void (*)(PP_Resource video_capture)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Closes the video capture device, and stops capturing if necessary. It is
   * not valid to call |Open()| again after a call to this method.
   * If a video capture resource is destroyed while a device is still open, then
   * it will be implicitly closed, so you are not required to call this method.
   */
  void (*${name})(PP_Resource video_capture)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2769036 "PPB_VideoCapture_Dev"
      visibility package stereotype "typedef" base_type class_ref 2768908 // PPB_VideoCapture_Dev_0_3
      cpp_decl "${comment}typedef struct ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 5205644 // <dependency>
	relation 5205516 -_->
	  a default
	    cpp default "#include in source"
	    classrelation_ref 5205644 // <dependency>
	  b parent class_ref 2768908 // PPB_VideoCapture_Dev_0_3
      end
    end

    class 2769164 "PPB_VideoCapture_Dev_0_2"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      attribute 9991052 "Create"
	public explicit_type "PP_Resource (*)(PP_Instance instance)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  PP_Resource (*${name})(PP_Instance instance)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9991180 "IsVideoCapture"
	public explicit_type "PP_Bool (*)(PP_Resource video_capture)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  PP_Bool (*${name})(PP_Resource video_capture)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9991308 "EnumerateDevices"
	public explicit_type "int32_t (*)(PP_Resource video_capture, PP_Resource* devices, struct PP_CompletionCallback callback)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  int32_t (*${name})(PP_Resource video_capture,
                              PP_Resource* devices,
                              struct PP_CompletionCallback callback)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9991436 "Open"
	public explicit_type "int32_t (*)(PP_Resource video_capture, PP_Resource device_ref, const struct PP_VideoCaptureDeviceInfo_Dev* requested_info, uint32_t buffer_count, struct PP_CompletionCallback callback)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  int32_t (*${name})(PP_Resource video_capture,
                  PP_Resource device_ref,
                  const struct PP_VideoCaptureDeviceInfo_Dev* requested_info,
                  uint32_t buffer_count,
                  struct PP_CompletionCallback callback)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9991564 "StartCapture"
	public explicit_type "int32_t (*)(PP_Resource video_capture)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  int32_t (*${name})(PP_Resource video_capture)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9991692 "ReuseBuffer"
	public explicit_type "int32_t (*)(PP_Resource video_capture, uint32_t buffer)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  int32_t (*${name})(PP_Resource video_capture, uint32_t buffer)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9991820 "StopCapture"
	public explicit_type "int32_t (*)(PP_Resource video_capture)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  int32_t (*${name})(PP_Resource video_capture)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9991948 "Close"
	public explicit_type "void (*)(PP_Resource video_capture)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  void (*${name})(PP_Resource video_capture)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2769292 "PPB_VideoDecoder_Dev_0_16"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @file
 * This file defines the <code>PPB_VideoDecoder_Dev</code> interface.
 
*
 * @addtogroup Interfaces
 * @{
 
*
 * Video decoder interface.
 *
 * Typical usage:
 * - Use Create() to create & configure a new PPB_VideoDecoder_Dev resource.
 * - Call Decode() to decode some video data.
 * - Receive ProvidePictureBuffers callback
 *   - Supply the decoder with textures using AssignPictureBuffers.
 * - Receive PictureReady callbacks
 *   - Hand the textures back to the decoder using ReusePictureBuffer.
 * - To signal EOS to the decoder: call Flush() and wait for NotifyFlushDone
 *   callback.
 * - To reset the decoder (e.g. to implement Seek): call Reset() and wait for
 *   NotifyResetDone callback.
 * - To tear down the decoder call Destroy().
 *
 * See PPP_VideoDecoder_Dev for the notifications the decoder may send the
 * plugin."
      attribute 9992076 "Create"
	public explicit_type "/** * Creates & initializes a video decoder. * * Parameters: * |instance| pointer to the plugin instance. * |context| a PPB_Graphics3D resource in which decoding will happen. * |profile| the video stream's format profile. * * The created decoder is returned as PP_Resource. 0 means failure. */ PP_Resource (*)(PP_Instance instance, PP_Resource context, PP_VideoDecoder_Profile profile)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  /**
   * Creates & initializes a video decoder.
   *
   * Parameters:
   *   |instance| pointer to the plugin instance.
   *   |context| a PPB_Graphics3D resource in which decoding will happen.
   *   |profile| the video stream's format profile.
   *
   * The created decoder is returned as PP_Resource. 0 means failure.
   */
  PP_Resource (*${name})(PP_Instance instance,
                        PP_Resource context,
                        PP_VideoDecoder_Profile profile)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9992204 "IsVideoDecoder"
	public explicit_type "/** * Tests whether |resource| is a video decoder created through Create * function of this interface. * * Parameters: * |resource| is handle to resource to test. * * Returns true if is a video decoder, false otherwise. */ PP_Bool (*)(PP_Resource resource)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Tests whether |resource| is a video decoder created through Create
   * function of this interface.
   *
   * Parameters:
   *   |resource| is handle to resource to test.
   *
   * Returns true if is a video decoder, false otherwise.
   */
  PP_Bool (*${name})(PP_Resource resource)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9992332 "Decode"
	public explicit_type "/** * Dispatches bitstream buffer to the decoder. * * Parameters: * |video_decoder| is the previously created handle to the decoder resource. * |bitstream_buffer| is the bitstream buffer that contains the input data. * |callback| will be called when |bitstream_buffer| has been processed by * the decoder. * * Returns an error code from pp_errors.h. */ int32_t (*)(PP_Resource video_decoder, const struct PP_VideoBitstreamBuffer_Dev* bitstream_buffer, struct PP_CompletionCallback callback)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Dispatches bitstream buffer to the decoder.
   *
   * Parameters:
   *   |video_decoder| is the previously created handle to the decoder resource.
   *   |bitstream_buffer| is the bitstream buffer that contains the input data.
   *   |callback| will be called when |bitstream_buffer| has been processed by
   *   the decoder.
   *
   * Returns an error code from pp_errors.h.
   */
  int32_t (*${name})(PP_Resource video_decoder,
                    const struct PP_VideoBitstreamBuffer_Dev* bitstream_buffer,
                    struct PP_CompletionCallback callback)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9992460 "AssignPictureBuffers"
	public explicit_type "/** * Provides the decoder with texture-backed picture buffers for video * decoding. * * This function should be called when the plugin has its * ProvidePictureBuffers method called. The decoder will stall until it has * received all the buffers it's asked for. * * Parameters: * |video_decoder| is the previously created handle to the decoder resource. * |no_of_buffers| how many buffers are behind picture buffer pointer. * |buffers| contains the reference to the picture buffer that was * allocated. */ void (*)(PP_Resource video_decoder, uint32_t no_of_buffers, const struct PP_PictureBuffer_Dev buffers[])"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Provides the decoder with texture-backed picture buffers for video
   * decoding.
   *
   * This function should be called when the plugin has its
   * ProvidePictureBuffers method called.  The decoder will stall until it has
   * received all the buffers it's asked for.
   *
   * Parameters:
   *   |video_decoder| is the previously created handle to the decoder resource.
   *   |no_of_buffers| how many buffers are behind picture buffer pointer.
   *   |buffers| contains the reference to the picture buffer that was
   *   allocated.
   */
  void (*${name})(PP_Resource video_decoder,
                               uint32_t no_of_buffers,
                               const struct PP_PictureBuffer_Dev buffers[])${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9992588 "ReusePictureBuffer"
	public explicit_type "/** * Tells the decoder to reuse the given picture buffer. Typical use of this * function is to call from PictureReady callback to recycle picture buffer * back to the decoder after blitting the image so that decoder can use the * image for output again. * * Parameters: * |video_decoder| is the previously created handle to the decoder resource. * |picture_buffer_id| contains the id of the picture buffer that was * processed. */ void (*)(PP_Resource video_decoder, int32_t picture_buffer_id)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Tells the decoder to reuse the given picture buffer. Typical use of this
   * function is to call from PictureReady callback to recycle picture buffer
   * back to the decoder after blitting the image so that decoder can use the
   * image for output again.
   *
   * Parameters:
   *   |video_decoder| is the previously created handle to the decoder resource.
   *   |picture_buffer_id| contains the id of the picture buffer that was
   *   processed.
   */
  void (*${name})(PP_Resource video_decoder,
                             int32_t picture_buffer_id)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9992716 "Flush"
	public explicit_type "/** * Flush input and output buffers in the decoder. Any pending inputs are * decoded and pending outputs are delivered to the plugin. Once done * flushing, the decoder will call |callback|. * * Parameters: * |video_decoder| is the previously created handle to the decoder resource. * |callback| is one-time callback that will be called once the flushing * request has been completed. * * Returns an error code from pp_errors.h. */ int32_t (*)(PP_Resource video_decoder, struct PP_CompletionCallback callback)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Flush input and output buffers in the decoder.  Any pending inputs are
   * decoded and pending outputs are delivered to the plugin.  Once done
   * flushing, the decoder will call |callback|.
   *
   * Parameters:
   *   |video_decoder| is the previously created handle to the decoder resource.
   *   |callback| is one-time callback that will be called once the flushing
   *   request has been completed.
   *
   * Returns an error code from pp_errors.h.
   */
  int32_t (*${name})(PP_Resource video_decoder,
                   struct PP_CompletionCallback callback)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9992844 "Reset"
	public explicit_type "/** * Reset the decoder as quickly as possible. Pending inputs and outputs are * dropped and the decoder is put back into a state ready to receive further * Decode() calls. |callback| will be called when the reset is done. * * Parameters: * |video_decoder| is the previously created handle to the decoder resource. * |callback| is one-time callback that will be called once the reset * request has been completed. * * Returns an error code from pp_errors.h. */ int32_t (*)(PP_Resource video_decoder, struct PP_CompletionCallback callback)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Reset the decoder as quickly as possible.  Pending inputs and outputs are
   * dropped and the decoder is put back into a state ready to receive further
   * Decode() calls.  |callback| will be called when the reset is done.
   *
   * Parameters:
   *   |video_decoder| is the previously created handle to the decoder resource.
   *   |callback| is one-time callback that will be called once the reset
   *   request has been completed.
   *
   * Returns an error code from pp_errors.h.
   */
  int32_t (*${name})(PP_Resource video_decoder,
                   struct PP_CompletionCallback callback)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9992972 "Destroy"
	public explicit_type "/** * Tear down the decoder as quickly as possible. Pending inputs and outputs * are dropped and the decoder frees all of its resources. Although resources * may be freed asynchronously, after this method returns no more callbacks * will be made on the client. Any resources held by the client at that point * may be freed. * * Parameters: * |video_decoder| is the previously created handle to the decoder resource. */ void (*)(PP_Resource video_decoder)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Tear down the decoder as quickly as possible.  Pending inputs and outputs
   * are dropped and the decoder frees all of its resources.  Although resources
   * may be freed asynchronously, after this method returns no more callbacks
   * will be made on the client.  Any resources held by the client at that point
   * may be freed.
   *
   * Parameters:
   *   |video_decoder| is the previously created handle to the decoder resource.
   */
  void (*${name})(PP_Resource video_decoder)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2769420 "PPB_VideoDecoder_Dev"
      visibility package stereotype "typedef" base_type class_ref 2769292 // PPB_VideoDecoder_Dev_0_16
      cpp_decl "${comment}typedef struct ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 5205772 // <dependency>
	relation 5205644 -_->
	  a default
	    cpp default "#include in source"
	    classrelation_ref 5205772 // <dependency>
	  b parent class_ref 2769292 // PPB_VideoDecoder_Dev_0_16
      end
    end

    class 2769548 "PPB_View_Dev_0_1"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @file
 * This file contains the <code>PPB_View_Dev</code> interface. 
*
 * @addtogroup Interfaces
 * @{
 
 PPB_View_Dev interface "
      attribute 9993100 "GetDeviceScale"
	public explicit_type "/** * GetDeviceScale returns the scale factor between device pixels and DIPs * (also known as logical pixels or UI pixels on some platforms). This allows * the developer to render their contents at device resolution, even as * coordinates / sizes are given in DIPs through the API. * * Note that the coordinate system for Pepper APIs is DIPs. Also note that * one DIP might not equal one CSS pixel - when page scale/zoom is in effect. * * @param[in] resource A <code>PP_Resource</code> corresponding to a * <code>PPB_View</code> resource. * * @return A <code>float</code> value representing the number of device pixels * per DIP. If the resource is invalid, the value will be 0.0. */ float (*)(PP_Resource resource)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  /**
   * GetDeviceScale returns the scale factor between device pixels and DIPs
   * (also known as logical pixels or UI pixels on some platforms). This allows
   * the developer to render their contents at device resolution, even as
   * coordinates / sizes are given in DIPs through the API.
   *
   * Note that the coordinate system for Pepper APIs is DIPs. Also note that
   * one DIP might not equal one CSS pixel - when page scale/zoom is in effect.
   *
   * @param[in] resource A <code>PP_Resource</code> corresponding to a
   * <code>PPB_View</code> resource.
   *
   * @return A <code>float</code> value representing the number of device pixels
   * per DIP. If the resource is invalid, the value will be 0.0.
   */
  float (*${name})(PP_Resource resource)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9993228 "GetCSSScale"
	public explicit_type "/** * GetCSSScale returns the scale factor between DIPs and CSS pixels. This * allows proper scaling between DIPs - as sent via the Pepper API - and CSS * pixel coordinates used for Web content. * * @param[in] resource A <code>PP_Resource</code> corresponding to a * <code>PPB_View</code> resource. * * @return css_scale A <code>float</code> value representing the number of * DIPs per CSS pixel. If the resource is invalid, the value will be 0.0. */ float (*)(PP_Resource resource)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * GetCSSScale returns the scale factor between DIPs and CSS pixels. This
   * allows proper scaling between DIPs - as sent via the Pepper API - and CSS
   * pixel coordinates used for Web content.
   *
   * @param[in] resource A <code>PP_Resource</code> corresponding to a
   * <code>PPB_View</code> resource.
   *
   * @return css_scale A <code>float</code> value representing the number of
   * DIPs per CSS pixel. If the resource is invalid, the value will be 0.0.
   */
  float (*${name})(PP_Resource resource)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2769676 "PPB_View_Dev"
      visibility package stereotype "typedef" base_type class_ref 2769548 // PPB_View_Dev_0_1
      cpp_decl "${comment}typedef struct ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 5205900 // <dependency>
	relation 5205772 -_->
	  a default
	    cpp default "#include in source"
	    classrelation_ref 5205900 // <dependency>
	  b parent class_ref 2769548 // PPB_View_Dev_0_1
      end
    end

    class 2769804 "PPB_Widget_Dev_0_4"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @file
 * Implementation of the widgets interface.
 
*
 * @addtogroup Interfaces
 * @{
 
*
 * The interface for reusing browser widgets."
      attribute 9993356 "IsWidget"
	public explicit_type "/** * Returns PP_TRUE if the given resource is a Widget. Returns PP_FALSE if the * resource is invalid or some type other than an Widget. */ PP_Bool (*)(PP_Resource resource)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  /**
   * Returns PP_TRUE if the given resource is a Widget. Returns PP_FALSE if the
   * resource is invalid or some type other than an Widget.
   */
  PP_Bool (*${name})(PP_Resource resource)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9993484 "Paint"
	public explicit_type "/** * Paint the given rectangle of the widget into the given image. * Returns PP_TRUE on success, PP_FALSE on failure. */ PP_Bool (*)(PP_Resource widget, const struct PP_Rect* rect, PP_Resource image)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Paint the given rectangle of the widget into the given image.
   * Returns PP_TRUE on success, PP_FALSE on failure.
   */
  PP_Bool (*${name})(PP_Resource widget,
                   const struct PP_Rect* rect,
                   PP_Resource image)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9993612 "HandleEvent"
	public explicit_type "/** * Pass in an event to a widget. It'll return PP_TRUE if the event was * consumed. */ PP_Bool (*)(PP_Resource widget, PP_Resource input_event)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Pass in an event to a widget.  It'll return PP_TRUE if the event was
   * consumed.
   */
  PP_Bool (*${name})(PP_Resource widget, PP_Resource input_event)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9993740 "GetLocation"
	public explicit_type "/** * Get the location of the widget. */ PP_Bool (*)(PP_Resource widget, struct PP_Rect* location)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Get the location of the widget.
   */
  PP_Bool (*${name})(PP_Resource widget, struct PP_Rect* location)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9993868 "SetLocation"
	public explicit_type "/** * Set the location of the widget. */ void (*)(PP_Resource widget, const struct PP_Rect* location)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Set the location of the widget.
   */
  void (*${name})(PP_Resource widget, const struct PP_Rect* location)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9993996 "SetScale"
	public explicit_type "/** * Set scale used during paint operations. */ void (*)(PP_Resource widget, float scale)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Set scale used during paint operations.
   */
  void (*${name})(PP_Resource widget, float scale)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2769932 "PPB_Widget_Dev"
      visibility package stereotype "typedef" base_type class_ref 2769804 // PPB_Widget_Dev_0_4
      cpp_decl "${comment}typedef struct ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 5206028 // <dependency>
	relation 5205900 -_->
	  a default
	    cpp default "#include in source"
	    classrelation_ref 5206028 // <dependency>
	  b parent class_ref 2769804 // PPB_Widget_Dev_0_4
      end
    end

    class 2770060 "PPB_Widget_Dev_0_3"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      attribute 9994124 "IsWidget"
	public explicit_type "PP_Bool (*)(PP_Resource resource)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  PP_Bool (*${name})(PP_Resource resource)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9994252 "Paint"
	public explicit_type "PP_Bool (*)(PP_Resource widget, const struct PP_Rect* rect, PP_Resource image)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  PP_Bool (*${name})(PP_Resource widget,
                   const struct PP_Rect* rect,
                   PP_Resource image)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9994380 "HandleEvent"
	public explicit_type "PP_Bool (*)(PP_Resource widget, PP_Resource input_event)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  PP_Bool (*${name})(PP_Resource widget, PP_Resource input_event)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9994508 "GetLocation"
	public explicit_type "PP_Bool (*)(PP_Resource widget, struct PP_Rect* location)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  PP_Bool (*${name})(PP_Resource widget, struct PP_Rect* location)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9994636 "SetLocation"
	public explicit_type "void (*)(PP_Resource widget, const struct PP_Rect* location)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  void (*${name})(PP_Resource widget, const struct PP_Rect* location)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2770188 "PPB_Zoom_Dev_0_2"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @file
 * Implementation of the Zoom interface.
 
*
 * @addtogroup Interfaces
 * @{
 
*
 * Zoom interface should only apply to those full-page \"plugin-document\"."
      attribute 9994764 "ZoomChanged"
	public explicit_type "/** * Informs the browser about the new zoom factor for the plugin (see * ppp_zoom_dev.h for a description of zoom factor). The plugin should only * call this function if the zoom change was triggered by the browser, it's * only needed in case a plugin can update its own zoom, say because of its * own UI. */ void (*)(PP_Instance instance, double factor)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  /**
   * Informs the browser about the new zoom factor for the plugin (see
   * ppp_zoom_dev.h for a description of zoom factor). The plugin should only
   * call this function if the zoom change was triggered by the browser, it's
   * only needed in case a plugin can update its own zoom, say because of its
   * own UI.
   */
  void (*${name})(PP_Instance instance, double factor)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9994892 "ZoomLimitsChanged"
	public explicit_type "/** * Sets the mininum and maximium zoom factors. */ void (*)(PP_Instance instance, double minimum_factor, double maximium_factor)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Sets the mininum and maximium zoom factors.
   */
  void (*${name})(PP_Instance instance,
                            double minimum_factor,
                            double maximium_factor)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2770316 "PPB_Zoom_Dev"
      visibility package stereotype "typedef" base_type class_ref 2770188 // PPB_Zoom_Dev_0_2
      cpp_decl "${comment}typedef struct ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 5206156 // <dependency>
	relation 5206028 -_->
	  a default
	    cpp default "#include in source"
	    classrelation_ref 5206156 // <dependency>
	  b parent class_ref 2770188 // PPB_Zoom_Dev_0_2
      end
    end

    class 2770444 "PPP_Class_Deprecated"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * Interface for the plugin to implement JavaScript-accessible objects.
 *
 * This interface has no interface name. Instead, the plugin passes a pointer
 * to this interface to PPB_Var_Deprecated.CreateObject that corresponds to the
 * object being implemented.
 *
 * See the PPB_Var_Deprecated interface for more information on these functions.
 * This interface just allows you to implement the \"back end\" of those
 * functions, so most of the contract is specified in that interface.
 *
 * See
 *   http://code.google.com/p/ppapi/wiki/InterfacingWithJavaScript
 * for general information on using and implementing vars."
      attribute 9995020 "HasProperty"
	public explicit_type "/** * |name| is guaranteed to be an integer or string type var. Exception is * guaranteed non-NULL. An integer is used for |name| when implementing * array access into the object. This test should only return true for * properties that are not methods. Use HasMethod() to handle methods. */ bool (*)(void* object, struct PP_Var name, struct PP_Var* exception)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  /**
   * |name| is guaranteed to be an integer or string type var. Exception is
   * guaranteed non-NULL. An integer is used for |name| when implementing
   * array access into the object. This test should only return true for
   * properties that are not methods.  Use HasMethod() to handle methods.
   */
  bool (*${name})(void* object,
                      struct PP_Var name,
                      struct PP_Var* exception)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9995148 "HasMethod"
	public explicit_type "/** * |name| is guaranteed to be a string-type. Exception is guaranteed non-NULL. * If the method does not exist, return false and don't set the exception. * Errors in this function will probably not occur in general usage, but * if you need to throw an exception, still return false. */ bool (*)(void* object, struct PP_Var name, struct PP_Var* exception)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  /**
   * |name| is guaranteed to be a string-type. Exception is guaranteed non-NULL.
   * If the method does not exist, return false and don't set the exception.
   * Errors in this function will probably not occur in general usage, but
   * if you need to throw an exception, still return false.
   */
  bool (*${name})(void* object,
                    struct PP_Var name,
                    struct PP_Var* exception)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9995276 "GetProperty"
	public explicit_type "PP_Var (*)(void* object, struct PP_Var name, struct PP_Var* exception)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const} PP_Var (*${name})(void* object,
                               struct PP_Var name,
                               struct PP_Var* exception)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9995404 "GetAllPropertyNames"
	public explicit_type "/** * Exception is guaranteed non-NULL. * * This should include all enumerable properties, including methods. Be sure * to set |*property_count| to 0 and |properties| to NULL in all failure * cases, these should never be unset when calling this function. The * pointers passed in are guaranteed not to be NULL, so you don't have to * NULL check them. * * If you have any properties, allocate the property array with * PPB_Core.MemAlloc(sizeof(PP_Var) * property_count) and add a reference * to each property on behalf of the caller. The caller is responsible for * Release()ing each var and calling PPB_Core.MemFree on the property pointer. */ void (*)(void* object, uint32_t* property_count, struct PP_Var** properties, struct PP_Var* exception)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  /**
   * Exception is guaranteed non-NULL.
   *
   * This should include all enumerable properties, including methods. Be sure
   * to set |*property_count| to 0 and |properties| to NULL in all failure
   * cases, these should never be unset when calling this function. The
   * pointers passed in are guaranteed not to be NULL, so you don't have to
   * NULL check them.
   *
   * If you have any properties, allocate the property array with
   * PPB_Core.MemAlloc(sizeof(PP_Var) * property_count) and add a reference
   * to each property on behalf of the caller. The caller is responsible for
   * Release()ing each var and calling PPB_Core.MemFree on the property pointer.
   */
  void (*${name})(void* object,
                              uint32_t* property_count,
                              struct PP_Var** properties,
                              struct PP_Var* exception)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9995532 "SetProperty"
	public explicit_type "/** * |name| is guaranteed to be an integer or string type var. Exception is * guaranteed non-NULL. */ void (*)(void* object, struct PP_Var name, struct PP_Var value, struct PP_Var* exception)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  /**
   * |name| is guaranteed to be an integer or string type var. Exception is
   * guaranteed non-NULL.
   */
  void (*${name})(void* object,
                      struct PP_Var name,
                      struct PP_Var value,
                      struct PP_Var* exception)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9995660 "RemoveProperty"
	public explicit_type "/** * |name| is guaranteed to be an integer or string type var. Exception is * guaranteed non-NULL. */ void (*)(void* object, struct PP_Var name, struct PP_Var* exception)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  /**
   * |name| is guaranteed to be an integer or string type var. Exception is
   * guaranteed non-NULL.
   */
  void (*${name})(void* object,
                         struct PP_Var name,
                         struct PP_Var* exception)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9995788 "Call"
	public explicit_type "PP_Var (*)(void* object, struct PP_Var method_name, uint32_t argc, struct PP_Var* argv, struct PP_Var* exception)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const} PP_Var (*${name})(void* object,
                        struct PP_Var method_name,
                        uint32_t argc,
                        struct PP_Var* argv,
                        struct PP_Var* exception)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9995916 "Construct"
	public explicit_type "PP_Var (*)(void* object, uint32_t argc, struct PP_Var* argv, struct PP_Var* exception)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const} PP_Var (*${name})(void* object,
                             uint32_t argc,
                             struct PP_Var* argv,
                             struct PP_Var* exception)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9996044 "Deallocate"
	public explicit_type "/** * Called when the reference count of the object reaches 0. Normally, plugins * would free their internal data pointed to by the |object| pointer. */ void (*)(void* object)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  /**
   * Called when the reference count of the object reaches 0. Normally, plugins
   * would free their internal data pointed to by the |object| pointer.
   */
  void (*${name})(void* object)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2770572 "PPP_Find_Dev"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      attribute 9996172 "StartFind"
	public explicit_type "// Finds the given UTF-8 text starting at the current selection. The number of // results will be updated asynchronously via NumberOfFindResultsChanged in // PPB_Find. Note that multiple StartFind calls can happen before StopFind is // called in the case of the search term changing. // // Return PP_FALSE if the plugin doesn't support find in page. Consequently, // it won't call any callbacks. PP_Bool (*)(PP_Instance instance, const char* text, PP_Bool case_sensitive)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  // Finds the given UTF-8 text starting at the current selection. The number of
  // results will be updated asynchronously via NumberOfFindResultsChanged in
  // PPB_Find. Note that multiple StartFind calls can happen before StopFind is
  // called in the case of the search term changing.
  //
  // Return PP_FALSE if the plugin doesn't support find in page. Consequently,
  // it won't call any callbacks.
  PP_Bool (*${name})(PP_Instance instance,
                       const char* text,
                       PP_Bool case_sensitive)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9996300 "SelectFindResult"
	public explicit_type "// Go to the next/previous result. void (*)(PP_Instance instance, PP_Bool forward)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  // Go to the next/previous result.
  void (*${name})(PP_Instance instance,
                           PP_Bool forward)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9996428 "StopFind"
	public explicit_type "// Tells the plugin that the find operation has stopped, so it should clear // any highlighting. void (*)(PP_Instance instance)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  // Tells the plugin that the find operation has stopped, so it should clear
  // any highlighting.
  void (*${name})(PP_Instance instance)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2770700 "PPP_NetworkState_Dev_0_1"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @file
 * This file defines the PPP_NetworkState interface.
 
*
 * @addtogroup Interfaces
 * @{"
      attribute 9996556 "SetOnLine"
	public explicit_type "/** * Notification that the online state has changed for the user's network. * This will change as a result of a network cable being plugged or * unplugged, WiFi connections going up and down, or other events. * * Note that being \"online\" isn't a guarantee that any particular connections * will succeed. */ void (*)(PP_Bool is_online)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  /**
   * Notification that the online state has changed for the user's network.
   * This will change as a result of a network cable being plugged or
   * unplugged, WiFi connections going up and down, or other events.
   *
   * Note that being \"online\" isn't a guarantee that any particular connections
   * will succeed.
   */
  void (*${name})(PP_Bool is_online)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2770828 "PPP_NetworkState_Dev"
      visibility package stereotype "typedef" base_type class_ref 2770700 // PPP_NetworkState_Dev_0_1
      cpp_decl "${comment}typedef struct ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 5206284 // <dependency>
	relation 5206156 -_->
	  a default
	    cpp default "#include in source"
	    classrelation_ref 5206284 // <dependency>
	  b parent class_ref 2770700 // PPP_NetworkState_Dev_0_1
      end
    end

    class 2770956 "PP_PrintPageNumberRange_Dev"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @file
 * Definition of the PPP_Printing interface.
 
*
 * @addtogroup Structs
 * @{
 
*
 * Specifies a contiguous range of page numbers to be printed.
 * The page numbers use a zero-based index."
      classrelation 5206412 // first_page_number (<directional composition>)
	relation 5206284 *-->
	  a role_name "first_page_number" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5206412 // first_page_number (<directional composition>)
	  b parent class_ref 2345996 // uint32_t
      end

      classrelation 5206540 // last_page_number (<directional composition>)
	relation 5206412 *-->
	  a role_name "last_page_number" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5206540 // last_page_number (<directional composition>)
	  b parent class_ref 2345996 // uint32_t
      end
    end

    class 2771084 "PPP_Printing_Dev_0_6"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @}
 
*
 * @addtogroup Interfaces
 * @{"
      attribute 9996684 "QuerySupportedFormats"
	public explicit_type "/** * Returns a bit field representing the supported print output formats. For * example, if only PDF and PostScript are supported, * QuerySupportedFormats returns a value equivalent to: * (PP_PRINTOUTPUTFORMAT_PDF | PP_PRINTOUTPUTFORMAT_POSTSCRIPT) */ uint32_t (*)(PP_Instance instance)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  /**
   *  Returns a bit field representing the supported print output formats.  For
   *  example, if only PDF and PostScript are supported,
   *  QuerySupportedFormats returns a value equivalent to:
   *  (PP_PRINTOUTPUTFORMAT_PDF | PP_PRINTOUTPUTFORMAT_POSTSCRIPT)
   */
  uint32_t (*${name})(PP_Instance instance)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9996812 "Begin"
	public explicit_type "/** * Begins a print session with the given print settings. Calls to PrintPages * can only be made after a successful call to Begin. Returns the number of * pages required for the print output at the given page size (0 indicates * a failure). */ int32_t (*)(PP_Instance instance, const struct PP_PrintSettings_Dev* print_settings)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Begins a print session with the given print settings. Calls to PrintPages
   * can only be made after a successful call to Begin. Returns the number of
   * pages required for the print output at the given page size (0 indicates
   * a failure).
   */
  int32_t (*${name})(PP_Instance instance,
                   const struct PP_PrintSettings_Dev* print_settings)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9996940 "PrintPages"
	public explicit_type "/** * Prints the specified pages using the format specified in Begin. * Returns a PPB_Buffer resource that represents the printed output. Returns * 0 on failure. */ PP_Resource (*)( PP_Instance instance, const struct PP_PrintPageNumberRange_Dev* page_ranges, uint32_t page_range_count)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Prints the specified pages using the format specified in Begin.
   * Returns a PPB_Buffer resource that represents the printed output. Returns
   * 0 on failure.
   */
  PP_Resource (*${name})(
      PP_Instance instance,
      const struct PP_PrintPageNumberRange_Dev* page_ranges,
      uint32_t page_range_count)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9997068 "End"
	public explicit_type "/** Ends the print session. Further calls to PrintPages will fail. */ void (*)(PP_Instance instance)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /** Ends the print session. Further calls to PrintPages will fail. */
  void (*${name})(PP_Instance instance)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9997196 "IsScalingDisabled"
	public explicit_type "/** * Returns true if the current content should be printed into the full page * and not scaled down to fit within the printer's printable area. */ PP_Bool (*)(PP_Instance instance)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   *  Returns true if the current content should be printed into the full page
   *  and not scaled down to fit within the printer's printable area.
   */
  PP_Bool (*${name})(PP_Instance instance)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2771212 "PPP_Printing_Dev"
      visibility package stereotype "typedef" base_type class_ref 2771084 // PPP_Printing_Dev_0_6
      cpp_decl "${comment}typedef struct ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 5206668 // <dependency>
	relation 5206540 -_->
	  a default
	    cpp default "#include in source"
	    classrelation_ref 5206668 // <dependency>
	  b parent class_ref 2771084 // PPP_Printing_Dev_0_6
      end
    end

    class 2771340 "PPP_Scrollbar_Dev_0_3"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @file
 * This file defines the <code>PPP_Scrollbar_Dev</code> interface.
 
*
 * @addtogroup Interfaces
 * @{"
      attribute 9997324 "ValueChanged"
	public explicit_type "/** * Informs the instance that the scrollbar's value has changed. */ void (*)(PP_Instance instance, PP_Resource scrollbar, uint32_t value)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  /**
   *  Informs the instance that the scrollbar's value has changed.
   */
  void (*${name})(PP_Instance instance,
                       PP_Resource scrollbar,
                       uint32_t value)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9997452 "OverlayChanged"
	public explicit_type "/** * Informs the instance that the user has changed the system * scrollbar style. */ void (*)(PP_Instance instance, PP_Resource scrollbar, PP_Bool overlay)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Informs the instance that the user has changed the system
   * scrollbar style.
   */
  void (*${name})(PP_Instance instance,
                         PP_Resource scrollbar,
                         PP_Bool overlay)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2771468 "PPP_Scrollbar_Dev"
      visibility package stereotype "typedef" base_type class_ref 2771340 // PPP_Scrollbar_Dev_0_3
      cpp_decl "${comment}typedef struct ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 5206796 // <dependency>
	relation 5206668 -_->
	  a default
	    cpp default "#include in source"
	    classrelation_ref 5206796 // <dependency>
	  b parent class_ref 2771340 // PPP_Scrollbar_Dev_0_3
      end
    end

    class 2771596 "PPP_Scrollbar_Dev_0_2"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      attribute 9997580 "ValueChanged"
	public explicit_type "void (*)(PP_Instance instance, PP_Resource scrollbar, uint32_t value)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  void (*${name})(PP_Instance instance,
                       PP_Resource scrollbar,
                       uint32_t value)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2771724 "PPP_Selection_Dev_0_3"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @file
 * This file defines the PPP_Selection_Dev interface.
 
*
 * @addtogroup Interfaces
 * @{"
      attribute 9997708 "GetSelectedText"
	public explicit_type "PP_Var (*)(PP_Instance instance, PP_Bool html)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const} PP_Var (*${name})(PP_Instance instance, PP_Bool html)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2771852 "PPP_Selection_Dev"
      visibility package stereotype "typedef" base_type class_ref 2771724 // PPP_Selection_Dev_0_3
      cpp_decl "${comment}typedef struct ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 5206924 // <dependency>
	relation 5206796 -_->
	  a default
	    cpp default "#include in source"
	    classrelation_ref 5206924 // <dependency>
	  b parent class_ref 2771724 // PPP_Selection_Dev_0_3
      end
    end

    class 2771980 "PPP_TextInput_Dev_0_1"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @file
 * This file defines the <code>PPP_TextInput_Dev</code> interface.
 
*
 * @addtogroup Interfaces
 * @{
 
*
 * <code>PPP_TextInput_Dev</code> is a set of function pointers that the
 * plugin has to implement to provide hints for text input system (IME)."
      attribute 9997836 "RequestSurroundingText"
	public explicit_type "/** * Requests the plugin to send back the text arround the current caret or * selection by <code>PPB_TextInput_Dev::UpdateSurroundingText</code>. * It is recommended to include the <code>desired_number_of_characters</code> * characters before and after the selection, but not mandatory. */ void (*)(PP_Instance instance, uint32_t desired_number_of_characters)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  /**
   * Requests the plugin to send back the text arround the current caret or
   * selection by <code>PPB_TextInput_Dev::UpdateSurroundingText</code>.
   * It is recommended to include the <code>desired_number_of_characters</code>
   * characters before and after the selection, but not mandatory.
   */
  void (*${name})(PP_Instance instance,
                                 uint32_t desired_number_of_characters)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2772108 "PPP_TextInput_Dev"
      visibility package stereotype "typedef" base_type class_ref 2771980 // PPP_TextInput_Dev_0_1
      cpp_decl "${comment}typedef struct ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 5207052 // <dependency>
	relation 5206924 -_->
	  a default
	    cpp default "#include in source"
	    classrelation_ref 5207052 // <dependency>
	  b parent class_ref 2771980 // PPP_TextInput_Dev_0_1
      end
    end

    class 2772236 "PPP_VideoCapture_Dev_0_1"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @file
 * This file defines the <code>PPP_VideoCapture_Dev</code> interface.
 
*
 * @addtogroup Interfaces
 * @{
 
*
 * Video Capture client interface. See |PPB_VideoCapture_Dev| for general theory
 * of operation."
      attribute 9997964 "OnDeviceInfo"
	public explicit_type "/** * Signals the capture device information, such as resolution and frame rate, * and the array of buffers that the browser will use to send pixel data. * * |info| is a pointer to the PP_VideoCaptureDeviceInfo_Dev structure * containing resolution and frame rate. * |buffer_count| is the number of buffers, and |buffers| is the array of * PPB_Buffer_Dev buffers. * * Note: the buffers are passed without an extra reference. The plugin is * expected to add its own references to the buffers. */ void (*)(PP_Instance instance, PP_Resource video_capture, const struct PP_VideoCaptureDeviceInfo_Dev* info, uint32_t buffer_count, const PP_Resource buffers[])"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  /**
   * Signals the capture device information, such as resolution and frame rate,
   * and the array of buffers that the browser will use to send pixel data.
   *
   * |info| is a pointer to the PP_VideoCaptureDeviceInfo_Dev structure
   * containing resolution and frame rate.
   * |buffer_count| is the number of buffers, and |buffers| is the array of
   * PPB_Buffer_Dev buffers.
   *
   * Note: the buffers are passed without an extra reference. The plugin is
   * expected to add its own references to the buffers.
   */
  void (*${name})(PP_Instance instance,
                       PP_Resource video_capture,
                       const struct PP_VideoCaptureDeviceInfo_Dev* info,
                       uint32_t buffer_count,
                       const PP_Resource buffers[])${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9998092 "OnStatus"
	public explicit_type "/** * Signals status changes on the VideoCapture. |status| is a * one of the values from PP_VideoCaptureStatus_Dev; */ void (*)(PP_Instance instance, PP_Resource video_capture, uint32_t status)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Signals status changes on the VideoCapture. |status| is a
   * one of the values from PP_VideoCaptureStatus_Dev;
   */
  void (*${name})(PP_Instance instance,
                   PP_Resource video_capture,
                   uint32_t status)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9998220 "OnError"
	public explicit_type "/** * Signals an error from the video capture system. * * Errors that can be generated: * - PP_ERROR_NOMEMORY: not enough memory was available to allocate buffers. * - PP_ERROR_FAILED: video capture could not start. */ void (*)(PP_Instance instance, PP_Resource video_capture, uint32_t error_code)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Signals an error from the video capture system.
   *
   * Errors that can be generated:
   * - PP_ERROR_NOMEMORY: not enough memory was available to allocate buffers.
   * - PP_ERROR_FAILED: video capture could not start.
   */
  void (*${name})(PP_Instance instance,
                  PP_Resource video_capture,
                  uint32_t error_code)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9998348 "OnBufferReady"
	public explicit_type "/** * Signals that a buffer is available for consumption by the plugin. * * |buffer| is the index of the buffer, in the array returned by OnDeviceInfo. */ void (*)(PP_Instance instance, PP_Resource video_capture, uint32_t buffer)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Signals that a buffer is available for consumption by the plugin.
   *
   * |buffer| is the index of the buffer, in the array returned by OnDeviceInfo.
   */
  void (*${name})(PP_Instance instance,
                        PP_Resource video_capture,
                        uint32_t buffer)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2772364 "PPP_VideoCapture_Dev"
      visibility package stereotype "typedef" base_type class_ref 2772236 // PPP_VideoCapture_Dev_0_1
      cpp_decl "${comment}typedef struct ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 5207180 // <dependency>
	relation 5207052 -_->
	  a default
	    cpp default "#include in source"
	    classrelation_ref 5207180 // <dependency>
	  b parent class_ref 2772236 // PPP_VideoCapture_Dev_0_1
      end
    end

    class 2772492 "PPP_VideoDecoder_Dev_0_11"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @file
 * This file defines the <code>PPP_VideoDecoder_Dev</code> interface.
 
*
 * @addtogroup Interfaces
 * @{
 
*
 * PPP_VideoDecoder_Dev structure contains the function pointers that the
 * plugin MUST implement to provide services needed by the video decoder
 * implementation.
 *
 * See PPB_VideoDecoder_Dev for general usage tips."
      attribute 9998476 "ProvidePictureBuffers"
	public explicit_type "/** * Callback function to provide buffers for the decoded output pictures. If * succeeds plugin must provide buffers through AssignPictureBuffers function * to the API. If |req_num_of_bufs| matching exactly the specification * given in the parameters cannot be allocated decoder should be destroyed. * * Decoding will not proceed until buffers have been provided. * * Parameters: * |instance| the plugin instance to which the callback is responding. * |decoder| the PPB_VideoDecoder_Dev resource. * |req_num_of_bufs| tells how many buffers are needed by the decoder. * |dimensions| tells the dimensions of the buffer to allocate. * |texture_target| the type of texture used. */ void (*)(PP_Instance instance, PP_Resource decoder, uint32_t req_num_of_bufs, const struct PP_Size* dimensions, uint32_t texture_target)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  /**
   * Callback function to provide buffers for the decoded output pictures. If
   * succeeds plugin must provide buffers through AssignPictureBuffers function
   * to the API. If |req_num_of_bufs| matching exactly the specification
   * given in the parameters cannot be allocated decoder should be destroyed.
   *
   * Decoding will not proceed until buffers have been provided.
   *
   * Parameters:
   *  |instance| the plugin instance to which the callback is responding.
   *  |decoder| the PPB_VideoDecoder_Dev resource.
   *  |req_num_of_bufs| tells how many buffers are needed by the decoder.
   *  |dimensions| tells the dimensions of the buffer to allocate.
   *  |texture_target| the type of texture used.
   */
  void (*${name})(PP_Instance instance,
                                PP_Resource decoder,
                                uint32_t req_num_of_bufs,
                                const struct PP_Size* dimensions,
                                uint32_t texture_target)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9998604 "DismissPictureBuffer"
	public explicit_type "/** * Callback function for decoder to deliver unneeded picture buffers back to * the plugin. * * Parameters: * |instance| the plugin instance to which the callback is responding. * |decoder| the PPB_VideoDecoder_Dev resource. * |picture_buffer| points to the picture buffer that is no longer needed. */ void (*)(PP_Instance instance, PP_Resource decoder, int32_t picture_buffer_id)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Callback function for decoder to deliver unneeded picture buffers back to
   * the plugin.
   *
   * Parameters:
   *  |instance| the plugin instance to which the callback is responding.
   *  |decoder| the PPB_VideoDecoder_Dev resource.
   *  |picture_buffer| points to the picture buffer that is no longer needed.
   */
  void (*${name})(PP_Instance instance,
                               PP_Resource decoder,
                               int32_t picture_buffer_id)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9998732 "PictureReady"
	public explicit_type "/** * Callback function for decoder to deliver decoded pictures ready to be * displayed. Decoder expects the plugin to return the buffer back to the * decoder through ReusePictureBuffer function in PPB Video Decoder API. * * Parameters: * |instance| the plugin instance to which the callback is responding. * |decoder| the PPB_VideoDecoder_Dev resource. * |picture| is the picture that is ready. */ void (*)(PP_Instance instance, PP_Resource decoder, const struct PP_Picture_Dev* picture)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Callback function for decoder to deliver decoded pictures ready to be
   * displayed. Decoder expects the plugin to return the buffer back to the
   * decoder through ReusePictureBuffer function in PPB Video Decoder API.
   *
   * Parameters:
   *  |instance| the plugin instance to which the callback is responding.
   *  |decoder| the PPB_VideoDecoder_Dev resource.
   *  |picture| is the picture that is ready.
   */
  void (*${name})(PP_Instance instance,
                       PP_Resource decoder,
                       const struct PP_Picture_Dev* picture)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9998860 "NotifyError"
	public explicit_type "/** * Error handler callback for decoder to deliver information about detected * errors to the plugin. * * Parameters: * |instance| the plugin instance to which the callback is responding. * |decoder| the PPB_VideoDecoder_Dev resource. * |error| error is the enumeration specifying the error. */ void (*)(PP_Instance instance, PP_Resource decoder, PP_VideoDecodeError_Dev error)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Error handler callback for decoder to deliver information about detected
   * errors to the plugin.
   *
   * Parameters:
   *  |instance| the plugin instance to which the callback is responding.
   *  |decoder| the PPB_VideoDecoder_Dev resource.
   *  |error| error is the enumeration specifying the error.
   */
  void (*${name})(PP_Instance instance,
                      PP_Resource decoder,
                      PP_VideoDecodeError_Dev error)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2772620 "PPP_VideoDecoder_Dev"
      visibility package stereotype "typedef" base_type class_ref 2772492 // PPP_VideoDecoder_Dev_0_11
      cpp_decl "${comment}typedef struct ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 5207308 // <dependency>
	relation 5207180 -_->
	  a default
	    cpp default "#include in source"
	    classrelation_ref 5207308 // <dependency>
	  b parent class_ref 2772492 // PPP_VideoDecoder_Dev_0_11
      end
    end

    class 2772748 "PPP_VideoDecoder_Dev_0_9"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      attribute 9998988 "ProvidePictureBuffers"
	public explicit_type "void (*)(PP_Instance instance, PP_Resource decoder, uint32_t req_num_of_bufs, const struct PP_Size* dimensions)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  void (*${name})(PP_Instance instance,
                                PP_Resource decoder,
                                uint32_t req_num_of_bufs,
                                const struct PP_Size* dimensions)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9999116 "DismissPictureBuffer"
	public explicit_type "void (*)(PP_Instance instance, PP_Resource decoder, int32_t picture_buffer_id)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  void (*${name})(PP_Instance instance,
                               PP_Resource decoder,
                               int32_t picture_buffer_id)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9999244 "PictureReady"
	public explicit_type "void (*)(PP_Instance instance, PP_Resource decoder, const struct PP_Picture_Dev* picture)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  void (*${name})(PP_Instance instance,
                       PP_Resource decoder,
                       const struct PP_Picture_Dev* picture)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9999372 "EndOfStream"
	public explicit_type "void (*)(PP_Instance instance, PP_Resource decoder)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  void (*${name})(PP_Instance instance, PP_Resource decoder)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9999500 "NotifyError"
	public explicit_type "void (*)(PP_Instance instance, PP_Resource decoder, PP_VideoDecodeError_Dev error)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  void (*${name})(PP_Instance instance,
                      PP_Resource decoder,
                      PP_VideoDecodeError_Dev error)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2772876 "PPP_VideoDecoder_Dev_0_10"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      attribute 9999628 "ProvidePictureBuffers"
	public explicit_type "void (*)(PP_Instance instance, PP_Resource decoder, uint32_t req_num_of_bufs, const struct PP_Size* dimensions)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  void (*${name})(PP_Instance instance,
                                PP_Resource decoder,
                                uint32_t req_num_of_bufs,
                                const struct PP_Size* dimensions)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9999756 "DismissPictureBuffer"
	public explicit_type "void (*)(PP_Instance instance, PP_Resource decoder, int32_t picture_buffer_id)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  void (*${name})(PP_Instance instance,
                               PP_Resource decoder,
                               int32_t picture_buffer_id)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 9999884 "PictureReady"
	public explicit_type "void (*)(PP_Instance instance, PP_Resource decoder, const struct PP_Picture_Dev* picture)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  void (*${name})(PP_Instance instance,
                       PP_Resource decoder,
                       const struct PP_Picture_Dev* picture)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10000012 "NotifyError"
	public explicit_type "void (*)(PP_Instance instance, PP_Resource decoder, PP_VideoDecodeError_Dev error)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  void (*${name})(PP_Instance instance,
                      PP_Resource decoder,
                      PP_VideoDecodeError_Dev error)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2773004 "PPP_Widget_Dev_0_2"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @file
 * Implementation of the Widget interface.
 
*
 * @addtogroup Interfaces
 * @{
 
*
 * The interface for reusing browser widgets."
      attribute 10000140 "Invalidate"
	public explicit_type "/** * Informs the instance that the given rectangle needs to be repainted. */ void (*)(PP_Instance instance, PP_Resource widget, const struct PP_Rect* dirty_rect)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  /**
   * Informs the instance that the given rectangle needs to be repainted.
   */
  void (*${name})(PP_Instance instance,
                     PP_Resource widget,
                     const struct PP_Rect* dirty_rect)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2773132 "PPP_Widget_Dev"
      visibility package stereotype "typedef" base_type class_ref 2773004 // PPP_Widget_Dev_0_2
      cpp_decl "${comment}typedef struct ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 5207436 // <dependency>
	relation 5207308 -_->
	  a default
	    cpp default "#include in source"
	    classrelation_ref 5207436 // <dependency>
	  b parent class_ref 2773004 // PPP_Widget_Dev_0_2
      end
    end

    class 2773260 "PPP_Zoom_Dev_0_3"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @file
 * Implementation of the Zoom interface.
 
*
 * @addtogroup Interfaces
 * @{
 
*
 * Zoom interface should only apply to those full-page \"plugin-document\"."
      attribute 10000268 "Zoom"
	public explicit_type "/** * Instruct plug-in to zoom according to the given factor and whether the zoom * only applies to text only. The scale factor is the percentage divided by * 100, i.e. 150% zoom is 1.5. */ void (*)(PP_Instance instance, double factor, PP_Bool text_only)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  /**
   * Instruct plug-in to zoom according to the given factor and whether the zoom
   * only applies to text only.  The scale factor is the percentage divided by
   * 100, i.e. 150% zoom is 1.5.
   */
  void (*${name})(PP_Instance instance, double factor, PP_Bool text_only)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2773388 "PPP_Zoom_Dev"
      visibility package stereotype "typedef" base_type class_ref 2773260 // PPP_Zoom_Dev_0_3
      cpp_decl "${comment}typedef struct ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 5207564 // <dependency>
	relation 5207436 -_->
	  a default
	    cpp default "#include in source"
	    classrelation_ref 5207564 // <dependency>
	  b parent class_ref 2773260 // PPP_Zoom_Dev_0_3
      end
    end
  end

  deploymentview 260620 "dev"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 1039884 "pp_cursor_type_dev"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2756748 // PP_CursorType_Dev
      end
    end

    artifact 1040012 "pp_print_settings_dev"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2756876 // PP_PrintOrientation_Dev
	class_ref 2757004 // PP_PrintOutputFormat_Dev
	class_ref 2757132 // PP_PrintScalingOption_Dev
	class_ref 2757260 // PP_PrintSettings_Dev
      end
    end

    artifact 1040140 "pp_video_capture_dev"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2757388 // PP_VideoCaptureDeviceInfo_Dev
	class_ref 2757516 // PP_VideoCaptureStatus_Dev
      end
    end

    artifact 1040268 "pp_video_dev"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2757644 // PP_VideoDecoder_Profile
	class_ref 2757772 // PP_VideoBitstreamBuffer_Dev
	class_ref 2757900 // PP_PictureBuffer_Dev
	class_ref 2758028 // PP_Picture_Dev
	class_ref 2758156 // PP_VideoDecodeError_Dev
      end
    end

    artifact 1040396 "ppb_audio_input_dev"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2758284 // PPB_AudioInput_Callback
	class_ref 2758412 // PPB_AudioInput_Dev_0_3
	class_ref 2758540 // PPB_AudioInput_Dev
	class_ref 2758668 // PPB_AudioInput_Dev_0_2
      end
    end

    artifact 1040524 "ppb_buffer_dev"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2758796 // PPB_Buffer_Dev_0_4
	class_ref 2758924 // PPB_Buffer_Dev
      end
    end

    artifact 1040652 "ppb_char_set_dev"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2759052 // PP_CharSet_ConversionError
	class_ref 2759180 // PPB_CharSet_Dev_0_4
	class_ref 2759308 // PPB_CharSet_Dev
      end
    end

    artifact 1040780 "ppb_console_dev"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2759436 // PP_LogLevel_Dev
	class_ref 2759564 // PPB_Console_Dev_0_1
	class_ref 2759692 // PPB_Console_Dev
      end
    end

    artifact 1040908 "ppb_crypto_dev"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2759820 // PPB_Crypto_Dev_0_1
	class_ref 2759948 // PPB_Crypto_Dev
      end
    end

    artifact 1041036 "ppb_cursor_control_dev"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2760076 // PPB_CursorControl_Dev_0_4
	class_ref 2760204 // PPB_CursorControl_Dev
      end
    end

    artifact 1041164 "ppb_device_ref_dev"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2760332 // PP_MonitorDeviceChangeCallback
	class_ref 2760460 // PP_DeviceType_Dev
	class_ref 2760588 // PPB_DeviceRef_Dev_0_1
	class_ref 2760716 // PPB_DeviceRef_Dev
      end
    end

    artifact 1041292 "ppb_directory_reader_dev"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2760844 // PP_DirectoryEntry_Dev
	class_ref 2760972 // PPB_DirectoryReader_Dev_0_6
	class_ref 2761100 // PPB_DirectoryReader_Dev
      end
    end

    artifact 1041420 "ppb_file_chooser_dev"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2761228 // PP_FileChooserMode_Dev
	class_ref 2761356 // PPB_FileChooser_Dev_0_6
	class_ref 2761484 // PPB_FileChooser_Dev
	class_ref 2761612 // PPB_FileChooser_Dev_0_5
      end
    end

    artifact 1041548 "ppb_find_dev"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2761740 // PPB_Find_Dev_0_3
	class_ref 2761868 // PPB_Find_Dev
      end
    end

    artifact 1041676 "ppb_font_dev"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2761996 // PP_FontFamily_Dev
	class_ref 2762124 // PP_FontWeight_Dev
	class_ref 2762252 // PP_FontDescription_Dev
	class_ref 2762380 // PP_FontMetrics_Dev
	class_ref 2762508 // PP_TextRun_Dev
	class_ref 2762636 // PPB_Font_Dev_0_6
	class_ref 2762764 // PPB_Font_Dev
      end
    end

    artifact 1041804 "ppb_gles_chromium_texture_mapping_dev"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2762892 // PPB_GLESChromiumTextureMapping_Dev_0_1
	class_ref 2763020 // PPB_GLESChromiumTextureMapping_Dev
      end
    end

    artifact 1041932 "ppb_graphics_2d_dev"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2763148 // PPB_Graphics2D_Dev_0_1
	class_ref 2763276 // PPB_Graphics2D_Dev
      end
    end

    artifact 1042060 "ppb_ime_input_event_dev"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2763404 // PPB_IMEInputEvent_Dev_0_2
	class_ref 2763532 // PPB_IMEInputEvent_Dev
	class_ref 2763660 // PPB_IMEInputEvent_Dev_0_1
      end
    end

    artifact 1042188 "ppb_keyboard_input_event_dev"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2763788 // PPB_KeyboardInputEvent_Dev_0_1
	class_ref 2763916 // PPB_KeyboardInputEvent_Dev
      end
    end

    artifact 1042316 "ppb_memory_dev"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2764044 // PPB_Memory_Dev_0_1
	class_ref 2764172 // PPB_Memory_Dev
      end
    end

    artifact 1042444 "ppb_printing_dev"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2764300 // PPB_Printing_Dev_0_7
	class_ref 2764428 // PPB_Printing_Dev
	class_ref 2764556 // PPB_Printing_Dev_0_6
      end
    end

    artifact 1042572 "ppb_resource_array_dev"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2764684 // PPB_ResourceArray_Dev_0_1
	class_ref 2764812 // PPB_ResourceArray_Dev
      end
    end

    artifact 1042700 "ppb_scrollbar_dev"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2764940 // PP_ScrollBy_Dev
	class_ref 2765068 // PPB_Scrollbar_Dev_0_5
	class_ref 2765196 // PPB_Scrollbar_Dev
      end
    end

    artifact 1042828 "ppb_testing_dev"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2765324 // PPB_Testing_Dev_0_91
	class_ref 2765452 // PPB_Testing_Dev
	class_ref 2765580 // PPB_Testing_Dev_0_7
	class_ref 2765708 // PPB_Testing_Dev_0_8
	class_ref 2765836 // PPB_Testing_Dev_0_9
      end
    end

    artifact 1042956 "ppb_text_input_dev"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2765964 // PP_TextInput_Type
	class_ref 2766092 // PPB_TextInput_Dev_0_2
	class_ref 2766220 // PPB_TextInput_Dev
	class_ref 2766348 // PPB_TextInput_Dev_0_1
      end
    end

    artifact 1043084 "ppb_trace_event_dev"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2766476 // PPB_Trace_Event_Dev_0_1
	class_ref 2766604 // PPB_Trace_Event_Dev
      end
    end

    artifact 1043212 "ppb_truetype_font_dev"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2766732 // PP_TrueTypeFontFamily_Dev
	class_ref 2766860 // PP_TrueTypeFontStyle_Dev
	class_ref 2766988 // PP_TrueTypeFontWeight_Dev
	class_ref 2767116 // PP_TrueTypeFontWidth_Dev
	class_ref 2767244 // PP_TrueTypeFontCharset_Dev
	class_ref 2767372 // PP_TrueTypeFontDesc_Dev
	class_ref 2767500 // PPB_TrueTypeFont_Dev_0_1
	class_ref 2767628 // PPB_TrueTypeFont_Dev
      end
    end

    artifact 1043340 "ppb_url_util_dev"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2767756 // PP_URLComponent_Dev
	class_ref 2767884 // PP_URLComponents_Dev
	class_ref 2768012 // PPB_URLUtil_Dev_0_6
	class_ref 2768140 // PPB_URLUtil_Dev
      end
    end

    artifact 1043468 "ppb_var_array_dev"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2768268 // PPB_VarArray_Dev_0_1
	class_ref 2768396 // PPB_VarArray_Dev
      end
    end

    artifact 1043596 "ppb_var_deprecated"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2768524 // PPB_Var_Deprecated
      end
    end

    artifact 1043724 "ppb_var_dictionary_dev"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2768652 // PPB_VarDictionary_Dev_0_1
	class_ref 2768780 // PPB_VarDictionary_Dev
      end
    end

    artifact 1043852 "ppb_video_capture_dev"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2768908 // PPB_VideoCapture_Dev_0_3
	class_ref 2769036 // PPB_VideoCapture_Dev
	class_ref 2769164 // PPB_VideoCapture_Dev_0_2
      end
    end

    artifact 1043980 "ppb_video_decoder_dev"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2769292 // PPB_VideoDecoder_Dev_0_16
	class_ref 2769420 // PPB_VideoDecoder_Dev
      end
    end

    artifact 1044108 "ppb_view_dev"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2769548 // PPB_View_Dev_0_1
	class_ref 2769676 // PPB_View_Dev
      end
    end

    artifact 1044236 "ppb_widget_dev"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2769804 // PPB_Widget_Dev_0_4
	class_ref 2769932 // PPB_Widget_Dev
	class_ref 2770060 // PPB_Widget_Dev_0_3
      end
    end

    artifact 1044364 "ppb_zoom_dev"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2770188 // PPB_Zoom_Dev_0_2
	class_ref 2770316 // PPB_Zoom_Dev
      end
    end

    artifact 1044492 "ppp_class_deprecated"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2770444 // PPP_Class_Deprecated
      end
    end

    artifact 1044620 "ppp_find_dev"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2770572 // PPP_Find_Dev
      end
    end

    artifact 1044748 "ppp_network_state_dev"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2770700 // PPP_NetworkState_Dev_0_1
	class_ref 2770828 // PPP_NetworkState_Dev
      end
    end

    artifact 1044876 "ppp_printing_dev"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2770956 // PP_PrintPageNumberRange_Dev
	class_ref 2771084 // PPP_Printing_Dev_0_6
	class_ref 2771212 // PPP_Printing_Dev
      end
    end

    artifact 1045004 "ppp_scrollbar_dev"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2771340 // PPP_Scrollbar_Dev_0_3
	class_ref 2771468 // PPP_Scrollbar_Dev
	class_ref 2771596 // PPP_Scrollbar_Dev_0_2
      end
    end

    artifact 1045132 "ppp_selection_dev"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2771724 // PPP_Selection_Dev_0_3
	class_ref 2771852 // PPP_Selection_Dev
      end
    end

    artifact 1045260 "ppp_text_input_dev"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2771980 // PPP_TextInput_Dev_0_1
	class_ref 2772108 // PPP_TextInput_Dev
      end
    end

    artifact 1045388 "ppp_video_capture_dev"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2772236 // PPP_VideoCapture_Dev_0_1
	class_ref 2772364 // PPP_VideoCapture_Dev
      end
    end

    artifact 1045516 "ppp_video_decoder_dev"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2772492 // PPP_VideoDecoder_Dev_0_11
	class_ref 2772620 // PPP_VideoDecoder_Dev
	class_ref 2772748 // PPP_VideoDecoder_Dev_0_9
	class_ref 2772876 // PPP_VideoDecoder_Dev_0_10
      end
    end

    artifact 1045644 "ppp_widget_dev"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2773004 // PPP_Widget_Dev_0_2
	class_ref 2773132 // PPP_Widget_Dev
      end
    end

    artifact 1045772 "ppp_zoom_dev"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2773260 // PPP_Zoom_Dev_0_3
	class_ref 2773388 // PPP_Zoom_Dev
      end
    end
  end
end
