class Client
!!!794252.cpp!!!	Client(in audioFlinger : sp<AudioFlinger>, in pid : pid_t)
    // 1 MB of address space is good for 32 tracks, 8 buffers each, 4 KB/buffer
!!!794380.cpp!!!	~Client()
    mAudioFlinger->removeClient_l(mPid);
!!!794508.cpp!!!	heap() : sp<MemoryDealer>
    return mMemoryDealer;
!!!794892.cpp!!!	reserveTimedTrack() : bool
    const int kMaxTimedTracksPerClient = 4;

    Mutex::Autolock _l(mTimedTrackLock);

    if (mTimedTrackCount >= kMaxTimedTracksPerClient) {
        ALOGW("can not create timed track - pid %d has exceeded the limit",
             mPid);
        return false;
    }

    mTimedTrackCount++;
    return true;
!!!795020.cpp!!!	releaseTimedTrack() : void
    Mutex::Autolock _l(mTimedTrackLock);
    mTimedTrackCount--;
