class DisplayListRenderer
!!!1054476.cpp!!!	~DisplayListRenderer()
    reset();
!!!1054604.cpp!!!	isDeferred() : bool
    return true;
!!!1054732.cpp!!!	setViewport(in width : int, in height : int) : void
    mOrthoMatrix.loadOrtho(0, width, height, 0, -1, 1);

    mWidth = width;
    mHeight = height;
!!!1054860.cpp!!!	prepareDirty(in left : float, in top : float, in right : float, in bottom : float, in opaque : bool) : status_t
    mSnapshot = new Snapshot(mFirstSnapshot,
            SkCanvas::kMatrix_SaveFlag | SkCanvas::kClip_SaveFlag);
    mSaveCount = 1;

    mSnapshot->setClip(0.0f, 0.0f, mWidth, mHeight);
    mDirtyClip = opaque;

    mRestoreSaveCount = -1;

    return DrawGlInfo::kStatusDone; // No invalidate needed at record-time
!!!1054988.cpp!!!	finish() : void
    insertRestoreToCount();
    insertTranlate();
!!!1055116.cpp!!!	callDrawGLFunction(inout functor : Functor, inout dirty : Rect) : status_t
    // Ignore dirty during recording, it matters only when we replay
    addOp(DisplayList::DrawGLFunction);
    addInt((int) functor);
    mFunctorCount++;
    return DrawGlInfo::kStatusDone; // No invalidate needed at record-time
!!!1055500.cpp!!!	save(in flags : int) : int
    addOp(DisplayList::Save);
    addInt(flags);
    return OpenGLRenderer::save(flags);
!!!1055628.cpp!!!	restore() : void
    if (mRestoreSaveCount < 0) {
        restoreToCount(getSaveCount() - 1);
        return;
    }

    mRestoreSaveCount--;
    insertTranlate();
    OpenGLRenderer::restore();
!!!1055756.cpp!!!	restoreToCount(in saveCount : int) : void
    mRestoreSaveCount = saveCount;
    insertTranlate();
    OpenGLRenderer::restoreToCount(saveCount);
!!!1055884.cpp!!!	saveLayer(in left : float, in top : float, in right : float, in bottom : float, inout p : SkPaint, in flags : int) : int
    addOp(DisplayList::SaveLayer);
    addBounds(left, top, right, bottom);
    addPaint(p);
    addInt(flags);
    return OpenGLRenderer::save(flags);
!!!1056012.cpp!!!	saveLayerAlpha(in left : float, in top : float, in right : float, in bottom : float, in alpha : int, in flags : int) : int
    addOp(DisplayList::SaveLayerAlpha);
    addBounds(left, top, right, bottom);
    addInt(alpha);
    addInt(flags);
    return OpenGLRenderer::save(flags);
!!!1056140.cpp!!!	translate(in dx : float, in dy : float) : void
    mHasTranslate = true;
    mTranslateX += dx;
    mTranslateY += dy;
    insertRestoreToCount();
    OpenGLRenderer::translate(dx, dy);
!!!1056268.cpp!!!	rotate(in degrees : float) : void
    addOp(DisplayList::Rotate);
    addFloat(degrees);
    OpenGLRenderer::rotate(degrees);
!!!1056396.cpp!!!	scale(in sx : float, in sy : float) : void
    addOp(DisplayList::Scale);
    addPoint(sx, sy);
    OpenGLRenderer::scale(sx, sy);
!!!1056524.cpp!!!	skew(in sx : float, in sy : float) : void
    addOp(DisplayList::Skew);
    addPoint(sx, sy);
    OpenGLRenderer::skew(sx, sy);
!!!1056652.cpp!!!	setMatrix(inout matrix : SkMatrix) : void
    addOp(DisplayList::SetMatrix);
    addMatrix(matrix);
    OpenGLRenderer::setMatrix(matrix);
!!!1056780.cpp!!!	concatMatrix(inout matrix : SkMatrix) : void
    addOp(DisplayList::ConcatMatrix);
    addMatrix(matrix);
    OpenGLRenderer::concatMatrix(matrix);
!!!1056908.cpp!!!	clipRect(in left : float, in top : float, in right : float, in bottom : float, in op : SkRegion::Op) : bool
    addOp(DisplayList::ClipRect);
    addBounds(left, top, right, bottom);
    addInt(op);
    return OpenGLRenderer::clipRect(left, top, right, bottom, op);
!!!1057036.cpp!!!	drawDisplayList(inout displayList : DisplayList, inout dirty : Rect, in flags : int32_t, in level : uint32_t = 0) : status_t
    // dirty is an out parameter and should not be recorded,
    // it matters only when replaying the display list

    addOp(DisplayList::DrawDisplayList);
    addDisplayList(displayList);
    addInt(flags);
    return DrawGlInfo::kStatusDone;
!!!1057164.cpp!!!	drawLayer(inout layer : Layer, in x : float, in y : float, inout paint : SkPaint) : status_t
    addOp(DisplayList::DrawLayer);
    addLayer(layer);
    addPoint(x, y);
    addPaint(paint);
    return DrawGlInfo::kStatusDone;
!!!1057292.cpp!!!	drawBitmap(inout bitmap : SkBitmap, in left : float, in top : float, inout paint : SkPaint) : status_t
    const bool reject = quickRejectNoScissor(left, top,
            left + bitmap->width(), top + bitmap->height());
    uint32_t* location = addOp(DisplayList::DrawBitmap, reject);
    addBitmap(bitmap);
    addPoint(left, top);
    addPaint(paint);
    addSkip(location);
    return DrawGlInfo::kStatusDone;
!!!1057420.cpp!!!	drawBitmap(inout bitmap : SkBitmap, inout matrix : SkMatrix, inout paint : SkPaint) : status_t
    Rect r(0.0f, 0.0f, bitmap->width(), bitmap->height());
    const mat4 transform(*matrix);
    transform.mapRect(r);

    const bool reject = quickRejectNoScissor(r.left, r.top, r.right, r.bottom);
    uint32_t* location = addOp(DisplayList::DrawBitmapMatrix, reject);
    addBitmap(bitmap);
    addMatrix(matrix);
    addPaint(paint);
    addSkip(location);
    return DrawGlInfo::kStatusDone;
!!!1057548.cpp!!!	drawBitmap(inout bitmap : SkBitmap, in srcLeft : float, in srcTop : float, in srcRight : float, in srcBottom : float, in dstLeft : float, in dstTop : float, in dstRight : float, in dstBottom : float, inout paint : SkPaint) : status_t
    const bool reject = quickRejectNoScissor(dstLeft, dstTop, dstRight, dstBottom);
    uint32_t* location = addOp(DisplayList::DrawBitmapRect, reject);
    addBitmap(bitmap);
    addBounds(srcLeft, srcTop, srcRight, srcBottom);
    addBounds(dstLeft, dstTop, dstRight, dstBottom);
    addPaint(paint);
    addSkip(location);
    return DrawGlInfo::kStatusDone;
!!!1057676.cpp!!!	drawBitmapData(inout bitmap : SkBitmap, in left : float, in top : float, inout paint : SkPaint) : status_t
    const bool reject = quickRejectNoScissor(left, top,
            left + bitmap->width(), top + bitmap->height());
    uint32_t* location = addOp(DisplayList::DrawBitmapData, reject);
    addBitmapData(bitmap);
    addPoint(left, top);
    addPaint(paint);
    addSkip(location);
    return DrawGlInfo::kStatusDone;
!!!1057804.cpp!!!	drawBitmapMesh(inout bitmap : SkBitmap, in meshWidth : int, in meshHeight : int, inout vertices : float, inout colors : int, inout paint : SkPaint) : status_t
    addOp(DisplayList::DrawBitmapMesh);
    addBitmap(bitmap);
    addInt(meshWidth);
    addInt(meshHeight);
    addFloats(vertices, (meshWidth + 1) * (meshHeight + 1) * 2);
    if (colors) {
        addInt(1);
        addInts(colors, (meshWidth + 1) * (meshHeight + 1));
    } else {
        addInt(0);
    }
    addPaint(paint);
    return DrawGlInfo::kStatusDone;
!!!1057932.cpp!!!	drawPatch(inout bitmap : SkBitmap, in xDivs : int32_t, in yDivs : int32_t, in colors : uint32_t, in width : uint32_t, in height : uint32_t, in numColors : int8_t, in left : float, in top : float, in right : float, in bottom : float, inout paint : SkPaint) : status_t
    int alpha;
    SkXfermode::Mode mode;
    OpenGLRenderer::getAlphaAndModeDirect(paint, &alpha, &mode);

    const bool reject = quickRejectNoScissor(left, top, right, bottom);
    uint32_t* location = addOp(DisplayList::DrawPatch, reject);
    addBitmap(bitmap);
    addInts(xDivs, width);
    addInts(yDivs, height);
    addUInts(colors, numColors);
    addBounds(left, top, right, bottom);
    addInt(alpha);
    addInt(mode);
    addSkip(location);
    return DrawGlInfo::kStatusDone;
!!!1058060.cpp!!!	drawColor(in color : int, in mode : SkXfermode::Mode) : status_t
    addOp(DisplayList::DrawColor);
    addInt(color);
    addInt(mode);
    return DrawGlInfo::kStatusDone;
!!!1058188.cpp!!!	drawRect(in left : float, in top : float, in right : float, in bottom : float, inout paint : SkPaint) : status_t
    const bool reject = paint->getStyle() == SkPaint::kFill_Style &&
            quickRejectNoScissor(left, top, right, bottom);
    uint32_t* location = addOp(DisplayList::DrawRect, reject);
    addBounds(left, top, right, bottom);
    addPaint(paint);
    addSkip(location);
    return DrawGlInfo::kStatusDone;
!!!1058316.cpp!!!	drawRoundRect(in left : float, in top : float, in right : float, in bottom : float, in rx : float, in ry : float, inout paint : SkPaint) : status_t
    const bool reject = paint->getStyle() == SkPaint::kFill_Style &&
            quickRejectNoScissor(left, top, right, bottom);
    uint32_t* location = addOp(DisplayList::DrawRoundRect, reject);
    addBounds(left, top, right, bottom);
    addPoint(rx, ry);
    addPaint(paint);
    addSkip(location);
    return DrawGlInfo::kStatusDone;
!!!1058444.cpp!!!	drawCircle(in x : float, in y : float, in radius : float, inout paint : SkPaint) : status_t
    addOp(DisplayList::DrawCircle);
    addPoint(x, y);
    addFloat(radius);
    addPaint(paint);
    return DrawGlInfo::kStatusDone;
!!!1058572.cpp!!!	drawOval(in left : float, in top : float, in right : float, in bottom : float, inout paint : SkPaint) : status_t
    addOp(DisplayList::DrawOval);
    addBounds(left, top, right, bottom);
    addPaint(paint);
    return DrawGlInfo::kStatusDone;
!!!1058700.cpp!!!	drawArc(in left : float, in top : float, in right : float, in bottom : float, in startAngle : float, in sweepAngle : float, in useCenter : bool, inout paint : SkPaint) : status_t
    addOp(DisplayList::DrawArc);
    addBounds(left, top, right, bottom);
    addPoint(startAngle, sweepAngle);
    addInt(useCenter ? 1 : 0);
    addPaint(paint);
    return DrawGlInfo::kStatusDone;
!!!1058828.cpp!!!	drawPath(inout path : SkPath, inout paint : SkPaint) : status_t
    float left, top, offset;
    uint32_t width, height;
    computePathBounds(path, paint, left, top, offset, width, height);

    left -= offset;
    top -= offset;

    const bool reject = quickRejectNoScissor(left, top, left + width, top + height);
    uint32_t* location = addOp(DisplayList::DrawPath, reject);
    addPath(path);
    addPaint(paint);
    addSkip(location);
    return DrawGlInfo::kStatusDone;
!!!1058956.cpp!!!	drawLines(inout points : float, in count : int, inout paint : SkPaint) : status_t
    addOp(DisplayList::DrawLines);
    addFloats(points, count);
    addPaint(paint);
    return DrawGlInfo::kStatusDone;
!!!1059084.cpp!!!	drawPoints(inout points : float, in count : int, inout paint : SkPaint) : status_t
    addOp(DisplayList::DrawPoints);
    addFloats(points, count);
    addPaint(paint);
    return DrawGlInfo::kStatusDone;
!!!1059212.cpp!!!	drawTextOnPath(in text : char, in bytesCount : int, in count : int, inout path : SkPath, in hOffset : float, in vOffset : float, inout paint : SkPaint) : status_t
    if (!text || count <= 0) return DrawGlInfo::kStatusDone;
    addOp(DisplayList::DrawTextOnPath);
    addText(text, bytesCount);
    addInt(count);
    addPath(path);
    addFloat(hOffset);
    addFloat(vOffset);
    paint->setAntiAlias(true);
    SkPaint* addedPaint = addPaint(paint);
    FontRenderer& fontRenderer = mCaches.fontRenderer->getFontRenderer(addedPaint);
    fontRenderer.precache(addedPaint, text, count);
    return DrawGlInfo::kStatusDone;
!!!1059340.cpp!!!	drawPosText(in text : char, in bytesCount : int, in count : int, in positions : float, inout paint : SkPaint) : status_t
    if (!text || count <= 0) return DrawGlInfo::kStatusDone;
    addOp(DisplayList::DrawPosText);
    addText(text, bytesCount);
    addInt(count);
    addFloats(positions, count * 2);
    paint->setAntiAlias(true);
    SkPaint* addedPaint = addPaint(paint);
    FontRenderer& fontRenderer = mCaches.fontRenderer->getFontRenderer(addedPaint);
    fontRenderer.precache(addedPaint, text, count);
    return DrawGlInfo::kStatusDone;
!!!1059468.cpp!!!	drawText(in text : char, in bytesCount : int, in count : int, in x : float, in y : float, in positions : float, inout paint : SkPaint, in length : float) : status_t
    if (!text || count <= 0) return DrawGlInfo::kStatusDone;

    // TODO: We should probably make a copy of the paint instead of modifying
    //       it; modifying the paint will change its generationID the first
    //       time, which might impact caches. More investigation needed to
    //       see if it matters.
    //       If we make a copy, then drawTextDecorations() should *not* make
    //       its own copy as it does right now.
    // Beware: this needs Glyph encoding (already done on the Paint constructor)
    paint->setAntiAlias(true);
    if (length < 0.0f) length = paint->measureText(text, bytesCount);

    bool reject = false;
    if (CC_LIKELY(paint->getTextAlign() == SkPaint::kLeft_Align)) {
        SkPaint::FontMetrics metrics;
        paint->getFontMetrics(&metrics, 0.0f);
        reject = quickRejectNoScissor(x, y + metrics.fTop, x + length, y + metrics.fBottom);
    }

    uint32_t* location = addOp(DisplayList::DrawText, reject);
    addText(text, bytesCount);
    addInt(count);
    addFloat(x);
    addFloat(y);
    addFloats(positions, count * 2);
    SkPaint* addedPaint = addPaint(paint);
    if (!reject) {
        FontRenderer& fontRenderer = mCaches.fontRenderer->getFontRenderer(addedPaint);
        fontRenderer.precache(addedPaint, text, count);
    }
    addFloat(length);
    addSkip(location);
    return DrawGlInfo::kStatusDone;
!!!1059596.cpp!!!	resetShader() : void
    addOp(DisplayList::ResetShader);
!!!1059724.cpp!!!	setupShader(inout shader : SkiaShader) : void
    addOp(DisplayList::SetupShader);
    addShader(shader);
!!!1059852.cpp!!!	resetColorFilter() : void
    addOp(DisplayList::ResetColorFilter);
!!!1059980.cpp!!!	setupColorFilter(inout filter : SkiaColorFilter) : void
    addOp(DisplayList::SetupColorFilter);
    addColorFilter(filter);
!!!1060108.cpp!!!	resetShadow() : void
    addOp(DisplayList::ResetShadow);
!!!1060236.cpp!!!	setupShadow(in radius : float, in dx : float, in dy : float, in color : int) : void
    addOp(DisplayList::SetupShadow);
    addFloat(radius);
    addPoint(dx, dy);
    addInt(color);
!!!1060364.cpp!!!	resetPaintFilter() : void
    addOp(DisplayList::ResetPaintFilter);
!!!1060492.cpp!!!	setupPaintFilter(in clearBits : int, in setBits : int) : void
    addOp(DisplayList::SetupPaintFilter);
    addInt(clearBits);
    addInt(setBits);
!!!1060620.cpp!!!	reset() : void
    mWriter.reset();

    mCaches.resourceCache.lock();

    for (size_t i = 0; i < mBitmapResources.size(); i++) {
        mCaches.resourceCache.decrementRefcountLocked(mBitmapResources.itemAt(i));
    }

    for (size_t i = 0; i < mOwnedBitmapResources.size(); i++) {
        mCaches.resourceCache.decrementRefcountLocked(mOwnedBitmapResources.itemAt(i));
    }

    for (size_t i = 0; i < mFilterResources.size(); i++) {
        mCaches.resourceCache.decrementRefcountLocked(mFilterResources.itemAt(i));
    }

    for (size_t i = 0; i < mShaders.size(); i++) {
        mCaches.resourceCache.decrementRefcountLocked(mShaders.itemAt(i));
    }

    for (size_t i = 0; i < mSourcePaths.size(); i++) {
        mCaches.resourceCache.decrementRefcountLocked(mSourcePaths.itemAt(i));
    }

    for (size_t i = 0; i < mLayers.size(); i++) {
        mCaches.resourceCache.decrementRefcountLocked(mLayers.itemAt(i));
    }

    mCaches.resourceCache.unlock();

    mBitmapResources.clear();
    mOwnedBitmapResources.clear();
    mFilterResources.clear();
    mSourcePaths.clear();

    mShaders.clear();
    mShaderMap.clear();

    mPaints.clear();
    mPaintMap.clear();

    mPaths.clear();
    mPathMap.clear();

    mMatrices.clear();

    mLayers.clear();

    mHasDrawOps = false;
    mFunctorCount = 0;
