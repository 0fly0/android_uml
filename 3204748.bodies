class AutoFocusFragment
!!!13771532.java!!!	onCreate(inout savedInstanceState : Bundle) : void
        super.onCreate(savedInstanceState);

        mGlobalLayoutListener = new ViewTreeObserver.OnGlobalLayoutListener() {
            @Override
            public void onGlobalLayout() {
                /* requestFocus could fail at the first attempt in some cases.
                 * One example is calling addPreferencesFromResource in onResume.
                 * (see: LocationSettings, SecuritySettings) In that case, corresponding
                 * ListView's adapter is reset and ListView invalidates its view before
                 * inflate view.
                 * As a result, view traversal occurs twice -- one for empty view and
                 * another for drawing its content.
                 * To solve this issue, keeping listener until it success. */
                View v = getView();
                if (v != null && v.requestFocus()) {
                    v.getViewTreeObserver().removeOnGlobalLayoutListener(this);
                }
            }
        };

        mRestored = false;
!!!13771660.java!!!	onResume() : void
        super.onResume();

        /* We only want to give focus if this fragment is resumed by user interaction within
         * the app, not by restored. (e.g. resumed by multitask)
         * See documentation on onSaveInstanceState to see how mRestored is managed.
         */
        if (!mRestored) {
            /* ViewTreeObserver.OnGlobalLayout would be the best solution here because
             *   - Listeners in ViewTreeObserver is attached to global view events
             *     while we only want to monitor this view.
             *   - OnLayoutChangeListener is called when view calculate its size
             *     after it finishes drawing its contents.
             */
            View v = getView();
            if (v != null) {
                v.getViewTreeObserver().addOnGlobalLayoutListener(mGlobalLayoutListener);
            }
        }
        mRestored = false;
!!!13771788.java!!!	onPause() : void
        // Just for sure.
        View v = getView();
        if (v != null) {
            v.getViewTreeObserver().removeOnGlobalLayoutListener(mGlobalLayoutListener);
        }

        super.onPause();
!!!13771916.java!!!	onSaveInstanceState(inout outState : Bundle) : void
        super.onSaveInstanceState(outState);

        /* According to Activity development page, this is called if Activities/Fragments
         * are vulnerable to destruction. (i.e. when the app goes to the background.)
         * As we don't want to give focus if the app is restored from the background (we'd better
         * keep previous focus in this case), set mRestored true here for future onResume.
         * Note that we cannot use onRestoreInstanceState and checking parameter to distinguish
         * whether it's restored because is is called only if this fragment is created again.
         */
        mRestored = true;
