class DataIdleTest
!!!9008524.java!!!	setUp() : void
        super.setUp();
        Context c = getInstrumentation().getTargetContext();
        mStatsService = INetworkStatsService.Stub.asInterface(
                ServiceManager.getService(Context.NETWORK_STATS_SERVICE));
        mTelephonyManager = (TelephonyManager) c.getSystemService(Context.TELEPHONY_SERVICE);
!!!9008652.java!!!	testWifiIdle() : void
        NetworkTemplate template = NetworkTemplate.buildTemplateWifiWildcard();
        fetchStats(template);
!!!9008780.java!!!	testMobile() : void
        String subscriberId = mTelephonyManager.getSubscriberId();
        NetworkTemplate template = NetworkTemplate.buildTemplateMobileAll(subscriberId);
        fetchStats(template);
!!!9008908.java!!!	fetchStats(inout template : NetworkTemplate) : void
        INetworkStatsSession session = null;
        try {
            mStatsService.forceUpdate();
            session = mStatsService.openSession();
            final NetworkStats stats = session.getSummaryForAllUid(
                    template, Long.MIN_VALUE, Long.MAX_VALUE, false);
            reportStats(stats);
        } catch (RemoteException e) {
            Log.w(LOG_TAG, "Failed to fetch network stats.");
        } finally {
            TrafficStats.closeQuietly(session);
        }
!!!9009036.java!!!	reportStats(inout stats : NetworkStats) : void
        Bundle result = new Bundle();
        long rxBytes = 0;
        long txBytes = 0;
        long rxPackets = 0;
        long txPackets = 0;
        for (int i = 0; i < stats.size(); ++i) {
            // Label will be iface_uid_tag_set
            Entry  statsEntry = stats.getValues(i, null);
            // Debugging use.
            /*
            String labelTemplate = String.format("%s_%d_%d_%d", statsEntry.iface, statsEntry.uid,
                    statsEntry.tag, statsEntry.set) + "_%s";
            result.putLong(String.format(labelTemplate, "rxBytes"), statsEntry.rxBytes);
            result.putLong(String.format(labelTemplate, "txBytes"), statsEntry.txBytes);
            */
            rxPackets += statsEntry.rxPackets;
            rxBytes += statsEntry.rxBytes;
            txPackets += statsEntry.txPackets;
            txBytes += statsEntry.txBytes;
        }
        result.putLong("Total rx Bytes", rxBytes);
        result.putLong("Total tx Bytes", txBytes);
        result.putLong("Total rx Packets", rxPackets);
        result.putLong("Total tx Packets", txPackets);
        getInstrumentation().sendStatus(INSTRUMENTATION_IN_PROGRESS, result);

