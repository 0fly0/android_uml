class FileList
!!!9025036.java!!!	onKeyDown(in keyCode : int, inout event : KeyEvent) : boolean
		switch (keyCode)
		{
			case KeyEvent.KEYCODE_DPAD_LEFT:
				if (mPath.length() > mBaseLength) {
					File f = new File(mPath);
					mFocusFile = f.getName();
					mFocusIndex = 0;
					f = f.getParentFile();
					mPath = f.getPath();
					updateList();
					return true;
				}
				break;

			case KeyEvent.KEYCODE_DPAD_RIGHT:
				{
					Map map = (Map) getListView().getItemAtPosition(getListView().getSelectedItemPosition());
					String path = (String)map.get("path");
					if ((new File(path)).isDirectory()) {
						mPath = path;
				        mFocusFile = null;
						updateList();
					} else {
						processFile(path, false);
					}
                    return true;
				}

			default:
				break;
		}
		return super.onKeyDown(keyCode, event);
!!!9025164.java!!!	onCreate(inout icicle : Bundle) : void
        super.onCreate(icicle);
        setupPath();
        updateList();
!!!9025292.java!!!	getData() : List
        List myData = new ArrayList<HashMap>();

        File f = new File(mPath);
        if (!f.exists()) {
        	addItem(myData, "!LayoutTests path missing!", "");
        	return myData;
        }
        String[] files = f.list();
        Arrays.sort(files);

        for (int i = 0; i < files.length; i++) {
        	StringBuilder sb = new StringBuilder(mPath);
        	sb.append(File.separatorChar);
        	sb.append(files[i]);
        	String path = sb.toString();
        	File c = new File(path);
        	if (fileFilter(c)) {
	        	if (c.isDirectory()) {
	        		addItem(myData, "<"+files[i]+">", path);
	        		if (mFocusFile != null && mFocusFile.equals(files[i]))
	        			mFocusIndex = myData.size()-1;
	        	}
	        	else
	        	    addItem(myData, files[i], path);
        	}
        }

        return myData;
!!!9025420.java!!!	addItem(inout data : List<Map>, in name : String, in path : String) : void
        HashMap temp = new HashMap();
        temp.put("title", name);
        temp.put("path", path);
        data.add(temp);
!!!9025548.java!!!	onListItemClick(inout l : ListView, inout v : View, in position : int, in id : long) : void
        Map map = (Map) l.getItemAtPosition(position);
        final String path = (String)map.get("path");

        if ((new File(path)).isDirectory()) {
            final CharSequence[] items = {"Open", "Run"};
            AlertDialog.Builder builder = new AlertDialog.Builder(this);
            builder.setTitle("Select an Action");
            builder.setSingleChoiceItems(items, -1,
                    new DialogInterface.OnClickListener(){
                public void onClick(DialogInterface dialog, int which) {
                    switch (which) {
                        case OPEN_DIRECTORY:
                            dialog.dismiss();
                            mPath = path;
                            mFocusFile = null;
                            updateList();
                            break;
                        case RUN_TESTS:
                            dialog.dismiss();
                            processDirectory(path, false);
                            break;
                    }
                }
            });
            builder.create().show();
        } else {
            processFile(path, false);
        }
!!!9026060.java!!!	updateList() : void
        setListAdapter(new SimpleAdapter(this,
                getData(),
                android.R.layout.simple_list_item_1,
                new String[] {"title"},
                new int[] {android.R.id.text1}));
        String title = mPath; //.substring(mBaseLength-11); // show the word LayoutTests
        setTitle(title);
        getListView().setSelection(mFocusIndex);
!!!9026188.java!!!	setupPath() : void
        mPath = Environment.getExternalStorageDirectory() + "/webkit/layout_tests";
        mBaseLength = mPath.length();
