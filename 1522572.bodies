class ProfileActivity
!!!9347596.java!!!	setTestingState(inout state : TestingState) : void
        switch (state) {
            case NOT_TESTING:
                mUrl.setBackgroundResource(R.color.background_not_testing);
                mInspectButton.setEnabled(true);
                mMovementSpinner.setEnabled(true);
                break;
            case PRE_TESTING:
                mInspectButton.setEnabled(false);
                mMovementSpinner.setEnabled(false);
                break;
            case START_TESTING:
                mCaptureButton.setChecked(true);
                mUrl.setBackgroundResource(R.color.background_start_testing);
                mInspectButton.setEnabled(false);
                mMovementSpinner.setEnabled(false);
                break;
            case STOP_TESTING:
                mCaptureButton.setChecked(false);
                mUrl.setBackgroundResource(R.color.background_stop_testing);
                break;
            case SAVED_TESTING:
                mInspectButton.setEnabled(true);
                mMovementSpinner.setEnabled(true);
                break;
        }
!!!9347724.java!!!	startViewProfiling(inout auto : boolean) : void
        // toggle capture button to indicate capture state to user
        mWeb.startScrollTest(mCallback, auto);
        setTestingState(TestingState.START_TESTING);
!!!9347852.java!!!	onCreate(inout savedInstanceState : Bundle) : void
        super.onCreate(savedInstanceState);
        setContentView(R.layout.main);
        mInspectButton = (Button) findViewById(R.id.inspect);
        mCaptureButton = (ToggleButton) findViewById(R.id.capture);
        mVelocitySpinner = (Spinner) findViewById(R.id.velocity);
        mMovementSpinner = (Spinner) findViewById(R.id.movement);
        mUrl = (EditText) findViewById(R.id.url);
        mWeb = (ProfiledWebView) findViewById(R.id.web);
        setCallback(new ProfileCallback() {
            @SuppressWarnings("unchecked")
            @Override
            public void profileCallback(RunData data) {
                new StoreFileTask().execute(new Pair<String, RunData>(
                        TEMP_FILENAME, data));
                Log.d("ProfileActivity", "stored " + data.frames.length + " frames in file");
                setTestingState(TestingState.STOP_TESTING);
            }
        });

        // Inspect button (opens PlaybackActivity)
        mInspectButton.setOnClickListener(new OnClickListener() {
            @Override
            public void onClick(View v) {
                startActivity(new Intent(ProfileActivity.this,
                        PlaybackActivity.class));
            }
        });

        // Velocity spinner
        ArrayAdapter<CharSequence> adapter = ArrayAdapter.createFromResource(
                this, R.array.velocity_array,
                android.R.layout.simple_spinner_item);
        adapter.setDropDownViewResource(
                android.R.layout.simple_spinner_dropdown_item);
        mVelocitySpinner.setAdapter(adapter);
        mVelocitySpinner.setOnItemSelectedListener(
                new VelocitySelectedListener());
        mVelocitySpinner.setSelection(3);

        // Movement spinner
        String content[] = {
                getResources().getString(R.string.movement_auto_scroll),
                getResources().getString(R.string.movement_manual),
                getResources().getString(R.string.movement_timed)
        };
        adapter = new ArrayAdapter<CharSequence>(this,
                android.R.layout.simple_spinner_item, content);
        adapter.setDropDownViewResource(
                android.R.layout.simple_spinner_dropdown_item);
        mMovementSpinner.setAdapter(adapter);
        mMovementSpinner.setOnItemSelectedListener(
                new MovementSelectedListener());
        mMovementSpinner.setSelection(0);

        // Capture toggle button
        mCaptureButton.setOnClickListener(new OnClickListener() {
            @Override
            public void onClick(View v) {
                if (mCaptureButton.isChecked()) {
                    startViewProfiling(false);
                } else {
                    mWeb.stopScrollTest();
                }
            }
        });

        // Custom profiling WebView
        mWeb.init(this);
        mWeb.setWebViewClient(new LoggingWebViewClient());

        // URL text entry
        mUrl.setOnEditorActionListener(new OnEditorActionListener() {
            public boolean onEditorAction(TextView v, int actionId,
                    KeyEvent event) {
                String url = mUrl.getText().toString();
                mWeb.loadUrl(url);
                mWeb.requestFocus();
                return true;
            }
        });

        setTestingState(TestingState.NOT_TESTING);
!!!9347980.java!!!	setCallback(inout callback : ProfileCallback) : void
        mCallback = callback;
!!!9348108.java!!!	onKeyDown(in keyCode : int, inout event : KeyEvent) : boolean
        if ((keyCode == KeyEvent.KEYCODE_BACK) && mWeb.canGoBack()) {
            mWeb.goBack();
            return true;
        }
        return super.onKeyDown(keyCode, event);
