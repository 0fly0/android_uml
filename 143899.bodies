class LineNumberReader
!!!232219.java!!!	LineNumberReader(inout in : Reader)
        super(in);
!!!232347.java!!!	LineNumberReader(inout in : Reader, in size : int)
        super(in, size);
!!!232475.java!!!	getLineNumber() : int
        synchronized (lock) {
            return lineNumber;
        }
!!!232603.java!!!	mark(in readlimit : int) : void
        synchronized (lock) {
            super.mark(readlimit);
            markedLineNumber = lineNumber;
            markedLastWasCR = lastWasCR;
        }
!!!232731.java!!!	read() : int
        synchronized (lock) {
            int ch = super.read();
            if (ch == '\n' && lastWasCR) {
                ch = super.read();
            }
            lastWasCR = false;
            switch (ch) {
                case '\r':
                    ch = '\n';
                    lastWasCR = true;
                    // fall through
                case '\n':
                    lineNumber++;
            }
            return ch;
        }
!!!232859.java!!!	read(inout buffer : char, in offset : int, in count : int) : int
        synchronized (lock) {
            int read = super.read(buffer, offset, count);
            if (read == -1) {
                return -1;
            }
            for (int i = 0; i < read; i++) {
                char ch = buffer[offset + i];
                if (ch == '\r') {
                    lineNumber++;
                    lastWasCR = true;
                } else if (ch == '\n') {
                    if (!lastWasCR) {
                        lineNumber++;
                    }
                    lastWasCR = false;
                } else {
                    lastWasCR = false;
                }
            }
            return read;
        }
!!!232987.java!!!	readLine() : String
        synchronized (lock) {
            if (lastWasCR) {
                chompNewline();
                lastWasCR = false;
            }
            String result = super.readLine();
            if (result != null) {
                lineNumber++;
            }
            return result;
        }
!!!233115.java!!!	reset() : void
        synchronized (lock) {
            super.reset();
            lineNumber = markedLineNumber;
            lastWasCR = markedLastWasCR;
        }
!!!233243.java!!!	setLineNumber(in lineNumber : int) : void
        synchronized (lock) {
            this.lineNumber = lineNumber;
        }
!!!233371.java!!!	skip(in charCount : long) : long
        if (charCount < 0) {
            throw new IllegalArgumentException("charCount < 0: " + charCount);
        }
        synchronized (lock) {
            for (int i = 0; i < charCount; i++) {
                if (read() == -1) {
                    return i;
                }
            }
            return charCount;
        }
