class SystemButton
!!!13478796.java!!!	SystemButton(inout context : Context, inout attrs : AttributeSet)
        this(context, attrs, 0);
!!!13478924.java!!!	SystemButton(inout context : Context, inout attrs : AttributeSet, in defStyle : int)
        super(context, attrs, defStyle);

        mIsRegistered = false;
        mTimeIntentReceiver = new BroadcastReceiver() {
            @Override
            public void onReceive(Context context, Intent intent) {
                if (intent.getAction().equals(Intent.ACTION_TIMEZONE_CHANGED)) {
                    mCalendar = Calendar.getInstance();
                }
                updateTime();
            }
        };

        mFormatChangeObserver = new ContentObserver(new Handler()) {
            @Override
            public void onChange(boolean selfChange) {
                updateTime();
            }
        };

        mMaxNotificationCount = context.getResources().getInteger(R.integer.max_notification_count);
        mCalendar = Calendar.getInstance();
        mAmPmStrings = new DateFormatSymbols().getAmPmStrings();
!!!13479052.java!!!	onFinishInflate() : void
        super.onFinishInflate();
        mNotifications = (TextView) findViewById(R.id.notifications);
        mNotifications.setOnClickListener(new View.OnClickListener() {

            @Override
            public void onClick(View v) {
                SystemButton.this.performClick();
            }
        });
        mClock = (TextView) findViewById(R.id.clock);
        mClockAmPm = (TextView) findViewById(R.id.clock_am_pm);
!!!13479180.java!!!	setNotificationCount(in notificationCount : int) : void
        mNotifications.getBackground().setLevel(notificationCount);
        if (notificationCount == 0) {
            mNotifications.setText("");
        } else if (notificationCount <= mMaxNotificationCount) {
            mNotifications.setText(String.valueOf(notificationCount));
        } else {
            mNotifications.setText(R.string.max_notification);
        }
!!!13479308.java!!!	activateClock() : void
        if (mIsRegistered) {
            return;
        }
        IntentFilter filter = new IntentFilter();
        filter.addAction(Intent.ACTION_TIME_TICK);
        filter.addAction(Intent.ACTION_TIME_CHANGED);
        filter.addAction(Intent.ACTION_TIMEZONE_CHANGED);
        getContext().registerReceiver(mTimeIntentReceiver, filter);
        getContext().getContentResolver().registerContentObserver(
                Settings.System.CONTENT_URI, true, mFormatChangeObserver);
        mIsRegistered = true;
        mCalendar = Calendar.getInstance();
        updateTime();
!!!13479436.java!!!	deactivateClock() : void
        if (!mIsRegistered || getContext() == null) {
            return;
        }
        getContext().unregisterReceiver(mTimeIntentReceiver);
        getContext().getContentResolver().unregisterContentObserver(
                mFormatChangeObserver);
        mIsRegistered = false;
!!!13479564.java!!!	updateTime() : void
        if (!mIsRegistered || getContext() == null) {
            return;
        }
        mCalendar.setTimeInMillis(System.currentTimeMillis());
        boolean is24HourMode = DateFormat.is24HourFormat(getContext());
        String format = is24HourMode ? M24 : M12;
        mClock.setText(DateFormat.format(format, mCalendar));
        mClockAmPm.setVisibility(is24HourMode ? View.GONE : View.VISIBLE);
        if (!is24HourMode) {
            mClockAmPm.setText(mCalendar.get(Calendar.AM_PM) == 0 ?
                    mAmPmStrings[0] : mAmPmStrings[1]);
        }
