class MediaBassBoostTest
!!!7204876.java!!!	MediaBassBoostTest()
        super("com.android.mediaframeworktest", MediaFrameworkTest.class);
!!!7205004.java!!!	setUp() : void
      super.setUp();
!!!7205132.java!!!	tearDown() : void
        super.tearDown();
        releaseBassBoost();
!!!7205260.java!!!	assumeTrue(in message : String, inout cond : boolean) : void
        assertTrue("(assume)"+message, cond);
!!!7205388.java!!!	log(in testName : String, in message : String) : void
        Log.v(TAG, "["+testName+"] "+message);
!!!7205516.java!!!	loge(in testName : String, in message : String) : void
        Log.e(TAG, "["+testName+"] "+message);
!!!7205644.java!!!	test0_0ConstructorAndRelease() : void
        boolean result = false;
        String msg = "test1_0ConstructorAndRelease()";
        BassBoost bb = null;
         try {
            bb = new BassBoost(0, 0);
            assertNotNull(msg + ": could not create BassBoost", bb);
            try {
                assertTrue(msg +": invalid effect ID", (bb.getId() != 0));
            } catch (IllegalStateException e) {
                msg = msg.concat(": BassBoost not initialized");
            }
            result = true;
        } catch (IllegalArgumentException e) {
            msg = msg.concat(": BassBoost not found");
        } catch (UnsupportedOperationException e) {
            msg = msg.concat(": Effect library not loaded");
        } finally {
            if (bb != null) {
                bb.release();
            }
        }
        assertTrue(msg, result);
!!!7205772.java!!!	test1_0Strength() : void
        boolean result = false;
        String msg = "test1_0Strength()";
        getBassBoost(0);
        try {
            if (mBassBoost.getStrengthSupported()) {
                mBassBoost.setStrength((short)TEST_STRENGTH);
                short strength = mBassBoost.getRoundedStrength();
                // allow 10% difference between set strength and rounded strength
                assertTrue(msg +": got incorrect strength",
                        ((float)strength > (float)TEST_STRENGTH * 0.9f) &&
                        ((float)strength < (float)TEST_STRENGTH * 1.1f));
            } else {
                short strength = mBassBoost.getRoundedStrength();
                assertTrue(msg +": got incorrect strength", strength >= 0 && strength <= 1000);
            }
            result = true;
        } catch (IllegalArgumentException e) {
            msg = msg.concat(": Bad parameter value");
            loge(msg, "Bad parameter value");
        } catch (UnsupportedOperationException e) {
            msg = msg.concat(": get parameter() rejected");
            loge(msg, "get parameter() rejected");
        } catch (IllegalStateException e) {
            msg = msg.concat("get parameter() called in wrong state");
            loge(msg, "get parameter() called in wrong state");
        } finally {
            releaseBassBoost();
        }
        assertTrue(msg, result);
!!!7205900.java!!!	test1_1Properties() : void
        boolean result = false;
        String msg = "test1_1Properties()";
        getBassBoost(0);
        try {
            BassBoost.Settings settings = mBassBoost.getProperties();
            String str = settings.toString();
            settings = new BassBoost.Settings(str);
            mBassBoost.setProperties(settings);
            result = true;
        } catch (IllegalArgumentException e) {
            msg = msg.concat(": Bad parameter value");
            loge(msg, "Bad parameter value");
        } catch (UnsupportedOperationException e) {
            msg = msg.concat(": get parameter() rejected");
            loge(msg, "get parameter() rejected");
        } catch (IllegalStateException e) {
            msg = msg.concat("get parameter() called in wrong state");
            loge(msg, "get parameter() called in wrong state");
        } finally {
            releaseBassBoost();
        }
        assertTrue(msg, result);
!!!7206028.java!!!	getBassBoost(in session : int) : void
         if (mBassBoost == null || session != mSession) {
             if (session != mSession && mBassBoost != null) {
                 mBassBoost.release();
                 mBassBoost = null;
             }
             try {
                mBassBoost = new BassBoost(0, session);
                mSession = session;
            } catch (IllegalArgumentException e) {
                Log.e(TAG, "getBassBoost() BassBoost not found exception: "+e);
            } catch (UnsupportedOperationException e) {
                Log.e(TAG, "getBassBoost() Effect library not loaded exception: "+e);
            }
         }
         assertNotNull("could not create mBassBoost", mBassBoost);
!!!7206156.java!!!	releaseBassBoost() : void
        if (mBassBoost != null) {
            mBassBoost.release();
            mBassBoost = null;
        }
