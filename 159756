format 74
"tests" // framework::base::tools::aapt::tests
  revision 1
  modified_by 12 "shchen"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  cpp_h_dir "/home/shchen/work/jellybean/framework/base/tools/aapt/tests/"
  cpp_src_dir "/home/shchen/work/jellybean/framework/base/tools/aapt/tests/"
  classview 149644 "tests"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 487052 "MockCacheUpdater"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 995084 // <generalisation>
	relation 995084 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 995084 // <generalisation>
	  b parent class_ref 481548 // CacheUpdater
      end

      operation 1405452 "MockCacheUpdater"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} : deleteCount(0), processCount(0) { };
"
	
	
	
	
      end

      operation 1405580 "ensureDirectoriesExist"
	cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "path" type class_ref 131340 // String8
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        // Nothing to do
    };
"
	
	
	
	
	comment " Make sure all the directories along this path exist"
      end

      operation 1405708 "deleteFile"
	cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "path" type class_ref 131340 // String8
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        deleteCount++;
    };
"
	
	
	
	
	comment " Delete a file"
      end

      operation 1405836 "processImage"
	cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "source" type class_ref 131340 // String8
	  param in name "dest" type class_ref 131340 // String8
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        processCount++;
    };
"
	
	
	
	
	comment " Process an image from source out to dest"
      end

      attribute 1197068 "deleteCount"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1197196 "processCount"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 487180 "StringDirectoryWalker"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " String8 Directory Walker
 This is an implementation of the Directory Walker abstraction that is built
 for testing.
 Instead of system calls it queries a private data structure for the directory
 entries. It takes a path and a map of filenames and their modification times.
 functions are inlined since they are short and simple"
      classrelation 995212 // <generalisation>
	relation 995212 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 995212 // <generalisation>
	  b parent class_ref 482060 // DirectoryWalker
      end

      operation 1405964 "StringDirectoryWalker"
	cpp_inline public explicit_return_type ""
	nparams 2
	  param inout name "path" type class_ref 131340 // String8
	  param inout name "data" explicit_type "Vector< pair<String8,time_t> >"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} & ${p0}${v0}, ${t1} & ${p1}${v1}${)}${volatile}${throw} :  mPos(0), mBasePath(path), mData(data) {
        //fprintf(stdout,\"StringDW built to mimic %s with %d files\\n\",
        //       mBasePath.string());
    };
"
	
	
	
	
      end

      operation 1406092 "openDir"
	cpp_virtual cpp_inline public explicit_return_type "bool"
	nparams 1
	  param in name "path" type class_ref 131340 // String8
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        // If the user is trying to query the \"directory\" that this
        // walker was initialized with, then return success. Else fail.
        return path == mBasePath;
    };
"
	
	
	
	
	comment " Default copy constructor, and destructor are fine"
      end

      operation 1406220 "openDir"
	cpp_virtual cpp_inline public explicit_return_type "bool"
	nparams 1
	  param in name "path" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        String8 p(path);
        openDir(p);
        return true;
    };
"
	
	
	
	
      end

      operation 1406348 "nextEntry"
	cpp_virtual cpp_inline public explicit_return_type "dirent"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}struct ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        // Advance position and check to see if we're done
        if (mPos >= mData.size())
            return NULL;

        // Place data in the entry descriptor. This class only returns files.
        mEntry.d_type = DT_REG;
        mEntry.d_ino = mPos;
        // Copy chars from the string name to the entry name
        size_t i = 0;
        for (i; i < mData[mPos].first.size(); ++i)
            mEntry.d_name[i] = mData[mPos].first[i];
        mEntry.d_name[i] = '\\0';

        // Place data in stats
        mStats.st_ino = mPos;
        mStats.st_mtime = mData[mPos].second;

        // Get ready to move to the next entry
        mPos++;

        return &mEntry;
    };
"
	
	
	
	
	comment " Advance to next entry in the Vector"
      end

      operation 1406476 "entryStats"
	cpp_virtual cpp_inline public explicit_return_type "stat"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}struct ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return &mStats;
    };
"
	
	
	
	
	comment " Get the stats for the current entry"
      end

      operation 1406604 "closeDir"
	cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        // Nothing to do
    };
"
	
	
	
	
	comment " Nothing to do in clean up"
      end

      operation 1406732 "clone"
	cpp_virtual cpp_inline public return_type class_ref 482060 // DirectoryWalker
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return new StringDirectoryWalker(*this);
    };
"
	
	
	
	
      end

      attribute 1197324 "mPos"
	private explicit_type "size_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 995340 // mBasePath (<directional composition>)
	relation 995340 *-->
	  a role_name "mBasePath" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 995340 // mBasePath (<directional composition>)
	  b parent class_ref 131340 // String8
      end

      attribute 1197452 "mData"
	private explicit_type " pair<String8,time_t> "
	stereotype "Vector"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 487308 "MockFileFinder"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 995468 // <generalisation>
	relation 995468 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 995468 // <generalisation>
	  b parent class_ref 481932 // FileFinder
      end

      operation 1406860 "MockFileFinder"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param inout name "files" explicit_type "KeyedVector<String8, KeyedVector<String8,time_t> >"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} & ${p0}${v0}${)}${volatile}${throw} : mFiles(files)
    {
        // Nothing left to do
    };
"
	
	
	
	
      end

      operation 1406988 "findFiles"
	cpp_virtual cpp_inline public explicit_return_type "bool"
	nparams 4
	  param in name "basePath" type class_ref 131340 // String8
	  param inout name "extensions" explicit_type "Vector<String8>"
	  param inout name "fileStore" explicit_type "KeyedVector<String8,time_t>"
	  param inout name "dw" type class_ref 482060 // DirectoryWalker
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} & ${p1}${v1}, ${t2} & ${p2}${v2}, ${t3} * ${p3}${v3}${)}${const}${volatile}${throw}${abstract} {
        const KeyedVector<String8,time_t>* payload(&mFiles.valueFor(basePath));
        // Since KeyedVector doesn't implement swap
        // (who doesn't use swap??) we loop and add one at a time.
        for (size_t i = 0; i < payload->size(); ++i) {
            fileStore.add(payload->keyAt(i),payload->valueAt(i));
        }
        return true;
    };
"
	
	
	
	
	comment "*
     * findFiles implementation for the abstraction.
     * PRECONDITIONS:
     *  No checking is done, so there MUST be an entry in mFiles with
     *  path matching basePath.
     *
     * POSTCONDITIONS:
     *  fileStore is filled with a copy of the data in mFiles corresponding
     *  to the basePath."
      end

      classrelation 995596 // mFiles (<directional composition>)
	relation 995596 *-->
	  stereotype "KeyedVector"
	  a role_name "mFiles" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type},KeyedVector<String8,time_t> > ${name}${value};
"
	    classrelation_ref 995596 // mFiles (<directional composition>)
	  b parent class_ref 131340 // String8
      end
    end
  end

  deploymentview 147596 "tests"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 216716 "MockCacheUpdater"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 487052 // MockCacheUpdater
      end
    end

    artifact 216844 "MockDirectoryWalker"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 487180 // StringDirectoryWalker
      end
    end

    artifact 216972 "MockFileFinder"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 487308 // MockFileFinder
      end
    end

    artifact 298508 "main"
      stereotype "source"
      cpp_src "int main() {

    errno = 0;

    String8 source(\"res\");
    String8 dest(\"res2\");

    // Create data for MockFileFinder to feed to the cache
    KeyedVector<String8, time_t> sourceData;
    // This shouldn't be updated
    sourceData.add(String8(\"res/drawable/hello.png\"),3);
    // This should be updated
    sourceData.add(String8(\"res/drawable/world.png\"),5);
    // This should cause make directory to be called
    sourceData.add(String8(\"res/drawable-cool/hello.png\"),3);

    KeyedVector<String8, time_t> destData;
    destData.add(String8(\"res2/drawable/hello.png\"),3);
    destData.add(String8(\"res2/drawable/world.png\"),3);
    // this should call delete
    destData.add(String8(\"res2/drawable/dead.png\"),3);

    // Package up data and create mock file finder
    KeyedVector<String8, KeyedVector<String8,time_t> > data;
    data.add(source,sourceData);
    data.add(dest,destData);
    FileFinder* ff = new MockFileFinder(data);
    CrunchCache cc(source,dest,ff);

    MockCacheUpdater* mcu = new MockCacheUpdater();
    CacheUpdater* cu(mcu);

    cout << \"Running Crunch...\";
    int result = cc.crunch(cu);
    cout << ((result > 0) ? \"PASSED\" : \"FAILED\") << endl;
    errno += ((result > 0) ? 0 : 1);

    const int EXPECTED_RESULT = 2;
    expectEqual(result, EXPECTED_RESULT, \"number of files touched\");

    cout << \"Checking calls to deleteFile and processImage:\" << endl;
    const int EXPECTED_DELETES = 1;
    const int EXPECTED_PROCESSED = 2;
    // Deletes
    expectEqual(mcu->deleteCount, EXPECTED_DELETES, \"deleteFile\");
    // processImage
    expectEqual(mcu->processCount, EXPECTED_PROCESSED, \"processImage\");

    const int EXPECTED_OVERWRITES = 3;
    result = cc.crunch(cu, true);
    expectEqual(result, EXPECTED_OVERWRITES, \"number of files touched with overwrite\");
    \\

    if (errno == 0)
        cout << \"ALL TESTS PASSED!\" << endl;
    else
        cout << errno << \" TESTS FAILED\" << endl;

    delete ff;
    delete cu;

    // TESTS BELOW WILL GO AWAY SOON

    String8 source2(\"ApiDemos/res\");
    String8 dest2(\"ApiDemos/res2\");

    FileFinder* sff = new SystemFileFinder();
    CacheUpdater* scu = new SystemCacheUpdater();

    CrunchCache scc(source2,dest2,sff);

    scc.crunch(scu);
}
"
      associated_classes
      end
    end
  end
end
