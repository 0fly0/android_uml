class Itr
!!!1474331.java!!!	Itr()
            advance();
!!!1474459.java!!!	advance() : E
            lastRet = nextNode;
            E x = nextItem;

            Node<E> pred, p;
            if (nextNode == null) {
                p = first();
                pred = null;
            } else {
                pred = nextNode;
                p = succ(nextNode);
            }

            for (;;) {
                if (p == null) {
                    nextNode = null;
                    nextItem = null;
                    return x;
                }
                E item = p.item;
                if (item != null) {
                    nextNode = p;
                    nextItem = item;
                    return x;
                } else {
                    // skip over nulls
                    Node<E> next = succ(p);
                    if (pred != null && next != null)
                        pred.casNext(p, next);
                    p = next;
                }
            }
!!!1474587.java!!!	hasNext() : boolean
            return nextNode != null;
!!!1474715.java!!!	next() : E
            if (nextNode == null) throw new NoSuchElementException();
            return advance();
!!!1474843.java!!!	remove() : void
            Node<E> l = lastRet;
            if (l == null) throw new IllegalStateException();
            // rely on a future traversal to relink.
            l.item = null;
            lastRet = null;
