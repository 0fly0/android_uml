format 74
"pp internal" // vendor::tv::chrome::plugins::drmserver_adapter::jni::ppapi::cpp::pp internal
  revision 1
  modified_by 12 "shchen"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  cpp_h_dir "/home/shchen/work/jellybean/vendor/tv/chrome/plugins/drmserver_adapter/jni/ppapi/cpp/"
  cpp_src_dir "/home/shchen/work/jellybean/vendor/tv/chrome/plugins/drmserver_adapter/jni/ppapi/cpp/"
  cpp_namespace "pp::internal"
  classview 275212 "cpp"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 2794764 "IsSame<A,A>"
      visibility package stereotype "struct"
      nformals 1
      formal name "A" type "typename" explicit_default_value ""
        explicit_extends ""
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      attribute 10051980 "value"
	class_attribute const_attribute public type class_ref 2322828 // bool
	init_value "=  true"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2794892 "IsBaseOf"
      visibility package stereotype "struct"
      nformals 2
      formal name "Base" type "typename" explicit_default_value ""
        explicit_extends ""
      formal name "Derived" type "typename" explicit_default_value ""
        explicit_extends ""
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      class 2795020 "EnsureTypesAreComplete"
	visibility package stereotype "typedef" explicit_base_type "char"
	cpp_decl "${comment}typedef ${type}(* ${name})[sizeof(Base) + sizeof(Derived)];
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
      end

      operation 11411596 "CreateDerived"
	class_operation private explicit_return_type "Derived"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 10052108 "value"
	class_attribute const_attribute public type class_ref 2322828 // bool
	init_value "=  sizeof Check(CreateDerived()) == 1 &&
                            !IsSame<Base const, void const>::value"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2795148 "InheritIf"
      visibility package stereotype "struct"
      nformals 2
      formal name "T" type "class" explicit_default_value ""
        explicit_extends ""
      formal name " bool P" type "" explicit_default_value ""
        explicit_extends ""
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " Template to optionally derive from a given base class T if the given
 predicate P is true."
    end

    class 2795276 "InheritIf<T,true>"
      visibility package stereotype "struct"
      nformals 1
      formal name "T" type "class" explicit_default_value ""
        explicit_extends ""
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 5226892 // <generalisation>
	relation 5226764 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 5226892 // <generalisation>
	  b parent class_ref 2795404 // typedef101
      end
    end

    class 2795404 "typedef101"
      visibility package stereotype "typedef" explicit_base_type "T"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
    end

    class 2795532 "GenericCallbackOutputTraits"
      visibility package stereotype "struct"
      nformals 1
      formal name "T" type "typename" explicit_default_value ""
        explicit_extends ""
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " Single output parameters ----------------------------------------------------
 Output traits for all \"plain old data\" (POD) types. It is implemented to
 pass a pointer to the browser as an output parameter.

 This is used as a base class for the general CallbackOutputTraits below in
 the case where T is not a resource."
      class 2795660 "APIArgType"
	visibility package stereotype "typedef" explicit_base_type "T"
	cpp_decl "${comment}typedef ${type}*  ${name};
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
      end

      class 2795788 "StorageType"
	visibility package stereotype "typedef" explicit_base_type "T"
	cpp_decl "${comment}typedef ${type} ${name};
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
      end

      operation 11411724 "StorageToAPIArg"
	class_operation cpp_inline public return_type class_ref 2795660 // APIArgType
	nparams 1
	  param inout name "t" type class_ref 2795788 // StorageType
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} { return &t; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Converts a \"storage type\" to a value that can be passed to the browser as
 an output parameter. This just takes the address to convert the value to
 a pointer."
      end

      operation 11411852 "StorageToPluginArg"
	class_operation cpp_inline public explicit_return_type "T"
	nparams 1
	  param inout name "t" type class_ref 2795788 // StorageType
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} { return t; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Converts the \"storage type\" to the value we pass to the plugin for
 callbacks. This doesn't actually need to do anything in this case,
 it's needed for some of more complex template specializations below."
      end
    end

    class 2795916 "ResourceCallbackOutputTraits"
      visibility package stereotype "struct"
      nformals 1
      formal name "T" type "typename" explicit_default_value ""
        explicit_extends ""
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " Output traits for all resource types. It is implemented to pass a
 PP_Resource* as an output parameter to the browser, and convert to the
 given resource object type T when passing to the plugin.

 Note that this class is parameterized by the resource object, for example
 ResourceCallbackOutputTraits<pp::FileRef>. This is used as a base class for
 CallbackOutputTraits below for the case where T is a derived class of
 pp::Resource."
      class 2796044 "APIArgType"
	visibility package stereotype "typedef" base_type class_ref 2734220 // PP_Resource
	cpp_decl "${comment}typedef ${type}*  ${name};
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 5227020 // <dependency>
	  relation 5226892 -_->
	    a default
	      cpp default "#include in source"
	      classrelation_ref 5227020 // <dependency>
	    b parent class_ref 2734220 // PP_Resource
	end
      end

      class 2796172 "StorageType"
	visibility package stereotype "typedef" base_type class_ref 2734220 // PP_Resource
	cpp_decl "${comment}typedef ${type} ${name};
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 5227148 // <dependency>
	  relation 5227020 -_->
	    a default
	      cpp default "#include in source"
	      classrelation_ref 5227148 // <dependency>
	    b parent class_ref 2734220 // PP_Resource
	end
      end

      operation 11411980 "StorageToAPIArg"
	class_operation cpp_inline public return_type class_ref 2796044 // APIArgType
	nparams 1
	  param inout name "t" type class_ref 2796172 // StorageType
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    return &t;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 11412108 "StorageToPluginArg"
	class_operation cpp_inline public explicit_return_type "T"
	nparams 1
	  param inout name "t" type class_ref 2796172 // StorageType
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    return T(PASS_REF, t);
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Converts the PP_Resource to a pp::* object, passing any reference counted
 object along with it. This must only be called once since there will only
 be one reference that the browser has assigned to us for the out param!
 When calling into the plugin, convert the PP_Resource into the requested
 resource object type."
      end
    end

    class 2796300 "CallbackOutputTraits"
      visibility package stereotype "struct"
      nformals 1
      formal name "T" type "typename" explicit_default_value ""
        explicit_extends ""
      nactuals 2
      actual class class_ref 2795148 // InheritIf
        rank 0 explicit_value "ResourceCallbackOutputTraits<T>"
      actual class class_ref 2795148 // InheritIf
        rank 1 explicit_value "IsBaseOf<Resource, T>::value"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " The general templatized base class for all CallbackOutputTraits. This class
 covers resources, extensions API output objects and POD (ints, structs, etc.)
 by inheriting from the appropriate base class depending on whether the given
 type derives from pp::Resource or ext::internal::OutputObjectBase. This trick
 allows us to do this once rather than writing specializations for every
 object type."
      classrelation 5227276 // <realization>
	relation 5227148 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 5227276 // <realization>
	  b parent class_ref 2795148 // InheritIf
      end
    end

    class 2796428 "CallbackOutputTraits<Var>"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " A specialization of CallbackOutputTraits for pp::Var output parameters.
 It passes a PP_Var* to the browser and converts to a pp::Var when passing
 to the plugin."
      class 2796556 "APIArgType"
	visibility package stereotype "typedef" base_type class_ref 2741388 // PP_Var
	cpp_decl "${comment}typedef ${type}*  ${name};
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 5227404 // <dependency>
	  relation 5227276 -_->
	    a default
	      cpp default "#include in source"
	      classrelation_ref 5227404 // <dependency>
	    b parent class_ref 2741388 // PP_Var
	end
      end

      class 2796684 "StorageType"
	visibility package stereotype "typedef" base_type class_ref 2741388 // PP_Var
	cpp_decl "${comment}typedef ${type} ${name};
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 5227532 // <dependency>
	  relation 5227404 -_->
	    a default
	      cpp default "#include in source"
	      classrelation_ref 5227532 // <dependency>
	    b parent class_ref 2741388 // PP_Var
	end
      end

      operation 11412236 "StorageToAPIArg"
	class_operation cpp_inline public return_type class_ref 2796556 // APIArgType
	nparams 1
	  param inout name "t" type class_ref 2796684 // StorageType
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    return &t;
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 11412364 "StorageToPluginArg"
	class_operation cpp_inline public return_type class_ref 2789260 // Var
	nparams 1
	  param inout name "t" type class_ref 2796684 // StorageType
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    return Var(PASS_REF, t);
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Converts the PP_Var to a pp::Var object, passing any reference counted
 object along with it. This must only be called once since there will only
 be one reference that the browser has assigned to us for the out param!"
      end
    end

    class 2796812 "GenericVectorCallbackOutputTraits"
      visibility package stereotype "struct"
      nformals 1
      formal name "T" type "typename" explicit_default_value ""
        explicit_extends ""
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " Array output parameters -----------------------------------------------------
 Output traits for vectors of all \"plain old data\" (POD) types. It is
 implemented to pass a pointer to the browser as an output parameter.

 This is used as a base class for the general vector CallbackOutputTraits
 below in the case where T is not a resource."
      class 2796940 "APIArgType"
	visibility package stereotype "typedef" base_type class_ref 2738060 // PP_ArrayOutput
	cpp_decl "${comment}typedef ${type} ${name};
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 5227660 // <dependency>
	  relation 5227532 -_->
	    a default
	      cpp default "#include in source"
	      classrelation_ref 5227660 // <dependency>
	    b parent class_ref 2738060 // PP_ArrayOutput
	end
      end

      class 2797068 "StorageType"
	visibility package stereotype "typedef" explicit_base_type "ArrayOutputAdapterWithStorage<T>"
	cpp_decl "${comment}typedef ${type} ${name};
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
      end

      operation 11412492 "StorageToAPIArg"
	class_operation cpp_inline public return_type class_ref 2796940 // APIArgType
	nparams 1
	  param inout name "t" type class_ref 2797068 // StorageType
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    return t.pp_array_output();
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Retrieves the PP_ArrayOutput interface for our vector object that the
 browser will use to write into our code."
      end

      operation 11412620 "StorageToPluginArg"
	class_operation cpp_inline public explicit_return_type "std::vector<T>"
	nparams 1
	  param inout name "t" type class_ref 2797068 // StorageType
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    return t.output();
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Retrieves the underlying vector that can be passed to the plugin."
      end
    end

    class 2797196 "ResourceVectorCallbackOutputTraits"
      visibility package stereotype "struct"
      nformals 1
      formal name "T" type "typename" explicit_default_value ""
        explicit_extends ""
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " Output traits for all vectors of resource types. It is implemented to pass
 a PP_ArrayOutput parameter to the browser, and convert the returned resources
 to a vector of the given resource object type T when passing to the plugin.

 Note that this class is parameterized by the resource object, for example
 ResourceVectorCallbackOutputTraits<pp::FileRef>. This is used as a base
 class for CallbackOutputTraits below for the case where T is a derived
 class of pp::Resource."
      class 2797324 "APIArgType"
	visibility package stereotype "typedef" base_type class_ref 2738060 // PP_ArrayOutput
	cpp_decl "${comment}typedef ${type} ${name};
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 5227788 // <dependency>
	  relation 5227660 -_->
	    a default
	      cpp default "#include in source"
	      classrelation_ref 5227788 // <dependency>
	    b parent class_ref 2738060 // PP_ArrayOutput
	end
      end

      class 2797452 "StorageType"
	visibility package stereotype "typedef" explicit_base_type "ResourceArrayOutputAdapterWithStorage<T>"
	cpp_decl "${comment}typedef ${type} ${name};
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
      end

      operation 11412748 "StorageToAPIArg"
	class_operation cpp_inline public return_type class_ref 2797324 // APIArgType
	nparams 1
	  param inout name "t" type class_ref 2797452 // StorageType
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    return t.pp_array_output();
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 11412876 "StorageToPluginArg"
	class_operation cpp_inline public explicit_return_type "std::vector<T>"
	nparams 1
	  param inout name "t" type class_ref 2797452 // StorageType
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    return t.output();
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 2797580 "CallbackOutputTraits<std::vector<T> >"
      visibility package stereotype "struct"
      nformals 1
      formal name "T" type "typename" explicit_default_value ""
        explicit_extends ""
      nactuals 2
      actual class class_ref 2795148 // InheritIf
        rank 0 explicit_value "ResourceVectorCallbackOutputTraits<T>"
      actual class class_ref 2795148 // InheritIf
        rank 1 explicit_value "IsBaseOf<Resource, T>::value"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " Specialization of CallbackOutputTraits for vectors. This struct covers arrays
 of resources, extensions API output objects and POD (ints, structs, etc.) by
 inheriting from the appropriate base class depending on whether the given
 type derives from pp::Resource or ext::internal::OutputObjectBase. This trick
 allows us to do this once rather than writing specializations for every
 object type."
      classrelation 5227916 // <realization>
	relation 5227788 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 5227916 // <realization>
	  b parent class_ref 2795148 // InheritIf
      end
    end

    class 2797708 "CallbackOutputTraits<std::vector<pp::Var> >"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " A specialization of CallbackOutputTraits to provide the callback system
 the information on how to handle vectors of pp::Var. Vectors of resources
 and plain data are handled separately. See the above definition for more."
      class 2797836 "APIArgType"
	visibility package stereotype "typedef" base_type class_ref 2738060 // PP_ArrayOutput
	cpp_decl "${comment}typedef ${type} ${name};
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 5228044 // <dependency>
	  relation 5227916 -_->
	    a default
	      cpp default "#include in source"
	      classrelation_ref 5228044 // <dependency>
	    b parent class_ref 2738060 // PP_ArrayOutput
	end
      end

      class 2797964 "StorageType"
	visibility package stereotype "typedef" base_type class_ref 2789132 // VarArrayOutputAdapterWithStorage
	cpp_decl "${comment}typedef ${type} ${name};
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 5228172 // <dependency>
	  relation 5228044 -_->
	    a default
	      cpp default "#include in source"
	      classrelation_ref 5228172 // <dependency>
	    b parent class_ref 2789132 // VarArrayOutputAdapterWithStorage
	end
      end

      operation 11413004 "StorageToAPIArg"
	class_operation cpp_inline public return_type class_ref 2797836 // APIArgType
	nparams 1
	  param inout name "t" type class_ref 2797964 // StorageType
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    return t.pp_array_output();
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Retrieves the PP_ArrayOutput interface for our vector object that the
 browser will use to write into our code."
      end

      operation 11413132 "StorageToPluginArg"
	class_operation cpp_inline public explicit_return_type "std::vector<pp::Var>"
	nparams 1
	  param inout name "t" type class_ref 2797964 // StorageType
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    return t.output();
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Retrieves the underlying vector that can be passed to the plugin."
      end
    end

    class 2798092 "CallbackOutputTraits<std::vector<pp::DirectoryEntry_Dev> >"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " A specialization of CallbackOutputTraits to provide the callback system the
 information on how to handle vectors of pp::DirectoryEntry_Dev. This converts
 PP_DirectoryEntry_Dev to pp::DirectoryEntry_Dev when passing to the plugin."
      class 2798220 "APIArgType"
	visibility package stereotype "typedef" base_type class_ref 2738060 // PP_ArrayOutput
	cpp_decl "${comment}typedef ${type} ${name};
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 5228300 // <dependency>
	  relation 5228172 -_->
	    a default
	      cpp default "#include in source"
	      classrelation_ref 5228300 // <dependency>
	    b parent class_ref 2738060 // PP_ArrayOutput
	end
      end

      class 2798348 "StorageType"
	visibility package stereotype "typedef" base_type class_ref 2789516 // DirectoryEntryArrayOutputAdapterWithStorage
	cpp_decl "${comment}typedef ${type} ${name};
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 5228428 // <dependency>
	  relation 5228300 -_->
	    a default
	      cpp default "#include in source"
	      classrelation_ref 5228428 // <dependency>
	    b parent class_ref 2789516 // DirectoryEntryArrayOutputAdapterWithStorage
	end
      end

      operation 11413260 "StorageToAPIArg"
	class_operation cpp_inline public return_type class_ref 2798220 // APIArgType
	nparams 1
	  param inout name "t" type class_ref 2798348 // StorageType
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    return t.pp_array_output();
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 11413388 "StorageToPluginArg"
	class_operation cpp_inline public explicit_return_type "std::vector<pp::DirectoryEntry_Dev>"
	nparams 1
	  param inout name "t" type class_ref 2798348 // StorageType
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    return t.output();
  };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end
  end

  deploymentview 261260 "pp internal"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 1052940 "output_traits"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2794764 // IsSame<A,A>
	class_ref 2794892 // IsBaseOf
	class_ref 2795148 // InheritIf
	class_ref 2795404 // typedef101
	class_ref 2795276 // InheritIf<T,true>
	class_ref 2795532 // GenericCallbackOutputTraits
	class_ref 2795916 // ResourceCallbackOutputTraits
	class_ref 2796428 // CallbackOutputTraits<Var>
	class_ref 2796812 // GenericVectorCallbackOutputTraits
	class_ref 2797196 // ResourceVectorCallbackOutputTraits
	class_ref 2797708 // CallbackOutputTraits<std::vector<pp::Var> >
	class_ref 2798092 // CallbackOutputTraits<std::vector<pp::DirectoryEntry_Dev> >
      end
    end
  end
end
