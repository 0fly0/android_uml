class MPEG2ADTSReformatter
!!!12688396.java!!!	MPEG2ADTSReformatter(inout streamElement : StreamElement)
            super(streamElement);
!!!12688524.java!!!	reformatSamples(inout track : TrackInfo, inout rawBuffer : ByteBuffer, in fragmentIndex : int, in qualityLevel : int) : SmoothStreamSample
            StreamFragmentElement fragment = mStreamElement.getFragments().get(fragmentIndex);
            TrackElement trackElement = mStreamElement.getTracks().get(qualityLevel);

            List<SmoothStreamSample> newSamples = new ArrayList<SmoothStreamSample>(
                    track.mSamples.size());
            long elapsed = 0;
            long fragmentStartTime = fragment.getFragmentStartTime();
            long timeScale = mStreamElement.getTimeScale();
            for (SampleInfo sample : track.mSamples) {
                int size = sample.mSize + sADTHeaderSize;
                SmoothStreamSample newSample = SmoothStreamSample.create(size);

                rawBuffer.position(sample.mPosition);
                addADTHeader(newSample.buffer, sample.mSize, trackElement.getSamplingRate(),
                        trackElement.getChannels());
                rawBuffer.get(newSample.buffer.array(), sADTHeaderSize, size - sADTHeaderSize);

                // calculate start time.
                newSample.startTime = SmoothStreamingUtil.convertTimeInUs(
                        fragmentStartTime + elapsed + sample.mCompositionTimeOffset, timeScale);

                newSample.cryptoInfo = sample.mCryptoInfo;
                if (newSample.cryptoInfo != null &&
                        newSample.cryptoInfo.numBytesOfClearData.length != 0) {
                    // Considers the ADTS header as a clear data.
                    newSample.cryptoInfo.numBytesOfClearData[0] += 7;
                }

                // calculate duration.
                newSample.duration = SmoothStreamingUtil
                        .convertTimeInUs(sample.mDuration, timeScale);
                elapsed += sample.mDuration;

                newSample.buffer.limit(size);
                newSample.buffer.position(0);

                newSamples.add(newSample);
            }

            return newSamples;
!!!12688652.java!!!	addADTHeader(inout buffer : ByteBuffer, in frameSize : int, in samplingRate : int, in channelCount : int) : void
            buffer.put((byte) 0xff);

            byte b = (byte) (0xf0 | 1);
            buffer.put(b);

            int samplingIndex = getSamplingRateIndex(samplingRate);
            assert(samplingIndex != -1);
            b = (byte) ((0x01 << 6) | (samplingIndex << 2) | (channelCount >> 2));
            buffer.put(b);

            int frameLength = frameSize;
            b = (byte) ((channelCount << 6) | (frameLength >> 11));
            buffer.put(b);

            b = (byte) (frameLength >> 3);
            buffer.put(b);

            // adts_buffer_fullness 11 0x7FF
            b = (byte) ((frameLength << 5) | (0x7ff >> 6));
            buffer.put(b);

            b = (byte) (0x7ff << 2);
            buffer.put(b);
!!!12688780.java!!!	getSamplingRateIndex(in samplingRate : int) : int
            for (int i = 0; i < sSamplingRate.length; ++i) {
                if (sSamplingRate[i] == samplingRate) {
                    return i;
                }
            }
            return -1;
