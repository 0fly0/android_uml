class ClientKeyExchange
!!!2349211.java!!!	ClientKeyExchange(inout encrypted_pre_master_secret : byte, inout isTLS : boolean)
        this.exchange_keys = encrypted_pre_master_secret;
        length = this.exchange_keys.length;
        if (isTLS) {
            length += 2;
        }
        this.isTLS = isTLS;
        isRSA = true;
!!!2349339.java!!!	ClientKeyExchange(inout dh_Yc : BigInteger)
        byte[] bb = dh_Yc.toByteArray();
        if (bb[0] == 0) {
            exchange_keys = new byte[bb.length-1];
            System.arraycopy(bb, 1, exchange_keys, 0, exchange_keys.length);
        } else {
            exchange_keys = bb;
        }
        length = exchange_keys.length +2;
        isRSA = false;
!!!2349467.java!!!	ClientKeyExchange()
        exchange_keys = EmptyArray.BYTE;
        length = 0;
        isRSA = false;
!!!2349595.java!!!	ClientKeyExchange(inout in : HandshakeIODataStream, in length : int, inout isTLS : boolean, inout isRSA : boolean)
        this.isTLS = isTLS;
        this.isRSA = isRSA;
        if (length == 0) {
            this.length = 0;
            exchange_keys = EmptyArray.BYTE;
        } else {
            int size;
            if (isRSA && !isTLS) {// SSL3.0 RSA
                size = length;
                this.length = size;
            } else { // DH or TLSv1 RSA
                size = in.readUint16();
                this.length = 2 + size;
            }
            exchange_keys = new byte[size];
            Streams.readFully(in, exchange_keys);
            if (this.length != length) {
                fatalAlert(AlertProtocol.DECODE_ERROR, "DECODE ERROR: incorrect ClientKeyExchange");
            }
        }
!!!2349723.java!!!	send(inout out : HandshakeIODataStream) : void
        if (exchange_keys.length != 0) {
            if (!isRSA || isTLS) {// DH or TLSv1 RSA
                out.writeUint16(exchange_keys.length);
            }
            out.write(exchange_keys);
        }
!!!2349851.java!!!	getType() : int
        return Handshake.CLIENT_KEY_EXCHANGE;
!!!2349979.java!!!	isEmpty() : boolean
        return (exchange_keys.length == 0);
