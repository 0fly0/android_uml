class EmulatedFieldsForDumping
!!!193051.java!!!	EmulatedFieldsForDumping(inout oos : ObjectOutputStream, inout streamClass : ObjectStreamClass)
        this.oos = oos;
        this.emulatedFields = new EmulatedFields(streamClass.fields(), (ObjectStreamField[]) null);
!!!193179.java!!!	emulatedFields() : EmulatedFields
        return emulatedFields;
!!!193307.java!!!	put(inout name : String, in value : byte) : void
        emulatedFields.put(name, value);
!!!193435.java!!!	put(inout name : String, in value : char) : void
        emulatedFields.put(name, value);
!!!193563.java!!!	put(inout name : String, in value : double) : void
        emulatedFields.put(name, value);
!!!193691.java!!!	put(inout name : String, in value : float) : void
        emulatedFields.put(name, value);
!!!193819.java!!!	put(inout name : String, in value : int) : void
        emulatedFields.put(name, value);
!!!193947.java!!!	put(inout name : String, in value : long) : void
        emulatedFields.put(name, value);
!!!194075.java!!!	put(inout name : String, inout value : Object) : void
        emulatedFields.put(name, value);
!!!194203.java!!!	put(inout name : String, in value : short) : void
        emulatedFields.put(name, value);
!!!194331.java!!!	put(inout name : String, inout value : boolean) : void
        emulatedFields.put(name, value);
!!!194459.java!!!	write(inout output : ObjectOutput) : void
        if (!output.equals(oos)) {
            throw new IllegalArgumentException("Attempting to write to a different stream than the one that created this PutField");
        }
        for (EmulatedFields.ObjectSlot slot : emulatedFields.slots()) {
            Object fieldValue = slot.getFieldValue();
            Class<?> type = slot.getField().getType();
            if (type == int.class) {
                output.writeInt(fieldValue != null ? ((Integer) fieldValue).intValue() : 0);
            } else if (type == byte.class) {
                output.writeByte(fieldValue != null ? ((Byte) fieldValue).byteValue() : 0);
            } else if (type == char.class) {
                output.writeChar(fieldValue != null ? ((Character) fieldValue).charValue() : 0);
            } else if (type == short.class) {
                output.writeShort(fieldValue != null ? ((Short) fieldValue).shortValue() : 0);
            } else if (type == boolean.class) {
                output.writeBoolean(fieldValue != null ? ((Boolean) fieldValue).booleanValue() : false);
            } else if (type == long.class) {
                output.writeLong(fieldValue != null ? ((Long) fieldValue).longValue() : 0);
            } else if (type == float.class) {
                output.writeFloat(fieldValue != null ? ((Float) fieldValue).floatValue() : 0);
            } else if (type == double.class) {
                output.writeDouble(fieldValue != null ? ((Double) fieldValue).doubleValue() : 0);
            } else {
                // Either array or Object
                output.writeObject(fieldValue);
            }
        }
