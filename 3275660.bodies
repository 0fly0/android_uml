class VideoInputSelectionFragment
!!!14220940.java!!!	VideoInputSelectionFragment(inout context : Context)
        super(context);
!!!14221068.java!!!	onCreateView(inout inflater : LayoutInflater, inout container : ViewGroup, inout savedInstanceState : Bundle) : View
        if (container == null) return null;

        View view = inflater.inflate(R.layout.video_input_selection, null);

        mTextView = (TextView) view.findViewById(R.id.select_input_content);
        mDoYouSeeVideo = (TextView) view.findViewById(R.id.do_you_see_video);
        mPortGroup1 = (RadioGroup) view.findViewById(R.id.port_group);
        mPortGroup2 = (RadioGroup) view.findViewById(R.id.port_group2);
        mScrollView = view.findViewById(R.id.scroll_view);

        mRadioListener = new View.OnClickListener() {
                @Override
                public void onClick(View view) {
                    focusNext();
                }
            };

        mCheckboxListener = new OnCheckedChangeListener() {
                @Override
                public void onCheckedChanged(CompoundButton buttonView,
                        boolean isChecked) {
                    if (isChecked) {
                        setVideoUri((Uri) buttonView.getTag());

                        if (mPortGroup2 != null) {
                            if (buttonView.getParent() == mPortGroup1) {
                                mPortGroup2.clearCheck();
                            } else if (buttonView.getParent() == mPortGroup2) {
                                mPortGroup1.clearCheck();
                            }
                        }
                    }
                }
            };

        return view;
!!!14221196.java!!!	onAccept() : boolean
        return true;
!!!14221324.java!!!	onResume() : void
        super.onResume();

        setTitleText(getString(R.string.set_up_media_device_title));
        setSubtitleText(getString(R.string.choose_video_subtitle));
        updateUI();
!!!14221452.java!!!	updateUI() : void

        mPortGroup1.removeAllViews();
        mPortGroup2.removeAllViews();

        int visibleCount = 0;
        List<VideoPort> inputs = ((MediaDeviceSetupActivity) getSetupActivity()).getVideoInputs();
        if (inputs != null) {
            for (VideoPort input : inputs) {
                if (!input.isHidden()) {
                    visibleCount++;
                }
            }
        }

        if (visibleCount <= 1) {
            mScrollView.setVisibility(View.GONE);
            mPortGroup1.setVisibility(View.GONE);
            mPortGroup2.setVisibility(View.GONE);
            mTextView.setVisibility(View.GONE);
            mDoYouSeeVideo.setVisibility(View.VISIBLE);
            setSubtitleText(getString(R.string.single_port_subtitle));
            focusNext();
            return;
        } else {
            mScrollView.setVisibility(View.VISIBLE);
            mPortGroup1.setVisibility(View.VISIBLE);
            mTextView.setVisibility(View.VISIBLE);
            mDoYouSeeVideo.setVisibility(View.GONE);
        }

        mRadioButtons = new ArrayList<RadioButton>();

        // Create a radio button for each video port.
        // Start the view ID at an arbitrary positive integer. It can't be
        // a negative number since that's what the R.id generated IDs use.
        int id = 1563;
        int count = 0;
        int maxCount = getResources().getInteger(
                R.integer.config_max_item_count_of_first_port_group);

        RadioGroup portGroup = mPortGroup1;
        for (VideoPort input : inputs) {
            if (!input.isHidden()) {
                if (maxCount == count++) {
                    mPortGroup2.setVisibility(View.VISIBLE);
                    portGroup = mPortGroup2;
                }

                RadioButton button = (RadioButton) getActivity().getLayoutInflater().inflate(
                        R.layout.choose_video_port,
                        portGroup,
                        false);
                // Need to set the ID so that RadioGroup functions properly.
                button.setId(id++);
                button.setText(input.getTitle());
                button.setTag(input.getVideoUri());
                mRadioButtons.add(button);
                portGroup.addView(button);
                button.setOnCheckedChangeListener(mCheckboxListener);
                button.setOnClickListener(mRadioListener);
            }
        }

        VideoPort port = ((MediaDeviceSetupActivity) getSetupActivity())
                .getDefaultVideoInput();
        Log.d(TAG, "default video input: " + port);
        Uri defaultUri = null;
        if (port != null) {
            defaultUri = port.getVideoUri();
        }

        if (mRadioButtons != null) {
            mPortGroup1.clearCheck();
            mPortGroup2.clearCheck();

            if (port == null) {
                return;
            }

            for (RadioButton button : mRadioButtons) {
                if (button.getTag().equals(defaultUri)) {
                    button.setChecked(true);
                    requestFocusOnView(button);
                    break;
                }
            }

        }
!!!14221580.java!!!	setVideoUri(inout uri : Uri) : void
        setProperty(VideoSetupDisplayFragment.VIDEO_URI_PROPERTY, uri);
