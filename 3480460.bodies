class BasicRegisterMapper
!!!15173132.java!!!	BasicRegisterMapper(in countOldRegisters : int)
        oldToNew = new IntList(countOldRegisters);
!!!15173260.java!!!	getNewRegisterCount() : int
        return runningCountNewRegisters;
!!!15173388.java!!!	map(inout registerSpec : RegisterSpec) : RegisterSpec
        if (registerSpec == null) {
            return null;
        }

        int newReg;
        try {
            newReg = oldToNew.get(registerSpec.getReg());
        } catch (IndexOutOfBoundsException ex) {
            newReg = -1;
        }

        if (newReg < 0) {
            throw new RuntimeException("no mapping specified for register");
        }

        return registerSpec.withReg(newReg);
!!!15173516.java!!!	oldToNew(in oldReg : int) : int
        if (oldReg >= oldToNew.size()) {
            return -1;
        }

        return oldToNew.get(oldReg);
!!!15173644.java!!!	toHuman() : String
        StringBuilder sb = new StringBuilder();

        sb.append("Old\tNew\n");
        int sz = oldToNew.size();

        for (int i = 0; i < sz; i++) {
            sb.append(i);
            sb.append('\t');
            sb.append(oldToNew.get(i));
            sb.append('\n');
        }

        sb.append("new reg count:");

        sb.append(runningCountNewRegisters);
        sb.append('\n');

        return sb.toString();
!!!15173772.java!!!	addMapping(in oldReg : int, in newReg : int, in category : int) : void
        if (oldReg >= oldToNew.size()) {
            // expand the array as necessary
            for (int i = oldReg - oldToNew.size(); i >= 0; i--) {
                oldToNew.add(-1);
            }
        }

        oldToNew.set(oldReg, newReg);

        if (runningCountNewRegisters < (newReg + category)) {
            runningCountNewRegisters = newReg + category;
        }
