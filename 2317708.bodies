class Proxy
!!!10791948.java!!!	Proxy(inout remote : android.os.IBinder)
mRemote = remote;
!!!10792076.java!!!	asBinder() : android.os.IBinder
return mRemote;
!!!10792204.java!!!	getInterfaceDescriptor() : java.lang.String
return DESCRIPTOR;
!!!10792332.java!!!	getInputMethodList() : java.util.List<android.view.inputmethod.InputMethodInfo>
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
java.util.List<android.view.inputmethod.InputMethodInfo> _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
mRemote.transact(Stub.TRANSACTION_getInputMethodList, _data, _reply, 0);
_reply.readException();
_result = _reply.createTypedArrayList(android.view.inputmethod.InputMethodInfo.CREATOR);
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!10792460.java!!!	getEnabledInputMethodList() : java.util.List<android.view.inputmethod.InputMethodInfo>
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
java.util.List<android.view.inputmethod.InputMethodInfo> _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
mRemote.transact(Stub.TRANSACTION_getEnabledInputMethodList, _data, _reply, 0);
_reply.readException();
_result = _reply.createTypedArrayList(android.view.inputmethod.InputMethodInfo.CREATOR);
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!10792588.java!!!	getEnabledInputMethodSubtypeList(inout imi : android.view.inputmethod.InputMethodInfo, inout allowsImplicitlySelectedSubtypes : boolean) : java.util.List<android.view.inputmethod.InputMethodSubtype>
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
java.util.List<android.view.inputmethod.InputMethodSubtype> _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
if ((imi!=null)) {
_data.writeInt(1);
imi.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
_data.writeInt(((allowsImplicitlySelectedSubtypes)?(1):(0)));
mRemote.transact(Stub.TRANSACTION_getEnabledInputMethodSubtypeList, _data, _reply, 0);
_reply.readException();
_result = _reply.createTypedArrayList(android.view.inputmethod.InputMethodSubtype.CREATOR);
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!10792716.java!!!	getLastInputMethodSubtype() : android.view.inputmethod.InputMethodSubtype
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
android.view.inputmethod.InputMethodSubtype _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
mRemote.transact(Stub.TRANSACTION_getLastInputMethodSubtype, _data, _reply, 0);
_reply.readException();
if ((0!=_reply.readInt())) {
_result = android.view.inputmethod.InputMethodSubtype.CREATOR.createFromParcel(_reply);
}
else {
_result = null;
}
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!10792844.java!!!	getShortcutInputMethodsAndSubtypes() : java.util.List
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
java.util.List _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
mRemote.transact(Stub.TRANSACTION_getShortcutInputMethodsAndSubtypes, _data, _reply, 0);
_reply.readException();
java.lang.ClassLoader cl = (java.lang.ClassLoader)this.getClass().getClassLoader();
_result = _reply.readArrayList(cl);
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!10792972.java!!!	addClient(inout client : IInputMethodClient, inout inputContext : IInputContext, in uid : int, in pid : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder((((client!=null))?(client.asBinder()):(null)));
_data.writeStrongBinder((((inputContext!=null))?(inputContext.asBinder()):(null)));
_data.writeInt(uid);
_data.writeInt(pid);
mRemote.transact(Stub.TRANSACTION_addClient, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!10793100.java!!!	removeClient(inout client : IInputMethodClient) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder((((client!=null))?(client.asBinder()):(null)));
mRemote.transact(Stub.TRANSACTION_removeClient, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!10793228.java!!!	startInput(inout client : IInputMethodClient, inout inputContext : IInputContext, inout attribute : android.view.inputmethod.EditorInfo, in controlFlags : int) : com.android.internal.view.InputBindResult
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
com.android.internal.view.InputBindResult _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder((((client!=null))?(client.asBinder()):(null)));
_data.writeStrongBinder((((inputContext!=null))?(inputContext.asBinder()):(null)));
if ((attribute!=null)) {
_data.writeInt(1);
attribute.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
_data.writeInt(controlFlags);
mRemote.transact(Stub.TRANSACTION_startInput, _data, _reply, 0);
_reply.readException();
if ((0!=_reply.readInt())) {
_result = com.android.internal.view.InputBindResult.CREATOR.createFromParcel(_reply);
}
else {
_result = null;
}
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!10793356.java!!!	finishInput(inout client : IInputMethodClient) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder((((client!=null))?(client.asBinder()):(null)));
mRemote.transact(Stub.TRANSACTION_finishInput, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!10793484.java!!!	showSoftInput(inout client : IInputMethodClient, in flags : int, inout resultReceiver : android.os.ResultReceiver) : boolean
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
boolean _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder((((client!=null))?(client.asBinder()):(null)));
_data.writeInt(flags);
if ((resultReceiver!=null)) {
_data.writeInt(1);
resultReceiver.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
mRemote.transact(Stub.TRANSACTION_showSoftInput, _data, _reply, 0);
_reply.readException();
_result = (0!=_reply.readInt());
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!10793612.java!!!	hideSoftInput(inout client : IInputMethodClient, in flags : int, inout resultReceiver : android.os.ResultReceiver) : boolean
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
boolean _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder((((client!=null))?(client.asBinder()):(null)));
_data.writeInt(flags);
if ((resultReceiver!=null)) {
_data.writeInt(1);
resultReceiver.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
mRemote.transact(Stub.TRANSACTION_hideSoftInput, _data, _reply, 0);
_reply.readException();
_result = (0!=_reply.readInt());
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!10793740.java!!!	windowGainedFocus(inout client : IInputMethodClient, inout windowToken : android.os.IBinder, in controlFlags : int, in softInputMode : int, in windowFlags : int, inout attribute : android.view.inputmethod.EditorInfo, inout inputContext : IInputContext) : com.android.internal.view.InputBindResult
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
com.android.internal.view.InputBindResult _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder((((client!=null))?(client.asBinder()):(null)));
_data.writeStrongBinder(windowToken);
_data.writeInt(controlFlags);
_data.writeInt(softInputMode);
_data.writeInt(windowFlags);
if ((attribute!=null)) {
_data.writeInt(1);
attribute.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
_data.writeStrongBinder((((inputContext!=null))?(inputContext.asBinder()):(null)));
mRemote.transact(Stub.TRANSACTION_windowGainedFocus, _data, _reply, 0);
_reply.readException();
if ((0!=_reply.readInt())) {
_result = com.android.internal.view.InputBindResult.CREATOR.createFromParcel(_reply);
}
else {
_result = null;
}
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!10793868.java!!!	showInputMethodPickerFromClient(inout client : IInputMethodClient) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder((((client!=null))?(client.asBinder()):(null)));
mRemote.transact(Stub.TRANSACTION_showInputMethodPickerFromClient, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!10793996.java!!!	showInputMethodAndSubtypeEnablerFromClient(inout client : IInputMethodClient, inout topId : java.lang.String) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder((((client!=null))?(client.asBinder()):(null)));
_data.writeString(topId);
mRemote.transact(Stub.TRANSACTION_showInputMethodAndSubtypeEnablerFromClient, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!10794124.java!!!	setInputMethod(inout token : android.os.IBinder, inout id : java.lang.String) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder(token);
_data.writeString(id);
mRemote.transact(Stub.TRANSACTION_setInputMethod, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!10794252.java!!!	setInputMethodAndSubtype(inout token : android.os.IBinder, inout id : java.lang.String, inout subtype : android.view.inputmethod.InputMethodSubtype) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder(token);
_data.writeString(id);
if ((subtype!=null)) {
_data.writeInt(1);
subtype.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
mRemote.transact(Stub.TRANSACTION_setInputMethodAndSubtype, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!10794380.java!!!	hideMySoftInput(inout token : android.os.IBinder, in flags : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder(token);
_data.writeInt(flags);
mRemote.transact(Stub.TRANSACTION_hideMySoftInput, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!10794508.java!!!	showMySoftInput(inout token : android.os.IBinder, in flags : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder(token);
_data.writeInt(flags);
mRemote.transact(Stub.TRANSACTION_showMySoftInput, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!10794636.java!!!	updateStatusIcon(inout token : android.os.IBinder, inout packageName : java.lang.String, in iconId : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder(token);
_data.writeString(packageName);
_data.writeInt(iconId);
mRemote.transact(Stub.TRANSACTION_updateStatusIcon, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!10794764.java!!!	setImeWindowStatus(inout token : android.os.IBinder, in vis : int, in backDisposition : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder(token);
_data.writeInt(vis);
_data.writeInt(backDisposition);
mRemote.transact(Stub.TRANSACTION_setImeWindowStatus, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!10794892.java!!!	registerSuggestionSpansForNotification(inout spans : android.text.style.SuggestionSpan) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeTypedArray(spans, 0);
mRemote.transact(Stub.TRANSACTION_registerSuggestionSpansForNotification, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!10795020.java!!!	notifySuggestionPicked(inout span : android.text.style.SuggestionSpan, inout originalString : java.lang.String, in index : int) : boolean
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
boolean _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
if ((span!=null)) {
_data.writeInt(1);
span.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
_data.writeString(originalString);
_data.writeInt(index);
mRemote.transact(Stub.TRANSACTION_notifySuggestionPicked, _data, _reply, 0);
_reply.readException();
_result = (0!=_reply.readInt());
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!10795148.java!!!	getCurrentInputMethodSubtype() : android.view.inputmethod.InputMethodSubtype
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
android.view.inputmethod.InputMethodSubtype _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
mRemote.transact(Stub.TRANSACTION_getCurrentInputMethodSubtype, _data, _reply, 0);
_reply.readException();
if ((0!=_reply.readInt())) {
_result = android.view.inputmethod.InputMethodSubtype.CREATOR.createFromParcel(_reply);
}
else {
_result = null;
}
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!10795276.java!!!	setCurrentInputMethodSubtype(inout subtype : android.view.inputmethod.InputMethodSubtype) : boolean
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
boolean _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
if ((subtype!=null)) {
_data.writeInt(1);
subtype.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
mRemote.transact(Stub.TRANSACTION_setCurrentInputMethodSubtype, _data, _reply, 0);
_reply.readException();
_result = (0!=_reply.readInt());
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!10795404.java!!!	switchToLastInputMethod(inout token : android.os.IBinder) : boolean
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
boolean _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder(token);
mRemote.transact(Stub.TRANSACTION_switchToLastInputMethod, _data, _reply, 0);
_reply.readException();
_result = (0!=_reply.readInt());
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!10795532.java!!!	switchToNextInputMethod(inout token : android.os.IBinder, inout onlyCurrentIme : boolean) : boolean
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
boolean _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder(token);
_data.writeInt(((onlyCurrentIme)?(1):(0)));
mRemote.transact(Stub.TRANSACTION_switchToNextInputMethod, _data, _reply, 0);
_reply.readException();
_result = (0!=_reply.readInt());
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!10795660.java!!!	setInputMethodEnabled(inout id : java.lang.String, inout enabled : boolean) : boolean
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
boolean _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeString(id);
_data.writeInt(((enabled)?(1):(0)));
mRemote.transact(Stub.TRANSACTION_setInputMethodEnabled, _data, _reply, 0);
_reply.readException();
_result = (0!=_reply.readInt());
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!10795788.java!!!	setAdditionalInputMethodSubtypes(inout id : java.lang.String, inout subtypes : android.view.inputmethod.InputMethodSubtype) : void
android.os.Parcel _data = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeString(id);
_data.writeTypedArray(subtypes, 0);
mRemote.transact(Stub.TRANSACTION_setAdditionalInputMethodSubtypes, _data, null, android.os.IBinder.FLAG_ONEWAY);
}
finally {
_data.recycle();
}
