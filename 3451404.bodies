class EncodedValueReader
!!!15051916.java!!!	EncodedValueReader(inout in : ByteInput)
        this.in = in;
!!!15052044.java!!!	EncodedValueReader(inout in : EncodedValue)
        this(in.asByteInput());
!!!15052172.java!!!	readArray() : void
        int size = Leb128Utils.readUnsignedLeb128(in);
        visitArray(size);

        for (int i = 0; i < size; i++) {
            readValue();
        }
!!!15052300.java!!!	readAnnotation() : void
        int typeIndex = Leb128Utils.readUnsignedLeb128(in);
        int size = Leb128Utils.readUnsignedLeb128(in);
        visitAnnotation(typeIndex, size);

        for (int i = 0; i < size; i++) {
            visitAnnotationName(Leb128Utils.readUnsignedLeb128(in));
            readValue();
        }
!!!15052428.java!!!	readValue() : void
        int argAndType = in.readByte() & 0xff;
        int type = argAndType & 0x1f;
        int arg = (argAndType & 0xe0) >> 5;
        int size = arg + 1;

        switch (type) {
        case ENCODED_BYTE:
        case ENCODED_SHORT:
        case ENCODED_CHAR:
        case ENCODED_INT:
        case ENCODED_LONG:
        case ENCODED_FLOAT:
        case ENCODED_DOUBLE:
            visitPrimitive(argAndType, type, arg, size);
            break;
        case ENCODED_STRING:
            visitString(type, readIndex(in, size));
            break;
        case ENCODED_TYPE:
            visitType(type, readIndex(in, size));
            break;
        case ENCODED_FIELD:
        case ENCODED_ENUM:
            visitField(type, readIndex(in, size));
            break;
        case ENCODED_METHOD:
            visitMethod(type, readIndex(in, size));
            break;
        case ENCODED_ARRAY:
            visitArrayValue(argAndType);
            readArray();
            break;
        case ENCODED_ANNOTATION:
            visitAnnotationValue(argAndType);
            readAnnotation();
            break;
        case ENCODED_NULL:
            visitEncodedNull(argAndType);
            break;
        case ENCODED_BOOLEAN:
            visitEncodedBoolean(argAndType);
            break;
        }
!!!15052940.java!!!	visitPrimitive(in argAndType : int, in type : int, in arg : int, in size : int) : void
        for (int i = 0; i < size; i++) {
            in.readByte();
        }
!!!15054092.java!!!	readIndex(inout in : ByteInput, in byteCount : int) : int
        int result = 0;
        int shift = 0;
        for (int i = 0; i < byteCount; i++) {
            result += (in.readByte() & 0xff) << shift;
            shift += 8;
        }
        return result;
