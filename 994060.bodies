class ZoomControlEmbedded
!!!5112460.java!!!	ZoomControlEmbedded(inout zoomManager : ZoomManager, inout webView : WebViewClassic)
        mZoomManager = zoomManager;
        mWebView = webView;
!!!5112588.java!!!	show() : void
        if (!getControls().isVisible() && !mZoomManager.isZoomScaleFixed()) {

            mZoomButtonsController.setVisible(true);

            if (mZoomManager.isDoubleTapEnabled()) {
                WebSettingsClassic settings = mWebView.getSettings();
                int count = settings.getDoubleTapToastCount();
                if (mZoomManager.isInZoomOverview() && count > 0) {
                    settings.setDoubleTapToastCount(--count);
                    Toast.makeText(mWebView.getContext(),
                            com.android.internal.R.string.double_tap_toast,
                            Toast.LENGTH_LONG).show();
                }
            }
        }
!!!5112716.java!!!	hide() : void
        if (mZoomButtonsController != null) {
            mZoomButtonsController.setVisible(false);
        }
!!!5112844.java!!!	isVisible() : boolean
        return mZoomButtonsController != null && mZoomButtonsController.isVisible();
!!!5112972.java!!!	update() : void
        if (mZoomButtonsController == null) {
            return;
        }

        boolean canZoomIn = mZoomManager.canZoomIn();
        boolean canZoomOut = mZoomManager.canZoomOut() && !mZoomManager.isInZoomOverview();
        if (!canZoomIn && !canZoomOut) {
            // Hide the zoom in and out buttons if the page cannot zoom
            mZoomButtonsController.getZoomControls().setVisibility(View.GONE);
        } else {
            // Set each one individually, as a page may be able to zoom in or out
            mZoomButtonsController.setZoomInEnabled(canZoomIn);
            mZoomButtonsController.setZoomOutEnabled(canZoomOut);
        }
!!!5113100.java!!!	getControls() : ZoomButtonsController
        if (mZoomButtonsController == null) {
            mZoomButtonsController = new ZoomButtonsController(mWebView.getWebView());
            mZoomButtonsController.setOnZoomListener(new ZoomListener());
            // ZoomButtonsController positions the buttons at the bottom, but in
            // the middle. Change their layout parameters so they appear on the
            // right.
            View controls = mZoomButtonsController.getZoomControls();
            ViewGroup.LayoutParams params = controls.getLayoutParams();
            if (params instanceof FrameLayout.LayoutParams) {
                ((FrameLayout.LayoutParams) params).gravity = Gravity.END;
            }
        }
        return mZoomButtonsController;
