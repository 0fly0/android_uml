format 74
"cert" // framework::base::opengl::java::javax::security::cert
  revision 1
  modified_by 27 "shchen"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "/home/shchen/work/android-x86/libcore/luni/src/main/java/javax/security/cert/"
  java_package "javax.security.cert"
  classview 134299 "cert"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 294043 "X509Certificate"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Abstract base class for X.509 certificates.
<p>
This represents a standard way for accessing the attributes of X.509 v1
certificates.
<p>
Note: This package is provided only for compatibility reasons.
It contains a simplified version of the java.security.cert package that was
previously used by JSSE (Java SSL package). All applications that do not have
to be compatible with older versions of JSSE (that is before Java SDK 1.5)
should only use java.security.cert."
      classrelation 534043 // <generalisation>
	relation 534043 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 534043 // <generalisation>
	  b parent class_ref 298907 // Certificate
      end

      classrelation 534171 // constructor (<unidirectional association>)
	relation 534171 --->
	  a role_name "constructor" class_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 534171 // constructor (<unidirectional association>)
	  b parent class_ref 144411 // Constructor
      end

      extra_member 135579 "initialization"
	
	cpp "" ""
	java "  static {
        try {
            String classname = Security.getProperty(\"cert.provider.x509v1\");
            Class cl = Class.forName(classname);
            constructor = cl.getConstructor(new Class[] {InputStream.class});
        } catch (Throwable e) {
        }
    }"
	php ""
	python ""
	idl ""
      end

      operation 1866523 "X509Certificate"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code X509Certificate}."
      end

      operation 1866651 "getInstance"
	class_operation public return_type class_ref 294043 // X509Certificate
	nparams 1
	  param inout name "inStream" type class_ref 131867 // InputStream
	nexceptions 1
	  exception class_ref 299163 // CertificateException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code X509Certificate} and initializes it from the
specified input stream.

@param inStream
           input stream containing data to initialize the certificate.
@return the certificate initialized from the specified input stream
@throws CertificateException
            if the certificate cannot be created or initialized."
      end

      operation 1866779 "getInstance"
	class_operation public return_type class_ref 294043 // X509Certificate
	nparams 1
	  param inout name "certData" explicit_type "byte"
	nexceptions 1
	  exception class_ref 299163 // CertificateException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code X509Certificate} and initializes it from the
specified byte array.

@param certData
           byte array containing data to initialize the certificate.
@return the certificate initialized from the specified byte array
@throws CertificateException
            if the certificate cannot be created or initialized."
      end

      operation 1866907 "checkValidity"
	abstract public explicit_return_type "void"
	nparams 0
	nexceptions 2
	  exception class_ref 299291 // CertificateExpiredException
	  exception class_ref 299419 // CertificateNotYetValidException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks whether the certificate is currently valid.
<p>
The validity defined in ASN.1:

<pre>
validity             Validity

Validity ::= SEQUENCE {
     notBefore       CertificateValidityDate,
     notAfter        CertificateValidityDate }

CertificateValidityDate ::= CHOICE {
     utcTime         UTCTime,
     generalTime     GeneralizedTime }
</pre>

@throws CertificateExpiredException
            if the certificate has expired.
@throws CertificateNotYetValidException
            if the certificate is not yet valid."
      end

      operation 1867035 "checkValidity"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "date" type class_ref 171931 // Date
	nexceptions 2
	  exception class_ref 299291 // CertificateExpiredException
	  exception class_ref 299419 // CertificateNotYetValidException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks whether the certificate is valid at the specified date.

@param date
           the date to check the validity against.
@throws CertificateExpiredException
            if the certificate has expired.
@throws CertificateNotYetValidException
            if the certificate is not yet valid.
@see #checkValidity()"
      end

      operation 1867163 "getVersion"
	abstract public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the certificates {@code version} (version number).
<p>
The version defined is ASN.1:

<pre>
Version ::=  INTEGER  {  v1(0), v2(1), v3(2)  }
</pre>

@return the version number."
      end

      operation 1867291 "getSerialNumber"
	abstract public return_type class_ref 166299 // BigInteger
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code serialNumber} of the certificate.
<p>
The ASN.1 definition of {@code serialNumber}:

<pre>
CertificateSerialNumber  ::=  INTEGER
</pre>

@return the serial number."
      end

      operation 1867419 "getIssuerDN"
	abstract public return_type class_ref 176539 // Principal
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code issuer} (issuer distinguished name) as an
implementation specific {@code Principal} object.
<p>
The ASN.1 definition of {@code issuer}:

<pre>
 issuer      Name

 Name ::= CHOICE {
     RDNSequence }

   RDNSequence ::= SEQUENCE OF RelativeDistinguishedName

   RelativeDistinguishedName ::= SET OF AttributeTypeAndValue

   AttributeTypeAndValue ::= SEQUENCE {
     type     AttributeType,
     value    AttributeValue }

   AttributeType ::= OBJECT IDENTIFIER

   AttributeValue ::= ANY DEFINED BY AttributeType
</pre>

@return the {@code issuer} as an implementation specific {@code
        Principal}."
      end

      operation 1867547 "getSubjectDN"
	abstract public return_type class_ref 176539 // Principal
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code subject} (subject distinguished name) as an
implementation specific {@code Principal} object.
<p>
The ASN.1 definition of {@code subject}:

<pre>
subject      Name

 Name ::= CHOICE {
     RDNSequence }

   RDNSequence ::= SEQUENCE OF RelativeDistinguishedName

   RelativeDistinguishedName ::= SET OF AttributeTypeAndValue

   AttributeTypeAndValue ::= SEQUENCE {
     type     AttributeType,
     value    AttributeValue }

   AttributeType ::= OBJECT IDENTIFIER

   AttributeValue ::= ANY DEFINED BY AttributeType
</pre>

@return the {@code subject} (subject distinguished name)."
      end

      operation 1867675 "getNotBefore"
	abstract public return_type class_ref 171931 // Date
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code notBefore} date from the validity period of the
certificate.

@return the start of the validity period."
      end

      operation 1867803 "getNotAfter"
	abstract public return_type class_ref 171931 // Date
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code notAfter} date of the validity period of the
certificate.

@return the end of the validity period."
      end

      operation 1867931 "getSigAlgName"
	abstract public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the algorithm for the certificate signature.

@return the signature algorithm name."
      end

      operation 1868059 "getSigAlgOID"
	abstract public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the OID of the signature algorithm from the certificate.

@return the OID of the signature algorithm."
      end

      operation 1868187 "getSigAlgParams"
	abstract public explicit_return_type "byte"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the parameters of the signature algorithm in DER-encoded format.

@return the parameters of the signature algorithm, or null if none are
        used."
      end
    end

    class 298907 "Certificate"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Abstract class to represent identity certificates. It represents a way to
verify the binding of a Principal and its public key. Examples are X.509,
PGP, and SDSI.
<p>
Note: This package is provided only for compatibility reasons.
It contains a simplified version of the java.security.cert package that was
previously used by JSSE (Java SSL package). All applications that do not have
to be compatible with older versions of JSSE (that is before Java SDK 1.5)
should only use java.security.cert."
      operation 1864219 "Certificate"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code Certificate}."
      end

      operation 1864347 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares the argument to this Certificate. If both have the same bytes
they are assumed to be equal.

@param obj
           the {@code Certificate} to compare with this object
@return <code>true</code> if {@code obj} is the same as this
        {@code Certificate}, <code>false</code> otherwise
@see #hashCode"
      end

      operation 1864475 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an integer hash code for the receiver. Any two objects which
return <code>true</code> when passed to <code>equals</code> must answer
the same value for this method.

@return the receiver's hash
@see #equals"
      end

      operation 1864603 "getEncoded"
	abstract public explicit_return_type "byte"
	nparams 0
	nexceptions 1
	  exception class_ref 299035 // CertificateEncodingException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the encoded representation for this certificate.

@return the encoded representation for this certificate.
@throws CertificateEncodingException
            if encoding fails."
      end

      operation 1864731 "verify"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "key" type class_ref 199963 // PublicKey
	nexceptions 5
	  exception class_ref 299163 // CertificateException
	  exception class_ref 195867 // NoSuchAlgorithmException
	  exception class_ref 201755 // InvalidKeyException
	  exception class_ref 195995 // NoSuchProviderException
	  exception class_ref 208027 // SignatureException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Verifies that this certificate was signed with the given public key.

@param key
           public key for which verification should be performed.
@throws CertificateException
            if encoding errors are detected
@throws NoSuchAlgorithmException
            if an unsupported algorithm is detected
@throws InvalidKeyException
            if an invalid key is detected
@throws NoSuchProviderException
            if there is no default provider
@throws SignatureException
            if signature errors are detected"
      end

      operation 1864859 "verify"
	abstract public explicit_return_type "void"
	nparams 2
	  param inout name "key" type class_ref 199963 // PublicKey
	  param inout name "sigProvider" type class_ref 3399692 // String
	nexceptions 5
	  exception class_ref 299163 // CertificateException
	  exception class_ref 195867 // NoSuchAlgorithmException
	  exception class_ref 201755 // InvalidKeyException
	  exception class_ref 195995 // NoSuchProviderException
	  exception class_ref 208027 // SignatureException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Verifies that this certificate was signed with the given public key. Uses
the signature algorithm given by the provider.

@param key
           public key for which verification should be performed.
@param sigProvider
           the name of the signature provider.
@exception CertificateException
               if encoding errors are detected
@exception NoSuchAlgorithmException
               if an unsupported algorithm is detected
@exception InvalidKeyException
               if an invalid key is detected
@exception NoSuchProviderException
               if the specified provider does not exists.
@exception SignatureException
               if signature errors are detected"
      end

      operation 1864987 "toString"
	abstract public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string containing a concise, human-readable description of the
receiver.

@return a printable representation for the receiver."
      end

      operation 1865115 "getPublicKey"
	abstract public return_type class_ref 199963 // PublicKey
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the public key corresponding to this certificate.

@return the public key corresponding to this certificate."
      end
    end

    class 299035 "CertificateEncodingException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The exception that is thrown when an error occurs while a {@code Certificate}
is being encoded.
<p>
Note: This package is provided only for compatibility reasons. It contains a
simplified version of the java.security.cert package that was previously used
by JSSE (Java SSL package). All applications that do not have to be
compatible with older versions of JSSE (that is before Java SDK 1.5) should
only use java.security.cert."
      classrelation 533531 // <generalisation>
	relation 533531 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 533531 // <generalisation>
	  b parent class_ref 299163 // CertificateException
      end

      attribute 448795 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -8187642723048403470L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@serial
"
      end

      operation 1865499 "CertificateEncodingException"
	public explicit_return_type ""
	nparams 1
	  param inout name "msg" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code CertificateEncodingException} with the specified
message.

@param msg
           the detail message for the exception."
      end

      operation 1865627 "CertificateEncodingException"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code CertificateEncodingException}."
      end
    end

    class 299163 "CertificateException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The base class for all {@code Certificate} related exceptions.
<p>
Note: This package is provided only for compatibility reasons. It contains a
simplified version of the java.security.cert package that was previously used
by JSSE (Java SSL package). All applications that do not have to be
compatible with older versions of JSSE (that is before Java SDK 1.5) should
only use java.security.cert."
      classrelation 533403 // <generalisation>
	relation 533403 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 533403 // <generalisation>
	  b parent class_ref 132251 // Exception
      end

      attribute 448667 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -5757213374030785290L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@serial
"
      end

      operation 1865243 "CertificateException"
	public explicit_return_type ""
	nparams 1
	  param inout name "msg" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code CertificateException} with the specified message.

@param msg
           the detail message for the exception."
      end

      operation 1865371 "CertificateException"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code CertificateException}."
      end
    end

    class 299291 "CertificateExpiredException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The exception that is thrown when a {@code Certificate} has expired.
<p>
Note: This package is provided only for compatibility reasons. It contains a
simplified version of the java.security.cert package that was previously used
by JSSE (Java SSL package). All applications that do not have to be
compatible with older versions of JSSE (that is before Java SDK 1.5) should
only use java.security.cert."
      classrelation 533659 // <generalisation>
	relation 533659 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 533659 // <generalisation>
	  b parent class_ref 299163 // CertificateException
      end

      attribute 448923 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 5091601212177261883L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@serial
"
      end

      operation 1865755 "CertificateExpiredException"
	public explicit_return_type ""
	nparams 1
	  param inout name "msg" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code CertificateExpiredException} with the specified
message.

@param msg
           the detail message for this exception"
      end

      operation 1865883 "CertificateExpiredException"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code CertificateExpiredException}."
      end
    end

    class 299419 "CertificateNotYetValidException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The exception that is thrown when a {@code Certificate} is not yet valid.
<p>
Note: This package is provided only for compatibility reasons. It contains a
simplified version of the java.security.cert package that was previously used
by JSSE (Java SSL package). All applications that do not have to be
compatible with older versions of JSSE (that is before Java SDK 1.5) should
only use java.security.cert."
      classrelation 533787 // <generalisation>
	relation 533787 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 533787 // <generalisation>
	  b parent class_ref 299163 // CertificateException
      end

      attribute 449051 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -8976172474266822818L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@serial
"
      end

      operation 1866011 "CertificateNotYetValidException"
	public explicit_return_type ""
	nparams 1
	  param inout name "msg" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code CertificateNotYetValidException} with the specified
message.

@param msg
           the detail message for the exception."
      end

      operation 1866139 "CertificateNotYetValidException"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code CertificateNotYetValidException}."
      end
    end

    class 299547 "CertificateParsingException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The exception that is thrown when a {@code Certificate} can not be parsed.
<p>
Note: This package is provided only for compatibility reasons. It contains a
simplified version of the java.security.cert package that was previously used
by JSSE (Java SSL package). All applications that do not have to be
compatible with older versions of JSSE (that is before Java SDK 1.5) should
only use java.security.cert."
      classrelation 533915 // <generalisation>
	relation 533915 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 533915 // <generalisation>
	  b parent class_ref 299163 // CertificateException
      end

      attribute 449179 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -8449352422951136229L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@serial
"
      end

      operation 1866267 "CertificateParsingException"
	public explicit_return_type ""
	nparams 1
	  param inout name "msg" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code CertificateParsingException} with the specified
message.

@param msg
           the detail message for the exception."
      end

      operation 1866395 "CertificateParsingException"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code CertificateParsingException}."
      end
    end
  end

  deploymentview 133531 "cert"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 254363 "Certificate"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.security.InvalidKeyException;
import java.security.NoSuchAlgorithmException;
import java.security.NoSuchProviderException;
import java.security.PublicKey;
import java.security.SignatureException;
import java.util.Arrays;
${definition}"
      associated_classes
	class_ref 298907 // Certificate
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 254491 "CertificateException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 299163 // CertificateException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 254619 "CertificateEncodingException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 299035 // CertificateEncodingException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 254747 "CertificateExpiredException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 299291 // CertificateExpiredException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 254875 "CertificateNotYetValidException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 299419 // CertificateNotYetValidException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 255003 "CertificateParsingException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 299547 // CertificateParsingException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 255131 "X509Certificate"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.ByteArrayInputStream;
import java.io.InputStream;
import java.lang.reflect.Constructor;
import java.math.BigInteger;
import java.security.InvalidKeyException;
import java.security.NoSuchAlgorithmException;
import java.security.NoSuchProviderException;
import java.security.Principal;
import java.security.PublicKey;
import java.security.Security;
import java.security.SignatureException;
import java.security.cert.CertificateFactory;
import java.util.Date;
${definition}"
      associated_classes
	class_ref 294043 // X509Certificate
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end
  end
end
