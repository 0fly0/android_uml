class CookieManagerClassic
!!!4834316.java!!!	getInstance() : CookieManagerClassic
        if (sRef == null) {
            sRef = new CookieManagerClassic();
        }
        return sRef;
!!!4834444.java!!!	setAcceptCookie(inout accept : boolean) : void
        nativeSetAcceptCookie(accept);
!!!4834572.java!!!	acceptCookie() : boolean
        return nativeAcceptCookie();
!!!4834700.java!!!	setCookie(in url : String, in value : String) : void
        setCookie(url, value, false);
!!!4834828.java!!!	setCookie(in url : String, in value : String, inout privateBrowsing : boolean) : void
        WebAddress uri;
        try {
            uri = new WebAddress(url);
        } catch (ParseException ex) {
            Log.e(LOGTAG, "Bad address: " + url);
            return;
        }

        nativeSetCookie(uri.toString(), value, privateBrowsing);
!!!4834956.java!!!	getCookie(in url : String) : String
        return getCookie(url, false);
!!!4835084.java!!!	getCookie(in url : String, inout privateBrowsing : boolean) : String
        WebAddress uri;
        try {
            uri = new WebAddress(url);
        } catch (ParseException ex) {
            Log.e(LOGTAG, "Bad address: " + url);
            return null;
        }

        return nativeGetCookie(uri.toString(), privateBrowsing);
!!!4835212.java!!!	getCookie(inout uri : WebAddress) : String
        return nativeGetCookie(uri.toString(), false);
!!!4835340.java!!!	waitForCookieOperationsToComplete() : void
        // Note that this function is applicable for both the java
        // and native http stacks, and works correctly with either.
        synchronized (this) {
            while (mPendingCookieOperations > 0) {
                try {
                    wait();
                } catch (InterruptedException e) { }
            }
        }
!!!4835468.java!!!	signalCookieOperationsComplete() : void
        mPendingCookieOperations--;
        assert mPendingCookieOperations > -1;
        notify();
!!!4835596.java!!!	signalCookieOperationsStart() : void
        mPendingCookieOperations++;
!!!4835724.java!!!	removeSessionCookie() : void
        signalCookieOperationsStart();
        new AsyncTask<Void, Void, Void>() {
            @Override
            protected Void doInBackground(Void... none) {
                nativeRemoveSessionCookie();
                signalCookieOperationsComplete();
                return null;
            }
        }.execute();
!!!4835852.java!!!	removeAllCookie() : void
        nativeRemoveAllCookie();
!!!4835980.java!!!	hasCookies() : boolean
        return hasCookies(false);
!!!4836108.java!!!	hasCookies(inout privateBrowsing : boolean) : boolean
        return nativeHasCookies(privateBrowsing);
!!!4836236.java!!!	removeExpiredCookie() : void
        nativeRemoveExpiredCookie();
!!!4836364.java!!!	flushCookieStore() : void
        nativeFlushCookieStore();
!!!4836492.java!!!	allowFileSchemeCookiesImpl() : boolean
        return nativeAcceptFileSchemeCookies();
!!!4836620.java!!!	setAcceptFileSchemeCookiesImpl(inout accept : boolean) : void
        nativeSetAcceptFileSchemeCookies(accept);
