class CircleLayout
!!!12110732.java!!!	CircleLayout(inout context : Context)
        super(context);
        // TODO Auto-generated constructor stub
!!!12110860.java!!!	CircleLayout(inout context : Context, inout attrs : AttributeSet)
        super(context, attrs);
        // TODO Auto-generated constructor stub
!!!12110988.java!!!	CircleLayout(inout context : Context, inout attrs : AttributeSet, in defStyle : int)
        super(context, attrs, defStyle);
        // TODO Auto-generated constructor stub
!!!12111116.java!!!	onLayout(inout changed : boolean, in l : int, in t : int, in r : int, in b : int) : void
        // TODO Auto-generated method stub
        int w = r - l;
        int h = b - t;
        int padding_l = getPaddingLeft();
        int padding_t = getPaddingTop();
        int padding_r = getPaddingRight();
        int padding_b = getPaddingBottom();
        Log.d("CircleLayout", "padding_l:" + padding_l + " padding_t:" + padding_t + " padding_r:" +
            padding_r + " padding_b:" + padding_b);

        //double radius = Math.min(w / 2, h / 2);
        double radius = Math.min((w - padding_l - padding_r)/ 2, (h - padding_t - padding_b)/ 2);

        int count = getChildCount();
        for (int i = 0; i < count; i++) {
            View child = getChildAt(i);
            measureChild(child, w, h);
            double v = Math.toRadians(360 * i / count);
            int child_width = child.getMeasuredWidth();
            int child_height = child.getMeasuredHeight();
            int child_x = (r - padding_r + l + padding_l) / 2 + (int)(Math.cos(v) * radius);
            int child_y = (t + padding_t + b - padding_b) / 2 + (int)(Math.sin(v) * radius);

            child_x = Math.max(Math.min(r - child_width - padding_r, child_x), l + padding_l);
            child_y = Math.max(Math.min(b - child_height - padding_b, child_y), t + padding_t);
            int child_r = Math.min(r - padding_r, child_x + child_width);
            int child_b = Math.min(b - padding_b, child_y + child_height);

            child.layout(child_x, child_y, child_r, child_b);
        }
