class FtpManager
!!!14042380.java!!!	FtpManager(inout context : Context, inout checkbox : CheckBoxPreference)
        mContext = context;
        mFtpCheckBox = checkbox;

        HandlerThread thread = new HandlerThread("Thread for handling a FTP service");
        thread.start();
        mAsyncFtpHandler = new Handler(thread.getLooper());

        mFtpCheckBox.setOnPreferenceChangeListener(this);
        mFtpServiceProxy = new FtpServiceProxy(mContext, mFtpUiHandler);
!!!14042508.java!!!	start() : void
        mFtpServiceProxy.bind();
!!!14042636.java!!!	resume() : void
        // When resume runs, FtpService may not be ready.
        // If it is not ready, mFtpCheckBox will be disabled until it is ready.
        if (mFtpServiceProxy.isReady()) {
            updateFtpCheckBox();
        } else {
            switchFtpCheckBox(sShowFtpPreparing);
        }
!!!14042764.java!!!	stop() : void
        if (DEBUG) Log.d(TAG, "onStop");

        mFtpServiceProxy.unbind();
!!!14042892.java!!!	updateFtpCheckBox() : void
        // Discards intermediate states to implement simply.
        // ex) sShowFtpStarting, sShowFtpStoping, sShowFtpPreparing
        if (mFtpServiceProxy.isServerRunning()) {
            switchFtpCheckBox(sShowFtpStarted);
        } else {
            switchFtpCheckBox(sShowFtpStopped);
        }
!!!14043020.java!!!	switchFtpCheckBox(in type : int) : void
        mFtpUiHandler.post(new Runnable() {
            @Override
            public void run() {
                switchFtpCheckBoxAsync(type);
            }
        });
!!!14043148.java!!!	switchFtpCheckBoxAsync(in type : int) : void
        if (DEBUG) Log.d(TAG, "switchDisplay " + type);
        switch (type) {
            case sShowFtpStarted:
                mFtpCheckBox.setChecked(true);
                mFtpCheckBox.setEnabled(true);
                mFtpCheckBox.setSummary(
                        "ftp://" + mFtpServiceProxy.getId() +
                        ":" + mFtpServiceProxy.getPassword() +
                        "@" + mFtpServiceProxy.getLocalIpAddress() +
                        ":" + mFtpServiceProxy.getPort());
                break;
            case sShowFtpStarting:
                mFtpCheckBox.setChecked(false);
                mFtpCheckBox.setEnabled(false);
                mFtpCheckBox.setSummary(R.string.ftp_status_starting);
                break;
            case sShowFtpStopped:
                mFtpCheckBox.setChecked(false);
                mFtpCheckBox.setEnabled(true);
                mFtpCheckBox.setSummary(R.string.ftp_status_stopped);
                break;
            case sShowFtpStoping:
                mFtpCheckBox.setChecked(true);
                mFtpCheckBox.setEnabled(false);
                mFtpCheckBox.setSummary(R.string.ftp_status_stopping);
                break;
            case sShowFtpPreparing:
                mFtpCheckBox.setChecked(false);
                mFtpCheckBox.setEnabled(false);
                mFtpCheckBox.setSummary(R.string.ftp_status_preparing);
                break;
        }
!!!14043276.java!!!	switchFtpStatus(in on : boolean) : void
        // Things to do on the UI thread
        if (on) {
            switchFtpCheckBox(sShowFtpStarting);
        } else {
            switchFtpCheckBox(sShowFtpStoping);
        }

        // Things to do on the FTP thread
        mAsyncFtpHandler.post(new Runnable() {
            @Override
            public void run() {
                if (on) {
                    String ftpId = sFtpId;
                    String ftpPassword = Integer.toString(new Random().nextInt(900000) + 100000);
                    String ftpHomeDir = sFtpHomeDir;
                    int ftpPort = sFtpPort;
                    int ftpMaxLoginUser = sFtpMaxLoginUser;

                    if (DEBUG) ftpPassword = "1";
                    if (DEBUG) Log.d(TAG,"password " + ftpPassword + ".");

                    if (!mFtpServiceProxy.serverStart(ftpId, ftpPassword, ftpPort,
                            ftpHomeDir, ftpMaxLoginUser)) {
                        Toast.makeText(mContext,
                                mContext.getString(R.string.ftp_start_failure),
                                Toast.LENGTH_SHORT).show();
                    }
                } else {
                    mFtpServiceProxy.serverStop();
                }
                updateFtpCheckBox();
            }
        });
!!!14043404.java!!!	onPreferenceChange(inout preference : Preference, inout ftpEnable : Object) : boolean
        switchFtpStatus((Boolean) ftpEnable);
        return false;  // Don't update UI to opposite state until we're sure.
