class SsdpRequest
!!!13102988.java!!!	setSearchTarget(in st : String) : void

    setHeaderProperty(HEADER_PROPERTY_SEARCH_TARGET, st);
!!!13103116.java!!!	getSearchTarget() : String

    return getHeaderProperty(HEADER_PROPERTY_SEARCH_TARGET);
!!!13103244.java!!!	SsdpRequest()

    super();
!!!13103372.java!!!	initializeDefaults() : void

    setMethod(METHOD_NOTIFY);
    setUri(SSDP_URI);
    setHeaderProperty(HEADER_PROPERTY_HOST, MULTICAST_ADDRESS + ":" + MULTICAST_PORT);
    setNotificationSubType(NTS_SSDP_ALIVE);
    setCacheControlMaxAge(1800);
!!!13103500.java!!!	createHeaderNameHash(in name : String) : Object

    return name.toUpperCase();
!!!13103628.java!!!	getNotificationSubType() : String

    return getHeaderProperty(HEADER_PROPERTY_NOTIFICATION_SUB_TYPE);
!!!13103756.java!!!	setNotificationSubType(in nts : String) : void

    setHeaderProperty(HEADER_PROPERTY_NOTIFICATION_SUB_TYPE, nts);
!!!13103884.java!!!	getNotificationType() : String

    return getHeaderProperty(HEADER_PROPERTY_NOTIFICATION_TYPE);
!!!13104012.java!!!	setNotificationType(in notificationType : String) : void

    setHeaderProperty(HEADER_PROPERTY_NOTIFICATION_TYPE, notificationType);
!!!13104140.java!!!	getUniqueServiceName() : String

    return getHeaderProperty(HEADER_PROPERTY_UNIQUE_SERVICE_NAME);
!!!13104268.java!!!	setUniqueServiceName(in usn : String) : void

    setHeaderProperty(HEADER_PROPERTY_UNIQUE_SERVICE_NAME, usn);
!!!13104396.java!!!	setServerProduct(in productName : String, in productVersion : String) : void

    StringBuffer buffer = new StringBuffer();
    buffer.append(System.getProperty("os.name"));
    buffer.append('/');
    buffer.append(System.getProperty("os.version"));
    buffer.append(" UPnP/1.1 ");
    buffer.append(productName);
    buffer.append('/');
    buffer.append(productVersion);
    setHeaderProperty(HEADER_PROPERTY_SERVER, buffer.toString());
!!!13104524.java!!!	getServerProductName() : String

    // the SSDP specification is very un precise here:
    // we assume that names do NOT contain the character '/'
    // and versions do NOT contain the whitespace character ' '.
    String serverText = getHeaderProperty(HEADER_PROPERTY_SERVER);
    if (serverText != null) {
      CharSequenceScanner parser = new CharSequenceScanner(serverText);
      boolean okay = parser.skipOver(" UPnP/", true);
      if (okay) {
        okay = parser.skipUntil(' ');
        if (okay) {
          return parser.readUntil('/', false);
        }
      }
    }
    return null;
!!!13104652.java!!!	getServerProductVersion() : String

    // the SSDP specification is very un precise here:
    // we assume that names do NOT contain the character '/'
    // and versions do NOT contain the whitespace character ' '.
    String serverText = getHeaderProperty(HEADER_PROPERTY_SERVER);
    if (serverText != null) {
      CharSequenceScanner parser = new CharSequenceScanner(serverText);
      boolean okay = parser.skipOver(" UPnP/", true);
      if (okay) {
        okay = parser.skipUntil(' ');
        if (okay) {
          okay = parser.skipUntil('/');
          if (okay) {
            return parser.read(Integer.MAX_VALUE).trim();
          }
        }
      }
    }
    return null;
!!!13104780.java!!!	setSocketAddress(inout address : InetAddress, in port : int) : void
    sockAddress = new InetSocketAddress(address, port);
!!!13104908.java!!!	getSocketAddress() : InetSocketAddress
    return sockAddress;
