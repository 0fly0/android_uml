class SharedZip
!!!978572.cpp!!!	get(in path : String8) : sp<SharedZip>
    AutoMutex _l(gLock);
    time_t modWhen = getFileModDate(path);
    sp<SharedZip> zip = gOpen.valueFor(path).promote();
    if (zip != NULL && zip->mModWhen == modWhen) {
        return zip;
    }
    zip = new SharedZip(path, modWhen);
    gOpen.add(path, zip);
    return zip;

!!!978700.cpp!!!	getZip() : ZipFileRO
    return mZipFile;
!!!978828.cpp!!!	getResourceTableAsset() : Asset
    ALOGV("Getting from SharedZip %p resource asset %p\n", this, mResourceTableAsset);
    return mResourceTableAsset;
!!!978956.cpp!!!	setResourceTableAsset(inout asset : Asset) : Asset
    {
        AutoMutex _l(gLock);
        if (mResourceTableAsset == NULL) {
            mResourceTableAsset = asset;
            // This is not thread safe the first time it is called, so
            // do it here with the global lock held.
            asset->getBuffer(true);
            return asset;
        }
    }
    delete asset;
    return mResourceTableAsset;
!!!979084.cpp!!!	getResourceTable() : ResTable
    ALOGV("Getting from SharedZip %p resource table %p\n", this, mResourceTable);
    return mResourceTable;
!!!979212.cpp!!!	setResourceTable(inout res : ResTable) : ResTable
    {
        AutoMutex _l(gLock);
        if (mResourceTable == NULL) {
            mResourceTable = res;
            return res;
        }
    }
    delete res;
    return mResourceTable;
!!!979340.cpp!!!	isUpToDate() : bool
    time_t modWhen = getFileModDate(mPath.string());
    return mModWhen == modWhen;
!!!979468.cpp!!!	~SharedZip()
    //ALOGI("Destroying SharedZip %p %s\n", this, (const char*)mPath);
    if (mResourceTable != NULL) {
        delete mResourceTable;
    }
    if (mResourceTableAsset != NULL) {
        delete mResourceTableAsset;
    }
    if (mZipFile != NULL) {
        delete mZipFile;
        ALOGV("Closed '%s'\n", mPath.string());
    }
!!!979596.cpp!!!	SharedZip(in path : String8, in modWhen : time_t)
    //ALOGI("Creating SharedZip %p %s\n", this, (const char*)mPath);
    mZipFile = new ZipFileRO;
    ALOGV("+++ opening zip '%s'\n", mPath.string());
    if (mZipFile->open(mPath.string()) != NO_ERROR) {
        ALOGD("failed to open Zip archive '%s'\n", mPath.string());
        delete mZipFile;
        mZipFile = NULL;
    }
