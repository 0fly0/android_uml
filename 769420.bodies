class Builder
!!!2884364.java!!!	Builder(inout context : Context)
            mContext = context;

            // Set defaults to match the defaults of a Notification
            mWhen = System.currentTimeMillis();
            mAudioStreamType = STREAM_DEFAULT;
            mPriority = PRIORITY_DEFAULT;
!!!2884492.java!!!	setWhen(in when : long) : Builder
            mWhen = when;
            return this;
!!!2884620.java!!!	setShowWhen(inout show : boolean) : Builder
            mShowWhen = show;
            return this;
!!!2884748.java!!!	setUsesChronometer(inout b : boolean) : Builder
            mUseChronometer = b;
            return this;
!!!2884876.java!!!	setSmallIcon(in icon : int) : Builder
            mSmallIcon = icon;
            return this;
!!!2885004.java!!!	setSmallIcon(in icon : int, in level : int) : Builder
            mSmallIcon = icon;
            mSmallIconLevel = level;
            return this;
!!!2885132.java!!!	setContentTitle(inout title : CharSequence) : Builder
            mContentTitle = title;
            return this;
!!!2885260.java!!!	setContentText(inout text : CharSequence) : Builder
            mContentText = text;
            return this;
!!!2885388.java!!!	setSubText(inout text : CharSequence) : Builder
            mSubText = text;
            return this;
!!!2885516.java!!!	setNumber(in number : int) : Builder
            mNumber = number;
            return this;
!!!2885644.java!!!	setContentInfo(inout info : CharSequence) : Builder
            mContentInfo = info;
            return this;
!!!2885772.java!!!	setProgress(in max : int, in progress : int, inout indeterminate : boolean) : Builder
            mProgressMax = max;
            mProgress = progress;
            mProgressIndeterminate = indeterminate;
            return this;
!!!2885900.java!!!	setContent(inout views : RemoteViews) : Builder
            mContentView = views;
            return this;
!!!2886028.java!!!	setContentIntent(inout intent : PendingIntent) : Builder
            mContentIntent = intent;
            return this;
!!!2886156.java!!!	setDeleteIntent(inout intent : PendingIntent) : Builder
            mDeleteIntent = intent;
            return this;
!!!2886284.java!!!	setFullScreenIntent(inout intent : PendingIntent, inout highPriority : boolean) : Builder
            mFullScreenIntent = intent;
            setFlag(FLAG_HIGH_PRIORITY, highPriority);
            return this;
!!!2886412.java!!!	setTicker(inout tickerText : CharSequence) : Builder
            mTickerText = tickerText;
            return this;
!!!2886540.java!!!	setTicker(inout tickerText : CharSequence, inout views : RemoteViews) : Builder
            mTickerText = tickerText;
            mTickerView = views;
            return this;
!!!2886668.java!!!	setLargeIcon(inout icon : Bitmap) : Builder
            mLargeIcon = icon;
            return this;
!!!2886796.java!!!	setSound(inout sound : Uri) : Builder
            mSound = sound;
            mAudioStreamType = STREAM_DEFAULT;
            return this;
!!!2886924.java!!!	setSound(inout sound : Uri, in streamType : int) : Builder
            mSound = sound;
            mAudioStreamType = streamType;
            return this;
!!!2887052.java!!!	setVibrate(inout pattern : long) : Builder
            mVibrate = pattern;
            return this;
!!!2887180.java!!!	setLights(in argb : int, in onMs : int, in offMs : int) : Builder
            mLedArgb = argb;
            mLedOnMs = onMs;
            mLedOffMs = offMs;
            return this;
!!!2887308.java!!!	setOngoing(inout ongoing : boolean) : Builder
            setFlag(FLAG_ONGOING_EVENT, ongoing);
            return this;
!!!2887436.java!!!	setOnlyAlertOnce(inout onlyAlertOnce : boolean) : Builder
            setFlag(FLAG_ONLY_ALERT_ONCE, onlyAlertOnce);
            return this;
!!!2887564.java!!!	setAutoCancel(inout autoCancel : boolean) : Builder
            setFlag(FLAG_AUTO_CANCEL, autoCancel);
            return this;
!!!2887692.java!!!	setDefaults(in defaults : int) : Builder
            mDefaults = defaults;
            return this;
!!!2887820.java!!!	setPriority(in pri : int) : Builder
            mPriority = pri;
            return this;
!!!2887948.java!!!	addKind(in k : String) : Builder
            mKindList.add(k);
            return this;
!!!2888076.java!!!	setExtras(inout bag : Bundle) : Builder
            mExtras = bag;
            return this;
!!!2888204.java!!!	addAction(in icon : int, inout title : CharSequence, inout intent : PendingIntent) : Builder
            mActions.add(new Action(icon, title, intent));
            return this;
!!!2888332.java!!!	setStyle(inout style : Style) : Builder
            if (mStyle != style) {
                mStyle = style;
                if (mStyle != null) {
                    mStyle.setBuilder(this);
                }
            }
            return this;
!!!2888460.java!!!	setFlag(in mask : int, inout value : boolean) : void
            if (value) {
                mFlags |= mask;
            } else {
                mFlags &= ~mask;
            }
!!!2888588.java!!!	applyStandardTemplate(in resId : int, inout fitIn1U : boolean) : RemoteViews
            RemoteViews contentView = new RemoteViews(mContext.getPackageName(), resId);
            boolean showLine3 = false;
            boolean showLine2 = false;
            int smallIconImageViewId = R.id.icon;
            if (mLargeIcon != null) {
                contentView.setImageViewBitmap(R.id.icon, mLargeIcon);
                smallIconImageViewId = R.id.right_icon;
            }
            if (mPriority < PRIORITY_LOW) {
                contentView.setInt(R.id.icon,
                        "setBackgroundResource", R.drawable.notification_template_icon_low_bg);
                contentView.setInt(R.id.status_bar_latest_event_content,
                        "setBackgroundResource", R.drawable.notification_bg_low);
            }
            if (mSmallIcon != 0) {
                contentView.setImageViewResource(smallIconImageViewId, mSmallIcon);
                contentView.setViewVisibility(smallIconImageViewId, View.VISIBLE);
            } else {
                contentView.setViewVisibility(smallIconImageViewId, View.GONE);
            }
            if (mContentTitle != null) {
                contentView.setTextViewText(R.id.title, mContentTitle);
            }
            if (mContentText != null) {
                contentView.setTextViewText(R.id.text, mContentText);
                showLine3 = true;
            }
            if (mContentInfo != null) {
                contentView.setTextViewText(R.id.info, mContentInfo);
                contentView.setViewVisibility(R.id.info, View.VISIBLE);
                showLine3 = true;
            } else if (mNumber > 0) {
                final int tooBig = mContext.getResources().getInteger(
                        R.integer.status_bar_notification_info_maxnum);
                if (mNumber > tooBig) {
                    contentView.setTextViewText(R.id.info, mContext.getResources().getString(
                                R.string.status_bar_notification_info_overflow));
                } else {
                    NumberFormat f = NumberFormat.getIntegerInstance();
                    contentView.setTextViewText(R.id.info, f.format(mNumber));
                }
                contentView.setViewVisibility(R.id.info, View.VISIBLE);
                showLine3 = true;
            } else {
                contentView.setViewVisibility(R.id.info, View.GONE);
            }

            // Need to show three lines?
            if (mSubText != null) {
                contentView.setTextViewText(R.id.text, mSubText);
                if (mContentText != null) {
                    contentView.setTextViewText(R.id.text2, mContentText);
                    contentView.setViewVisibility(R.id.text2, View.VISIBLE);
                    showLine2 = true;
                } else {
                    contentView.setViewVisibility(R.id.text2, View.GONE);
                }
            } else {
                contentView.setViewVisibility(R.id.text2, View.GONE);
                if (mProgressMax != 0 || mProgressIndeterminate) {
                    contentView.setProgressBar(
                            R.id.progress, mProgressMax, mProgress, mProgressIndeterminate);
                    contentView.setViewVisibility(R.id.progress, View.VISIBLE);
                    showLine2 = true;
                } else {
                    contentView.setViewVisibility(R.id.progress, View.GONE);
                }
            }
            if (showLine2) {
                if (fitIn1U) {
                    // need to shrink all the type to make sure everything fits
                    final Resources res = mContext.getResources();
                    final float subTextSize = res.getDimensionPixelSize(
                            R.dimen.notification_subtext_size);
                    contentView.setTextViewTextSize(R.id.text, TypedValue.COMPLEX_UNIT_PX, subTextSize);
                }
                // vertical centering
                contentView.setViewPadding(R.id.line1, 0, 0, 0, 0);
            }

            if (mWhen != 0 && mShowWhen) {
                if (mUseChronometer) {
                    contentView.setViewVisibility(R.id.chronometer, View.VISIBLE);
                    contentView.setLong(R.id.chronometer, "setBase",
                            mWhen + (SystemClock.elapsedRealtime() - System.currentTimeMillis()));
                    contentView.setBoolean(R.id.chronometer, "setStarted", true);
                } else {
                    contentView.setViewVisibility(R.id.time, View.VISIBLE);
                    contentView.setLong(R.id.time, "setTime", mWhen);
                }
            } else {
                contentView.setViewVisibility(R.id.time, View.GONE);
            }

            contentView.setViewVisibility(R.id.line3, showLine3 ? View.VISIBLE : View.GONE);
            contentView.setViewVisibility(R.id.overflow_divider, showLine3 ? View.VISIBLE : View.GONE);
            return contentView;
!!!2888716.java!!!	applyStandardTemplateWithActions(in layoutId : int) : RemoteViews
            RemoteViews big = applyStandardTemplate(layoutId, false);

            int N = mActions.size();
            if (N > 0) {
                // Log.d("Notification", "has actions: " + mContentText);
                big.setViewVisibility(R.id.actions, View.VISIBLE);
                big.setViewVisibility(R.id.action_divider, View.VISIBLE);
                if (N>MAX_ACTION_BUTTONS) N=MAX_ACTION_BUTTONS;
                big.removeAllViews(R.id.actions);
                for (int i=0; i<N; i++) {
                    final RemoteViews button = generateActionButton(mActions.get(i));
                    //Log.d("Notification", "adding action " + i + ": " + mActions.get(i).title);
                    big.addView(R.id.actions, button);
                }
            }
            return big;
!!!2888844.java!!!	makeContentView() : RemoteViews
            if (mContentView != null) {
                return mContentView;
            } else {
                return applyStandardTemplate(R.layout.notification_template_base, true); // no more special large_icon flavor
            }
!!!2888972.java!!!	makeTickerView() : RemoteViews
            if (mTickerView != null) {
                return mTickerView;
            } else {
                if (mContentView == null) {
                    return applyStandardTemplate(mLargeIcon == null
                            ? R.layout.status_bar_latest_event_ticker
                            : R.layout.status_bar_latest_event_ticker_large_icon, true);
                } else {
                    return null;
                }
            }
!!!2889100.java!!!	makeBigContentView() : RemoteViews
            if (mActions.size() == 0) return null;

            return applyStandardTemplateWithActions(R.layout.notification_template_big_base);
!!!2889228.java!!!	generateActionButton(inout action : Action) : RemoteViews
            final boolean tombstone = (action.actionIntent == null);
            RemoteViews button = new RemoteViews(mContext.getPackageName(),
                    tombstone ? R.layout.notification_action_tombstone
                              : R.layout.notification_action);
            button.setTextViewCompoundDrawables(R.id.action0, action.icon, 0, 0, 0);
            button.setTextViewText(R.id.action0, action.title);
            if (!tombstone) {
                button.setOnClickPendingIntent(R.id.action0, action.actionIntent);
            }
            button.setContentDescription(R.id.action0, action.title);
            return button;
!!!2889356.java!!!	buildUnstyled() : Notification
            Notification n = new Notification();
            n.when = mWhen;
            n.icon = mSmallIcon;
            n.iconLevel = mSmallIconLevel;
            n.number = mNumber;
            n.contentView = makeContentView();
            n.contentIntent = mContentIntent;
            n.deleteIntent = mDeleteIntent;
            n.fullScreenIntent = mFullScreenIntent;
            n.tickerText = mTickerText;
            n.tickerView = makeTickerView();
            n.largeIcon = mLargeIcon;
            n.sound = mSound;
            n.audioStreamType = mAudioStreamType;
            n.vibrate = mVibrate;
            n.ledARGB = mLedArgb;
            n.ledOnMS = mLedOnMs;
            n.ledOffMS = mLedOffMs;
            n.defaults = mDefaults;
            n.flags = mFlags;
            n.bigContentView = makeBigContentView();
            if (mLedOnMs != 0 && mLedOffMs != 0) {
                n.flags |= FLAG_SHOW_LIGHTS;
            }
            if ((mDefaults & DEFAULT_LIGHTS) != 0) {
                n.flags |= FLAG_SHOW_LIGHTS;
            }
            if (mKindList.size() > 0) {
                n.kind = new String[mKindList.size()];
                mKindList.toArray(n.kind);
            } else {
                n.kind = null;
            }
            n.priority = mPriority;
            n.extras = mExtras != null ? new Bundle(mExtras) : null;
            if (mActions.size() > 0) {
                n.actions = new Action[mActions.size()];
                mActions.toArray(n.actions);
            }
            return n;
!!!2889484.java!!!	getNotification() : Notification
            return build();
!!!2889612.java!!!	build() : Notification
            if (mStyle != null) {
                return mStyle.build();
            } else {
                return buildUnstyled();
            }
