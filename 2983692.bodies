class WFDSinkListFragment
!!!12140172.java!!!	onActivityCreated(inout savedInstanceState : Bundle) : void
		super.onActivityCreated(savedInstanceState);
		this.setListAdapter(new WiFiPeerListAdapter(getActivity(), R.layout.sink_row_devices, peers));
!!!12140300.java!!!	onCreateView(inout inflater : LayoutInflater, inout container : ViewGroup, inout savedInstanceState : Bundle) : View
		mContentView = inflater.inflate(R.layout.sink_device_list, null);
		return mContentView;
!!!12140428.java!!!	getDevice() : WifiP2pDevice
		return device;
!!!12140556.java!!!	getDeviceStatus(in deviceStatus : int) : String
		switch (deviceStatus) {
		case WifiP2pDevice.AVAILABLE:
			return "Available";
		case WifiP2pDevice.INVITED:
			return "Invited";
		case WifiP2pDevice.CONNECTED:
			return "Connected";
		case WifiP2pDevice.FAILED:
			return "Failed";
		case WifiP2pDevice.UNAVAILABLE:
			return "Unavailable";
		case WFD_SESSION_CREATED:
			return "Waiting";
		case WFD_SESSION_STARTED:
			return "Displaying";
		case WFD_SESSION_DESTROYED:
			return "Available";
		default:
			return "Unknown";

		}
!!!12140684.java!!!	onListItemClick(inout l : ListView, inout v : View, in position : int, in id : long) : void
		WifiP2pDevice device = (WifiP2pDevice) getListAdapter().getItem(position);
		((WFDSinkActivity) getActivity()).onSourceListItemClick(device);
!!!12141068.java!!!	onPeersAvailable(inout peerList : WifiP2pDeviceList) : void
		short localDeviceType = WFDDeviceCapability.wfd_device_pri_snk;
		peers.clear();
		for (WifiP2pDevice peerDevice : peerList.getDeviceList()) {
			Log.d(TAG, "Devices received from framework: " + peerDevice.toString());
			addDeviceToPeers(peerDevice, localDeviceType);
		}
		((WiFiPeerListAdapter) getListAdapter()).notifyDataSetChanged();
		if (peers.size() == 0) {
			Log.d(TAG, "No devices found");
			return;
		}
!!!12141196.java!!!	addDeviceToPeers(inout peerDevice : WifiP2pDevice, in localDeviceType : short) : void
		if (peerDevice.wfdInfo == null) {
			// Not a WFD device.
			return;
		}
		if (localDeviceType == WFDDeviceCapability.wfd_device_pri_snk) {
			// Only add WFD source device to peers.
			if (peerDevice.wfdInfo.getDeviceType() == WFDDeviceCapability.wfd_device_src) {
				peers.add(peerDevice);
			} else if (peerDevice.wfdInfo.getDeviceType() == WFDDeviceCapability.wfd_device_src_or_pri_sink) {
				peers.add(peerDevice);
			}
		} else if (localDeviceType == WFDDeviceCapability.wfd_device_src) {
			// Only add WFD sink device to peers.
			if (peerDevice.wfdInfo.getDeviceType() != WFDDeviceCapability.wfd_device_src) {
				peers.add(peerDevice);
			}
		}
!!!12141324.java!!!	clearPeers() : void
		TextView view = (TextView) mContentView.findViewById(R.id.my_status);
		view.setText(getDeviceStatus(WifiP2pDevice.AVAILABLE));
		peers.clear();
		((WiFiPeerListAdapter) getListAdapter()).notifyDataSetChanged();
!!!12141452.java!!!	updateThisDevice(inout device : WifiP2pDevice) : void
		this.device = device;
		TextView view = (TextView) mContentView.findViewById(R.id.my_name);
		view.setText(device.deviceName);
		view = (TextView) mContentView.findViewById(R.id.my_status);
		view.setText(getDeviceStatus(device.status));
!!!12141580.java!!!	updateSessionInfo(in sessionInfo : int) : void
		if (device == null) {
			return;
		}
		device.status = sessionInfo;
		TextView view = (TextView) mContentView.findViewById(R.id.my_name);
		view.setText(device.deviceName);
		view = (TextView) mContentView.findViewById(R.id.my_status);
		view.setText(getDeviceStatus(device.status));
