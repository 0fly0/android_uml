class Package
!!!368155.java!!!	Package(inout name : String, inout specTitle : String, inout specVersion : String, inout specVendor : String, inout implTitle : String, inout implVersion : String, inout implVendor : String, inout sealBase : URL)
        this.name = name;
        this.specTitle = specTitle;
        this.specVersion = specVersion;
        this.specVendor = specVendor;
        this.implTitle = implTitle;
        this.implVersion = implVersion;
        this.implVendor = implVendor;
        this.sealBase = sealBase;
!!!368283.java!!!	getAnnotation(inout annotationType : Class) : A
        for (Annotation annotation : getAnnotations()) {
            if (annotationType.isInstance(annotation)) {
                return (A) annotation;
            }
        }
        return null;
!!!368411.java!!!	getAnnotations() : Annotation
        try {
            Class<?> c = Class.forName(getName() + ".package-info");
            return c.getAnnotations();
        } catch (Exception ex) {
            return NO_ANNOTATIONS;
        }
!!!368539.java!!!	getDeclaredAnnotations() : Annotation
        return getAnnotations();
!!!368667.java!!!	isAnnotationPresent(inout annotationType : Class) : boolean
        return getAnnotation(annotationType) != null;
!!!368795.java!!!	getImplementationTitle() : String
        return implTitle;
!!!368923.java!!!	getImplementationVendor() : String
        return implVendor;
!!!369051.java!!!	getImplementationVersion() : String
        return implVersion;
!!!369179.java!!!	getName() : String
        return name;
!!!369307.java!!!	getPackage(inout packageName : String) : Package
        ClassLoader classloader = VMStack.getCallingClassLoader();
        if (classloader == null) {
            classloader = ClassLoader.getSystemClassLoader();
        }
        return classloader.getPackage(packageName);
!!!369435.java!!!	getPackages() : Package
        ClassLoader classloader = VMStack.getCallingClassLoader();
        if (classloader == null) {
            classloader = ClassLoader.getSystemClassLoader();
        }
        return classloader.getPackages();
!!!369563.java!!!	getSpecificationTitle() : String
        return specTitle;
!!!369691.java!!!	getSpecificationVendor() : String
        return specVendor;
!!!369819.java!!!	getSpecificationVersion() : String
        return specVersion;
!!!369947.java!!!	hashCode() : int
        return name.hashCode();
!!!370075.java!!!	isCompatibleWith(inout version : String) : boolean
        String[] requested = version.split("\\.");
        String[] provided = specVersion.split("\\.");

        for (int i = 0; i < Math.min(requested.length, provided.length); i++) {
            int reqNum = Integer.parseInt(requested[i]);
            int provNum = Integer.parseInt(provided[i]);

            if (reqNum > provNum) {
                return false;
            } else if (reqNum < provNum) {
                return true;
            }
        }

        if (requested.length > provided.length) {
            return false;
        }

        return true;
!!!370203.java!!!	isSealed() : boolean
        return sealBase != null;
!!!370331.java!!!	isSealed(inout url : URL) : boolean
        return sealBase != null && sealBase.sameFile(url);
!!!370459.java!!!	toString() : String
        return "package " + name;
