class Dops
!!!14917900.java!!!	Dops()
        // This space intentionally left blank.
!!!14918028.java!!!	get(in opcode : int) : Dop
        int idx = opcode - Opcodes.MIN_VALUE;

        try {
            Dop result = DOPS[idx];
            if (result != null) {
                return result;
            }
        } catch (ArrayIndexOutOfBoundsException ex) {
            // Fall through.
        }

        throw new IllegalArgumentException("bogus opcode");
!!!14918156.java!!!	getNextOrNull(inout opcode : Dop, inout options : DexOptions) : Dop
        boolean suppressExtendedOpcodes = !options.canUseExtendedOpcodes();

        for (;;) {
            int nextOpcode = opcode.getNextOpcode();

            if (nextOpcode == Opcodes.NO_NEXT) {
                return null;
            }

            opcode = get(nextOpcode);

            if (suppressExtendedOpcodes && Opcodes.isExtended(nextOpcode)) {
                /*
                 * Continuing rather than just returning null here
                 * protects against the possibility that an
                 * instruction fitting chain might list non-extended
                 * opcodes after extended ones.
                 */
                continue;
            }

            return opcode;
        }
!!!14918284.java!!!	set(inout opcode : Dop) : void
        int idx = opcode.getOpcode() - Opcodes.MIN_VALUE;
        DOPS[idx] = opcode;
