class InterruptibleInOutAnimator
!!!13661068.java!!!	InterruptibleInOutAnimator(in duration : long, in fromValue : float, in toValue : float)
        mAnimator = LauncherAnimUtils.ofFloat(fromValue, toValue).setDuration(duration);
        mOriginalDuration = duration;
        mOriginalFromValue = fromValue;
        mOriginalToValue = toValue;

        mAnimator.addListener(new AnimatorListenerAdapter() {
            @Override
            public void onAnimationEnd(Animator animation) {
                mDirection = STOPPED;
            }
        });
!!!13661196.java!!!	animate(in direction : int) : void
        final long currentPlayTime = mAnimator.getCurrentPlayTime();
        final float toValue = (direction == IN) ? mOriginalToValue : mOriginalFromValue;
        final float startValue = mFirstRun ? mOriginalFromValue :
                ((Float) mAnimator.getAnimatedValue()).floatValue();

        // Make sure it's stopped before we modify any values
        cancel();

        // TODO: We don't really need to do the animation if startValue == toValue, but
        // somehow that doesn't seem to work, possibly a quirk of the animation framework
        mDirection = direction;

        // Ensure we don't calculate a non-sensical duration
        long duration = mOriginalDuration - currentPlayTime;
        mAnimator.setDuration(Math.max(0, Math.min(duration, mOriginalDuration)));

        mAnimator.setFloatValues(startValue, toValue);
        mAnimator.start();
        mFirstRun = false;
!!!13661324.java!!!	cancel() : void
        mAnimator.cancel();
        mDirection = STOPPED;
!!!13661452.java!!!	end() : void
        mAnimator.end();
        mDirection = STOPPED;
!!!13661580.java!!!	isStopped() : boolean
        return mDirection == STOPPED;
!!!13661708.java!!!	animateIn() : void
        animate(IN);
!!!13661836.java!!!	animateOut() : void
        animate(OUT);
!!!13661964.java!!!	setTag(inout tag : Object) : void
        mTag = tag;
!!!13662092.java!!!	getTag() : Object
        return mTag;
!!!13662220.java!!!	getAnimator() : ValueAnimator
        return mAnimator;
