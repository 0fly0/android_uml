class SequenceInputStream
!!!264347.java!!!	SequenceInputStream(inout s1 : InputStream, inout s2 : InputStream)
        if (s1 == null) {
            throw new NullPointerException("s1 == null");
        }
        Vector<InputStream> inVector = new Vector<InputStream>(1);
        inVector.addElement(s2);
        e = inVector.elements();
        in = s1;
!!!264475.java!!!	SequenceInputStream(inout e : Enumeration)
        this.e = e;
        if (e.hasMoreElements()) {
            in = e.nextElement();
            if (in == null) {
                throw new NullPointerException("element is null");
            }
        }
!!!264603.java!!!	available() : int
        if (e != null && in != null) {
            return in.available();
        }
        return 0;
!!!264731.java!!!	close() : void
        while (in != null) {
            nextStream();
        }
        e = null;
!!!264859.java!!!	nextStream() : void
        if (in != null) {
            in.close();
        }
        if (e.hasMoreElements()) {
            in = e.nextElement();
            if (in == null) {
                throw new NullPointerException("element is null");
            }
        } else {
            in = null;
        }
!!!264987.java!!!	read() : int
        while (in != null) {
            int result = in.read();
            if (result >= 0) {
                return result;
            }
            nextStream();
        }
        return -1;
!!!265115.java!!!	read(inout buffer : byte, in offset : int, in count : int) : int
        if (in == null) {
            return -1;
        }
        Arrays.checkOffsetAndCount(buffer.length, offset, count);
        while (in != null) {
            int result = in.read(buffer, offset, count);
            if (result >= 0) {
                return result;
            }
            nextStream();
        }
        return -1;
