class AbstractSelectableChannel
!!!706459.java!!!	AbstractSelectableChannel(inout selectorProvider : SelectorProvider)
        provider = selectorProvider;
!!!706587.java!!!	provider() : SelectorProvider
        return provider;
!!!706715.java!!!	isRegistered() : boolean
        return !keyList.isEmpty();
!!!706843.java!!!	keyFor(inout selector : Selector) : SelectionKey
        for (SelectionKey key : keyList) {
            if (key != null && key.selector() == selector) {
                return key;
            }
        }
        return null;
!!!706971.java!!!	register(inout selector : Selector, in interestSet : int, inout attachment : Object) : SelectionKey
        if (!isOpen()) {
            throw new ClosedChannelException();
        }
        if (!((interestSet & ~validOps()) == 0)) {
            throw new IllegalArgumentException("no valid ops in interest set: " + interestSet);
        }

        synchronized (blockingLock) {
            if (isBlocking) {
                throw new IllegalBlockingModeException();
            }
            if (!selector.isOpen()) {
                if (interestSet == 0) {
                    // throw ISE exactly to keep consistency
                    throw new IllegalSelectorException();
                }
                // throw NPE exactly to keep consistency
                throw new NullPointerException("selector not open");
            }
            SelectionKey key = keyFor(selector);
            if (key == null) {
                key = ((AbstractSelector) selector).register(this, interestSet, attachment);
                keyList.add(key);
            } else {
                if (!key.isValid()) {
                    throw new CancelledKeyException();
                }
                key.interestOps(interestSet);
                key.attach(attachment);
            }
            return key;
        }
!!!707099.java!!!	implCloseChannel() : void
        implCloseSelectableChannel();
        for (SelectionKey key : keyList) {
            if (key != null) {
                key.cancel();
            }
        }
!!!707355.java!!!	isBlocking() : boolean
        synchronized (blockingLock) {
            return isBlocking;
        }
!!!707483.java!!!	blockingLock() : Object
        return blockingLock;
!!!707611.java!!!	configureBlocking(inout blockingMode : boolean) : SelectableChannel
        if (!isOpen()) {
            throw new ClosedChannelException();
        }
        synchronized (blockingLock) {
            if (isBlocking == blockingMode) {
                return this;
            }
            if (blockingMode && containsValidKeys()) {
                throw new IllegalBlockingModeException();
            }
            implConfigureBlocking(blockingMode);
            isBlocking = blockingMode;
        }
        return this;
!!!707867.java!!!	deregister(inout k : SelectionKey) : void
        if (keyList != null) {
            keyList.remove(k);
        }
!!!707995.java!!!	containsValidKeys() : boolean
        for (SelectionKey key : keyList) {
            if (key != null && key.isValid()) {
                return true;
            }
        }
        return false;
