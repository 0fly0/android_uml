class SettingsDatabase
!!!13382156.java!!!	SettingsDatabase(inout context : Context)
        mDatabaseHelper = new DatabaseHelper(context, DATABASE_NAME,
                DATABASE_VERSION);
!!!13382284.java!!!	addDevice(inout device : DeviceRecord) : void
        SQLiteDatabase db = mDatabaseHelper.getWritableDatabase();
        ContentValues values = getValues(device);
        db.insert(TABLE_DEVICES, null, values);
!!!13382412.java!!!	getAllDevices() : DeviceRecord
        return getDevices(null, null);
!!!13382540.java!!!	getPairedDevices() : DeviceRecord
        return getDevices(DevicesColumns.PAIRED + " = ?", new String[] {"1"});
!!!13382668.java!!!	getDevices(in selection : String, inout selArgs : String) : DeviceRecord
        ArrayList<DeviceRecord> devices = new ArrayList<DeviceRecord>();
        Cursor c = null;
        SQLiteDatabase db = mDatabaseHelper.getReadableDatabase();
        try {
            c = db.query(TABLE_DEVICES,
                    DEVICE_PROJECTION,
                    selection,
                    selArgs,
                    null,
                    null,
                    null);
            while (c.moveToNext()) {
                devices.add(getDeviceRecord(c));
            }
        } finally {
            if (c != null) {
                c.close();
            }
        }
        return devices;
!!!13382796.java!!!	getDevice(in deviceId : String) : DeviceRecord
        Cursor c = null;
        SQLiteDatabase db = mDatabaseHelper.getReadableDatabase();
        try {
            c = db.query(TABLE_DEVICES,
                    DEVICE_PROJECTION,
                    DevicesColumns.DEVICE_ID + " = ?",
                    new String[] { deviceId },
                    null,
                    null,
                    null);
            if (c.moveToNext()) {
                return getDeviceRecord(c);
            } else {
                return null;
            }
        } finally {
            if (c != null) {
                c.close();
            }
        }
!!!13382924.java!!!	removeDevice(inout device : DeviceRecord) : void
        SQLiteDatabase db = mDatabaseHelper.getWritableDatabase();
        db.delete(TABLE_DEVICES, DevicesColumns.DEVICE_ID + " = ?",
                new String[] { device.getId() });
!!!13383052.java!!!	setPaired(in deviceId : String, inout paired : boolean) : void
        ContentValues values = new ContentValues();
        values.put(DevicesColumns.PAIRED, paired ? 1 : 0);
        updateValuesForDevice(deviceId, values);
!!!13383180.java!!!	isPaired(in deviceId : String) : boolean
        SQLiteDatabase db = mDatabaseHelper.getReadableDatabase();
        Cursor c = null;
        try {
            c = db.query(TABLE_DEVICES,
                    new String[] { DevicesColumns.PAIRED },
                    DevicesColumns.DEVICE_ID + " = ?",
                    new String[] { deviceId },
                    null,
                    null,
                    null);
            if (c.moveToNext() && c.getInt(0) == 1) {
                return true;
            }
        } finally {
            if (c != null) {
                c.close();
            }
        }
        return false;
!!!13383308.java!!!	setLastChannelUpdateTime(in deviceId : String, in timestamp : long) : void
        ContentValues values = new ContentValues();
        values.put(DevicesColumns.LAST_CHANNEL_UPDATE_TIME, timestamp);
        updateValuesForDevice(deviceId, values);
!!!13383436.java!!!	getLastChannelUpdateTime(in deviceId : String) : long
        SQLiteDatabase db = mDatabaseHelper.getReadableDatabase();
        Cursor c = null;
        try {
            c = db.query(TABLE_DEVICES,
                    new String[] { DevicesColumns.LAST_CHANNEL_UPDATE_TIME },
                    DevicesColumns.DEVICE_ID + " = ?",
                    new String[] { deviceId },
                    null,
                    null,
                    null);
            if (c.moveToNext()) {
                if (c.isNull(0)) {
                    return ISettings.TIME_NOT_SET;
                } else {
                    return c.getLong(0);
                }
            }
        } finally {
            if (c != null) {
                c.close();
            }
        }
        return ISettings.TIME_NOT_SET;
!!!13383564.java!!!	updateDevice(inout device : DeviceRecord) : void
        ContentValues values = getValues(device);
        updateValuesForDevice(device.getId(), values);
!!!13383692.java!!!	updateValuesForDevice(in deviceId : String, inout values : ContentValues) : void
        SQLiteDatabase db = mDatabaseHelper.getWritableDatabase();
        db.update(TABLE_DEVICES, values, DevicesColumns.DEVICE_ID + " = ?",
                new String[] { deviceId });
!!!13383820.java!!!	getValues(inout device : DeviceRecord) : ContentValues
        ContentValues values = new ContentValues();
        values.put(DevicesColumns.DEVICE_ID, device.getId());
        values.put(DevicesColumns.LABEL, device.getLabel());
        values.put(DevicesColumns.IP_ADDRESS, device.getAddress()
                .getHostAddress());
        values.put(DevicesColumns.PORT, device.getPort());
        return values;
!!!13383948.java!!!	getDeviceRecord(inout cursor : Cursor) : DeviceRecord
        String deviceId = cursor.getString(DEVICE_PROJECTION_DEVICE_ID_INDEX);
        String label = cursor.getString(DEVICE_PROJECTION_LABEL_INDEX);
        String ipAddressText = cursor
                .getString(DEVICE_PROJECTION_IP_ADDRESS_INDEX);
        int port = cursor.getInt(DEVICE_PROJECTION_PORT_INDEX);
        try {
            return new DeviceRecord(deviceId, label,
                    InetAddress.getByName(ipAddressText), port);
        } catch (UnknownHostException e) {
            return null;
        }
