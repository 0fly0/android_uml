class MediaDrm
!!!15857676.java!!!	isCryptoSchemeSupported(inout uuid : UUID) : boolean
        return isCryptoSchemeSupportedNative(getByteArrayFromUUID(uuid));
!!!15857804.java!!!	getByteArrayFromUUID(inout uuid : UUID) : byte
        long msb = uuid.getMostSignificantBits();
        long lsb = uuid.getLeastSignificantBits();

        byte[] uuidBytes = new byte[16];
        for (int i = 0; i < 8; ++i) {
            uuidBytes[i] = (byte)(msb >>> (8 * (7 - i)));
            uuidBytes[8 + i] = (byte)(lsb >>> (8 * (7 - i)));
        }

        return uuidBytes;
!!!15858060.java!!!	MediaDrm(inout uuid : UUID)
        Looper looper;
        if ((looper = Looper.myLooper()) != null) {
            mEventHandler = new EventHandler(this, looper);
        } else if ((looper = Looper.getMainLooper()) != null) {
            mEventHandler = new EventHandler(this, looper);
        } else {
            mEventHandler = null;
        }

        /* Native setup requires a weak reference to our object.
         * It's easier to create it here than in C++.
         */
        native_setup(new WeakReference<MediaDrm>(this),
                     getByteArrayFromUUID(uuid));
!!!15858188.java!!!	setOnEventListener(inout listener : OnEventListener) : void
        mOnEventListener = listener;
!!!15858700.java!!!	postEventFromNative(inout mediadrm_ref : Object, in eventType : int, in extra : int, inout obj : Object) : void
        MediaDrm md = (MediaDrm)((WeakReference)mediadrm_ref).get();
        if (md == null) {
            return;
        }
        if (md.mEventHandler != null) {
            Message m = md.mEventHandler.obtainMessage(DRM_EVENT, eventType, extra, obj);
            md.mEventHandler.sendMessage(m);
        }
!!!15862924.java!!!	getCryptoSession(inout sessionId : byte, inout cipherAlgorithm : String, inout macAlgorithm : String) : CryptoSession
        return new CryptoSession(this, sessionId, cipherAlgorithm, macAlgorithm);
!!!15863052.java!!!	finalize() : void
        native_finalize();
