class SimpleContentProviderTest
!!!13331724.java!!!	SimpleContentProviderTest()
        super(TestContentProvider.class, AUTHORITY);
!!!13331852.java!!!	setUp() : void
        super.setUp();
        mProvider = getProvider();
        mHelper = mProvider.getMockProviderHelper();

        mImmutableHelper = new ImmutableProviderHelper(MIME_SUB_TYPE) {
            @Override
            public Cursor query(Uri uri, String[] projection, String selection,
                    String[] selectionArgs, String sortOrder, String limit) {
                assertEquals(PROJECTION, projection);
                assertEquals(WHERE, selection);
                assertEquals(WHERE_ARGS, selectionArgs);
                assertEquals(ORDER_BY, sortOrder);
                assertEquals(LIMIT, limit);
                return sResult;
            }
        };
!!!13331980.java!!!	testGetType_single() : void
        expect(mHelper.getMimeSubType()).andReturn(MIME_SUB_TYPE);
        replay(mHelper);
        assertEquals("vnd.android.cursor.item/mime.sub.type", mProvider.getType(sRowUri));
        verify(mHelper);
!!!13332108.java!!!	testGetType_multiple() : void
        expect(mHelper.getMimeSubType()).andReturn(MIME_SUB_TYPE);
        replay(mHelper);
        assertEquals("vnd.android.cursor.dir/mime.sub.type", mProvider.getType(ALL_URI));
        verify(mHelper);
!!!13332236.java!!!	testGetType_unrecognized() : void
        assertEquals(null, mProvider.getType(Uri.parse("content://unknown/uri")));
!!!13332364.java!!!	testInsert() : void
        expect(mHelper.insert(sRow)).andReturn(ROW_ID);
        replay(mHelper);
        assertEquals(sRowUri, mProvider.insert(ALL_URI, sRow));
        verify(mHelper);
!!!13332492.java!!!	testBulkInsert() : void
        expect(mHelper.insert(sRow)).andReturn(ROW_ID);
        expect(mHelper.insert(sRow2)).andReturn(ROW_ID_2);
        replay(mHelper);
        assertEquals(2, mProvider.bulkInsert(ALL_URI, new ContentValues[] {sRow, sRow2}));
        verify(mHelper);
!!!13332620.java!!!	testUpdateSingle() : void
        expect(mHelper.update(sRow, ID_MODIFIED_WHERE, WHERE_ARGS)).andReturn(1);
        replay(mHelper);
        assertEquals(1, mProvider.update(sRowUri, sRow, WHERE, WHERE_ARGS));
        verify(mHelper);
!!!13332748.java!!!	testUpdateMultiple() : void
        expect(mHelper.update(sRow, WHERE, WHERE_ARGS)).andReturn(2);
        replay(mHelper);
        assertEquals(2, mProvider.update(ALL_URI, sRow, WHERE, WHERE_ARGS));
        verify(mHelper);
!!!13332876.java!!!	testQuerySingle() : void
        expect(mHelper.query(sRowUri, PROJECTION, ID_MODIFIED_WHERE, WHERE_ARGS, ORDER_BY, null))
                .andReturn(sResult);
        replay(mHelper);
        assertEquals(sResult, mProvider.query(sRowUri, PROJECTION, WHERE, WHERE_ARGS, ORDER_BY));
        verify(mHelper);
!!!13333004.java!!!	testQueryMultiple() : void
        expect(mHelper.query(ALL_URI, PROJECTION, WHERE, WHERE_ARGS, ORDER_BY, null))
                .andReturn(sResult);
        replay(mHelper);
        assertEquals(sResult, mProvider.query(ALL_URI, PROJECTION, WHERE, WHERE_ARGS, ORDER_BY));
        verify(mHelper);
!!!13333132.java!!!	testQueryWithWhereInQueryString() : void
        expect(mHelper.query(WHERE_URI, PROJECTION, QUERY_MODIFIED_WHERE, WHERE_ARGS, ORDER_BY,
                null))
                .andReturn(sResult);
        replay(mHelper);
        assertEquals(sResult, mProvider.query(WHERE_URI, PROJECTION, WHERE, WHERE_ARGS, ORDER_BY));
        verify(mHelper);
!!!13333260.java!!!	testQueryWithLimit() : void
        expect(mHelper.query(LIMIT_URI, PROJECTION, WHERE, WHERE_ARGS, ORDER_BY, LIMIT))
                .andReturn(sResult);
        replay(mHelper);
        assertEquals(sResult, mProvider.query(LIMIT_URI, PROJECTION, WHERE, WHERE_ARGS, ORDER_BY));
        verify(mHelper);
!!!13333388.java!!!	testDeleteSingle() : void
        expect(mHelper.delete(ID_MODIFIED_WHERE, WHERE_ARGS)).andReturn(1);
        replay(mHelper);
        assertEquals(1, mProvider.delete(sRowUri, WHERE, WHERE_ARGS));
        verify(mHelper);
!!!13333516.java!!!	testDeleteMultiple() : void
        expect(mHelper.delete(WHERE, WHERE_ARGS)).andReturn(2);
        replay(mHelper);
        assertEquals(2, mProvider.delete(ALL_URI, WHERE, WHERE_ARGS));
        verify(mHelper);
!!!13333644.java!!!	testImmutableProviderHelper_query() : void
        assertEquals(sResult,
                mImmutableHelper.query(sRowUri, PROJECTION, WHERE, WHERE_ARGS, ORDER_BY, LIMIT));
!!!13333772.java!!!	testImmutableProviderHelper_insert() : void
        try {
            mImmutableHelper.insert(sRow);
            fail("Immutable helper should have thrown an exception on insert");
        } catch (UnsupportedOperationException e) {
            // pass
        }
!!!13333900.java!!!	testImmutableProviderHelper_update() : void
        try {
            mImmutableHelper.update(sRow, WHERE, WHERE_ARGS);
            fail("Immutable helper should have thrown an exception on update");
        } catch (UnsupportedOperationException e) {
            // pass
        }
!!!13334028.java!!!	testImmutableProviderHelper_delete() : void
        try {
            mImmutableHelper.delete(WHERE, WHERE_ARGS);
            fail("Immutable helper should have thrown an exception on delete");
        } catch (UnsupportedOperationException e) {
            // pass
        }
