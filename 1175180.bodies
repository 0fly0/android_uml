class FieldPacker
!!!6537228.java!!!	FieldPacker(in len : int)
        mPos = 0;
        mLen = len;
        mData = new byte[len];
!!!6537356.java!!!	align(in v : int) : void
        if ((v <= 0) || ((v & (v - 1)) != 0)) {
            throw new RSIllegalArgumentException("argument must be a non-negative non-zero power of 2: " + v);
        }

        while ((mPos & (v - 1)) != 0) {
            mData[mPos++] = 0;
        }
!!!6537484.java!!!	reset() : void
        mPos = 0;
!!!6537612.java!!!	reset(in i : int) : void
        if ((i < 0) || (i >= mLen)) {
            throw new RSIllegalArgumentException("out of range argument: " + i);
        }
        mPos = i;
!!!6537740.java!!!	skip(in i : int) : void
        int res = mPos + i;
        if ((res < 0) || (res > mLen)) {
            throw new RSIllegalArgumentException("out of range argument: " + i);
        }
        mPos = res;
!!!6537868.java!!!	addI8(in v : byte) : void
        mData[mPos++] = v;
!!!6537996.java!!!	addI16(in v : short) : void
        align(2);
        mData[mPos++] = (byte)(v & 0xff);
        mData[mPos++] = (byte)(v >> 8);
!!!6538124.java!!!	addI32(in v : int) : void
        align(4);
        mData[mPos++] = (byte)(v & 0xff);
        mData[mPos++] = (byte)((v >> 8) & 0xff);
        mData[mPos++] = (byte)((v >> 16) & 0xff);
        mData[mPos++] = (byte)((v >> 24) & 0xff);
!!!6538252.java!!!	addI64(in v : long) : void
        align(8);
        mData[mPos++] = (byte)(v & 0xff);
        mData[mPos++] = (byte)((v >> 8) & 0xff);
        mData[mPos++] = (byte)((v >> 16) & 0xff);
        mData[mPos++] = (byte)((v >> 24) & 0xff);
        mData[mPos++] = (byte)((v >> 32) & 0xff);
        mData[mPos++] = (byte)((v >> 40) & 0xff);
        mData[mPos++] = (byte)((v >> 48) & 0xff);
        mData[mPos++] = (byte)((v >> 56) & 0xff);
!!!6538380.java!!!	addU8(in v : short) : void
        if ((v < 0) || (v > 0xff)) {
            android.util.Log.e("rs", "FieldPacker.addU8( " + v + " )");
            throw new IllegalArgumentException("Saving value out of range for type");
        }
        mData[mPos++] = (byte)v;
!!!6538508.java!!!	addU16(in v : int) : void
        if ((v < 0) || (v > 0xffff)) {
            android.util.Log.e("rs", "FieldPacker.addU16( " + v + " )");
            throw new IllegalArgumentException("Saving value out of range for type");
        }
        align(2);
        mData[mPos++] = (byte)(v & 0xff);
        mData[mPos++] = (byte)(v >> 8);
!!!6538636.java!!!	addU32(in v : long) : void
        if ((v < 0) || (v > 0xffffffffL)) {
            android.util.Log.e("rs", "FieldPacker.addU32( " + v + " )");
            throw new IllegalArgumentException("Saving value out of range for type");
        }
        align(4);
        mData[mPos++] = (byte)(v & 0xff);
        mData[mPos++] = (byte)((v >> 8) & 0xff);
        mData[mPos++] = (byte)((v >> 16) & 0xff);
        mData[mPos++] = (byte)((v >> 24) & 0xff);
!!!6538764.java!!!	addU64(in v : long) : void
        if (v < 0) {
            android.util.Log.e("rs", "FieldPacker.addU64( " + v + " )");
            throw new IllegalArgumentException("Saving value out of range for type");
        }
        align(8);
        mData[mPos++] = (byte)(v & 0xff);
        mData[mPos++] = (byte)((v >> 8) & 0xff);
        mData[mPos++] = (byte)((v >> 16) & 0xff);
        mData[mPos++] = (byte)((v >> 24) & 0xff);
        mData[mPos++] = (byte)((v >> 32) & 0xff);
        mData[mPos++] = (byte)((v >> 40) & 0xff);
        mData[mPos++] = (byte)((v >> 48) & 0xff);
        mData[mPos++] = (byte)((v >> 56) & 0xff);
!!!6538892.java!!!	addF32(in v : float) : void
        addI32(Float.floatToRawIntBits(v));
!!!6539020.java!!!	addF64(in v : double) : void
        addI64(Double.doubleToRawLongBits(v));
!!!6539148.java!!!	addObj(inout obj : BaseObj) : void
        if (obj != null) {
            addI32(obj.getID(null));
        } else {
            addI32(0);
        }
!!!6539276.java!!!	addF32(inout v : Float2) : void
        addF32(v.x);
        addF32(v.y);
!!!6539404.java!!!	addF32(inout v : Float3) : void
        addF32(v.x);
        addF32(v.y);
        addF32(v.z);
!!!6539532.java!!!	addF32(inout v : Float4) : void
        addF32(v.x);
        addF32(v.y);
        addF32(v.z);
        addF32(v.w);
!!!6539660.java!!!	addF64(inout v : Double2) : void
        addF64(v.x);
        addF64(v.y);
!!!6539788.java!!!	addF64(inout v : Double3) : void
        addF64(v.x);
        addF64(v.y);
        addF64(v.z);
!!!6539916.java!!!	addF64(inout v : Double4) : void
        addF64(v.x);
        addF64(v.y);
        addF64(v.z);
        addF64(v.w);
!!!6540044.java!!!	addI8(inout v : Byte2) : void
        addI8(v.x);
        addI8(v.y);
!!!6540172.java!!!	addI8(inout v : Byte3) : void
        addI8(v.x);
        addI8(v.y);
        addI8(v.z);
!!!6540300.java!!!	addI8(inout v : Byte4) : void
        addI8(v.x);
        addI8(v.y);
        addI8(v.z);
        addI8(v.w);
!!!6540428.java!!!	addU8(inout v : Short2) : void
        addU8(v.x);
        addU8(v.y);
!!!6540556.java!!!	addU8(inout v : Short3) : void
        addU8(v.x);
        addU8(v.y);
        addU8(v.z);
!!!6540684.java!!!	addU8(inout v : Short4) : void
        addU8(v.x);
        addU8(v.y);
        addU8(v.z);
        addU8(v.w);
!!!6540812.java!!!	addI16(inout v : Short2) : void
        addI16(v.x);
        addI16(v.y);
!!!6540940.java!!!	addI16(inout v : Short3) : void
        addI16(v.x);
        addI16(v.y);
        addI16(v.z);
!!!6541068.java!!!	addI16(inout v : Short4) : void
        addI16(v.x);
        addI16(v.y);
        addI16(v.z);
        addI16(v.w);
!!!6541196.java!!!	addU16(inout v : Int2) : void
        addU16(v.x);
        addU16(v.y);
!!!6541324.java!!!	addU16(inout v : Int3) : void
        addU16(v.x);
        addU16(v.y);
        addU16(v.z);
!!!6541452.java!!!	addU16(inout v : Int4) : void
        addU16(v.x);
        addU16(v.y);
        addU16(v.z);
        addU16(v.w);
!!!6541580.java!!!	addI32(inout v : Int2) : void
        addI32(v.x);
        addI32(v.y);
!!!6541708.java!!!	addI32(inout v : Int3) : void
        addI32(v.x);
        addI32(v.y);
        addI32(v.z);
!!!6541836.java!!!	addI32(inout v : Int4) : void
        addI32(v.x);
        addI32(v.y);
        addI32(v.z);
        addI32(v.w);
!!!6541964.java!!!	addU32(inout v : Long2) : void
        addU32(v.x);
        addU32(v.y);
!!!6542092.java!!!	addU32(inout v : Long3) : void
        addU32(v.x);
        addU32(v.y);
        addU32(v.z);
!!!6542220.java!!!	addU32(inout v : Long4) : void
        addU32(v.x);
        addU32(v.y);
        addU32(v.z);
        addU32(v.w);
!!!6542348.java!!!	addI64(inout v : Long2) : void
        addI64(v.x);
        addI64(v.y);
!!!6542476.java!!!	addI64(inout v : Long3) : void
        addI64(v.x);
        addI64(v.y);
        addI64(v.z);
!!!6542604.java!!!	addI64(inout v : Long4) : void
        addI64(v.x);
        addI64(v.y);
        addI64(v.z);
        addI64(v.w);
!!!6542732.java!!!	addU64(inout v : Long2) : void
        addU64(v.x);
        addU64(v.y);
!!!6542860.java!!!	addU64(inout v : Long3) : void
        addU64(v.x);
        addU64(v.y);
        addU64(v.z);
!!!6542988.java!!!	addU64(inout v : Long4) : void
        addU64(v.x);
        addU64(v.y);
        addU64(v.z);
        addU64(v.w);
!!!6543116.java!!!	addMatrix(inout v : Matrix4f) : void
        for (int i=0; i < v.mMat.length; i++) {
            addF32(v.mMat[i]);
        }
!!!6543244.java!!!	addMatrix(inout v : Matrix3f) : void
        for (int i=0; i < v.mMat.length; i++) {
            addF32(v.mMat[i]);
        }
!!!6543372.java!!!	addMatrix(inout v : Matrix2f) : void
        for (int i=0; i < v.mMat.length; i++) {
            addF32(v.mMat[i]);
        }
!!!6543500.java!!!	addBoolean(inout v : boolean) : void
        addI8((byte)(v ? 1 : 0));
!!!6543628.java!!!	getData() : byte
        return mData;
