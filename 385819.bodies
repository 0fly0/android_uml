class OldAndroidPushbackInputStreamTest
!!!2635803.java!!!	testPushbackInputStream() : void
        String str = "AbCdEfGhIjKlM\nOpQrStUvWxYz";
        ByteArrayInputStream aa = new ByteArrayInputStream(str.getBytes());
        ByteArrayInputStream ba = new ByteArrayInputStream(str.getBytes());
        ByteArrayInputStream ca = new ByteArrayInputStream(str.getBytes());

        PushbackInputStream a = new PushbackInputStream(aa, 7);
        try {
            a.unread("push".getBytes());
            Assert.assertEquals("pushAbCdEfGhIjKlM\nOpQrStUvWxYz", read(a));
        } finally {
            a.close();
        }

        PushbackInputStream b = new PushbackInputStream(ba, 9);
        try {
            b.unread('X');
            Assert.assertEquals("XAbCdEfGhI", read(b, 10));
        } finally {
            b.close();
        }

        PushbackInputStream c = new PushbackInputStream(ca);
        try {
            Assert.assertEquals("bdfhjl\nprtvxz", skipRead(c));
        } finally {
            c.close();
        }
!!!2635931.java!!!	read(inout a : InputStream) : String
        int r;
        StringBuilder builder = new StringBuilder();
        do {
            r = a.read();
            if (r != -1)
                builder.append((char) r);
        } while (r != -1);
        return builder.toString();
!!!2636059.java!!!	read(inout a : InputStream, in x : int) : String
        byte[] b = new byte[x];
        int len = a.read(b, 0, x);
        if (len < 0) {
            return "";
        }
        return new String(b, 0, len);
!!!2636187.java!!!	skipRead(inout a : InputStream) : String
        int r;
        StringBuilder builder = new StringBuilder();
        do {
            a.skip(1);
            r = a.read();
            if (r != -1)
                builder.append((char) r);
        } while (r != -1);
        return builder.toString();
!!!2636315.java!!!	markRead(inout a : InputStream, in x : int, in y : int) : String
        int m = 0;
        int r;
        StringBuilder builder = new StringBuilder();
        do {
            m++;
            r = a.read();
            if (m == x)
                a.mark((x + y));
            if (m == (x + y))
                a.reset();

            if (r != -1)
                builder.append((char) r);
        } while (r != -1);
        return builder.toString();
