class ResetResolutionDialogFragment
!!!12130060.java!!!	newInstance(in titleId : int, in messageId : int) : ResetResolutionDialogFragment
            ResetResolutionDialogFragment frag = new ResetResolutionDialogFragment();
            Bundle args = new Bundle();
            args.putInt(BUNDLE_KEY_TITLE_ID, titleId);
            args.putInt(BUNDLE_KEY_MESSAGE_ID, messageId);
            frag.setArguments(args);
            return frag;
!!!12130188.java!!!	setHandler(inout handler : Handler) : void
            mHandler = handler;
!!!12130316.java!!!	onCreateDialog(inout savedInstanceState : Bundle) : Dialog
            int titleResId = getArguments().getInt(BUNDLE_KEY_TITLE_ID);
            int messageResId = getArguments().getInt(BUNDLE_KEY_MESSAGE_ID);

            AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());
            builder.setTitle(titleResId);
            builder.setMessage(messageResId);
            builder.setPositiveButton(DisplayModeSettings.isFixedUiRes() ?
                    R.string.reset_resolution_ok_button :
                    R.string.reset_resolution_keep_button,
                    new DialogInterface.OnClickListener() {

                        @Override
                        public void onClick(DialogInterface dialog, int which) {
                            // Keep may scale UI
                            mHandler.sendMessage(mHandler.obtainMessage(MESSAGE_KEEP));
                        }
                    });
            builder.setNegativeButton(R.string.reset_resolution_cancel_button,
                    new DialogInterface.OnClickListener() {

                        @Override
                        public void onClick(DialogInterface dialog, int which) {
                            // Cancel last operation
                            mHandler.sendMessage(mHandler.obtainMessage(MESSAGE_CANCEL));
                        }
                    });
            // No reboot choice if we are using fixed UI resolution
            // In such case, we cannot get consistent display even after reboot
            if (!DisplayModeSettings.isFixedUiRes()) {
                builder.setNeutralButton(R.string.reset_resolution_reboot_button,
                        new DialogInterface.OnClickListener() {

                            @Override
                            public void onClick(DialogInterface dialog, int which) {
                                // Reboot to get consistent resolution
                                mHandler.sendMessage(mHandler.obtainMessage(MESSAGE_REBOOT));
                            }
                        });
            }
            return builder.create();
