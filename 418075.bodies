class OldBigDecimalCompareTest
!!!2798619.java!!!	testAbsMathContextNeg() : void
        String a = "-123809648392384754573567356745735.63567890295784902768787678287E+21";
        BigDecimal aNumber = new BigDecimal(a);
        MathContext mc = new MathContext(34, RoundingMode.UP);
        assertEquals("incorrect value", "1.238096483923847545735673567457357E+53", aNumber.abs(mc).toString());

        mc = new MathContext(34, RoundingMode.DOWN);
        assertEquals("incorrect value", "1.238096483923847545735673567457356E+53", aNumber.abs(mc).toString());

        mc = new MathContext(34, RoundingMode.FLOOR);
        assertEquals("incorrect value", "1.238096483923847545735673567457356E+53", aNumber.abs(mc).toString());

        mc = new MathContext(34, RoundingMode.CEILING);
        assertEquals("incorrect value", "1.238096483923847545735673567457357E+53", aNumber.abs(mc).toString());

        mc = new MathContext(34, RoundingMode.UNNECESSARY);
        try {
            aNumber.abs(mc);
            fail("No ArithmeticException for RoundingMode.UNNECESSARY");
        } catch (ArithmeticException expected) {
        }
!!!2798747.java!!!	testNegateMathContextPositive() : void
       String a = "92948782094488478231212478987482988429808779810457634781384756794987";
       MathContext mc = new MathContext(37, RoundingMode.FLOOR);
       BigDecimal aNumber = new BigDecimal(new BigInteger(a), 41);
       BigDecimal res = aNumber.negate(mc);
       assertEquals("incorrect value", "-929487820944884782312124789.8748298843", res.toString());
       assertEquals("incorrect scale", 10, res.scale());
