class Dither
!!!1065228.cpp!!!	clear() : void
    if (mInitialized) {
        glDeleteTextures(1, &mDitherTexture);
    }
!!!1065356.cpp!!!	setupProgram(inout program : Program, inout textureUnit : GLuint) : void
    GLuint textureSlot = (*textureUnit)++;
    Caches::getInstance().activeTexture(textureSlot);

    bindDitherTexture();

    float ditherSize = 1.0f / DITHER_KERNEL_SIZE;
    glUniform1i(program->getUniform("ditherSampler"), textureSlot);
    glUniform1f(program->getUniform("ditherSize"), ditherSize);
    glUniform1f(program->getUniform("ditherSizeSquared"), ditherSize * ditherSize);
!!!1065484.cpp!!!	bindDitherTexture() : void
    if (!mInitialized) {
        const uint8_t pattern[] = {
             0,  8,  2, 10,
            12,  4, 14,  6,
             3, 11,  1,  9,
            15,  7, 13,  5
        };

        glGenTextures(1, &mDitherTexture);
        glBindTexture(GL_TEXTURE_2D, mDitherTexture);

        glPixelStorei(GL_UNPACK_ALIGNMENT, 1);

        glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST);
        glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST);

        glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_REPEAT);
        glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_REPEAT);

        glTexImage2D(GL_TEXTURE_2D, 0, GL_ALPHA, DITHER_KERNEL_SIZE, DITHER_KERNEL_SIZE, 0,
                GL_ALPHA, GL_UNSIGNED_BYTE, &pattern);

        mInitialized = true;
    } else {
        glBindTexture(GL_TEXTURE_2D, mDitherTexture);
    }
