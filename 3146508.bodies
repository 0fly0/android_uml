class ViewFader
!!!13310092.java!!!	ViewFader(inout view : View)
        mView = view;
        mState = (view.getVisibility() == View.VISIBLE) ? STATE_VISIBLE
                : STATE_INVISIBLE;
        mVisibleDuration = VISIBLE_DURATION_MS;

        mFadeAnimator = new ObjectAnimator();
        mFadeAnimator.setTarget(mView);
        mFadeAnimator.setPropertyName("alpha");
        mFadeAnimator.setDuration(FADE_DURATION_MS);
        mFadeAnimator.addListener(new AnimatorListenerAdapter() {
                public void onAnimationEnd(Animator animation) {
                    if (mState == STATE_FADING_IN) {
                        resetTimer();
                        mState = STATE_VISIBLE;
                    } else {
                        mView.setVisibility(View.INVISIBLE);
                        mState = STATE_INVISIBLE;
                    }
                }
            });
        mCallback = new Runnable() {
            @Override
            public void run() {
                fadeOut();
            }
        };
!!!13310220.java!!!	setVisibleDuration(in visibleDuration : int) : void
        mVisibleDuration = visibleDuration;
!!!13310348.java!!!	setFadeDuration(in fadeDuration : int) : void
        mFadeAnimator.setDuration((fadeDuration < 0) ? 0 : fadeDuration);
!!!13310476.java!!!	fadeIn() : void
        switch (mState) {
            case STATE_INVISIBLE:
                mView.setVisibility(View.VISIBLE);
                mFadeAnimator.setFloatValues(0.0f, 1.0f);
                mFadeAnimator.start();
                mState = STATE_FADING_IN;
                break;

            case STATE_VISIBLE:
                resetTimer();
                break;

            case STATE_FADING_OUT:
                mFadeAnimator.reverse();
                mState = STATE_FADING_IN;
                break;

            default:
                break;
        }
!!!13310604.java!!!	fadeOut() : void
        switch (mState) {
            case STATE_FADING_IN:
                mFadeAnimator.reverse();
                mState = STATE_FADING_OUT;
                break;

            case STATE_VISIBLE:
                mFadeAnimator.setFloatValues(1.0f, 0.0f);
                mFadeAnimator.start();
                mState = STATE_FADING_OUT;
                break;

            default:
                break;
        }
!!!13310732.java!!!	dispose() : void
        stopTimer();
!!!13310860.java!!!	resetTimer() : void
        if (mVisibleDuration <= 0) {
            return;
        }

        stopTimer();
        startTimer();
!!!13310988.java!!!	stopTimer() : void
        Handler handler = mView.getHandler();
        if (handler != null) {
            handler.removeCallbacks(mCallback);
        }
!!!13311116.java!!!	startTimer() : void
        Handler handler = mView.getHandler();

        handler.postDelayed(mCallback, mVisibleDuration);
