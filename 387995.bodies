class OldDataInputOutputStreamTest
!!!2647707.java!!!	test_read_writeBoolean() : void
        os.writeBoolean(true);
        sos.setThrowsException(true);
        try {
            os.writeBoolean(false);
            fail("Test 1: IOException expected.");
        } catch (IOException e) {
            // Expected.
        }
        sos.setThrowsException(false);

        os.close();
        openDataInputStream();
        assertTrue("Test 2: Incorrect boolean written or read.",
                dis.readBoolean());

        try {
            dis.readBoolean();
            fail("Test 3: EOFException expected.");
        } catch (EOFException e) {
            // Expected.
        }

        dis.close();
        try {
            dis.readBoolean();
            fail("Test 4: IOException expected.");
        } catch (IOException e) {
            // Expected.
        }
!!!2647835.java!!!	test_read_writeByte() : void
        os.writeByte((byte) 127);
        sos.setThrowsException(true);
        try {
            os.writeByte((byte) 127);
            fail("Test 1: IOException expected.");
        } catch (IOException e) {
            // Expected.
        }
        sos.setThrowsException(false);

        os.close();
        openDataInputStream();
        assertEquals("Test 2: Incorrect byte written or read;",
                (byte) 127, dis.readByte());

        try {
            dis.readByte();
            fail("Test 3: EOFException expected.");
        } catch (EOFException e) {
            // Expected.
        }

        dis.close();
        try {
            dis.readByte();
            fail("Test 4: IOException expected.");
        } catch (IOException e) {
            // Expected.
        }
!!!2647963.java!!!	test_read_writeChar() : void
        os.writeChar('b');
        sos.setThrowsException(true);
        try {
            os.writeChar('k');
            fail("Test 1: IOException expected.");
        } catch (IOException e) {
            // Expected.
        }
        sos.setThrowsException(false);

        os.close();
        openDataInputStream();
        assertEquals("Test 2: Incorrect char written or read;",
                'b', dis.readChar());

        try {
            dis.readChar();
            fail("Test 3: EOFException expected.");
        } catch (EOFException e) {
            // Expected.
        }

        dis.close();
        try {
            dis.readChar();
            fail("Test 4: IOException expected.");
        } catch (IOException e) {
            // Expected.
        }
!!!2648091.java!!!	test_read_writeDouble() : void
        os.writeDouble(2345.76834720202);
        sos.setThrowsException(true);
        try {
            os.writeDouble(2345.76834720202);
            fail("Test 1: IOException expected.");
        } catch (IOException e) {
            // Expected.
        }
        sos.setThrowsException(false);

        os.close();
        openDataInputStream();
        assertEquals("Test 1: Incorrect double written or read;",
                2345.76834720202, dis.readDouble());

        try {
            dis.readDouble();
            fail("Test 2: EOFException expected.");
        } catch (EOFException e) {
            // Expected.
        }

        dis.close();
        try {
            dis.readDouble();
            fail("Test 3: IOException expected.");
        } catch (IOException e) {
            // Expected.
        }
!!!2648219.java!!!	test_read_writeFloat() : void
        os.writeFloat(29.08764f);
        sos.setThrowsException(true);
        try {
            os.writeFloat(29.08764f);
            fail("Test 1: IOException expected.");
        } catch (IOException e) {
            // Expected.
        }
        sos.setThrowsException(false);

        os.close();
        openDataInputStream();
        assertEquals("Test 2: Incorrect float written or read;",
                29.08764f, dis.readFloat());

        try {
            dis.readFloat();
            fail("Test 3: EOFException expected.");
        } catch (EOFException e) {
            // Expected.
        }

        dis.close();
        try {
            dis.readFloat();
            fail("Test 4: IOException expected.");
        } catch (IOException e) {
            // Expected.
        }
!!!2648347.java!!!	test_read_writeInt() : void
        os.writeInt(768347202);
        sos.setThrowsException(true);
        try {
            os.writeInt(768347202);
            fail("Test 1: IOException expected.");
        } catch (IOException e) {
            // Expected.
        }
        sos.setThrowsException(false);

        os.close();
        openDataInputStream();
        assertEquals("Test 1: Incorrect int written or read;",
                768347202, dis.readInt());

        try {
            dis.readInt();
            fail("Test 2: EOFException expected.");
        } catch (EOFException e) {
            // Expected.
        }

        dis.close();
        try {
            dis.readInt();
            fail("Test 3: IOException expected.");
        } catch (IOException e) {
            // Expected.
        }
!!!2648475.java!!!	test_read_writeLong() : void
        os.writeLong(9875645283333L);
        sos.setThrowsException(true);
        try {
            os.writeLong(9875645283333L);
            fail("Test 1: IOException expected.");
        } catch (IOException e) {
            // Expected.
        }
        sos.setThrowsException(false);

        os.close();
        openDataInputStream();
        assertEquals("Test 2: Incorrect long written or read;",
                9875645283333L, dis.readLong());

        try {
            dis.readLong();
            fail("Test 3: EOFException expected.");
        } catch (EOFException e) {
            // Expected.
        }

        dis.close();
        try {
            dis.readLong();
            fail("Test 4: IOException expected.");
        } catch (IOException e) {
            // Expected.
        }
!!!2648603.java!!!	test_read_writeShort() : void
        os.writeShort(9875);
        sos.setThrowsException(true);
        try {
            os.writeShort(9875);
            fail("Test 1: IOException expected.");
        } catch (IOException e) {
            // Expected.
        }
        sos.setThrowsException(false);

        os.close();
        openDataInputStream();
        assertEquals("Test 1: Incorrect short written or read;",
                9875, dis.readShort());

        try {
            dis.readShort();
            fail("Test 2: EOFException expected.");
        } catch (EOFException e) {
            // Expected.
        }

        dis.close();
        try {
            dis.readShort();
            fail("Test 3: IOException expected.");
        } catch (IOException e) {
            // Expected.
        }
!!!2648731.java!!!	test_read_writeUTF() : void
        os.writeUTF(unihw);
        sos.setThrowsException(true);
        try {
            os.writeUTF(unihw);
            fail("Test 1: IOException expected.");
        } catch (IOException e) {
            // Expected.
        }
        sos.setThrowsException(false);

        os.close();
        openDataInputStream();
        assertTrue("Test 1: Incorrect UTF-8 string written or read.",
                dis.readUTF().equals(unihw));

        try {
            dis.readUTF();
            fail("Test 2: EOFException expected.");
        } catch (EOFException e) {
            // Expected.
        }

        dis.close();
        try {
            dis.readUTF();
            fail("Test 3: IOException expected.");
        } catch (IOException e) {
            // Expected.
        }
!!!2648859.java!!!	openDataInputStream() : void
        dis = new DataInputStream(new ByteArrayInputStream(sos.toByteArray()));
!!!2648987.java!!!	setUp() : void
        sos = new Support_OutputStream(256);
        os = new DataOutputStream(sos);
!!!2649115.java!!!	tearDown() : void
        try {
            os.close();
        } catch (Exception e) {
        }
        try {
            dis.close();
        } catch (Exception e) {
        }
