class GeofenceHardware
!!!15785228.java!!!	GeofenceHardware(inout service : IGeofenceHardware)
        mService = service;
!!!15785356.java!!!	getMonitoringTypes() : int
        try {
            return mService.getMonitoringTypes();
        } catch (RemoteException e) {
        }
        return new int[0];
!!!15785484.java!!!	getStatusOfMonitoringType(in monitoringType : int) : int
        try {
            return mService.getStatusOfMonitoringType(monitoringType);
        } catch (RemoteException e) {
            return MONITOR_UNSUPPORTED;
        }
!!!15785612.java!!!	addGeofence(in geofenceId : int, in monitoringType : int, inout geofenceRequest : GeofenceHardwareRequest, inout callback : GeofenceHardwareCallback) : boolean
        try {
            if (geofenceRequest.getType() == GeofenceHardwareRequest.GEOFENCE_TYPE_CIRCLE) {
                return mService.addCircularFence(geofenceId, monitoringType,
                        geofenceRequest.getLatitude(),
                        geofenceRequest.getLongitude(), geofenceRequest.getRadius(),
                        geofenceRequest.getLastTransition(),
                        geofenceRequest.getMonitorTransitions(),
                        geofenceRequest.getNotificationResponsiveness(),
                        geofenceRequest.getUnknownTimer(),
                        getCallbackWrapper(callback));
            } else {
                throw new IllegalArgumentException("Geofence Request type not supported");
            }
        } catch (RemoteException e) {
        }
        return false;
!!!15785740.java!!!	removeGeofence(in geofenceId : int, in monitoringType : int) : boolean
       try {
           return mService.removeGeofence(geofenceId, monitoringType);
       } catch (RemoteException e) {
       }
       return false;
!!!15785868.java!!!	pauseGeofence(in geofenceId : int, in monitoringType : int) : boolean
        try {
            return mService.pauseGeofence(geofenceId, monitoringType);
        } catch (RemoteException e) {
        }
        return false;
!!!15785996.java!!!	resumeGeofence(in geofenceId : int, in monitoringType : int, in monitorTransition : int) : boolean
        try {
            return mService.resumeGeofence(geofenceId, monitoringType, monitorTransition);
        } catch (RemoteException e) {
        }
        return false;
!!!15786124.java!!!	registerForMonitorStateChangeCallback(in monitoringType : int, inout callback : GeofenceHardwareMonitorCallback) : boolean
        try {
            return mService.registerForMonitorStateChangeCallback(monitoringType,
                    getMonitorCallbackWrapper(callback));
        } catch (RemoteException e) {
        }
        return false;
!!!15786252.java!!!	unregisterForMonitorStateChangeCallback(in monitoringType : int, inout callback : GeofenceHardwareMonitorCallback) : boolean
        boolean  result = false;
        try {
            result = mService.unregisterForMonitorStateChangeCallback(monitoringType,
                    getMonitorCallbackWrapper(callback));
            if (result) removeMonitorCallback(callback);

        } catch (RemoteException e) {
        }
        return result;
!!!15786380.java!!!	removeCallback(inout callback : GeofenceHardwareCallback) : void
        synchronized (mCallbacks) {
            mCallbacks.remove(callback);
        }
!!!15786508.java!!!	getCallbackWrapper(inout callback : GeofenceHardwareCallback) : GeofenceHardwareCallbackWrapper
        synchronized (mCallbacks) {
            GeofenceHardwareCallbackWrapper wrapper = mCallbacks.get(callback);
            if (wrapper == null) {
                wrapper = new GeofenceHardwareCallbackWrapper(callback);
                mCallbacks.put(callback, wrapper);
            }
            return wrapper;
        }
!!!15786636.java!!!	removeMonitorCallback(inout callback : GeofenceHardwareMonitorCallback) : void
        synchronized (mMonitorCallbacks) {
            mMonitorCallbacks.remove(callback);
        }
!!!15786764.java!!!	getMonitorCallbackWrapper(inout callback : GeofenceHardwareMonitorCallback) : GeofenceHardwareMonitorCallbackWrapper
        synchronized (mMonitorCallbacks) {
            GeofenceHardwareMonitorCallbackWrapper wrapper = mMonitorCallbacks.get(callback);
            if (wrapper == null) {
                wrapper = new GeofenceHardwareMonitorCallbackWrapper(callback);
                mMonitorCallbacks.put(callback, wrapper);
            }
            return wrapper;
        }
