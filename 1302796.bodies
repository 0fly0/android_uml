class AirplaneModeController
!!!7693964.java!!!	AirplaneModeController(inout context : Context, inout checkbox : CompoundButton)
        mContext = context;
        mAirplaneMode = getAirplaneMode();
        mCheckBox = checkbox;
        checkbox.setChecked(mAirplaneMode);
        checkbox.setOnCheckedChangeListener(this);

        IntentFilter filter = new IntentFilter();
        filter.addAction(Intent.ACTION_AIRPLANE_MODE_CHANGED);
        context.registerReceiver(this, filter);

!!!7694092.java!!!	release() : void
        mContext.unregisterReceiver(this);
!!!7694220.java!!!	onCheckedChanged(inout view : CompoundButton, inout checked : boolean) : void
        if (checked != mAirplaneMode) {
            mAirplaneMode = checked;
            unsafe(checked);
        }
!!!7694348.java!!!	onReceive(inout context : Context, inout intent : Intent) : void
        if (Intent.ACTION_AIRPLANE_MODE_CHANGED.equals(intent.getAction())) {
            final boolean enabled = intent.getBooleanExtra("state", false);
            if (enabled != mAirplaneMode) {
                mAirplaneMode = enabled;
                mCheckBox.setChecked(enabled);
            }
        }
!!!7694476.java!!!	getAirplaneMode() : boolean
        ContentResolver cr = mContext.getContentResolver();
        return 0 != Settings.Global.getInt(cr, Settings.Global.AIRPLANE_MODE_ON, 0);
!!!7694604.java!!!	unsafe(in enabled : boolean) : void
        AsyncTask.execute(new Runnable() {
                public void run() {
                    Settings.Global.putInt(
                            mContext.getContentResolver(),
                            Settings.Global.AIRPLANE_MODE_ON,
                            enabled ? 1 : 0);
                    Intent intent = new Intent(Intent.ACTION_AIRPLANE_MODE_CHANGED);
                    intent.addFlags(Intent.FLAG_RECEIVER_REPLACE_PENDING);
                    intent.putExtra("state", enabled);
                    mContext.sendBroadcastAsUser(intent, UserHandle.ALL);
                }
            });
