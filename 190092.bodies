class RenderInput
!!!453644.cpp!!!	getTargetWindow() : ANativeWindow
    return mSTC.get();
!!!453772.cpp!!!	updateVideoSize(in meta : sp<MetaData>) : void
    CHECK(meta->findInt32(kKeyWidth, &mWidth));
    CHECK(meta->findInt32(kKeyHeight, &mHeight));

    int left, top, right, bottom;
    if (meta->findRect(kKeyCropRect, &left, &top, &right, &bottom)) {
        mWidth = right - left + 1;
        mHeight = bottom - top + 1;
    }

    // If rotation degrees is 90 or 270, swap width and height
    // (mWidth and mHeight are the _rotated_ source rectangle).
    int32_t rotationDegrees;
    if (!meta->findInt32(kKeyRotation, &rotationDegrees)) {
        rotationDegrees = 0;
    }

    if (rotationDegrees == 90 || rotationDegrees == 270) {
        int tmp = mWidth;
        mWidth = mHeight;
        mHeight = tmp;
    }
!!!453900.cpp!!!	render(inout buffer : MediaBuffer, in videoEffect : uint32_t, in renderingMode : M4xVSS_MediaRendering, in isExternalBuffer : bool) : void
    mVideoEffect = videoEffect;
    mRenderingMode = renderingMode;
    mIsExternalBuffer = isExternalBuffer;
    mBuffer = buffer;

    mRenderer->startRequest(NativeWindowRenderer::CMD_RENDER_INPUT);
    mRenderer->mThreadRenderInput = this;
    mRenderer->sendRequest();
!!!454028.cpp!!!	RenderInput(inout renderer : NativeWindowRenderer, in textureId : GLuint)
    mST = new SurfaceTexture(mTextureId);
    mSTC = new SurfaceTextureClient(mST);
    native_window_connect(mSTC.get(), NATIVE_WINDOW_API_MEDIA);
