class Stub
!!!10550540.java!!!	Stub()
this.attachInterface(this, DESCRIPTOR);
!!!10550668.java!!!	asInterface(inout obj : android.os.IBinder) : IDisplayManager
if ((obj==null)) {
return null;
}
android.os.IInterface iin = obj.queryLocalInterface(DESCRIPTOR);
if (((iin!=null)&&(iin instanceof android.hardware.display.IDisplayManager))) {
return ((android.hardware.display.IDisplayManager)iin);
}
return new android.hardware.display.IDisplayManager.Stub.Proxy(obj);
!!!10550796.java!!!	asBinder() : android.os.IBinder
return this;
!!!10550924.java!!!	onTransact(in code : int, inout data : android.os.Parcel, inout reply : android.os.Parcel, in flags : int) : boolean
switch (code)
{
case INTERFACE_TRANSACTION:
{
reply.writeString(DESCRIPTOR);
return true;
}
case TRANSACTION_getDisplayInfo:
{
data.enforceInterface(DESCRIPTOR);
int _arg0;
_arg0 = data.readInt();
android.view.DisplayInfo _result = this.getDisplayInfo(_arg0);
reply.writeNoException();
if ((_result!=null)) {
reply.writeInt(1);
_result.writeToParcel(reply, android.os.Parcelable.PARCELABLE_WRITE_RETURN_VALUE);
}
else {
reply.writeInt(0);
}
return true;
}
case TRANSACTION_getDisplayIds:
{
data.enforceInterface(DESCRIPTOR);
int[] _result = this.getDisplayIds();
reply.writeNoException();
reply.writeIntArray(_result);
return true;
}
case TRANSACTION_registerCallback:
{
data.enforceInterface(DESCRIPTOR);
android.hardware.display.IDisplayManagerCallback _arg0;
_arg0 = android.hardware.display.IDisplayManagerCallback.Stub.asInterface(data.readStrongBinder());
this.registerCallback(_arg0);
reply.writeNoException();
return true;
}
case TRANSACTION_scanWifiDisplays:
{
data.enforceInterface(DESCRIPTOR);
this.scanWifiDisplays();
reply.writeNoException();
return true;
}
case TRANSACTION_connectWifiDisplay:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
this.connectWifiDisplay(_arg0);
reply.writeNoException();
return true;
}
case TRANSACTION_disconnectWifiDisplay:
{
data.enforceInterface(DESCRIPTOR);
this.disconnectWifiDisplay();
reply.writeNoException();
return true;
}
case TRANSACTION_renameWifiDisplay:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
java.lang.String _arg1;
_arg1 = data.readString();
this.renameWifiDisplay(_arg0, _arg1);
reply.writeNoException();
return true;
}
case TRANSACTION_forgetWifiDisplay:
{
data.enforceInterface(DESCRIPTOR);
java.lang.String _arg0;
_arg0 = data.readString();
this.forgetWifiDisplay(_arg0);
reply.writeNoException();
return true;
}
case TRANSACTION_getWifiDisplayStatus:
{
data.enforceInterface(DESCRIPTOR);
android.hardware.display.WifiDisplayStatus _result = this.getWifiDisplayStatus();
reply.writeNoException();
if ((_result!=null)) {
reply.writeInt(1);
_result.writeToParcel(reply, android.os.Parcelable.PARCELABLE_WRITE_RETURN_VALUE);
}
else {
reply.writeInt(0);
}
return true;
}
}
return super.onTransact(code, data, reply, flags);
