class DeflaterOutputStream
!!!1691291.java!!!	DeflaterOutputStream(inout os : OutputStream, inout def : Deflater)
        this(os, def, BUF_SIZE, false);
!!!1691419.java!!!	DeflaterOutputStream(inout os : OutputStream)
        this(os, new Deflater(), BUF_SIZE, false);
!!!1691547.java!!!	DeflaterOutputStream(inout os : OutputStream, inout def : Deflater, in bufferSize : int)
        this(os, def, bufferSize, false);
!!!1691675.java!!!	DeflaterOutputStream(inout os : OutputStream, inout syncFlush : boolean)
        this(os, new Deflater(), BUF_SIZE, syncFlush);
!!!1691803.java!!!	DeflaterOutputStream(inout os : OutputStream, inout def : Deflater, inout syncFlush : boolean)
        this(os, def, BUF_SIZE, syncFlush);
!!!1691931.java!!!	DeflaterOutputStream(inout os : OutputStream, inout def : Deflater, in bufferSize : int, inout syncFlush : boolean)
        super(os);
        if (os == null) {
            throw new NullPointerException("os == null");
        } else if (def == null) {
            throw new NullPointerException("def == null");
        }
        if (bufferSize <= 0) {
            throw new IllegalArgumentException("bufferSize <= 0: " + bufferSize);
        }
        this.def = def;
        this.syncFlush = syncFlush;
        buf = new byte[bufferSize];
!!!1692059.java!!!	deflate() : void
        int byteCount;
        while ((byteCount = def.deflate(buf)) != 0) {
            out.write(buf, 0, byteCount);
        }
!!!1692187.java!!!	close() : void
        // everything closed here should also be closed in ZipOutputStream.close()
        if (!def.finished()) {
            finish();
        }
        def.end();
        out.close();
!!!1692315.java!!!	finish() : void
        if (done) {
            return;
        }
        def.finish();
        while (!def.finished()) {
            int byteCount = def.deflate(buf);
            out.write(buf, 0, byteCount);
        }
        done = true;
!!!1692443.java!!!	write(in i : int) : void
        Streams.writeSingleByte(this, i);
!!!1692571.java!!!	write(inout buffer : byte, in offset : int, in byteCount : int) : void
        if (done) {
            throw new IOException("attempt to write after finish");
        }
        Arrays.checkOffsetAndCount(buffer.length, offset, byteCount);
        if (!def.needsInput()) {
            throw new IOException();
        }
        def.setInput(buffer, offset, byteCount);
        deflate();
!!!1692699.java!!!	flush() : void
        if (syncFlush) {
            int byteCount;
            while ((byteCount = def.deflate(buf, 0, buf.length, Deflater.SYNC_FLUSH)) != 0) {
                out.write(buf, 0, byteCount);
            }
        }
        out.flush();
