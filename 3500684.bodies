class Heap
!!!15296652.java!!!	Heap(inout name : String)
        mName = name;
!!!15296780.java!!!	addStackFrame(inout theFrame : StackFrame) : void
        mFrames.put(theFrame.mId, theFrame);
!!!15296908.java!!!	getStackFrame(in id : long) : StackFrame
        return mFrames.get(id);
!!!15297036.java!!!	addStackTrace(inout theTrace : StackTrace) : void
        mTraces.put(theTrace.mSerialNumber, theTrace);
!!!15297164.java!!!	getStackTrace(in traceSerialNumber : int) : StackTrace
        return mTraces.get(traceSerialNumber);
!!!15297292.java!!!	getStackTraceAtDepth(in traceSerialNumber : int, in depth : int) : StackTrace
        StackTrace trace = mTraces.get(traceSerialNumber);

        if (trace != null) {
            trace = trace.fromDepth(depth);
        }

        return trace;
!!!15297420.java!!!	addRoot(inout root : RootObj) : void
        root.mIndex = mRoots.size();
        mRoots.add(root);
!!!15297548.java!!!	addThread(inout thread : ThreadObj, in serialNumber : int) : void
        mThreads.put(serialNumber, thread);
!!!15297676.java!!!	getThread(in serialNumber : int) : ThreadObj
        return mThreads.get(serialNumber);
!!!15297804.java!!!	addInstance(in id : long, inout instance : Instance) : void
        mInstances.put(id, instance);
!!!15297932.java!!!	getInstance(in id : long) : Instance
        return mInstances.get(id);
!!!15298060.java!!!	addClass(in id : long, inout theClass : ClassObj) : void
        mClassesById.put(id, theClass);
        mClassesByName.put(theClass.mClassName, theClass);
!!!15298188.java!!!	getClass(in id : long) : ClassObj
        return mClassesById.get(id);
!!!15298316.java!!!	getClass(inout name : String) : ClassObj
        return mClassesByName.get(name);
!!!15298444.java!!!	dumpInstanceCounts() : void
        for (ClassObj theClass: mClassesById.values()) {
            int count = theClass.mInstances.size();

            if (count > 0) {
                System.out.println(theClass + ": " + count);
            }
        }
!!!15298572.java!!!	dumpSubclasses() : void
        for (ClassObj theClass: mClassesById.values()) {
            int count = theClass.mSubclasses.size();

            if (count > 0) {
                System.out.println(theClass);
                theClass.dumpSubclasses();
            }
        }
!!!15298700.java!!!	dumpSizes() : void
        for (ClassObj theClass: mClassesById.values()) {
            int size = 0;

            for (Instance instance: theClass.mInstances) {
                size += instance.getCompositeSize();
            }

            if (size > 0) {
                System.out.println(theClass + ": base " + theClass.getSize()
                    + ", composite " + size);
            }
        }
!!!15298828.java!!!	resolveInstanceRefs(inout state : State) : void
        for (Instance instance : mInstances.values()) {
            ClassObj theClass = mClassesById.get(instance.mClassId);

            if (theClass == null) {
                continue;
            }

            String name = theClass.mClassName;
            String superclassName = "none";
            ClassObj superClass = mClassesById.get(theClass.mSuperclassId);

            if (superClass != null) {
                superclassName = superClass.mClassName;
            }

            theClass.addInstance(instance);
            instance.resolveReferences(state);
        }
!!!15298956.java!!!	resolveClassStatics(inout state : State) : void
        for (ClassObj theClass: mClassesById.values()) {
            theClass.resolveReferences(state);
        }
!!!15299084.java!!!	resolveRoots(inout state : State) : void
        for (RootObj root: mRoots) {
            root.resolveReferences(state);
        }
