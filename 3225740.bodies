class OwnerInfoSettings
!!!13862924.java!!!	onCreateView(inout inflater : LayoutInflater, inout container : ViewGroup, inout savedInstanceState : Bundle) : View
        mView = inflater.inflate(R.layout.ownerinfo, container, false);
        initView(mView);
        return mView;
!!!13863052.java!!!	initView(inout view : View) : void
        final ContentResolver res = getActivity().getContentResolver();
        String info = Settings.Secure.getString(res, Settings.Secure.LOCK_SCREEN_OWNER_INFO);
        int enabled = Settings.Secure.getInt(res,
                Settings.Secure.LOCK_SCREEN_OWNER_INFO_ENABLED, 1);
        mCheckbox = (CheckBox) mView.findViewById(R.id.show_owner_info_on_lockscreen_checkbox);
        mEditText = (EditText) mView.findViewById(R.id.owner_info_edit_text);
        mEditText.setText(info);
        mEditText.setEnabled(enabled != 0);
        mCheckbox.setChecked(enabled != 0);
        if (UserHandle.myUserId() != UserHandle.USER_OWNER) {
            mCheckbox.setText(R.string.show_user_info_on_lockscreen_label);
        }
        mCheckbox.setOnCheckedChangeListener(new OnCheckedChangeListener() {
            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                Settings.Secure.putInt(res, Settings.Secure.LOCK_SCREEN_OWNER_INFO_ENABLED,
                        isChecked ? 1 : 0);
                mEditText.setEnabled(isChecked); // disable text field if not enabled
            }
        });
!!!13863180.java!!!	onPause() : void
        super.onPause();
        saveToDb();
!!!13863308.java!!!	saveToDb() : void
        ContentResolver res = getActivity().getContentResolver();
        String info = mEditText.getText().toString();
        Settings.Secure.putString(res, Settings.Secure.LOCK_SCREEN_OWNER_INFO, info);
