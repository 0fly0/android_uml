class Style
!!!2889740.java!!!	internalSetBigContentTitle(inout title : CharSequence) : void
            mBigContentTitle = title;
!!!2889868.java!!!	internalSetSummaryText(inout cs : CharSequence) : void
            mSummaryText = cs;
            mSummaryTextSet = true;
!!!2889996.java!!!	setBuilder(inout builder : Builder) : void
            if (mBuilder != builder) {
                mBuilder = builder;
                if (mBuilder != null) {
                    mBuilder.setStyle(this);
                }
            }
!!!2890124.java!!!	checkBuilder() : void
            if (mBuilder == null) {
                throw new IllegalArgumentException("Style requires a valid Builder object");
            }
!!!2890252.java!!!	getStandardView(in layoutId : int) : RemoteViews
            checkBuilder();

            if (mBigContentTitle != null) {
                mBuilder.setContentTitle(mBigContentTitle);
            }

            RemoteViews contentView = mBuilder.applyStandardTemplateWithActions(layoutId);

            if (mBigContentTitle != null && mBigContentTitle.equals("")) {
                contentView.setViewVisibility(R.id.line1, View.GONE);
            } else {
                contentView.setViewVisibility(R.id.line1, View.VISIBLE);
            }

            // The last line defaults to the subtext, but can be replaced by mSummaryText
            final CharSequence overflowText =
                    mSummaryTextSet ? mSummaryText
                                    : mBuilder.mSubText;
            if (overflowText != null) {
                contentView.setTextViewText(R.id.text, overflowText);
                contentView.setViewVisibility(R.id.overflow_divider, View.VISIBLE);
                contentView.setViewVisibility(R.id.line3, View.VISIBLE);
            } else {
                contentView.setViewVisibility(R.id.overflow_divider, View.GONE);
                contentView.setViewVisibility(R.id.line3, View.GONE);
            }

            return contentView;
