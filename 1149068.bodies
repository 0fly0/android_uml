class TouchModeFocusChangeTest
!!!6294796.java!!!	TouchModeFocusChangeTest()
        super("com.android.frameworks.coretests", LLOfButtons1.class);
!!!6294924.java!!!	setUp() : void
        super.setUp();

        mActivity = getActivity();
        mFirstButton = mActivity.getFirstButton();
!!!6295052.java!!!	testPreconditions() : void
        assertFalse("we should not be in touch mode", mActivity.isInTouchMode());
        assertTrue("top button should have focus", mFirstButton.isFocused());
!!!6295180.java!!!	testTouchButtonNotTakeFocus() : void
        assertInTouchModeAfterTap(this, mFirstButton);

        assertTrue("should be in touch mode", mActivity.isInTouchMode());
        assertFalse("button.isFocused",
                mFirstButton.isFocused());
        assertFalse("button.hasFocus",
                mFirstButton.hasFocus());
        assertNull("activity shouldn't have focus", mActivity.getCurrentFocus());
        assertFalse("linear layout should not have focus",
                mActivity.getLayout().hasFocus());

        assertTrue("button's onClickListener should have fired",
                mActivity.buttonClickListenerFired());
!!!6295308.java!!!	DISABLE_testLeaveTouchModeWithDpadEvent() : void
        assertInTouchModeAfterClick(this, mFirstButton);

        assertTrue("should be in touch mode", mActivity.isInTouchMode());
        assertFalse("button should not have focus when touched",
                mFirstButton.isFocused());

        assertNotInTouchModeAfterKey(this, KeyEvent.KEYCODE_DPAD_RIGHT, mFirstButton);
        assertFalse("should be out of touch mode", mActivity.isInTouchMode());
        assertTrue("first button (the top most focusable) should have gained focus",
                mFirstButton.isFocused());
