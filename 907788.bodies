class BaseSurfaceHolder
!!!4652556.java!!!	getRequestedWidth() : int
        return mRequestedWidth;
!!!4652684.java!!!	getRequestedHeight() : int
        return mRequestedHeight;
!!!4652812.java!!!	getRequestedFormat() : int
        return mRequestedFormat;
!!!4652940.java!!!	getRequestedType() : int
        return mRequestedType;
!!!4653068.java!!!	addCallback(inout callback : Callback) : void
        synchronized (mCallbacks) {
            // This is a linear search, but in practice we'll 
            // have only a couple callbacks, so it doesn't matter.
            if (mCallbacks.contains(callback) == false) {      
                mCallbacks.add(callback);
            }
        }
!!!4653196.java!!!	removeCallback(inout callback : Callback) : void
        synchronized (mCallbacks) {
            mCallbacks.remove(callback);
        }
!!!4653324.java!!!	getCallbacks() : Callback
        if (mHaveGottenCallbacks) {
            return mGottenCallbacks;
        }
        
        synchronized (mCallbacks) {
            final int N = mCallbacks.size();
            if (N > 0) {
                if (mGottenCallbacks == null || mGottenCallbacks.length != N) {
                    mGottenCallbacks = new SurfaceHolder.Callback[N];
                }
                mCallbacks.toArray(mGottenCallbacks);
            } else {
                mGottenCallbacks = null;
            }
            mHaveGottenCallbacks = true;
        }
        
        return mGottenCallbacks;
!!!4653452.java!!!	ungetCallbacks() : void
        mHaveGottenCallbacks = false;
!!!4653580.java!!!	setFixedSize(in width : int, in height : int) : void
        if (mRequestedWidth != width || mRequestedHeight != height) {
            mRequestedWidth = width;
            mRequestedHeight = height;
            onRelayoutContainer();
        }
!!!4653708.java!!!	setSizeFromLayout() : void
        if (mRequestedWidth != -1 || mRequestedHeight != -1) {
            mRequestedWidth = mRequestedHeight = -1;
            onRelayoutContainer();
        }
!!!4653836.java!!!	setFormat(in format : int) : void
        if (mRequestedFormat != format) {
            mRequestedFormat = format;
            onUpdateSurface();
        }
!!!4653964.java!!!	setType(in type : int) : void
        switch (type) {
        case SURFACE_TYPE_HARDWARE:
        case SURFACE_TYPE_GPU:
            // these are deprecated, treat as "NORMAL"
            type = SURFACE_TYPE_NORMAL;
            break;
        }
        switch (type) {
        case SURFACE_TYPE_NORMAL:
        case SURFACE_TYPE_PUSH_BUFFERS:
            if (mRequestedType != type) {
                mRequestedType = type;
                onUpdateSurface();
            }
            break;
        }
!!!4654092.java!!!	lockCanvas() : Canvas
        return internalLockCanvas(null);
!!!4654220.java!!!	lockCanvas(inout dirty : Rect) : Canvas
        return internalLockCanvas(dirty);
!!!4654348.java!!!	internalLockCanvas(inout dirty : Rect) : Canvas
        if (mType == SURFACE_TYPE_PUSH_BUFFERS) {
            throw new BadSurfaceTypeException(
                    "Surface type is SURFACE_TYPE_PUSH_BUFFERS");
        }
        mSurfaceLock.lock();

        if (DEBUG) Log.i(TAG, "Locking canvas..,");

        Canvas c = null;
        if (onAllowLockCanvas()) {
            if (dirty == null) {
                if (mTmpDirty == null) {
                    mTmpDirty = new Rect();
                }
                mTmpDirty.set(mSurfaceFrame);
                dirty = mTmpDirty;
            }

            try {
                c = mSurface.lockCanvas(dirty);
            } catch (Exception e) {
                Log.e(TAG, "Exception locking surface", e);
            }
        }

        if (DEBUG) Log.i(TAG, "Returned canvas: " + c);
        if (c != null) {
            mLastLockTime = SystemClock.uptimeMillis();
            return c;
        }
        
        // If the Surface is not ready to be drawn, then return null,
        // but throttle calls to this function so it isn't called more
        // than every 100ms.
        long now = SystemClock.uptimeMillis();
        long nextTime = mLastLockTime + 100;
        if (nextTime > now) {
            try {
                Thread.sleep(nextTime-now);
            } catch (InterruptedException e) {
            }
            now = SystemClock.uptimeMillis();
        }
        mLastLockTime = now;
        mSurfaceLock.unlock();
        
        return null;
!!!4654476.java!!!	unlockCanvasAndPost(inout canvas : Canvas) : void
        mSurface.unlockCanvasAndPost(canvas);
        mSurfaceLock.unlock();
!!!4654604.java!!!	getSurface() : Surface
        return mSurface;
!!!4654732.java!!!	getSurfaceFrame() : Rect
        return mSurfaceFrame;
!!!4654860.java!!!	setSurfaceFrameSize(in width : int, in height : int) : void
        mSurfaceFrame.top = 0;
        mSurfaceFrame.left = 0;
        mSurfaceFrame.right = width;
        mSurfaceFrame.bottom = height;
