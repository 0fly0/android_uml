class UnigramHandler
!!!13035148.java!!!	UnigramHandler(in shortcuts : HashMap<String, ArrayList<WeightedString>>)
            mDictionary = null;
            mShortcutsMap = shortcuts;
            mWord = "";
            mState = START;
            mFreq = 0;
!!!13035276.java!!!	getFinalDictionary() : FusionDictionary
            final FusionDictionary dict = mDictionary;
            mDictionary = null;
            mShortcutsMap.clear();
            mWord = "";
            mState = START;
            mFreq = 0;
            return dict;
!!!13035404.java!!!	startElement(in uri : String, in localName : String, in qName : String, inout attrs : Attributes) : void
            if (WORD_TAG.equals(localName)) {
                mState = WORD;
                mWord = "";
                for (int attrIndex = 0; attrIndex < attrs.getLength(); ++attrIndex) {
                    final String attrName = attrs.getLocalName(attrIndex);
                    if (FREQUENCY_ATTR.equals(attrName)) {
                        mFreq = Integer.parseInt(attrs.getValue(attrIndex));
                    }
                }
            } else if (ROOT_TAG.equals(localName)) {
                final HashMap<String, String> attributes = new HashMap<String, String>();
                for (int attrIndex = 0; attrIndex < attrs.getLength(); ++attrIndex) {
                    final String attrName = attrs.getLocalName(attrIndex);
                    attributes.put(attrName, attrs.getValue(attrIndex));
                }
                final String optionsString = attributes.get(OPTIONS_KEY);
                final boolean processUmlauts =
                        GERMAN_UMLAUT_PROCESSING_OPTION.equals(optionsString);
                final boolean processLigatures =
                        FRENCH_LIGATURE_PROCESSING_OPTION.equals(optionsString);
                mDictionary = new FusionDictionary(new Node(), new DictionaryOptions(attributes,
                        processUmlauts, processLigatures));
            } else {
                mState = UNKNOWN;
            }
!!!13035532.java!!!	characters(inout ch : char, in start : int, in length : int) : void
            if (WORD == mState) {
                // The XML parser is free to return text in arbitrary chunks one after the
                // other. In particular, this happens in some implementations when it finds
                // an escape code like "&amp;".
                mWord += String.copyValueOf(ch, start, length);
            }
!!!13035660.java!!!	endElement(in uri : String, in localName : String, in qName : String) : void
            if (WORD == mState) {
                mDictionary.add(mWord, mFreq, mShortcutsMap.get(mWord));
                mState = START;
            }
