format 74
"parsers" // framework::base::opengl::java::javax::xml::parsers
  revision 1
  modified_by 27 "shchen"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "/home/shchen/work/android-x86/libcore/luni/src/main/java/javax/xml/parsers/"
  java_package "javax.xml.parsers"
  classview 131355 "parsers"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 198811 "DocumentBuilder"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Defines the API to obtain DOM Document instances from an XML
document. Using this class, an application programmer can obtain a
{@link Document} from XML.<p>

An instance of this class can be obtained from the
{@link DocumentBuilderFactory#newDocumentBuilder()} method. Once
an instance of this class is obtained, XML can be parsed from a
variety of input sources. These input sources are InputStreams,
Files, URLs, and SAX InputSources.<p>

Note that this class reuses several classes from the SAX API. This
does not require that the implementor of the underlying DOM
implementation use a SAX parser to parse XML document into a
<code>Document</code>. It merely requires that the implementation
communicate with the application using these existing APIs.

@author <a href=\"mailto:Jeff.Suttor@Sun.com\">Jeff Suttor</a>
@version $Revision: 584483 $, $Date: 2007-10-13 19:54:48 -0700 (Sat, 13 Oct 2007) $"
      attribute 453403 "DEBUG"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 1906459 "DocumentBuilder"
	protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Protected constructor "
      end

      operation 1906587 "reset"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Reset this <code>DocumentBuilder</code> to its original configuration.</p>

<p><code>DocumentBuilder</code> is reset to the same state as when it was created with
{@link DocumentBuilderFactory#newDocumentBuilder()}.
<code>reset()</code> is designed to allow the reuse of existing <code>DocumentBuilder</code>s
thus saving resources associated with the creation of new <code>DocumentBuilder</code>s.</p>

<p>The reset <code>DocumentBuilder</code> is not guaranteed to have the same {@link EntityResolver} or {@link ErrorHandler}
<code>Object</code>s, e.g. {@link Object#equals(Object obj)}.  It is guaranteed to have a functionally equal
<code>EntityResolver</code> and <code>ErrorHandler</code>.</p>

@since 1.5"
      end

      operation 1906715 "parse"
	public return_type class_ref 303003 // Document
	nparams 1
	  param inout name "is" type class_ref 131867 // InputStream
	nexceptions 2
	  exception class_ref 303131 // SAXException
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parse the content of the given <code>InputStream</code> as an XML
document and return a new DOM {@link Document} object.
An <code>IllegalArgumentException</code> is thrown if the
<code>InputStream</code> is null.

@param is InputStream containing the content to be parsed.
@return <code>Document</code> result of parsing the
 <code>InputStream</code>
@exception IOException If any IO errors occur.
@exception SAXException If any parse errors occur.
@see org.xml.sax.DocumentHandler"
      end

      operation 1906843 "parse"
	public return_type class_ref 303003 // Document
	nparams 2
	  param inout name "is" type class_ref 131867 // InputStream
	  param inout name "systemId" type class_ref 3399692 // String
	nexceptions 2
	  exception class_ref 303131 // SAXException
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parse the content of the given <code>InputStream</code> as an
XML document and return a new DOM {@link Document} object.
An <code>IllegalArgumentException</code> is thrown if the
<code>InputStream</code> is null.

@param is InputStream containing the content to be parsed.
@param systemId Provide a base for resolving relative URIs.
@return A new DOM Document object.
@exception IOException If any IO errors occur.
@exception SAXException If any parse errors occur.
@see org.xml.sax.DocumentHandler"
      end

      operation 1906971 "parse"
	public return_type class_ref 303003 // Document
	nparams 1
	  param inout name "uri" type class_ref 3399692 // String
	nexceptions 2
	  exception class_ref 303131 // SAXException
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parse the content of the given URI as an XML document
and return a new DOM {@link Document} object.
An <code>IllegalArgumentException</code> is thrown if the
URI is <code>null</code> null.

@param uri The location of the content to be parsed.
@return A new DOM Document object.
@exception IOException If any IO errors occur.
@exception SAXException If any parse errors occur.
@see org.xml.sax.DocumentHandler"
      end

      operation 1907099 "parse"
	public return_type class_ref 303003 // Document
	nparams 1
	  param inout name "f" type class_ref 135579 // File
	nexceptions 2
	  exception class_ref 303131 // SAXException
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parse the content of the given file as an XML document
and return a new DOM {@link Document} object.
An <code>IllegalArgumentException</code> is thrown if the
<code>File</code> is <code>null</code> null.

@param f The file containing the XML to parse.
@exception IOException If any IO errors occur.
@exception SAXException If any parse errors occur.
@see org.xml.sax.DocumentHandler
@return A new DOM Document object."
      end

      operation 1907227 "parse"
	abstract public return_type class_ref 303003 // Document
	nparams 1
	  param inout name "is" type class_ref 303259 // InputSource
	nexceptions 2
	  exception class_ref 303131 // SAXException
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parse the content of the given input source as an XML document
and return a new DOM {@link Document} object.
An <code>IllegalArgumentException</code> is thrown if the
<code>InputSource</code> is <code>null</code> null.

@param is InputSource containing the content to be parsed.
@exception IOException If any IO errors occur.
@exception SAXException If any parse errors occur.
@see org.xml.sax.DocumentHandler
@return A new DOM Document object."
      end

      operation 1907355 "isNamespaceAware"
	abstract public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether or not this parser is configured to
understand namespaces.

@return true if this parser is configured to understand
        namespaces; false otherwise."
      end

      operation 1907483 "isValidating"
	abstract public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether or not this parser is configured to
validate XML documents.

@return true if this parser is configured to validate
        XML documents; false otherwise."
      end

      operation 1907611 "setEntityResolver"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "er" type class_ref 303387 // EntityResolver
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specify the {@link EntityResolver} to be used to resolve
entities present in the XML document to be parsed. Setting
this to <code>null</code> will result in the underlying
implementation using it's own default implementation and
behavior.

@param er The <code>EntityResolver</code> to be used to resolve entities
          present in the XML document to be parsed."
      end

      operation 1907739 "setErrorHandler"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "eh" type class_ref 303515 // ErrorHandler
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specify the {@link ErrorHandler} to be used by the parser.
Setting this to <code>null</code> will result in the underlying
implementation using it's own default implementation and
behavior.

@param eh The <code>ErrorHandler</code> to be used by the parser."
      end

      operation 1907867 "newDocument"
	abstract public return_type class_ref 303003 // Document
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Obtain a new instance of a DOM {@link Document} object
to build a DOM tree with.

@return A new instance of a DOM Document object."
      end

      operation 1907995 "getDOMImplementation"
	abstract public return_type class_ref 303643 // DOMImplementation
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Obtain an instance of a {@link DOMImplementation} object.

@return A new instance of a <code>DOMImplementation</code>."
      end

      operation 1908123 "getSchema"
	public return_type class_ref 303771 // Schema
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <p>Get a reference to the the {@link Schema} being used by
the XML processor.</p>

<p>If no schema is being used, <code>null</code> is returned.</p>

@return {@link Schema} being used or <code>null</code>
 if none in use

@throws UnsupportedOperationException
     For backward compatibility, when implementations for
     earlier versions of JAXP is used, this exception will be
     thrown.

@since 1.5"
      end

      operation 1908251 "isXIncludeAware"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Get the XInclude processing mode for this parser.</p>

@return
     the return value of
     the {@link DocumentBuilderFactory#isXIncludeAware()}
     when this parser was created from factory.

@throws UnsupportedOperationException
     For backward compatibility, when implementations for
     earlier versions of JAXP is used, this exception will be
     thrown.

@since 1.5

@see DocumentBuilderFactory#setXIncludeAware(boolean)"
      end
    end

    class 303899 "DocumentBuilderFactory"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Defines a factory API that enables applications to obtain a
parser that produces DOM object trees from XML documents.

@author <a href=\"Jeff.Suttor@Sun.com\">Jeff Suttor</a>
@version $Revision: 884950 $, $Date: 2009-11-27 10:46:18 -0800 (Fri, 27 Nov 2009) $"
      attribute 453531 "validating"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 453659 "namespaceAware"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 453787 "whitespace"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 453915 "expandEntityRef"
	private explicit_type "boolean"
	init_value " true"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 454043 "ignoreComments"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 454171 "coalescing"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 1908379 "DocumentBuilderFactory"
	protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1908507 "newInstance"
	class_operation public return_type class_ref 303899 // DocumentBuilderFactory
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns Android's implementation of {@code DocumentBuilderFactory}.
Unlike other Java implementations, this method does not consult system
properties, property files, or the services API.

@return a new DocumentBuilderFactory."
      end

      operation 1908635 "newInstance"
	class_operation public return_type class_ref 303899 // DocumentBuilderFactory
	nparams 2
	  param inout name "factoryClassName" type class_ref 3399692 // String
	  param inout name "classLoader" type class_ref 138523 // ClassLoader
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an instance of the named implementation of {@code DocumentBuilderFactory}.

@throws FactoryConfigurationError if {@code factoryClassName} is not available or cannot be
    instantiated.
@since 1.6"
      end

      operation 1908763 "newDocumentBuilder"
	abstract public return_type class_ref 198811 // DocumentBuilder
	nparams 0
	nexceptions 1
	  exception class_ref 304027 // ParserConfigurationException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new instance of a {@link javax.xml.parsers.DocumentBuilder}
using the currently configured parameters.

@exception ParserConfigurationException if a DocumentBuilder
cannot be created which satisfies the configuration requested.
@return A new instance of a DocumentBuilder."
      end

      operation 1908891 "setNamespaceAware"
	public explicit_return_type "void"
	nparams 1
	  param inout name "awareness" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifies that the parser produced by this code will
provide support for XML namespaces. By default the value of this is set
to <code>false</code>

@param awareness true if the parser produced will provide support
                 for XML namespaces; false otherwise."
      end

      operation 1909019 "setValidating"
	public explicit_return_type "void"
	nparams 1
	  param inout name "validating" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifies that the parser produced by this code will
validate documents as they are parsed. By default the value of this
is set to <code>false</code>.

<p>
Note that \"the validation\" here means
<a href=\"http://www.w3.org/TR/REC-xml#proc-types\">a validating
parser</a> as defined in the XML recommendation.
In other words, it essentially just controls the DTD validation.
(except the legacy two properties defined in JAXP 1.2.
See <a href=\"#validationCompatibility\">here</a> for more details.)
</p>

<p>
To use modern schema languages such as W3C XML Schema or
RELAX NG instead of DTD, you can configure your parser to be
a non-validating parser by leaving the {@link #setValidating(boolean)}
method <tt>false</tt>, then use the {@link #setSchema(Schema)}
method to associate a schema to a parser.
</p>

@param validating true if the parser produced will validate documents
                  as they are parsed; false otherwise."
      end

      operation 1909147 "setIgnoringElementContentWhitespace"
	public explicit_return_type "void"
	nparams 1
	  param inout name "whitespace" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifies that the parsers created by this  factory must eliminate
whitespace in element content (sometimes known loosely as
'ignorable whitespace') when parsing XML documents (see XML Rec
2.10). Note that only whitespace which is directly contained within
element content that has an element only content model (see XML
Rec 3.2.1) will be eliminated. Due to reliance on the content model
this setting requires the parser to be in validating mode. By default
the value of this is set to <code>false</code>.

@param whitespace true if the parser created must eliminate whitespace
                  in the element content when parsing XML documents;
                  false otherwise."
      end

      operation 1909275 "setExpandEntityReferences"
	public explicit_return_type "void"
	nparams 1
	  param inout name "expandEntityRef" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifies that the parser produced by this code will
expand entity reference nodes. By default the value of this is set to
<code>true</code>

@param expandEntityRef true if the parser produced will expand entity
                       reference nodes; false otherwise."
      end

      operation 1909403 "setIgnoringComments"
	public explicit_return_type "void"
	nparams 1
	  param inout name "ignoreComments" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Specifies that the parser produced by this code will
ignore comments. By default the value of this is set to <code>false
</code>.</p>

@param ignoreComments <code>boolean</code> value to ignore comments during processing"
      end

      operation 1909531 "setCoalescing"
	public explicit_return_type "void"
	nparams 1
	  param inout name "coalescing" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifies that the parser produced by this code will
convert CDATA nodes to Text nodes and append it to the
adjacent (if any) text node. By default the value of this is set to
<code>false</code>

@param coalescing  true if the parser produced will convert CDATA nodes
                   to Text nodes and append it to the adjacent (if any)
                   text node; false otherwise."
      end

      operation 1909659 "isNamespaceAware"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether or not the factory is configured to produce
parsers which are namespace aware.

@return  true if the factory is configured to produce parsers which
         are namespace aware; false otherwise."
      end

      operation 1909787 "isValidating"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether or not the factory is configured to produce
parsers which validate the XML content during parse.

@return  true if the factory is configured to produce parsers
         which validate the XML content during parse; false otherwise."
      end

      operation 1909915 "isIgnoringElementContentWhitespace"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether or not the factory is configured to produce
parsers which ignore ignorable whitespace in element content.

@return  true if the factory is configured to produce parsers
         which ignore ignorable whitespace in element content;
         false otherwise."
      end

      operation 1910043 "isExpandEntityReferences"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether or not the factory is configured to produce
parsers which expand entity reference nodes.

@return  true if the factory is configured to produce parsers
         which expand entity reference nodes; false otherwise."
      end

      operation 1910171 "isIgnoringComments"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether or not the factory is configured to produce
parsers which ignores comments.

@return  true if the factory is configured to produce parsers
         which ignores comments; false otherwise."
      end

      operation 1910299 "isCoalescing"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether or not the factory is configured to produce
parsers which converts CDATA nodes to Text nodes and appends it to
the adjacent (if any) Text node.

@return  true if the factory is configured to produce parsers
         which converts CDATA nodes to Text nodes and appends it to
         the adjacent (if any) Text node; false otherwise."
      end

      operation 1910427 "setAttribute"
	abstract public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 3399692 // String
	  param inout name "value" type class_ref 3401484 // Object
	nexceptions 1
	  exception class_ref 128283 // IllegalArgumentException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allows the user to set specific attributes on the underlying
implementation.
@param name The name of the attribute.
@param value The value of the attribute.
@exception IllegalArgumentException thrown if the underlying
implementation doesn't recognize the attribute."
      end

      operation 1910555 "getAttribute"
	abstract public return_type class_ref 3401484 // Object
	nparams 1
	  param inout name "name" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 128283 // IllegalArgumentException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Allows the user to retrieve specific attributes on the underlying
implementation.
@param name The name of the attribute.
@return value The value of the attribute.
@exception IllegalArgumentException thrown if the underlying
implementation doesn't recognize the attribute."
      end

      operation 1910683 "setFeature"
	abstract public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 3399692 // String
	  param inout name "value" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 304027 // ParserConfigurationException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Set a feature for this <code>DocumentBuilderFactory</code> and <code>DocumentBuilder</code>s created by this factory.</p>

<p>
Feature names are fully qualified {@link java.net.URI}s.
Implementations may define their own features.
An {@link ParserConfigurationException} is thrown if this <code>DocumentBuilderFactory</code> or the
<code>DocumentBuilder</code>s it creates cannot support the feature.
It is possible for an <code>DocumentBuilderFactory</code> to expose a feature value but be unable to change its state.
</p>

<p>
All implementations are required to support the {@link javax.xml.XMLConstants#FEATURE_SECURE_PROCESSING} feature.
When the feature is:</p>
<ul>
  <li>
    <code>true</code>: the implementation will limit XML processing to conform to implementation limits.
    Examples include entity expansion limits and XML Schema constructs that would consume large amounts of resources.
    If XML processing is limited for security reasons, it will be reported via a call to the registered
   {@link org.xml.sax.ErrorHandler#fatalError(SAXParseException exception)}.
    See {@link  DocumentBuilder#setErrorHandler(org.xml.sax.ErrorHandler errorHandler)}.
  </li>
  <li>
    <code>false</code>: the implementation will processing XML according to the XML specifications without
    regard to possible implementation limits.
  </li>
</ul>

@param name Feature name.
@param value Is feature state <code>true</code> or <code>false</code>.

@throws ParserConfigurationException if this <code>DocumentBuilderFactory</code> or the <code>DocumentBuilder</code>s
  it creates cannot support this feature.
@throws NullPointerException If the <code>name</code> parameter is null."
      end

      operation 1910811 "getFeature"
	abstract public explicit_return_type "boolean"
	nparams 1
	  param inout name "name" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 304027 // ParserConfigurationException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Get the state of the named feature.</p>

<p>
Feature names are fully qualified {@link java.net.URI}s.
Implementations may define their own features.
An {@link ParserConfigurationException} is thrown if this <code>DocumentBuilderFactory</code> or the
<code>DocumentBuilder</code>s it creates cannot support the feature.
It is possible for an <code>DocumentBuilderFactory</code> to expose a feature value but be unable to change its state.
</p>

@param name Feature name.

@return State of the named feature.

@throws ParserConfigurationException if this <code>DocumentBuilderFactory</code>
  or the <code>DocumentBuilder</code>s it creates cannot support this feature."
      end

      operation 1910939 "getSchema"
	public return_type class_ref 303771 // Schema
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the {@link Schema} object specified through
the {@link #setSchema(Schema schema)} method.


@throws UnsupportedOperationException
     For backward compatibility, when implementations for
     earlier versions of JAXP is used, this exception will be
     thrown.

@return
     the {@link Schema} object that was last set through
     the {@link #setSchema(Schema)} method, or null
     if the method was not invoked since a {@link DocumentBuilderFactory}
     is created.

@since 1.5"
      end

      operation 1911067 "setSchema"
	public explicit_return_type "void"
	nparams 1
	  param inout name "schema" type class_ref 303771 // Schema
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Set the {@link Schema} to be used by parsers created
from this factory.

<p>
When a {@link Schema} is non-null, a parser will use a validator
created from it to validate documents before it passes information
down to the application.

<p>When errors are found by the validator, the parser is responsible
to report them to the user-specified {@link org.xml.sax.ErrorHandler}
(or if the error handler is not set, ignore them or throw them), just
like any other errors found by the parser itself.
In other words, if the user-specified {@link org.xml.sax.ErrorHandler}
is set, it must receive those errors, and if not, they must be
treated according to the implementation specific
default error handling rules.

<p>
A validator may modify the outcome of a parse (for example by
adding default values that were missing in documents), and a parser
is responsible to make sure that the application will receive
modified DOM trees.

<p>
Initially, null is set as the {@link Schema}.

<p>
This processing will take effect even if
the {@link #isValidating()} method returns <tt>false</tt>.

<p>It is an error to use
the <code>http://java.sun.com/xml/jaxp/properties/schemaSource</code>
property and/or the <code>http://java.sun.com/xml/jaxp/properties/schemaLanguage</code>
property in conjunction with a {@link Schema} object.
Such configuration will cause a {@link ParserConfigurationException}
exception when the {@link #newDocumentBuilder()} is invoked.</p>


<h4>Note for implementors</h4>
<p>
A parser must be able to work with any {@link Schema}
implementation. However, parsers and schemas are allowed
to use implementation-specific custom mechanisms
as long as they yield the result described in the specification.

@param schema <code>Schema</code> to use or <code>null</code> to remove a schema.

@throws UnsupportedOperationException
     For backward compatibility, when implementations for
     earlier versions of JAXP is used, this exception will be
     thrown.

@since 1.5"
      end

      operation 1911195 "setXIncludeAware"
	public explicit_return_type "void"
	nparams 1
	  param in name "state" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Set state of XInclude processing.</p>

<p>If XInclude markup is found in the document instance, should it be
processed as specified in <a href=\"http://www.w3.org/TR/xinclude/\">
XML Inclusions (XInclude) Version 1.0</a>.</p>

<p>XInclude processing defaults to <code>false</code>.</p>

@param state Set XInclude processing to <code>true</code> or
  <code>false</code>

@throws UnsupportedOperationException
     For backward compatibility, when implementations for
     earlier versions of JAXP is used, this exception will be
     thrown.

@since 1.5"
      end

      operation 1911323 "isXIncludeAware"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Get state of XInclude processing.</p>

@return current state of XInclude processing

@throws UnsupportedOperationException
     For backward compatibility, when implementations for
     earlier versions of JAXP is used, this exception will be
     thrown.

@since 1.5"
      end
    end

    class 304027 "ParserConfigurationException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Indicates a serious configuration error.

@author <a href=\"mailto:Jeff.Suttor@Sun.com\">Jeff Suttor</a>
@version $Revision: 569981 $, $Date: 2007-08-26 20:59:07 -0700 (Sun, 26 Aug 2007) $"
      classrelation 542235 // <generalisation>
	relation 542235 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 542235 // <generalisation>
	  b parent class_ref 132251 // Exception
      end

      operation 1912347 "ParserConfigurationException"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new <code>ParserConfigurationException</code> with no
detail message."
      end

      operation 1912475 "ParserConfigurationException"
	public explicit_return_type ""
	nparams 1
	  param inout name "msg" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new <code>ParserConfigurationException</code> with
the <code>String</code> specified as an error message.

@param msg The error message for the exception."
      end
    end

    class 304155 "FactoryConfigurationError"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Thrown when a problem with configuration with the Parser Factories
exists. This error will typically be thrown when the class of a
parser factory specified in the system properties cannot be found
or instantiated.

@author <a href=\"mailto:Jeff.Suttor@Sun.com\">Jeff Suttor</a>
@version $Revision: 569980 $, $Date: 2007-08-26 20:58:15 -0700 (Sun, 26 Aug 2007) $"
      classrelation 541979 // <generalisation>
	relation 541979 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 541979 // <generalisation>
	  b parent class_ref 143643 // Error
      end

      classrelation 542107 // exception (<unidirectional association>)
	relation 542107 --->
	  a role_name "exception" private
	    comment "
<code>Exception</code> that represents the error.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 542107 // exception (<unidirectional association>)
	  b parent class_ref 132251 // Exception
      end

      operation 1911451 "FactoryConfigurationError"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new <code>FactoryConfigurationError</code> with no
detail message."
      end

      operation 1911579 "FactoryConfigurationError"
	public explicit_return_type ""
	nparams 1
	  param inout name "msg" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new <code>FactoryConfigurationError</code> with
the <code>String </code> specified as an error message.

@param msg The error message for the exception."
      end

      operation 1911707 "FactoryConfigurationError"
	public explicit_return_type ""
	nparams 1
	  param inout name "e" type class_ref 132251 // Exception
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new <code>FactoryConfigurationError</code> with a
given <code>Exception</code> base cause of the error.

@param e The exception to be encapsulated in a
FactoryConfigurationError."
      end

      operation 1911835 "FactoryConfigurationError"
	public explicit_return_type ""
	nparams 2
	  param inout name "e" type class_ref 132251 // Exception
	  param inout name "msg" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new <code>FactoryConfigurationError</code> with the
given <code>Exception</code> base cause and detail message.

@param e The exception to be encapsulated in a
FactoryConfigurationError
@param msg The detail message."
      end

      operation 1911963 "getMessage"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the message (if any) for this error . If there is no
message for the exception and there is an encapsulated
exception then the message of that exception, if it exists will be
returned. Else the name of the encapsulated exception will be
returned.

@return The error message."
      end

      operation 1912091 "getException"
	public return_type class_ref 132251 // Exception
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the actual exception (if any) that caused this exception to
be raised.

@return The encapsulated exception, or null if there is none."
      end
    end

    class 304283 "FilePathToURI"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      attribute 454299 "gNeedEscaping"
	class_attribute private explicit_type "boolean"
	multiplicity "[]"
	init_value " new boolean[128]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " which ASCII characters need to be escaped"
      end

      attribute 454427 "gAfterEscaping1"
	class_attribute private explicit_type "char"
	multiplicity "[]"
	init_value " new char[128]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " the first hex character if a character needs to be escaped"
      end

      attribute 454555 "gAfterEscaping2"
	class_attribute private explicit_type "char"
	multiplicity "[]"
	init_value " new char[128]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " the second hex character if a character needs to be escaped"
      end

      attribute 454683 "gHexChs"
	class_attribute private explicit_type "char"
	multiplicity "[]"
	init_value " {'0', '1', '2', '3', '4', '5', '6', '7',
                                     '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'}"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      extra_member 135963 "initialization"
	
	cpp "" ""
	java "  static {
        for (int i = 0; i <= 0x1f; i++) {
            gNeedEscaping[i] = true;
            gAfterEscaping1[i] = gHexChs[i >> 4];
            gAfterEscaping2[i] = gHexChs[i & 0xf];
        }
        gNeedEscaping[0x7f] = true;
        gAfterEscaping1[0x7f] = '7';
        gAfterEscaping2[0x7f] = 'F';
        char[] escChs = {' ', '<', '>', '#', '%', '\"', '{', '}',
                         '|', '\\\\', '^', '~', '[', ']', '`'};
        int len = escChs.length;
        char ch;
        for (int i = 0; i < len; i++) {
            ch = escChs[i];
            gNeedEscaping[ch] = true;
            gAfterEscaping1[ch] = gHexChs[ch >> 4];
            gAfterEscaping2[ch] = gHexChs[ch & 0xf];
        }
    }"
	php ""
	python ""
	idl ""
      end

      operation 1912219 "filepath2URI"
	class_operation public return_type class_ref 3399692 // String
	nparams 1
	  param inout name "path" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " To escape a file path to a URI, by using %HH to represent
 special ASCII characters: 0x00~0x1F, 0x7F, ' ', '<', '>', '#', '%'
 and '\"' and non-ASCII characters (whose value >= 128)."
      end
    end

    class 304411 "SAXParser"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Defines the API that wraps an {@link org.xml.sax.XMLReader}
implementation class. In JAXP 1.0, this class wrapped the
{@link org.xml.sax.Parser} interface, however this interface was
replaced by the {@link org.xml.sax.XMLReader}. For ease
of transition, this class continues to support the same name
and interface as well as supporting new methods.

An instance of this class can be obtained from the
{@link javax.xml.parsers.SAXParserFactory#newSAXParser()} method.
Once an instance of this class is obtained, XML can be parsed from
a variety of input sources. These input sources are InputStreams,
Files, URLs, and SAX InputSources.<p>

This static method creates a new factory instance based
on a system property setting or uses the platform default
if no property has been defined.<p>

The system property that controls which Factory implementation
to create is named <code>&quot;javax.xml.parsers.SAXParserFactory&quot;</code>.
This property names a class that is a concrete subclass of this
abstract class. If no property is defined, a platform default
will be used.</p>

As the content is parsed by the underlying parser, methods of the
given {@link org.xml.sax.HandlerBase} or the
{@link org.xml.sax.helpers.DefaultHandler} are called.<p>

Implementations of this class which wrap an underlying implementation
can consider using the {@link org.xml.sax.helpers.ParserAdapter}
class to initially adapt their SAX1 implementation to work under
this revised class.

@author <a href=\"mailto:Jeff.Suttor@Sun.com\">Jeff Suttor</a>
@version $Revision: 584483 $, $Date: 2007-10-13 19:54:48 -0700 (Sat, 13 Oct 2007) $"
      attribute 454811 "DEBUG"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 1912603 "SAXParser"
	protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Protected constructor to prevent instantiation.
Use {@link javax.xml.parsers.SAXParserFactory#newSAXParser()}.</p>"
      end

      operation 1912731 "reset"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Reset this <code>SAXParser</code> to its original configuration.</p>

<p><code>SAXParser</code> is reset to the same state as when it was created with
{@link SAXParserFactory#newSAXParser()}.
<code>reset()</code> is designed to allow the reuse of existing <code>SAXParser</code>s
thus saving resources associated with the creation of new <code>SAXParser</code>s.</p>

<p>The reset <code>SAXParser</code> is not guaranteed to have the same {@link Schema}
<code>Object</code>, e.g. {@link Object#equals(Object obj)}.  It is guaranteed to have a functionally equal
<code>Schema</code>.</p>

@since 1.5"
      end

      operation 1912859 "parse"
	public explicit_return_type "void"
	nparams 2
	  param inout name "is" type class_ref 131867 // InputStream
	  param inout name "hb" type class_ref 304539 // HandlerBase
	nexceptions 2
	  exception class_ref 303131 // SAXException
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Parse the content of the given {@link java.io.InputStream}
instance as XML using the specified {@link org.xml.sax.HandlerBase}.
<i> Use of the DefaultHandler version of this method is recommended as
the HandlerBase class has been deprecated in SAX 2.0</i>.</p>

@param is InputStream containing the content to be parsed.
@param hb The SAX HandlerBase to use.

@throws IllegalArgumentException If the given InputStream is null.
@throws SAXException If parse produces a SAX error.
@throws IOException If an IO error occurs interacting with the
  <code>InputStream</code>.

@see org.xml.sax.DocumentHandler"
      end

      operation 1912987 "parse"
	public explicit_return_type "void"
	nparams 3
	  param inout name "is" type class_ref 131867 // InputStream
	  param inout name "hb" type class_ref 304539 // HandlerBase
	  param inout name "systemId" type class_ref 3399692 // String
	nexceptions 2
	  exception class_ref 303131 // SAXException
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Parse the content of the given {@link java.io.InputStream}
instance as XML using the specified {@link org.xml.sax.HandlerBase}.
<i> Use of the DefaultHandler version of this method is recommended as
the HandlerBase class has been deprecated in SAX 2.0</i>.</p>

@param is InputStream containing the content to be parsed.
@param hb The SAX HandlerBase to use.
@param systemId The systemId which is needed for resolving relative URIs.

@throws IllegalArgumentException If the given <code>InputStream</code> is
  <code>null</code>.
@throws IOException If any IO error occurs interacting with the
  <code>InputStream</code>.
@throws SAXException If any SAX errors occur during processing.

@see org.xml.sax.DocumentHandler version of this method instead."
      end

      operation 1913115 "parse"
	public explicit_return_type "void"
	nparams 2
	  param inout name "is" type class_ref 131867 // InputStream
	  param inout name "dh" type class_ref 304667 // DefaultHandler
	nexceptions 2
	  exception class_ref 303131 // SAXException
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parse the content of the given {@link java.io.InputStream}
instance as XML using the specified
{@link org.xml.sax.helpers.DefaultHandler}.

@param is InputStream containing the content to be parsed.
@param dh The SAX DefaultHandler to use.

@throws IllegalArgumentException If the given InputStream is null.
@throws IOException If any IO errors occur.
@throws SAXException If any SAX errors occur during processing.

@see org.xml.sax.DocumentHandler"
      end

      operation 1913243 "parse"
	public explicit_return_type "void"
	nparams 3
	  param inout name "is" type class_ref 131867 // InputStream
	  param inout name "dh" type class_ref 304667 // DefaultHandler
	  param inout name "systemId" type class_ref 3399692 // String
	nexceptions 2
	  exception class_ref 303131 // SAXException
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parse the content of the given {@link java.io.InputStream}
instance as XML using the specified
{@link org.xml.sax.helpers.DefaultHandler}.

@param is InputStream containing the content to be parsed.
@param dh The SAX DefaultHandler to use.
@param systemId The systemId which is needed for resolving relative URIs.

@throws IllegalArgumentException If the given InputStream is null.
@throws IOException If any IO errors occur.
@throws SAXException If any SAX errors occur during processing.

@see org.xml.sax.DocumentHandler version of this method instead."
      end

      operation 1913371 "parse"
	public explicit_return_type "void"
	nparams 2
	  param inout name "uri" type class_ref 3399692 // String
	  param inout name "hb" type class_ref 304539 // HandlerBase
	nexceptions 2
	  exception class_ref 303131 // SAXException
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parse the content described by the giving Uniform Resource
Identifier (URI) as XML using the specified
{@link org.xml.sax.HandlerBase}.
<i> Use of the DefaultHandler version of this method is recommended as
the <code>HandlerBase</code> class has been deprecated in SAX 2.0</i>

@param uri The location of the content to be parsed.
@param hb The SAX HandlerBase to use.

@throws IllegalArgumentException If the uri is null.
@throws IOException If any IO errors occur.
@throws SAXException If any SAX errors occur during processing.

@see org.xml.sax.DocumentHandler"
      end

      operation 1913499 "parse"
	public explicit_return_type "void"
	nparams 2
	  param inout name "uri" type class_ref 3399692 // String
	  param inout name "dh" type class_ref 304667 // DefaultHandler
	nexceptions 2
	  exception class_ref 303131 // SAXException
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parse the content described by the giving Uniform Resource
Identifier (URI) as XML using the specified
{@link org.xml.sax.helpers.DefaultHandler}.

@param uri The location of the content to be parsed.
@param dh The SAX DefaultHandler to use.

@throws IllegalArgumentException If the uri is null.
@throws IOException If any IO errors occur.
@throws SAXException If any SAX errors occur during processing.

@see org.xml.sax.DocumentHandler"
      end

      operation 1913627 "parse"
	public explicit_return_type "void"
	nparams 2
	  param inout name "f" type class_ref 135579 // File
	  param inout name "hb" type class_ref 304539 // HandlerBase
	nexceptions 2
	  exception class_ref 303131 // SAXException
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parse the content of the file specified as XML using the
specified {@link org.xml.sax.HandlerBase}.
<i> Use of the DefaultHandler version of this method is recommended as
the HandlerBase class has been deprecated in SAX 2.0</i>

@param f The file containing the XML to parse
@param hb The SAX HandlerBase to use.

@throws IllegalArgumentException If the File object is null.
@throws IOException If any IO errors occur.
@throws SAXException If any SAX errors occur during processing.

@see org.xml.sax.DocumentHandler"
      end

      operation 1913755 "parse"
	public explicit_return_type "void"
	nparams 2
	  param inout name "f" type class_ref 135579 // File
	  param inout name "dh" type class_ref 304667 // DefaultHandler
	nexceptions 2
	  exception class_ref 303131 // SAXException
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parse the content of the file specified as XML using the
specified {@link org.xml.sax.helpers.DefaultHandler}.

@param f The file containing the XML to parse
@param dh The SAX DefaultHandler to use.

@throws IllegalArgumentException If the File object is null.
@throws IOException If any IO errors occur.
@throws SAXException If any SAX errors occur during processing.

@see org.xml.sax.DocumentHandler"
      end

      operation 1913883 "parse"
	public explicit_return_type "void"
	nparams 2
	  param inout name "is" type class_ref 303259 // InputSource
	  param inout name "hb" type class_ref 304539 // HandlerBase
	nexceptions 2
	  exception class_ref 303131 // SAXException
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parse the content given {@link org.xml.sax.InputSource}
as XML using the specified
{@link org.xml.sax.HandlerBase}.
<i> Use of the DefaultHandler version of this method is recommended as
the HandlerBase class has been deprecated in SAX 2.0</i>

@param is The InputSource containing the content to be parsed.
@param hb The SAX HandlerBase to use.

@throws IllegalArgumentException If the <code>InputSource</code> object
  is <code>null</code>.
@throws IOException If any IO errors occur.
@throws SAXException If any SAX errors occur during processing.

@see org.xml.sax.DocumentHandler"
      end

      operation 1914011 "parse"
	public explicit_return_type "void"
	nparams 2
	  param inout name "is" type class_ref 303259 // InputSource
	  param inout name "dh" type class_ref 304667 // DefaultHandler
	nexceptions 2
	  exception class_ref 303131 // SAXException
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parse the content given {@link org.xml.sax.InputSource}
as XML using the specified
{@link org.xml.sax.helpers.DefaultHandler}.

@param is The InputSource containing the content to be parsed.
@param dh The SAX DefaultHandler to use.

@throws IllegalArgumentException If the <code>InputSource</code> object
  is <code>null</code>.
@throws IOException If any IO errors occur.
@throws SAXException If any SAX errors occur during processing.

@see org.xml.sax.DocumentHandler"
      end

      operation 1914139 "getParser"
	abstract public return_type class_ref 304795 // Parser
	nparams 0
	nexceptions 1
	  exception class_ref 303131 // SAXException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the SAX parser that is encapsulated by the
implementation of this class.

@return The SAX parser that is encapsulated by the
        implementation of this class.

@throws SAXException If any SAX errors occur during processing."
      end

      operation 1914267 "getXMLReader"
	abstract public return_type class_ref 304923 // XMLReader
	nparams 0
	nexceptions 1
	  exception class_ref 303131 // SAXException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@link org.xml.sax.XMLReader} that is encapsulated by the
implementation of this class.

@return The XMLReader that is encapsulated by the
        implementation of this class.

@throws SAXException If any SAX errors occur during processing."
      end

      operation 1914395 "isNamespaceAware"
	abstract public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether or not this parser is configured to
understand namespaces.

@return true if this parser is configured to
        understand namespaces; false otherwise."
      end

      operation 1914523 "isValidating"
	abstract public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether or not this parser is configured to
validate XML documents.

@return true if this parser is configured to
        validate XML documents; false otherwise."
      end

      operation 1914651 "setProperty"
	abstract public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 3399692 // String
	  param inout name "value" type class_ref 3401484 // Object
	nexceptions 2
	  exception class_ref 305051 // SAXNotRecognizedException
	  exception class_ref 305179 // SAXNotSupportedException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Sets the particular property in the underlying implementation of
{@link org.xml.sax.XMLReader}.
A list of the core features and properties can be found at
<a href=\"http://sax.sourceforge.net/?selected=get-set\">
http://sax.sourceforge.net/?selected=get-set</a>.</p>

@param name The name of the property to be set.
@param value The value of the property to be set.

@throws SAXNotRecognizedException When the underlying XMLReader does
  not recognize the property name.
@throws SAXNotSupportedException When the underlying XMLReader
 recognizes the property name but doesn't support the property.

@see org.xml.sax.XMLReader#setProperty"
      end

      operation 1914779 "getProperty"
	abstract public return_type class_ref 3401484 // Object
	nparams 1
	  param inout name "name" type class_ref 3399692 // String
	nexceptions 2
	  exception class_ref 305051 // SAXNotRecognizedException
	  exception class_ref 305179 // SAXNotSupportedException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Returns the particular property requested for in the underlying
implementation of {@link org.xml.sax.XMLReader}.</p>

@param name The name of the property to be retrieved.
@return Value of the requested property.

@throws SAXNotRecognizedException When the underlying XMLReader does
   not recognize the property name.
@throws SAXNotSupportedException When the underlying XMLReader
 recognizes the property name but doesn't support the property.

@see org.xml.sax.XMLReader#getProperty"
      end

      operation 1914907 "getSchema"
	public return_type class_ref 303771 // Schema
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " <p>Get a reference to the the {@link Schema} being used by
the XML processor.</p>

<p>If no schema is being used, <code>null</code> is returned.</p>

@return {@link Schema} being used or <code>null</code>
 if none in use

@throws UnsupportedOperationException
     For backward compatibility, when implementations for
     earlier versions of JAXP is used, this exception will be
     thrown.

@since 1.5"
      end

      operation 1915035 "isXIncludeAware"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Get the XInclude processing mode for this parser.</p>

@return
     the return value of
     the {@link SAXParserFactory#isXIncludeAware()}
     when this parser was created from factory.

@throws UnsupportedOperationException
     For backward compatibility, when implementations for
     earlier versions of JAXP is used, this exception will be
     thrown.

@since 1.5

@see SAXParserFactory#setXIncludeAware(boolean)"
      end
    end

    class 305307 "SAXParserFactory"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Defines a factory API that enables applications to configure and
obtain a SAX based parser to parse XML documents.

@author <a href=\"Jeff.Suttor@Sun.com\">Jeff Suttor</a>
@version $Revision: 884950 $, $Date: 2009-11-27 10:46:18 -0800 (Fri, 27 Nov 2009) $"
      attribute 454939 "validating"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "<p>Should Parsers be validating?</p>
"
      end

      attribute 455067 "namespaceAware"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "<p>Should Parsers be namespace aware?</p>
"
      end

      operation 1915163 "SAXParserFactory"
	protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Protected constructor to force use of {@link #newInstance()}.</p>"
      end

      operation 1915291 "newInstance"
	class_operation public return_type class_ref 305307 // SAXParserFactory
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns Android's implementation of {@code SAXParserFactory}. Unlike
other Java implementations, this method does not consult system
properties, property files, or the services API.

@return a new SAXParserFactory.

@exception FactoryConfigurationError never. Included for API
    compatibility with other Java implementations."
      end

      operation 1915419 "newInstance"
	class_operation public return_type class_ref 305307 // SAXParserFactory
	nparams 2
	  param inout name "factoryClassName" type class_ref 3399692 // String
	  param inout name "classLoader" type class_ref 138523 // ClassLoader
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an instance of the named implementation of {@code SAXParserFactory}.

@throws FactoryConfigurationError if {@code factoryClassName} is not available or cannot be
    instantiated.
@since 1.6"
      end

      operation 1915547 "newSAXParser"
	abstract public return_type class_ref 304411 // SAXParser
	nparams 0
	nexceptions 2
	  exception class_ref 304027 // ParserConfigurationException
	  exception class_ref 303131 // SAXException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Creates a new instance of a SAXParser using the currently
configured factory parameters.</p>

@return A new instance of a SAXParser.

@exception ParserConfigurationException if a parser cannot
  be created which satisfies the requested configuration.
@exception SAXException for SAX errors."
      end

      operation 1915675 "setNamespaceAware"
	public explicit_return_type "void"
	nparams 1
	  param inout name "awareness" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifies that the parser produced by this code will
provide support for XML namespaces. By default the value of this is set
to <code>false</code>.

@param awareness true if the parser produced by this code will
                 provide support for XML namespaces; false otherwise."
      end

      operation 1915803 "setValidating"
	public explicit_return_type "void"
	nparams 1
	  param inout name "validating" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifies that the parser produced by this code will
validate documents as they are parsed. By default the value of this is
set to <code>false</code>.

<p>
Note that \"the validation\" here means
<a href=\"http://www.w3.org/TR/REC-xml#proc-types\">a validating
parser</a> as defined in the XML recommendation.
In other words, it essentially just controls the DTD validation.
(except the legacy two properties defined in JAXP 1.2.
See <a href=\"#validationCompatibility\">here</a> for more details.)
</p>

<p>
To use modern schema languages such as W3C XML Schema or
RELAX NG instead of DTD, you can configure your parser to be
a non-validating parser by leaving the {@link #setValidating(boolean)}
method <tt>false</tt>, then use the {@link #setSchema(Schema)}
method to associate a schema to a parser.
</p>

@param validating true if the parser produced by this code will
                  validate documents as they are parsed; false otherwise."
      end

      operation 1915931 "isNamespaceAware"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether or not the factory is configured to produce
parsers which are namespace aware.

@return true if the factory is configured to produce
        parsers which are namespace aware; false otherwise."
      end

      operation 1916059 "isValidating"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether or not the factory is configured to produce
parsers which validate the XML content during parse.

@return true if the factory is configured to produce parsers which validate
        the XML content during parse; false otherwise."
      end

      operation 1916187 "setFeature"
	abstract public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 3399692 // String
	  param inout name "value" explicit_type "boolean"
	nexceptions 3
	  exception class_ref 304027 // ParserConfigurationException
	  exception class_ref 305051 // SAXNotRecognizedException
	  exception class_ref 305179 // SAXNotSupportedException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
<p>Sets the particular feature in the underlying implementation of
org.xml.sax.XMLReader.
A list of the core features and properties can be found at
<a href=\"http://www.saxproject.org/\">http://www.saxproject.org/</a></p>

<p>All implementations are required to support the {@link javax.xml.XMLConstants#FEATURE_SECURE_PROCESSING} feature.
When the feature is</p>
<ul>
  <li>
    <code>true</code>: the implementation will limit XML processing to conform to implementation limits.
    Examples include entity expansion limits and XML Schema constructs that would consume large amounts of resources.
    If XML processing is limited for security reasons, it will be reported via a call to the registered
    {@link org.xml.sax.ErrorHandler#fatalError(SAXParseException exception)}.
    See {@link SAXParser} <code>parse</code> methods for handler specification.
  </li>
  <li>
    When the feature is <code>false</code>, the implementation will processing XML according to the XML specifications without
    regard to possible implementation limits.
  </li>
</ul>

@param name The name of the feature to be set.
@param value The value of the feature to be set.

@exception ParserConfigurationException if a parser cannot
    be created which satisfies the requested configuration.
@exception SAXNotRecognizedException When the underlying XMLReader does
           not recognize the property name.
@exception SAXNotSupportedException When the underlying XMLReader
           recognizes the property name but doesn't support the
           property.
@throws NullPointerException If the <code>name</code> parameter is null.

@see org.xml.sax.XMLReader#setFeature"
      end

      operation 1916315 "getFeature"
	abstract public explicit_return_type "boolean"
	nparams 1
	  param inout name "name" type class_ref 3399692 // String
	nexceptions 3
	  exception class_ref 304027 // ParserConfigurationException
	  exception class_ref 305051 // SAXNotRecognizedException
	  exception class_ref 305179 // SAXNotSupportedException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "
<p>Returns the particular property requested for in the underlying
implementation of org.xml.sax.XMLReader.</p>

@param name The name of the property to be retrieved.

@return Value of the requested property.

@exception ParserConfigurationException if a parser cannot be created which satisfies the requested configuration.
@exception SAXNotRecognizedException When the underlying XMLReader does not recognize the property name.
@exception SAXNotSupportedException When the underlying XMLReader recognizes the property name but doesn't support the property.

@see org.xml.sax.XMLReader#getProperty"
      end

      operation 1916443 "getSchema"
	public return_type class_ref 303771 // Schema
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the {@link Schema} object specified through
the {@link #setSchema(Schema schema)} method.


@throws UnsupportedOperationException
     For backward compatibility, when implementations for
     earlier versions of JAXP is used, this exception will be
     thrown.

@return
     the {@link Schema} object that was last set through
     the {@link #setSchema(Schema)} method, or null
     if the method was not invoked since a {@link SAXParserFactory}
     is created.

@since 1.5"
      end

      operation 1916571 "setSchema"
	public explicit_return_type "void"
	nparams 1
	  param inout name "schema" type class_ref 303771 // Schema
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Set the {@link Schema} to be used by parsers created
from this factory.</p>

<p>When a {@link Schema} is non-null, a parser will use a validator
created from it to validate documents before it passes information
down to the application.</p>

<p>When warnings/errors/fatal errors are found by the validator, the parser must
handle them as if those errors were found by the parser itself.
In other words, if the user-specified {@link org.xml.sax.ErrorHandler}
is set, it must receive those errors, and if not, they must be
treated according to the implementation specific
default error handling rules.

<p>A validator may modify the SAX event stream (for example by
adding default values that were missing in documents), and a parser
is responsible to make sure that the application will receive
those modified event stream.</p>

<p>Initially, <code>null</code> is set as the {@link Schema}.</p>

<p>This processing will take effect even if
the {@link #isValidating()} method returns <code>false</code>.

<p>It is an error to use
the <code>http://java.sun.com/xml/jaxp/properties/schemaSource</code>
property and/or the <code>http://java.sun.com/xml/jaxp/properties/schemaLanguage</code>
property in conjunction with a non-null {@link Schema} object.
Such configuration will cause a {@link SAXException}
exception when those properties are set on a {@link SAXParser}.</p>

<h4>Note for implementors</h4>
<p>
A parser must be able to work with any {@link Schema}
implementation. However, parsers and schemas are allowed
to use implementation-specific custom mechanisms
as long as they yield the result described in the specification.
</p>

@param schema <code>Schema</code> to use, <code>null</code> to remove a schema.

@throws UnsupportedOperationException
     For backward compatibility, when implementations for
     earlier versions of JAXP is used, this exception will be
     thrown.

@since 1.5"
      end

      operation 1916699 "setXIncludeAware"
	public explicit_return_type "void"
	nparams 1
	  param in name "state" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Set state of XInclude processing.</p>

<p>If XInclude markup is found in the document instance, should it be
processed as specified in <a href=\"http://www.w3.org/TR/xinclude/\">
XML Inclusions (XInclude) Version 1.0</a>.</p>

<p>XInclude processing defaults to <code>false</code>.</p>

@param state Set XInclude processing to <code>true</code> or
  <code>false</code>

@throws UnsupportedOperationException
     For backward compatibility, when implementations for
     earlier versions of JAXP is used, this exception will be
     thrown.

@since 1.5"
      end

      operation 1916827 "isXIncludeAware"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Get state of XInclude processing.</p>

@return current state of XInclude processing

@throws UnsupportedOperationException
     For backward compatibility, when implementations for
     earlier versions of JAXP is used, this exception will be
     thrown.

@since 1.5"
      end
    end
  end

  deploymentview 134171 "parsers"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 258331 "DocumentBuilder"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import javax.xml.validation.Schema;
import org.w3c.dom.DOMImplementation;
import org.w3c.dom.Document;
import org.xml.sax.EntityResolver;
import org.xml.sax.ErrorHandler;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;
${definition}"
      associated_classes
	class_ref 198811 // DocumentBuilder
      end
      comment "Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

 $Id: DocumentBuilder.java 584483 2007-10-14 02:54:48Z mrglavas $"
    end

    artifact 258459 "DocumentBuilderFactory"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import javax.xml.validation.Schema;
import org.apache.harmony.xml.parsers.DocumentBuilderFactoryImpl;
${definition}"
      associated_classes
	class_ref 303899 // DocumentBuilderFactory
      end
      comment "Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

 $Id: DocumentBuilderFactory.java 884950 2009-11-27 18:46:18Z mrglavas $"
    end

    artifact 258587 "FactoryConfigurationError"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 304155 // FactoryConfigurationError
      end
      comment "Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

 $Id: FactoryConfigurationError.java 569980 2007-08-27 03:58:15Z mrglavas $"
    end

    artifact 258715 "FilePathToURI"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 304283 // FilePathToURI
      end
      comment "Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 258843 "ParserConfigurationException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 304027 // ParserConfigurationException
      end
      comment "Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

 $Id: ParserConfigurationException.java 569981 2007-08-27 03:59:07Z mrglavas $"
    end

    artifact 258971 "SAXParser"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import javax.xml.validation.Schema;
import org.xml.sax.HandlerBase;
import org.xml.sax.InputSource;
import org.xml.sax.Parser;
import org.xml.sax.SAXException;
import org.xml.sax.SAXNotRecognizedException;
import org.xml.sax.SAXNotSupportedException;
import org.xml.sax.XMLReader;
import org.xml.sax.helpers.DefaultHandler;
${definition}"
      associated_classes
	class_ref 304411 // SAXParser
      end
      comment "Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

 $Id: SAXParser.java 584483 2007-10-14 02:54:48Z mrglavas $"
    end

    artifact 259099 "SAXParserFactory"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import javax.xml.validation.Schema;
import org.apache.harmony.xml.parsers.SAXParserFactoryImpl;
import org.xml.sax.SAXException;
import org.xml.sax.SAXNotRecognizedException;
import org.xml.sax.SAXNotSupportedException;
${definition}"
      associated_classes
	class_ref 305307 // SAXParserFactory
      end
      comment "Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

 $Id: SAXParserFactory.java 884950 2009-11-27 18:46:18Z mrglavas $"
    end
  end
end
