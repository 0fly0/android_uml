class Random
!!!877083.java!!!	Random()
        // Note: Using identityHashCode() to be hermetic wrt subclasses.
        setSeed(System.currentTimeMillis() + System.identityHashCode(this));
!!!877211.java!!!	Random(in seed : long)
        setSeed(seed);
!!!877339.java!!!	next(in bits : int) : int
        seed = (seed * multiplier + 0xbL) & ((1L << 48) - 1);
        return (int) (seed >>> (48 - bits));
!!!877467.java!!!	nextBoolean() : boolean
        return next(1) != 0;
!!!877595.java!!!	nextBytes(inout buf : byte) : void
        int rand = 0, count = 0, loop = 0;
        while (count < buf.length) {
            if (loop == 0) {
                rand = nextInt();
                loop = 3;
            } else {
                loop--;
            }
            buf[count++] = (byte) rand;
            rand >>= 8;
        }
!!!877723.java!!!	nextDouble() : double
        return ((((long) next(26) << 27) + next(27)) / (double) (1L << 53));
!!!877851.java!!!	nextFloat() : float
        return (next(24) / 16777216f);
!!!877979.java!!!	nextGaussian() : double
        if (haveNextNextGaussian) {
            haveNextNextGaussian = false;
            return nextNextGaussian;
        }

        double v1, v2, s;
        do {
            v1 = 2 * nextDouble() - 1;
            v2 = 2 * nextDouble() - 1;
            s = v1 * v1 + v2 * v2;
        } while (s >= 1 || s == 0);

        // The specification says this uses StrictMath.
        double multiplier = StrictMath.sqrt(-2 * StrictMath.log(s) / s);
        nextNextGaussian = v2 * multiplier;
        haveNextNextGaussian = true;
        return v1 * multiplier;
!!!878107.java!!!	nextInt() : int
        return next(32);
!!!878235.java!!!	nextInt(in n : int) : int
        if (n <= 0) {
            throw new IllegalArgumentException("n <= 0: " + n);
        }
        if ((n & -n) == n) {
            return (int) ((n * (long) next(31)) >> 31);
        }
        int bits, val;
        do {
            bits = next(31);
            val = bits % n;
        } while (bits - val + (n - 1) < 0);
        return val;
!!!878363.java!!!	nextLong() : long
        return ((long) next(32) << 32) + next(32);
!!!878491.java!!!	setSeed(in seed : long) : void
        this.seed = (seed ^ multiplier) & ((1L << 48) - 1);
        haveNextNextGaussian = false;
