class VideoEditorAudioEncoderSource
!!!1805964.cpp!!!	Create(in format : sp<MetaData>) : sp<VideoEditorAudioEncoderSource>

    ALOGV("VideoEditorAudioEncoderSource::Create");
    sp<VideoEditorAudioEncoderSource> aSource =
        new VideoEditorAudioEncoderSource(format);

    return aSource;
!!!1806092.cpp!!!	start(inout meta : MetaData = NULL) : status_t
    status_t err = OK;

    ALOGV("VideoEditorAudioEncoderSource::start");

    if( CREATED != mState ) {
        ALOGV("VideoEditorAudioEncoderSource::start ERROR : invalid state %d",
            mState);
        return UNKNOWN_ERROR;
    }

    mState = STARTED;

cleanUp:
    ALOGV("VideoEditorAudioEncoderSource::start END (0x%x)", err);
    return err;
!!!1806220.cpp!!!	stop() : status_t
    status_t err = OK;

    ALOGV("VideoEditorAudioEncoderSource::stop");

    if( STARTED != mState ) {
        ALOGV("VideoEditorAudioEncoderSource::stop ERROR: invalid state %d",
            mState);
        return UNKNOWN_ERROR;
    }

    int32_t i = 0;
    MediaBufferChain* tmpLink = NULL;
    while( mFirstBufferLink ) {
        i++;
        tmpLink = mFirstBufferLink;
        mFirstBufferLink = mFirstBufferLink->nextLink;
        delete tmpLink;
    }
    ALOGV("VideoEditorAudioEncoderSource::stop : %d buffer remained", i);
    mFirstBufferLink = NULL;
    mLastBufferLink = NULL;

    mState = CREATED;

    ALOGV("VideoEditorAudioEncoderSource::stop END (0x%x)", err);
    return err;
!!!1806348.cpp!!!	getFormat() : sp<MetaData>
    ALOGV("VideoEditorAudioEncoderSource::getFormat");
    return mEncFormat;
!!!1806476.cpp!!!	read(inout buffer : MediaBuffer, in options : ReadOptions = NULL) : status_t
    MediaSource::ReadOptions readOptions;
    status_t err = OK;
    MediaBufferChain* tmpLink = NULL;

    ALOGV("VideoEditorAudioEncoderSource::read");

    if ( STARTED != mState ) {
        ALOGV("VideoEditorAudioEncoderSource::read ERROR : invalid state %d",
            mState);
        return UNKNOWN_ERROR;
    }

    if( NULL == mFirstBufferLink ) {
        *buffer = NULL;
        ALOGV("VideoEditorAudioEncoderSource::read : EOS");
        return ERROR_END_OF_STREAM;
    }
    *buffer = mFirstBufferLink->buffer;

    tmpLink = mFirstBufferLink;
    mFirstBufferLink = mFirstBufferLink->nextLink;
    if( NULL == mFirstBufferLink ) {
        mLastBufferLink = NULL;
    }
    delete tmpLink;
    mNbBuffer--;

    ALOGV("VideoEditorAudioEncoderSource::read END (0x%x)", err);
    return err;
!!!1806604.cpp!!!	storeBuffer(inout buffer : MediaBuffer) : int32_t
    status_t err = OK;

    ALOGV("VideoEditorAudioEncoderSource::storeBuffer");

    MediaBufferChain* newLink = new MediaBufferChain;
    newLink->buffer = buffer;
    newLink->nextLink = NULL;
    if( NULL != mLastBufferLink ) {
        mLastBufferLink->nextLink = newLink;
    } else {
        mFirstBufferLink = newLink;
    }
    mLastBufferLink = newLink;
    mNbBuffer++;

    ALOGV("VideoEditorAudioEncoderSource::storeBuffer END");
    return mNbBuffer;
!!!1806732.cpp!!!	~VideoEditorAudioEncoderSource()
    ALOGV("VideoEditorAudioEncoderSource::~VideoEditorAudioEncoderSource");

    if( STARTED == mState ) {
        stop();
    }
!!!1806860.cpp!!!	VideoEditorAudioEncoderSource(in format : sp<MetaData>)
    ALOGV("VideoEditorAudioEncoderSource::VideoEditorAudioEncoderSource");
