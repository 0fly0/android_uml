format 74
"jni" // framework::base::media::mca::filterfw::jni
  revision 2
  modified_by 12 "shchen"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  cpp_h_dir "/home/shchen/work/jellybean/framework/base/media/mca/filterfw/jni/"
  cpp_src_dir "/home/shchen/work/jellybean/framework/base/media/mca/filterfw/jni/"
  classview 147980 "jni"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 452236 "JavaObject"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " Wrapper around a java object pointer, which includes the environment
 pointer in which the object \"lives\". This is used for passing down Java
 objects from the Java layer to C++.
 While an instance of this class does not own the underlying java object, it
 does hold a global reference to it, so that the Java garbage collector does
 not destroy it. It uses reference counting to determine when it can destroy
 the reference.
 TODO: Add multi-thread support!"
      operation 1163148 "JavaObject"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}
    : object_(JNI_NULL),
      ref_count_(new int(0)) ${throw}{
  ${body}}
"
	
	
	
	
	comment " Creates a NULL JavaObject."
      end

      operation 1163276 "JavaObject"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 2
	  param in name "object" explicit_type "jobject"
	  param inout name "env" explicit_type "JNIEnv"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}${)}
    : object_(NULL),
      ref_count_(new int(0)) ${throw}{
  ${body}}
"
	
	
	
	
	comment " Creates a wrapper around the given object in the given JNI environment."
      end

      operation 1163404 "JavaObject"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 1
	  param in name "java_obj" type class_ref 452236 // JavaObject
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}const ${t0} & ${p0}${)}
    : object_(java_obj.object_),
      ref_count_(java_obj.ref_count_) ${throw}{
  ${body}}
"
	
	
	
	
	comment " Copy constructor."
      end

      operation 1163532 "~JavaObject"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
	comment " Destructor."
      end

      operation 1163660 "operator ="
	preserve_cpp_body_indent public return_type class_ref 452236 // JavaObject
	nparams 1
	  param in name "java_obj" type class_ref 452236 // JavaObject
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} & ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " Assignment operator."
      end

      operation 1163788 "object"
	const cpp_inline public explicit_return_type "jobject"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
      return object_;
    };
"
	
	
	
	
	comment " Access to the object (non-const as JNI functions are non-const)."
      end

      operation 1163916 "Reset"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " Resets this object to the NULL JavaObject."
      end

      operation 1164044 "Retain"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " Retain the instance, i.e. increase reference count."
      end

      operation 1164172 "Release"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " Release the instance, i.e. decrease reference count."
      end

      attribute 1052044 "object_"
	private explicit_type "jobject"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1052172 "ref_count_"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 452364 "ObjectPool"
      visibility package 
      nformals 1
      formal name "T" type "class" explicit_default_value ""
        explicit_extends ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " ObjectPool template class. This class keeps track of C++ instances that are
 coupled to Java objects. This is done by using an \"id\" field in the Java
 object, which is then mapped to the correct instance here. It should not be
 necessary to use this class directly. Instead, the convenience functions
 below can be used."
      operation 1164300 "Setup"
	class_operation cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "jclass_name" explicit_type "std::string"
	  param in name "id_fld_name" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
      instance_ = new ObjectPool<T>(jclass_name, id_fld_name);
    };
"
	
	
	
	
	comment " Create a new ObjectPool for a specific object type. Pass the path to the
 Java equivalent class of the C++ class, and the name of the java member
 field that will store the object's ID."
      end

      operation 1164428 "Instance"
	class_operation cpp_inline public return_type class_ref 452364 // ObjectPool
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} {
      return instance_;
    };
"
	
	
	
	
	comment " Return the shared instance to this type's pool."
      end

      operation 1164556 "TearDown"
	class_operation cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
      delete instance_;
    };
"
	
	
	
	
	comment " Delete this type's pool."
      end

      operation 1164684 "RegisterObject"
	cpp_inline public explicit_return_type "int"
	nparams 2
	  param inout name "object" explicit_type "T"
	  param in name "owns" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
      const int id = next_id_;
      objects_[id] = object;
      owns_[id] = owns;
      ++next_id_;
      return id;
    };
"
	
	
	
	
	comment " Register a new C++ object with the pool. This does not affect the Java
 layer. Use WrapObject() instead to perform the necessary Java-side
 assignments. Pass true to owns if the object pool owns the object."
      end

      operation 1164812 "ObjectWithID"
	const cpp_inline public explicit_return_type "T"
	nparams 1
	  param in name "obj_id" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
      typename CObjMap::const_iterator iter = objects_.find(obj_id);
      return iter == objects_.end() ? NULL : iter->second;
    };
"
	
	
	
	
	comment " Return the object in the pool with the specified ID."
      end

      operation 1164940 "GetObjectID"
	cpp_inline public explicit_return_type "int"
	nparams 2
	  param inout name "env" explicit_type "JNIEnv"
	  param in name "j_object" explicit_type "jobject"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
      jclass cls = env->GetObjectClass(j_object);
      jfieldID id_field = env->GetFieldID(cls, id_field_name_.c_str(), \"I\");
      const int result = env->GetIntField(j_object, id_field);
      env->DeleteLocalRef(cls);
      return result;
    };
"
	
	
	
	
	comment " Get the ID of a Java object. This ID can be used to look-up the C++
 object."
      end

      operation 1165068 "WrapObject"
	cpp_inline public explicit_return_type "bool"
	nparams 4
	  param inout name "c_object" explicit_type "T"
	  param inout name "env" explicit_type "JNIEnv"
	  param in name "j_object" explicit_type "jobject"
	  param in name "owns" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract} {
      const int id = RegisterObject(c_object, owns);
      jclass cls = env->GetObjectClass(j_object);
      jfieldID id_field = env->GetFieldID(cls, id_field_name_.c_str(), \"I\");
      env->SetIntField(j_object, id_field, id);
      env->DeleteLocalRef(cls);
      return true;
    };
"
	
	
	
	
	comment " Take a C++ object and wrap it with a given Java object. This will
 essentially set the ID member of the Java object to the ID of the C++
 object. Pass true to owns if the object pool owns the object."
      end

      operation 1165196 "DeleteObjectWithID"
	cpp_inline public explicit_return_type "bool"
	nparams 1
	  param in name "obj_id" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
      typename CObjMap::iterator iter = objects_.find(obj_id);
      const bool found = iter != objects_.end();
      if (found) {
        if (owns_[obj_id])
          delete iter->second;
        objects_.erase(iter);
      }
      return found;
    };
"
	
	
	
	
	comment " Remove the object with the given ID from this pool, and delete it. This
 does not affect the Java layer."
      end

      operation 1165324 "CreateJavaObject"
	cpp_inline public explicit_return_type "jobject"
	nparams 1
	  param inout name "env" explicit_type "JNIEnv"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
      jclass cls = env->FindClass(jclass_name_.c_str());
      jmethodID constructor = env->GetMethodID(
        cls,
        \"<init>\",
        \"(Landroid/filterfw/core/NativeAllocatorTag;)V\");
      jobject result = env->NewObject(cls, constructor, JNI_NULL);
      env->DeleteLocalRef(cls);
      return result;
    };
"
	
	
	
	
	comment " Instantiates a new java object for this class. The Java class must have
 a default constructor for this to succeed."
      end

      operation 1165452 "GetObjectCount"
	const cpp_inline public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
      return objects_.size();
    };
"
	
	
	
	
      end

      operation 1165580 "GetJavaClassName"
	const cpp_inline public explicit_return_type "std::string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract} {
      return jclass_name_;
    };
"
	
	
	
	
      end

      operation 1165708 "ObjectPool"
	cpp_inline private explicit_return_type ""
	nparams 2
	  param in name "jclass_name" explicit_type "std::string"
	  param in name "id_fld_name" explicit_type "std::string"
	cpp_decl "    ${comment}${inline}explicit ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${volatile}${throw} : jclass_name_(jclass_name),
        id_field_name_(id_fld_name),
        next_id_(0) { };
"
	
	
	
	
      end

      class 452492 "CObjMap"
	visibility package stereotype "typedef" explicit_base_type "std::hash_map<int, T*>"
	cpp_decl "${comment}typedef ${type} ${name};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
      end

      class 452620 "FlagMap"
	visibility package stereotype "typedef" explicit_base_type "std::hash_map<int, bool>"
	cpp_decl "${comment}typedef ${type} ${name};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
      end

      classrelation 925836 // instance_ (<unidirectional association>)
	relation 925836 --->
	  a role_name "instance_" init_value "= NULL" class_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 925836 // instance_ (<unidirectional association>)
	  b parent class_ref 452364 // ObjectPool
      end

      attribute 1052300 "jclass_name_"
	private explicit_type "std::string"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1052428 "id_field_name_"
	private explicit_type "std::string"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1052556 "next_id_"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 925964 // objects_ (<directional composition>)
	relation 925964 *-->
	  a role_name "objects_" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 925964 // objects_ (<directional composition>)
	  b parent class_ref 452492 // CObjMap
      end

      classrelation 926092 // owns_ (<directional composition>)
	relation 926092 *-->
	  a role_name "owns_" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 926092 // owns_ (<directional composition>)
	  b parent class_ref 452620 // FlagMap
      end
    end

    class 650252 "NativeWindowHandle"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 1355916 // <generalisation>
	relation 1355916 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 1355916 // <generalisation>
	  b parent class_ref 453644 // WindowHandle
      end

      operation 1994380 "NativeWindowHandle"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param inout name "window" type class_ref 175628 // ANativeWindow
	cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}${)}${volatile}${throw} : window_(window) {
    };
"
	
	
	
	
      end

      operation 1994508 "~NativeWindowHandle"
	cpp_virtual cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {
    };
"
	
	
	
	
      end

      operation 1994636 "Destroy"
	cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
      ALOGI(\"Releasing ANativeWindow!\");
      ANativeWindow_release(window_);
    };
"
	
	
	
	
      end

      operation 1994764 "InternalHandle"
	const cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} {
      return window_;
    };
"
	
	
	
	
      end

      operation 1994892 "InternalHandle"
	cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} {
      return window_;
    };
"
	
	
	
	
      end

      classrelation 1356044 // window_ (<unidirectional association>)
	relation 1356044 --->
	  a role_name "window_" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 1356044 // window_ (<unidirectional association>)
	  b parent class_ref 175628 // ANativeWindow
      end
    end

    class 650380 "Pixel"
      visibility package stereotype "union"
      cpp_decl "${comment}${template}union ${name} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      attribute 1744268 "value"
	public explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1744396 "rgba"
	public explicit_type "uint8_t"
	multiplicity "[4]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end
  end

  deploymentview 145548 "jni"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 209676 "jni_util"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 452236 // JavaObject
	class_ref 452364 // ObjectPool
      end
    end

    artifact 291084 "NativeWindowHandle"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 650252 // NativeWindowHandle
      end
    end

    artifact 291212 "Pixel"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 650380 // Pixel
      end
    end
  end
end
