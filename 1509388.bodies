class Float4Param
!!!9265804.java!!!	Float4Param(in name : String)
        super(name);
!!!9265932.java!!!	Float4Param(in name : String, in x : float)
        super(name);
        set(x, 0, 0, 0);
!!!9266060.java!!!	Float4Param(in name : String, in x : float, in y : float)
        super(name);
        set(x, y, 0, 0);
!!!9266188.java!!!	Float4Param(in name : String, in x : float, in y : float, in z : float)
        super(name);
        set(x, y, z, 0);
!!!9266316.java!!!	Float4Param(in name : String, in x : float, in y : float, in z : float, in w : float)
        super(name);
        set(x, y, z, w);
!!!9266444.java!!!	set(in x : float, in y : float, in z : float, in w : float) : void
        mData.float_value.x = x;
        mData.float_value.y = y;
        mData.float_value.z = z;
        mData.float_value.w = w;
        if (mField != null) {
            mField.set_float_value(0, mData.float_value, true);
        }
        incTimestamp();
!!!9266572.java!!!	setValue(inout v : Float4) : void
        set(v.x, v.y, v.z, v.w);
!!!9266700.java!!!	getValue() : Float4
        return mData.float_value;
!!!9266828.java!!!	setLight(inout l : LightBase) : void
        mLight = l;
        if (mField != null) {
            mData.light = mLight.getRSData().getAllocation();
            mField.set_light(0, mData.light, true);
        }
        incTimestamp();
!!!9266956.java!!!	findLight(in property : String) : boolean
        String indexStr = mParamName.substring(property.length() + 1);
        if (indexStr == null) {
            Log.e(TAG, "Invalid light index.");
            return false;
        }
        int index = Integer.parseInt(indexStr);
        if (index == -1) {
            return false;
        }
        Scene parentScene = SceneManager.getInstance().getActiveScene();
        ArrayList<LightBase> allLights = parentScene.getLights();
        if (index >= allLights.size()) {
            return false;
        }
        mLight = allLights.get(index);
        if (mLight == null) {
            return false;
        }
        return true;
!!!9267084.java!!!	getTypeFromName() : int
        int paramType = ScriptC_export.const_ShaderParam_FLOAT4_DATA;
        if (mParamName.equalsIgnoreCase(cameraPos)) {
            paramType = ScriptC_export.const_ShaderParam_FLOAT4_CAMERA_POS;
        } else if(mParamName.equalsIgnoreCase(cameraDir)) {
            paramType = ScriptC_export.const_ShaderParam_FLOAT4_CAMERA_DIR;
        } else if(mParamName.startsWith(lightColor) && findLight(lightColor)) {
            paramType = ScriptC_export.const_ShaderParam_FLOAT4_LIGHT_COLOR;
        } else if(mParamName.startsWith(lightPos) && findLight(lightPos)) {
            paramType = ScriptC_export.const_ShaderParam_FLOAT4_LIGHT_POS;
        } else if(mParamName.startsWith(lightDir) && findLight(lightDir)) {
            paramType = ScriptC_export.const_ShaderParam_FLOAT4_LIGHT_DIR;
        }
        return paramType;
!!!9267212.java!!!	initLocalData() : void
        mData.type = getTypeFromName();
        if (mCamera != null) {
            mData.camera = mCamera.getRSData().getAllocation();
        }
        if (mLight != null) {
            mData.light = mLight.getRSData().getAllocation();
        }
