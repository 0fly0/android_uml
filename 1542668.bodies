class BridgeRenderSession
!!!9489676.java!!!	getResult() : Result
        return mLastResult;
!!!9489804.java!!!	getImage() : BufferedImage
        return mSession.getImage();
!!!9489932.java!!!	isAlphaChannelImage() : boolean
        return mSession.isAlphaChannelImage();
!!!9490060.java!!!	getRootViews() : List<ViewInfo>
        return mSession.getViewInfos();
!!!9490188.java!!!	getDefaultProperties(inout viewObject : Object) : Map<String, String>
        return mSession.getDefaultProperties(viewObject);
!!!9490316.java!!!	getProperty(inout objectView : Object, in propertyName : String) : Result
        // pass
        return super.getProperty(objectView, propertyName);
!!!9490444.java!!!	setProperty(inout objectView : Object, in propertyName : String, in propertyValue : String) : Result
        // pass
        return super.setProperty(objectView, propertyName, propertyValue);
!!!9490572.java!!!	render(in timeout : long) : Result
        try {
            Bridge.prepareThread();
            mLastResult = mSession.acquire(timeout);
            if (mLastResult.isSuccess()) {
                mLastResult = mSession.render(false /*freshRender*/);
            }
        } finally {
            mSession.release();
            Bridge.cleanupThread();
        }

        return mLastResult;
!!!9490700.java!!!	animate(inout targetObject : Object, in animationName : String, inout isFrameworkAnimation : boolean, inout listener : IAnimationListener) : Result
        try {
            Bridge.prepareThread();
            mLastResult = mSession.acquire(RenderParams.DEFAULT_TIMEOUT);
            if (mLastResult.isSuccess()) {
                mLastResult = mSession.animate(targetObject, animationName, isFrameworkAnimation,
                        listener);
            }
        } finally {
            mSession.release();
            Bridge.cleanupThread();
        }

        return mLastResult;
!!!9490828.java!!!	insertChild(inout parentView : Object, inout childXml : ILayoutPullParser, in index : int, inout listener : IAnimationListener) : Result
        if (parentView instanceof ViewGroup == false) {
            throw new IllegalArgumentException("parentView is not a ViewGroup");
        }

        try {
            Bridge.prepareThread();
            mLastResult = mSession.acquire(RenderParams.DEFAULT_TIMEOUT);
            if (mLastResult.isSuccess()) {
                mLastResult = mSession.insertChild((ViewGroup) parentView, childXml, index,
                        listener);
            }
        } finally {
            mSession.release();
            Bridge.cleanupThread();
        }

        return mLastResult;
!!!9490956.java!!!	moveChild(inout parentView : Object, inout childView : Object, in index : int, inout layoutParams : Map<String, String>, inout listener : IAnimationListener) : Result
        if (parentView instanceof ViewGroup == false) {
            throw new IllegalArgumentException("parentView is not a ViewGroup");
        }
        if (childView instanceof View == false) {
            throw new IllegalArgumentException("childView is not a View");
        }

        try {
            Bridge.prepareThread();
            mLastResult = mSession.acquire(RenderParams.DEFAULT_TIMEOUT);
            if (mLastResult.isSuccess()) {
                mLastResult = mSession.moveChild((ViewGroup) parentView, (View) childView, index,
                        layoutParams, listener);
            }
        } finally {
            mSession.release();
            Bridge.cleanupThread();
        }

        return mLastResult;
!!!9491084.java!!!	removeChild(inout childView : Object, inout listener : IAnimationListener) : Result
        if (childView instanceof View == false) {
            throw new IllegalArgumentException("childView is not a View");
        }

        try {
            Bridge.prepareThread();
            mLastResult = mSession.acquire(RenderParams.DEFAULT_TIMEOUT);
            if (mLastResult.isSuccess()) {
                mLastResult = mSession.removeChild((View) childView, listener);
            }
        } finally {
            mSession.release();
            Bridge.cleanupThread();
        }

        return mLastResult;
!!!9491340.java!!!	BridgeRenderSession(inout scene : RenderSessionImpl, inout lastResult : Result)
        mSession = scene;
        if (scene != null) {
            mSession.setScene(this);
        }
        mLastResult = lastResult;
