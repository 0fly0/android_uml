format 74
"util" // framework::base::cmds::am::src::com::android::wifidisplay::util
  revision 1
  modified_by 12 "shchen"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "/home/shchen/work/jellybean/vendor/marvell/generic/packages/apps/WiFiDisplay/WiFiDisplayApplication/src/com/android/wifidisplay/util/"
  java_package "com.android.wifidisplay.util"
  classview 290060 "util"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 2984332 "StateMachine"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "{@hide}

<p>
The state machine defined here is a hierarchical state machine which
processes messages and can have states arranged hierarchically.
</p>

<p>
A state is a <code>State</code> object and must implement
<code>processMessage</code> and optionally <code>enter/exit/getName</code>.
The enter/exit methods are equivalent to the construction and destruction in
Object Oriented programming and are used to perform initialization and
cleanup of the state respectively. The <code>getName</code> method returns
the name of the state the default implementation returns the class name it
may be desirable to have this return the name of the state instance name
instead. In particular if a particular state class has multiple instances.
</p>

<p>
When a state machine is created <code>addState</code> is used to build the
hierarchy and <code>setInitialState</code> is used to identify which of these
is the initial state. After construction the programmer calls
<code>start</code> which initializes the state machine and calls
<code>enter</code> for all of the initial state's hierarchy, starting at its
eldest parent. For example given the simple state machine below after start
is called mP1.enter will have been called and then mS1.enter.
</p>
<code>
mP1
/   \\
mS2   mS1 ----> initial state
</code>
<p>
After the state machine is created and started, messages are sent to a state
machine using <code>sendMessage</code> and the messages are created using
<code>obtainMessage</code>. When the state machine receives a message the
current state's <code>processMessage</code> is invoked. In the above example
mS1.processMessage will be invoked first. The state may use
<code>transitionTo</code> to change the current state to a new state
</p>

<p>
Each state in the state machine may have a zero or one parent states and if a
child state is unable to handle a message it may have the message processed
by its parent by returning false or NOT_HANDLED. If a message is never
processed <code>unhandledMessage</code> will be invoked to give one last
chance for the state machine to process the message.
</p>

<p>
When all processing is completed a state machine may choose to call
<code>transitionToHaltingState</code>. When the current
<code>processingMessage</code> returns the state machine will transfer to an
internal <code>HaltingState</code> and invoke <code>halting</code>. Any
message subsequently received by the state machine will cause
<code>haltedProcessMessage</code> to be invoked.
</p>

<p>
If it is desirable to completely stop the state machine call
<code>quit</code>. This will exit the current state and its parent and then
exit from the controlling thread and no further messages will be processed.
</p>

<p>
In addition to <code>processMessage</code> each <code>State</code> has an
<code>enter</code> method and
<code>exit</exit> method which may be overridden.
</p>

<p>
Since the states are arranged in a hierarchy transitioning to a new state
causes current states to be exited and new states to be entered. To determine
the list of states to be entered/exited the common parent closest to the
current state is found. We then exit from the current state and its parent's
up to but not including the common parent state and then enter all of the new
states below the common parent down to the destination state. If there is no
common parent all states are exited and then the new states are entered.
</p>

<p>
Two other methods that states can use are <code>deferMessage</code> and
<code>sendMessageAtFrontOfQueue</code>. The
<code>sendMessageAtFrontOfQueue</code> sends a message but places it on the
front of the queue rather than the back. The <code>deferMessage</code> causes
the message to be saved on a list until a transition is made to a new state.
At which time all of the deferred messages will be put on the front of the
state machine queue with the oldest message at the front. These will then be
processed by the new current state before any other messages that are on the
queue or might be added later. Both of these are protected and may only be
invoked from within a state machine.
</p>

<p>
To illustrate some of these properties we'll use state machine with an 8
state hierarchy:
</p>
<code>
mP0
/   \\
mP1   mS0
/   \\
mS2   mS1
/  \\    \\
mS3  mS4  mS5  ---> initial state
</code>
<p>
After starting mS5 the list of active states is mP0, mP1, mS1 and mS5. So the
order of calling processMessage when a message is received is mS5, mS1, mP1,
mP0 assuming each processMessage indicates it can't handle this message by
returning false or NOT_HANDLED.
</p>

<p>
Now assume mS5.processMessage receives a message it can handle, and during
the handling determines the machine should change states. It could call
transitionTo(mS4) and return true or HANDLED. Immediately after returning
from processMessage the state machine runtime will find the common parent,
which is mP1. It will then call mS5.exit, mS1.exit, mS2.enter and then
mS4.enter. The new list of active states is mP0, mP1, mS2 and mS4. So when
the next message is received mS4.processMessage will be invoked.
</p>

<p>
Now for some concrete examples, here is the canonical HelloWorld as a state
machine. It responds with \"Hello World\" being printed to the log for every
message.
</p>
<code>
class HelloWorld extends StateMachine {
HelloWorld(String name) {
super(name);
addState(mState1);
setInitialState(mState1);
}

public static HelloWorld makeHelloWorld() {
HelloWorld hw = new HelloWorld(\"hw\");
hw.start();
return hw;
}

class State1 extends State {
&#64;Override public boolean processMessage(Message message) {
Log.d(TAG, \"Hello World\");
return HANDLED;
}
}
State1 mState1 = new State1();
}

void testHelloWorld() {
HelloWorld hw = makeHelloWorld();
hw.sendMessage(hw.obtainMessage());
}
</code>
<p>
A more interesting state machine is one with four states with two independent
parent states.
</p>
<code>
mP1      mP2
/   \\
mS2   mS1
</code>
<p>
Here is a description of this state machine using pseudo code.
</p>
<code>
state mP1 {
enter { log(\"mP1.enter\"); }
exit { log(\"mP1.exit\");  }
on msg {
CMD_2 {
send(CMD_3);
defer(msg);
transitonTo(mS2);
return HANDLED;
}
return NOT_HANDLED;
}
}

INITIAL
state mS1 parent mP1 {
enter { log(\"mS1.enter\"); }
exit  { log(\"mS1.exit\");  }
on msg {
CMD_1 {
transitionTo(mS1);
return HANDLED;
}
return NOT_HANDLED;
}
}

state mS2 parent mP1 {
enter { log(\"mS2.enter\"); }
exit  { log(\"mS2.exit\");  }
on msg {
CMD_2 {
send(CMD_4);
return HANDLED;
}
CMD_3 {
defer(msg);
transitionTo(mP2);
return HANDLED;
}
return NOT_HANDLED;
}
}

state mP2 {
enter {
log(\"mP2.enter\");
send(CMD_5);
}
exit { log(\"mP2.exit\"); }
on msg {
CMD_3, CMD_4 { return HANDLED; }
CMD_5 {
transitionTo(HaltingState);
return HANDLED;
}
return NOT_HANDLED;
}
}
</code>
<p>
The implementation is below and also in StateMachineTest:
</p>
<code>
class Hsm1 extends StateMachine {
private static final String TAG = \"hsm1\";

public static final int CMD_1 = 1;
public static final int CMD_2 = 2;
public static final int CMD_3 = 3;
public static final int CMD_4 = 4;
public static final int CMD_5 = 5;

public static Hsm1 makeHsm1() {
Log.d(TAG, \"makeHsm1 E\");
Hsm1 sm = new Hsm1(\"hsm1\");
sm.start();
Log.d(TAG, \"makeHsm1 X\");
return sm;
}

Hsm1(String name) {
super(name);
Log.d(TAG, \"ctor E\");

// Add states, use indentation to show hierarchy
addState(mP1);
addState(mS1, mP1);
addState(mS2, mP1);
addState(mP2);

// Set the initial state
setInitialState(mS1);
Log.d(TAG, \"ctor X\");
}

class P1 extends State {
&#64;Override public void enter() {
Log.d(TAG, \"mP1.enter\");
}
&#64;Override public boolean processMessage(Message message) {
boolean retVal;
Log.d(TAG, \"mP1.processMessage what=\" + message.what);
switch(message.what) {
case CMD_2:
// CMD_2 will arrive in mS2 before CMD_3
sendMessage(obtainMessage(CMD_3));
deferMessage(message);
transitionTo(mS2);
retVal = HANDLED;
break;
default:
// Any message we don't understand in this state invokes unhandledMessage
retVal = NOT_HANDLED;
break;
}
return retVal;
}
&#64;Override public void exit() {
Log.d(TAG, \"mP1.exit\");
}
}

class S1 extends State {
&#64;Override public void enter() {
Log.d(TAG, \"mS1.enter\");
}
&#64;Override public boolean processMessage(Message message) {
Log.d(TAG, \"S1.processMessage what=\" + message.what);
if (message.what == CMD_1) {
// Transition to ourself to show that enter/exit is called
transitionTo(mS1);
return HANDLED;
} else {
// Let parent process all other messages
return NOT_HANDLED;
}
}
&#64;Override public void exit() {
Log.d(TAG, \"mS1.exit\");
}
}

class S2 extends State {
&#64;Override public void enter() {
Log.d(TAG, \"mS2.enter\");
}
&#64;Override public boolean processMessage(Message message) {
boolean retVal;
Log.d(TAG, \"mS2.processMessage what=\" + message.what);
switch(message.what) {
case(CMD_2):
sendMessage(obtainMessage(CMD_4));
retVal = HANDLED;
break;
case(CMD_3):
deferMessage(message);
transitionTo(mP2);
retVal = HANDLED;
break;
default:
retVal = NOT_HANDLED;
break;
}
return retVal;
}
&#64;Override public void exit() {
Log.d(TAG, \"mS2.exit\");
}
}

class P2 extends State {
&#64;Override public void enter() {
Log.d(TAG, \"mP2.enter\");
sendMessage(obtainMessage(CMD_5));
}
&#64;Override public boolean processMessage(Message message) {
Log.d(TAG, \"P2.processMessage what=\" + message.what);
switch(message.what) {
case(CMD_3):
break;
case(CMD_4):
break;
case(CMD_5):
transitionToHaltingState();
break;
}
return HANDLED;
}
&#64;Override public void exit() {
Log.d(TAG, \"mP2.exit\");
}
}

&#64;Override
void halting() {
Log.d(TAG, \"halting\");
synchronized (this) {
this.notifyAll();
}
}

P1 mP1 = new P1();
S1 mS1 = new S1();
S2 mS2 = new S2();
P2 mP2 = new P2();
}
</code>
<p>
If this is executed by sending two messages CMD_1 and CMD_2 (Note the
synchronize is only needed because we use hsm.wait())
</p>
<code>
Hsm1 hsm = makeHsm1();
synchronize(hsm) {
hsm.sendMessage(obtainMessage(hsm.CMD_1));
hsm.sendMessage(obtainMessage(hsm.CMD_2));
try {
// wait for the messages to be handled
hsm.wait();
} catch (InterruptedException e) {
Log.e(TAG, \"exception while waiting \" + e.getMessage());
}
}
</code>
<p>
The output is:
</p>
<code>
D/hsm1    ( 1999): makeHsm1 E
D/hsm1    ( 1999): ctor E
D/hsm1    ( 1999): ctor X
D/hsm1    ( 1999): mP1.enter
D/hsm1    ( 1999): mS1.enter
D/hsm1    ( 1999): makeHsm1 X
D/hsm1    ( 1999): mS1.processMessage what=1
D/hsm1    ( 1999): mS1.exit
D/hsm1    ( 1999): mS1.enter
D/hsm1    ( 1999): mS1.processMessage what=2
D/hsm1    ( 1999): mP1.processMessage what=2
D/hsm1    ( 1999): mS1.exit
D/hsm1    ( 1999): mS2.enter
D/hsm1    ( 1999): mS2.processMessage what=2
D/hsm1    ( 1999): mS2.processMessage what=3
D/hsm1    ( 1999): mS2.exit
D/hsm1    ( 1999): mP1.exit
D/hsm1    ( 1999): mP2.enter
D/hsm1    ( 1999): mP2.processMessage what=3
D/hsm1    ( 1999): mP2.processMessage what=4
D/hsm1    ( 1999): mP2.processMessage what=5
D/hsm1    ( 1999): mP2.exit
D/hsm1    ( 1999): halting
</code>"
      attribute 10757260 "TAG"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"StateMachine\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10757388 "mName"
	private explicit_type "String"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10757516 "SM_QUIT_CMD"
	class_attribute const_attribute public explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Message.what value when quitting "
      end

      attribute 10757644 "SM_INIT_CMD"
	class_attribute const_attribute public explicit_type "int"
	init_value " -2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Message.what value when initializing "
      end

      attribute 10757772 "HANDLED"
	class_attribute const_attribute public explicit_type "boolean"
	init_value " true"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Convenience constant that maybe returned by processMessage to indicate
the the message was processed and is not to be processed by parent states
"
      end

      attribute 10757900 "NOT_HANDLED"
	class_attribute const_attribute public explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Convenience constant that maybe returned by processMessage to indicate
the the message was NOT processed and is to be processed by parent states
"
      end

      class 2984460 "ProcessedMessageInfo"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 10758028 "what"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 5502348 // state (<unidirectional association>)
	  relation 5502220 --->
	    a role_name "state" private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 5502348 // state (<unidirectional association>)
	    b parent class_ref 2984588 // State
	end

	classrelation 5502476 // orgState (<unidirectional association>)
	  relation 5502348 --->
	    a role_name "orgState" private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 5502476 // orgState (<unidirectional association>)
	    b parent class_ref 2984588 // State
	end

	operation 12146956 "ProcessedMessageInfo"
	  package explicit_return_type ""
	  nparams 3
	    param inout name "message" type class_ref 690316 // Message
	    param inout name "state" type class_ref 2984588 // State
	    param inout name "orgState" type class_ref 2984588 // State
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Constructor

@param message
@param state
           that handled the message
@param orgState
           is the first state the received the message but did not
           processes the message."
	end

	operation 12147084 "update"
	  public explicit_return_type "void"
	  nparams 3
	    param inout name "message" type class_ref 690316 // Message
	    param inout name "state" type class_ref 2984588 // State
	    param inout name "orgState" type class_ref 2984588 // State
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Update the information in the record.

@param state
           that handled the message
@param orgState
           is the first state the received the message but did not
           processes the message."
	end

	operation 12147212 "getWhat"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "@return the command that was executing"
	end

	operation 12147340 "getState"
	  public return_type class_ref 2984588 // State
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "@return the state that handled this message"
	end

	operation 12147468 "getOriginalState"
	  public return_type class_ref 2984588 // State
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "@return the original state that received the message."
	end

	operation 12147596 "toString"
	  public explicit_return_type "String"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment "@return as string"
	end

	operation 12147724 "cn"
	  private explicit_return_type "String"
	  nparams 1
	    param inout name "n" explicit_type "Object"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "@return an objects class name"
	end
      end

      class 2984716 "ProcessedMessages"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 10758156 "DEFAULT_SIZE"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 20"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 5502604 // mMessages (<unidirectional association>)
	  relation 5502476 --->
	    stereotype "Vector"
	    a role_name "mMessages" init_value " new Vector<ProcessedMessageInfo>()" private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	      classrelation_ref 5502604 // mMessages (<unidirectional association>)
	    b parent class_ref 2984460 // ProcessedMessageInfo
	end

	attribute 10758284 "mMaxSize"
	  private explicit_type "int"
	  init_value " DEFAULT_SIZE"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 10758412 "mOldestIndex"
	  private explicit_type "int"
	  init_value " 0"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 10758540 "mCount"
	  private explicit_type "int"
	  init_value " 0"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 12147852 "ProcessedMessages"
	  package explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Constructor"
	end

	operation 12147980 "setSize"
	  package explicit_return_type "void"
	  nparams 1
	    param in name "maxSize" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Set size of messages to maintain and clears all current messages.

@param maxSize
           number of messages to maintain at anyone time."
	end

	operation 12148108 "size"
	  package explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "@return the number of recent messages."
	end

	operation 12148236 "count"
	  package explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "@return the total number of messages processed since size was set."
	end

	operation 12148364 "cleanup"
	  package explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Clear the list of Processed Message Info."
	end

	operation 12148492 "get"
	  package return_type class_ref 2984460 // ProcessedMessageInfo
	  nparams 1
	    param in name "index" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "@return the information on a particular record. 0 is the oldest
        record and size()-1 is the newest record. If the index is to
        large null is returned."
	end

	operation 12148620 "add"
	  package explicit_return_type "void"
	  nparams 3
	    param inout name "message" type class_ref 690316 // Message
	    param inout name "state" type class_ref 2984588 // State
	    param inout name "orgState" type class_ref 2984588 // State
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Add a processed message.

@param message
@param state
           that handled the message
@param orgState
           is the first state the received the message but did not
           processes the message."
	end
      end

      class 2984844 "SmHandler"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 5502732 // <generalisation>
	  relation 5502604 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 5502732 // <generalisation>
	    b parent class_ref 687500 // Handler
	end

	attribute 10758668 "mDbg"
	  private explicit_type "boolean"
	  init_value " false"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " The debug flag "
	end

	attribute 10758796 "mQuitObj"
	  class_attribute const_attribute private explicit_type "Object"
	  init_value " new Object()"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " The quit object "
	end

	classrelation 5502860 // mMsg (<unidirectional association>)
	  relation 5502732 --->
	    a role_name "mMsg" private
	      comment " The current message 
"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 5502860 // mMsg (<unidirectional association>)
	    b parent class_ref 690316 // Message
	end

	classrelation 5502988 // mProcessedMessages (<unidirectional association>)
	  relation 5502860 --->
	    a role_name "mProcessedMessages" init_value " new ProcessedMessages()" private
	      comment " A list of messages that this state machine has processed 
"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 5502988 // mProcessedMessages (<unidirectional association>)
	    b parent class_ref 2984716 // ProcessedMessages
	end

	attribute 10758924 "mIsConstructionCompleted"
	  private explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " true if construction of the state machine has not been completed "
	end

	class 2984972 "StateInfo"
	  visibility private 
	  cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	  java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  
	  classrelation 5503756 // state (<unidirectional association>)
	    relation 5503628 --->
	      a role_name "state" package
		comment " The state 
"
		cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
		java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
		classrelation_ref 5503756 // state (<unidirectional association>)
	      b parent class_ref 2984588 // State
	  end

	  classrelation 5503884 // parentStateInfo (<unidirectional association>)
	    relation 5503756 --->
	      a role_name "parentStateInfo" package
		comment " The parent of this state, null if there is no parent 
"
		cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
		java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
		classrelation_ref 5503884 // parentStateInfo (<unidirectional association>)
	      b parent class_ref 2984972 // StateInfo
	  end

	  attribute 10759308 "active"
	    package explicit_type "boolean"
	    cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	    comment " True when the state has been entered and on the stack "
	  end

	  operation 12148748 "toString"
	    public explicit_return_type "String"
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Convert StateInfo to string"
	  end
	end

	classrelation 5503116 // mStateStack (<unidirectional association>)
	  relation 5502988 --->
	    a role_name "mStateStack" multiplicity "[]" private
	      comment " Stack used to manage the current hierarchy of states 
"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 5503116 // mStateStack (<unidirectional association>)
	    b parent class_ref 2984972 // StateInfo
	end

	attribute 10759052 "mStateStackTopIndex"
	  private explicit_type "int"
	  init_value " -1"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Top of mStateStack "
	end

	classrelation 5503244 // mTempStateStack (<unidirectional association>)
	  relation 5503116 --->
	    a role_name "mTempStateStack" multiplicity "[]" private
	      comment " A temporary stack used to manage the state stack 
"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 5503244 // mTempStateStack (<unidirectional association>)
	    b parent class_ref 2984972 // StateInfo
	end

	attribute 10759180 "mTempStateStackCount"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " The top of the mTempStateStack "
	end

	class 2985100 "HaltingState"
	  visibility private 
	  cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	  java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  
	  classrelation 5504652 // <generalisation>
	    relation 5504524 ---|>
	      a public
		cpp default "${type}"
		java "${type}"
		classrelation_ref 5504652 // <generalisation>
	      b parent class_ref 2984588 // State
	  end

	  operation 12150028 "processMessage"
	    public explicit_return_type "boolean"
	    nparams 1
	      param inout name "msg" type class_ref 690316 // Message
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end
	end

	classrelation 5503372 // mHaltingState (<unidirectional association>)
	  relation 5503244 --->
	    a role_name "mHaltingState" init_value " new HaltingState()" private
	      comment " State used when state machine is halted 
"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 5503372 // mHaltingState (<unidirectional association>)
	    b parent class_ref 2985100 // HaltingState
	end

	class 2985228 "QuittingState"
	  visibility private 
	  cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	  java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  
	  classrelation 5504780 // <generalisation>
	    relation 5504652 ---|>
	      a public
		cpp default "${type}"
		java "${type}"
		classrelation_ref 5504780 // <generalisation>
	      b parent class_ref 2984588 // State
	  end

	  operation 12150156 "processMessage"
	    public explicit_return_type "boolean"
	    nparams 1
	      param inout name "msg" type class_ref 690316 // Message
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end
	end

	classrelation 5503500 // mQuittingState (<unidirectional association>)
	  relation 5503372 --->
	    a role_name "mQuittingState" init_value " new QuittingState()" private
	      comment " State used when state machine is quitting 
"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 5503500 // mQuittingState (<unidirectional association>)
	    b parent class_ref 2985228 // QuittingState
	end

	classrelation 5503628 // mSm (<unidirectional association>)
	  relation 5503500 --->
	    a role_name "mSm" private
	      comment " Reference to the StateMachine 
"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 5503628 // mSm (<unidirectional association>)
	    b parent class_ref 2984332 // StateMachine
	end

	classrelation 5504012 // mStateInfo (<unidirectional association>)
	  relation 5503884 --->
	    stereotype "HashMap"
	    a role_name "mStateInfo" init_value " new HashMap<State, StateInfo>()" private
	      comment " The map of all of the states in the state machine "
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}, StateInfo> ${name}${value};
"
	      classrelation_ref 5504012 // mStateInfo (<unidirectional association>)
	    b parent class_ref 2984588 // State
	end

	classrelation 5504140 // mInitialState (<unidirectional association>)
	  relation 5504012 --->
	    a role_name "mInitialState" private
	      comment " The initial state that will process the first message 
"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 5504140 // mInitialState (<unidirectional association>)
	    b parent class_ref 2984588 // State
	end

	classrelation 5504268 // mDestState (<unidirectional association>)
	  relation 5504140 --->
	    a role_name "mDestState" private
	      comment " The destination state when transitionTo has been invoked 
"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 5504268 // mDestState (<unidirectional association>)
	    b parent class_ref 2984588 // State
	end

	classrelation 5504396 // mDeferredMessages (<unidirectional association>)
	  relation 5504268 --->
	    stereotype "ArrayList"
	    a role_name "mDeferredMessages" init_value " new ArrayList<Message>()" private
	      comment " The list of deferred messages "
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	      classrelation_ref 5504396 // mDeferredMessages (<unidirectional association>)
	    b parent class_ref 690316 // Message
	end

	operation 12150284 "handleMessage"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "msg" type class_ref 690316 // Message
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment "Handle messages sent to the state machine by calling the current
state's processMessage. It also handles the enter/exit calls and
placing any deferred messages back onto the queue when transitioning
to a new state."
	end

	operation 12150412 "performTransitions"
	  private explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Do any transitions"
	end

	operation 12150540 "cleanupAfterQuitting"
	  private explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Cleanup all the static variables and the looper after the SM has been
quit."
	end

	operation 12150668 "completeConstruction"
	  private explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Complete the construction of the state machine."
	end

	operation 12150796 "processMsg"
	  private explicit_return_type "void"
	  nparams 1
	    param inout name "msg" type class_ref 690316 // Message
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Process the message. If the current state doesn't handle it, call the
states parent and so on. If it is never handled then call the state
machines unhandledMessage method."
	end

	operation 12150924 "invokeExitMethods"
	  private explicit_return_type "void"
	  nparams 1
	    param inout name "commonStateInfo" type class_ref 2984972 // StateInfo
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Call the exit method for each state from the top of stack up to the
common ancestor state."
	end

	operation 12151052 "invokeEnterMethods"
	  private explicit_return_type "void"
	  nparams 1
	    param in name "stateStackEnteringIndex" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Invoke the enter method starting at the entering index to top of
state stack"
	end

	operation 12151180 "moveDeferredMessageAtFrontOfQueue"
	  private explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Move the deferred message to the front of the message queue."
	end

	operation 12151308 "moveTempStateStackToStateStack"
	  private explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Move the contents of the temporary stack to the state stack reversing
the order of the items on the temporary stack as they are moved.

@return index into mStateStack where entering needs to start"
	end

	operation 12151436 "setupTempStateStackWithStatesToEnter"
	  private return_type class_ref 2984972 // StateInfo
	  nparams 1
	    param inout name "destState" type class_ref 2984588 // State
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Setup the mTempStateStack with the states we are going to enter.

This is found by searching up the destState's ancestors for a state
that is already active i.e. StateInfo.active == true. The destStae
and all of its inactive parents will be on the TempStateStack as the
list of states to enter.

@return StateInfo of the common ancestor for the destState and
        current state or null if there is no common parent."
	end

	operation 12151564 "setupInitialStateStack"
	  private explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Initialize StateStack to mInitialState."
	end

	operation 12151692 "getCurrentMessage"
	  private return_type class_ref 690316 // Message
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "@return current message"
	end

	operation 12151820 "getCurrentState"
	  private return_type class_ref 2985356 // IState
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "@return current state"
	end

	operation 12151948 "addState"
	  private return_type class_ref 2984972 // StateInfo
	  nparams 2
	    param inout name "state" type class_ref 2984588 // State
	    param inout name "parent" type class_ref 2984588 // State
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Add a new state to the state machine. Bottom up addition of states is
allowed but the same state may only exist in one hierarchy.

@param state
           the state to add
@param parent
           the parent of state
@return stateInfo for this state"
	end

	operation 12152076 "SmHandler"
	  private explicit_return_type ""
	  nparams 2
	    param inout name "looper" type class_ref 685324 // Looper
	    param inout name "sm" type class_ref 2984332 // StateMachine
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Constructor

@param looper
           for dispatching messages
@param sm
           the hierarchical state machine"
	end

	operation 12152204 "setInitialState"
	  private explicit_return_type "void"
	  nparams 1
	    param inout name "initialState" type class_ref 2984588 // State
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " @see StateMachine#setInitialState(State) "
	end

	operation 12152332 "transitionTo"
	  private explicit_return_type "void"
	  nparams 1
	    param inout name "destState" type class_ref 2985356 // IState
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " @see StateMachine#transitionTo(IState) "
	end

	operation 12152460 "deferMessage"
	  private explicit_return_type "void"
	  nparams 1
	    param inout name "msg" type class_ref 690316 // Message
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " @see StateMachine#deferMessage(Message) "
	end

	operation 12152588 "quit"
	  private explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " @see StateMachine#deferMessage(Message) "
	end

	operation 12152716 "isQuit"
	  private explicit_return_type "boolean"
	  nparams 1
	    param inout name "msg" type class_ref 690316 // Message
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " @see StateMachine#isQuit(Message) "
	end

	operation 12152844 "isDbg"
	  private explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " @see StateMachine#isDbg() "
	end

	operation 12152972 "setDbg"
	  private explicit_return_type "void"
	  nparams 1
	    param inout name "dbg" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " @see StateMachine#setDbg(boolean) "
	end

	operation 12153100 "setProcessedMessagesSize"
	  private explicit_return_type "void"
	  nparams 1
	    param in name "maxSize" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " @see StateMachine#setProcessedMessagesSize(int) "
	end

	operation 12153228 "getProcessedMessagesSize"
	  private explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " @see StateMachine#getProcessedMessagesSize() "
	end

	operation 12153356 "getProcessedMessagesCount"
	  private explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " @see StateMachine#getProcessedMessagesCount() "
	end

	operation 12153484 "getProcessedMessageInfo"
	  private return_type class_ref 2984460 // ProcessedMessageInfo
	  nparams 1
	    param in name "index" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " @see StateMachine#getProcessedMessageInfo(int) "
	end
      end

      classrelation 5504908 // mSmHandler (<unidirectional association>)
	relation 5504780 --->
	  a role_name "mSmHandler" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5504908 // mSmHandler (<unidirectional association>)
	  b parent class_ref 2984844 // SmHandler
      end

      classrelation 5505036 // mSmThread (<unidirectional association>)
	relation 5504908 --->
	  a role_name "mSmThread" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5505036 // mSmThread (<unidirectional association>)
	  b parent class_ref 691980 // HandlerThread
      end

      operation 12153612 "initStateMachine"
	private explicit_return_type "void"
	nparams 2
	  param in name "name" explicit_type "String"
	  param inout name "looper" type class_ref 685324 // Looper
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initialize.

@param looper
           for this state machine
@param name
           of the state machine"
      end

      operation 12153740 "StateMachine"
	protected explicit_return_type ""
	nparams 1
	  param in name "name" explicit_type "String"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor creates a StateMachine with its own thread.

@param name
           of the state machine"
      end

      operation 12153868 "StateMachine"
	protected explicit_return_type ""
	nparams 2
	  param in name "name" explicit_type "String"
	  param inout name "looper" type class_ref 685324 // Looper
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor creates an StateMachine using the looper.

@param name
           of the state machine"
      end

      operation 12153996 "addState"
	protected explicit_return_type "void"
	nparams 2
	  param inout name "state" type class_ref 2984588 // State
	  param inout name "parent" type class_ref 2984588 // State
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add a new state to the state machine

@param state
           the state to add
@param parent
           the parent of state"
      end

      operation 12154124 "getCurrentMessage"
	protected return_type class_ref 690316 // Message
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return current message"
      end

      operation 12154252 "getCurrentState"
	protected return_type class_ref 2985356 // IState
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return current state"
      end

      operation 12154380 "addState"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "state" type class_ref 2984588 // State
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add a new state to the state machine, parent will be null

@param state
           to add"
      end

      operation 12154508 "setInitialState"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "initialState" type class_ref 2984588 // State
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the initial state. This must be invoked before and messages are sent
to the state machine.

@param initialState
           is the state which will receive the first message."
      end

      operation 12154636 "transitionTo"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "destState" type class_ref 2985356 // IState
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "transition to destination state. Upon returning from processMessage the
current state's exit will be executed and upon the next message arriving
destState.enter will be invoked.

this function can also be called inside the enter function of the
previous transition target, but the behavior is undefined when it is
called mid-way through a previous transition (for example, calling this
in the enter() routine of a intermediate node when the current transition
target is one of the nodes descendants).

@param destState
           will be the state that receives the next message."
      end

      operation 12154764 "transitionToHaltingState"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "transition to halt state. Upon returning from processMessage we will exit
all current states, execute the halting() method and then all subsequent
messages haltedProcessMesage will be called."
      end

      operation 12154892 "deferMessage"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "msg" type class_ref 690316 // Message
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Defer this message until next state transition. Upon transitioning all
deferred messages will be placed on the queue and reprocessed in the
original order. (i.e. The next state the oldest messages will be
processed first)

@param msg
           is deferred until the next transition."
      end

      operation 12155020 "unhandledMessage"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "msg" type class_ref 690316 // Message
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when message wasn't handled

@param msg
           that couldn't be handled."
      end

      operation 12155148 "haltedProcessMessage"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "msg" type class_ref 690316 // Message
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called for any message that is received after transitionToHalting is
called."
      end

      operation 12155276 "halting"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This will be called once after handling a message that called
transitionToHalting. All subsequent messages will invoke
{@link StateMachine#haltedProcessMessage(Message)}"
      end

      operation 12155404 "quitting"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This will be called once after a quit message that was NOT handled by the
derived StateMachine. The StateMachine will stop and any subsequent
messages will be ignored. In addition, if this StateMachine created the
thread, the thread will be stopped after this method returns."
      end

      operation 12155532 "getName"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return the name"
      end

      operation 12155660 "setProcessedMessagesSize"
	public explicit_return_type "void"
	nparams 1
	  param in name "maxSize" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set size of messages to maintain and clears all current messages.

@param maxSize
           number of messages to maintain at anyone time."
      end

      operation 12155788 "getProcessedMessagesSize"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return number of messages processed"
      end

      operation 12155916 "getProcessedMessagesCount"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return the total number of messages processed"
      end

      operation 12156044 "getProcessedMessageInfo"
	public return_type class_ref 2984460 // ProcessedMessageInfo
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return a processed message information"
      end

      operation 12156172 "getHandler"
	public return_type class_ref 687500 // Handler
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return Handler"
      end

      operation 12156300 "obtainMessage"
	public return_type class_ref 690316 // Message
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get a message and set Message.target = this.

@return message or null if SM has quit"
      end

      operation 12156428 "obtainMessage"
	public return_type class_ref 690316 // Message
	nparams 1
	  param in name "what" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get a message and set Message.target = this and what

@param what
           is the assigned to Message.what.
@return message or null if SM has quit"
      end

      operation 12156556 "obtainMessage"
	public return_type class_ref 690316 // Message
	nparams 2
	  param in name "what" explicit_type "int"
	  param inout name "obj" explicit_type "Object"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get a message and set Message.target = this, what and obj.

@param what
           is the assigned to Message.what.
@param obj
           is assigned to Message.obj.
@return message or null if SM has quit"
      end

      operation 12156684 "obtainMessage"
	public return_type class_ref 690316 // Message
	nparams 3
	  param in name "what" explicit_type "int"
	  param in name "arg1" explicit_type "int"
	  param in name "arg2" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get a message and set Message.target = this, what, arg1 and arg2

@param what
           is assigned to Message.what
@param arg1
           is assigned to Message.arg1
@param arg2
           is assigned to Message.arg2
@return A Message object from the global pool or null if SM has quit"
      end

      operation 12156812 "obtainMessage"
	public return_type class_ref 690316 // Message
	nparams 4
	  param in name "what" explicit_type "int"
	  param in name "arg1" explicit_type "int"
	  param in name "arg2" explicit_type "int"
	  param inout name "obj" explicit_type "Object"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get a message and set Message.target = this, what, arg1, arg2 and obj

@param what
           is assigned to Message.what
@param arg1
           is assigned to Message.arg1
@param arg2
           is assigned to Message.arg2
@param obj
           is assigned to Message.obj
@return A Message object from the global pool or null if SM has quit"
      end

      operation 12156940 "sendMessage"
	public explicit_return_type "void"
	nparams 1
	  param in name "what" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enqueue a message to this state machine."
      end

      operation 12157068 "sendMessage"
	public explicit_return_type "void"
	nparams 2
	  param in name "what" explicit_type "int"
	  param inout name "obj" explicit_type "Object"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enqueue a message to this state machine."
      end

      operation 12157196 "sendMessage"
	public explicit_return_type "void"
	nparams 1
	  param inout name "msg" type class_ref 690316 // Message
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enqueue a message to this state machine."
      end

      operation 12157324 "sendMessageDelayed"
	public explicit_return_type "void"
	nparams 2
	  param in name "what" explicit_type "int"
	  param in name "delayMillis" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enqueue a message to this state machine after a delay."
      end

      operation 12157452 "sendMessageDelayed"
	public explicit_return_type "void"
	nparams 3
	  param in name "what" explicit_type "int"
	  param inout name "obj" explicit_type "Object"
	  param in name "delayMillis" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enqueue a message to this state machine after a delay."
      end

      operation 12157580 "sendMessageDelayed"
	public explicit_return_type "void"
	nparams 2
	  param inout name "msg" type class_ref 690316 // Message
	  param in name "delayMillis" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enqueue a message to this state machine after a delay."
      end

      operation 12157708 "sendMessageAtFrontOfQueue"
	protected explicit_return_type "void"
	nparams 2
	  param in name "what" explicit_type "int"
	  param inout name "obj" explicit_type "Object"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enqueue a message to the front of the queue for this state machine.
Protected, may only be called by instances of StateMachine."
      end

      operation 12157836 "sendMessageAtFrontOfQueue"
	protected explicit_return_type "void"
	nparams 1
	  param in name "what" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enqueue a message to the front of the queue for this state machine.
Protected, may only be called by instances of StateMachine."
      end

      operation 12157964 "sendMessageAtFrontOfQueue"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "msg" type class_ref 690316 // Message
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enqueue a message to the front of the queue for this state machine.
Protected, may only be called by instances of StateMachine."
      end

      operation 12158092 "removeMessages"
	protected explicit_return_type "void"
	nparams 1
	  param in name "what" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a message from the message queue. Protected, may only be called
by instances of StateMachine."
      end

      operation 12158220 "quit"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Conditionally quit the looper and stop execution.

This sends the SM_QUIT_MSG to the state machine and if not handled by any
state's processMessage then the state machine will be stopped and no
further messages will be processed."
      end

      operation 12158348 "isQuit"
	protected explicit_return_type "boolean"
	nparams 1
	  param inout name "msg" type class_ref 690316 // Message
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return ture if msg is quit"
      end

      operation 12158476 "isDbg"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return if debugging is enabled"
      end

      operation 12158604 "setDbg"
	public explicit_return_type "void"
	nparams 1
	  param inout name "dbg" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set debug enable/disabled.

@param dbg
           is true to enable debugging."
      end

      operation 12158732 "start"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Start the state machine."
      end
    end

    class 2984588 "State"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "{@hide}

The class for implementing states in a StateMachine"
      classrelation 5504524 // <realization>
	relation 5504396 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 5504524 // <realization>
	  b parent class_ref 2985356 // IState
      end

      operation 12149388 "State"
	protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor"
      end

      operation 12149516 "enter"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "(non-Javadoc)

@see com.android.internal.util.IState#enter()"
      end

      operation 12149644 "exit"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "(non-Javadoc)

@see com.android.internal.util.IState#exit()"
      end

      operation 12149772 "processMessage"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "msg" type class_ref 690316 // Message
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "(non-Javadoc)

@see com.android.internal.util.IState#processMessage(android.os.Message)"
      end

      operation 12149900 "getName"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Name of State for debugging purposes.

This default implementation returns the class name, returning the
instance name would better in cases where a State class is used for
multiple states. But normally there is one class per state and the class
name is sufficient and easy to get. You may want to provide a setName or
some other mechanism for setting another name if the class name is not
appropriate.

@see com.android.internal.util.IState#processMessage(android.os.Message)"
      end
    end

    class 2985356 "IState"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "{@hide}

The interface for implementing states in a {@link StateMachine}"
      attribute 10759436 "HANDLED"
	class_attribute const_attribute public explicit_type "boolean"
	init_value " true"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Returned by processMessage to indicate the the message was processed.
"
      end

      attribute 10759564 "NOT_HANDLED"
	class_attribute const_attribute public explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Returned by processMessage to indicate the the message was NOT processed.
"
      end

      operation 12148876 "enter"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when a state is entered."
      end

      operation 12149004 "exit"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when a state is exited."
      end

      operation 12149132 "processMessage"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "msg" type class_ref 690316 // Message
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when a message is to be processed by the state machine.

This routine is never reentered thus no synchronization is needed as only
one processMessage method will ever be executing within a state machine
at any given time. This does mean that processing by this routine must be
completed as expeditiously as possible as no subsequent messages will be
processed until this routine returns.

@param msg
           to process
@return HANDLED if processing has completed and NOT_HANDLED if the
        message wasn't processed."
      end

      operation 12149260 "getName"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Name of State for debugging purposes.

@return name of state."
      end
    end
  end

  deploymentview 277516 "util"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 1137292 "IState"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.Message;
${definition}"
      associated_classes
	class_ref 2985356 // IState
      end
      comment "Copyright (C) 2011 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1137420 "State"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.Message;
${definition}"
      associated_classes
	class_ref 2984588 // State
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1137548 "StateMachine"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.Handler;
import android.os.HandlerThread;
import android.os.Looper;
import android.os.Message;
import android.util.Log;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Vector;
${definition}"
      associated_classes
	class_ref 2984332 // StateMachine
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end
  end
end
