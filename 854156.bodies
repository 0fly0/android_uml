class NdefMessage
!!!3769484.java!!!	NdefMessage(inout data : byte)
        if (data == null) throw new NullPointerException("data is null");
        ByteBuffer buffer = ByteBuffer.wrap(data);

        mRecords = NdefRecord.parse(buffer, false);

        if (buffer.remaining() > 0) {
            throw new FormatException("trailing data");
        }
!!!3769612.java!!!	NdefMessage(inout record : NdefRecord, inout records : NdefRecord)
        // validate
        if (record == null) throw new NullPointerException("record cannot be null");

        for (NdefRecord r : records) {
            if (r == null) {
                throw new NullPointerException("record cannot be null");
            }
        }

        mRecords = new NdefRecord[1 + records.length];
        mRecords[0] = record;
        System.arraycopy(records, 0, mRecords, 1, records.length);
!!!3769740.java!!!	NdefMessage(inout records : NdefRecord)
        // validate
        if (records.length < 1) {
            throw new IllegalArgumentException("must have at least one record");
        }
        for (NdefRecord r : records) {
            if (r == null) {
                throw new NullPointerException("records cannot contain null");
            }
        }

        mRecords = records;
!!!3769868.java!!!	getRecords() : NdefRecord
        return mRecords;
!!!3769996.java!!!	getByteArrayLength() : int
        int length = 0;
        for (NdefRecord r : mRecords) {
            length += r.getByteLength();
        }
        return length;
!!!3770124.java!!!	toByteArray() : byte
        int length = getByteArrayLength();
        ByteBuffer buffer = ByteBuffer.allocate(length);

        for (int i=0; i<mRecords.length; i++) {
            boolean mb = (i == 0);  // first record
            boolean me = (i == mRecords.length - 1);  // last record
            mRecords[i].writeToByteBuffer(buffer, mb, me);
        }

        return buffer.array();
!!!3770252.java!!!	describeContents() : int
        return 0;
!!!3770380.java!!!	writeToParcel(inout dest : Parcel, in flags : int) : void
        dest.writeInt(mRecords.length);
        dest.writeTypedArray(mRecords, flags);
!!!3770508.java!!!	hashCode() : int
        return Arrays.hashCode(mRecords);
!!!3770636.java!!!	equals(inout obj : Object) : boolean
        if (this == obj) return true;
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;
        NdefMessage other = (NdefMessage) obj;
        return Arrays.equals(mRecords, other.mRecords);
!!!3770764.java!!!	toString() : String
        return "NdefMessage " + Arrays.toString(mRecords);
