class VelocityTracker
!!!4610444.java!!!	obtain() : VelocityTracker
        return sPool.acquire();
!!!4610572.java!!!	obtain(in strategy : String) : VelocityTracker
        if (strategy == null) {
            return obtain();
        }
        return new VelocityTracker(strategy);
!!!4610700.java!!!	recycle() : void
        if (mStrategy == null) {
            sPool.release(this);
        }
!!!4610828.java!!!	setNextPoolable(inout element : VelocityTracker) : void
        mNext = element;
!!!4610956.java!!!	getNextPoolable() : VelocityTracker
        return mNext;
!!!4611084.java!!!	isPooled() : boolean
        return mIsPooled;
!!!4611212.java!!!	setPooled(inout isPooled : boolean) : void
        mIsPooled = isPooled;
!!!4611340.java!!!	VelocityTracker(in strategy : String)
        mPtr = nativeInitialize(strategy);
        mStrategy = strategy;
!!!4611468.java!!!	finalize() : void
        try {
            if (mPtr != 0) {
                nativeDispose(mPtr);
                mPtr = 0;
            }
        } finally {
            super.finalize();
        }
!!!4611596.java!!!	clear() : void
        nativeClear(mPtr);
!!!4611724.java!!!	addMovement(inout event : MotionEvent) : void
        if (event == null) {
            throw new IllegalArgumentException("event must not be null");
        }
        nativeAddMovement(mPtr, event);
!!!4611852.java!!!	computeCurrentVelocity(in units : int) : void
        nativeComputeCurrentVelocity(mPtr, units, Float.MAX_VALUE);
!!!4611980.java!!!	computeCurrentVelocity(in units : int, in maxVelocity : float) : void
        nativeComputeCurrentVelocity(mPtr, units, maxVelocity);
!!!4612108.java!!!	getXVelocity() : float
        return nativeGetXVelocity(mPtr, ACTIVE_POINTER_ID);
!!!4612236.java!!!	getYVelocity() : float
        return nativeGetYVelocity(mPtr, ACTIVE_POINTER_ID);
!!!4612364.java!!!	getXVelocity(in id : int) : float
        return nativeGetXVelocity(mPtr, id);
!!!4612492.java!!!	getYVelocity(in id : int) : float
        return nativeGetYVelocity(mPtr, id);
!!!4612620.java!!!	getEstimator(in id : int, inout outEstimator : Estimator) : boolean
        if (outEstimator == null) {
            throw new IllegalArgumentException("outEstimator must not be null");
        }
        return nativeGetEstimator(mPtr, id, outEstimator);
