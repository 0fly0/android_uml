class ImplForVariable
!!!2140059.java!!!	equals(inout o : Object) : boolean
        if(!(o instanceof TypeVariable)) {
            return false;
        }
        TypeVariable<?> that = (TypeVariable<?>) o;
        return getName().equals(that.getName()) &&
                getGenericDeclaration().equals(that.getGenericDeclaration());
!!!2140187.java!!!	hashCode() : int
        return 31 * getName().hashCode() + getGenericDeclaration().hashCode();
!!!2140315.java!!!	ImplForVariable(inout genericDecl : D, inout name : String, inout bounds : ListOfTypes)
        this.genericDeclaration = genericDecl;
        this.name = name;
        this.bounds = bounds;
        this.formalVar = this;
        this.declOfVarUser = null;
!!!2140443.java!!!	ImplForVariable(inout genericDecl : D, inout name : String)
        this.name = name;
        this.declOfVarUser = genericDecl;
!!!2140571.java!!!	findFormalVar(inout layer : GenericDeclaration, inout name : String) : TypeVariable
        TypeVariable[] formalVars = layer.getTypeParameters();
        for (TypeVariable var : formalVars) {
            if (name.equals(var.getName())) {
                return var;
            }
        }
        // resolve() looks up the next level only, if null is returned
        return null;
!!!2140699.java!!!	nextLayer(inout decl : GenericDeclaration) : GenericDeclaration
        if (decl instanceof Class) {
            // FIXME: Is the following hierarchy correct?:
            Class cl = (Class)decl;
            decl = cl.getEnclosingMethod();
            if (decl != null) {
                return decl;
            }
            decl = cl.getEnclosingConstructor();
            if (decl != null) {
                return decl;
            }
            return cl.getEnclosingClass();
        } else if (decl instanceof Method) {
            return ((Method)decl).getDeclaringClass();
        } else if (decl instanceof Constructor) {
            return ((Constructor)decl).getDeclaringClass();
        } else {
            throw new AssertionError();
        }
!!!2140827.java!!!	resolve() : void
        if (formalVar != null) {
            return;
        }
        GenericDeclaration curLayer = declOfVarUser;
        TypeVariable var;
        while ((var = findFormalVar(curLayer, name)) == null) {
            curLayer = nextLayer(curLayer);
            if (curLayer == null) {
                throw new AssertionError("illegal type variable reference");
            }
        }
        formalVar = (ImplForVariable<D>) var;
        this.genericDeclaration = formalVar.genericDeclaration;
        this.bounds = formalVar.bounds;
!!!2140955.java!!!	getBounds() : Type
        resolve();
        return bounds.getResolvedTypes().clone();
!!!2141083.java!!!	getGenericDeclaration() : D
        resolve();
        return genericDeclaration;
!!!2141211.java!!!	getName() : String
        return name;
!!!2141339.java!!!	toString() : String
        return name;
