format 74
"helpers" // _unknown::org::xml::sax::helpers
  revision 1
  modified_by 27 "shchen"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "/home/shchen/work/android-x86/libcore/luni/src/main/java/org/xml/sax/helpers/"
  java_package "org.xml.sax.helpers"
  classview 135323 "helpers"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 304667 "DefaultHandler"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Default base class for SAX2 event handlers.

<blockquote>
<em>This module, both source code and documentation, is in the
Public Domain, and comes with <strong>NO WARRANTY</strong>.</em>
See <a href='http://www.saxproject.org'>http://www.saxproject.org</a>
for further information.
</blockquote>

<p>This class is available as a convenience base class for SAX2
applications: it provides default implementations for all of the
callbacks in the four core SAX2 handler classes:</p>

<ul>
<li>{@link org.xml.sax.EntityResolver EntityResolver}</li>
<li>{@link org.xml.sax.DTDHandler DTDHandler}</li>
<li>{@link org.xml.sax.ContentHandler ContentHandler}</li>
<li>{@link org.xml.sax.ErrorHandler ErrorHandler}</li>
</ul>

<p>Application writers can extend this class when they need to
implement only part of an interface; parser writers can
instantiate this class to provide default handlers when the
application has not supplied its own.</p>

<p>This class replaces the deprecated SAX1
{@link org.xml.sax.HandlerBase HandlerBase} class.</p>

@since SAX 2.0
@author David Megginson,
@version 2.0.1 (sax2r2)
@see org.xml.sax.EntityResolver
@see org.xml.sax.DTDHandler
@see org.xml.sax.ContentHandler
@see org.xml.sax.ErrorHandler"
      classrelation 730267 // <realization>
	relation 730267 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 730267 // <realization>
	  b parent class_ref 303387 // EntityResolver
      end

      classrelation 730395 // <realization>
	relation 730395 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 730395 // <realization>
	  b parent class_ref 308635 // DTDHandler
      end

      classrelation 730523 // <realization>
	relation 730523 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 730523 // <realization>
	  b parent class_ref 307483 // ContentHandler
      end

      classrelation 730651 // <realization>
	relation 730651 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 730651 // <realization>
	  b parent class_ref 303515 // ErrorHandler
      end

      operation 2555419 "resolveEntity"
	public return_type class_ref 303259 // InputSource
	nparams 2
	  param inout name "publicId" type class_ref 3399692 // String
	  param inout name "systemId" type class_ref 3399692 // String
	nexceptions 2
	  exception class_ref 128539 // IOException
	  exception class_ref 303131 // SAXException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "//////////////////////////////////////////////////////////////////
 Default implementation of the EntityResolver interface.
//////////////////////////////////////////////////////////////////

Resolve an external entity.

<p>Always return null, so that the parser will use the system
identifier provided in the XML document.  This method implements
the SAX default behaviour: application writers can override it
in a subclass to do special translations such as catalog lookups
or URI redirection.</p>

@param publicId The public identifer, or null if none is
                available.
@param systemId The system identifier provided in the XML
                document.
@return The new input source, or null to require the
        default behaviour.
@exception java.io.IOException If there is an error setting
           up the new input source.
@exception org.xml.sax.SAXException Any SAX exception, possibly
           wrapping another exception.
@see org.xml.sax.EntityResolver#resolveEntity"
      end

      operation 2555547 "notationDecl"
	public explicit_return_type "void"
	nparams 3
	  param inout name "name" type class_ref 3399692 // String
	  param inout name "publicId" type class_ref 3399692 // String
	  param inout name "systemId" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 303131 // SAXException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "//////////////////////////////////////////////////////////////////
 Default implementation of DTDHandler interface.
//////////////////////////////////////////////////////////////////

Receive notification of a notation declaration.

<p>By default, do nothing.  Application writers may override this
method in a subclass if they wish to keep track of the notations
declared in a document.</p>

@param name The notation name.
@param publicId The notation public identifier, or null if not
                available.
@param systemId The notation system identifier.
@exception org.xml.sax.SAXException Any SAX exception, possibly
           wrapping another exception.
@see org.xml.sax.DTDHandler#notationDecl"
      end

      operation 2555675 "unparsedEntityDecl"
	public explicit_return_type "void"
	nparams 4
	  param inout name "name" type class_ref 3399692 // String
	  param inout name "publicId" type class_ref 3399692 // String
	  param inout name "systemId" type class_ref 3399692 // String
	  param inout name "notationName" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 303131 // SAXException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Receive notification of an unparsed entity declaration.

<p>By default, do nothing.  Application writers may override this
method in a subclass to keep track of the unparsed entities
declared in a document.</p>

@param name The entity name.
@param publicId The entity public identifier, or null if not
                available.
@param systemId The entity system identifier.
@param notationName The name of the associated notation.
@exception org.xml.sax.SAXException Any SAX exception, possibly
           wrapping another exception.
@see org.xml.sax.DTDHandler#unparsedEntityDecl"
      end

      operation 2555803 "setDocumentLocator"
	public explicit_return_type "void"
	nparams 1
	  param inout name "locator" type class_ref 308379 // Locator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "//////////////////////////////////////////////////////////////////
 Default implementation of ContentHandler interface.
//////////////////////////////////////////////////////////////////

Receive a Locator object for document events.

<p>By default, do nothing.  Application writers may override this
method in a subclass if they wish to store the locator for use
with other document events.</p>

@param locator A locator for all SAX document events.
@see org.xml.sax.ContentHandler#setDocumentLocator
@see org.xml.sax.Locator"
      end

      operation 2555931 "startDocument"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 303131 // SAXException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Receive notification of the beginning of the document.

<p>By default, do nothing.  Application writers may override this
method in a subclass to take specific actions at the beginning
of a document (such as allocating the root node of a tree or
creating an output file).</p>

@exception org.xml.sax.SAXException Any SAX exception, possibly
           wrapping another exception.
@see org.xml.sax.ContentHandler#startDocument"
      end

      operation 2556059 "endDocument"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 303131 // SAXException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Receive notification of the end of the document.

<p>By default, do nothing.  Application writers may override this
method in a subclass to take specific actions at the end
of a document (such as finalising a tree or closing an output
file).</p>

@exception org.xml.sax.SAXException Any SAX exception, possibly
           wrapping another exception.
@see org.xml.sax.ContentHandler#endDocument"
      end

      operation 2556187 "startPrefixMapping"
	public explicit_return_type "void"
	nparams 2
	  param inout name "prefix" type class_ref 3399692 // String
	  param inout name "uri" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 303131 // SAXException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Receive notification of the start of a Namespace mapping.

<p>By default, do nothing.  Application writers may override this
method in a subclass to take specific actions at the start of
each Namespace prefix scope (such as storing the prefix mapping).</p>

@param prefix The Namespace prefix being declared.
@param uri The Namespace URI mapped to the prefix.
@exception org.xml.sax.SAXException Any SAX exception, possibly
           wrapping another exception.
@see org.xml.sax.ContentHandler#startPrefixMapping"
      end

      operation 2556315 "endPrefixMapping"
	public explicit_return_type "void"
	nparams 1
	  param inout name "prefix" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 303131 // SAXException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Receive notification of the end of a Namespace mapping.

<p>By default, do nothing.  Application writers may override this
method in a subclass to take specific actions at the end of
each prefix mapping.</p>

@param prefix The Namespace prefix being declared.
@exception org.xml.sax.SAXException Any SAX exception, possibly
           wrapping another exception.
@see org.xml.sax.ContentHandler#endPrefixMapping"
      end

      operation 2556443 "startElement"
	public explicit_return_type "void"
	nparams 4
	  param inout name "uri" type class_ref 3399692 // String
	  param inout name "localName" type class_ref 3399692 // String
	  param inout name "qName" type class_ref 3399692 // String
	  param inout name "attributes" type class_ref 308507 // Attributes
	nexceptions 1
	  exception class_ref 303131 // SAXException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Receive notification of the start of an element.

<p>By default, do nothing.  Application writers may override this
method in a subclass to take specific actions at the start of
each element (such as allocating a new tree node or writing
output to a file).</p>

@param uri The Namespace URI, or the empty string if the
       element has no Namespace URI or if Namespace
       processing is not being performed.
@param localName The local name (without prefix), or the
       empty string if Namespace processing is not being
       performed.
@param qName The qualified name (with prefix), or the
       empty string if qualified names are not available.
@param attributes The attributes attached to the element.  If
       there are no attributes, it shall be an empty
       Attributes object.
@exception org.xml.sax.SAXException Any SAX exception, possibly
           wrapping another exception.
@see org.xml.sax.ContentHandler#startElement"
      end

      operation 2556571 "endElement"
	public explicit_return_type "void"
	nparams 3
	  param inout name "uri" type class_ref 3399692 // String
	  param inout name "localName" type class_ref 3399692 // String
	  param inout name "qName" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 303131 // SAXException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Receive notification of the end of an element.

<p>By default, do nothing.  Application writers may override this
method in a subclass to take specific actions at the end of
each element (such as finalising a tree node or writing
output to a file).</p>

@param uri The Namespace URI, or the empty string if the
       element has no Namespace URI or if Namespace
       processing is not being performed.
@param localName The local name (without prefix), or the
       empty string if Namespace processing is not being
       performed.
@param qName The qualified name (with prefix), or the
       empty string if qualified names are not available.
@exception org.xml.sax.SAXException Any SAX exception, possibly
           wrapping another exception.
@see org.xml.sax.ContentHandler#endElement"
      end

      operation 2556699 "characters"
	public explicit_return_type "void"
	nparams 3
	  param inout name "ch" explicit_type "char"
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  exception class_ref 303131 // SAXException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Receive notification of character data inside an element.

<p>By default, do nothing.  Application writers may override this
method to take specific actions for each chunk of character data
(such as adding the data to a node or buffer, or printing it to
a file).</p>

@param ch The characters.
@param start The start position in the character array.
@param length The number of characters to use from the
              character array.
@exception org.xml.sax.SAXException Any SAX exception, possibly
           wrapping another exception.
@see org.xml.sax.ContentHandler#characters"
      end

      operation 2556827 "ignorableWhitespace"
	public explicit_return_type "void"
	nparams 3
	  param inout name "ch" explicit_type "char"
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  exception class_ref 303131 // SAXException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Receive notification of ignorable whitespace in element content.

<p>By default, do nothing.  Application writers may override this
method to take specific actions for each chunk of ignorable
whitespace (such as adding data to a node or buffer, or printing
it to a file).</p>

@param ch The whitespace characters.
@param start The start position in the character array.
@param length The number of characters to use from the
              character array.
@exception org.xml.sax.SAXException Any SAX exception, possibly
           wrapping another exception.
@see org.xml.sax.ContentHandler#ignorableWhitespace"
      end

      operation 2556955 "processingInstruction"
	public explicit_return_type "void"
	nparams 2
	  param inout name "target" type class_ref 3399692 // String
	  param inout name "data" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 303131 // SAXException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Receive notification of a processing instruction.

<p>By default, do nothing.  Application writers may override this
method in a subclass to take specific actions for each
processing instruction, such as setting status variables or
invoking other methods.</p>

@param target The processing instruction target.
@param data The processing instruction data, or null if
            none is supplied.
@exception org.xml.sax.SAXException Any SAX exception, possibly
           wrapping another exception.
@see org.xml.sax.ContentHandler#processingInstruction"
      end

      operation 2557083 "skippedEntity"
	public explicit_return_type "void"
	nparams 1
	  param inout name "name" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 303131 // SAXException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Receive notification of a skipped entity.

<p>By default, do nothing.  Application writers may override this
method in a subclass to take specific actions for each
processing instruction, such as setting status variables or
invoking other methods.</p>

@param name The name of the skipped entity.
@exception org.xml.sax.SAXException Any SAX exception, possibly
           wrapping another exception.
@see org.xml.sax.ContentHandler#processingInstruction"
      end

      operation 2557211 "warning"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 344347 // SAXParseException
	nexceptions 1
	  exception class_ref 303131 // SAXException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "//////////////////////////////////////////////////////////////////
 Default implementation of the ErrorHandler interface.
//////////////////////////////////////////////////////////////////

Receive notification of a parser warning.

<p>The default implementation does nothing.  Application writers
may override this method in a subclass to take specific actions
for each warning, such as inserting the message in a log file or
printing it to the console.</p>

@param e The warning information encoded as an exception.
@exception org.xml.sax.SAXException Any SAX exception, possibly
           wrapping another exception.
@see org.xml.sax.ErrorHandler#warning
@see org.xml.sax.SAXParseException"
      end

      operation 2557339 "error"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 344347 // SAXParseException
	nexceptions 1
	  exception class_ref 303131 // SAXException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Receive notification of a recoverable parser error.

<p>The default implementation does nothing.  Application writers
may override this method in a subclass to take specific actions
for each error, such as inserting the message in a log file or
printing it to the console.</p>

@param e The warning information encoded as an exception.
@exception org.xml.sax.SAXException Any SAX exception, possibly
           wrapping another exception.
@see org.xml.sax.ErrorHandler#warning
@see org.xml.sax.SAXParseException"
      end

      operation 2557467 "fatalError"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 344347 // SAXParseException
	nexceptions 1
	  exception class_ref 303131 // SAXException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Report a fatal XML parsing error.

<p>The default implementation throws a SAXParseException.
Application writers may override this method in a subclass if
they need to take specific actions for each fatal error (such as
collecting all of the errors into a single report): in any case,
the application must stop all regular processing when this
method is invoked, since the document is no longer reliable, and
the parser may no longer report parsing events.</p>

@param e The error information encoded as an exception.
@exception org.xml.sax.SAXException Any SAX exception, possibly
           wrapping another exception.
@see org.xml.sax.ErrorHandler#fatalError
@see org.xml.sax.SAXParseException"
      end
    end

    class 376859 "AttributesImpl"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Default implementation of the Attributes interface.

<blockquote>
<em>This module, both source code and documentation, is in the
Public Domain, and comes with <strong>NO WARRANTY</strong>.</em>
See <a href='http://www.saxproject.org'>http://www.saxproject.org</a>
for further information.
</blockquote>

<p>This class provides a default implementation of the SAX2
{@link org.xml.sax.Attributes Attributes} interface, with the
addition of manipulators so that the list can be modified or
reused.</p>

<p>There are two typical uses of this class:</p>

<ol>
<li>to take a persistent snapshot of an Attributes object
 in a {@link org.xml.sax.ContentHandler#startElement startElement} event; or</li>
<li>to construct or modify an Attributes object in a SAX2 driver or filter.</li>
</ol>

<p>This class replaces the now-deprecated SAX1 {@link
org.xml.sax.helpers.AttributeListImpl AttributeListImpl}
class; in addition to supporting the updated Attributes
interface rather than the deprecated {@link org.xml.sax.AttributeList
AttributeList} interface, it also includes a much more efficient
implementation using a single array rather than a set of Vectors.</p>

@since SAX 2.0
@author David Megginson
@version 2.0.1 (sax2r2)"
      classrelation 729755 // <realization>
	relation 729755 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 729755 // <realization>
	  b parent class_ref 308507 // Attributes
      end

      operation 2549915 "AttributesImpl"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "//////////////////////////////////////////////////////////////////
 Constructors.
//////////////////////////////////////////////////////////////////

Construct a new, empty AttributesImpl object."
      end

      operation 2550043 "AttributesImpl"
	public explicit_return_type ""
	nparams 1
	  param inout name "atts" type class_ref 308507 // Attributes
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copy an existing Attributes object.

<p>This constructor is especially useful inside a
{@link org.xml.sax.ContentHandler#startElement startElement} event.</p>

@param atts The existing Attributes object."
      end

      operation 2550171 "getLength"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "//////////////////////////////////////////////////////////////////
 Implementation of org.xml.sax.Attributes.
//////////////////////////////////////////////////////////////////

Return the number of attributes in the list.

@return The number of attributes in the list.
@see org.xml.sax.Attributes#getLength"
      end

      operation 2550299 "getURI"
	public return_type class_ref 3399692 // String
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return an attribute's Namespace URI.

@param index The attribute's index (zero-based).
@return The Namespace URI, the empty string if none is
        available, or null if the index is out of range.
@see org.xml.sax.Attributes#getURI"
      end

      operation 2550427 "getLocalName"
	public return_type class_ref 3399692 // String
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return an attribute's local name.

@param index The attribute's index (zero-based).
@return The attribute's local name, the empty string if
        none is available, or null if the index if out of range.
@see org.xml.sax.Attributes#getLocalName"
      end

      operation 2550555 "getQName"
	public return_type class_ref 3399692 // String
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return an attribute's qualified (prefixed) name.

@param index The attribute's index (zero-based).
@return The attribute's qualified name, the empty string if
        none is available, or null if the index is out of bounds.
@see org.xml.sax.Attributes#getQName"
      end

      operation 2550683 "getType"
	public return_type class_ref 3399692 // String
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return an attribute's type by index.

@param index The attribute's index (zero-based).
@return The attribute's type, \"CDATA\" if the type is unknown, or null
        if the index is out of bounds.
@see org.xml.sax.Attributes#getType(int)"
      end

      operation 2550811 "getValue"
	public return_type class_ref 3399692 // String
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return an attribute's value by index.

@param index The attribute's index (zero-based).
@return The attribute's value or null if the index is out of bounds.
@see org.xml.sax.Attributes#getValue(int)"
      end

      operation 2550939 "getIndex"
	public explicit_return_type "int"
	nparams 2
	  param inout name "uri" type class_ref 3399692 // String
	  param inout name "localName" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Look up an attribute's index by Namespace name.

<p>In many cases, it will be more efficient to look up the name once and
use the index query methods rather than using the name query methods
repeatedly.</p>

@param uri The attribute's Namespace URI, or the empty
       string if none is available.
@param localName The attribute's local name.
@return The attribute's index, or -1 if none matches.
@see org.xml.sax.Attributes#getIndex(java.lang.String,java.lang.String)"
      end

      operation 2551067 "getIndex"
	public explicit_return_type "int"
	nparams 1
	  param inout name "qName" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Look up an attribute's index by qualified (prefixed) name.

@param qName The qualified name.
@return The attribute's index, or -1 if none matches.
@see org.xml.sax.Attributes#getIndex(java.lang.String)"
      end

      operation 2551195 "getType"
	public return_type class_ref 3399692 // String
	nparams 2
	  param inout name "uri" type class_ref 3399692 // String
	  param inout name "localName" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Look up an attribute's type by Namespace-qualified name.

@param uri The Namespace URI, or the empty string for a name
       with no explicit Namespace URI.
@param localName The local name.
@return The attribute's type, or null if there is no
        matching attribute.
@see org.xml.sax.Attributes#getType(java.lang.String,java.lang.String)"
      end

      operation 2551323 "getType"
	public return_type class_ref 3399692 // String
	nparams 1
	  param inout name "qName" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Look up an attribute's type by qualified (prefixed) name.

@param qName The qualified name.
@return The attribute's type, or null if there is no
        matching attribute.
@see org.xml.sax.Attributes#getType(java.lang.String)"
      end

      operation 2551451 "getValue"
	public return_type class_ref 3399692 // String
	nparams 2
	  param inout name "uri" type class_ref 3399692 // String
	  param inout name "localName" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Look up an attribute's value by Namespace-qualified name.

@param uri The Namespace URI, or the empty string for a name
       with no explicit Namespace URI.
@param localName The local name.
@return The attribute's value, or null if there is no
        matching attribute.
@see org.xml.sax.Attributes#getValue(java.lang.String,java.lang.String)"
      end

      operation 2551579 "getValue"
	public return_type class_ref 3399692 // String
	nparams 1
	  param inout name "qName" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Look up an attribute's value by qualified (prefixed) name.

@param qName The qualified name.
@return The attribute's value, or null if there is no
        matching attribute.
@see org.xml.sax.Attributes#getValue(java.lang.String)"
      end

      operation 2551707 "clear"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "//////////////////////////////////////////////////////////////////
 Manipulators.
//////////////////////////////////////////////////////////////////

Clear the attribute list for reuse.

<p>Note that little memory is freed by this call:
the current array is kept so it can be
reused.</p>"
      end

      operation 2551835 "setAttributes"
	public explicit_return_type "void"
	nparams 1
	  param inout name "atts" type class_ref 308507 // Attributes
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copy an entire Attributes object.

<p>It may be more efficient to reuse an existing object
rather than constantly allocating new ones.</p>

@param atts The attributes to copy."
      end

      operation 2551963 "addAttribute"
	public explicit_return_type "void"
	nparams 5
	  param inout name "uri" type class_ref 3399692 // String
	  param inout name "localName" type class_ref 3399692 // String
	  param inout name "qName" type class_ref 3399692 // String
	  param inout name "type" type class_ref 3399692 // String
	  param inout name "value" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add an attribute to the end of the list.

<p>For the sake of speed, this method does no checking
to see if the attribute is already in the list: that is
the responsibility of the application.</p>

@param uri The Namespace URI, or the empty string if
       none is available or Namespace processing is not
       being performed.
@param localName The local name, or the empty string if
       Namespace processing is not being performed.
@param qName The qualified (prefixed) name, or the empty string
       if qualified names are not available.
@param type The attribute type as a string.
@param value The attribute value."
      end

      operation 2552091 "setAttribute"
	public explicit_return_type "void"
	nparams 6
	  param in name "index" explicit_type "int"
	  param inout name "uri" type class_ref 3399692 // String
	  param inout name "localName" type class_ref 3399692 // String
	  param inout name "qName" type class_ref 3399692 // String
	  param inout name "type" type class_ref 3399692 // String
	  param inout name "value" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set an attribute in the list.

<p>For the sake of speed, this method does no checking
for name conflicts or well-formedness: such checks are the
responsibility of the application.</p>

@param index The index of the attribute (zero-based).
@param uri The Namespace URI, or the empty string if
       none is available or Namespace processing is not
       being performed.
@param localName The local name, or the empty string if
       Namespace processing is not being performed.
@param qName The qualified name, or the empty string
       if qualified names are not available.
@param type The attribute type as a string.
@param value The attribute value.
@exception java.lang.ArrayIndexOutOfBoundsException When the
           supplied index does not point to an attribute
           in the list."
      end

      operation 2552219 "removeAttribute"
	public explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove an attribute from the list.

@param index The index of the attribute (zero-based).
@exception java.lang.ArrayIndexOutOfBoundsException When the
           supplied index does not point to an attribute
           in the list."
      end

      operation 2552347 "setURI"
	public explicit_return_type "void"
	nparams 2
	  param in name "index" explicit_type "int"
	  param inout name "uri" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the Namespace URI of a specific attribute.

@param index The index of the attribute (zero-based).
@param uri The attribute's Namespace URI, or the empty
       string for none.
@exception java.lang.ArrayIndexOutOfBoundsException When the
           supplied index does not point to an attribute
           in the list."
      end

      operation 2552475 "setLocalName"
	public explicit_return_type "void"
	nparams 2
	  param in name "index" explicit_type "int"
	  param inout name "localName" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the local name of a specific attribute.

@param index The index of the attribute (zero-based).
@param localName The attribute's local name, or the empty
       string for none.
@exception java.lang.ArrayIndexOutOfBoundsException When the
           supplied index does not point to an attribute
           in the list."
      end

      operation 2552603 "setQName"
	public explicit_return_type "void"
	nparams 2
	  param in name "index" explicit_type "int"
	  param inout name "qName" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the qualified name of a specific attribute.

@param index The index of the attribute (zero-based).
@param qName The attribute's qualified name, or the empty
       string for none.
@exception java.lang.ArrayIndexOutOfBoundsException When the
           supplied index does not point to an attribute
           in the list."
      end

      operation 2552731 "setType"
	public explicit_return_type "void"
	nparams 2
	  param in name "index" explicit_type "int"
	  param inout name "type" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the type of a specific attribute.

@param index The index of the attribute (zero-based).
@param type The attribute's type.
@exception java.lang.ArrayIndexOutOfBoundsException When the
           supplied index does not point to an attribute
           in the list."
      end

      operation 2552859 "setValue"
	public explicit_return_type "void"
	nparams 2
	  param in name "index" explicit_type "int"
	  param inout name "value" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the value of a specific attribute.

@param index The index of the attribute (zero-based).
@param value The attribute's value.
@exception java.lang.ArrayIndexOutOfBoundsException When the
           supplied index does not point to an attribute
           in the list."
      end

      operation 2552987 "ensureCapacity"
	private explicit_return_type "void"
	nparams 1
	  param in name "n" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "//////////////////////////////////////////////////////////////////
 Internal methods.
//////////////////////////////////////////////////////////////////

Ensure the internal array's capacity.

@param n The minimum number of attributes that the array must
       be able to hold."
      end

      operation 2553115 "badIndex"
	private explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "int"
	nexceptions 1
	  exception class_ref 147739 // ArrayIndexOutOfBoundsException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Report a bad array index in a manipulator.

@param index The index to report.
@exception java.lang.ArrayIndexOutOfBoundsException Always."
      end

      attribute 663451 "length"
	package explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "//////////////////////////////////////////////////////////////////
 Internal state.
//////////////////////////////////////////////////////////////////"
      end

      classrelation 729883 // data (<unidirectional association>)
	relation 729883 --->
	  a role_name "data" multiplicity "[]" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 729883 // data (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end
    end

    class 377627 "LocatorImpl"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Provide an optional convenience implementation of Locator.

<blockquote>
<em>This module, both source code and documentation, is in the
Public Domain, and comes with <strong>NO WARRANTY</strong>.</em>
See <a href='http://www.saxproject.org'>http://www.saxproject.org</a>
for further information.
</blockquote>

<p>This class is available mainly for application writers, who
can use it to make a persistent snapshot of a locator at any
point during a document parse:</p>

<pre>
Locator locator;
Locator startloc;

public void setLocator (Locator locator)
{
        // note the locator
  this.locator = locator;
}

public void startDocument ()
{
        // save the location of the start of the document
        // for future use.
  Locator startloc = new LocatorImpl(locator);
}
</pre>

<p>Normally, parser writers will not use this class, since it
is more efficient to provide location information only when
requested, rather than constantly updating a Locator object.</p>

@since SAX 1.0
@author David Megginson
@version 2.0.1 (sax2r2)
@see org.xml.sax.Locator Locator"
      classrelation 731547 // <realization>
	relation 731547 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 731547 // <realization>
	  b parent class_ref 308379 // Locator
      end

      operation 2560027 "LocatorImpl"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Zero-argument constructor.

<p>This will not normally be useful, since the main purpose
of this class is to make a snapshot of an existing Locator.</p>"
      end

      operation 2560155 "LocatorImpl"
	public explicit_return_type ""
	nparams 1
	  param inout name "locator" type class_ref 308379 // Locator
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copy constructor.

<p>Create a persistent copy of the current state of a locator.
When the original locator changes, this copy will still keep
the original values (and it can be used outside the scope of
DocumentHandler methods).</p>

@param locator The locator to copy."
      end

      operation 2560283 "getPublicId"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "//////////////////////////////////////////////////////////////////
 Implementation of org.xml.sax.Locator
//////////////////////////////////////////////////////////////////

Return the saved public identifier.

@return The public identifier as a string, or null if none
        is available.
@see org.xml.sax.Locator#getPublicId
@see #setPublicId"
      end

      operation 2560411 "getSystemId"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the saved system identifier.

@return The system identifier as a string, or null if none
        is available.
@see org.xml.sax.Locator#getSystemId
@see #setSystemId"
      end

      operation 2560539 "getLineNumber"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the saved line number (1-based).

@return The line number as an integer, or -1 if none is available.
@see org.xml.sax.Locator#getLineNumber
@see #setLineNumber"
      end

      operation 2560667 "getColumnNumber"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the saved column number (1-based).

@return The column number as an integer, or -1 if none is available.
@see org.xml.sax.Locator#getColumnNumber
@see #setColumnNumber"
      end

      operation 2560795 "setPublicId"
	public explicit_return_type "void"
	nparams 1
	  param inout name "publicId" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "//////////////////////////////////////////////////////////////////
 Setters for the properties (not in org.xml.sax.Locator)
//////////////////////////////////////////////////////////////////

Set the public identifier for this locator.

@param publicId The new public identifier, or null
       if none is available.
@see #getPublicId"
      end

      operation 2560923 "setSystemId"
	public explicit_return_type "void"
	nparams 1
	  param inout name "systemId" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the system identifier for this locator.

@param systemId The new system identifier, or null
       if none is available.
@see #getSystemId"
      end

      operation 2561051 "setLineNumber"
	public explicit_return_type "void"
	nparams 1
	  param in name "lineNumber" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the line number for this locator (1-based).

@param lineNumber The line number, or -1 if none is available.
@see #getLineNumber"
      end

      operation 2561179 "setColumnNumber"
	public explicit_return_type "void"
	nparams 1
	  param in name "columnNumber" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the column number for this locator (1-based).

@param columnNumber The column number, or -1 if none is available.
@see #getColumnNumber"
      end

      classrelation 731675 // publicId (<unidirectional association>)
	relation 731675 --->
	  a role_name "publicId" private
	    comment "//////////////////////////////////////////////////////////////////
 Internal state.
//////////////////////////////////////////////////////////////////
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 731675 // publicId (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 731803 // systemId (<unidirectional association>)
	relation 731803 --->
	  a role_name "systemId" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 731803 // systemId (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      attribute 663835 "lineNumber"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 663963 "columnNumber"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 377755 "AttributeListImpl"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@Deprecated
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Default implementation for AttributeList.

<blockquote>
<em>This module, both source code and documentation, is in the
Public Domain, and comes with <strong>NO WARRANTY</strong>.</em>
See <a href='http://www.saxproject.org'>http://www.saxproject.org</a>
for further information.
</blockquote>

<p>AttributeList implements the deprecated SAX1 {@link
org.xml.sax.AttributeList AttributeList} interface, and has been
replaced by the new SAX2 {@link org.xml.sax.helpers.AttributesImpl
AttributesImpl} interface.</p>

<p>This class provides a convenience implementation of the SAX
{@link org.xml.sax.AttributeList AttributeList} interface.  This
implementation is useful both for SAX parser writers, who can use
it to provide attributes to the application, and for SAX application
writers, who can use it to create a persistent copy of an element's
attribute specifications:</p>

<pre>
private AttributeList myatts;

public void startElement (String name, AttributeList atts)
{
             // create a persistent copy of the attribute list
             // for use outside this method
  myatts = new AttributeListImpl(atts);
  [...]
}
</pre>

<p>Please note that SAX parsers are not required to use this
class to provide an implementation of AttributeList; it is
supplied only as an optional convenience.  In particular,
parser writers are encouraged to invent more efficient
implementations.</p>

@deprecated This class implements a deprecated interface,
            {@link org.xml.sax.AttributeList AttributeList};
            that interface has been replaced by
            {@link org.xml.sax.Attributes Attributes},
            which is implemented in the
            {@link org.xml.sax.helpers.AttributesImpl
           AttributesImpl} helper class.
@since SAX 1.0
@author David Megginson
@version 2.0.1 (sax2r2)
@see org.xml.sax.AttributeList
@see org.xml.sax.DocumentHandler#startElement"
      classrelation 732443 // <realization>
	relation 732443 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 732443 // <realization>
	  b parent class_ref 376347 // AttributeList
      end

      operation 2562075 "AttributeListImpl"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create an empty attribute list.

<p>This constructor is most useful for parser writers, who
will use it to create a single, reusable attribute list that
can be reset with the clear method between elements.</p>

@see #addAttribute
@see #clear"
      end

      operation 2562203 "AttributeListImpl"
	public explicit_return_type ""
	nparams 1
	  param inout name "atts" type class_ref 376347 // AttributeList
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a persistent copy of an existing attribute list.

<p>This constructor is most useful for application writers,
who will use it to create a persistent copy of an existing
attribute list.</p>

@param atts The attribute list to copy
@see org.xml.sax.DocumentHandler#startElement"
      end

      operation 2562331 "setAttributeList"
	public explicit_return_type "void"
	nparams 1
	  param inout name "atts" type class_ref 376347 // AttributeList
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "//////////////////////////////////////////////////////////////////
 Methods specific to this class.
//////////////////////////////////////////////////////////////////

Set the attribute list, discarding previous contents.

<p>This method allows an application writer to reuse an
attribute list easily.</p>

@param atts The attribute list to copy."
      end

      operation 2562459 "addAttribute"
	public explicit_return_type "void"
	nparams 3
	  param inout name "name" type class_ref 3399692 // String
	  param inout name "type" type class_ref 3399692 // String
	  param inout name "value" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add an attribute to an attribute list.

<p>This method is provided for SAX parser writers, to allow them
to build up an attribute list incrementally before delivering
it to the application.</p>

@param name The attribute name.
@param type The attribute type (\"NMTOKEN\" for an enumeration).
@param value The attribute value (must not be null).
@see #removeAttribute
@see org.xml.sax.DocumentHandler#startElement"
      end

      operation 2562587 "removeAttribute"
	public explicit_return_type "void"
	nparams 1
	  param inout name "name" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove an attribute from the list.

<p>SAX application writers can use this method to filter an
attribute out of an AttributeList.  Note that invoking this
method will change the length of the attribute list and
some of the attribute's indices.</p>

<p>If the requested attribute is not in the list, this is
a no-op.</p>

@param name The attribute name.
@see #addAttribute"
      end

      operation 2562715 "clear"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Clear the attribute list.

<p>SAX parser writers can use this method to reset the attribute
list between DocumentHandler.startElement events.  Normally,
it will make sense to reuse the same AttributeListImpl object
rather than allocating a new one each time.</p>

@see org.xml.sax.DocumentHandler#startElement"
      end

      operation 2562843 "getLength"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "//////////////////////////////////////////////////////////////////
 Implementation of org.xml.sax.AttributeList
//////////////////////////////////////////////////////////////////

Return the number of attributes in the list.

@return The number of attributes in the list.
@see org.xml.sax.AttributeList#getLength"
      end

      operation 2562971 "getName"
	public return_type class_ref 3399692 // String
	nparams 1
	  param in name "i" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the name of an attribute (by position).

@param i The position of the attribute in the list.
@return The attribute name as a string, or null if there
        is no attribute at that position.
@see org.xml.sax.AttributeList#getName(int)"
      end

      operation 2563099 "getType"
	public return_type class_ref 3399692 // String
	nparams 1
	  param in name "i" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the type of an attribute (by position).

@param i The position of the attribute in the list.
@return The attribute type as a string (\"NMTOKEN\" for an
        enumeration, and \"CDATA\" if no declaration was
        read), or null if there is no attribute at
        that position.
@see org.xml.sax.AttributeList#getType(int)"
      end

      operation 2563227 "getValue"
	public return_type class_ref 3399692 // String
	nparams 1
	  param in name "i" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the value of an attribute (by position).

@param i The position of the attribute in the list.
@return The attribute value as a string, or null if
        there is no attribute at that position.
@see org.xml.sax.AttributeList#getValue(int)"
      end

      operation 2563355 "getType"
	public return_type class_ref 3399692 // String
	nparams 1
	  param inout name "name" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the type of an attribute (by name).

@param name The attribute name.
@return The attribute type as a string (\"NMTOKEN\" for an
        enumeration, and \"CDATA\" if no declaration was
        read).
@see org.xml.sax.AttributeList#getType(java.lang.String)"
      end

      operation 2563483 "getValue"
	public return_type class_ref 3399692 // String
	nparams 1
	  param inout name "name" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the value of an attribute (by name).

@param name The attribute name.
@return the named attribute's value or null, if the attribute does not
        exist.
@see org.xml.sax.AttributeList#getValue(java.lang.String)"
      end

      classrelation 732571 // names (<unidirectional association>)
	relation 732571 --->
	  a role_name "names" init_value " new ArrayList<String>()" private
	    comment "//////////////////////////////////////////////////////////////////
 Internal state.
//////////////////////////////////////////////////////////////////
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String> ${name}${value};
"
	    classrelation_ref 732571 // names (<unidirectional association>)
	  b parent class_ref 138267 // ArrayList
      end

      classrelation 732699 // types (<unidirectional association>)
	relation 732699 --->
	  a role_name "types" init_value " new ArrayList<String>()" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String> ${name}${value};
"
	    classrelation_ref 732699 // types (<unidirectional association>)
	  b parent class_ref 138267 // ArrayList
      end

      classrelation 732827 // values (<unidirectional association>)
	relation 732827 --->
	  a role_name "values" init_value " new ArrayList<String>()" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String> ${name}${value};
"
	    classrelation_ref 732827 // values (<unidirectional association>)
	  b parent class_ref 138267 // ArrayList
      end
    end

    class 377883 "NamespaceSupport"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Encapsulate Namespace logic for use by applications using SAX,
or internally by SAX drivers.

<blockquote>
<em>This module, both source code and documentation, is in the
Public Domain, and comes with <strong>NO WARRANTY</strong>.</em>
See <a href='http://www.saxproject.org'>http://www.saxproject.org</a>
for further information.
</blockquote>

<p>This class encapsulates the logic of Namespace processing: it
tracks the declarations currently in force for each context and
automatically processes qualified XML names into their Namespace
parts; it can also be used in reverse for generating XML qnames
from Namespaces.</p>

<p>Namespace support objects are reusable, but the reset method
must be invoked between each session.</p>

<p>Here is a simple session:</p>

<pre>
String parts[] = new String[3];
NamespaceSupport support = new NamespaceSupport();

support.pushContext();
support.declarePrefix(\"\", \"http://www.w3.org/1999/xhtml\");
support.declarePrefix(\"dc\", \"http://www.purl.org/dc#\");

parts = support.processName(\"p\", parts, false);
System.out.println(\"Namespace URI: \" + parts[0]);
System.out.println(\"Local name: \" + parts[1]);
System.out.println(\"Raw name: \" + parts[2]);

parts = support.processName(\"dc:title\", parts, false);
System.out.println(\"Namespace URI: \" + parts[0]);
System.out.println(\"Local name: \" + parts[1]);
System.out.println(\"Raw name: \" + parts[2]);

support.popContext();
</pre>

<p>Note that this class is optimized for the use case where most
elements do not contain Namespace declarations: if the same
prefix/URI mapping is repeated for each context (for example), this
class will be somewhat less efficient.</p>

<p>Although SAX drivers (parsers) may choose to use this class to
implement namespace handling, they are not required to do so.
Applications must track namespace information themselves if they
want to use namespace information.

@since SAX 2.0
@author David Megginson
@version 2.0.1 (sax2r2)"
      classrelation 732955 // XMLNS (<unidirectional association>)
	relation 732955 --->
	  a role_name "XMLNS" init_value "
    \"http://www.w3.org/XML/1998/namespace\"" class_relation const_relation public
	    comment "//////////////////////////////////////////////////////////////////
 Constants.
//////////////////////////////////////////////////////////////////

The XML Namespace URI as a constant.
The value is <code>http://www.w3.org/XML/1998/namespace</code>
as defined in the \"Namespaces in XML\" * recommendation.

<p>This is the Namespace URI that is automatically mapped
to the \"xml\" prefix.</p>

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 732955 // XMLNS (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 733083 // NSDECL (<unidirectional association>)
	relation 733083 --->
	  a role_name "NSDECL" init_value "
    \"http://www.w3.org/xmlns/2000/\"" class_relation const_relation public
	    comment "
The namespace declaration URI as a constant.
The value is <code>http://www.w3.org/xmlns/2000/</code>, as defined
in a backwards-incompatible erratum to the \"Namespaces in XML\"
recommendation.  Because that erratum postdated SAX2, SAX2 defaults
to the original recommendation, and does not normally use this URI.


<p>This is the Namespace URI that is optionally applied to
<em>xmlns</em> and <em>xmlns:*</em> attributes, which are used to
declare namespaces.  </p>

@since SAX 2.1alpha
@see #setNamespaceDeclUris
@see #isNamespaceDeclUris

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 733083 // NSDECL (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 733211 // EMPTY_ENUMERATION (<unidirectional association>)
	relation 733211 --->
	  a role_name "EMPTY_ENUMERATION" init_value " Collections.enumeration(Collections.emptyList())" class_relation const_relation private
	    comment "
An empty enumeration.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 733211 // EMPTY_ENUMERATION (<unidirectional association>)
	  b parent class_ref 145947 // Enumeration
      end

      operation 2563611 "NamespaceSupport"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "//////////////////////////////////////////////////////////////////
 Constructor.
//////////////////////////////////////////////////////////////////

Create a new Namespace support object."
      end

      operation 2563739 "reset"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "//////////////////////////////////////////////////////////////////
 Context management.
//////////////////////////////////////////////////////////////////

Reset this Namespace support object for reuse.

<p>It is necessary to invoke this method before reusing the
Namespace support object for a new session.  If namespace
declaration URIs are to be supported, that flag must also
be set to a non-default value.
</p>

@see #setNamespaceDeclUris"
      end

      operation 2563867 "pushContext"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Start a new Namespace context.
The new context will automatically inherit
the declarations of its parent context, but it will also keep
track of which declarations were made within this context.

<p>Event callback code should start a new context once per element.
This means being ready to call this in either of two places.
For elements that don't include namespace declarations, the
<em>ContentHandler.startElement()</em> callback is the right place.
For elements with such a declaration, it'd done in the first
<em>ContentHandler.startPrefixMapping()</em> callback.
A boolean flag can be used to
track whether a context has been started yet.  When either of
those methods is called, it checks the flag to see if a new context
needs to be started.  If so, it starts the context and sets the
flag.  After <em>ContentHandler.startElement()</em>
does that, it always clears the flag.

<p>Normally, SAX drivers would push a new context at the beginning
of each XML element.  Then they perform a first pass over the
attributes to process all namespace declarations, making
<em>ContentHandler.startPrefixMapping()</em> callbacks.
Then a second pass is made, to determine the namespace-qualified
names for all attributes and for the element name.
Finally all the information for the
<em>ContentHandler.startElement()</em> callback is available,
so it can then be made.

<p>The Namespace support object always starts with a base context
already in force: in this context, only the \"xml\" prefix is
declared.</p>

@see org.xml.sax.ContentHandler
@see #popContext"
      end

      operation 2563995 "popContext"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Revert to the previous Namespace context.

<p>Normally, you should pop the context at the end of each
XML element.  After popping the context, all Namespace prefix
mappings that were previously in force are restored.</p>

<p>You must not attempt to declare additional Namespace
prefixes after popping a context, unless you push another
context first.</p>

@see #pushContext"
      end

      operation 2564123 "declarePrefix"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "prefix" type class_ref 3399692 // String
	  param inout name "uri" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "//////////////////////////////////////////////////////////////////
 Operations within a context.
//////////////////////////////////////////////////////////////////

Declare a Namespace prefix.  All prefixes must be declared
before they are referenced.  For example, a SAX driver (parser)
would scan an element's attributes
in two passes:  first for namespace declarations,
then a second pass using {@link #processName processName()} to
interpret prefixes against (potentially redefined) prefixes.

<p>This method declares a prefix in the current Namespace
context; the prefix will remain in force until this context
is popped, unless it is shadowed in a descendant context.</p>

<p>To declare the default element Namespace, use the empty string as
the prefix.</p>

<p>Note that you must <em>not</em> declare a prefix after
you've pushed and popped another Namespace context, or
treated the declarations phase as complete by processing
a prefixed name.</p>

<p>Note that there is an asymmetry in this library: {@link
#getPrefix getPrefix} will not return the \"\" prefix,
even if you have declared a default element namespace.
To check for a default namespace,
you have to look it up explicitly using {@link #getURI getURI}.
This asymmetry exists to make it easier to look up prefixes
for attribute names, where the default prefix is not allowed.</p>

@param prefix The prefix to declare, or the empty string to
   indicate the default element namespace.  This may never have
   the value \"xml\" or \"xmlns\".
@param uri The Namespace URI to associate with the prefix.
@return true if the prefix was legal, false otherwise

@see #processName
@see #getURI
@see #getPrefix"
      end

      operation 2564251 "processName"
	public return_type class_ref 3399692 // String
	nparams 3
	  param inout name "qName" type class_ref 3399692 // String
	  param inout name "parts" type class_ref 3399692 // String
	  param inout name "isAttribute" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Process a raw XML qualified name, after all declarations in the
current context have been handled by {@link #declarePrefix
declarePrefix()}.

<p>This method processes a raw XML qualified name in the
current context by removing the prefix and looking it up among
the prefixes currently declared.  The return value will be the
array supplied by the caller, filled in as follows:</p>

<dl>
<dt>parts[0]</dt>
<dd>The Namespace URI, or an empty string if none is
 in use.</dd>
<dt>parts[1]</dt>
<dd>The local name (without prefix).</dd>
<dt>parts[2]</dt>
<dd>The original raw name.</dd>
</dl>

<p>All of the strings in the array will be internalized.  If
the raw name has a prefix that has not been declared, then
the return value will be null.</p>

<p>Note that attribute names are processed differently than
element names: an unprefixed element name will receive the
default Namespace (if any), while an unprefixed attribute name
will not.</p>

@param qName The XML qualified name to be processed.
@param parts An array supplied by the caller, capable of
       holding at least three members.
@param isAttribute A flag indicating whether this is an
       attribute name (true) or an element name (false).
@return The supplied array holding three internalized strings
       representing the Namespace URI (or empty string), the
       local name, and the XML qualified name; or null if there
       is an undeclared prefix.
@see #declarePrefix
@see java.lang.String#intern "
      end

      operation 2564379 "getURI"
	public return_type class_ref 3399692 // String
	nparams 1
	  param inout name "prefix" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Look up a prefix and get the currently-mapped Namespace URI.

<p>This method looks up the prefix in the current context.
Use the empty string (\"\") for the default Namespace.</p>

@param prefix The prefix to look up.
@return The associated Namespace URI, or null if the prefix
        is undeclared in this context.
@see #getPrefix
@see #getPrefixes"
      end

      operation 2564507 "getPrefixes"
	public return_type class_ref 145947 // Enumeration
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return an enumeration of all prefixes whose declarations are
active in the current context.
This includes declarations from parent contexts that have
not been overridden.

<p><strong>Note:</strong> if there is a default prefix, it will not be
returned in this enumeration; check for the default prefix
using the {@link #getURI getURI} with an argument of \"\".</p>

@return An enumeration of prefixes (never empty).
@see #getDeclaredPrefixes
@see #getURI"
      end

      operation 2564635 "getPrefix"
	public return_type class_ref 3399692 // String
	nparams 1
	  param inout name "uri" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return one of the prefixes mapped to a Namespace URI.

<p>If more than one prefix is currently mapped to the same
URI, this method will make an arbitrary selection; if you
want all of the prefixes, use the {@link #getPrefixes}
method instead.</p>

<p><strong>Note:</strong> this will never return the empty (default) prefix;
to check for a default prefix, use the {@link #getURI getURI}
method with an argument of \"\".</p>

@param uri the namespace URI
@return one of the prefixes currently mapped to the URI supplied,
        or null if none is mapped or if the URI is assigned to
        the default namespace
@see #getPrefixes(java.lang.String)
@see #getURI"
      end

      operation 2564763 "getPrefixes"
	public return_type class_ref 145947 // Enumeration
	nparams 1
	  param inout name "uri" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return an enumeration of all prefixes for a given URI whose
declarations are active in the current context.
This includes declarations from parent contexts that have
not been overridden.

<p>This method returns prefixes mapped to a specific Namespace
URI.  The xml: prefix will be included.  If you want only one
prefix that's mapped to the Namespace URI, and you don't care
which one you get, use the {@link #getPrefix getPrefix}
 method instead.</p>

<p><strong>Note:</strong> the empty (default) prefix is <em>never</em> included
in this enumeration; to check for the presence of a default
Namespace, use the {@link #getURI getURI} method with an
argument of \"\".</p>

@param uri The Namespace URI.
@return An enumeration of prefixes (never empty).
@see #getPrefix
@see #getDeclaredPrefixes
@see #getURI"
      end

      operation 2564891 "getDeclaredPrefixes"
	public return_type class_ref 145947 // Enumeration
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return an enumeration of all prefixes declared in this context.

<p>The empty (default) prefix will be included in this
enumeration; note that this behaviour differs from that of
{@link #getPrefix} and {@link #getPrefixes}.</p>

@return An enumeration of all prefixes declared in this
        context.
@see #getPrefixes
@see #getURI"
      end

      operation 2565019 "setNamespaceDeclUris"
	public explicit_return_type "void"
	nparams 1
	  param inout name "value" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Controls whether namespace declaration attributes are placed
into the {@link #NSDECL NSDECL} namespace
by {@link #processName processName()}.  This may only be
changed before any contexts have been pushed.

@param value the namespace declaration attribute state. A value of true
             enables this feature, a value of false disables it.

@since SAX 2.1alpha

@exception IllegalStateException when attempting to set this
   after any context has been pushed."
      end

      operation 2565147 "isNamespaceDeclUris"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if namespace declaration attributes are placed into
a namespace.  This behavior is not the default.

@return true if namespace declaration attributes are enabled, false
        otherwise.
@since SAX 2.1alpha"
      end

      class 378011 "Context"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 2565275 "Context"
	  package explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Create the root-level Namespace context."
	end

	operation 2565403 "setParent"
	  package explicit_return_type "void"
	  nparams 1
	    param inout name "parent" type class_ref 378011 // Context
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "(Re)set the parent of this Namespace context.
The context must either have been freshly constructed,
or must have been cleared.

@param context The parent Namespace context object."
	end

	operation 2565531 "clear"
	  package explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Makes associated state become collectible,
invalidating this context.
{@link #setParent} must be called before
this context may be used again."
	end

	operation 2565659 "declarePrefix"
	  package explicit_return_type "void"
	  nparams 2
	    param inout name "prefix" type class_ref 3399692 // String
	    param inout name "uri" type class_ref 3399692 // String
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Declare a Namespace prefix for this context.

@param prefix The prefix to declare.
@param uri The associated Namespace URI.
@see org.xml.sax.helpers.NamespaceSupport#declarePrefix"
	end

	operation 2565787 "processName"
	  package return_type class_ref 3399692 // String
	  nparams 2
	    param inout name "qName" type class_ref 3399692 // String
	    param inout name "isAttribute" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Process an XML qualified name in this context.

@param qName The XML qualified name.
@param isAttribute true if this is an attribute name.
@return An array of three strings containing the
        URI part (or empty string), the local part,
        and the raw name, all internalized, or null
        if there is an undeclared prefix.
@see org.xml.sax.helpers.NamespaceSupport#processName"
	end

	operation 2565915 "getURI"
	  package return_type class_ref 3399692 // String
	  nparams 1
	    param inout name "prefix" type class_ref 3399692 // String
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Look up the URI associated with a prefix in this context.

@param prefix The prefix to look up.
@return The associated Namespace URI, or null if none is
        declared.
@see org.xml.sax.helpers.NamespaceSupport#getURI"
	end

	operation 2566043 "getPrefix"
	  package return_type class_ref 3399692 // String
	  nparams 1
	    param inout name "uri" type class_ref 3399692 // String
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Look up one of the prefixes associated with a URI in this context.

<p>Since many prefixes may be mapped to the same URI,
the return value may be unreliable.</p>

@param uri The URI to look up.
@return The associated prefix, or null if none is declared.
@see org.xml.sax.helpers.NamespaceSupport#getPrefix"
	end

	operation 2566171 "getDeclaredPrefixes"
	  package return_type class_ref 145947 // Enumeration
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Return an enumeration of prefixes declared in this context.

@return An enumeration of prefixes (possibly empty).
@see org.xml.sax.helpers.NamespaceSupport#getDeclaredPrefixes"
	end

	operation 2566299 "getPrefixes"
	  package return_type class_ref 145947 // Enumeration
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Return an enumeration of all prefixes currently in force.

<p>The default prefix, if in force, is <em>not</em>
returned, and will have to be checked for separately.</p>

@return An enumeration of prefixes (never empty).
@see org.xml.sax.helpers.NamespaceSupport#getPrefixes"
	end

	operation 2566427 "copyTables"
	  private explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "//////////////////////////////////////////////////////////////
 Internal methods.
//////////////////////////////////////////////////////////////

Copy on write for the internal tables in this context.

<p>This class is optimized for the normal case where most
elements do not contain Namespace declarations.</p>"
	end

	classrelation 733595 // prefixTable (<unidirectional association>)
	  relation 733595 --->
	    a role_name "prefixTable" package
	      comment "//////////////////////////////////////////////////////////////
 Protected state.
//////////////////////////////////////////////////////////////
"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 733595 // prefixTable (<unidirectional association>)
	    b parent class_ref 164379 // Hashtable
	end

	classrelation 733723 // uriTable (<unidirectional association>)
	  relation 733723 --->
	    a role_name "uriTable" package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 733723 // uriTable (<unidirectional association>)
	    b parent class_ref 164379 // Hashtable
	end

	classrelation 733851 // elementNameTable (<unidirectional association>)
	  relation 733851 --->
	    a role_name "elementNameTable" package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 733851 // elementNameTable (<unidirectional association>)
	    b parent class_ref 164379 // Hashtable
	end

	classrelation 733979 // attributeNameTable (<unidirectional association>)
	  relation 733979 --->
	    a role_name "attributeNameTable" package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 733979 // attributeNameTable (<unidirectional association>)
	    b parent class_ref 164379 // Hashtable
	end

	classrelation 734107 // defaultNS (<unidirectional association>)
	  relation 734107 --->
	    a role_name "defaultNS" init_value " null" package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 734107 // defaultNS (<unidirectional association>)
	    b parent class_ref 3399692 // String
	end

	attribute 664347 "declsOK"
	  package explicit_type "boolean"
	  init_value " true"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 734235 // declarations (<unidirectional association>)
	  relation 734235 --->
	    a role_name "declarations" init_value " null" private
	      comment "//////////////////////////////////////////////////////////////
 Internal state.
//////////////////////////////////////////////////////////////
"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String> ${name}${value};
"
	      classrelation_ref 734235 // declarations (<unidirectional association>)
	    b parent class_ref 138267 // ArrayList
	end

	attribute 664475 "declSeen"
	  private explicit_type "boolean"
	  init_value " false"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 734363 // parent (<unidirectional association>)
	  relation 734363 --->
	    a role_name "parent" init_value " null" private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 734363 // parent (<unidirectional association>)
	    b parent class_ref 378011 // Context
	end
      end

      classrelation 733339 // contexts (<unidirectional association>)
	relation 733339 --->
	  a role_name "contexts" multiplicity "[]" private
	    comment "//////////////////////////////////////////////////////////////////
 Internal state.
//////////////////////////////////////////////////////////////////
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 733339 // contexts (<unidirectional association>)
	  b parent class_ref 378011 // Context
      end

      classrelation 733467 // currentContext (<unidirectional association>)
	relation 733467 --->
	  a role_name "currentContext" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 733467 // currentContext (<unidirectional association>)
	  b parent class_ref 378011 // Context
      end

      attribute 664091 "contextPos"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 664219 "namespaceDeclUris"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 378139 "NewInstance"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Create a new instance of a class by name.

<blockquote>
<em>This module, both source code and documentation, is in the
Public Domain, and comes with <strong>NO WARRANTY</strong>.</em>
See <a href='http://www.saxproject.org'>http://www.saxproject.org</a>
for further information.
</blockquote>

<p>This class contains a static method for creating an instance of a
class from an explicit class name.  It tries to use the thread's context
ClassLoader if possible and falls back to using
Class.forName(String).</p>

<p>This code is designed to compile and run on JDK version 1.1 and later
including versions of Java 2.</p>

@author Edwin Goei, David Brownell
@version 2.0.1 (sax2r2)"
      operation 2566555 "newInstance"
	class_operation package return_type class_ref 3401484 // Object
	nparams 2
	  param inout name "classLoader" type class_ref 138523 // ClassLoader
	  param inout name "className" type class_ref 3399692 // String
	nexceptions 3
	  exception class_ref 128795 // ClassNotFoundException
	  exception class_ref 150427 // IllegalAccessException
	  exception class_ref 150299 // InstantiationException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new instance of the specified class name

Package private so this code is not exposed at the API level."
      end

      operation 2566683 "getClassLoader"
	class_operation package return_type class_ref 138523 // ClassLoader
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Figure out which ClassLoader to use.  For JDK 1.2 and later use
the context ClassLoader."
      end
    end

    class 378267 "ParserAdapter"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Adapt a SAX1 Parser as a SAX2 XMLReader.

<blockquote>
<em>This module, both source code and documentation, is in the
Public Domain, and comes with <strong>NO WARRANTY</strong>.</em>
See <a href='http://www.saxproject.org'>http://www.saxproject.org</a>
for further information.
</blockquote>

<p>This class wraps a SAX1 {@link org.xml.sax.Parser Parser}
and makes it act as a SAX2 {@link org.xml.sax.XMLReader XMLReader},
with feature, property, and Namespace support.  Note
that it is not possible to report {@link org.xml.sax.ContentHandler#skippedEntity
skippedEntity} events, since SAX1 does not make that information available.</p>

<p>This adapter does not test for duplicate Namespace-qualified
attribute names.</p>

@since SAX 2.0
@author David Megginson
@version 2.0.1 (sax2r2)
@see org.xml.sax.helpers.XMLReaderAdapter
@see org.xml.sax.XMLReader
@see org.xml.sax.Parser"
      classrelation 734491 // <realization>
	relation 734491 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 734491 // <realization>
	  b parent class_ref 304923 // XMLReader
      end

      classrelation 734619 // <realization>
	relation 734619 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 734619 // <realization>
	  b parent class_ref 376475 // DocumentHandler
      end

      operation 2566811 "ParserAdapter"
	public explicit_return_type ""
	nparams 0
	nexceptions 1
	  exception class_ref 303131 // SAXException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "//////////////////////////////////////////////////////////////////
 Constructors.
//////////////////////////////////////////////////////////////////

Construct a new parser adapter.

<p>Use the \"org.xml.sax.parser\" property to locate the
embedded SAX1 driver.</p>

@exception SAXException If the embedded driver
           cannot be instantiated or if the
           org.xml.sax.parser property is not specified."
      end

      operation 2566939 "ParserAdapter"
	public explicit_return_type ""
	nparams 1
	  param inout name "parser" type class_ref 304795 // Parser
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a new parser adapter.

<p>Note that the embedded parser cannot be changed once the
adapter is created; to embed a different parser, allocate
a new ParserAdapter.</p>

@param parser The SAX1 parser to embed.
@exception java.lang.NullPointerException If the parser parameter
           is null."
      end

      operation 2567067 "setup"
	private explicit_return_type "void"
	nparams 1
	  param inout name "parser" type class_ref 304795 // Parser
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Internal setup method.

@param parser The embedded parser.
@exception java.lang.NullPointerException If the parser parameter
           is null."
      end

      classrelation 734747 // FEATURES (<unidirectional association>)
	relation 734747 --->
	  a role_name "FEATURES" init_value " \"http://xml.org/sax/features/\"" class_relation const_relation private
	    comment "//////////////////////////////////////////////////////////////////
 Implementation of org.xml.sax.XMLReader.
//////////////////////////////////////////////////////////////////

 Internal constants for the sake of convenience.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 734747 // FEATURES (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 734875 // NAMESPACES (<unidirectional association>)
	relation 734875 --->
	  a role_name "NAMESPACES" init_value " FEATURES + \"namespaces\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 734875 // NAMESPACES (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 735003 // NAMESPACE_PREFIXES (<unidirectional association>)
	relation 735003 --->
	  a role_name "NAMESPACE_PREFIXES" init_value " FEATURES + \"namespace-prefixes\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 735003 // NAMESPACE_PREFIXES (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 735131 // XMLNS_URIs (<unidirectional association>)
	relation 735131 --->
	  a role_name "XMLNS_URIs" init_value " FEATURES + \"xmlns-uris\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 735131 // XMLNS_URIs (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      operation 2567195 "setFeature"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 3399692 // String
	  param inout name "value" explicit_type "boolean"
	nexceptions 2
	  exception class_ref 305051 // SAXNotRecognizedException
	  exception class_ref 305179 // SAXNotSupportedException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set a feature flag for the parser.

<p>The only features recognized are namespaces and
namespace-prefixes.</p>

@param name The feature name, as a complete URI.
@param value The requested feature value.
@exception SAXNotRecognizedException If the feature
           can't be assigned or retrieved.
@exception SAXNotSupportedException If the feature
           can't be assigned that value.
@see org.xml.sax.XMLReader#setFeature"
      end

      operation 2567323 "getFeature"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "name" type class_ref 3399692 // String
	nexceptions 2
	  exception class_ref 305051 // SAXNotRecognizedException
	  exception class_ref 305179 // SAXNotSupportedException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check a parser feature flag.

<p>The only features recognized are namespaces and
namespace-prefixes.</p>

@param name The feature name, as a complete URI.
@return The current feature value.
@exception SAXNotRecognizedException If the feature
           value can't be assigned or retrieved.
@exception SAXNotSupportedException If the
           feature is not currently readable.
@see org.xml.sax.XMLReader#setFeature"
      end

      operation 2567451 "setProperty"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 3399692 // String
	  param inout name "value" type class_ref 3401484 // Object
	nexceptions 2
	  exception class_ref 305051 // SAXNotRecognizedException
	  exception class_ref 305179 // SAXNotSupportedException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set a parser property.

<p>No properties are currently recognized.</p>

@param name The property name.
@param value The property value.
@exception SAXNotRecognizedException If the property
           value can't be assigned or retrieved.
@exception SAXNotSupportedException If the property
           can't be assigned that value.
@see org.xml.sax.XMLReader#setProperty"
      end

      operation 2567579 "getProperty"
	public return_type class_ref 3401484 // Object
	nparams 1
	  param inout name "name" type class_ref 3399692 // String
	nexceptions 2
	  exception class_ref 305051 // SAXNotRecognizedException
	  exception class_ref 305179 // SAXNotSupportedException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get a parser property.

<p>No properties are currently recognized.</p>

@param name The property name.
@return The property value.
@exception SAXNotRecognizedException If the property
           value can't be assigned or retrieved.
@exception SAXNotSupportedException If the property
           value is not currently readable.
@see org.xml.sax.XMLReader#getProperty"
      end

      operation 2567707 "setEntityResolver"
	public explicit_return_type "void"
	nparams 1
	  param inout name "resolver" type class_ref 303387 // EntityResolver
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the entity resolver.

@param resolver The new entity resolver.
@see org.xml.sax.XMLReader#setEntityResolver"
      end

      operation 2567835 "getEntityResolver"
	public return_type class_ref 303387 // EntityResolver
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the current entity resolver.

@return The current entity resolver, or null if none was supplied.
@see org.xml.sax.XMLReader#getEntityResolver"
      end

      operation 2567963 "setDTDHandler"
	public explicit_return_type "void"
	nparams 1
	  param inout name "handler" type class_ref 308635 // DTDHandler
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the DTD handler.

@param handler the new DTD handler
@see org.xml.sax.XMLReader#setEntityResolver"
      end

      operation 2568091 "getDTDHandler"
	public return_type class_ref 308635 // DTDHandler
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the current DTD handler.

@return the current DTD handler, or null if none was supplied
@see org.xml.sax.XMLReader#getEntityResolver"
      end

      operation 2568219 "setContentHandler"
	public explicit_return_type "void"
	nparams 1
	  param inout name "handler" type class_ref 307483 // ContentHandler
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the content handler.

@param handler the new content handler
@see org.xml.sax.XMLReader#setEntityResolver"
      end

      operation 2568347 "getContentHandler"
	public return_type class_ref 307483 // ContentHandler
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the current content handler.

@return The current content handler, or null if none was supplied.
@see org.xml.sax.XMLReader#getEntityResolver"
      end

      operation 2568475 "setErrorHandler"
	public explicit_return_type "void"
	nparams 1
	  param inout name "handler" type class_ref 303515 // ErrorHandler
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the error handler.

@param handler The new error handler.
@see org.xml.sax.XMLReader#setEntityResolver"
      end

      operation 2568603 "getErrorHandler"
	public return_type class_ref 303515 // ErrorHandler
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the current error handler.

@return The current error handler, or null if none was supplied.
@see org.xml.sax.XMLReader#getEntityResolver"
      end

      operation 2568731 "parse"
	public explicit_return_type "void"
	nparams 1
	  param inout name "systemId" type class_ref 3399692 // String
	nexceptions 2
	  exception class_ref 128539 // IOException
	  exception class_ref 303131 // SAXException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parse an XML document.

@param systemId The absolute URL of the document.
@exception java.io.IOException If there is a problem reading
           the raw content of the document.
@exception SAXException If there is a problem
           processing the document.
@see #parse(org.xml.sax.InputSource)
@see org.xml.sax.Parser#parse(java.lang.String)"
      end

      operation 2568859 "parse"
	public explicit_return_type "void"
	nparams 1
	  param inout name "input" type class_ref 303259 // InputSource
	nexceptions 2
	  exception class_ref 128539 // IOException
	  exception class_ref 303131 // SAXException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parse an XML document.

@param input An input source for the document.
@exception java.io.IOException If there is a problem reading
           the raw content of the document.
@exception SAXException If there is a problem
           processing the document.
@see #parse(java.lang.String)
@see org.xml.sax.Parser#parse(org.xml.sax.InputSource)"
      end

      operation 2568987 "setDocumentLocator"
	public explicit_return_type "void"
	nparams 1
	  param inout name "locator" type class_ref 308379 // Locator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "//////////////////////////////////////////////////////////////////
 Implementation of org.xml.sax.DocumentHandler.
//////////////////////////////////////////////////////////////////

Adapter implementation method; do not call.
Adapt a SAX1 document locator event.

@param locator A document locator.
@see org.xml.sax.ContentHandler#setDocumentLocator"
      end

      operation 2569115 "startDocument"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 303131 // SAXException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adapter implementation method; do not call.
Adapt a SAX1 start document event.

@exception SAXException The client may raise a
           processing exception.
@see org.xml.sax.DocumentHandler#startDocument"
      end

      operation 2569243 "endDocument"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 303131 // SAXException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adapter implementation method; do not call.
Adapt a SAX1 end document event.

@exception SAXException The client may raise a
           processing exception.
@see org.xml.sax.DocumentHandler#endDocument"
      end

      operation 2569371 "startElement"
	public explicit_return_type "void"
	nparams 2
	  param inout name "qName" type class_ref 3399692 // String
	  param inout name "qAtts" type class_ref 376347 // AttributeList
	nexceptions 1
	  exception class_ref 303131 // SAXException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adapter implementation method; do not call.
Adapt a SAX1 startElement event.

<p>If necessary, perform Namespace processing.</p>

@param qName The qualified (prefixed) name.
@param qAtts The XML attribute list (with qnames).
@exception SAXException The client may raise a
           processing exception."
      end

      operation 2569499 "endElement"
	public explicit_return_type "void"
	nparams 1
	  param inout name "qName" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 303131 // SAXException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adapter implementation method; do not call.
Adapt a SAX1 end element event.

@param qName The qualified (prefixed) name.
@exception SAXException The client may raise a
           processing exception.
@see org.xml.sax.DocumentHandler#endElement"
      end

      operation 2569627 "characters"
	public explicit_return_type "void"
	nparams 3
	  param inout name "ch" explicit_type "char"
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  exception class_ref 303131 // SAXException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adapter implementation method; do not call.
Adapt a SAX1 characters event.

@param ch An array of characters.
@param start The starting position in the array.
@param length The number of characters to use.
@exception SAXException The client may raise a
           processing exception.
@see org.xml.sax.DocumentHandler#characters"
      end

      operation 2569755 "ignorableWhitespace"
	public explicit_return_type "void"
	nparams 3
	  param inout name "ch" explicit_type "char"
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  exception class_ref 303131 // SAXException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adapter implementation method; do not call.
Adapt a SAX1 ignorable whitespace event.

@param ch An array of characters.
@param start The starting position in the array.
@param length The number of characters to use.
@exception SAXException The client may raise a
           processing exception.
@see org.xml.sax.DocumentHandler#ignorableWhitespace"
      end

      operation 2569883 "processingInstruction"
	public explicit_return_type "void"
	nparams 2
	  param inout name "target" type class_ref 3399692 // String
	  param inout name "data" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 303131 // SAXException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adapter implementation method; do not call.
Adapt a SAX1 processing instruction event.

@param target The processing instruction target.
@param data The remainder of the processing instruction
@exception SAXException The client may raise a
           processing exception.
@see org.xml.sax.DocumentHandler#processingInstruction"
      end

      operation 2570011 "setupParser"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "//////////////////////////////////////////////////////////////////
 Internal utility methods.
//////////////////////////////////////////////////////////////////

Initialize the parser before each run."
      end

      operation 2570139 "processName"
	private return_type class_ref 3399692 // String
	nparams 3
	  param inout name "qName" type class_ref 3399692 // String
	  param inout name "isAttribute" explicit_type "boolean"
	  param inout name "useException" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 303131 // SAXException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Process a qualified (prefixed) name.

<p>If the name has an undeclared prefix, use only the qname
and make an ErrorHandler.error callback in case the app is
interested.</p>

@param qName The qualified (prefixed) name.
@param isAttribute true if this is an attribute name.
@return The name split into three parts.
@exception SAXException The client may throw
           an exception if there is an error callback."
      end

      operation 2570267 "reportError"
	package explicit_return_type "void"
	nparams 1
	  param inout name "message" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 303131 // SAXException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Report a non-fatal error.

@param message The error message.
@exception SAXException The client may throw
           an exception."
      end

      operation 2570395 "makeException"
	private return_type class_ref 344347 // SAXParseException
	nparams 1
	  param inout name "message" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct an exception for the current context.

@param message The error message."
      end

      operation 2570523 "checkNotParsing"
	private explicit_return_type "void"
	nparams 2
	  param inout name "type" type class_ref 3399692 // String
	  param inout name "name" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 305179 // SAXNotSupportedException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Throw an exception if we are parsing.

<p>Use this method to detect illegal feature or
property changes.</p>

@param type The type of thing (feature or property).
@param name The feature or property name.
@exception SAXNotSupportedException If a
           document is currently being parsed."
      end

      classrelation 735259 // nsSupport (<unidirectional association>)
	relation 735259 --->
	  a role_name "nsSupport" private
	    comment "//////////////////////////////////////////////////////////////////
 Internal state.
//////////////////////////////////////////////////////////////////
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 735259 // nsSupport (<unidirectional association>)
	  b parent class_ref 377883 // NamespaceSupport
      end

      class 378395 "AttributeListAdapter"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 736539 // <realization>
	  relation 736539 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 736539 // <realization>
	    b parent class_ref 308507 // Attributes
	end

	operation 2570651 "AttributeListAdapter"
	  package explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Construct a new adapter."
	end

	operation 2570779 "setAttributeList"
	  package explicit_return_type "void"
	  nparams 1
	    param inout name "qAtts" type class_ref 376347 // AttributeList
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Set the embedded AttributeList.

<p>This method must be invoked before any of the others
can be used.</p>

@param The SAX1 attribute list (with qnames)."
	end

	operation 2570907 "getLength"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Return the length of the attribute list.

@return The number of attributes in the list.
@see org.xml.sax.Attributes#getLength"
	end

	operation 2571035 "getURI"
	  public return_type class_ref 3399692 // String
	  nparams 1
	    param in name "i" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Return the Namespace URI of the specified attribute.

@param The attribute's index.
@return Always the empty string.
@see org.xml.sax.Attributes#getURI"
	end

	operation 2571163 "getLocalName"
	  public return_type class_ref 3399692 // String
	  nparams 1
	    param in name "i" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Return the local name of the specified attribute.

@param The attribute's index.
@return Always the empty string.
@see org.xml.sax.Attributes#getLocalName"
	end

	operation 2571291 "getQName"
	  public return_type class_ref 3399692 // String
	  nparams 1
	    param in name "i" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Return the qualified (prefixed) name of the specified attribute.

@param The attribute's index.
@return The attribute's qualified name, internalized."
	end

	operation 2571419 "getType"
	  public return_type class_ref 3399692 // String
	  nparams 1
	    param in name "i" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Return the type of the specified attribute.

@param The attribute's index.
@return The attribute's type as an internalized string."
	end

	operation 2571547 "getValue"
	  public return_type class_ref 3399692 // String
	  nparams 1
	    param in name "i" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Return the value of the specified attribute.

@param The attribute's index.
@return The attribute's value."
	end

	operation 2571675 "getIndex"
	  public explicit_return_type "int"
	  nparams 2
	    param inout name "uri" type class_ref 3399692 // String
	    param inout name "localName" type class_ref 3399692 // String
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Look up an attribute index by Namespace name.

@param uri The Namespace URI or the empty string.
@param localName The local name.
@return The attributes index, or -1 if none was found.
@see org.xml.sax.Attributes#getIndex(java.lang.String,java.lang.String)"
	end

	operation 2571803 "getIndex"
	  public explicit_return_type "int"
	  nparams 1
	    param inout name "qName" type class_ref 3399692 // String
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Look up an attribute index by qualified (prefixed) name.

@param qName The qualified name.
@return The attributes index, or -1 if none was found.
@see org.xml.sax.Attributes#getIndex(java.lang.String)"
	end

	operation 2571931 "getType"
	  public return_type class_ref 3399692 // String
	  nparams 2
	    param inout name "uri" type class_ref 3399692 // String
	    param inout name "localName" type class_ref 3399692 // String
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Look up the type of an attribute by Namespace name.

@param uri The Namespace URI
@param localName The local name.
@return The attribute's type as an internalized string."
	end

	operation 2572059 "getType"
	  public return_type class_ref 3399692 // String
	  nparams 1
	    param inout name "qName" type class_ref 3399692 // String
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Look up the type of an attribute by qualified (prefixed) name.

@param qName The qualified name.
@return The attribute's type as an internalized string."
	end

	operation 2572187 "getValue"
	  public return_type class_ref 3399692 // String
	  nparams 2
	    param inout name "uri" type class_ref 3399692 // String
	    param inout name "localName" type class_ref 3399692 // String
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Look up the value of an attribute by Namespace name.

@param uri The Namespace URI
@param localName The local name.
@return The attribute's value."
	end

	operation 2572315 "getValue"
	  public return_type class_ref 3399692 // String
	  nparams 1
	    param inout name "qName" type class_ref 3399692 // String
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Look up the value of an attribute by qualified (prefixed) name.

@param qName The qualified name.
@return The attribute's value."
	end

	classrelation 736667 // qAtts (<unidirectional association>)
	  relation 736667 --->
	    a role_name "qAtts" private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 736667 // qAtts (<unidirectional association>)
	    b parent class_ref 376347 // AttributeList
	end
      end

      classrelation 735387 // attAdapter (<unidirectional association>)
	relation 735387 --->
	  a role_name "attAdapter" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 735387 // attAdapter (<unidirectional association>)
	  b parent class_ref 378395 // AttributeListAdapter
      end

      attribute 664603 "parsing"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 735515 // nameParts (<unidirectional association>)
	relation 735515 --->
	  a role_name "nameParts" multiplicity "[]" init_value " new String[3]" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 735515 // nameParts (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 735643 // parser (<unidirectional association>)
	relation 735643 --->
	  a role_name "parser" init_value " null" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 735643 // parser (<unidirectional association>)
	  b parent class_ref 304795 // Parser
      end

      classrelation 735771 // atts (<unidirectional association>)
	relation 735771 --->
	  a role_name "atts" init_value " null" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 735771 // atts (<unidirectional association>)
	  b parent class_ref 376859 // AttributesImpl
      end

      attribute 664731 "namespaces"
	private explicit_type "boolean"
	init_value " true"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Features"
      end

      attribute 664859 "prefixes"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 664987 "uris"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 735899 // locator (<unidirectional association>)
	relation 735899 --->
	  a role_name "locator" package
	    comment " Properties
 Handlers
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 735899 // locator (<unidirectional association>)
	  b parent class_ref 308379 // Locator
      end

      classrelation 736027 // entityResolver (<unidirectional association>)
	relation 736027 --->
	  a role_name "entityResolver" init_value " null" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 736027 // entityResolver (<unidirectional association>)
	  b parent class_ref 303387 // EntityResolver
      end

      classrelation 736155 // dtdHandler (<unidirectional association>)
	relation 736155 --->
	  a role_name "dtdHandler" init_value " null" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 736155 // dtdHandler (<unidirectional association>)
	  b parent class_ref 308635 // DTDHandler
      end

      classrelation 736283 // contentHandler (<unidirectional association>)
	relation 736283 --->
	  a role_name "contentHandler" init_value " null" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 736283 // contentHandler (<unidirectional association>)
	  b parent class_ref 307483 // ContentHandler
      end

      classrelation 736411 // errorHandler (<unidirectional association>)
	relation 736411 --->
	  a role_name "errorHandler" init_value " null" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 736411 // errorHandler (<unidirectional association>)
	  b parent class_ref 303515 // ErrorHandler
      end
    end

    class 378523 "ParserFactory"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@Deprecated
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Java-specific class for dynamically loading SAX parsers.

<blockquote>
<em>This module, both source code and documentation, is in the
Public Domain, and comes with <strong>NO WARRANTY</strong>.</em>
See <a href='http://www.saxproject.org'>http://www.saxproject.org</a>
for further information.
</blockquote>

<p><strong>Note:</strong> This class is designed to work with the now-deprecated
SAX1 {@link org.xml.sax.Parser Parser} class.  SAX2 applications should use
{@link org.xml.sax.helpers.XMLReaderFactory XMLReaderFactory} instead.</p>

<p>ParserFactory is not part of the platform-independent definition
of SAX; it is an additional convenience class designed
specifically for Java XML application writers.  SAX applications
can use the static methods in this class to allocate a SAX parser
dynamically at run-time based either on the value of the
`org.xml.sax.parser' system property or on a string containing the class
name.</p>

<p>Note that the application still requires an XML parser that
implements SAX1.</p>

@deprecated This class works with the deprecated
            {@link org.xml.sax.Parser Parser}
            interface.
@since SAX 1.0
@author David Megginson
@version 2.0.1 (sax2r2)"
      operation 2572443 "ParserFactory"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Private null constructor."
      end

      operation 2572571 "makeParser"
	class_operation public return_type class_ref 304795 // Parser
	nparams 0
	nexceptions 5
	  exception class_ref 128795 // ClassNotFoundException
	  exception class_ref 150427 // IllegalAccessException
	  exception class_ref 150299 // InstantiationException
	  exception class_ref 156699 // NullPointerException
	  exception class_ref 150683 // ClassCastException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new SAX parser using the `org.xml.sax.parser' system property.

<p>The named class must exist and must implement the
{@link org.xml.sax.Parser Parser} interface.</p>

@return the newly created parser.

@exception java.lang.NullPointerException There is no value
           for the `org.xml.sax.parser' system property.
@exception java.lang.ClassNotFoundException The SAX parser
           class was not found (check your CLASSPATH).
@exception IllegalAccessException The SAX parser class was
           found, but you do not have permission to load
           it.
@exception InstantiationException The SAX parser class was
           found but could not be instantiated.
@exception java.lang.ClassCastException The SAX parser class
           was found and instantiated, but does not implement
           org.xml.sax.Parser.
@see #makeParser(java.lang.String)
@see org.xml.sax.Parser"
      end

      operation 2572699 "makeParser"
	class_operation public return_type class_ref 304795 // Parser
	nparams 1
	  param inout name "className" type class_ref 3399692 // String
	nexceptions 4
	  exception class_ref 128795 // ClassNotFoundException
	  exception class_ref 150427 // IllegalAccessException
	  exception class_ref 150299 // InstantiationException
	  exception class_ref 150683 // ClassCastException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new SAX parser object using the class name provided.

<p>The named class must exist and must implement the
{@link org.xml.sax.Parser Parser} interface.</p>

@return the newly created parser.

@param className A string containing the name of the
                 SAX parser class.
@exception java.lang.ClassNotFoundException The SAX parser
           class was not found (check your CLASSPATH).
@exception IllegalAccessException The SAX parser class was
           found, but you do not have permission to load
           it.
@exception InstantiationException The SAX parser class was
           found but could not be instantiated.
@exception java.lang.ClassCastException The SAX parser class
           was found and instantiated, but does not implement
           org.xml.sax.Parser.
@see #makeParser()
@see org.xml.sax.Parser"
      end
    end

    class 378651 "XMLFilterImpl"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Base class for deriving an XML filter.

<blockquote>
<em>This module, both source code and documentation, is in the
Public Domain, and comes with <strong>NO WARRANTY</strong>.</em>
See <a href='http://www.saxproject.org'>http://www.saxproject.org</a>
for further information.
</blockquote>

<p>This class is designed to sit between an {@link org.xml.sax.XMLReader
XMLReader} and the client application's event handlers.  By default, it
does nothing but pass requests up to the reader and events
on to the handlers unmodified, but subclasses can override
specific methods to modify the event stream or the configuration
requests as they pass through.</p>

@since SAX 2.0
@author David Megginson
@version 2.0.1 (sax2r2)
@see org.xml.sax.XMLFilter
@see org.xml.sax.XMLReader
@see org.xml.sax.EntityResolver
@see org.xml.sax.DTDHandler
@see org.xml.sax.ContentHandler
@see org.xml.sax.ErrorHandler"
      classrelation 736795 // <realization>
	relation 736795 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 736795 // <realization>
	  b parent class_ref 308251 // XMLFilter
      end

      classrelation 736923 // <realization>
	relation 736923 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 736923 // <realization>
	  b parent class_ref 303387 // EntityResolver
      end

      classrelation 737051 // <realization>
	relation 737051 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 737051 // <realization>
	  b parent class_ref 308635 // DTDHandler
      end

      classrelation 737179 // <realization>
	relation 737179 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 737179 // <realization>
	  b parent class_ref 307483 // ContentHandler
      end

      classrelation 737307 // <realization>
	relation 737307 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 737307 // <realization>
	  b parent class_ref 303515 // ErrorHandler
      end

      operation 2572827 "XMLFilterImpl"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "//////////////////////////////////////////////////////////////////
 Constructors.
//////////////////////////////////////////////////////////////////

Construct an empty XML filter, with no parent.

<p>This filter will have no parent: you must assign a parent
before you start a parse or do any configuration with
setFeature or setProperty, unless you use this as a pure event
consumer rather than as an {@link XMLReader}.</p>

@see org.xml.sax.XMLReader#setFeature
@see org.xml.sax.XMLReader#setProperty
@see #setParent"
      end

      operation 2572955 "XMLFilterImpl"
	public explicit_return_type ""
	nparams 1
	  param inout name "parent" type class_ref 304923 // XMLReader
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct an XML filter with the specified parent.

@param parent the XML reader from which this filter receives its events.

@see #setParent
@see #getParent"
      end

      operation 2573083 "setParent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "parent" type class_ref 304923 // XMLReader
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "//////////////////////////////////////////////////////////////////
 Implementation of org.xml.sax.XMLFilter.
//////////////////////////////////////////////////////////////////

Set the parent reader.

<p>This is the {@link org.xml.sax.XMLReader XMLReader} from which
this filter will obtain its events and to which it will pass its
configuration requests.  The parent may itself be another filter.</p>

<p>If there is no parent reader set, any attempt to parse
or to set or get a feature or property will fail.</p>

@param parent The parent XML reader.
@see #getParent"
      end

      operation 2573211 "getParent"
	public return_type class_ref 304923 // XMLReader
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the parent reader.

@return The parent XML reader, or null if none is set.
@see #setParent"
      end

      operation 2573339 "setFeature"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 3399692 // String
	  param inout name "value" explicit_type "boolean"
	nexceptions 2
	  exception class_ref 305051 // SAXNotRecognizedException
	  exception class_ref 305179 // SAXNotSupportedException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "//////////////////////////////////////////////////////////////////
 Implementation of org.xml.sax.XMLReader.
//////////////////////////////////////////////////////////////////

Set the value of a feature.

<p>This will always fail if the parent is null.</p>

@param name The feature name.
@param value The requested feature value.
@exception org.xml.sax.SAXNotRecognizedException If the feature
           value can't be assigned or retrieved from the parent.
@exception org.xml.sax.SAXNotSupportedException When the
           parent recognizes the feature name but
           cannot set the requested value."
      end

      operation 2573467 "getFeature"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "name" type class_ref 3399692 // String
	nexceptions 2
	  exception class_ref 305051 // SAXNotRecognizedException
	  exception class_ref 305179 // SAXNotSupportedException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Look up the value of a feature.

<p>This will always fail if the parent is null.</p>

@param name The feature name.
@return The current value of the feature.
@exception org.xml.sax.SAXNotRecognizedException If the feature
           value can't be assigned or retrieved from the parent.
@exception org.xml.sax.SAXNotSupportedException When the
           parent recognizes the feature name but
           cannot determine its value at this time."
      end

      operation 2573595 "setProperty"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 3399692 // String
	  param inout name "value" type class_ref 3401484 // Object
	nexceptions 2
	  exception class_ref 305051 // SAXNotRecognizedException
	  exception class_ref 305179 // SAXNotSupportedException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the value of a property.

<p>This will always fail if the parent is null.</p>

@param name The property name.
@param value The requested property value.
@exception org.xml.sax.SAXNotRecognizedException If the property
           value can't be assigned or retrieved from the parent.
@exception org.xml.sax.SAXNotSupportedException When the
           parent recognizes the property name but
           cannot set the requested value."
      end

      operation 2573723 "getProperty"
	public return_type class_ref 3401484 // Object
	nparams 1
	  param inout name "name" type class_ref 3399692 // String
	nexceptions 2
	  exception class_ref 305051 // SAXNotRecognizedException
	  exception class_ref 305179 // SAXNotSupportedException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Look up the value of a property.

@param name The property name.
@return The current value of the property.
@exception org.xml.sax.SAXNotRecognizedException If the property
           value can't be assigned or retrieved from the parent.
@exception org.xml.sax.SAXNotSupportedException When the
           parent recognizes the property name but
           cannot determine its value at this time."
      end

      operation 2573851 "setEntityResolver"
	public explicit_return_type "void"
	nparams 1
	  param inout name "resolver" type class_ref 303387 // EntityResolver
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the entity resolver.

@param resolver The new entity resolver."
      end

      operation 2573979 "getEntityResolver"
	public return_type class_ref 303387 // EntityResolver
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the current entity resolver.

@return The current entity resolver, or null if none was set."
      end

      operation 2574107 "setDTDHandler"
	public explicit_return_type "void"
	nparams 1
	  param inout name "handler" type class_ref 308635 // DTDHandler
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the DTD event handler.

@param handler the new DTD handler"
      end

      operation 2574235 "getDTDHandler"
	public return_type class_ref 308635 // DTDHandler
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the current DTD event handler.

@return The current DTD handler, or null if none was set."
      end

      operation 2574363 "setContentHandler"
	public explicit_return_type "void"
	nparams 1
	  param inout name "handler" type class_ref 307483 // ContentHandler
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the content event handler.

@param handler the new content handler"
      end

      operation 2574491 "getContentHandler"
	public return_type class_ref 307483 // ContentHandler
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the content event handler.

@return The current content handler, or null if none was set."
      end

      operation 2574619 "setErrorHandler"
	public explicit_return_type "void"
	nparams 1
	  param inout name "handler" type class_ref 303515 // ErrorHandler
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the error event handler.

@param handler the new error handler"
      end

      operation 2574747 "getErrorHandler"
	public return_type class_ref 303515 // ErrorHandler
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the current error event handler.

@return The current error handler, or null if none was set."
      end

      operation 2574875 "parse"
	public explicit_return_type "void"
	nparams 1
	  param inout name "input" type class_ref 303259 // InputSource
	nexceptions 2
	  exception class_ref 303131 // SAXException
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parse a document.

@param input The input source for the document entity.
@exception org.xml.sax.SAXException Any SAX exception, possibly
           wrapping another exception.
@exception java.io.IOException An IO exception from the parser,
           possibly from a byte stream or character stream
           supplied by the application."
      end

      operation 2575003 "parse"
	public explicit_return_type "void"
	nparams 1
	  param inout name "systemId" type class_ref 3399692 // String
	nexceptions 2
	  exception class_ref 303131 // SAXException
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parse a document.

@param systemId The system identifier as a fully-qualified URI.
@exception org.xml.sax.SAXException Any SAX exception, possibly
           wrapping another exception.
@exception java.io.IOException An IO exception from the parser,
           possibly from a byte stream or character stream
           supplied by the application."
      end

      operation 2575131 "resolveEntity"
	public return_type class_ref 303259 // InputSource
	nparams 2
	  param inout name "publicId" type class_ref 3399692 // String
	  param inout name "systemId" type class_ref 3399692 // String
	nexceptions 2
	  exception class_ref 303131 // SAXException
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "//////////////////////////////////////////////////////////////////
 Implementation of org.xml.sax.EntityResolver.
//////////////////////////////////////////////////////////////////

Filter an external entity resolution.

@param publicId The entity's public identifier, or null.
@param systemId The entity's system identifier.
@return A new InputSource or null for the default.
@exception org.xml.sax.SAXException The client may throw
           an exception during processing.
@exception java.io.IOException The client may throw an
           I/O-related exception while obtaining the
           new InputSource."
      end

      operation 2575259 "notationDecl"
	public explicit_return_type "void"
	nparams 3
	  param inout name "name" type class_ref 3399692 // String
	  param inout name "publicId" type class_ref 3399692 // String
	  param inout name "systemId" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 303131 // SAXException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "//////////////////////////////////////////////////////////////////
 Implementation of org.xml.sax.DTDHandler.
//////////////////////////////////////////////////////////////////

Filter a notation declaration event.

@param name The notation name.
@param publicId The notation's public identifier, or null.
@param systemId The notation's system identifier, or null.
@exception org.xml.sax.SAXException The client may throw
           an exception during processing."
      end

      operation 2575387 "unparsedEntityDecl"
	public explicit_return_type "void"
	nparams 4
	  param inout name "name" type class_ref 3399692 // String
	  param inout name "publicId" type class_ref 3399692 // String
	  param inout name "systemId" type class_ref 3399692 // String
	  param inout name "notationName" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 303131 // SAXException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Filter an unparsed entity declaration event.

@param name The entity name.
@param publicId The entity's public identifier, or null.
@param systemId The entity's system identifier, or null.
@param notationName The name of the associated notation.
@exception org.xml.sax.SAXException The client may throw
           an exception during processing."
      end

      operation 2575515 "setDocumentLocator"
	public explicit_return_type "void"
	nparams 1
	  param inout name "locator" type class_ref 308379 // Locator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "//////////////////////////////////////////////////////////////////
 Implementation of org.xml.sax.ContentHandler.
//////////////////////////////////////////////////////////////////

Filter a new document locator event.

@param locator The document locator."
      end

      operation 2575643 "startDocument"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 303131 // SAXException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Filter a start document event.

@exception org.xml.sax.SAXException The client may throw
           an exception during processing."
      end

      operation 2575771 "endDocument"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 303131 // SAXException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Filter an end document event.

@exception org.xml.sax.SAXException The client may throw
           an exception during processing."
      end

      operation 2575899 "startPrefixMapping"
	public explicit_return_type "void"
	nparams 2
	  param inout name "prefix" type class_ref 3399692 // String
	  param inout name "uri" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 303131 // SAXException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Filter a start Namespace prefix mapping event.

@param prefix The Namespace prefix.
@param uri The Namespace URI.
@exception org.xml.sax.SAXException The client may throw
           an exception during processing."
      end

      operation 2576027 "endPrefixMapping"
	public explicit_return_type "void"
	nparams 1
	  param inout name "prefix" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 303131 // SAXException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Filter an end Namespace prefix mapping event.

@param prefix The Namespace prefix.
@exception org.xml.sax.SAXException The client may throw
           an exception during processing."
      end

      operation 2576155 "startElement"
	public explicit_return_type "void"
	nparams 4
	  param inout name "uri" type class_ref 3399692 // String
	  param inout name "localName" type class_ref 3399692 // String
	  param inout name "qName" type class_ref 3399692 // String
	  param inout name "atts" type class_ref 308507 // Attributes
	nexceptions 1
	  exception class_ref 303131 // SAXException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Filter a start element event.

@param uri The element's Namespace URI, or the empty string.
@param localName The element's local name, or the empty string.
@param qName The element's qualified (prefixed) name, or the empty
       string.
@param atts The element's attributes.
@exception org.xml.sax.SAXException The client may throw
           an exception during processing."
      end

      operation 2576283 "endElement"
	public explicit_return_type "void"
	nparams 3
	  param inout name "uri" type class_ref 3399692 // String
	  param inout name "localName" type class_ref 3399692 // String
	  param inout name "qName" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 303131 // SAXException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Filter an end element event.

@param uri The element's Namespace URI, or the empty string.
@param localName The element's local name, or the empty string.
@param qName The element's qualified (prefixed) name, or the empty
       string.
@exception org.xml.sax.SAXException The client may throw
           an exception during processing."
      end

      operation 2576411 "characters"
	public explicit_return_type "void"
	nparams 3
	  param inout name "ch" explicit_type "char"
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  exception class_ref 303131 // SAXException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Filter a character data event.

@param ch An array of characters.
@param start The starting position in the array.
@param length The number of characters to use from the array.
@exception org.xml.sax.SAXException The client may throw
           an exception during processing."
      end

      operation 2576539 "ignorableWhitespace"
	public explicit_return_type "void"
	nparams 3
	  param inout name "ch" explicit_type "char"
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  exception class_ref 303131 // SAXException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Filter an ignorable whitespace event.

@param ch An array of characters.
@param start The starting position in the array.
@param length The number of characters to use from the array.
@exception org.xml.sax.SAXException The client may throw
           an exception during processing."
      end

      operation 2576667 "processingInstruction"
	public explicit_return_type "void"
	nparams 2
	  param inout name "target" type class_ref 3399692 // String
	  param inout name "data" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 303131 // SAXException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Filter a processing instruction event.

@param target The processing instruction target.
@param data The text following the target.
@exception org.xml.sax.SAXException The client may throw
           an exception during processing."
      end

      operation 2576795 "skippedEntity"
	public explicit_return_type "void"
	nparams 1
	  param inout name "name" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 303131 // SAXException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Filter a skipped entity event.

@param name The name of the skipped entity.
@exception org.xml.sax.SAXException The client may throw
           an exception during processing."
      end

      operation 2576923 "warning"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 344347 // SAXParseException
	nexceptions 1
	  exception class_ref 303131 // SAXException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "//////////////////////////////////////////////////////////////////
 Implementation of org.xml.sax.ErrorHandler.
//////////////////////////////////////////////////////////////////

Filter a warning event.

@param e The warning as an exception.
@exception org.xml.sax.SAXException The client may throw
           an exception during processing."
      end

      operation 2577051 "error"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 344347 // SAXParseException
	nexceptions 1
	  exception class_ref 303131 // SAXException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Filter an error event.

@param e The error as an exception.
@exception org.xml.sax.SAXException The client may throw
           an exception during processing."
      end

      operation 2577179 "fatalError"
	public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 344347 // SAXParseException
	nexceptions 1
	  exception class_ref 303131 // SAXException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Filter a fatal error event.

@param e The error as an exception.
@exception org.xml.sax.SAXException The client may throw
           an exception during processing."
      end

      operation 2577307 "setupParse"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "//////////////////////////////////////////////////////////////////
 Internal methods.
//////////////////////////////////////////////////////////////////

Set up before a parse.

<p>Before every parse, check whether the parent is
non-null, and re-register the filter for all of the
events.</p>"
      end

      classrelation 737435 // parent (<unidirectional association>)
	relation 737435 --->
	  a role_name "parent" init_value " null" private
	    comment "//////////////////////////////////////////////////////////////////
 Internal state.
//////////////////////////////////////////////////////////////////
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 737435 // parent (<unidirectional association>)
	  b parent class_ref 304923 // XMLReader
      end

      classrelation 737563 // locator (<unidirectional association>)
	relation 737563 --->
	  a role_name "locator" init_value " null" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 737563 // locator (<unidirectional association>)
	  b parent class_ref 308379 // Locator
      end

      classrelation 737691 // entityResolver (<unidirectional association>)
	relation 737691 --->
	  a role_name "entityResolver" init_value " null" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 737691 // entityResolver (<unidirectional association>)
	  b parent class_ref 303387 // EntityResolver
      end

      classrelation 737819 // dtdHandler (<unidirectional association>)
	relation 737819 --->
	  a role_name "dtdHandler" init_value " null" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 737819 // dtdHandler (<unidirectional association>)
	  b parent class_ref 308635 // DTDHandler
      end

      classrelation 737947 // contentHandler (<unidirectional association>)
	relation 737947 --->
	  a role_name "contentHandler" init_value " null" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 737947 // contentHandler (<unidirectional association>)
	  b parent class_ref 307483 // ContentHandler
      end

      classrelation 738075 // errorHandler (<unidirectional association>)
	relation 738075 --->
	  a role_name "errorHandler" init_value " null" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 738075 // errorHandler (<unidirectional association>)
	  b parent class_ref 303515 // ErrorHandler
      end
    end

    class 378779 "XMLReaderAdapter"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Adapt a SAX2 XMLReader as a SAX1 Parser.

<blockquote>
<em>This module, both source code and documentation, is in the
Public Domain, and comes with <strong>NO WARRANTY</strong>.</em>
See <a href='http://www.saxproject.org'>http://www.saxproject.org</a>
for further information.
</blockquote>

<p>This class wraps a SAX2 {@link org.xml.sax.XMLReader XMLReader}
and makes it act as a SAX1 {@link org.xml.sax.Parser Parser}.  The XMLReader
must support a true value for the
http://xml.org/sax/features/namespace-prefixes property or parsing will fail
with a {@link org.xml.sax.SAXException SAXException}; if the XMLReader
supports a false value for the http://xml.org/sax/features/namespaces
property, that will also be used to improve efficiency.</p>

@since SAX 2.0
@author David Megginson
@version 2.0.1 (sax2r2)
@see org.xml.sax.Parser
@see org.xml.sax.XMLReader"
      classrelation 738203 // <realization>
	relation 738203 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 738203 // <realization>
	  b parent class_ref 304795 // Parser
      end

      classrelation 738331 // <realization>
	relation 738331 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 738331 // <realization>
	  b parent class_ref 307483 // ContentHandler
      end

      operation 2577435 "XMLReaderAdapter"
	public explicit_return_type ""
	nparams 0
	nexceptions 1
	  exception class_ref 303131 // SAXException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "//////////////////////////////////////////////////////////////////
 Constructor.
//////////////////////////////////////////////////////////////////

Create a new adapter.

<p>Use the \"org.xml.sax.driver\" property to locate the SAX2
driver to embed.</p>

@exception org.xml.sax.SAXException If the embedded driver
           cannot be instantiated or if the
           org.xml.sax.driver property is not specified."
      end

      operation 2577563 "XMLReaderAdapter"
	public explicit_return_type ""
	nparams 1
	  param inout name "xmlReader" type class_ref 304923 // XMLReader
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new adapter.

<p>Create a new adapter, wrapped around a SAX2 XMLReader.
The adapter will make the XMLReader act like a SAX1
Parser.</p>

@param xmlReader The SAX2 XMLReader to wrap.
@exception java.lang.NullPointerException If the argument is null."
      end

      operation 2577691 "setup"
	private explicit_return_type "void"
	nparams 1
	  param inout name "xmlReader" type class_ref 304923 // XMLReader
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Internal setup.

@param xmlReader The embedded XMLReader."
      end

      operation 2577819 "setLocale"
	public explicit_return_type "void"
	nparams 1
	  param inout name "locale" type class_ref 135835 // Locale
	nexceptions 1
	  exception class_ref 303131 // SAXException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "//////////////////////////////////////////////////////////////////
 Implementation of org.xml.sax.Parser.
//////////////////////////////////////////////////////////////////

Set the locale for error reporting.

<p>This is not supported in SAX2, and will always throw
an exception.</p>

@param locale the locale for error reporting.
@see org.xml.sax.Parser#setLocale
@exception org.xml.sax.SAXException Thrown unless overridden."
      end

      operation 2577947 "setEntityResolver"
	public explicit_return_type "void"
	nparams 1
	  param inout name "resolver" type class_ref 303387 // EntityResolver
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Register the entity resolver.

@param resolver The new resolver.
@see org.xml.sax.Parser#setEntityResolver"
      end

      operation 2578075 "setDTDHandler"
	public explicit_return_type "void"
	nparams 1
	  param inout name "handler" type class_ref 308635 // DTDHandler
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Register the DTD event handler.

@param handler The new DTD event handler.
@see org.xml.sax.Parser#setDTDHandler"
      end

      operation 2578203 "setDocumentHandler"
	public explicit_return_type "void"
	nparams 1
	  param inout name "handler" type class_ref 376475 // DocumentHandler
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Register the SAX1 document event handler.

<p>Note that the SAX1 document handler has no Namespace
support.</p>

@param handler The new SAX1 document event handler.
@see org.xml.sax.Parser#setDocumentHandler"
      end

      operation 2578331 "setErrorHandler"
	public explicit_return_type "void"
	nparams 1
	  param inout name "handler" type class_ref 303515 // ErrorHandler
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Register the error event handler.

@param handler The new error event handler.
@see org.xml.sax.Parser#setErrorHandler"
      end

      operation 2578459 "parse"
	public explicit_return_type "void"
	nparams 1
	  param inout name "systemId" type class_ref 3399692 // String
	nexceptions 2
	  exception class_ref 128539 // IOException
	  exception class_ref 303131 // SAXException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parse the document.

<p>This method will throw an exception if the embedded
XMLReader does not support the
http://xml.org/sax/features/namespace-prefixes property.</p>

@param systemId The absolute URL of the document.
@exception java.io.IOException If there is a problem reading
           the raw content of the document.
@exception org.xml.sax.SAXException If there is a problem
           processing the document.
@see #parse(org.xml.sax.InputSource)
@see org.xml.sax.Parser#parse(java.lang.String)"
      end

      operation 2578587 "parse"
	public explicit_return_type "void"
	nparams 1
	  param inout name "input" type class_ref 303259 // InputSource
	nexceptions 2
	  exception class_ref 128539 // IOException
	  exception class_ref 303131 // SAXException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parse the document.

<p>This method will throw an exception if the embedded
XMLReader does not support the
http://xml.org/sax/features/namespace-prefixes property.</p>

@param input An input source for the document.
@exception java.io.IOException If there is a problem reading
           the raw content of the document.
@exception org.xml.sax.SAXException If there is a problem
           processing the document.
@see #parse(java.lang.String)
@see org.xml.sax.Parser#parse(org.xml.sax.InputSource)"
      end

      operation 2578715 "setupXMLReader"
	private explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 303131 // SAXException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set up the XML reader."
      end

      operation 2578843 "setDocumentLocator"
	public explicit_return_type "void"
	nparams 1
	  param inout name "locator" type class_ref 308379 // Locator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "//////////////////////////////////////////////////////////////////
 Implementation of org.xml.sax.ContentHandler.
//////////////////////////////////////////////////////////////////

Set a document locator.

@param locator The document locator.
@see org.xml.sax.ContentHandler#setDocumentLocator"
      end

      operation 2578971 "startDocument"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 303131 // SAXException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Start document event.

@exception org.xml.sax.SAXException The client may raise a
           processing exception.
@see org.xml.sax.ContentHandler#startDocument"
      end

      operation 2579099 "endDocument"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 303131 // SAXException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "End document event.

@exception org.xml.sax.SAXException The client may raise a
           processing exception.
@see org.xml.sax.ContentHandler#endDocument"
      end

      operation 2579227 "startPrefixMapping"
	public explicit_return_type "void"
	nparams 2
	  param inout name "prefix" type class_ref 3399692 // String
	  param inout name "uri" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adapt a SAX2 start prefix mapping event.

@param prefix The prefix being mapped.
@param uri The Namespace URI being mapped to.
@see org.xml.sax.ContentHandler#startPrefixMapping"
      end

      operation 2579355 "endPrefixMapping"
	public explicit_return_type "void"
	nparams 1
	  param inout name "prefix" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adapt a SAX2 end prefix mapping event.

@param prefix The prefix being mapped.
@see org.xml.sax.ContentHandler#endPrefixMapping"
      end

      operation 2579483 "startElement"
	public explicit_return_type "void"
	nparams 4
	  param inout name "uri" type class_ref 3399692 // String
	  param inout name "localName" type class_ref 3399692 // String
	  param inout name "qName" type class_ref 3399692 // String
	  param inout name "atts" type class_ref 308507 // Attributes
	nexceptions 1
	  exception class_ref 303131 // SAXException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adapt a SAX2 start element event.

@param uri The Namespace URI.
@param localName The Namespace local name.
@param qName The qualified (prefixed) name.
@param atts The SAX2 attributes.
@exception org.xml.sax.SAXException The client may raise a
           processing exception.
@see org.xml.sax.ContentHandler#endDocument"
      end

      operation 2579611 "endElement"
	public explicit_return_type "void"
	nparams 3
	  param inout name "uri" type class_ref 3399692 // String
	  param inout name "localName" type class_ref 3399692 // String
	  param inout name "qName" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 303131 // SAXException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adapt a SAX2 end element event.

@param uri The Namespace URI.
@param localName The Namespace local name.
@param qName The qualified (prefixed) name.
@exception org.xml.sax.SAXException The client may raise a
           processing exception.
@see org.xml.sax.ContentHandler#endElement"
      end

      operation 2579739 "characters"
	public explicit_return_type "void"
	nparams 3
	  param inout name "ch" explicit_type "char"
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  exception class_ref 303131 // SAXException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adapt a SAX2 characters event.

@param ch An array of characters.
@param start The starting position in the array.
@param length The number of characters to use.
@exception org.xml.sax.SAXException The client may raise a
           processing exception.
@see org.xml.sax.ContentHandler#characters"
      end

      operation 2579867 "ignorableWhitespace"
	public explicit_return_type "void"
	nparams 3
	  param inout name "ch" explicit_type "char"
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  exception class_ref 303131 // SAXException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adapt a SAX2 ignorable whitespace event.

@param ch An array of characters.
@param start The starting position in the array.
@param length The number of characters to use.
@exception org.xml.sax.SAXException The client may raise a
           processing exception.
@see org.xml.sax.ContentHandler#ignorableWhitespace"
      end

      operation 2579995 "processingInstruction"
	public explicit_return_type "void"
	nparams 2
	  param inout name "target" type class_ref 3399692 // String
	  param inout name "data" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 303131 // SAXException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adapt a SAX2 processing instruction event.

@param target The processing instruction target.
@param data The remainder of the processing instruction
@exception org.xml.sax.SAXException The client may raise a
           processing exception.
@see org.xml.sax.ContentHandler#processingInstruction"
      end

      operation 2580123 "skippedEntity"
	public explicit_return_type "void"
	nparams 1
	  param inout name "name" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 303131 // SAXException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adapt a SAX2 skipped entity event.

@param name The name of the skipped entity.
@see org.xml.sax.ContentHandler#skippedEntity
@exception org.xml.sax.SAXException Throwable by subclasses."
      end

      classrelation 738459 // xmlReader (<unidirectional association>)
	relation 738459 --->
	  a role_name "xmlReader" package
	    comment "//////////////////////////////////////////////////////////////////
 Internal state.
//////////////////////////////////////////////////////////////////
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 738459 // xmlReader (<unidirectional association>)
	  b parent class_ref 304923 // XMLReader
      end

      classrelation 738587 // documentHandler (<unidirectional association>)
	relation 738587 --->
	  a role_name "documentHandler" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 738587 // documentHandler (<unidirectional association>)
	  b parent class_ref 376475 // DocumentHandler
      end

      class 378907 "AttributesAdapter"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 738843 // <realization>
	  relation 738843 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 738843 // <realization>
	    b parent class_ref 376347 // AttributeList
	end

	operation 2580251 "AttributesAdapter"
	  package explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2580379 "setAttributes"
	  package explicit_return_type "void"
	  nparams 1
	    param inout name "attributes" type class_ref 308507 // Attributes
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Set the embedded Attributes object.

@param The embedded SAX2 Attributes."
	end

	operation 2580507 "getLength"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Return the number of attributes.

@return The length of the attribute list.
@see org.xml.sax.AttributeList#getLength"
	end

	operation 2580635 "getName"
	  public return_type class_ref 3399692 // String
	  nparams 1
	    param in name "i" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Return the qualified (prefixed) name of an attribute by position.

@return The qualified name.
@see org.xml.sax.AttributeList#getName"
	end

	operation 2580763 "getType"
	  public return_type class_ref 3399692 // String
	  nparams 1
	    param in name "i" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Return the type of an attribute by position.

@return The type.
@see org.xml.sax.AttributeList#getType(int)"
	end

	operation 2580891 "getValue"
	  public return_type class_ref 3399692 // String
	  nparams 1
	    param in name "i" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Return the value of an attribute by position.

@return The value.
@see org.xml.sax.AttributeList#getValue(int)"
	end

	operation 2581019 "getType"
	  public return_type class_ref 3399692 // String
	  nparams 1
	    param inout name "qName" type class_ref 3399692 // String
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Return the type of an attribute by qualified (prefixed) name.

@return The type.
@see org.xml.sax.AttributeList#getType(java.lang.String)"
	end

	operation 2581147 "getValue"
	  public return_type class_ref 3399692 // String
	  nparams 1
	    param inout name "qName" type class_ref 3399692 // String
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Return the value of an attribute by qualified (prefixed) name.

@return The value.
@see org.xml.sax.AttributeList#getValue(java.lang.String)"
	end

	classrelation 738971 // attributes (<unidirectional association>)
	  relation 738971 --->
	    a role_name "attributes" private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 738971 // attributes (<unidirectional association>)
	    b parent class_ref 308507 // Attributes
	end
      end

      classrelation 738715 // qAtts (<unidirectional association>)
	relation 738715 --->
	  a role_name "qAtts" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 738715 // qAtts (<unidirectional association>)
	  b parent class_ref 378907 // AttributesAdapter
      end
    end

    class 379035 "XMLReaderFactory"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Factory for creating an XML reader.

<blockquote>
<em>This module, both source code and documentation, is in the
Public Domain, and comes with <strong>NO WARRANTY</strong>.</em>
See <a href='http://www.saxproject.org'>http://www.saxproject.org</a>
for further information.
</blockquote>

<p>This class contains static methods for creating an XML reader
from an explicit class name, or based on runtime defaults:</p>

<pre>
try {
  XMLReader myReader = XMLReaderFactory.createXMLReader();
} catch (SAXException e) {
  System.err.println(e.getMessage());
}
</pre>

<p><strong>Note to Distributions bundled with parsers:</strong>
You should modify the implementation of the no-arguments
<em>createXMLReader</em> to handle cases where the external
configuration mechanisms aren't set up.  That method should do its
best to return a parser when one is in the class path, even when
nothing bound its class name to <code>org.xml.sax.driver</code> so
those configuration mechanisms would see it.</p>

@since SAX 2.0
@author David Megginson, David Brownell
@version 2.0.1 (sax2r2)"
      operation 2581275 "XMLReaderFactory"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Private constructor.

<p>This constructor prevents the class from being instantiated.</p>"
      end

      classrelation 739099 // property (<unidirectional association>)
	relation 739099 --->
	  a role_name "property" init_value " \"org.xml.sax.driver\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 739099 // property (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      operation 2581403 "createXMLReader"
	class_operation public return_type class_ref 304923 // XMLReader
	nparams 0
	nexceptions 1
	  exception class_ref 303131 // SAXException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Attempt to create an XMLReader from system defaults.
In environments which can support it, the name of the XMLReader
class is determined by trying each these options in order, and
using the first one which succeeds:</p> <ul>

<li>If the system property <code>org.xml.sax.driver</code>
has a value, that is used as an XMLReader class name. </li>

<li>The JAR \"Services API\" is used to look for a class name
in the <em>META-INF/services/org.xml.sax.driver</em> file in
jarfiles available to the runtime.</li>

<li> SAX parser distributions are strongly encouraged to provide
a default XMLReader class name that will take effect only when
previous options (on this list) are not successful.</li>

<li>Finally, if {@link ParserFactory#makeParser()} can
return a system default SAX1 parser, that parser is wrapped in
a {@link ParserAdapter}.  (This is a migration aid for SAX1
environments, where the <code>org.xml.sax.parser</code> system
property will often be usable.) </li>

</ul>

<p> In environments such as small embedded systems, which can not
support that flexibility, other mechanisms to determine the default
may be used. </p>

<p>Note that many Java environments allow system properties to be
initialized on a command line.  This means that <em>in most cases</em>
setting a good value for that property ensures that calls to this
method will succeed, except when security policies intervene.
This will also maximize application portability to older SAX
environments, with less robust implementations of this method.
</p>

@return A new XMLReader.
@exception org.xml.sax.SAXException If no default XMLReader class
           can be identified and instantiated.
@see #createXMLReader(java.lang.String)"
      end

      operation 2581531 "createXMLReader"
	class_operation public return_type class_ref 304923 // XMLReader
	nparams 1
	  param inout name "className" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 303131 // SAXException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Attempt to create an XML reader from a class name.

<p>Given a class name, this method attempts to load
and instantiate the class as an XML reader.</p>

@param className the name of the class that should be instantiated.

<p>Note that this method will not be usable in environments where
the caller (perhaps an applet) is not permitted to load classes
dynamically.</p>

@return A new XML reader.
@exception org.xml.sax.SAXException If the class cannot be
           loaded, instantiated, and cast to XMLReader.
@see #createXMLReader()"
      end

      operation 2581659 "loadClass"
	class_operation private return_type class_ref 304923 // XMLReader
	nparams 2
	  param inout name "loader" type class_ref 138523 // ClassLoader
	  param inout name "className" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 303131 // SAXException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end
  end

  deploymentview 139035 "helpers"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 320411 "AttributesImpl"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import org.xml.sax.Attributes;
${definition}"
      associated_classes
	class_ref 376859 // AttributesImpl
      end
      comment " AttributesImpl.java - default implementation of Attributes.
 http://www.saxproject.org
 Written by David Megginson
 NO WARRANTY!  This class is in the public domain.
 $Id: AttributesImpl.java,v 1.9 2002/01/30 20:52:24 dbrownell Exp $"
    end

    artifact 320795 "DefaultHandler"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import org.xml.sax.Attributes;
import org.xml.sax.ContentHandler;
import org.xml.sax.DTDHandler;
import org.xml.sax.EntityResolver;
import org.xml.sax.ErrorHandler;
import org.xml.sax.InputSource;
import org.xml.sax.Locator;
import org.xml.sax.SAXException;
import org.xml.sax.SAXParseException;
${definition}"
      associated_classes
	class_ref 304667 // DefaultHandler
      end
      comment " DefaultHandler.java - default implementation of the core handlers.
 http://www.saxproject.org
 Written by David Megginson
 NO WARRANTY!  This class is in the public domain.
 $Id: DefaultHandler.java,v 1.9 2004/04/26 17:34:35 dmegginson Exp $"
    end

    artifact 321307 "LocatorImpl"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import org.xml.sax.Locator;
${definition}"
      associated_classes
	class_ref 377627 // LocatorImpl
      end
      comment " SAX default implementation for Locator.
 http://www.saxproject.org
 No warranty; no copyright -- use this as you will.
 $Id: LocatorImpl.java,v 1.6 2002/01/30 20:52:27 dbrownell Exp $"
    end

    artifact 321563 "AttributeListImpl"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.util.ArrayList;
import org.xml.sax.AttributeList;
${definition}"
      associated_classes
	class_ref 377755 // AttributeListImpl
      end
      comment " SAX default implementation for AttributeList.
 http://www.saxproject.org
 No warranty; no copyright -- use this as you will.
 $Id: AttributeListImpl.java,v 1.6 2002/01/30 20:52:22 dbrownell Exp $"
    end

    artifact 321691 "NamespaceSupport"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.util.ArrayList;
import java.util.Collections;
import java.util.EmptyStackException;
import java.util.Enumeration;
import java.util.Hashtable;
${definition}"
      associated_classes
	class_ref 377883 // NamespaceSupport
      end
      comment " NamespaceSupport.java - generic Namespace support for SAX.
 http://www.saxproject.org
 Written by David Megginson
 This class is in the Public Domain.  NO WARRANTY!
 $Id: NamespaceSupport.java,v 1.15 2004/04/26 17:34:35 dmegginson Exp $"
    end

    artifact 321819 "NewInstance"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
${definition}"
      associated_classes
	class_ref 378139 // NewInstance
      end
      comment " NewInstance.java - create a new instance of a class by name.
 http://www.saxproject.org
 Written by Edwin Goei, edwingo@apache.org
 and by David Brownell, dbrownell@users.sourceforge.net
 NO WARRANTY!  This class is in the Public Domain.
 $Id: NewInstance.java,v 1.4 2002/01/30 20:52:27 dbrownell Exp $"
    end

    artifact 321947 "ParserAdapter"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.util.ArrayList;
import java.util.Enumeration;
import org.xml.sax.AttributeList;
import org.xml.sax.Attributes;
import org.xml.sax.ContentHandler;
import org.xml.sax.DTDHandler;
import org.xml.sax.DocumentHandler;
import org.xml.sax.EntityResolver;
import org.xml.sax.ErrorHandler;
import org.xml.sax.InputSource;
import org.xml.sax.Locator;
import org.xml.sax.Parser;
import org.xml.sax.SAXException;
import org.xml.sax.SAXNotRecognizedException;
import org.xml.sax.SAXNotSupportedException;
import org.xml.sax.SAXParseException;
import org.xml.sax.XMLReader;
${definition}"
      associated_classes
	class_ref 378267 // ParserAdapter
      end
      comment " ParserAdapter.java - adapt a SAX1 Parser to a SAX2 XMLReader.
 http://www.saxproject.org
 Written by David Megginson
 NO WARRANTY!  This class is in the public domain.
 $Id: ParserAdapter.java,v 1.16 2004/04/26 17:34:35 dmegginson Exp $"
    end

    artifact 322075 "ParserFactory"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import org.xml.sax.Parser;
${definition}"
      associated_classes
	class_ref 378523 // ParserFactory
      end
      comment " SAX parser factory.
 http://www.saxproject.org
 No warranty; no copyright -- use this as you will.
 $Id: ParserFactory.java,v 1.7 2002/01/30 20:52:36 dbrownell Exp $"
    end

    artifact 322203 "XMLFilterImpl"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import org.xml.sax.Attributes;
import org.xml.sax.ContentHandler;
import org.xml.sax.DTDHandler;
import org.xml.sax.EntityResolver;
import org.xml.sax.ErrorHandler;
import org.xml.sax.InputSource;
import org.xml.sax.Locator;
import org.xml.sax.SAXException;
import org.xml.sax.SAXNotRecognizedException;
import org.xml.sax.SAXNotSupportedException;
import org.xml.sax.SAXParseException;
import org.xml.sax.XMLFilter;
import org.xml.sax.XMLReader;
${definition}"
      associated_classes
	class_ref 378651 // XMLFilterImpl
      end
      comment " XMLFilterImpl.java - base SAX2 filter implementation.
 http://www.saxproject.org
 Written by David Megginson
 NO WARRANTY!  This class is in the Public Domain.
 $Id: XMLFilterImpl.java,v 1.9 2004/04/26 17:34:35 dmegginson Exp $"
    end

    artifact 322331 "XMLReaderAdapter"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.util.Locale;
import org.xml.sax.AttributeList;
import org.xml.sax.Attributes;
import org.xml.sax.ContentHandler;
import org.xml.sax.DTDHandler;
import org.xml.sax.DocumentHandler;
import org.xml.sax.EntityResolver;
import org.xml.sax.ErrorHandler;
import org.xml.sax.InputSource;
import org.xml.sax.Locator;
import org.xml.sax.Parser;
import org.xml.sax.SAXException;
import org.xml.sax.SAXNotSupportedException;
import org.xml.sax.XMLReader;
${definition}"
      associated_classes
	class_ref 378779 // XMLReaderAdapter
      end
      comment " XMLReaderAdapter.java - adapt an SAX2 XMLReader to a SAX1 Parser
 http://www.saxproject.org
 Written by David Megginson
 NO WARRANTY!  This class is in the public domain.
 $Id: XMLReaderAdapter.java,v 1.9 2004/04/26 17:34:35 dmegginson Exp $"
    end

    artifact 322459 "XMLReaderFactory"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.BufferedReader;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.nio.charset.Charsets;
import org.xml.sax.SAXException;
import org.xml.sax.XMLReader;
${definition}"
      associated_classes
	class_ref 379035 // XMLReaderFactory
      end
      comment " XMLReaderFactory.java - factory for creating a new reader.
 http://www.saxproject.org
 Written by David Megginson
 and by David Brownell
 NO WARRANTY!  This class is in the Public Domain.
 $Id: XMLReaderFactory.java,v 1.10 2002/04/22 01:00:13 dbrownell Exp $"
    end
  end
end
