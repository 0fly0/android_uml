class OldObjectInputOutputStreamTest
!!!2668955.java!!!	test_read_writeBoolean() : void
        os.writeBoolean(true);

        os.close();
        openObjectInputStream();
        assertTrue("Test 1: Incorrect boolean written or read.",
                is.readBoolean());

        try {
            is.readBoolean();
            fail("Test 2: EOFException expected.");
        } catch (EOFException e) {
            // Expected.
        }

        is.close();
        try {
            is.readBoolean();
            fail("Test 3: IOException expected.");
        } catch (IOException e) {
            // Expected.
        }
!!!2669083.java!!!	test_read_writeByte() : void
        os.writeByte((byte) 127);

        os.close();
        openObjectInputStream();
        assertEquals("Test 1: Incorrect byte written or read;",
                (byte) 127, is.readByte());

        try {
            is.readByte();
            fail("Test 2: EOFException expected.");
        } catch (EOFException e) {
            // Expected.
        }

        is.close();
        try {
            is.readByte();
            fail("Test 3: IOException expected.");
        } catch (IOException e) {
            // Expected.
        }
!!!2669211.java!!!	test_read_writeChar() : void
        os.writeChar('b');

        os.close();
        openObjectInputStream();
        assertEquals("Test 1: Incorrect char written or read;",
                'b', is.readChar());

        try {
            is.readChar();
            fail("Test 2: EOFException expected.");
        } catch (EOFException e) {
            // Expected.
        }

        is.close();
        try {
            is.readChar();
            fail("Test 3: IOException expected.");
        } catch (IOException e) {
            // Expected.
        }
!!!2669339.java!!!	test_read_writeDouble() : void
        os.writeDouble(2345.76834720202);

        os.close();
        openObjectInputStream();
        assertEquals("Test 1: Incorrect double written or read;",
                2345.76834720202, is.readDouble());

        try {
            is.readDouble();
            fail("Test 2: EOFException expected.");
        } catch (EOFException e) {
            // Expected.
        }

        is.close();
        try {
            is.readDouble();
            fail("Test 3: IOException expected.");
        } catch (IOException e) {
            // Expected.
        }
!!!2669467.java!!!	test_read_writeFloat() : void
        os.writeFloat(29.08764f);

        os.close();
        openObjectInputStream();
        assertEquals("Test 1: Incorrect float written or read;",
                29.08764f, is.readFloat());

        try {
            is.readFloat();
            fail("Test 2: EOFException expected.");
        } catch (EOFException e) {
            // Expected.
        }

        is.close();
        try {
            is.readFloat();
            fail("Test 3: IOException expected.");
        } catch (IOException e) {
            // Expected.
        }
!!!2669595.java!!!	test_read_writeInt() : void
        os.writeInt(768347202);

        os.close();
        openObjectInputStream();
        assertEquals("Test 1: Incorrect int written or read;",
                768347202, is.readInt());

        try {
            is.readInt();
            fail("Test 2: EOFException expected.");
        } catch (EOFException e) {
            // Expected.
        }

        is.close();
        try {
            is.readInt();
            fail("Test 3: IOException expected.");
        } catch (IOException e) {
            // Expected.
        }
!!!2669723.java!!!	test_read_writeLong() : void
        os.writeLong(9875645283333L);

        os.close();
        openObjectInputStream();
        assertEquals("Test 1: Incorrect long written or read;",
                9875645283333L, is.readLong());

        try {
            is.readLong();
            fail("Test 2: EOFException expected.");
        } catch (EOFException e) {
            // Expected.
        }

        is.close();
        try {
            is.readLong();
            fail("Test 3: IOException expected.");
        } catch (IOException e) {
            // Expected.
        }
!!!2669851.java!!!	test_read_writeShort() : void
        os.writeShort(9875);

        os.close();
        openObjectInputStream();
        assertEquals("Test 1: Incorrect short written or read;",
                9875, is.readShort());

        try {
            is.readShort();
            fail("Test 2: EOFException expected.");
        } catch (EOFException e) {
            // Expected.
        }

        is.close();
        try {
            is.readShort();
            fail("Test 3: IOException expected.");
        } catch (IOException e) {
            // Expected.
        }
!!!2669979.java!!!	test_read_writeUTF() : void
        os.writeUTF(unihw);

        os.close();
        openObjectInputStream();
        assertTrue("Test 1: Incorrect UTF-8 string written or read.",
                is.readUTF().equals(unihw));

        try {
            is.readUTF();
            fail("Test 2: EOFException expected.");
        } catch (EOFException e) {
            // Expected.
        }

        is.close();
        try {
            is.readUTF();
            fail("Test 3: IOException expected.");
        } catch (IOException e) {
            // Expected.
        }
!!!2670107.java!!!	openObjectInputStream() : void
        is = new ObjectInputStream(
                new ByteArrayInputStream(sos.toByteArray()));
!!!2670235.java!!!	setUp() : void
        sos = new Support_OutputStream(256);
        os = new ObjectOutputStream(sos);
!!!2670363.java!!!	tearDown() : void
        try {
            os.close();
        } catch (Exception e) {
        }
        try {
            is.close();
        } catch (Exception e) {
        }
