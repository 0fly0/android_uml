class CDL
!!!13129100.java!!!	getValue(inout x : JSONTokener) : String
        char c;
        do {
            c = x.next();
        } while (c == ' ' || c == '\t');
        switch (c) {
        case 0:
            return null;
        case '"':
        case '\'':
            return x.nextString(c);
        case ',':
            x.back();
            return "";
        default:
            x.back();
            return x.nextTo(',');
        }
!!!13129228.java!!!	rowToJSONArray(inout x : JSONTokener) : JSONArray
        JSONArray ja = new JSONArray();
        for (;;) {
            String value = getValue(x);
            if (value == null || (ja.length() == 0 && value.length() == 0)) {
                return null;
            }
            ja.put(value);
            for (;;) {
                char c = x.next();
                if (c == ',') {
                    break;
                }
                if (c != ' ') {
                    if (c == '\n' || c == '\r' || c == 0) {
                        return ja;
                    }
                    throw x.syntaxError("Bad character '" + c + "' (" +
                            (int)c + ").");
                }
            }
        }
!!!13129356.java!!!	rowToJSONObject(inout names : JSONArray, inout x : JSONTokener) : JSONObject
        JSONArray ja = rowToJSONArray(x);
        return ja != null ? ja.toJSONObject(names) :  null;
!!!13129484.java!!!	toJSONArray(in string : String) : JSONArray
        return toJSONArray(new JSONTokener(string));
!!!13129612.java!!!	toJSONArray(inout x : JSONTokener) : JSONArray
        return toJSONArray(rowToJSONArray(x), x);
!!!13129740.java!!!	toJSONArray(inout names : JSONArray, in string : String) : JSONArray
        return toJSONArray(names, new JSONTokener(string));
!!!13129868.java!!!	toJSONArray(inout names : JSONArray, inout x : JSONTokener) : JSONArray
        if (names == null || names.length() == 0) {
            return null;
        }
        JSONArray ja = new JSONArray();
        for (;;) {
            JSONObject jo = rowToJSONObject(names, x);
            if (jo == null) {
                break;
            }
            ja.put(jo);
        }
        if (ja.length() == 0) {
            return null;
        }
        return ja;
!!!13129996.java!!!	rowToString(inout ja : JSONArray) : String
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < ja.length(); i += 1) {
            if (i > 0) {
                sb.append(',');
            }
            Object o = ja.opt(i);
            if (o != null) {
                String s = o.toString();
                if (s.indexOf(',') >= 0) {
                    if (s.indexOf('"') >= 0) {
                        sb.append('\'');
                        sb.append(s);
                        sb.append('\'');
                    } else {
                        sb.append('"');
                        sb.append(s);
                        sb.append('"');
                    }
                } else {
                    sb.append(s);
                }
            }
        }
        sb.append('\n');
        return sb.toString();

!!!13130124.java!!!	toString(inout ja : JSONArray) : String
        JSONObject jo = ja.optJSONObject(0);
        if (jo != null) {
            JSONArray names = jo.names();
            if (names != null) {
                return rowToString(names) + toString(names, ja);
            }
        }
        return null;
!!!13130252.java!!!	toString(inout names : JSONArray, inout ja : JSONArray) : String
        if (names == null || names.length() == 0) {
            return null;
        }
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < ja.length(); i += 1) {
            JSONObject jo = ja.optJSONObject(i);
            if (jo != null) {
                sb.append(rowToString(jo.toJSONArray(names)));
            }
        }
        return sb.toString();
