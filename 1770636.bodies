class Buffer
!!!10102156.cpp!!!	~Buffer()
  DBG("Buffer::~Buffer() E");
  assert(blob_->refs > 0);
  //fprintf(stderr, "free buffer (%d refs left)\n", blob_->refs);
  blob_unref(blob_);
  V8::AdjustAmountOfExternalAllocatedMemory(-static_cast<long int>(sizeof(Buffer)));
  DBG("Buffer::~Buffer() X");
!!!10102540.cpp!!!	New(in size : size_t) : Buffer
  DBG("Buffer::New(size) E");
  HandleScope scope;

  Local<Value> arg = Integer::NewFromUnsigned(size);
  Local<Object> b = constructor_template->GetFunction()->NewInstance(1, &arg);

  DBG("Buffer::New(size) X");
  return ObjectWrap::Unwrap<Buffer>(b);
!!!10102796.cpp!!!	data() : char
  char *p = blob_->data + off_;
  DBG("Buffer::data() EX p=%p", p);
  return p;
!!!10103180.cpp!!!	NewBlob(in length : size_t) : void
  DBG("Buffer::NewBlob(length) E");
  blob_unref(blob_);
  blob_ = blob_new(length);
  off_ = 0;
  length_ = length;

  blob_ref(blob_);

  V8::AdjustAmountOfExternalAllocatedMemory(sizeof(Buffer));
  DBG("Buffer::NewBlob(length) X");
!!!10104972.cpp!!!	Buffer(in length : size_t)
  DBG("Buffer::Buffer(length) E");
  blob_ = blob_new(length);
  off_ = 0;
  length_ = length;

  blob_ref(blob_);

  V8::AdjustAmountOfExternalAllocatedMemory(sizeof(Buffer));
  DBG("Buffer::Buffer(length) X");
!!!10105100.cpp!!!	Buffer(inout parent : Buffer, in start : size_t, in end : size_t)
  DBG("Buffer::Buffer(parent, start, end) E");
  blob_ = parent->blob_;
  assert(blob_->refs > 0);
  blob_ref(blob_);

  assert(start <= end);
  off_ = parent->off_ + start;
  length_ = end - start;
  assert(length_ <= parent->length_);

  V8::AdjustAmountOfExternalAllocatedMemory(sizeof(Buffer));
  DBG("Buffer::Buffer(parent, start, end) X");
