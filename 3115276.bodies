class RemoteWireAdapter
!!!13071372.java!!!	RemoteWireAdapter(inout inputStream : InputStream, inout outputStream : OutputStream, inout errorListener : ErrorListener)
    mInputStream = inputStream;
    mOutputStream = outputStream;
    mErrorListener = errorListener;
!!!13071500.java!!!	onIoError(in error : String, inout throwable : Throwable) : void
    if (mErrorListener != null) {
      mErrorListener.onIoError(error, throwable);
    }
!!!13071628.java!!!	setMessageListener(inout listener : IMessageListener) : void
    mListener = listener;
!!!13071756.java!!!	getNextRemoteMessage() : boolean
      RemoteMessage mess;
      try {
        synchronized (mInputStream) {
          mess = RemoteMessage.parseDelimitedFrom(mInputStream);
        }
      } catch (IOException e) {
        onIoError("Cannot read message", e);
        return false;
      }
      if (mess == null) {
        // EOF reached
        return false;
      }
      interpretMessage(mess);
      return true;
!!!13071884.java!!!	interpretMessage(inout message : RemoteMessage) : void
    if (mListener != null) {
      mListener.onMessage(message);
    }
!!!13072012.java!!!	sendRemoteMessage(inout remoteMessage : RemoteMessage) : void
    try {
      synchronized (mOutputStream) {
        remoteMessage.writeDelimitedTo(mOutputStream);
      }
    } catch (IOException e) {
      onIoError("Cannot send message", e);
    }
!!!13072140.java!!!	stop() : void
    stopReceiverThread();
!!!13072268.java!!!	startReceivingThread() : void
    if (mReceiverThread != null) {
      stopReceiverThread();
    }
    mReceiverThread = new Thread(new Runnable() {
      public void run() {
        boolean available = true;
        while (available) {
          // TODO(tambard): Should be waiting for the data to be available
          //                before processing it.
          available = getNextRemoteMessage();
        }
        stop();
      }
    });
    mReceiverThread.start();
!!!13072396.java!!!	stopReceiverThread() : void
    if (mReceiverThread != null) {
      try {
        mReceiverThread.join(250);
      } catch (InterruptedException e) {
        // Nothing: expected.
      }
    }
    mReceiverThread = null;
