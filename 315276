format 74
"private" // vendor::tv::chrome::plugins::drmserver_adapter::jni::ppapi::c::private
  revision 1
  modified_by 12 "shchen"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  cpp_h_dir "/home/shchen/work/jellybean/vendor/tv/chrome/plugins/drmserver_adapter/jni/ppapi/c/private/"
  cpp_src_dir "/home/shchen/work/jellybean/vendor/tv/chrome/plugins/drmserver_adapter/jni/ppapi/c/private/"
  classview 274700 "private"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 2774796 "PP_DecryptTrackingInfo"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @file
 * The <code>PP_DecryptTrackingInfo</code> struct contains necessary information
 * that can be used to associate the decrypted block with a decrypt request
 * and/or an input block.
 
*
 * @addtogroup Structs
 * @{"
      classrelation 5208716 // request_id (<directional composition>)
	relation 5208588 *-->
	  a role_name "request_id" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5208716 // request_id (<directional composition>)
	  b parent class_ref 2345996 // uint32_t
      end

      classrelation 5208844 // buffer_id (<directional composition>)
	relation 5208716 *-->
	  a role_name "buffer_id" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5208844 // buffer_id (<directional composition>)
	  b parent class_ref 2345996 // uint32_t
      end

      classrelation 5208972 // timestamp (<directional composition>)
	relation 5208844 *-->
	  a role_name "timestamp" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5208972 // timestamp (<directional composition>)
	  b parent class_ref 2603788 // int64_t
      end
    end

    class 2774924 "PP_DecryptSubsampleDescription"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * The <code>PP_DecryptSubsampleDescription</code> struct contains information
 * to support subsample decryption.
 *
 * An input block can be split into several continuous subsamples.
 * A <code>PP_DecryptSubsampleEntry</code> specifies the number of clear and
 * cipher bytes in each subsample. For example, the following block has three
 * subsamples:
 *
 * |<----- subsample1 ----->|<----- subsample2 ----->|<----- subsample3 ----->|
 * |   clear1   |  cipher1  |  clear2  |   cipher2   | clear3 |    cipher3    |
 *
 * For decryption, all of the cipher bytes in a block should be treated as a
 * contiguous (in the subsample order) logical stream. The clear bytes should
 * not be considered as part of decryption.
 *
 * Logical stream to decrypt:   |  cipher1  |   cipher2   |    cipher3    |
 * Decrypted stream:            | decrypted1|  decrypted2 |   decrypted3  |
 *
 * After decryption, the decrypted bytes should be copied over the position
 * of the corresponding cipher bytes in the original block to form the output
 * block. Following the above example, the decrypted block should be:
 *
 * |<----- subsample1 ----->|<----- subsample2 ----->|<----- subsample3 ----->|
 * |   clear1   | decrypted1|  clear2  |  decrypted2 | clear3 |   decrypted3  |"
      classrelation 5209100 // clear_bytes (<directional composition>)
	relation 5208972 *-->
	  a role_name "clear_bytes" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5209100 // clear_bytes (<directional composition>)
	  b parent class_ref 2345996 // uint32_t
      end

      classrelation 5209228 // cipher_bytes (<directional composition>)
	relation 5209100 *-->
	  a role_name "cipher_bytes" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5209228 // cipher_bytes (<directional composition>)
	  b parent class_ref 2345996 // uint32_t
      end
    end

    class 2775052 "PP_EncryptedBlockInfo"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * The <code>PP_EncryptedBlockInfo</code> struct contains all the information
 * needed to decrypt an encrypted block."
      classrelation 5209356 // tracking_info (<directional composition>)
	relation 5209228 *-->
	  a role_name "tracking_info" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}struct ${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5209356 // tracking_info (<directional composition>)
	  b parent class_ref 2774796 // PP_DecryptTrackingInfo
      end

      classrelation 5209484 // data_size (<directional composition>)
	relation 5209356 *-->
	  a role_name "data_size" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5209484 // data_size (<directional composition>)
	  b parent class_ref 2345996 // uint32_t
      end

      classrelation 5209612 // data_offset (<directional composition>)
	relation 5209484 *-->
	  a role_name "data_offset" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5209612 // data_offset (<directional composition>)
	  b parent class_ref 2345996 // uint32_t
      end

      classrelation 5209740 // key_id (<directional composition>)
	relation 5209612 *-->
	  a role_name "key_id" multiplicity "[64]" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5209740 // key_id (<directional composition>)
	  b parent class_ref 2347532 // uint8_t
      end

      classrelation 5209868 // key_id_size (<directional composition>)
	relation 5209740 *-->
	  a role_name "key_id_size" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5209868 // key_id_size (<directional composition>)
	  b parent class_ref 2345996 // uint32_t
      end

      classrelation 5209996 // iv (<directional composition>)
	relation 5209868 *-->
	  a role_name "iv" multiplicity "[16]" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5209996 // iv (<directional composition>)
	  b parent class_ref 2347532 // uint8_t
      end

      classrelation 5210124 // iv_size (<directional composition>)
	relation 5209996 *-->
	  a role_name "iv_size" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5210124 // iv_size (<directional composition>)
	  b parent class_ref 2345996 // uint32_t
      end

      classrelation 5210252 // subsamples (<directional composition>)
	relation 5210124 *-->
	  a role_name "subsamples" multiplicity "[16]" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}struct ${type} ${name}${multiplicity}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5210252 // subsamples (<directional composition>)
	  b parent class_ref 2774924 // PP_DecryptSubsampleDescription
      end

      classrelation 5210380 // num_subsamples (<directional composition>)
	relation 5210252 *-->
	  a role_name "num_subsamples" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5210380 // num_subsamples (<directional composition>)
	  b parent class_ref 2345996 // uint32_t
      end

      classrelation 5210508 // padding (<directional composition>)
	relation 5210380 *-->
	  a role_name "padding" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5210508 // padding (<directional composition>)
	  b parent class_ref 2345996 // uint32_t
      end
    end

    class 2775180 "PP_DecryptedFrameFormat"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}
};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @}
 
*
 * @addtogroup Enums
 * @{
 
*
 * <code>PP_DecryptedFrameFormat</code> contains video frame formats."
      attribute 10001292 "PP_DECRYPTEDFRAMEFORMAT_UNKNOWN"
	public type class_ref 2775180 // PP_DecryptedFrameFormat
	init_value " 0"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10001420 "PP_DECRYPTEDFRAMEFORMAT_YV12"
	public type class_ref 2775180 // PP_DecryptedFrameFormat
	init_value " 1"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10001548 "PP_DECRYPTEDFRAMEFORMAT_I420"
	public type class_ref 2775180 // PP_DecryptedFrameFormat
	init_value " 2
"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2775308 "PP_DecryptResult"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}
};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * The <code>PP_DecryptResult</code> enum contains decryption and decoding
 * result constants."
      attribute 10001676 "PP_DECRYPTRESULT_SUCCESS"
	public type class_ref 2775308 // PP_DecryptResult
	init_value " 0"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10001804 "PP_DECRYPTRESULT_DECRYPT_NOKEY"
	public type class_ref 2775308 // PP_DecryptResult
	init_value " 1"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10001932 "PP_DECRYPTRESULT_NEEDMOREDATA"
	public type class_ref 2775308 // PP_DecryptResult
	init_value " 2"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10002060 "PP_DECRYPTRESULT_DECRYPT_ERROR"
	public type class_ref 2775308 // PP_DecryptResult
	init_value " 3"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10002188 "PP_DECRYPTRESULT_DECODE_ERROR"
	public type class_ref 2775308 // PP_DecryptResult
	init_value " 4
"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2775436 "PP_DecryptedBlockInfo"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @}
 
*
 * @addtogroup Structs
 * @{
 
*
 * <code>PP_DecryptedBlockInfo</code> struct contains the decryption result and
 * tracking info associated with the decrypted block."
      classrelation 5210636 // result (<directional composition>)
	relation 5210508 *-->
	  a role_name "result" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5210636 // result (<directional composition>)
	  b parent class_ref 2775308 // PP_DecryptResult
      end

      classrelation 5210764 // data_size (<directional composition>)
	relation 5210636 *-->
	  a role_name "data_size" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5210764 // data_size (<directional composition>)
	  b parent class_ref 2345996 // uint32_t
      end

      classrelation 5210892 // tracking_info (<directional composition>)
	relation 5210764 *-->
	  a role_name "tracking_info" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}struct ${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5210892 // tracking_info (<directional composition>)
	  b parent class_ref 2774796 // PP_DecryptTrackingInfo
      end
    end

    class 2775564 "PP_DecryptedFramePlanes"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}
};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @}
 
*
 * @addtogroup Enums
 * @{
 
*
 * <code>PP_DecryptedFramePlanes</code> provides YUV plane index values for
 * accessing plane offsets stored in <code>PP_DecryptedFrameInfo</code>."
      attribute 10002316 "PP_DECRYPTEDFRAMEPLANES_Y"
	public type class_ref 2775564 // PP_DecryptedFramePlanes
	init_value " 0"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10002444 "PP_DECRYPTEDFRAMEPLANES_U"
	public type class_ref 2775564 // PP_DecryptedFramePlanes
	init_value " 1"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10002572 "PP_DECRYPTEDFRAMEPLANES_V"
	public type class_ref 2775564 // PP_DecryptedFramePlanes
	init_value " 2
"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2775692 "PP_DecryptedFrameInfo"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @}
 
*
 * @addtogroup Structs
 * @{
 
*
 * <code>PP_DecryptedFrameInfo</code> contains the result of the
 * decrypt and decode operation on the associated frame, information required
 * to access the frame data in buffer, and tracking info."
      classrelation 5211020 // result (<directional composition>)
	relation 5210892 *-->
	  a role_name "result" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5211020 // result (<directional composition>)
	  b parent class_ref 2775308 // PP_DecryptResult
      end

      classrelation 5211148 // format (<directional composition>)
	relation 5211020 *-->
	  a role_name "format" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5211148 // format (<directional composition>)
	  b parent class_ref 2775180 // PP_DecryptedFrameFormat
      end

      classrelation 5211276 // plane_offsets (<directional composition>)
	relation 5211148 *-->
	  a role_name "plane_offsets" multiplicity "[3]" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5211276 // plane_offsets (<directional composition>)
	  b parent class_ref 2409996 // int32_t
      end

      classrelation 5211404 // strides (<directional composition>)
	relation 5211276 *-->
	  a role_name "strides" multiplicity "[3]" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5211404 // strides (<directional composition>)
	  b parent class_ref 2409996 // int32_t
      end

      classrelation 5211532 // width (<directional composition>)
	relation 5211404 *-->
	  a role_name "width" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5211532 // width (<directional composition>)
	  b parent class_ref 2409996 // int32_t
      end

      classrelation 5211660 // height (<directional composition>)
	relation 5211532 *-->
	  a role_name "height" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5211660 // height (<directional composition>)
	  b parent class_ref 2409996 // int32_t
      end

      classrelation 5211788 // tracking_info (<directional composition>)
	relation 5211660 *-->
	  a role_name "tracking_info" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}struct ${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5211788 // tracking_info (<directional composition>)
	  b parent class_ref 2774796 // PP_DecryptTrackingInfo
      end
    end

    class 2775820 "PP_AudioCodec"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}
};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @}
 
*
 * @addtogroup Enums
 * @{
 
*
 * <code>PP_AudioCodec</code> contains audio codec type constants."
      attribute 10002700 "PP_AUDIOCODEC_UNKNOWN"
	public type class_ref 2775820 // PP_AudioCodec
	init_value " 0"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10002828 "PP_AUDIOCODEC_VORBIS"
	public type class_ref 2775820 // PP_AudioCodec
	init_value " 1"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10002956 "PP_AUDIOCODEC_AAC"
	public type class_ref 2775820 // PP_AudioCodec
	init_value " 2
"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2775948 "PP_AudioDecoderConfig"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @}
 
*
 * @addtogroup Structs
 * @{
 
*
 * <code>PP_AudioDecoderConfig</code> contains audio decoder configuration
 * information required to initialize audio decoders, and a request ID
 * that allows clients to associate a decoder initialization request with a
 * status response. Note: When <code>codec</code> requires extra data for
 * initialization, the data is sent as a <code>PP_Resource</code> carried
 * alongside <code>PP_AudioDecoderConfig</code>."
      classrelation 5211916 // codec (<directional composition>)
	relation 5211788 *-->
	  a role_name "codec" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5211916 // codec (<directional composition>)
	  b parent class_ref 2775820 // PP_AudioCodec
      end

      classrelation 5212044 // channel_count (<directional composition>)
	relation 5211916 *-->
	  a role_name "channel_count" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5212044 // channel_count (<directional composition>)
	  b parent class_ref 2409996 // int32_t
      end

      classrelation 5212172 // bits_per_channel (<directional composition>)
	relation 5212044 *-->
	  a role_name "bits_per_channel" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5212172 // bits_per_channel (<directional composition>)
	  b parent class_ref 2409996 // int32_t
      end

      classrelation 5212300 // samples_per_second (<directional composition>)
	relation 5212172 *-->
	  a role_name "samples_per_second" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5212300 // samples_per_second (<directional composition>)
	  b parent class_ref 2409996 // int32_t
      end

      classrelation 5212428 // request_id (<directional composition>)
	relation 5212300 *-->
	  a role_name "request_id" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5212428 // request_id (<directional composition>)
	  b parent class_ref 2345996 // uint32_t
      end
    end

    class 2776076 "PP_VideoCodec"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}
};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @}
 
*
 * @addtogroup Enums
 * @{
 
*
 * <code>PP_VideoCodec</code> contains video codec type constants."
      attribute 10003084 "PP_VIDEOCODEC_UNKNOWN"
	public type class_ref 2776076 // PP_VideoCodec
	init_value " 0"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10003212 "PP_VIDEOCODEC_VP8"
	public type class_ref 2776076 // PP_VideoCodec
	init_value " 1"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10003340 "PP_VIDEOCODEC_H264"
	public type class_ref 2776076 // PP_VideoCodec
	init_value " 2
"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2776204 "PP_VideoCodecProfile"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}
};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * <code>PP_VideoCodecProfile</code> contains video codec profile type
 * constants required for video decoder configuration.
 *."
      attribute 10003468 "PP_VIDEOCODECPROFILE_UNKNOWN"
	public type class_ref 2776204 // PP_VideoCodecProfile
	init_value " 0"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10003596 "PP_VIDEOCODECPROFILE_VP8_MAIN"
	public type class_ref 2776204 // PP_VideoCodecProfile
	init_value " 1"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10003724 "PP_VIDEOCODECPROFILE_H264_BASELINE"
	public type class_ref 2776204 // PP_VideoCodecProfile
	init_value " 2"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10003852 "PP_VIDEOCODECPROFILE_H264_MAIN"
	public type class_ref 2776204 // PP_VideoCodecProfile
	init_value " 3"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10003980 "PP_VIDEOCODECPROFILE_H264_EXTENDED"
	public type class_ref 2776204 // PP_VideoCodecProfile
	init_value " 4"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10004108 "PP_VIDEOCODECPROFILE_H264_HIGH"
	public type class_ref 2776204 // PP_VideoCodecProfile
	init_value " 5"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10004236 "PP_VIDEOCODECPROFILE_H264_HIGH_10"
	public type class_ref 2776204 // PP_VideoCodecProfile
	init_value " 6"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10004364 "PP_VIDEOCODECPROFILE_H264_HIGH_422"
	public type class_ref 2776204 // PP_VideoCodecProfile
	init_value " 7"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10004492 "PP_VIDEOCODECPROFILE_H264_HIGH_444_PREDICTIVE"
	public type class_ref 2776204 // PP_VideoCodecProfile
	init_value " 8
"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2776332 "PP_VideoDecoderConfig"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @}
 
*
 * @addtogroup Structs
 * @{
 
*
 * <code>PP_VideoDecoderConfig</code> contains video decoder configuration
 * information required to initialize video decoders, and a request ID
 * that allows clients to associate a decoder initialization request with a
 * status response. Note: When <code>codec</code> requires extra data for
 * initialization, the data is sent as a <code>PP_Resource</code> carried
 * alongside <code>PP_VideoDecoderConfig</code>."
      classrelation 5212556 // codec (<directional composition>)
	relation 5212428 *-->
	  a role_name "codec" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5212556 // codec (<directional composition>)
	  b parent class_ref 2776076 // PP_VideoCodec
      end

      classrelation 5212684 // profile (<directional composition>)
	relation 5212556 *-->
	  a role_name "profile" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5212684 // profile (<directional composition>)
	  b parent class_ref 2776204 // PP_VideoCodecProfile
      end

      classrelation 5212812 // format (<directional composition>)
	relation 5212684 *-->
	  a role_name "format" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5212812 // format (<directional composition>)
	  b parent class_ref 2775180 // PP_DecryptedFrameFormat
      end

      classrelation 5212940 // width (<directional composition>)
	relation 5212812 *-->
	  a role_name "width" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5212940 // width (<directional composition>)
	  b parent class_ref 2409996 // int32_t
      end

      classrelation 5213068 // height (<directional composition>)
	relation 5212940 *-->
	  a role_name "height" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5213068 // height (<directional composition>)
	  b parent class_ref 2409996 // int32_t
      end

      classrelation 5213196 // request_id (<directional composition>)
	relation 5213068 *-->
	  a role_name "request_id" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5213196 // request_id (<directional composition>)
	  b parent class_ref 2345996 // uint32_t
      end
    end

    class 2776460 "PP_DecryptorStreamType"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}
};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @}
 
*
 * @addtogroup Enums
 * @{
 
*
 * <code>PP_DecryptorStreamType</code> contains stream type constants."
      attribute 10004620 "PP_DECRYPTORSTREAMTYPE_AUDIO"
	public type class_ref 2776460 // PP_DecryptorStreamType
	init_value " 0"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10004748 "PP_DECRYPTORSTREAMTYPE_VIDEO"
	public type class_ref 2776460 // PP_DecryptorStreamType
	init_value " 1
"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2776588 "PP_FileHandle"
      visibility package stereotype "typedef" explicit_base_type "int"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
    end

    class 2776716 "PP_PrivateFontCharset"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}
};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @file
 
*
 * @addtogroup Enums
 * @{"
      attribute 10004876 "PP_PRIVATEFONTCHARSET_ANSI"
	public type class_ref 2776716 // PP_PrivateFontCharset
	init_value " 0"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10005004 "PP_PRIVATEFONTCHARSET_DEFAULT"
	public type class_ref 2776716 // PP_PrivateFontCharset
	init_value " 1"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10005132 "PP_PRIVATEFONTCHARSET_SYMBOL"
	public type class_ref 2776716 // PP_PrivateFontCharset
	init_value " 2"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10005260 "PP_PRIVATEFONTCHARSET_MAC"
	public type class_ref 2776716 // PP_PrivateFontCharset
	init_value " 77"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10005388 "PP_PRIVATEFONTCHARSET_SHIFTJIS"
	public type class_ref 2776716 // PP_PrivateFontCharset
	init_value " 128"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10005516 "PP_PRIVATEFONTCHARSET_HANGUL"
	public type class_ref 2776716 // PP_PrivateFontCharset
	init_value " 129"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10005644 "PP_PRIVATEFONTCHARSET_JOHAB"
	public type class_ref 2776716 // PP_PrivateFontCharset
	init_value " 130"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10005772 "PP_PRIVATEFONTCHARSET_GB2312"
	public type class_ref 2776716 // PP_PrivateFontCharset
	init_value " 134"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10005900 "PP_PRIVATEFONTCHARSET_CHINESEBIG5"
	public type class_ref 2776716 // PP_PrivateFontCharset
	init_value " 136"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10006028 "PP_PRIVATEFONTCHARSET_GREEK"
	public type class_ref 2776716 // PP_PrivateFontCharset
	init_value " 161"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10006156 "PP_PRIVATEFONTCHARSET_TURKISH"
	public type class_ref 2776716 // PP_PrivateFontCharset
	init_value " 162"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10006284 "PP_PRIVATEFONTCHARSET_VIETNAMESE"
	public type class_ref 2776716 // PP_PrivateFontCharset
	init_value " 163"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10006412 "PP_PRIVATEFONTCHARSET_HEBREW"
	public type class_ref 2776716 // PP_PrivateFontCharset
	init_value " 177"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10006540 "PP_PRIVATEFONTCHARSET_ARABIC"
	public type class_ref 2776716 // PP_PrivateFontCharset
	init_value " 178"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10006668 "PP_PRIVATEFONTCHARSET_BALTIC"
	public type class_ref 2776716 // PP_PrivateFontCharset
	init_value " 186"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10006796 "PP_PRIVATEFONTCHARSET_RUSSIAN"
	public type class_ref 2776716 // PP_PrivateFontCharset
	init_value " 204"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10006924 "PP_PRIVATEFONTCHARSET_THAI"
	public type class_ref 2776716 // PP_PrivateFontCharset
	init_value " 222"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10007052 "PP_PRIVATEFONTCHARSET_EASTEUROPE"
	public type class_ref 2776716 // PP_PrivateFontCharset
	init_value " 238"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10007180 "PP_PRIVATEFONTCHARSET_OEM"
	public type class_ref 2776716 // PP_PrivateFontCharset
	init_value " 255
"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2776844 "PPB_ContentDecryptor_Private_0_6"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @file
 * This file defines the <code>PPB_ContentDecryptor_Private</code>
 * interface. Note: This is a special interface, only to be used for Content
 * Decryption Modules, not normal plugins.
 
*
 * @addtogroup Interfaces
 * @{
 
*
 * <code>PPB_ContentDecryptor_Private</code> structure contains the function
 * pointers the browser must implement to support plugins implementing the
 * <code>PPP_ContentDecryptor_Private</code> interface. This interface provides
 * browser side support for the Content Decryption Module (CDM) for v0.1 of the
 * proposed Encrypted Media Extensions: http://goo.gl/rbdnR"
      attribute 10007308 "NeedKey"
	public explicit_type "/** * The decryptor requires a key that has not been provided. * * Sent when the decryptor encounters encrypted content, but it does not have * the key required to decrypt the data. The plugin will call this method in * response to a call to the <code>Decrypt()</code> method on the * <code>PPP_ContentDecryptor_Private<code> interface. * * The browser must notify the application that a key is needed, and, in * response, the web application must direct the browser to call * <code>AddKey()</code> on the <code>PPP_ContentDecryptor_Private<code> * interface. * * @param[in] key_system A <code>PP_Var</code> of type * <code>PP_VARTYPE_STRING</code> containing the name of the key system. * * @param[in] session_id A <code>PP_Var</code> of type * <code>PP_VARTYPE_STRING</code> containing the session ID. * * @param[in] init_data A <code>PP_Var</code> of type * <code>PP_VARTYPE_ARRAY_BUFFER</code> containing container-specific * initialization data. */ void (*)(PP_Instance instance, struct PP_Var key_system, struct PP_Var session_id, struct PP_Var init_data)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  /**
   * The decryptor requires a key that has not been provided.
   *
   * Sent when the decryptor encounters encrypted content, but it does not have
   * the key required to decrypt the data. The plugin will call this method in
   * response to a call to the <code>Decrypt()</code> method on the
   * <code>PPP_ContentDecryptor_Private<code> interface.
   *
   * The browser must notify the application that a key is needed, and, in
   * response, the web application must direct the browser to call
   * <code>AddKey()</code> on the <code>PPP_ContentDecryptor_Private<code>
   * interface.
   *
   * @param[in] key_system A <code>PP_Var</code> of type
   * <code>PP_VARTYPE_STRING</code> containing the name of the key system.
   *
   * @param[in] session_id A <code>PP_Var</code> of type
   * <code>PP_VARTYPE_STRING</code> containing the session ID.
   *
   * @param[in] init_data A <code>PP_Var</code> of type
   * <code>PP_VARTYPE_ARRAY_BUFFER</code> containing container-specific
   * initialization data.
   */
  void (*${name})(PP_Instance instance,
                  struct PP_Var key_system,
                  struct PP_Var session_id,
                  struct PP_Var init_data)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10007436 "KeyAdded"
	public explicit_type "/** * A key has been added as the result of a call to the <code>AddKey()</code> * method on the <code>PPP_ContentDecryptor_Private</code> interface. * * Note: The above describes the most simple case. Depending on the key * system, a series of <code>KeyMessage()</code> calls from the CDM will be * sent to the browser, and then on to the web application. The web * application must then provide more data to the CDM by directing the browser * to pass the data to the CDM via calls to <code>AddKey()</code> on the * <code>PPP_ContentDecryptor_Private</code> interface. * The CDM must call <code>KeyAdded()</code> when the sequence is completed, * and, in response, the browser must notify the web application. * * @param[in] key_system A <code>PP_Var</code> of type * <code>PP_VARTYPE_STRING</code> containing the name of the key system. * * @param[in] session_id A <code>PP_Var</code> of type * <code>PP_VARTYPE_STRING</code> containing the session ID. */ void (*)(PP_Instance instance, struct PP_Var key_system, struct PP_Var session_id)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * A key has been added as the result of a call to the <code>AddKey()</code>
   * method on the <code>PPP_ContentDecryptor_Private</code> interface.
   *
   * Note: The above describes the most simple case. Depending on the key
   * system, a series of <code>KeyMessage()</code> calls from the CDM will be
   * sent to the browser, and then on to the web application. The web
   * application must then provide more data to the CDM by directing the browser
   * to pass the data to the CDM via calls to <code>AddKey()</code> on the
   * <code>PPP_ContentDecryptor_Private</code> interface.
   * The CDM must call <code>KeyAdded()</code> when the sequence is completed,
   * and, in response, the browser must notify the web application.
   *
   * @param[in] key_system A <code>PP_Var</code> of type
   * <code>PP_VARTYPE_STRING</code> containing the name of the key system.
   *
   * @param[in] session_id A <code>PP_Var</code> of type
   * <code>PP_VARTYPE_STRING</code> containing the session ID.
   */
  void (*${name})(PP_Instance instance,
                   struct PP_Var key_system,
                   struct PP_Var session_id)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10007564 "KeyMessage"
	public explicit_type "/** * A message or request has been generated for key_system in the CDM, and * must be sent to the web application. * * For example, when the browser invokes <code>GenerateKeyRequest()</code> * on the <code>PPP_ContentDecryptor_Private</code> interface, the plugin * must send a key message containing the key request. * * Note that <code>KeyMessage()</code> can be used for purposes other than * responses to <code>GenerateKeyRequest()</code> calls. See also the text * in the comment for <code>KeyAdded()</code>, which describes a sequence of * <code>AddKey()</code> and <code>KeyMessage()</code> calls required to * prepare for decryption. * * @param[in] key_system A <code>PP_Var</code> of type * <code>PP_VARTYPE_STRING</code> containing the name of the key system. * * @param[in] session_id A <code>PP_Var</code> of type * <code>PP_VARTYPE_STRING</code> containing the session ID. * * @param[in] message A <code>PP_Var</code> of type * <code>PP_VARTYPE_ARRAY_BUFFER</code> that contains the message. * * @param[in] default_url A <code>PP_Var</code> of type * <code>PP_VARTYPE_STRING</code> containing the default URL for the message. */ void (*)(PP_Instance instance, struct PP_Var key_system, struct PP_Var session_id, struct PP_Var message, struct PP_Var default_url)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * A message or request has been generated for key_system in the CDM, and
   * must be sent to the web application.
   *
   * For example, when the browser invokes <code>GenerateKeyRequest()</code>
   * on the <code>PPP_ContentDecryptor_Private</code> interface, the plugin
   * must send a key message containing the key request.
   *
   * Note that <code>KeyMessage()</code> can be used for purposes other than
   * responses to <code>GenerateKeyRequest()</code> calls. See also the text
   * in the comment for <code>KeyAdded()</code>, which describes a sequence of
   * <code>AddKey()</code> and <code>KeyMessage()</code> calls required to
   * prepare for decryption.
   *
   * @param[in] key_system A <code>PP_Var</code> of type
   * <code>PP_VARTYPE_STRING</code> containing the name of the key system.
   *
   * @param[in] session_id A <code>PP_Var</code> of type
   * <code>PP_VARTYPE_STRING</code> containing the session ID.
   *
   * @param[in] message A <code>PP_Var</code> of type
   * <code>PP_VARTYPE_ARRAY_BUFFER</code> that contains the message.
   *
   * @param[in] default_url A <code>PP_Var</code> of type
   * <code>PP_VARTYPE_STRING</code> containing the default URL for the message.
   */
  void (*${name})(PP_Instance instance,
                     struct PP_Var key_system,
                     struct PP_Var session_id,
                     struct PP_Var message,
                     struct PP_Var default_url)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10007692 "KeyError"
	public explicit_type "/** * An error occurred in a <code>PPP_ContentDecryptor_Private</code> method, * or within the plugin implementing the interface. * * @param[in] key_system A <code>PP_Var</code> of type * <code>PP_VARTYPE_STRING</code> containing the name of the key system. * * @param[in] session_id A <code>PP_Var</code> of type * <code>PP_VARTYPE_STRING</code> containing the session ID. * * @param[in] media_error A MediaKeyError. * * @param[in] system_error A system error code. */ void (*)(PP_Instance instance, struct PP_Var key_system, struct PP_Var session_id, int32_t media_error, int32_t system_code)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * An error occurred in a <code>PPP_ContentDecryptor_Private</code> method,
   * or within the plugin implementing the interface.
   *
   * @param[in] key_system A <code>PP_Var</code> of type
   * <code>PP_VARTYPE_STRING</code> containing the name of the key system.
   *
   * @param[in] session_id A <code>PP_Var</code> of type
   * <code>PP_VARTYPE_STRING</code> containing the session ID.
   *
   * @param[in] media_error A MediaKeyError.
   *
   * @param[in] system_error A system error code.
   */
  void (*${name})(PP_Instance instance,
                   struct PP_Var key_system,
                   struct PP_Var session_id,
                   int32_t media_error,
                   int32_t system_code)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10007820 "DeliverBlock"
	public explicit_type "/** * Called after the <code>Decrypt()</code> method on the * <code>PPP_ContentDecryptor_Private</code> interface completes to * deliver decrypted_block to the browser for decoding and rendering. * * The plugin must not hold a reference to the encrypted buffer resource * provided to <code>Decrypt()</code> when it calls this method. The browser * will reuse the buffer in a subsequent <code>Decrypt()</code> call. * * @param[in] decrypted_block A <code>PP_Resource</code> corresponding to a * <code>PPB_Buffer_Dev</code> resource that contains a decrypted data * block. * * @param[in] decrypted_block_info A <code>PP_DecryptedBlockInfo</code> that * contains the result code and tracking info associated with the * <code>decrypted_block</code>. */ void (*)( PP_Instance instance, PP_Resource decrypted_block, const struct PP_DecryptedBlockInfo* decrypted_block_info)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Called after the <code>Decrypt()</code> method on the
   * <code>PPP_ContentDecryptor_Private</code> interface completes to
   * deliver decrypted_block to the browser for decoding and rendering.
   *
   * The plugin must not hold a reference to the encrypted buffer resource
   * provided to <code>Decrypt()</code> when it calls this method. The browser
   * will reuse the buffer in a subsequent <code>Decrypt()</code> call.
   *
   * @param[in] decrypted_block A <code>PP_Resource</code> corresponding to a
   * <code>PPB_Buffer_Dev</code> resource that contains a decrypted data
   * block.
   *
   * @param[in] decrypted_block_info A <code>PP_DecryptedBlockInfo</code> that
   * contains the result code and tracking info associated with the
   * <code>decrypted_block</code>.
   */
  void (*${name})(
      PP_Instance instance,
      PP_Resource decrypted_block,
      const struct PP_DecryptedBlockInfo* decrypted_block_info)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10007948 "DecoderInitializeDone"
	public explicit_type "/** * Called after the <code>InitializeAudioDecoder()</code> or * <code>InitializeVideoDecoder()</code> method on the * <code>PPP_ContentDecryptor_Private</code> interface completes to report * decoder initialization status to the browser. * * @param[in] success A <code>PP_Bool</code> that is set to * <code>PP_TRUE</code> when the decoder initialization request associated * with <code>request_id</code> was successful. * * @param[in] decoder_type A <code>PP_DecryptorStreamType</code> identifying * the decoder type for which this initialization status response was sent. * * @param[in] request_id The <code>request_id</code> value passed to * <code>InitializeAudioDecoder</code> or <code>InitializeVideoDecoder</code> * in <code>PP_AudioDecoderConfig</code> or * <code>PP_VideoDecoderConfig</code>. */ void (*)(PP_Instance instance, PP_DecryptorStreamType decoder_type, uint32_t request_id, PP_Bool success)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Called after the <code>InitializeAudioDecoder()</code> or
   * <code>InitializeVideoDecoder()</code> method on the
   * <code>PPP_ContentDecryptor_Private</code> interface completes to report
   * decoder initialization status to the browser.
   *
   * @param[in] success A <code>PP_Bool</code> that is set to
   * <code>PP_TRUE</code> when the decoder initialization request associated
   * with <code>request_id</code> was successful.
   *
   * @param[in] decoder_type A <code>PP_DecryptorStreamType</code> identifying
   * the decoder type for which this initialization status response was sent.
   *
   * @param[in] request_id The <code>request_id</code> value passed to
   * <code>InitializeAudioDecoder</code> or <code>InitializeVideoDecoder</code>
   * in <code>PP_AudioDecoderConfig</code> or
   * <code>PP_VideoDecoderConfig</code>.
   */
  void (*${name})(PP_Instance instance,
                                PP_DecryptorStreamType decoder_type,
                                uint32_t request_id,
                                PP_Bool success)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10008076 "DecoderDeinitializeDone"
	public explicit_type "/** * Called after the <code>DeinitializeDecoder()</code> method on the * <code>PPP_ContentDecryptor_Private</code> interface completes to report * decoder de-initialization completion to the browser. * * @param[in] decoder_type The <code>PP_DecryptorStreamType</code> passed to * <code>DeinitializeDecoder()</code>. * * @param[in] request_id The <code>request_id</code> value passed to * <code>DeinitializeDecoder()</code>. */ void (*)(PP_Instance instance, PP_DecryptorStreamType decoder_type, uint32_t request_id)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Called after the <code>DeinitializeDecoder()</code> method on the
   * <code>PPP_ContentDecryptor_Private</code> interface completes to report
   * decoder de-initialization completion to the browser.
   *
   * @param[in] decoder_type The <code>PP_DecryptorStreamType</code> passed to
   * <code>DeinitializeDecoder()</code>.
   *
   * @param[in] request_id The <code>request_id</code> value passed to
   * <code>DeinitializeDecoder()</code>.
   */
  void (*${name})(PP_Instance instance,
                                  PP_DecryptorStreamType decoder_type,
                                  uint32_t request_id)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10008204 "DecoderResetDone"
	public explicit_type "/** * Called after the <code>ResetDecoder()</code> method on the * <code>PPP_ContentDecryptor_Private</code> interface completes to report * decoder reset completion to the browser. * * @param[in] decoder_type The <code>PP_DecryptorStreamType</code> passed to * <code>ResetDecoder()</code>. * * @param[in] request_id The <code>request_id</code> value passed to * <code>ResetDecoder()</code>. */ void (*)(PP_Instance instance, PP_DecryptorStreamType decoder_type, uint32_t request_id)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Called after the <code>ResetDecoder()</code> method on the
   * <code>PPP_ContentDecryptor_Private</code> interface completes to report
   * decoder reset completion to the browser.
   *
   * @param[in] decoder_type The <code>PP_DecryptorStreamType</code> passed to
   * <code>ResetDecoder()</code>.
   *
   * @param[in] request_id The <code>request_id</code> value passed to
   * <code>ResetDecoder()</code>.
   */
  void (*${name})(PP_Instance instance,
                           PP_DecryptorStreamType decoder_type,
                           uint32_t request_id)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10008332 "DeliverFrame"
	public explicit_type "/** * Called after the <code>DecryptAndDecode()</code> method on the * <code>PPP_ContentDecryptor_Private</code> interface completes to deliver * a decrypted and decoded video frame to the browser for rendering. * * The plugin must not hold a reference to the encrypted buffer resource * provided to <code>DecryptAndDecode()</code> when it calls this method. The * browser will reuse the buffer in a subsequent * <code>DecryptAndDecode()</code> call. * * @param[in] decrypted_frame A <code>PP_Resource</code> corresponding to a * <code>PPB_Buffer_Dev</code> resource that contains a video frame. * * @param[in] decrypted_frame_info A <code>PP_DecryptedFrameInfo</code> that * contains the result code, tracking info, and buffer format associated with * <code>decrypted_frame</code>. */ void (*)( PP_Instance instance, PP_Resource decrypted_frame, const struct PP_DecryptedFrameInfo* decrypted_frame_info)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Called after the <code>DecryptAndDecode()</code> method on the
   * <code>PPP_ContentDecryptor_Private</code> interface completes to deliver
   * a decrypted and decoded video frame to the browser for rendering.
   *
   * The plugin must not hold a reference to the encrypted buffer resource
   * provided to <code>DecryptAndDecode()</code> when it calls this method. The
   * browser will reuse the buffer in a subsequent
   * <code>DecryptAndDecode()</code> call.
   *
   * @param[in] decrypted_frame A <code>PP_Resource</code> corresponding to a
   * <code>PPB_Buffer_Dev</code> resource that contains a video frame.
   *
   * @param[in] decrypted_frame_info A <code>PP_DecryptedFrameInfo</code> that
   * contains the result code, tracking info, and buffer format associated with
   * <code>decrypted_frame</code>.
   */
  void (*${name})(
      PP_Instance instance,
      PP_Resource decrypted_frame,
      const struct PP_DecryptedFrameInfo* decrypted_frame_info)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10008460 "DeliverSamples"
	public explicit_type "/** * Called after the <code>DecryptAndDecode()</code> method on the * <code>PPP_ContentDecryptor_Private</code> interface completes to deliver * a buffer of decrypted and decoded audio samples to the browser for * rendering. * * The plugin must not hold a reference to the encrypted buffer resource * provided to <code>DecryptAndDecode()</code> when it calls this method. The * browser will reuse the buffer in a subsequent * <code>DecryptAndDecode()</code> call. * * <code>audio_frames</code> can contain multiple audio output buffers. Each * buffer is serialized in this format: * * |<------------------- serialized audio buffer ------------------->| * | int64_t timestamp | int64_t length | length bytes of audio data | * * For example, with three audio output buffers, |audio_frames| will look * like this: * * |<---------------- audio_frames ------------------>| * | audio buffer 0 | audio buffer 1 | audio buffer 2 | * * @param[in] audio_frames A <code>PP_Resource</code> corresponding to a * <code>PPB_Buffer_Dev</code> resource that contains a decrypted buffer * of decoded audio samples. * * @param[in] decrypted_block_info A <code>PP_DecryptedBlockInfo</code> that * contains the tracking info and result code associated with the * <code>decrypted_block</code>. */ void (*)( PP_Instance instance, PP_Resource audio_frames, const struct PP_DecryptedBlockInfo* decrypted_block_info)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Called after the <code>DecryptAndDecode()</code> method on the
   * <code>PPP_ContentDecryptor_Private</code> interface completes to deliver
   * a buffer of decrypted and decoded audio samples to the browser for
   * rendering.
   *
   * The plugin must not hold a reference to the encrypted buffer resource
   * provided to <code>DecryptAndDecode()</code> when it calls this method. The
   * browser will reuse the buffer in a subsequent
   * <code>DecryptAndDecode()</code> call.
   *
   * <code>audio_frames</code> can contain multiple audio output buffers. Each
   * buffer is serialized in this format:
   *
   * |<------------------- serialized audio buffer ------------------->|
   * | int64_t timestamp | int64_t length | length bytes of audio data |
   *
   * For example, with three audio output buffers, |audio_frames| will look
   * like this:
   *
   * |<---------------- audio_frames ------------------>|
   * | audio buffer 0 | audio buffer 1 | audio buffer 2 |
   *
   * @param[in] audio_frames A <code>PP_Resource</code> corresponding to a
   * <code>PPB_Buffer_Dev</code> resource that contains a decrypted buffer
   * of decoded audio samples.
   *
   * @param[in] decrypted_block_info A <code>PP_DecryptedBlockInfo</code> that
   * contains the tracking info and result code associated with the
   * <code>decrypted_block</code>.
   */
  void (*${name})(
      PP_Instance instance,
      PP_Resource audio_frames,
      const struct PP_DecryptedBlockInfo* decrypted_block_info)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2776972 "PPB_ContentDecryptor_Private"
      visibility package stereotype "typedef" base_type class_ref 2776844 // PPB_ContentDecryptor_Private_0_6
      cpp_decl "${comment}typedef struct ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 5213324 // <dependency>
	relation 5213196 -_->
	  a default
	    cpp default "#include in source"
	    classrelation_ref 5213324 // <dependency>
	  b parent class_ref 2776844 // PPB_ContentDecryptor_Private_0_6
      end
    end

    class 2777100 "PPB_FileRefPrivate_0_1"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @file
 * This file contains the <code>PPB_FileRefPrivate</code> interface. 
*
 * @addtogroup Interfaces
 * @{
 
 PPB_FileRefPrivate interface "
      attribute 10008588 "GetAbsolutePath"
	public explicit_type "PP_Var (*)(PP_Resource file_ref)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const} PP_Var (*${name})(PP_Resource file_ref)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2777228 "PPB_FileRefPrivate"
      visibility package stereotype "typedef" base_type class_ref 2777100 // PPB_FileRefPrivate_0_1
      cpp_decl "${comment}typedef struct ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 5213452 // <dependency>
	relation 5213324 -_->
	  a default
	    cpp default "#include in source"
	    classrelation_ref 5213452 // <dependency>
	  b parent class_ref 2777100 // PPB_FileRefPrivate_0_1
      end
    end

    class 2777356 "PPB_GpuBlacklist_Private_0_2"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @file
 * This file contains the <code>PPB_FileRefPrivate</code> interface. 
*
 * @addtogroup Interfaces
 * @{
 
* PPB_GpuBlacklist_Private interface "
      attribute 10008716 "IsGpuBlacklisted"
	public explicit_type "/** * Returns true if the current system's GPU is blacklisted and 3D in Chrome * will be emulated via software rendering. * * This is used internally by the SRPC NaCl proxy (not exposed to plugins) to * determine if the 3D interfaces should be exposed to plugins. We don't * expose the 3D interfaces if the 3D support is software-emulated. When the * SRPC proxy is removed, this interface can also be removed. */ PP_Bool (*)(void)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  /**
   * Returns true if the current system's GPU is blacklisted and 3D in Chrome
   * will be emulated via software rendering.
   *
   * This is used internally by the SRPC NaCl proxy (not exposed to plugins) to
   * determine if the 3D interfaces should be exposed to plugins. We don't
   * expose the 3D interfaces if the 3D support is software-emulated. When the
   * SRPC proxy is removed, this interface can also be removed.
   */
  PP_Bool (*${name})(void)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2777484 "PPB_GpuBlacklist_Private"
      visibility package stereotype "typedef" base_type class_ref 2777356 // PPB_GpuBlacklist_Private_0_2
      cpp_decl "${comment}typedef struct ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 5213580 // <dependency>
	relation 5213452 -_->
	  a default
	    cpp default "#include in source"
	    classrelation_ref 5213580 // <dependency>
	  b parent class_ref 2777356 // PPB_GpuBlacklist_Private_0_2
      end
    end

    class 2777612 "PP_HostResolver_Private_Flags"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}
};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @file
 * This file defines the <code>PPB_HostResolver_Private</code> interface.
 
*
 * @addtogroup Enums
 * @{
 
*
 * The <code>PP_HostResolver_Flags</code> is an enumeration of the
 * different types of flags, that can be OR-ed and passed to host
 * resolver."
      attribute 10008844 "PP_HOST_RESOLVER_FLAGS_CANONNAME"
	public type class_ref 2777612 // PP_HostResolver_Private_Flags
	init_value " 1 << 0"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10008972 "PP_HOST_RESOLVER_FLAGS_LOOPBACK_ONLY"
	public type class_ref 2777612 // PP_HostResolver_Private_Flags
	init_value " 1 << 1
"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2777740 "PP_HostResolver_Private_Hint"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @}
 
*
 * @addtogroup Structs
 * @{"
      classrelation 5213708 // family (<directional composition>)
	relation 5213580 *-->
	  a role_name "family" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5213708 // family (<directional composition>)
	  b parent class_ref 2777868 // PP_NetAddressFamily_Private
      end

      classrelation 5213836 // flags (<directional composition>)
	relation 5213708 *-->
	  a role_name "flags" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5213836 // flags (<directional composition>)
	  b parent class_ref 2409996 // int32_t
      end
    end

    class 2777868 "PP_NetAddressFamily_Private"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}
};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @file
 * This file defines the <code>PPB_NetAddress_Private</code> interface.
 
*
 * @addtogroup Enums
 * @{"
      attribute 10012300 "PP_NETADDRESSFAMILY_UNSPECIFIED"
	public type class_ref 2777868 // PP_NetAddressFamily_Private
	init_value " 0"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10012428 "PP_NETADDRESSFAMILY_IPV4"
	public type class_ref 2777868 // PP_NetAddressFamily_Private
	init_value " 1"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10012556 "PP_NETADDRESSFAMILY_IPV6"
	public type class_ref 2777868 // PP_NetAddressFamily_Private
	init_value " 2
"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2777996 "PPB_HostResolver_Private_0_1"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @}
 
*
 * @addtogroup Interfaces
 * @{"
      attribute 10009100 "Create"
	public explicit_type "/** * Allocates a Host Resolver resource. */ PP_Resource (*)(PP_Instance instance)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  /**
   * Allocates a Host Resolver resource.
   */
  PP_Resource (*${name})(PP_Instance instance)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10009228 "IsHostResolver"
	public explicit_type "/** * Determines if a given resource is a Host Resolver. */ PP_Bool (*)(PP_Resource resource)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Determines if a given resource is a Host Resolver.
   */
  PP_Bool (*${name})(PP_Resource resource)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10009356 "Resolve"
	public explicit_type "/** * Creates a new request to Host Resolver. |callback| is invoked * when request is processed and a list of network addresses is * obtained. These addresses can be be used in Connect, Bind or * Listen calls to connect to a given |host| and |port|. */ int32_t (*)(PP_Resource host_resolver, const char* host, uint16_t port, const struct PP_HostResolver_Private_Hint* hint, struct PP_CompletionCallback callback)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Creates a new request to Host Resolver. |callback| is invoked
   * when request is processed and a list of network addresses is
   * obtained. These addresses can be be used in Connect, Bind or
   * Listen calls to connect to a given |host| and |port|.
   */
  int32_t (*${name})(PP_Resource host_resolver,
                     const char* host,
                     uint16_t port,
                     const struct PP_HostResolver_Private_Hint* hint,
                     struct PP_CompletionCallback callback)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10009484 "GetCanonicalName"
	public explicit_type "PP_Var (*)(PP_Resource host_resolver)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const} PP_Var (*${name})(PP_Resource host_resolver)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10009612 "GetSize"
	public explicit_type "/** * Returns number of network addresses obtained after Resolve call. */ uint32_t (*)(PP_Resource host_resolver)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Returns number of network addresses obtained after Resolve call.
   */
  uint32_t (*${name})(PP_Resource host_resolver)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10009740 "GetNetAddress"
	public explicit_type "/** * Stores in the |addr| |index|-th network address. |addr| can't be * NULL. Returns PP_TRUE if success or PP_FALSE if the given * resource is not a Host Resolver or |index| exceeds number of * available addresses. */ PP_Bool (*)(PP_Resource host_resolver, uint32_t index, struct PP_NetAddress_Private* addr)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Stores in the |addr| |index|-th network address. |addr| can't be
   * NULL. Returns PP_TRUE if success or PP_FALSE if the given
   * resource is not a Host Resolver or |index| exceeds number of
   * available addresses.
   */
  PP_Bool (*${name})(PP_Resource host_resolver,
                           uint32_t index,
                           struct PP_NetAddress_Private* addr)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2778124 "PPB_HostResolver_Private"
      visibility package stereotype "typedef" base_type class_ref 2777996 // PPB_HostResolver_Private_0_1
      cpp_decl "${comment}typedef struct ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 5213964 // <dependency>
	relation 5213836 -_->
	  a default
	    cpp default "#include in source"
	    classrelation_ref 5213964 // <dependency>
	  b parent class_ref 2777996 // PPB_HostResolver_Private_0_1
      end
    end

    class 2778252 "PPB_Instance_Private_0_1"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @file
 * This file defines the PPB_Instance_Private interface implemented by the
 * browser and containing pointers to functions available only to trusted plugin
 * instances.
 
*
 * @addtogroup Interfaces
 * @{
 
*
 * The PPB_Instance_Private interface contains functions available only to
 * trusted plugin instances.
 *"
      attribute 10009868 "GetWindowObject"
	public explicit_type "PP_Var (*)(PP_Instance instance)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const} PP_Var (*${name})(PP_Instance instance)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10009996 "GetOwnerElementObject"
	public explicit_type "PP_Var (*)(PP_Instance instance)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const} PP_Var (*${name})(PP_Instance instance)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10010124 "ExecuteScript"
	public explicit_type "PP_Var (*)(PP_Instance instance, struct PP_Var script, struct PP_Var* exception)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const} PP_Var (*${name})(PP_Instance instance,
                                 struct PP_Var script,
                                 struct PP_Var* exception)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2778380 "PPB_Instance_Private"
      visibility package stereotype "typedef" base_type class_ref 2778252 // PPB_Instance_Private_0_1
      cpp_decl "${comment}typedef struct ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 5214092 // <dependency>
	relation 5213964 -_->
	  a default
	    cpp default "#include in source"
	    classrelation_ref 5214092 // <dependency>
	  b parent class_ref 2778252 // PPB_Instance_Private_0_1
      end
    end

    class 2778508 "PP_NaClResult"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}
};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @addtogroup Enums
 * @{
 
*
 * The <code>PP_NaClResult</code> enum contains NaCl result codes."
      attribute 10010252 "PP_NACL_OK"
	public type class_ref 2778508 // PP_NaClResult
	init_value " 0"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10010380 "PP_NACL_FAILED"
	public type class_ref 2778508 // PP_NaClResult
	init_value " 1"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10010508 "PP_NACL_ERROR_MODULE"
	public type class_ref 2778508 // PP_NaClResult
	init_value " 2"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10010636 "PP_NACL_ERROR_INSTANCE"
	public type class_ref 2778508 // PP_NaClResult
	init_value " 3
"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2778636 "PP_NaClError"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}
};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "* NaCl-specific errors that should be reported to the user "
      attribute 10010764 "PP_NACL_MANIFEST_MISSING_ARCH"
	public type class_ref 2778636 // PP_NaClError
	init_value " 0
"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2778764 "PPB_NaCl_Private_1_0"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
   *  The manifest program element does not contain a program usable on the
   *  user's architecture
   
*
 * @}
 
*
 * @addtogroup Interfaces
 * @{
 
 PPB_NaCl_Private "
      attribute 10010892 "LaunchSelLdr"
	public explicit_type "/* Launches NaCl's sel_ldr process. Returns PP_NACL_OK on success and * writes a NaClHandle to imc_handle. Returns PP_NACL_FAILED on failure. * The |enable_ppapi_dev| parameter controls whether GetInterface * returns 'Dev' interfaces to the NaCl plugin. The |uses_ppapi| flag * indicates that the nexe run by sel_ldr will use the PPAPI APIs. * This implies that LaunchSelLdr is run from the main thread. If a nexe * does not need PPAPI, then it can run off the main thread. * The |uses_irt| flag indicates whether the IRT should be loaded in this * NaCl process. This is true for ABI stable nexes. */ PP_NaClResult (*)(PP_Instance instance, const char* alleged_url, PP_Bool uses_irt, PP_Bool uses_ppapi, PP_Bool enable_ppapi_dev, void* imc_handle)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  /* Launches NaCl's sel_ldr process.  Returns PP_NACL_OK on success and
   * writes a NaClHandle to imc_handle. Returns PP_NACL_FAILED on failure.
   * The |enable_ppapi_dev| parameter controls whether GetInterface
   * returns 'Dev' interfaces to the NaCl plugin.  The |uses_ppapi| flag
   * indicates that the nexe run by sel_ldr will use the PPAPI APIs.
   * This implies that LaunchSelLdr is run from the main thread.  If a nexe
   * does not need PPAPI, then it can run off the main thread.
   * The |uses_irt| flag indicates whether the IRT should be loaded in this
   * NaCl process.  This is true for ABI stable nexes.
   */
  PP_NaClResult (*${name})(PP_Instance instance,
                                const char* alleged_url,
                                PP_Bool uses_irt,
                                PP_Bool uses_ppapi,
                                PP_Bool enable_ppapi_dev,
                                void* imc_handle)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10011020 "StartPpapiProxy"
	public explicit_type "/* This function starts the IPC proxy so the nexe can communicate with the * browser. Returns PP_NACL_OK on success, otherwise a result code indicating * the failure. PP_NACL_FAILED is returned if LaunchSelLdr wasn't called with * the instance. PP_NACL_ERROR_MODULE is returned if the module can't be * initialized. PP_NACL_ERROR_INSTANCE is returned if the instance can't be * initialized. PP_NACL_USE_SRPC is returned if the plugin should use SRPC. */ PP_NaClResult (*)(PP_Instance instance)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /* This function starts the IPC proxy so the nexe can communicate with the
   * browser. Returns PP_NACL_OK on success, otherwise a result code indicating
   * the failure. PP_NACL_FAILED is returned if LaunchSelLdr wasn't called with
   * the instance. PP_NACL_ERROR_MODULE is returned if the module can't be
   * initialized. PP_NACL_ERROR_INSTANCE is returned if the instance can't be
   * initialized. PP_NACL_USE_SRPC is returned if the plugin should use SRPC.
   */
  PP_NaClResult (*${name})(PP_Instance instance)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10011148 "UrandomFD"
	public explicit_type "/* On POSIX systems, this function returns the file descriptor of * /dev/urandom. On non-POSIX systems, this function returns 0. */ int32_t (*)(void)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /* On POSIX systems, this function returns the file descriptor of
   * /dev/urandom.  On non-POSIX systems, this function returns 0.
   */
  int32_t (*${name})(void)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10011276 "Are3DInterfacesDisabled"
	public explicit_type "/* Whether the Pepper 3D interfaces should be disabled in the NaCl PPAPI * proxy. This is so paranoid admins can effectively prevent untrusted shader * code to be processed by the graphics stack. */ PP_Bool (*)(void)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /* Whether the Pepper 3D interfaces should be disabled in the NaCl PPAPI
   * proxy. This is so paranoid admins can effectively prevent untrusted shader
   * code to be processed by the graphics stack.
   */
  PP_Bool (*${name})(void)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10011404 "EnableBackgroundSelLdrLaunch"
	public explicit_type "/* Enables the creation of sel_ldr processes off of the main thread. */ void (*)(void)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /* Enables the creation of sel_ldr processes off of the main thread.
   */
  void (*${name})(void)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10011532 "BrokerDuplicateHandle"
	public explicit_type "/* This is Windows-specific. This is a replacement for DuplicateHandle() for * use inside the Windows sandbox. Note that we provide this via dependency * injection only to avoid the linkage problems that occur because the NaCl * plugin is built as a separate DLL/DSO * (see http://code.google.com/p/chromium/issues/detail?id=114439#c8). */ int32_t (*)(PP_FileHandle source_handle, uint32_t process_id, PP_FileHandle* target_handle, uint32_t desired_access, uint32_t options)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /* This is Windows-specific.  This is a replacement for DuplicateHandle() for
   * use inside the Windows sandbox.  Note that we provide this via dependency
   * injection only to avoid the linkage problems that occur because the NaCl
   * plugin is built as a separate DLL/DSO
   * (see http://code.google.com/p/chromium/issues/detail?id=114439#c8).
   */
  int32_t (*${name})(PP_FileHandle source_handle,
                                   uint32_t process_id,
                                   PP_FileHandle* target_handle,
                                   uint32_t desired_access,
                                   uint32_t options)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10011660 "GetReadonlyPnaclFd"
	public explicit_type "/* Returns a read-only file descriptor of a file rooted in the Pnacl * component directory, or -1 on error. * Do we want this to take a completion callback and be async, or * could we make this happen on another thread? */ PP_FileHandle (*)(const char* filename)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /* Returns a read-only file descriptor of a file rooted in the Pnacl
   * component directory, or -1 on error.
   * Do we want this to take a completion callback and be async, or
   * could we make this happen on another thread?
   */
  PP_FileHandle (*${name})(const char* filename)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10011788 "CreateTemporaryFile"
	public explicit_type "/* This creates a temporary file that will be deleted by the time * the last handle is closed (or earlier on POSIX systems), and * returns a posix handle to that temporary file. */ PP_FileHandle (*)(PP_Instance instance)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /* This creates a temporary file that will be deleted by the time
   * the last handle is closed (or earlier on POSIX systems), and
   * returns a posix handle to that temporary file.
   */
  PP_FileHandle (*${name})(PP_Instance instance)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10011916 "IsOffTheRecord"
	public explicit_type "/* Return true if we are off the record. */ PP_Bool (*)(void)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /* Return true if we are off the record.
   */
  PP_Bool (*${name})(void)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10012044 "IsPnaclEnabled"
	public explicit_type "/* Return true if PNaCl is turned on. */ PP_Bool (*)(void)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /* Return true if PNaCl is turned on.
   */
  PP_Bool (*${name})(void)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10012172 "ReportNaClError"
	public explicit_type "/* Display a UI message to the user. */ PP_NaClResult (*)(PP_Instance instance, PP_NaClError message_id)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /* Display a UI message to the user. */
  PP_NaClResult (*${name})(PP_Instance instance,
                                   PP_NaClError message_id)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2778892 "PPB_NaCl_Private"
      visibility package stereotype "typedef" base_type class_ref 2778764 // PPB_NaCl_Private_1_0
      cpp_decl "${comment}typedef struct ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 5214220 // <dependency>
	relation 5214092 -_->
	  a default
	    cpp default "#include in source"
	    classrelation_ref 5214220 // <dependency>
	  b parent class_ref 2778764 // PPB_NaCl_Private_1_0
      end
    end

    class 2779020 "PP_NetAddress_Private"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @}
 
*
 * @addtogroup Structs
 * @{
 
*
 * This is an opaque type holding a network address. Plugins must
 * never access members of this struct directly."
      classrelation 5214348 // size (<directional composition>)
	relation 5214220 *-->
	  a role_name "size" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5214348 // size (<directional composition>)
	  b parent class_ref 2345996 // uint32_t
      end

      attribute 10012684 "data"
	public explicit_type "char"
	multiplicity "[128]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2779148 "PPB_NetAddress_Private_1_1"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @}
 
*
 * @addtogroup Interfaces
 * @{
 
*
 * The <code>PPB_NetAddress_Private</code> interface provides operations on
 * network addresses."
      attribute 10012812 "AreEqual"
	public explicit_type "/** * Returns PP_TRUE if the two addresses are equal (host and port). */ PP_Bool (*)(const struct PP_NetAddress_Private* addr1, const struct PP_NetAddress_Private* addr2)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  /**
   * Returns PP_TRUE if the two addresses are equal (host and port).
   */
  PP_Bool (*${name})(const struct PP_NetAddress_Private* addr1,
                      const struct PP_NetAddress_Private* addr2)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10012940 "AreHostsEqual"
	public explicit_type "/** * Returns PP_TRUE if the two addresses refer to the same host. */ PP_Bool (*)(const struct PP_NetAddress_Private* addr1, const struct PP_NetAddress_Private* addr2)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Returns PP_TRUE if the two addresses refer to the same host.
   */
  PP_Bool (*${name})(const struct PP_NetAddress_Private* addr1,
                           const struct PP_NetAddress_Private* addr2)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10013068 "Describe"
	public explicit_type "PP_Var (*)(PP_Module module, const struct PP_NetAddress_Private* addr, PP_Bool include_port)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const} PP_Var (*${name})(PP_Module module,
                            const struct PP_NetAddress_Private* addr,
                            PP_Bool include_port)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10013196 "ReplacePort"
	public explicit_type "/** * Replaces the port in the given source address. Returns PP_TRUE on success. */ PP_Bool (*)(const struct PP_NetAddress_Private* src_addr, uint16_t port, struct PP_NetAddress_Private* addr_out)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Replaces the port in the given source address. Returns PP_TRUE on success.
   */
  PP_Bool (*${name})(const struct PP_NetAddress_Private* src_addr,
                         uint16_t port,
                         struct PP_NetAddress_Private* addr_out)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10013324 "GetAnyAddress"
	public explicit_type "/** * Gets the \"any\" address (for IPv4 or IPv6); for use with UDP Bind. */ void (*)(PP_Bool is_ipv6, struct PP_NetAddress_Private* addr)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Gets the \"any\" address (for IPv4 or IPv6); for use with UDP Bind.
   */
  void (*${name})(PP_Bool is_ipv6, struct PP_NetAddress_Private* addr)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10013452 "GetFamily"
	public explicit_type "/** * Gets the address family. */ PP_NetAddressFamily_Private (*)( const struct PP_NetAddress_Private* addr)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Gets the address family.
   */
  PP_NetAddressFamily_Private (*${name})(
      const struct PP_NetAddress_Private* addr)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10013580 "GetPort"
	public explicit_type "/** * Gets the port. The port is returned in host byte order. */ uint16_t (*)(const struct PP_NetAddress_Private* addr)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Gets the port. The port is returned in host byte order.
   */
  uint16_t (*${name})(const struct PP_NetAddress_Private* addr)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10013708 "GetAddress"
	public explicit_type "/** * Gets the address. The output, address, must be large enough for the * current socket family. The output will be the binary representation of an * address for the current socket family. For IPv4 and IPv6 the address is in * network byte order. PP_TRUE is returned if the address was successfully * retrieved. */ PP_Bool (*)(const struct PP_NetAddress_Private* addr, void* address, uint16_t address_size)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Gets the address. The output, address, must be large enough for the
   * current socket family. The output will be the binary representation of an
   * address for the current socket family. For IPv4 and IPv6 the address is in
   * network byte order. PP_TRUE is returned if the address was successfully
   * retrieved.
   */
  PP_Bool (*${name})(const struct PP_NetAddress_Private* addr,
                        void* address,
                        uint16_t address_size)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10013836 "GetScopeID"
	public explicit_type "/** * Returns ScopeID for IPv6 addresses or 0 for IPv4. */ uint32_t (*)(const struct PP_NetAddress_Private* addr)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Returns ScopeID for IPv6 addresses or 0 for IPv4.
   */
  uint32_t (*${name})(const struct PP_NetAddress_Private* addr)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10013964 "CreateFromIPv4Address"
	public explicit_type "/** * Creates NetAddress with the specified IPv4 address and port * number. */ void (*)(const uint8_t ip[4], uint16_t port, struct PP_NetAddress_Private* addr_out)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Creates NetAddress with the specified IPv4 address and port
   * number.
   */
  void (*${name})(const uint8_t ip[4],
                                uint16_t port,
                                struct PP_NetAddress_Private* addr_out)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10014092 "CreateFromIPv6Address"
	public explicit_type "/** * Creates NetAddress with the specified IPv6 address, scope_id and * port number. */ void (*)(const uint8_t ip[16], uint32_t scope_id, uint16_t port, struct PP_NetAddress_Private* addr_out)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Creates NetAddress with the specified IPv6 address, scope_id and
   * port number.
   */
  void (*${name})(const uint8_t ip[16],
                                uint32_t scope_id,
                                uint16_t port,
                                struct PP_NetAddress_Private* addr_out)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2779276 "PPB_NetAddress_Private"
      visibility package stereotype "typedef" base_type class_ref 2779148 // PPB_NetAddress_Private_1_1
      cpp_decl "${comment}typedef struct ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 5214476 // <dependency>
	relation 5214348 -_->
	  a default
	    cpp default "#include in source"
	    classrelation_ref 5214476 // <dependency>
	  b parent class_ref 2779148 // PPB_NetAddress_Private_1_1
      end
    end

    class 2779404 "PPB_NetAddress_Private_0_1"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      attribute 10014220 "AreEqual"
	public explicit_type "PP_Bool (*)(const struct PP_NetAddress_Private* addr1, const struct PP_NetAddress_Private* addr2)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  PP_Bool (*${name})(const struct PP_NetAddress_Private* addr1,
                      const struct PP_NetAddress_Private* addr2)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10014348 "AreHostsEqual"
	public explicit_type "PP_Bool (*)(const struct PP_NetAddress_Private* addr1, const struct PP_NetAddress_Private* addr2)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  PP_Bool (*${name})(const struct PP_NetAddress_Private* addr1,
                           const struct PP_NetAddress_Private* addr2)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10014476 "Describe"
	public explicit_type "PP_Var (*)(PP_Module module, const struct PP_NetAddress_Private* addr, PP_Bool include_port)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const} PP_Var (*${name})(PP_Module module,
                            const struct PP_NetAddress_Private* addr,
                            PP_Bool include_port)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10014604 "ReplacePort"
	public explicit_type "PP_Bool (*)(const struct PP_NetAddress_Private* src_addr, uint16_t port, struct PP_NetAddress_Private* addr_out)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  PP_Bool (*${name})(const struct PP_NetAddress_Private* src_addr,
                         uint16_t port,
                         struct PP_NetAddress_Private* addr_out)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10014732 "GetAnyAddress"
	public explicit_type "void (*)(PP_Bool is_ipv6, struct PP_NetAddress_Private* addr)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  void (*${name})(PP_Bool is_ipv6, struct PP_NetAddress_Private* addr)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2779532 "PPB_NetAddress_Private_1_0"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      attribute 10014860 "AreEqual"
	public explicit_type "PP_Bool (*)(const struct PP_NetAddress_Private* addr1, const struct PP_NetAddress_Private* addr2)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  PP_Bool (*${name})(const struct PP_NetAddress_Private* addr1,
                      const struct PP_NetAddress_Private* addr2)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10014988 "AreHostsEqual"
	public explicit_type "PP_Bool (*)(const struct PP_NetAddress_Private* addr1, const struct PP_NetAddress_Private* addr2)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  PP_Bool (*${name})(const struct PP_NetAddress_Private* addr1,
                           const struct PP_NetAddress_Private* addr2)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10015116 "Describe"
	public explicit_type "PP_Var (*)(PP_Module module, const struct PP_NetAddress_Private* addr, PP_Bool include_port)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const} PP_Var (*${name})(PP_Module module,
                            const struct PP_NetAddress_Private* addr,
                            PP_Bool include_port)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10015244 "ReplacePort"
	public explicit_type "PP_Bool (*)(const struct PP_NetAddress_Private* src_addr, uint16_t port, struct PP_NetAddress_Private* addr_out)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  PP_Bool (*${name})(const struct PP_NetAddress_Private* src_addr,
                         uint16_t port,
                         struct PP_NetAddress_Private* addr_out)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10015372 "GetAnyAddress"
	public explicit_type "void (*)(PP_Bool is_ipv6, struct PP_NetAddress_Private* addr)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  void (*${name})(PP_Bool is_ipv6, struct PP_NetAddress_Private* addr)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10015500 "GetFamily"
	public explicit_type "PP_NetAddressFamily_Private (*)( const struct PP_NetAddress_Private* addr)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  PP_NetAddressFamily_Private (*${name})(
      const struct PP_NetAddress_Private* addr)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10015628 "GetPort"
	public explicit_type "uint16_t (*)(const struct PP_NetAddress_Private* addr)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  uint16_t (*${name})(const struct PP_NetAddress_Private* addr)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10015756 "GetAddress"
	public explicit_type "PP_Bool (*)(const struct PP_NetAddress_Private* addr, void* address, uint16_t address_size)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  PP_Bool (*${name})(const struct PP_NetAddress_Private* addr,
                        void* address,
                        uint16_t address_size)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2779660 "PP_NetworkListType_Private"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}
};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @file
 * This file defines the <code>PPB_NetworkList_Private</code> interface.
 
*
 * @addtogroup Enums
 * @{
 
*
 * Type of a network interface."
      attribute 10015884 "PP_NETWORKLIST_UNKNOWN"
	public type class_ref 2779660 // PP_NetworkListType_Private
	init_value " 0"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10016012 "PP_NETWORKLIST_ETHERNET"
	public type class_ref 2779660 // PP_NetworkListType_Private
	init_value " 1"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10016140 "PP_NETWORKLIST_WIFI"
	public type class_ref 2779660 // PP_NetworkListType_Private
	init_value " 2"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10016268 "PP_NETWORKLIST_CELLULAR"
	public type class_ref 2779660 // PP_NetworkListType_Private
	init_value " 3
"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2779788 "PP_NetworkListState_Private"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}
};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * State of a network interface."
      attribute 10016396 "PP_NETWORKLIST_DOWN"
	public type class_ref 2779788 // PP_NetworkListState_Private
	init_value " 0"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10016524 "PP_NETWORKLIST_UP"
	public type class_ref 2779788 // PP_NetworkListState_Private
	init_value " 1
"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2779916 "PPB_NetworkList_Private_0_2"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @}
 
*
 * @addtogroup Interfaces
 * @{
 
*
 * The <code>PPB_NetworkList_Private</code> is used to represent a
 * list of network interfaces and their configuration. The content of
 * the list is immutable. The current networks configuration can be
 * received using the <code>PPB_NetworkMonitor_Private</code>
 * interface."
      attribute 10016652 "IsNetworkList"
	public explicit_type "/** * Determines if the specified <code>resource</code> is a * <code>NetworkList</code> object. * * @param[in] resource A <code>PP_Resource</code> resource. * * @return Returns <code>PP_TRUE</code> if <code>resource</code> is * a <code>PPB_NetworkList_Private</code>, <code>PP_FALSE</code> * otherwise. */ PP_Bool (*)(PP_Resource resource)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  /**
   * Determines if the specified <code>resource</code> is a
   * <code>NetworkList</code> object.
   *
   * @param[in] resource A <code>PP_Resource</code> resource.
   *
   * @return Returns <code>PP_TRUE</code> if <code>resource</code> is
   * a <code>PPB_NetworkList_Private</code>, <code>PP_FALSE</code>
   * otherwise.
   */
  PP_Bool (*${name})(PP_Resource resource)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10016780 "GetCount"
	public explicit_type "/** * @return Returns number of available network interfaces or 0 if * the list has never been updated. */ uint32_t (*)(PP_Resource resource)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * @return Returns number of available network interfaces or 0 if
   * the list has never been updated.
   */
  uint32_t (*${name})(PP_Resource resource)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10016908 "GetName"
	public explicit_type "PP_Var (*)(PP_Resource resource, uint32_t index)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const} PP_Var (*${name})(PP_Resource resource, uint32_t index)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10017036 "GetType"
	public explicit_type "/** * @return Returns type of the network interface with the specified * <code>index</code>. */ PP_NetworkListType_Private (*)(PP_Resource resource, uint32_t index)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * @return Returns type of the network interface with the specified
   * <code>index</code>.
   */
  PP_NetworkListType_Private (*${name})(PP_Resource resource, uint32_t index)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10017164 "GetState"
	public explicit_type "/** * @return Returns current state of the network interface with the * specified <code>index</code>. */ PP_NetworkListState_Private (*)(PP_Resource resource, uint32_t index)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * @return Returns current state of the network interface with the
   * specified <code>index</code>.
   */
  PP_NetworkListState_Private (*${name})(PP_Resource resource, uint32_t index)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10017292 "GetIpAddresses"
	public explicit_type "/** * Gets list of IP addresses for the network interface with the * specified <code>index</code> and stores them in * <code>addresses</code>. If the caller didn't allocate sufficient * space to store all addresses, then only the first * <code>count</code> addresses are filled in. * * @return Returns total number of IP addresses assigned to the * network interface or a negative error code. */ int32_t (*)(PP_Resource resource, uint32_t index, struct PP_NetAddress_Private addresses[], uint32_t count)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Gets list of IP addresses for the network interface with the
   * specified <code>index</code> and stores them in
   * <code>addresses</code>. If the caller didn't allocate sufficient
   * space to store all addresses, then only the first
   * <code>count</code> addresses are filled in.
   *
   * @return Returns total number of IP addresses assigned to the
   * network interface or a negative error code.
   */
  int32_t (*${name})(PP_Resource resource,
                            uint32_t index,
                            struct PP_NetAddress_Private addresses[],
                            uint32_t count)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10017420 "GetDisplayName"
	public explicit_type "PP_Var (*)(PP_Resource resource, uint32_t index)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const} PP_Var (*${name})(PP_Resource resource, uint32_t index)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10017548 "GetMTU"
	public explicit_type "/** * @return Returns MTU for the network interface with the specified * <code>index</code> or 0 if MTU is unknown. */ uint32_t (*)(PP_Resource resource, uint32_t index)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * @return Returns MTU for the network interface with the specified
   * <code>index</code> or 0 if MTU is unknown.
   */
  uint32_t (*${name})(PP_Resource resource, uint32_t index)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2780044 "PPB_NetworkList_Private"
      visibility package stereotype "typedef" base_type class_ref 2779916 // PPB_NetworkList_Private_0_2
      cpp_decl "${comment}typedef struct ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 5214604 // <dependency>
	relation 5214476 -_->
	  a default
	    cpp default "#include in source"
	    classrelation_ref 5214604 // <dependency>
	  b parent class_ref 2779916 // PPB_NetworkList_Private_0_2
      end
    end

    class 2780172 "PPB_NetworkMonitor_Callback"
      visibility package stereotype "typedef" explicit_base_type "void"
      cpp_decl "${comment}typedef ${type}(* ${name})(void* user_data,
                                            PP_Resource network_list);
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @file
 * This file defines the <code>PPB_NetworkMonitor_Private</code> interface.
 
*
 * @addtogroup Typedefs
 * @{
 
*
 * <code>PPB_NetworkMonitor_Callback</code> is a callback function
 * type that is used to receive notifications about network
 * configuration changes. The <code>network_list</code> passed to this
 * callback is a <code>PPB_NetworkList_Private</code> resource that
 * contains current configuration of network interfaces."
    end

    class 2780300 "PPB_NetworkMonitor_Private_0_2"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @}
 
*
 * @addtogroup Interfaces
 * @{
 
*
 * The <code>PPB_NetworkMonitor_Private</code> provides access to
 * notifications of network configuration changes."
      attribute 10017676 "Create"
	public explicit_type "/** * Starts network change monitoring. The specified * <code>callback</code> will be called on the main thread once * after this method is called (to supply the initial network * configuarion) and then later every time network configuration * changes. Notifications are stopped when the returned resource is * destroyed. If the plugin doesn't have access to the network list * then the callback will be called once with the * <code>network_list</code> parameter is set to 0. * * @param[in] callback The callback that will be called every time * network configuration changes or NULL to stop network monitoring. * * @param[inout] user_data The data to be passed to the callback on * each call. * * @return A <code>PP_Resource</code> containing the created * NetworkMonitor resource. */ PP_Resource (*)(PP_Instance instance, PPB_NetworkMonitor_Callback callback, void* user_data)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  /**
   * Starts network change monitoring. The specified
   * <code>callback</code> will be called on the main thread once
   * after this method is called (to supply the initial network
   * configuarion) and then later every time network configuration
   * changes. Notifications are stopped when the returned resource is
   * destroyed. If the plugin doesn't have access to the network list
   * then the callback will be called once with the
   * <code>network_list</code> parameter is set to 0.
   *
   * @param[in] callback The callback that will be called every time
   * network configuration changes or NULL to stop network monitoring.
   *
   * @param[inout] user_data The data to be passed to the callback on
   * each call.
   *
   * @return A <code>PP_Resource</code> containing the created
   * NetworkMonitor resource.
   */
  PP_Resource (*${name})(PP_Instance instance,
                        PPB_NetworkMonitor_Callback callback,
                        void* user_data)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10017804 "IsNetworkMonitor"
	public explicit_type "/** * Determines if the specified <code>resource</code> is a * <code>NetworkMonitor</code> object. * * @param[in] resource A <code>PP_Resource</code> resource. * * @return Returns <code>PP_TRUE</code> if <code>resource</code> is * a <code>PPB_NetworkMonitor_Private</code>, <code>PP_FALSE</code> * otherwise. */ PP_Bool (*)(PP_Resource resource)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Determines if the specified <code>resource</code> is a
   * <code>NetworkMonitor</code> object.
   *
   * @param[in] resource A <code>PP_Resource</code> resource.
   *
   * @return Returns <code>PP_TRUE</code> if <code>resource</code> is
   * a <code>PPB_NetworkMonitor_Private</code>, <code>PP_FALSE</code>
   * otherwise.
   */
  PP_Bool (*${name})(PP_Resource resource)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2780428 "PPB_NetworkMonitor_Private"
      visibility package stereotype "typedef" base_type class_ref 2780300 // PPB_NetworkMonitor_Private_0_2
      cpp_decl "${comment}typedef struct ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 5214732 // <dependency>
	relation 5214604 -_->
	  a default
	    cpp default "#include in source"
	    classrelation_ref 5214732 // <dependency>
	  b parent class_ref 2780300 // PPB_NetworkMonitor_Private_0_2
      end
    end

    class 2780556 "PP_ResourceString"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}
};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      attribute 10017932 "PP_RESOURCESTRING_PDFGETPASSWORD"
	public type class_ref 2780556 // PP_ResourceString
	init_value " 0"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10018060 "PP_RESOURCESTRING_PDFLOADING"
	public type class_ref 2780556 // PP_ResourceString
	init_value " 1"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10018188 "PP_RESOURCESTRING_PDFLOAD_FAILED"
	public type class_ref 2780556 // PP_ResourceString
	init_value " 2"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10018316 "PP_RESOURCESTRING_PDFPROGRESSLOADING"
	public type class_ref 2780556 // PP_ResourceString
	init_value " 3
"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2780684 "PP_ResourceImage"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}
};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      attribute 10018444 "PP_RESOURCEIMAGE_PDF_BUTTON_FTP"
	public type class_ref 2780684 // PP_ResourceImage
	init_value " 0"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10018572 "PP_RESOURCEIMAGE_PDF_BUTTON_FTP_HOVER"
	public type class_ref 2780684 // PP_ResourceImage
	init_value " 1"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10018700 "PP_RESOURCEIMAGE_PDF_BUTTON_FTP_PRESSED"
	public type class_ref 2780684 // PP_ResourceImage
	init_value " 2"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10018828 "PP_RESOURCEIMAGE_PDF_BUTTON_FTW"
	public type class_ref 2780684 // PP_ResourceImage
	init_value " 3"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10018956 "PP_RESOURCEIMAGE_PDF_BUTTON_FTW_HOVER"
	public type class_ref 2780684 // PP_ResourceImage
	init_value " 4"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10019084 "PP_RESOURCEIMAGE_PDF_BUTTON_FTW_PRESSED"
	public type class_ref 2780684 // PP_ResourceImage
	init_value " 5"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10019212 "PP_RESOURCEIMAGE_PDF_BUTTON_ZOOMIN"
	public type class_ref 2780684 // PP_ResourceImage
	init_value " 6"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10019340 "PP_RESOURCEIMAGE_PDF_BUTTON_ZOOMIN_HOVER"
	public type class_ref 2780684 // PP_ResourceImage
	init_value " 7"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10019468 "PP_RESOURCEIMAGE_PDF_BUTTON_ZOOMIN_PRESSED"
	public type class_ref 2780684 // PP_ResourceImage
	init_value " 8"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10019596 "PP_RESOURCEIMAGE_PDF_BUTTON_ZOOMOUT"
	public type class_ref 2780684 // PP_ResourceImage
	init_value " 9"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10019724 "PP_RESOURCEIMAGE_PDF_BUTTON_ZOOMOUT_HOVER"
	public type class_ref 2780684 // PP_ResourceImage
	init_value " 10"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10019852 "PP_RESOURCEIMAGE_PDF_BUTTON_ZOOMOUT_PRESSED"
	public type class_ref 2780684 // PP_ResourceImage
	init_value " 11"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10019980 "PP_RESOURCEIMAGE_PDF_BUTTON_THUMBNAIL_0"
	public type class_ref 2780684 // PP_ResourceImage
	init_value " 12"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10020108 "PP_RESOURCEIMAGE_PDF_BUTTON_THUMBNAIL_1"
	public type class_ref 2780684 // PP_ResourceImage
	init_value " 13"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10020236 "PP_RESOURCEIMAGE_PDF_BUTTON_THUMBNAIL_2"
	public type class_ref 2780684 // PP_ResourceImage
	init_value " 14"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10020364 "PP_RESOURCEIMAGE_PDF_BUTTON_THUMBNAIL_3"
	public type class_ref 2780684 // PP_ResourceImage
	init_value " 15"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10020492 "PP_RESOURCEIMAGE_PDF_BUTTON_THUMBNAIL_4"
	public type class_ref 2780684 // PP_ResourceImage
	init_value " 16"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10020620 "PP_RESOURCEIMAGE_PDF_BUTTON_THUMBNAIL_5"
	public type class_ref 2780684 // PP_ResourceImage
	init_value " 17"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10020748 "PP_RESOURCEIMAGE_PDF_BUTTON_THUMBNAIL_6"
	public type class_ref 2780684 // PP_ResourceImage
	init_value " 18"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10020876 "PP_RESOURCEIMAGE_PDF_BUTTON_THUMBNAIL_7"
	public type class_ref 2780684 // PP_ResourceImage
	init_value " 19"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10021004 "PP_RESOURCEIMAGE_PDF_BUTTON_THUMBNAIL_8"
	public type class_ref 2780684 // PP_ResourceImage
	init_value " 20"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10021132 "PP_RESOURCEIMAGE_PDF_BUTTON_THUMBNAIL_9"
	public type class_ref 2780684 // PP_ResourceImage
	init_value " 21"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10021260 "PP_RESOURCEIMAGE_PDF_BUTTON_THUMBNAIL_NUM_BACKGROUND"
	public type class_ref 2780684 // PP_ResourceImage
	init_value " 22"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10021388 "PP_RESOURCEIMAGE_PDF_PROGRESS_BAR_0"
	public type class_ref 2780684 // PP_ResourceImage
	init_value " 23"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10021516 "PP_RESOURCEIMAGE_PDF_PROGRESS_BAR_1"
	public type class_ref 2780684 // PP_ResourceImage
	init_value " 24"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10021644 "PP_RESOURCEIMAGE_PDF_PROGRESS_BAR_2"
	public type class_ref 2780684 // PP_ResourceImage
	init_value " 25"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10021772 "PP_RESOURCEIMAGE_PDF_PROGRESS_BAR_3"
	public type class_ref 2780684 // PP_ResourceImage
	init_value " 26"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10021900 "PP_RESOURCEIMAGE_PDF_PROGRESS_BAR_4"
	public type class_ref 2780684 // PP_ResourceImage
	init_value " 27"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10022028 "PP_RESOURCEIMAGE_PDF_PROGRESS_BAR_5"
	public type class_ref 2780684 // PP_ResourceImage
	init_value " 28"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10022156 "PP_RESOURCEIMAGE_PDF_PROGRESS_BAR_6"
	public type class_ref 2780684 // PP_ResourceImage
	init_value " 29"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10022284 "PP_RESOURCEIMAGE_PDF_PROGRESS_BAR_7"
	public type class_ref 2780684 // PP_ResourceImage
	init_value " 30"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10022412 "PP_RESOURCEIMAGE_PDF_PROGRESS_BAR_8"
	public type class_ref 2780684 // PP_ResourceImage
	init_value " 31"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10022540 "PP_RESOURCEIMAGE_PDF_PROGRESS_BAR_BACKGROUND"
	public type class_ref 2780684 // PP_ResourceImage
	init_value " 32"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10022668 "PP_RESOURCEIMAGE_PDF_PAGE_DROPSHADOW"
	public type class_ref 2780684 // PP_ResourceImage
	init_value " 33"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10022796 "PP_RESOURCEIMAGE_PDF_BUTTON_SAVE"
	public type class_ref 2780684 // PP_ResourceImage
	init_value " 34"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10022924 "PP_RESOURCEIMAGE_PDF_BUTTON_SAVE_HOVER"
	public type class_ref 2780684 // PP_ResourceImage
	init_value " 35"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10023052 "PP_RESOURCEIMAGE_PDF_BUTTON_SAVE_PRESSED"
	public type class_ref 2780684 // PP_ResourceImage
	init_value " 36"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10023180 "PP_RESOURCEIMAGE_PDF_BUTTON_PRINT"
	public type class_ref 2780684 // PP_ResourceImage
	init_value " 37"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10023308 "PP_RESOURCEIMAGE_PDF_BUTTON_PRINT_HOVER"
	public type class_ref 2780684 // PP_ResourceImage
	init_value " 38"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10023436 "PP_RESOURCEIMAGE_PDF_BUTTON_PRINT_PRESSED"
	public type class_ref 2780684 // PP_ResourceImage
	init_value " 39"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10023564 "PP_RESOURCEIMAGE_PDF_BUTTON_ZOOMIN_END"
	public type class_ref 2780684 // PP_ResourceImage
	init_value " 40"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10023692 "PP_RESOURCEIMAGE_PDF_BUTTON_ZOOMIN_END_HOVER"
	public type class_ref 2780684 // PP_ResourceImage
	init_value " 41"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10023820 "PP_RESOURCEIMAGE_PDF_BUTTON_ZOOMIN_END_PRESSED"
	public type class_ref 2780684 // PP_ResourceImage
	init_value " 42"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10023948 "PP_RESOURCEIMAGE_PDF_PAN_SCROLL_ICON"
	public type class_ref 2780684 // PP_ResourceImage
	init_value " 43"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10024076 "PP_RESOURCEIMAGE_PDF_PAGE_INDICATOR_BACKGROUND"
	public type class_ref 2780684 // PP_ResourceImage
	init_value " 44
"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2780812 "PP_PDFFeature"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}
};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      attribute 10024204 "PP_PDFFEATURE_HIDPI"
	public type class_ref 2780812 // PP_PDFFeature
	init_value " 0
"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2780940 "PP_PrivateFontFileDescription"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      attribute 10024332 "face"
	const_attribute public explicit_type "char"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 5214860 // weight (<directional composition>)
	relation 5214732 *-->
	  a role_name "weight" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5214860 // weight (<directional composition>)
	  b parent class_ref 2345996 // uint32_t
      end

      attribute 10024460 "italic"
	public type class_ref 2322828 // bool
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2781068 "PP_PrivateFindResult"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      attribute 10024588 "start_index"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10024716 "length"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2781196 "PPB_PDF"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      attribute 10024844 "GetLocalizedString"
	public explicit_type "PP_Var (*)(PP_Instance instance, PP_ResourceString string_id)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const} PP_Var (*${name})(PP_Instance instance,
                                      PP_ResourceString string_id)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10024972 "GetResourceImage"
	public explicit_type "// Returns a resource image. PP_Resource (*)(PP_Instance instance, PP_ResourceImage image_id)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  // Returns a resource image.
  PP_Resource (*${name})(PP_Instance instance,
                                  PP_ResourceImage image_id)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10025100 "GetFontFileWithFallback"
	public explicit_type "// Returns a resource identifying a font file corresponding to the given font // request after applying the browser-specific fallback. // // Currently Linux-only. PP_Resource (*)( PP_Instance instance, const struct PP_FontDescription_Dev* description, PP_PrivateFontCharset charset)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  // Returns a resource identifying a font file corresponding to the given font
  // request after applying the browser-specific fallback.
  //
  // Currently Linux-only.
  PP_Resource (*${name})(
      PP_Instance instance,
      const struct PP_FontDescription_Dev* description,
      PP_PrivateFontCharset charset)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10025228 "GetFontTableForPrivateFontFile"
	public explicit_type "// Given a resource previously returned by GetFontFileWithFallback, returns // a pointer to the requested font table. Linux only. bool (*)(PP_Resource font_file, uint32_t table, void* output, uint32_t* output_length)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  // Given a resource previously returned by GetFontFileWithFallback, returns
  // a pointer to the requested font table. Linux only.
  bool (*${name})(PP_Resource font_file,
                                         uint32_t table,
                                         void* output,
                                         uint32_t* output_length)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10025356 "SearchString"
	public explicit_type "// Search the given string using ICU. Use PPB_Core's MemFree on results when // done. void (*)( PP_Instance instance, const unsigned short* string, const unsigned short* term, bool case_sensitive, struct PP_PrivateFindResult** results, int* count)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  // Search the given string using ICU.  Use PPB_Core's MemFree on results when
  // done.
  void (*${name})(
     PP_Instance instance,
     const unsigned short* string,
     const unsigned short* term,
     bool case_sensitive,
     struct PP_PrivateFindResult** results,
     int* count)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10025484 "DidStartLoading"
	public explicit_type "// Since WebFrame doesn't know about PPAPI requests, it'll think the page has // finished loading even if there are outstanding requests by the plugin. // Take this out once WebFrame knows about requests by PPAPI plugins. void (*)(PP_Instance instance)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  // Since WebFrame doesn't know about PPAPI requests, it'll think the page has
  // finished loading even if there are outstanding requests by the plugin.
  // Take this out once WebFrame knows about requests by PPAPI plugins.
  void (*${name})(PP_Instance instance)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10025612 "DidStopLoading"
	public explicit_type "void (*)(PP_Instance instance)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  void (*${name})(PP_Instance instance)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10025740 "SetContentRestriction"
	public explicit_type "// Sets content restriction for a full-page plugin (i.e. can't copy/print). // The value is a bitfield of ContentRestriction enums. void (*)(PP_Instance instance, int restrictions)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  // Sets content restriction for a full-page plugin (i.e. can't copy/print).
  // The value is a bitfield of ContentRestriction enums.
  void (*${name})(PP_Instance instance, int restrictions)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10025868 "HistogramPDFPageCount"
	public explicit_type "// Use UMA so we know average pdf page count. void (*)(PP_Instance instance, int count)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  // Use UMA so we know average pdf page count.
  void (*${name})(PP_Instance instance, int count)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10025996 "UserMetricsRecordAction"
	public explicit_type "// Notifies the browser that the given action has been performed. void (*)(PP_Instance instance, struct PP_Var action)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  // Notifies the browser that the given action has been performed.
  void (*${name})(PP_Instance instance, struct PP_Var action)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10026124 "HasUnsupportedFeature"
	public explicit_type "// Notifies the browser that the PDF has an unsupported feature. void (*)(PP_Instance instance)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  // Notifies the browser that the PDF has an unsupported feature.
  void (*${name})(PP_Instance instance)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10026252 "SaveAs"
	public explicit_type "// Invoke SaveAs... dialog, similar to the right-click or wrench menu. void (*)(PP_Instance instance)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  // Invoke SaveAs... dialog, similar to the right-click or wrench menu.
  void (*${name})(PP_Instance instance)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10026380 "Print"
	public explicit_type "// Invoke Print dialog for plugin. void (*)(PP_Instance instance)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  // Invoke Print dialog for plugin.
  void (*${name})(PP_Instance instance)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10026508 "IsFeatureEnabled"
	public explicit_type "PP_Bool(*)(PP_Instance instance, PP_PDFFeature feature)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  PP_Bool(*${name})(PP_Instance instance, PP_PDFFeature feature)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10026636 "GetResourceImageForScale"
	public explicit_type "// Returns a resource image appropriate for a device with |scale| density. // Returns 0 (NULL resource) if there is no resource at that scale PP_Resource (*)(PP_Instance instance, PP_ResourceImage image_id, float scale)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  // Returns a resource image appropriate for a device with |scale| density.
  // Returns 0 (NULL resource) if there is no resource at that scale
  PP_Resource (*${name})(PP_Instance instance,
                                          PP_ResourceImage image_id,
                                          float scale)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2781324 "PPB_Proxy_Private"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " Exposes functions needed by the out-of-process proxy to call into the
 renderer PPAPI implementation."
      attribute 10026764 "PluginCrashed"
	public explicit_type "// Called when the given plugin process has crashed. void (*)(PP_Module module)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  // Called when the given plugin process has crashed.
  void (*${name})(PP_Module module)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10026892 "GetInstanceForResource"
	public explicit_type "// Returns the instance for the given resource, or 0 on failure. PP_Instance (*)(PP_Resource resource)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  // Returns the instance for the given resource, or 0 on failure.
  PP_Instance (*${name})(PP_Resource resource)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10027020 "SetReserveInstanceIDCallback"
	public explicit_type "// Sets a callback that will be used to make sure that PP_Instance IDs // are unique in the plugin. // // Since the plugin may be shared between several browser processes, we need // to do extra work to make sure that an instance ID is globally unqiue. The // given function will be called and will return true if the given // PP_Instance is OK to use in the plugin. It will then be marked as \"in use\" // On failure (returns false), the host implementation will generate a new // instance ID and try again. void (*)( PP_Module module, PP_Bool (*is_seen)(PP_Module, PP_Instance))"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  // Sets a callback that will be used to make sure that PP_Instance IDs
  // are unique in the plugin.
  //
  // Since the plugin may be shared between several browser processes, we need
  // to do extra work to make sure that an instance ID is globally unqiue. The
  // given function will be called and will return true if the given
  // PP_Instance is OK to use in the plugin. It will then be marked as \"in use\"
  // On failure (returns false), the host implementation will generate a new
  // instance ID and try again.
  void (*${name})(
      PP_Module module,
      PP_Bool (*is_seen)(PP_Module, PP_Instance))${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10027148 "GetURLLoaderBufferedBytes"
	public explicit_type "// Returns the number of bytes synchronously readable out of the URLLoader's // buffer. Returns 0 on failure or if the url loader doesn't have any data // now. int32_t (*)(PP_Resource url_loader)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  // Returns the number of bytes synchronously readable out of the URLLoader's
  // buffer. Returns 0 on failure or if the url loader doesn't have any data
  // now.
  int32_t (*${name})(PP_Resource url_loader)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10027276 "AddRefModule"
	public explicit_type "// Allows adding additional refcounts to the PluginModule that owns the // proxy dispatcher (and all interface proxies). For every AddRef call // there must be a corresponding release call. void (*)(PP_Module module)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  // Allows adding additional refcounts to the PluginModule that owns the
  // proxy dispatcher (and all interface proxies). For every AddRef call
  // there must be a corresponding release call.
  void (*${name})(PP_Module module)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10027404 "ReleaseModule"
	public explicit_type "void (*)(PP_Module module)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  void (*${name})(PP_Module module)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10027532 "IsInModuleDestructor"
	public explicit_type "// Allows asserts to be written for some bad conditions while cleaning up. PP_Bool (*)(PP_Module module)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  // Allows asserts to be written for some bad conditions while cleaning up.
  PP_Bool (*${name})(PP_Module module)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2781452 "PPB_Talk_Private_1_0"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @file
 * This file contains the <code>PPB_Talk</code> interface.
 
*
 * @addtogroup Interfaces
 * @{
 
*
 * Extra interface for Talk."
      attribute 10027660 "Create"
	public explicit_type "/** * Creates a Talk_Private resource. */ PP_Resource (*)(PP_Instance instance)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  /**
   * Creates a Talk_Private resource.
   */
  PP_Resource (*${name})(PP_Instance instance)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10027788 "GetPermission"
	public explicit_type "/** * Displays security UI. * * The callback will be issued with 1 as the result if the user gave * permission, or 0 if the user denied. * * You can only have one call pending. It will return PP_OK_COMPLETIONPENDING * if the request is queued, or PP_ERROR_INPROGRESS if there is already a * request in progress. */ int32_t (*)(PP_Resource talk_resource, struct PP_CompletionCallback callback)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Displays security UI.
   *
   * The callback will be issued with 1 as the result if the user gave
   * permission, or 0 if the user denied.
   *
   * You can only have one call pending. It will return PP_OK_COMPLETIONPENDING
   * if the request is queued, or PP_ERROR_INPROGRESS if there is already a
   * request in progress.
   */
  int32_t (*${name})(PP_Resource talk_resource,
                           struct PP_CompletionCallback callback)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2781580 "PPB_Talk_Private"
      visibility package stereotype "typedef" base_type class_ref 2781452 // PPB_Talk_Private_1_0
      cpp_decl "${comment}typedef struct ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 5214988 // <dependency>
	relation 5214860 -_->
	  a default
	    cpp default "#include in source"
	    classrelation_ref 5214988 // <dependency>
	  b parent class_ref 2781452 // PPB_Talk_Private_1_0
      end
    end

    class 2781708 "PPB_TCPServerSocket_Private_0_1"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @file
 * This file defines the <code>PPB_TCPServerSocket_Private</code> interface.
 
*
 * @addtogroup Interfaces
 * @{
 
*
 * The <code>PPB_TCPServerSocket_Private</code> interface provides TCP
 * server socket operations."
      attribute 10027916 "Create"
	public explicit_type "/** * Allocates a TCP server socket resource. */ PP_Resource (*)(PP_Instance instance)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  /**
   * Allocates a TCP server socket resource.
   */
  PP_Resource (*${name})(PP_Instance instance)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10028044 "IsTCPServerSocket"
	public explicit_type "/** * Determines if a given resource is TCP server socket. */ PP_Bool (*)(PP_Resource resource)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Determines if a given resource is TCP server socket.
   */
  PP_Bool (*${name})(PP_Resource resource)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10028172 "Listen"
	public explicit_type "/** * Binds |tcp_server_socket| to the address given by |addr| and * starts listening. The |backlog| argument defines the maximum * length to which the queue of pending connections may * grow. |callback| is invoked when |tcp_server_socket| is ready to * accept incoming connections or in the case of failure. Returns * PP_ERROR_NOSPACE if socket can't be initialized, or * PP_ERROR_FAILED in the case of Listen failure. Otherwise, returns * PP_OK. */ int32_t (*)(PP_Resource tcp_server_socket, const struct PP_NetAddress_Private* addr, int32_t backlog, struct PP_CompletionCallback callback)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Binds |tcp_server_socket| to the address given by |addr| and
   * starts listening.  The |backlog| argument defines the maximum
   * length to which the queue of pending connections may
   * grow. |callback| is invoked when |tcp_server_socket| is ready to
   * accept incoming connections or in the case of failure. Returns
   * PP_ERROR_NOSPACE if socket can't be initialized, or
   * PP_ERROR_FAILED in the case of Listen failure. Otherwise, returns
   * PP_OK.
   */
  int32_t (*${name})(PP_Resource tcp_server_socket,
                    const struct PP_NetAddress_Private* addr,
                    int32_t backlog,
                    struct PP_CompletionCallback callback)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10028300 "Accept"
	public explicit_type "/** * Accepts single connection, creates instance of * PPB_TCPSocket_Private and stores reference to it in * |tcp_socket|. |callback| is invoked when connection is accepted * or in the case of failure. This method can be called only after * succesfull Listen call on |tcp_server_socket|. */ int32_t (*)(PP_Resource tcp_server_socket, PP_Resource* tcp_socket, struct PP_CompletionCallback callback)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Accepts single connection, creates instance of
   * PPB_TCPSocket_Private and stores reference to it in
   * |tcp_socket|. |callback| is invoked when connection is accepted
   * or in the case of failure. This method can be called only after
   * succesfull Listen call on |tcp_server_socket|.
   */
  int32_t (*${name})(PP_Resource tcp_server_socket,
                    PP_Resource* tcp_socket,
                    struct PP_CompletionCallback callback)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10028428 "StopListening"
	public explicit_type "/** * Cancels all pending callbacks reporting PP_ERROR_ABORTED and * closes the socket. Note: this method is implicitly called when * server socket is destroyed. */ void (*)(PP_Resource tcp_server_socket)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Cancels all pending callbacks reporting PP_ERROR_ABORTED and
   * closes the socket. Note: this method is implicitly called when
   * server socket is destroyed.
   */
  void (*${name})(PP_Resource tcp_server_socket)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2781836 "PPB_TCPServerSocket_Private"
      visibility package stereotype "typedef" base_type class_ref 2781708 // PPB_TCPServerSocket_Private_0_1
      cpp_decl "${comment}typedef struct ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 5215116 // <dependency>
	relation 5214988 -_->
	  a default
	    cpp default "#include in source"
	    classrelation_ref 5215116 // <dependency>
	  b parent class_ref 2781708 // PPB_TCPServerSocket_Private_0_1
      end
    end

    class 2781964 "PP_TCPSocketOption_Private"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}
};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @file
 * This file defines the <code>PPB_TCPSocket_Private</code> interface.
 
*
 * @addtogroup Enums
 * @{"
      attribute 10028556 "PP_TCPSOCKETOPTION_INVALID"
	public type class_ref 2781964 // PP_TCPSocketOption_Private
	init_value " 0"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10028684 "PP_TCPSOCKETOPTION_NO_DELAY"
	public type class_ref 2781964 // PP_TCPSocketOption_Private
	init_value " 1
"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2782092 "PPB_TCPSocket_Private_0_5"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @}
 
*
 * @addtogroup Interfaces
 * @{
 
*
 * The <code>PPB_TCPSocket_Private</code> interface provides TCP socket
 * operations."
      attribute 10028812 "Create"
	public explicit_type "/** * Allocates a TCP socket resource. */ PP_Resource (*)(PP_Instance instance)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  /**
   * Allocates a TCP socket resource.
   */
  PP_Resource (*${name})(PP_Instance instance)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10028940 "IsTCPSocket"
	public explicit_type "/** * Determines if a given resource is TCP socket. */ PP_Bool (*)(PP_Resource resource)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Determines if a given resource is TCP socket.
   */
  PP_Bool (*${name})(PP_Resource resource)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10029068 "Connect"
	public explicit_type "/** * Connects to a TCP port given as a host-port pair. * When a proxy server is used, |host| and |port| refer to the proxy server * instead of the destination server. */ int32_t (*)(PP_Resource tcp_socket, const char* host, uint16_t port, struct PP_CompletionCallback callback)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Connects to a TCP port given as a host-port pair.
   * When a proxy server is used, |host| and |port| refer to the proxy server
   * instead of the destination server.
   */
  int32_t (*${name})(PP_Resource tcp_socket,
                     const char* host,
                     uint16_t port,
                     struct PP_CompletionCallback callback)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10029196 "ConnectWithNetAddress"
	public explicit_type "/** * Same as Connect(), but connecting to the address given by |addr|. A typical * use-case would be for reconnections. */ int32_t (*)(PP_Resource tcp_socket, const struct PP_NetAddress_Private* addr, struct PP_CompletionCallback callback)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Same as Connect(), but connecting to the address given by |addr|. A typical
   * use-case would be for reconnections.
   */
  int32_t (*${name})(PP_Resource tcp_socket,
                                   const struct PP_NetAddress_Private* addr,
                                   struct PP_CompletionCallback callback)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10029324 "GetLocalAddress"
	public explicit_type "/** * Gets the local address of the socket, if it has been connected. * Returns PP_TRUE on success. */ PP_Bool (*)(PP_Resource tcp_socket, struct PP_NetAddress_Private* local_addr)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Gets the local address of the socket, if it has been connected.
   * Returns PP_TRUE on success.
   */
  PP_Bool (*${name})(PP_Resource tcp_socket,
                             struct PP_NetAddress_Private* local_addr)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10029452 "GetRemoteAddress"
	public explicit_type "/** * Gets the remote address of the socket, if it has been connected. * Returns PP_TRUE on success. */ PP_Bool (*)(PP_Resource tcp_socket, struct PP_NetAddress_Private* remote_addr)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Gets the remote address of the socket, if it has been connected.
   * Returns PP_TRUE on success.
   */
  PP_Bool (*${name})(PP_Resource tcp_socket,
                              struct PP_NetAddress_Private* remote_addr)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10029580 "SSLHandshake"
	public explicit_type "/** * Does SSL handshake and moves to sending and receiving encrypted data. The * socket must have been successfully connected. |server_name| will be * compared with the name(s) in the server's certificate during the SSL * handshake. |server_port| is only used to identify an SSL server in the SSL * session cache. * When a proxy server is used, |server_name| and |server_port| refer to the * destination server. * If the socket is not connected, or there are pending read/write requests, * SSLHandshake() will fail without starting a handshake. Otherwise, any * failure during the handshake process will cause the socket to be * disconnected. */ int32_t (*)(PP_Resource tcp_socket, const char* server_name, uint16_t server_port, struct PP_CompletionCallback callback)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Does SSL handshake and moves to sending and receiving encrypted data. The
   * socket must have been successfully connected. |server_name| will be
   * compared with the name(s) in the server's certificate during the SSL
   * handshake. |server_port| is only used to identify an SSL server in the SSL
   * session cache.
   * When a proxy server is used, |server_name| and |server_port| refer to the
   * destination server.
   * If the socket is not connected, or there are pending read/write requests,
   * SSLHandshake() will fail without starting a handshake. Otherwise, any
   * failure during the handshake process will cause the socket to be
   * disconnected.
   */
  int32_t (*${name})(PP_Resource tcp_socket,
                          const char* server_name,
                          uint16_t server_port,
                          struct PP_CompletionCallback callback)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10029708 "GetServerCertificate"
	public explicit_type "/** * Returns the server's <code>PPB_X509Certificate_Private</code> for a socket * connection if an SSL connection has been established using * <code>SSLHandshake</code>. If no SSL connection has been established, a * null resource is returned. */ PP_Resource (*)(PP_Resource tcp_socket)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Returns the server's <code>PPB_X509Certificate_Private</code> for a socket
   * connection if an SSL connection has been established using
   * <code>SSLHandshake</code>. If no SSL connection has been established, a
   * null resource is returned.
   */
  PP_Resource (*${name})(PP_Resource tcp_socket)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10029836 "AddChainBuildingCertificate"
	public explicit_type "/** * NOTE: This function is not implemented and will return * <code>PP_FALSE</code>. * Adds a trusted/untrusted chain building certificate to be used for this * connection. The <code>certificate</code> must be a * <code>PPB_X509Certificate_Private<code>. <code>PP_TRUE</code> is returned * upon success. */ PP_Bool (*)(PP_Resource tcp_socket, PP_Resource certificate, PP_Bool is_trusted)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * NOTE: This function is not implemented and will return
   * <code>PP_FALSE</code>.
   * Adds a trusted/untrusted chain building certificate to be used for this
   * connection. The <code>certificate</code> must be a
   * <code>PPB_X509Certificate_Private<code>. <code>PP_TRUE</code> is returned
   * upon success.
   */
  PP_Bool (*${name})(PP_Resource tcp_socket,
                                         PP_Resource certificate,
                                         PP_Bool is_trusted)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10029964 "Read"
	public explicit_type "/** * Reads data from the socket. The size of |buffer| must be at least as large * as |bytes_to_read|. May perform a partial read. Returns the number of bytes * read or an error code. If the return value is 0, then it indicates that * end-of-file was reached. * This method won't return more than 1 megabyte, so if |bytes_to_read| * exceeds 1 megabyte, it will always perform a partial read. * Multiple outstanding read requests are not supported. */ int32_t (*)(PP_Resource tcp_socket, char* buffer, int32_t bytes_to_read, struct PP_CompletionCallback callback)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Reads data from the socket. The size of |buffer| must be at least as large
   * as |bytes_to_read|. May perform a partial read. Returns the number of bytes
   * read or an error code. If the return value is 0, then it indicates that
   * end-of-file was reached.
   * This method won't return more than 1 megabyte, so if |bytes_to_read|
   * exceeds 1 megabyte, it will always perform a partial read.
   * Multiple outstanding read requests are not supported.
   */
  int32_t (*${name})(PP_Resource tcp_socket,
                  char* buffer,
                  int32_t bytes_to_read,
                  struct PP_CompletionCallback callback)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10030092 "Write"
	public explicit_type "/** * Writes data to the socket. May perform a partial write. Returns the number * of bytes written or an error code. * This method won't write more than 1 megabyte, so if |bytes_to_write| * exceeds 1 megabyte, it will always perform a partial write. * Multiple outstanding write requests are not supported. */ int32_t (*)(PP_Resource tcp_socket, const char* buffer, int32_t bytes_to_write, struct PP_CompletionCallback callback)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Writes data to the socket. May perform a partial write. Returns the number
   * of bytes written or an error code.
   * This method won't write more than 1 megabyte, so if |bytes_to_write|
   * exceeds 1 megabyte, it will always perform a partial write.
   * Multiple outstanding write requests are not supported.
   */
  int32_t (*${name})(PP_Resource tcp_socket,
                   const char* buffer,
                   int32_t bytes_to_write,
                   struct PP_CompletionCallback callback)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10030220 "Disconnect"
	public explicit_type "/** * Cancels any IO that may be pending, and disconnects the socket. Any pending * callbacks will still run, reporting PP_Error_Aborted if pending IO was * interrupted. It is NOT valid to call Connect() again after a call to this * method. Note: If the socket is destroyed when it is still connected, then * it will be implicitly disconnected, so you are not required to call this * method. */ void (*)(PP_Resource tcp_socket)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Cancels any IO that may be pending, and disconnects the socket. Any pending
   * callbacks will still run, reporting PP_Error_Aborted if pending IO was
   * interrupted. It is NOT valid to call Connect() again after a call to this
   * method. Note: If the socket is destroyed when it is still connected, then
   * it will be implicitly disconnected, so you are not required to call this
   * method.
   */
  void (*${name})(PP_Resource tcp_socket)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10030348 "SetOption"
	public explicit_type "/** * Sets an option on |tcp_socket|. Supported |name| and |value| parameters * are as described for PP_TCPSocketOption_Private. |callback| will be * invoked with PP_OK if setting the option succeeds, or an error code * otherwise. The socket must be connection before SetOption is called. */ int32_t (*)(PP_Resource tcp_socket, PP_TCPSocketOption_Private name, struct PP_Var value, struct PP_CompletionCallback callback)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Sets an option on |tcp_socket|.  Supported |name| and |value| parameters
   * are as described for PP_TCPSocketOption_Private.  |callback| will be
   * invoked with PP_OK if setting the option succeeds, or an error code
   * otherwise. The socket must be connection before SetOption is called.
   */
  int32_t (*${name})(PP_Resource tcp_socket,
                       PP_TCPSocketOption_Private name,
                       struct PP_Var value,
                       struct PP_CompletionCallback callback)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2782220 "PPB_TCPSocket_Private"
      visibility package stereotype "typedef" base_type class_ref 2782092 // PPB_TCPSocket_Private_0_5
      cpp_decl "${comment}typedef struct ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 5215244 // <dependency>
	relation 5215116 -_->
	  a default
	    cpp default "#include in source"
	    classrelation_ref 5215244 // <dependency>
	  b parent class_ref 2782092 // PPB_TCPSocket_Private_0_5
      end
    end

    class 2782348 "PPB_TCPSocket_Private_0_3"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      attribute 10030476 "Create"
	public explicit_type "PP_Resource (*)(PP_Instance instance)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  PP_Resource (*${name})(PP_Instance instance)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10030604 "IsTCPSocket"
	public explicit_type "PP_Bool (*)(PP_Resource resource)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  PP_Bool (*${name})(PP_Resource resource)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10030732 "Connect"
	public explicit_type "int32_t (*)(PP_Resource tcp_socket, const char* host, uint16_t port, struct PP_CompletionCallback callback)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  int32_t (*${name})(PP_Resource tcp_socket,
                     const char* host,
                     uint16_t port,
                     struct PP_CompletionCallback callback)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10030860 "ConnectWithNetAddress"
	public explicit_type "int32_t (*)(PP_Resource tcp_socket, const struct PP_NetAddress_Private* addr, struct PP_CompletionCallback callback)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  int32_t (*${name})(PP_Resource tcp_socket,
                                   const struct PP_NetAddress_Private* addr,
                                   struct PP_CompletionCallback callback)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10030988 "GetLocalAddress"
	public explicit_type "PP_Bool (*)(PP_Resource tcp_socket, struct PP_NetAddress_Private* local_addr)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  PP_Bool (*${name})(PP_Resource tcp_socket,
                             struct PP_NetAddress_Private* local_addr)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10031116 "GetRemoteAddress"
	public explicit_type "PP_Bool (*)(PP_Resource tcp_socket, struct PP_NetAddress_Private* remote_addr)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  PP_Bool (*${name})(PP_Resource tcp_socket,
                              struct PP_NetAddress_Private* remote_addr)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10031244 "SSLHandshake"
	public explicit_type "int32_t (*)(PP_Resource tcp_socket, const char* server_name, uint16_t server_port, struct PP_CompletionCallback callback)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  int32_t (*${name})(PP_Resource tcp_socket,
                          const char* server_name,
                          uint16_t server_port,
                          struct PP_CompletionCallback callback)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10031372 "Read"
	public explicit_type "int32_t (*)(PP_Resource tcp_socket, char* buffer, int32_t bytes_to_read, struct PP_CompletionCallback callback)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  int32_t (*${name})(PP_Resource tcp_socket,
                  char* buffer,
                  int32_t bytes_to_read,
                  struct PP_CompletionCallback callback)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10031500 "Write"
	public explicit_type "int32_t (*)(PP_Resource tcp_socket, const char* buffer, int32_t bytes_to_write, struct PP_CompletionCallback callback)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  int32_t (*${name})(PP_Resource tcp_socket,
                   const char* buffer,
                   int32_t bytes_to_write,
                   struct PP_CompletionCallback callback)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10031628 "Disconnect"
	public explicit_type "void (*)(PP_Resource tcp_socket)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  void (*${name})(PP_Resource tcp_socket)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2782476 "PPB_TCPSocket_Private_0_4"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      attribute 10031756 "Create"
	public explicit_type "PP_Resource (*)(PP_Instance instance)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  PP_Resource (*${name})(PP_Instance instance)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10031884 "IsTCPSocket"
	public explicit_type "PP_Bool (*)(PP_Resource resource)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  PP_Bool (*${name})(PP_Resource resource)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10032012 "Connect"
	public explicit_type "int32_t (*)(PP_Resource tcp_socket, const char* host, uint16_t port, struct PP_CompletionCallback callback)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  int32_t (*${name})(PP_Resource tcp_socket,
                     const char* host,
                     uint16_t port,
                     struct PP_CompletionCallback callback)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10032140 "ConnectWithNetAddress"
	public explicit_type "int32_t (*)(PP_Resource tcp_socket, const struct PP_NetAddress_Private* addr, struct PP_CompletionCallback callback)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  int32_t (*${name})(PP_Resource tcp_socket,
                                   const struct PP_NetAddress_Private* addr,
                                   struct PP_CompletionCallback callback)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10032268 "GetLocalAddress"
	public explicit_type "PP_Bool (*)(PP_Resource tcp_socket, struct PP_NetAddress_Private* local_addr)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  PP_Bool (*${name})(PP_Resource tcp_socket,
                             struct PP_NetAddress_Private* local_addr)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10032396 "GetRemoteAddress"
	public explicit_type "PP_Bool (*)(PP_Resource tcp_socket, struct PP_NetAddress_Private* remote_addr)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  PP_Bool (*${name})(PP_Resource tcp_socket,
                              struct PP_NetAddress_Private* remote_addr)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10032524 "SSLHandshake"
	public explicit_type "int32_t (*)(PP_Resource tcp_socket, const char* server_name, uint16_t server_port, struct PP_CompletionCallback callback)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  int32_t (*${name})(PP_Resource tcp_socket,
                          const char* server_name,
                          uint16_t server_port,
                          struct PP_CompletionCallback callback)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10032652 "GetServerCertificate"
	public explicit_type "PP_Resource (*)(PP_Resource tcp_socket)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  PP_Resource (*${name})(PP_Resource tcp_socket)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10032780 "AddChainBuildingCertificate"
	public explicit_type "PP_Bool (*)(PP_Resource tcp_socket, PP_Resource certificate, PP_Bool is_trusted)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  PP_Bool (*${name})(PP_Resource tcp_socket,
                                         PP_Resource certificate,
                                         PP_Bool is_trusted)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10032908 "Read"
	public explicit_type "int32_t (*)(PP_Resource tcp_socket, char* buffer, int32_t bytes_to_read, struct PP_CompletionCallback callback)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  int32_t (*${name})(PP_Resource tcp_socket,
                  char* buffer,
                  int32_t bytes_to_read,
                  struct PP_CompletionCallback callback)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10033036 "Write"
	public explicit_type "int32_t (*)(PP_Resource tcp_socket, const char* buffer, int32_t bytes_to_write, struct PP_CompletionCallback callback)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  int32_t (*${name})(PP_Resource tcp_socket,
                   const char* buffer,
                   int32_t bytes_to_write,
                   struct PP_CompletionCallback callback)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10033164 "Disconnect"
	public explicit_type "void (*)(PP_Resource tcp_socket)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  void (*${name})(PP_Resource tcp_socket)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2782604 "PP_UDPSocketFeature_Private"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}
};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @file
 * This file defines the <code>PPB_UDPSocket_Private</code> interface.
 
*
 * @addtogroup Enums
 * @{"
      attribute 10033292 "PP_UDPSOCKETFEATURE_ADDRESS_REUSE"
	public type class_ref 2782604 // PP_UDPSocketFeature_Private
	init_value " 0"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10033420 "PP_UDPSOCKETFEATURE_BROADCAST"
	public type class_ref 2782604 // PP_UDPSocketFeature_Private
	init_value " 1"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10033548 "PP_UDPSOCKETFEATURE_COUNT"
	public type class_ref 2782604 // PP_UDPSocketFeature_Private
	init_value " 2
"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2782732 "PPB_UDPSocket_Private_0_4"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @}
 
*
 * @addtogroup Interfaces
 * @{"
      attribute 10033676 "Create"
	public explicit_type "/** * Creates a UDP socket resource. */ PP_Resource (*)(PP_Instance instance_id)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  /**
   * Creates a UDP socket resource.
   */
  PP_Resource (*${name})(PP_Instance instance_id)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10033804 "IsUDPSocket"
	public explicit_type "/** * Determines if a given resource is a UDP socket. */ PP_Bool (*)(PP_Resource resource_id)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Determines if a given resource is a UDP socket.
   */
  PP_Bool (*${name})(PP_Resource resource_id)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10033932 "SetSocketFeature"
	public explicit_type "/** * Sets a socket feature to |udp_socket|. Should be called before * Bind(). Possible values for |name|, |value| and |value|'s type * are described in PP_UDPSocketFeature_Private description. If no * error occurs, returns PP_OK. Otherwise, returns * PP_ERROR_BADRESOURCE (if bad |udp_socket| provided), * PP_ERROR_BADARGUMENT (if bad name/value/value's type provided) * or PP_ERROR_FAILED in the case of internal errors. */ int32_t (*)(PP_Resource udp_socket, PP_UDPSocketFeature_Private name, struct PP_Var value)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Sets a socket feature to |udp_socket|. Should be called before
   * Bind(). Possible values for |name|, |value| and |value|'s type
   * are described in PP_UDPSocketFeature_Private description. If no
   * error occurs, returns PP_OK. Otherwise, returns
   * PP_ERROR_BADRESOURCE (if bad |udp_socket| provided),
   * PP_ERROR_BADARGUMENT (if bad name/value/value's type provided)
   * or PP_ERROR_FAILED in the case of internal errors.
   */
  int32_t (*${name})(PP_Resource udp_socket,
                              PP_UDPSocketFeature_Private name,
                              struct PP_Var value)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10034060 "Bind"
	public explicit_type "/* Creates a socket and binds to the address given by |addr|. */ int32_t (*)(PP_Resource udp_socket, const struct PP_NetAddress_Private* addr, struct PP_CompletionCallback callback)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /* Creates a socket and binds to the address given by |addr|. */
  int32_t (*${name})(PP_Resource udp_socket,
                  const struct PP_NetAddress_Private* addr,
                  struct PP_CompletionCallback callback)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10034188 "GetBoundAddress"
	public explicit_type "/* Returns the address that the socket has bound to. A successful * call to Bind must be called first. Returns PP_FALSE if Bind * fails, or if Close has been called. */ PP_Bool (*)(PP_Resource udp_socket, struct PP_NetAddress_Private* addr)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /* Returns the address that the socket has bound to.  A successful
   * call to Bind must be called first. Returns PP_FALSE if Bind
   * fails, or if Close has been called.
   */
  PP_Bool (*${name})(PP_Resource udp_socket,
                             struct PP_NetAddress_Private* addr)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10034316 "RecvFrom"
	public explicit_type "/* Performs a non-blocking recvfrom call on socket. * Bind must be called first. |callback| is invoked when recvfrom * reads data. You must call GetRecvFromAddress to recover the * address the data was retrieved from. */ int32_t (*)(PP_Resource udp_socket, char* buffer, int32_t num_bytes, struct PP_CompletionCallback callback)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /* Performs a non-blocking recvfrom call on socket.
   * Bind must be called first. |callback| is invoked when recvfrom
   * reads data.  You must call GetRecvFromAddress to recover the
   * address the data was retrieved from.
   */
  int32_t (*${name})(PP_Resource udp_socket,
                      char* buffer,
                      int32_t num_bytes,
                      struct PP_CompletionCallback callback)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10034444 "GetRecvFromAddress"
	public explicit_type "/* Upon successful completion of RecvFrom, the address that the data * was received from is stored in |addr|. */ PP_Bool (*)(PP_Resource udp_socket, struct PP_NetAddress_Private* addr)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /* Upon successful completion of RecvFrom, the address that the data
   * was received from is stored in |addr|.
   */
  PP_Bool (*${name})(PP_Resource udp_socket,
                                struct PP_NetAddress_Private* addr)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10034572 "SendTo"
	public explicit_type "/* Performs a non-blocking sendto call on the socket created and * bound(has already called Bind). The callback |callback| is * invoked when sendto completes. */ int32_t (*)(PP_Resource udp_socket, const char* buffer, int32_t num_bytes, const struct PP_NetAddress_Private* addr, struct PP_CompletionCallback callback)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /* Performs a non-blocking sendto call on the socket created and
   * bound(has already called Bind).  The callback |callback| is
   * invoked when sendto completes.
   */
  int32_t (*${name})(PP_Resource udp_socket,
                    const char* buffer,
                    int32_t num_bytes,
                    const struct PP_NetAddress_Private* addr,
                    struct PP_CompletionCallback callback)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10034700 "Close"
	public explicit_type "/* Cancels all pending reads and writes, and closes the socket. */ void (*)(PP_Resource udp_socket)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /* Cancels all pending reads and writes, and closes the socket. */
  void (*${name})(PP_Resource udp_socket)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2782860 "PPB_UDPSocket_Private"
      visibility package stereotype "typedef" base_type class_ref 2782732 // PPB_UDPSocket_Private_0_4
      cpp_decl "${comment}typedef struct ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 5215372 // <dependency>
	relation 5215244 -_->
	  a default
	    cpp default "#include in source"
	    classrelation_ref 5215372 // <dependency>
	  b parent class_ref 2782732 // PPB_UDPSocket_Private_0_4
      end
    end

    class 2782988 "PPB_UDPSocket_Private_0_2"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      attribute 10034828 "Create"
	public explicit_type "PP_Resource (*)(PP_Instance instance_id)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  PP_Resource (*${name})(PP_Instance instance_id)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10034956 "IsUDPSocket"
	public explicit_type "PP_Bool (*)(PP_Resource resource_id)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  PP_Bool (*${name})(PP_Resource resource_id)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10035084 "Bind"
	public explicit_type "int32_t (*)(PP_Resource udp_socket, const struct PP_NetAddress_Private* addr, struct PP_CompletionCallback callback)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  int32_t (*${name})(PP_Resource udp_socket,
                  const struct PP_NetAddress_Private* addr,
                  struct PP_CompletionCallback callback)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10035212 "RecvFrom"
	public explicit_type "int32_t (*)(PP_Resource udp_socket, char* buffer, int32_t num_bytes, struct PP_CompletionCallback callback)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  int32_t (*${name})(PP_Resource udp_socket,
                      char* buffer,
                      int32_t num_bytes,
                      struct PP_CompletionCallback callback)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10035340 "GetRecvFromAddress"
	public explicit_type "PP_Bool (*)(PP_Resource udp_socket, struct PP_NetAddress_Private* addr)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  PP_Bool (*${name})(PP_Resource udp_socket,
                                struct PP_NetAddress_Private* addr)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10035468 "SendTo"
	public explicit_type "int32_t (*)(PP_Resource udp_socket, const char* buffer, int32_t num_bytes, const struct PP_NetAddress_Private* addr, struct PP_CompletionCallback callback)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  int32_t (*${name})(PP_Resource udp_socket,
                    const char* buffer,
                    int32_t num_bytes,
                    const struct PP_NetAddress_Private* addr,
                    struct PP_CompletionCallback callback)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10035596 "Close"
	public explicit_type "void (*)(PP_Resource udp_socket)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  void (*${name})(PP_Resource udp_socket)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2783116 "PPB_UDPSocket_Private_0_3"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      attribute 10035724 "Create"
	public explicit_type "PP_Resource (*)(PP_Instance instance_id)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  PP_Resource (*${name})(PP_Instance instance_id)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10035852 "IsUDPSocket"
	public explicit_type "PP_Bool (*)(PP_Resource resource_id)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  PP_Bool (*${name})(PP_Resource resource_id)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10035980 "Bind"
	public explicit_type "int32_t (*)(PP_Resource udp_socket, const struct PP_NetAddress_Private* addr, struct PP_CompletionCallback callback)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  int32_t (*${name})(PP_Resource udp_socket,
                  const struct PP_NetAddress_Private* addr,
                  struct PP_CompletionCallback callback)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10036108 "GetBoundAddress"
	public explicit_type "PP_Bool (*)(PP_Resource udp_socket, struct PP_NetAddress_Private* addr)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  PP_Bool (*${name})(PP_Resource udp_socket,
                             struct PP_NetAddress_Private* addr)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10036236 "RecvFrom"
	public explicit_type "int32_t (*)(PP_Resource udp_socket, char* buffer, int32_t num_bytes, struct PP_CompletionCallback callback)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  int32_t (*${name})(PP_Resource udp_socket,
                      char* buffer,
                      int32_t num_bytes,
                      struct PP_CompletionCallback callback)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10036364 "GetRecvFromAddress"
	public explicit_type "PP_Bool (*)(PP_Resource udp_socket, struct PP_NetAddress_Private* addr)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  PP_Bool (*${name})(PP_Resource udp_socket,
                                struct PP_NetAddress_Private* addr)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10036492 "SendTo"
	public explicit_type "int32_t (*)(PP_Resource udp_socket, const char* buffer, int32_t num_bytes, const struct PP_NetAddress_Private* addr, struct PP_CompletionCallback callback)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  int32_t (*${name})(PP_Resource udp_socket,
                    const char* buffer,
                    int32_t num_bytes,
                    const struct PP_NetAddress_Private* addr,
                    struct PP_CompletionCallback callback)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10036620 "Close"
	public explicit_type "void (*)(PP_Resource udp_socket)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  void (*${name})(PP_Resource udp_socket)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2783244 "PPB_UMA_Private_0_1"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @file
 * This file defines the <code>PPB_UMA_Private</code> interface.
 
*
 * @addtogroup Interfaces
 * @{
 
*
 * Contains functions for plugins to report UMA usage stats."
      attribute 10036748 "HistogramCustomTimes"
	public explicit_type "/** * HistogramCustomTimes is a pointer to a function which records a time * sample given in milliseconds in the histogram given by |name|, possibly * creating the histogram if it does not exist. */ void (*)(struct PP_Var name, int64_t sample, int64_t min, int64_t max, uint32_t bucket_count)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  /**
   * HistogramCustomTimes is a pointer to a function which records a time
   * sample given in milliseconds in the histogram given by |name|, possibly
   * creating the histogram if it does not exist.
   */
  void (*${name})(struct PP_Var name,
                               int64_t sample,
                               int64_t min,
                               int64_t max,
                               uint32_t bucket_count)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10036876 "HistogramCustomCounts"
	public explicit_type "/** * HistogramCustomCounts is a pointer to a function which records a sample * in the histogram given by |name|, possibly creating the histogram if it * does not exist. */ void (*)(struct PP_Var name, int32_t sample, int32_t min, int32_t max, uint32_t bucket_count)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * HistogramCustomCounts is a pointer to a function which records a sample
   * in the histogram given by |name|, possibly creating the histogram if it
   * does not exist.
   */
  void (*${name})(struct PP_Var name,
                                int32_t sample,
                                int32_t min,
                                int32_t max,
                                uint32_t bucket_count)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10037004 "HistogramEnumeration"
	public explicit_type "/** * HistogramEnumeration is a pointer to a function which records a sample * in the histogram given by |name|, possibly creating the histogram if it * does not exist. The sample represents a value in an enumeration bounded * by |boundary_value|, that is, sample < boundary_value always. */ void (*)(struct PP_Var name, int32_t sample, int32_t boundary_value)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * HistogramEnumeration is a pointer to a function which records a sample
   * in the histogram given by |name|, possibly creating the histogram if it
   * does not exist.  The sample represents a value in an enumeration bounded
   * by |boundary_value|, that is, sample < boundary_value always.
   */
  void (*${name})(struct PP_Var name,
                               int32_t sample,
                               int32_t boundary_value)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2783372 "PPB_UMA_Private"
      visibility package stereotype "typedef" base_type class_ref 2783244 // PPB_UMA_Private_0_1
      cpp_decl "${comment}typedef struct ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 5215500 // <dependency>
	relation 5215372 -_->
	  a default
	    cpp default "#include in source"
	    classrelation_ref 5215500 // <dependency>
	  b parent class_ref 2783244 // PPB_UMA_Private_0_1
      end
    end

    class 2783500 "PP_X509Certificate_Private_Field"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}
};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @file
 * This file defines the <code>PPB_X509Certificate_Private</code> interface for
 * an X509 certificate.
 
*
 * @addtogroup Enums
 * @{
 
*
 * This enumeration corresponds to fields of an X509 certificate. Refer to
 * <a href=\"http://www.ietf.org/rfc/rfc5280.txt>RFC 5280</a> for further
 * documentation about particular fields."
      attribute 10037132 "PP_X509CERTIFICATE_PRIVATE_ISSUER_COMMON_NAME"
	public type class_ref 2783500 // PP_X509Certificate_Private_Field
	init_value " 0"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10037260 "PP_X509CERTIFICATE_PRIVATE_ISSUER_LOCALITY_NAME"
	public type class_ref 2783500 // PP_X509Certificate_Private_Field
	init_value " 1"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10037388 "PP_X509CERTIFICATE_PRIVATE_ISSUER_STATE_OR_PROVINCE_NAME"
	public type class_ref 2783500 // PP_X509Certificate_Private_Field
	init_value " 2"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10037516 "PP_X509CERTIFICATE_PRIVATE_ISSUER_COUNTRY_NAME"
	public type class_ref 2783500 // PP_X509Certificate_Private_Field
	init_value " 3"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10037644 "PP_X509CERTIFICATE_PRIVATE_ISSUER_ORGANIZATION_NAME"
	public type class_ref 2783500 // PP_X509Certificate_Private_Field
	init_value " 4"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10037772 "PP_X509CERTIFICATE_PRIVATE_ISSUER_ORGANIZATION_UNIT_NAME"
	public type class_ref 2783500 // PP_X509Certificate_Private_Field
	init_value " 5"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10037900 "PP_X509CERTIFICATE_PRIVATE_ISSUER_UNIQUE_ID"
	public type class_ref 2783500 // PP_X509Certificate_Private_Field
	init_value " 6"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10038028 "PP_X509CERTIFICATE_PRIVATE_SUBJECT_COMMON_NAME"
	public type class_ref 2783500 // PP_X509Certificate_Private_Field
	init_value " 7"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10038156 "PP_X509CERTIFICATE_PRIVATE_SUBJECT_LOCALITY_NAME"
	public type class_ref 2783500 // PP_X509Certificate_Private_Field
	init_value " 8"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10038284 "PP_X509CERTIFICATE_PRIVATE_SUBJECT_STATE_OR_PROVINCE_NAME"
	public type class_ref 2783500 // PP_X509Certificate_Private_Field
	init_value " 9"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10038412 "PP_X509CERTIFICATE_PRIVATE_SUBJECT_COUNTRY_NAME"
	public type class_ref 2783500 // PP_X509Certificate_Private_Field
	init_value " 10"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10038540 "PP_X509CERTIFICATE_PRIVATE_SUBJECT_ORGANIZATION_NAME"
	public type class_ref 2783500 // PP_X509Certificate_Private_Field
	init_value " 11"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10038668 "PP_X509CERTIFICATE_PRIVATE_SUBJECT_ORGANIZATION_UNIT_NAME"
	public type class_ref 2783500 // PP_X509Certificate_Private_Field
	init_value " 12"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10038796 "PP_X509CERTIFICATE_PRIVATE_SUBJECT_UNIQUE_ID"
	public type class_ref 2783500 // PP_X509Certificate_Private_Field
	init_value " 13"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10038924 "PP_X509CERTIFICATE_PRIVATE_VERSION"
	public type class_ref 2783500 // PP_X509Certificate_Private_Field
	init_value " 14"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10039052 "PP_X509CERTIFICATE_PRIVATE_SERIAL_NUMBER"
	public type class_ref 2783500 // PP_X509Certificate_Private_Field
	init_value " 15"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10039180 "PP_X509CERTIFICATE_PRIVATE_SIGNATURE_ALGORITHM_OID"
	public type class_ref 2783500 // PP_X509Certificate_Private_Field
	init_value " 16"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10039308 "PP_X509CERTIFICATE_PRIVATE_SIGNATURE_ALGORITHM_PARAMATERS_RAW"
	public type class_ref 2783500 // PP_X509Certificate_Private_Field
	init_value " 17"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10039436 "PP_X509CERTIFICATE_PRIVATE_VALIDITY_NOT_BEFORE"
	public type class_ref 2783500 // PP_X509Certificate_Private_Field
	init_value " 18"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10039564 "PP_X509CERTIFICATE_PRIVATE_VALIDITY_NOT_AFTER"
	public type class_ref 2783500 // PP_X509Certificate_Private_Field
	init_value " 19"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10039692 "PP_X509CERTIFICATE_PRIVATE_SUBJECT_PUBLIC_KEY_ALGORITHM_OID"
	public type class_ref 2783500 // PP_X509Certificate_Private_Field
	init_value " 20"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10039820 "PP_X509CERTIFICATE_PRIVATE_SUBJECT_PUBLIC_KEY"
	public type class_ref 2783500 // PP_X509Certificate_Private_Field
	init_value " 21"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10039948 "PP_X509CERTIFICATE_PRIVATE_RAW"
	public type class_ref 2783500 // PP_X509Certificate_Private_Field
	init_value " 22"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10040076 "PP_X509CERTIFICATE_PRIVATE_ISSUER_DISTINGUISHED_NAME"
	public type class_ref 2783500 // PP_X509Certificate_Private_Field
	init_value " 23"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10040204 "PP_X509CERTIFICATE_PRIVATE_SUBJECT_DISTINGUISHED_NAME"
	public type class_ref 2783500 // PP_X509Certificate_Private_Field
	init_value " 24
"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2783628 "PPB_X509Certificate_Private_Version"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}
};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * This enumeration defines the different possible values for X5O9 certificate
 * versions as returned by:
 * <code>GetField(resource, PP_X509CERTIFICATE_PRIVATE_VERSION)</code>."
      attribute 10040332 "PP_X509CERTIFICATE_PRIVATE_V1"
	public type class_ref 2783628 // PPB_X509Certificate_Private_Version
	init_value " 0"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10040460 "PP_X509CERTIFICATE_PRIVATE_V2"
	public type class_ref 2783628 // PPB_X509Certificate_Private_Version
	init_value " 1"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10040588 "PP_X509CERTIFICATE_PRIVATE_V3"
	public type class_ref 2783628 // PPB_X509Certificate_Private_Version
	init_value " 2
"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2783756 "PPB_X509Certificate_Private_0_1"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @}
 
*
 * @addtogroup Interfaces
 * @{
 
*
 * The <code>PPB_X509Certificate_Private</code> interface provides access to
 * the fields of an X509 certificate."
      attribute 10040716 "Create"
	public explicit_type "/** * Allocates a <code>PPB_X509Certificate_Private</code> resource. * <code>Initialize()</code> must be called before using the certificate. */ PP_Resource (*)(PP_Instance instance)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  /**
   * Allocates a <code>PPB_X509Certificate_Private</code> resource.
   * <code>Initialize()</code> must be called before using the certificate.
   */
  PP_Resource (*${name})(PP_Instance instance)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10040844 "IsX509CertificatePrivate"
	public explicit_type "/** * Returns <code>PP_TRUE</code> if a given resource is a * <code>PPB_X509Certificate_Private</code>. */ PP_Bool (*)(PP_Resource resource)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Returns <code>PP_TRUE</code> if a given resource is a
   * <code>PPB_X509Certificate_Private</code>.
   */
  PP_Bool (*${name})(PP_Resource resource)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10040972 "Initialize"
	public explicit_type "/** * Initializes a <code>PPB_X509Certificate_Private</code> from the DER-encoded * representation. |bytes| should represent only a single certificate. * <code>PP_FALSE</code> is returned if |bytes| is not a valid DER-encoding of * a certificate. Note: Flash requires this to be synchronous. */ PP_Bool (*)(PP_Resource resource, const char* bytes, uint32_t length)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Initializes a <code>PPB_X509Certificate_Private</code> from the DER-encoded
   * representation. |bytes| should represent only a single certificate.
   * <code>PP_FALSE</code> is returned if |bytes| is not a valid DER-encoding of
   * a certificate. Note: Flash requires this to be synchronous.
   */
  PP_Bool (*${name})(PP_Resource resource,
                        const char* bytes,
                        uint32_t length)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10041100 "GetField"
	public explicit_type "PP_Var (*)(PP_Resource resource, PP_X509Certificate_Private_Field field)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const} PP_Var (*${name})(PP_Resource resource,
                            PP_X509Certificate_Private_Field field)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2783884 "PPB_X509Certificate_Private"
      visibility package stereotype "typedef" base_type class_ref 2783756 // PPB_X509Certificate_Private_0_1
      cpp_decl "${comment}typedef struct ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 5215628 // <dependency>
	relation 5215500 -_->
	  a default
	    cpp default "#include in source"
	    classrelation_ref 5215628 // <dependency>
	  b parent class_ref 2783756 // PPB_X509Certificate_Private_0_1
      end
    end

    class 2784012 "PPP_ContentDecryptor_Private_0_6"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @file
 * This file defines the <code>PPP_ContentDecryptor_Private</code>
 * interface. Note: This is a special interface, only to be used for Content
 * Decryption Modules, not normal plugins.
 
*
 * @addtogroup Interfaces
 * @{
 
*
 * <code>PPP_ContentDecryptor_Private</code> structure contains the function
 * pointers the decryption plugin must implement to provide services needed by
 * the browser. This interface provides the plugin side support for the Content
 * Decryption Module (CDM) for v0.1 of the proposed Encrypted Media Extensions:
 * http://goo.gl/rbdnR"
      attribute 10041228 "GenerateKeyRequest"
	public explicit_type "/** * Generates a key request. key_system specifies the key or licensing system * to use. type contains the MIME type of init_data. init_data is a data * buffer containing data for use in generating the request. * * Note: <code>GenerateKeyRequest()</code> must create the session ID used in * other methods on this interface. The session ID must be provided to the * browser by the CDM via <code>KeyMessage()</code> on the * <code>PPB_ContentDecryptor_Private</code> interface. * * @param[in] key_system A <code>PP_Var</code> of type * <code>PP_VARTYPE_STRING</code> containing the name of the key system. * * @param[in] type A <code>PP_Var</code> of type * <code>PP_VARTYPE_STRING</code> containing the MIME type for init_data. * * @param[in] init_data A <code>PP_Var</code> of type * <code>PP_VARTYPE_ARRAYBUFFER</code> containing container specific * initialization data. */ void (*)(PP_Instance instance, struct PP_Var key_system, struct PP_Var type, struct PP_Var init_data)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
  /**
   * Generates a key request. key_system specifies the key or licensing system
   * to use. type contains the MIME type of init_data. init_data is a data
   * buffer containing data for use in generating the request.
   *
   * Note: <code>GenerateKeyRequest()</code> must create the session ID used in
   * other methods on this interface. The session ID must be provided to the
   * browser by the CDM via <code>KeyMessage()</code> on the
   * <code>PPB_ContentDecryptor_Private</code> interface.
   *
   * @param[in] key_system A <code>PP_Var</code> of type
   * <code>PP_VARTYPE_STRING</code> containing the name of the key system.
   *
   * @param[in] type A <code>PP_Var</code> of type
   * <code>PP_VARTYPE_STRING</code> containing the MIME type for init_data.
   *
   * @param[in] init_data A <code>PP_Var</code> of type
   * <code>PP_VARTYPE_ARRAYBUFFER</code> containing container specific
   * initialization data.
   */
  void (*${name})(PP_Instance instance,
                             struct PP_Var key_system,
                             struct PP_Var type,
                             struct PP_Var init_data)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10041356 "AddKey"
	public explicit_type "/** * Provides a key or license to the decryptor for decrypting media data. * * When the CDM needs more information to complete addition of the key it * will call <code>KeyMessage()</code> on the * <code>PPB_ContentDecryptor_Private</code> interface, which the browser * passes to the application. When the key is ready to use, the CDM * must call call <code>KeyAdded()</code> on the * <code>PPB_ContentDecryptor_Private</code> interface, and the browser * must notify the web application. * * @param[in] session_id A <code>PP_Var</code> of type * <code>PP_VARTYPE_STRING</code> containing the session ID. * * @param[in] key A <code>PP_Var</code> of type * <code>PP_VARTYPE_ARRAYBUFFER</code> containing the decryption key, license, * or other message for the given session ID. * * @param[in] init_data A <code>PP_Var</code> of type * <code>PP_VARTYPE_ARRAYBUFFER</code> containing container specific * initialization data. */ void (*)(PP_Instance instance, struct PP_Var session_id, struct PP_Var key, struct PP_Var init_data)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Provides a key or license to the decryptor for decrypting media data.
   *
   * When the CDM needs more information to complete addition of the key it
   * will call <code>KeyMessage()</code> on the
   * <code>PPB_ContentDecryptor_Private</code> interface, which the browser
   * passes to the application. When the key is ready to use, the CDM
   * must call call <code>KeyAdded()</code> on the
   * <code>PPB_ContentDecryptor_Private</code> interface, and the browser
   * must notify the web application.
   *
   * @param[in] session_id A <code>PP_Var</code> of type
   * <code>PP_VARTYPE_STRING</code> containing the session ID.
   *
   * @param[in] key A <code>PP_Var</code> of type
   * <code>PP_VARTYPE_ARRAYBUFFER</code> containing the decryption key, license,
   * or other message for the given session ID.
   *
   * @param[in] init_data A <code>PP_Var</code> of type
   * <code>PP_VARTYPE_ARRAYBUFFER</code> containing container specific
   * initialization data.
   */
  void (*${name})(PP_Instance instance,
                 struct PP_Var session_id,
                 struct PP_Var key,
                 struct PP_Var init_data)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10041484 "CancelKeyRequest"
	public explicit_type "/** * Cancels a pending key request for the specified session ID. * * @param[in] session_id A <code>PP_Var</code> of type * <code>PP_VARTYPE_STRING</code> containing the session ID. */ void (*)(PP_Instance instance, struct PP_Var session_id)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Cancels a pending key request for the specified session ID.
   *
   * @param[in] session_id A <code>PP_Var</code> of type
   * <code>PP_VARTYPE_STRING</code> containing the session ID.
   */
  void (*${name})(PP_Instance instance, struct PP_Var session_id)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10041612 "Decrypt"
	public explicit_type "/** * Decrypts the block and returns the unencrypted block via * <code>DeliverBlock()</code> on the * <code>PPB_ContentDecryptor_Private</code> interface. The returned block * contains encoded data. * * @param[in] resource A <code>PP_Resource</code> corresponding to a * <code>PPB_Buffer_Dev</code> resource that contains an encrypted data * block. * * @param[in] encrypted_block_info A <code>PP_EncryptedBlockInfo</code> that * contains all auxiliary information needed for decryption of the * <code>encrypted_block</code>. */ void (*)(PP_Instance instance, PP_Resource encrypted_block, const struct PP_EncryptedBlockInfo* encrypted_block_info)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Decrypts the block and returns the unencrypted block via
   * <code>DeliverBlock()</code> on the
   * <code>PPB_ContentDecryptor_Private</code> interface. The returned block
   * contains encoded data.
   *
   * @param[in] resource A <code>PP_Resource</code> corresponding to a
   * <code>PPB_Buffer_Dev</code> resource that contains an encrypted data
   * block.
   *
   * @param[in] encrypted_block_info A <code>PP_EncryptedBlockInfo</code> that
   * contains all auxiliary information needed for decryption of the
   * <code>encrypted_block</code>.
   */
  void (*${name})(PP_Instance instance,
                  PP_Resource encrypted_block,
                  const struct PP_EncryptedBlockInfo* encrypted_block_info)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10041740 "InitializeAudioDecoder"
	public explicit_type "/** * Initializes the audio decoder using codec and settings in * <code>decoder_config</code>, and returns the result of the initialization * request to the browser using the <code>DecoderInitializeDone( )</code> method * on the <code>PPB_ContentDecryptor_Private</code> interface. * * @param[in] decoder_config A <code>PP_AudioDecoderConfig</code> that * contains audio decoder settings and a request ID. The request ID is passed * to the <code>DecoderInitializeDone()</code> method on the * <code>PPB_ContentDecryptor_Private</code> interface to allow clients to * associate the result with a audio decoder initialization request. * * @param[in] codec_extra_data A <code>PP_Resource</code> corresponding to a * <code>PPB_Buffer_Dev</code> resource containing codec setup data required * by some codecs. It should be set to 0 when the codec being initialized * does not require it. */ void (*)( PP_Instance instance, const struct PP_AudioDecoderConfig* decoder_config, PP_Resource codec_extra_data)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Initializes the audio decoder using codec and settings in
   * <code>decoder_config</code>, and returns the result of the initialization
   * request to the browser using the <code>DecoderInitializeDone(
      )</code> method
   * on the <code>PPB_ContentDecryptor_Private</code> interface.
   *
   * @param[in] decoder_config A <code>PP_AudioDecoderConfig</code> that
   * contains audio decoder settings and a request ID. The request ID is passed
   * to the <code>DecoderInitializeDone()</code> method on the
   * <code>PPB_ContentDecryptor_Private</code> interface to allow clients to
   * associate the result with a audio decoder initialization request.
   *
   * @param[in] codec_extra_data A <code>PP_Resource</code> corresponding to a
   * <code>PPB_Buffer_Dev</code> resource containing codec setup data required
   * by some codecs. It should be set to 0 when the codec being initialized
   * does not require it.
   */
  void (*${name})(
      PP_Instance instance,
      const struct PP_AudioDecoderConfig* decoder_config,
      PP_Resource codec_extra_data)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10041868 "InitializeVideoDecoder"
	public explicit_type "/** * Initializes the video decoder using codec and settings in * <code>decoder_config</code>, and returns the result of the initialization * request to the browser using the <code>DecoderInitializeDone()</code> * method on the <code>PPB_ContentDecryptor_Private</code> interface. * * @param[in] decoder_config A <code>PP_VideoDecoderConfig</code> that * contains video decoder settings and a request ID. The request ID is passed * to the <code>DecoderInitializeDone()</code> method on the * <code>PPB_ContentDecryptor_Private</code> interface to allow clients to * associate the result with a video decoder initialization request. * * @param[in] codec_extra_data A <code>PP_Resource</code> corresponding to a * <code>PPB_Buffer_Dev</code> resource containing codec setup data required * by some codecs. It should be set to 0 when the codec being initialized * does not require it. */ void (*)( PP_Instance instance, const struct PP_VideoDecoderConfig* decoder_config, PP_Resource codec_extra_data)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Initializes the video decoder using codec and settings in
   * <code>decoder_config</code>, and returns the result of the initialization
   * request to the browser using the <code>DecoderInitializeDone()</code>
   * method on the <code>PPB_ContentDecryptor_Private</code> interface.
   *
   * @param[in] decoder_config A <code>PP_VideoDecoderConfig</code> that
   * contains video decoder settings and a request ID. The request ID is passed
   * to the <code>DecoderInitializeDone()</code> method on the
   * <code>PPB_ContentDecryptor_Private</code> interface to allow clients to
   * associate the result with a video decoder initialization request.
   *
   * @param[in] codec_extra_data A <code>PP_Resource</code> corresponding to a
   * <code>PPB_Buffer_Dev</code> resource containing codec setup data required
   * by some codecs. It should be set to 0 when the codec being initialized
   * does not require it.
   */
  void (*${name})(
      PP_Instance instance,
      const struct PP_VideoDecoderConfig* decoder_config,
      PP_Resource codec_extra_data)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10041996 "DeinitializeDecoder"
	public explicit_type "/** * De-initializes the decoder for the <code>PP_DecryptorStreamType</code> * specified by <code>decoder_type</code> and sets it to an uninitialized * state. The decoder can be re-initialized after de-initialization completes * by calling <code>InitializeAudioDecoder</code> or * <code>InitializeVideoDecoder</code>. * * De-initialization completion is reported to the browser using the * <code>DecoderDeinitializeDone()</code> method on the * <code>PPB_ContentDecryptor_Private</code> interface. * * @param[in] decoder_type A <code>PP_DecryptorStreamType</code> that * specifies the decoder to de-initialize. * * @param[in] request_id A request ID that allows the browser to associate a * request to de-initialize a decoder with the corresponding call to the * <code>DecoderDeinitializeDone()</code> method on the * <code>PPB_ContentDecryptor_Private</code> interface. */ void (*)(PP_Instance instance, PP_DecryptorStreamType decoder_type, uint32_t request_id)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * De-initializes the decoder for the <code>PP_DecryptorStreamType</code>
   * specified by <code>decoder_type</code> and sets it to an uninitialized
   * state. The decoder can be re-initialized after de-initialization completes
   * by calling <code>InitializeAudioDecoder</code> or
   * <code>InitializeVideoDecoder</code>.
   *
   * De-initialization completion is reported to the browser using the
   * <code>DecoderDeinitializeDone()</code> method on the
   * <code>PPB_ContentDecryptor_Private</code> interface.
   *
   * @param[in] decoder_type A <code>PP_DecryptorStreamType</code> that
   * specifies the decoder to de-initialize.
   *
   * @param[in] request_id A request ID that allows the browser to associate a
   * request to de-initialize a decoder with the corresponding call to the
   * <code>DecoderDeinitializeDone()</code> method on the
   * <code>PPB_ContentDecryptor_Private</code> interface.
   */
  void (*${name})(PP_Instance instance,
                              PP_DecryptorStreamType decoder_type,
                              uint32_t request_id)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10042124 "ResetDecoder"
	public explicit_type "/** * Resets the decoder for the <code>PP_DecryptorStreamType</code> specified * by <code>decoder_type</code> to an initialized clean state. Reset * completion is reported to the browser using the * <code>DecoderResetDone()</code> method on the * <code>PPB_ContentDecryptor_Private</code> interface. This method can be * used to signal a discontinuity in the encoded data stream, and is safe to * call multiple times. * * @param[in] decoder_type A <code>PP_DecryptorStreamType</code> that * specifies the decoder to reset. * * @param[in] request_id A request ID that allows the browser to associate a * request to reset the decoder with a corresponding call to the * <code>DecoderResetDone()</code> method on the * <code>PPB_ContentDecryptor_Private</code> interface. */ void (*)(PP_Instance instance, PP_DecryptorStreamType decoder_type, uint32_t request_id)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Resets the decoder for the <code>PP_DecryptorStreamType</code> specified
   * by <code>decoder_type</code> to an initialized clean state. Reset
   * completion is reported to the browser using the
   * <code>DecoderResetDone()</code> method on the
   * <code>PPB_ContentDecryptor_Private</code> interface. This method can be
   * used to signal a discontinuity in the encoded data stream, and is safe to
   * call multiple times.
   *
   * @param[in] decoder_type A <code>PP_DecryptorStreamType</code> that
   * specifies the decoder to reset.
   *
   * @param[in] request_id A request ID that allows the browser to associate a
   * request to reset the decoder with a corresponding call to the
   * <code>DecoderResetDone()</code> method on the
   * <code>PPB_ContentDecryptor_Private</code> interface.
   */
  void (*${name})(PP_Instance instance,
                       PP_DecryptorStreamType decoder_type,
                       uint32_t request_id)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 10042252 "DecryptAndDecode"
	public explicit_type "/** * Decrypts encrypted_buffer, decodes it, and returns the unencrypted * uncompressed (decoded) data to the browser via the * <code>DeliverFrame()</code> or <code>DeliverSamples()</code> method on the * <code>PPB_ContentDecryptor_Private</code> interface. * * @param[in] decoder_type A <code>PP_DecryptorStreamType</code> that * specifies the decoder to use after <code>encrypted_buffer</code> is * decrypted. * * @param[in] encrypted_buffer A <code>PP_Resource</code> corresponding to a * <code>PPB_Buffer_Dev</code> resource that contains encrypted media data. * * @param[in] encrypted_block_info A <code>PP_EncryptedBlockInfo</code> that * contains all auxiliary information needed for decryption of the * <code>encrypted_block</code>. */ void (*)( PP_Instance instance, PP_DecryptorStreamType decoder_type, PP_Resource encrypted_buffer, const struct PP_EncryptedBlockInfo* encrypted_block_info)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}  /**
   * Decrypts encrypted_buffer, decodes it, and returns the unencrypted
   * uncompressed (decoded) data to the browser via the
   * <code>DeliverFrame()</code> or <code>DeliverSamples()</code> method on the
   * <code>PPB_ContentDecryptor_Private</code> interface.
   *
   * @param[in] decoder_type A <code>PP_DecryptorStreamType</code> that
   * specifies the decoder to use after <code>encrypted_buffer</code> is
   * decrypted.
   *
   * @param[in] encrypted_buffer A <code>PP_Resource</code> corresponding to a
   * <code>PPB_Buffer_Dev</code> resource that contains encrypted media data.
   *
   * @param[in] encrypted_block_info A <code>PP_EncryptedBlockInfo</code> that
   * contains all auxiliary information needed for decryption of the
   * <code>encrypted_block</code>.
   */
  void (*${name})(
      PP_Instance instance,
      PP_DecryptorStreamType decoder_type,
      PP_Resource encrypted_buffer,
      const struct PP_EncryptedBlockInfo* encrypted_block_info)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2784140 "PPP_ContentDecryptor_Private"
      visibility package stereotype "typedef" base_type class_ref 2784012 // PPP_ContentDecryptor_Private_0_6
      cpp_decl "${comment}typedef struct ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 5215756 // <dependency>
	relation 5215628 -_->
	  a default
	    cpp default "#include in source"
	    classrelation_ref 5215756 // <dependency>
	  b parent class_ref 2784012 // PPP_ContentDecryptor_Private_0_6
      end
    end

    class 2784268 "PPP_Instance_Private_0_1"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * @file
 * This file defines the PPP_InstancePrivate structure; a series of functions
 * that a trusted plugin may implement to provide capabilities only available
 * to trusted plugins.
 
*
 * @addtogroup Interfaces
 * @{
 
*
 * The PPP_Instance_Private interface contains pointers to a series of
 * functions that may be implemented in a trusted plugin to provide capabilities
 * that aren't possible in untrusted modules."
      attribute 10042380 "GetInstanceObject"
	public explicit_type "PP_Var (*)(PP_Instance instance)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const} PP_Var (*${name})(PP_Instance instance)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 2784396 "PPP_Instance_Private"
      visibility package stereotype "typedef" base_type class_ref 2784268 // PPP_Instance_Private_0_1
      cpp_decl "${comment}typedef struct ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 5215884 // <dependency>
	relation 5215756 -_->
	  a default
	    cpp default "#include in source"
	    classrelation_ref 5215884 // <dependency>
	  b parent class_ref 2784268 // PPP_Instance_Private_0_1
      end
    end
  end

  deploymentview 260876 "private"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 1046156 "pp_content_decryptor"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2774796 // PP_DecryptTrackingInfo
	class_ref 2774924 // PP_DecryptSubsampleDescription
	class_ref 2775052 // PP_EncryptedBlockInfo
	class_ref 2775180 // PP_DecryptedFrameFormat
	class_ref 2775308 // PP_DecryptResult
	class_ref 2775436 // PP_DecryptedBlockInfo
	class_ref 2775564 // PP_DecryptedFramePlanes
	class_ref 2775692 // PP_DecryptedFrameInfo
	class_ref 2775820 // PP_AudioCodec
	class_ref 2775948 // PP_AudioDecoderConfig
	class_ref 2776076 // PP_VideoCodec
	class_ref 2776204 // PP_VideoCodecProfile
	class_ref 2776332 // PP_VideoDecoderConfig
	class_ref 2776460 // PP_DecryptorStreamType
      end
    end

    artifact 1046284 "pp_file_handle"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2776588 // PP_FileHandle
      end
    end

    artifact 1046412 "pp_private_font_charset"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2776716 // PP_PrivateFontCharset
      end
    end

    artifact 1046540 "ppb_content_decryptor_private"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2776844 // PPB_ContentDecryptor_Private_0_6
	class_ref 2776972 // PPB_ContentDecryptor_Private
      end
    end

    artifact 1046668 "ppb_file_ref_private"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2777100 // PPB_FileRefPrivate_0_1
	class_ref 2777228 // PPB_FileRefPrivate
      end
    end

    artifact 1046796 "ppb_gpu_blacklist_private"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2777356 // PPB_GpuBlacklist_Private_0_2
	class_ref 2777484 // PPB_GpuBlacklist_Private
      end
    end

    artifact 1046924 "ppb_host_resolver_private"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2777612 // PP_HostResolver_Private_Flags
	class_ref 2777740 // PP_HostResolver_Private_Hint
	class_ref 2777996 // PPB_HostResolver_Private_0_1
	class_ref 2778124 // PPB_HostResolver_Private
      end
    end

    artifact 1047052 "ppb_instance_private"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2778252 // PPB_Instance_Private_0_1
	class_ref 2778380 // PPB_Instance_Private
      end
    end

    artifact 1047180 "ppb_nacl_private"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2778508 // PP_NaClResult
	class_ref 2778636 // PP_NaClError
	class_ref 2778764 // PPB_NaCl_Private_1_0
	class_ref 2778892 // PPB_NaCl_Private
      end
    end

    artifact 1047308 "ppb_net_address_private"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2777868 // PP_NetAddressFamily_Private
	class_ref 2779020 // PP_NetAddress_Private
	class_ref 2779148 // PPB_NetAddress_Private_1_1
	class_ref 2779276 // PPB_NetAddress_Private
	class_ref 2779404 // PPB_NetAddress_Private_0_1
	class_ref 2779532 // PPB_NetAddress_Private_1_0
      end
    end

    artifact 1047436 "ppb_network_list_private"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2779660 // PP_NetworkListType_Private
	class_ref 2779788 // PP_NetworkListState_Private
	class_ref 2779916 // PPB_NetworkList_Private_0_2
	class_ref 2780044 // PPB_NetworkList_Private
      end
    end

    artifact 1047564 "ppb_network_monitor_private"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2780172 // PPB_NetworkMonitor_Callback
	class_ref 2780300 // PPB_NetworkMonitor_Private_0_2
	class_ref 2780428 // PPB_NetworkMonitor_Private
      end
    end

    artifact 1047692 "ppb_pdf"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2780556 // PP_ResourceString
	class_ref 2780684 // PP_ResourceImage
	class_ref 2780812 // PP_PDFFeature
	class_ref 2780940 // PP_PrivateFontFileDescription
	class_ref 2781068 // PP_PrivateFindResult
	class_ref 2781196 // PPB_PDF
      end
    end

    artifact 1047820 "ppb_proxy_private"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2781324 // PPB_Proxy_Private
      end
    end

    artifact 1047948 "ppb_talk_private"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2781452 // PPB_Talk_Private_1_0
	class_ref 2781580 // PPB_Talk_Private
      end
    end

    artifact 1048076 "ppb_tcp_server_socket_private"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2781708 // PPB_TCPServerSocket_Private_0_1
	class_ref 2781836 // PPB_TCPServerSocket_Private
      end
    end

    artifact 1048204 "ppb_tcp_socket_private"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2781964 // PP_TCPSocketOption_Private
	class_ref 2782092 // PPB_TCPSocket_Private_0_5
	class_ref 2782220 // PPB_TCPSocket_Private
	class_ref 2782348 // PPB_TCPSocket_Private_0_3
	class_ref 2782476 // PPB_TCPSocket_Private_0_4
      end
    end

    artifact 1048332 "ppb_udp_socket_private"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2782604 // PP_UDPSocketFeature_Private
	class_ref 2782732 // PPB_UDPSocket_Private_0_4
	class_ref 2782860 // PPB_UDPSocket_Private
	class_ref 2782988 // PPB_UDPSocket_Private_0_2
	class_ref 2783116 // PPB_UDPSocket_Private_0_3
      end
    end

    artifact 1048460 "ppb_uma_private"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2783244 // PPB_UMA_Private_0_1
	class_ref 2783372 // PPB_UMA_Private
      end
    end

    artifact 1048588 "ppb_x509_certificate_private"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2783500 // PP_X509Certificate_Private_Field
	class_ref 2783628 // PPB_X509Certificate_Private_Version
	class_ref 2783756 // PPB_X509Certificate_Private_0_1
	class_ref 2783884 // PPB_X509Certificate_Private
      end
    end

    artifact 1048716 "ppp_content_decryptor_private"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2784012 // PPP_ContentDecryptor_Private_0_6
	class_ref 2784140 // PPP_ContentDecryptor_Private
      end
    end

    artifact 1048844 "ppp_instance_private"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2784268 // PPP_Instance_Private_0_1
	class_ref 2784396 // PPP_Instance_Private
      end
    end
  end
end
