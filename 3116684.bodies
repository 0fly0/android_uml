class ServerMessageAdapterTest
!!!13096588.java!!!	setUp() : void
    super.setUp();
    mControl = EasyMock.createStrictControl();

    mMockReceiver = mControl.createMock(RequestReceiver.class);

    mServerMessageAdapter = new ServerMessageAdapter(mMockReceiver, mControl.createMock(WireAdapter.class));
!!!13096716.java!!!	tearDown() : void
    mControl.verify();
    mControl = null;
    mServerMessageAdapter = null;
    mMockReceiver = null;
    super.tearDown();
!!!13096844.java!!!	testKeyCode_values() : void
    Code keycode = Code.KEYCODE_BACK;
    Action action = Action.DOWN;
    KeyEvent message = KeyEvent.newBuilder().setKeycode(keycode).setAction(action).build();

    mMockReceiver.onKeyEvent(keycode, action);
    sendRequestMessage(message);
!!!13096972.java!!!	testMouseEvent() : void
    int dx = 32;
    int dy = 12;
    MouseEvent message = MouseEvent.newBuilder().setXDelta(dx).setYDelta(dy).build();

    mMockReceiver.onMouseEvent(dx, dy);
    sendRequestMessage(message);
!!!13097100.java!!!	testMouseWheel() : void
    int dx = 32;
    int dy = 12;
    MouseWheel message = MouseWheel.newBuilder().setXScroll(dx).setYScroll(dy).build();

    mMockReceiver.onMouseWheel(dx, dy);
    sendRequestMessage(message);
!!!13097228.java!!!	testData_values() : void
    String type = "type";
    String data = "string";
    Data message = Data.newBuilder().setData(data).setType(type).build();

    mMockReceiver.onData(isA(Token.class), eq(type), eq(data));
    sendRequestMessage(message);
!!!13097356.java!!!	testConnect_deviceName() : void
    String deviceName = "device name";
    Connect message = Connect.newBuilder().setDeviceName(deviceName).build();

    expect(mMockReceiver.onConnect(eq(new ConnectInfo(deviceName)))).andReturn(null);
    sendRequestMessage(message);
!!!13097484.java!!!	testConnect_version() : void
    String deviceName = "device name";
    int version = 42;
    Connect message = Connect.newBuilder().setDeviceName(deviceName).setVersion(version).build();

    expect(mMockReceiver.onConnect(new ConnectInfo(deviceName, version))).andReturn(null);
    sendRequestMessage(message);
!!!13097612.java!!!	sendRequestMessage(inout message : GeneratedMessageLite) : void
    mControl.replay();

    Builder builder = RequestMessage.newBuilder();
    if (message == null) {
      // Do nothing - empty response is a valid message
    } else if (message instanceof Connect) {
      builder.setConnectMessage((Connect) message);
    } else if (message instanceof Data) {
      builder.setDataMessage((Data) message);
    } else if (message instanceof KeyEvent) {
      builder.setKeyEventMessage((KeyEvent) message);
    } else if (message instanceof MouseEvent) {
      builder.setMouseEventMessage((MouseEvent) message);
    } else if (message instanceof MouseWheel) {
      builder.setMouseWheelMessage((MouseWheel) message);
    } else {
      throw new IllegalArgumentException("Unknown message type: " + message);
    }

    RemoteMessage remoteMessage = RemoteMessage.newBuilder()
        .setRequestMessage(builder)
        .build();

    mServerMessageAdapter.onMessage(remoteMessage);
