class AtomicLongFieldUpdater
!!!1641755.java!!!	newUpdater(inout tclass : Class, inout fieldName : String) : AtomicLongFieldUpdater
        if (AtomicLong.VM_SUPPORTS_LONG_CAS)
            return new CASUpdater<U>(tclass, fieldName);
        else
            return new LockedUpdater<U>(tclass, fieldName);
!!!1642651.java!!!	getAndSet(inout obj : T, in newValue : long) : long
        for (;;) {
            long current = get(obj);
            if (compareAndSet(obj, current, newValue))
                return current;
        }
!!!1642779.java!!!	getAndIncrement(inout obj : T) : long
        for (;;) {
            long current = get(obj);
            long next = current + 1;
            if (compareAndSet(obj, current, next))
                return current;
        }
!!!1642907.java!!!	getAndDecrement(inout obj : T) : long
        for (;;) {
            long current = get(obj);
            long next = current - 1;
            if (compareAndSet(obj, current, next))
                return current;
        }
!!!1643035.java!!!	getAndAdd(inout obj : T, in delta : long) : long
        for (;;) {
            long current = get(obj);
            long next = current + delta;
            if (compareAndSet(obj, current, next))
                return current;
        }
!!!1643163.java!!!	incrementAndGet(inout obj : T) : long
        for (;;) {
            long current = get(obj);
            long next = current + 1;
            if (compareAndSet(obj, current, next))
                return next;
        }
!!!1643291.java!!!	decrementAndGet(inout obj : T) : long
        for (;;) {
            long current = get(obj);
            long next = current - 1;
            if (compareAndSet(obj, current, next))
                return next;
        }
!!!1643419.java!!!	addAndGet(inout obj : T, in delta : long) : long
        for (;;) {
            long current = get(obj);
            long next = current + delta;
            if (compareAndSet(obj, current, next))
                return next;
        }
