format 74
"hardware" // framework::base::core::java::android::hardware
  revision 5
  modified_by 12 "shchen"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "/home/shchen/work/jellybean/framework/base/core/java/android/hardware/"
  java_package "android.hardware"
  package_ref 185228 // display

  classview 169740 "hardware"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 816908 "Camera"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The Camera class is used to set image capture settings, start/stop preview,
snap pictures, and retrieve frames for encoding for video.  This class is a
client for the Camera service, which manages the actual camera hardware.

<p>To access the device camera, you must declare the
{@link android.Manifest.permission#CAMERA} permission in your Android
Manifest. Also be sure to include the
<a href=\"{@docRoot}guide/topics/manifest/uses-feature-element.html\">&lt;uses-feature></a>
manifest element to declare camera features used by your application.
For example, if you use the camera and auto-focus feature, your Manifest
should include the following:</p>
<pre> &lt;uses-permission android:name=\"android.permission.CAMERA\" />
&lt;uses-feature android:name=\"android.hardware.camera\" />
&lt;uses-feature android:name=\"android.hardware.camera.autofocus\" /></pre>

<p>To take pictures with this class, use the following steps:</p>

<ol>
<li>Obtain an instance of Camera from {@link #open(int)}.

<li>Get existing (default) settings with {@link #getParameters()}.

<li>If necessary, modify the returned {@link Camera.Parameters} object and call
{@link #setParameters(Camera.Parameters)}.

<li>If desired, call {@link #setDisplayOrientation(int)}.

<li><b>Important</b>: Pass a fully initialized {@link SurfaceHolder} to
{@link #setPreviewDisplay(SurfaceHolder)}.  Without a surface, the camera
will be unable to start the preview.

<li><b>Important</b>: Call {@link #startPreview()} to start updating the
preview surface.  Preview must be started before you can take a picture.

<li>When you want, call {@link #takePicture(Camera.ShutterCallback,
Camera.PictureCallback, Camera.PictureCallback, Camera.PictureCallback)} to
capture a photo.  Wait for the callbacks to provide the actual image data.

<li>After taking a picture, preview display will have stopped.  To take more
photos, call {@link #startPreview()} again first.

<li>Call {@link #stopPreview()} to stop updating the preview surface.

<li><b>Important:</b> Call {@link #release()} to release the camera for
use by other applications.  Applications should release the camera
immediately in {@link android.app.Activity#onPause()} (and re-{@link #open()}
it in {@link android.app.Activity#onResume()}).
</ol>

<p>To quickly switch to video recording mode, use these steps:</p>

<ol>
<li>Obtain and initialize a Camera and start preview as described above.

<li>Call {@link #unlock()} to allow the media process to access the camera.

<li>Pass the camera to {@link android.media.MediaRecorder#setCamera(Camera)}.
See {@link android.media.MediaRecorder} information about video recording.

<li>When finished recording, call {@link #reconnect()} to re-acquire
and re-lock the camera.

<li>If desired, restart preview and take more photos or videos.

<li>Call {@link #stopPreview()} and {@link #release()} as described above.
</ol>

<p>This class is not thread-safe, and is meant for use from one event thread.
Most long-running operations (preview, focus, photo capture, etc) happen
asynchronously and invoke callbacks as necessary.  Callbacks will be invoked
on the event thread {@link #open(int)} was called from.  This class's methods
must never be called from multiple threads at once.</p>

<p class=\"caution\"><strong>Caution:</strong> Different Android-powered devices
may have different hardware specifications, such as megapixel ratings and
auto-focus capabilities. In order for your application to be compatible with
more devices, you should not make assumptions about the device camera
specifications.</p>

<div class=\"special reference\">
<h3>Developer Guides</h3>
<p>For more information about using cameras, read the
<a href=\"{@docRoot}guide/topics/media/camera.html\">Camera</a> developer guide.</p>
</div>"
      attribute 2495372 "TAG"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"Camera\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2495500 "CAMERA_MSG_ERROR"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x001"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " These match the enums in frameworks/base/include/camera/Camera.h"
      end

      attribute 2495628 "CAMERA_MSG_SHUTTER"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x002"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2495756 "CAMERA_MSG_FOCUS"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x004"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2495884 "CAMERA_MSG_ZOOM"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x008"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2496012 "CAMERA_MSG_PREVIEW_FRAME"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x010"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2496140 "CAMERA_MSG_VIDEO_FRAME"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x020"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2496268 "CAMERA_MSG_POSTVIEW_FRAME"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x040"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2496396 "CAMERA_MSG_RAW_IMAGE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x080"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2496524 "CAMERA_MSG_COMPRESSED_IMAGE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x100"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2496652 "CAMERA_MSG_RAW_IMAGE_NOTIFY"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x200"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2496780 "CAMERA_MSG_PREVIEW_METADATA"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x400"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2496908 "CAMERA_MSG_FOCUS_MOVE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0x800"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2497036 "mNativeContext"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " accessed by native methods"
      end

      class 817036 "EventHandler"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1664012 // <generalisation>
	  relation 1664012 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 1664012 // <generalisation>
	    b parent class_ref 687500 // Handler
	end

	classrelation 1664140 // mCamera (<unidirectional association>)
	  relation 1664140 --->
	    a role_name "mCamera" private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1664140 // mCamera (<unidirectional association>)
	    b parent class_ref 816908 // Camera
	end

	operation 3391884 "EventHandler"
	  public explicit_return_type ""
	  nparams 2
	    param inout name "c" type class_ref 816908 // Camera
	    param inout name "looper" type class_ref 685324 // Looper
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3392012 "handleMessage"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "msg" type class_ref 690316 // Message
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      classrelation 1662604 // mEventHandler (<unidirectional association>)
	relation 1662604 --->
	  a role_name "mEventHandler" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1662604 // mEventHandler (<unidirectional association>)
	  b parent class_ref 817036 // EventHandler
      end

      class 817164 "ShutterCallback"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 3393292 "onShutter"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Called as near as possible to the moment when a photo is captured
from the sensor.  This is a good opportunity to play a shutter sound
or give other feedback of camera operation.  This may be some time
after the photo was triggered, but some time before the actual data
is available."
	end
      end

      classrelation 1662732 // mShutterCallback (<unidirectional association>)
	relation 1662732 --->
	  a role_name "mShutterCallback" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1662732 // mShutterCallback (<unidirectional association>)
	  b parent class_ref 817164 // ShutterCallback
      end

      class 817292 "PictureCallback"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 3393420 "onPictureTaken"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "data" explicit_type "byte"
	    param inout name "camera" type class_ref 816908 // Camera
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Called when image data is available after a picture is taken.
The format of the data depends on the context of the callback
and {@link Camera.Parameters} settings.

@param data   a byte array of the picture data
@param camera the Camera service object"
	end
      end

      classrelation 1662860 // mRawImageCallback (<unidirectional association>)
	relation 1662860 --->
	  a role_name "mRawImageCallback" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1662860 // mRawImageCallback (<unidirectional association>)
	  b parent class_ref 817292 // PictureCallback
      end

      classrelation 1662988 // mJpegCallback (<unidirectional association>)
	relation 1662988 --->
	  a role_name "mJpegCallback" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1662988 // mJpegCallback (<unidirectional association>)
	  b parent class_ref 817292 // PictureCallback
      end

      class 817420 "PreviewCallback"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 3390220 "onPreviewFrame"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "data" explicit_type "byte"
	    param inout name "camera" type class_ref 816908 // Camera
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Called as preview frames are displayed.  This callback is invoked
on the event thread {@link #open(int)} was called from.

<p>If using the {@link android.graphics.ImageFormat#YV12} format,
refer to the equations in {@link Camera.Parameters#setPreviewFormat}
for the arrangement of the pixel data in the preview callback
buffers.

@param data the contents of the preview frame in the format defined
 by {@link android.graphics.ImageFormat}, which can be queried
 with {@link android.hardware.Camera.Parameters#getPreviewFormat()}.
 If {@link android.hardware.Camera.Parameters#setPreviewFormat(int)}
            is never called, the default will be the YCbCr_420_SP
            (NV21) format.
@param camera the Camera service object."
	end
      end

      classrelation 1663116 // mPreviewCallback (<unidirectional association>)
	relation 1663116 --->
	  a role_name "mPreviewCallback" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1663116 // mPreviewCallback (<unidirectional association>)
	  b parent class_ref 817420 // PreviewCallback
      end

      classrelation 1663244 // mPostviewCallback (<unidirectional association>)
	relation 1663244 --->
	  a role_name "mPostviewCallback" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1663244 // mPostviewCallback (<unidirectional association>)
	  b parent class_ref 817292 // PictureCallback
      end

      class 817548 "AutoFocusCallback"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 3392268 "onAutoFocus"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "success" explicit_type "boolean"
	    param inout name "camera" type class_ref 816908 // Camera
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Called when the camera auto focus completes.  If the camera
does not support auto-focus and autoFocus is called,
onAutoFocus will be called immediately with a fake value of
<code>success</code> set to <code>true</code>.

The auto-focus routine does not lock auto-exposure and auto-white
balance after it completes.

@param success true if focus was successful, false if otherwise
@param camera  the Camera service object
@see android.hardware.Camera.Parameters#setAutoExposureLock(boolean)
@see android.hardware.Camera.Parameters#setAutoWhiteBalanceLock(boolean)"
	end
      end

      classrelation 1663372 // mAutoFocusCallback (<unidirectional association>)
	relation 1663372 --->
	  a role_name "mAutoFocusCallback" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1663372 // mAutoFocusCallback (<unidirectional association>)
	  b parent class_ref 817548 // AutoFocusCallback
      end

      class 817676 "AutoFocusMoveCallback"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 3392908 "onAutoFocusMoving"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "start" explicit_type "boolean"
	    param inout name "camera" type class_ref 816908 // Camera
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Called when the camera auto focus starts or stops.

@param start true if focus starts to move, false if focus stops to move
@param camera the Camera service object"
	end
      end

      classrelation 1663500 // mAutoFocusMoveCallback (<unidirectional association>)
	relation 1663500 --->
	  a role_name "mAutoFocusMoveCallback" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1663500 // mAutoFocusMoveCallback (<unidirectional association>)
	  b parent class_ref 817676 // AutoFocusMoveCallback
      end

      class 817804 "OnZoomChangeListener"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 3394572 "onZoomChange"
	  public explicit_return_type "void"
	  nparams 3
	    param in name "zoomValue" explicit_type "int"
	    param inout name "stopped" explicit_type "boolean"
	    param inout name "camera" type class_ref 816908 // Camera
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Called when the zoom value has changed during a smooth zoom.

@param zoomValue the current zoom value. In smooth zoom mode, camera
                 calls this for every new zoom value.
@param stopped whether smooth zoom is stopped. If the value is true,
               this is the last zoom update for the application.
@param camera  the Camera service object"
	end
      end

      classrelation 1663628 // mZoomListener (<unidirectional association>)
	relation 1663628 --->
	  a role_name "mZoomListener" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1663628 // mZoomListener (<unidirectional association>)
	  b parent class_ref 817804 // OnZoomChangeListener
      end

      class 817932 "FaceDetectionListener"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 3394828 "onFaceDetection"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "faces" type class_ref 818444 // Face
	    param inout name "camera" type class_ref 816908 // Camera
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Notify the listener of the detected faces in the preview frame.

@param faces The detected faces in a list
@param camera  The {@link Camera} service object"
	end
      end

      classrelation 1663756 // mFaceListener (<unidirectional association>)
	relation 1663756 --->
	  a role_name "mFaceListener" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1663756 // mFaceListener (<unidirectional association>)
	  b parent class_ref 817932 // FaceDetectionListener
      end

      class 818060 "ErrorCallback"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 3395724 "onError"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "error" explicit_type "int"
	    param inout name "camera" type class_ref 816908 // Camera
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Callback for camera errors.
@param error   error code:
<ul>
<li>{@link #CAMERA_ERROR_UNKNOWN}
<li>{@link #CAMERA_ERROR_SERVER_DIED}
</ul>
@param camera  the Camera service object"
	end
      end

      classrelation 1663884 // mErrorCallback (<unidirectional association>)
	relation 1663884 --->
	  a role_name "mErrorCallback" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1663884 // mErrorCallback (<unidirectional association>)
	  b parent class_ref 818060 // ErrorCallback
      end

      attribute 2497164 "mOneShot"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2497292 "mWithBuffer"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2497420 "mFaceDetectionRunning"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2497548 "mAutoFocusCallbackLock"
	private explicit_type "Object"
	init_value " new Object()"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2497676 "ACTION_NEW_PICTURE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.hardware.action.NEW_PICTURE\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Broadcast Action:  A new picture is taken by the camera, and the entry of
the picture has been added to the media store.
{@link android.content.Intent#getData} is URI of the picture.
"
      end

      attribute 2497804 "ACTION_NEW_VIDEO"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.hardware.action.NEW_VIDEO\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Broadcast Action:  A new video is recorded by the camera, and the entry
of the video has been added to the media store.
{@link android.content.Intent#getData} is URI of the video.
"
      end

      attribute 2497932 "CAMERA_FACE_DETECTION_HW"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Hardware face detection. It does not use much CPU.
"
      end

      attribute 2498060 "CAMERA_FACE_DETECTION_SW"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Software face detection. It uses some CPU.
"
      end

      operation 3388044 "getNumberOfCameras"
	class_operation public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
	comment "Returns the number of physical cameras available on this device."
      end

      operation 3388172 "getCameraInfo"
	class_operation public explicit_return_type "void"
	nparams 2
	  param in name "cameraId" explicit_type "int"
	  param inout name "cameraInfo" type class_ref 818188 // CameraInfo
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the information about a particular camera.
If {@link #getNumberOfCameras()} returns N, the valid id is 0 to N-1."
      end

      class 818188 "CameraInfo"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 2498188 "CAMERA_FACING_BACK"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 0"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "The facing of the camera is opposite to that of the screen.
"
	end

	attribute 2498316 "CAMERA_FACING_FRONT"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 1"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "The facing of the camera is the same as that of the screen.
"
	end

	attribute 2498444 "facing"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "The direction that the camera faces. It should be
CAMERA_FACING_BACK or CAMERA_FACING_FRONT.
"
	end

	attribute 2498572 "orientation"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "<p>The orientation of the camera image. The value is the angle that the
camera image needs to be rotated clockwise so it shows correctly on
the display in its natural orientation. It should be 0, 90, 180, or 270.</p>

<p>For example, suppose a device has a naturally tall screen. The
back-facing camera sensor is mounted in landscape. You are looking at
the screen. If the top side of the camera sensor is aligned with the
right edge of the screen in natural orientation, the value should be
90. If the top side of a front-facing camera sensor is aligned with
the right of the screen, the value should be 270.</p>

@see #setDisplayOrientation(int)
@see Parameters#setRotation(int)
@see Parameters#setPreviewSize(int, int)
@see Parameters#setPictureSize(int, int)
@see Parameters#setJpegThumbnailSize(int, int)
"
	end

	attribute 2498700 "canDisableShutterSound"
	  public explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "<p>Whether the shutter sound can be disabled.</p>

<p>On some devices, the camera shutter sound cannot be turned off
through {@link #enableShutterSound enableShutterSound}. This field
can be used to determine whether a call to disable the shutter sound
will succeed.</p>

<p>If this field is set to true, then a call of
{@code enableShutterSound(false)} will be successful. If set to
false, then that call will fail, and the shutter sound will be played
when {@link Camera#takePicture takePicture} is called.</p>
"
	end
      end

      operation 3388300 "_getCameraInfo"
	class_operation private explicit_return_type "void"
	nparams 2
	  param in name "cameraId" explicit_type "int"
	  param inout name "cameraInfo" type class_ref 818188 // CameraInfo
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
      end

      operation 3388428 "open"
	class_operation public return_type class_ref 816908 // Camera
	nparams 1
	  param in name "cameraId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new Camera object to access a particular hardware camera. If
the same camera is opened by other applications, this will throw a
RuntimeException.

<p>You must call {@link #release()} when you are done using the camera,
otherwise it will remain locked and be unavailable to other applications.

<p>Your application should only have one Camera object active at a time
for a particular hardware camera.

<p>Callbacks from other methods are delivered to the event loop of the
thread which called open().  If this thread has no event loop, then
callbacks are delivered to the main application event loop.  If there
is no main application event loop, callbacks are not delivered.

<p class=\"caution\"><b>Caution:</b> On some devices, this method may
take a long time to complete.  It is best to call this method from a
worker thread (possibly using {@link android.os.AsyncTask}) to avoid
blocking the main application UI thread.

@param cameraId the hardware camera to access, between 0 and
    {@link #getNumberOfCameras()}-1.
@return a new Camera object, connected, locked and ready for use.
@throws RuntimeException if opening the camera fails (for example, if the
    camera is in use by another process or device policy manager has
    disabled the camera).
@see android.app.admin.DevicePolicyManager#getCameraDisabled(android.content.ComponentName)"
      end

      operation 3388556 "open"
	class_operation public return_type class_ref 816908 // Camera
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new Camera object to access the first back-facing camera on the
device. If the device does not have a back-facing camera, this returns
null.
@see #open(int)"
      end

      operation 3388684 "Camera"
	package explicit_return_type ""
	nparams 1
	  param in name "cameraId" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3388812 "Camera"
	package explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "An empty Camera for testing purpose."
      end

      operation 3388940 "finalize"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3389068 "native_setup"
	private explicit_return_type "void"
	nparams 2
	  param inout name "camera_this" explicit_type "Object"
	  param in name "cameraId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
      end

      operation 3389196 "native_release"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
      end

      operation 3389324 "release"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Disconnects and releases the Camera object resources.

<p>You must call this as soon as you're done with the Camera object.</p>"
      end

      operation 3389452 "unlock"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
	comment "Unlocks the camera to allow another process to access it.
Normally, the camera is locked to the process with an active Camera
object until {@link #release()} is called.  To allow rapid handoff
between processes, you can call this method to release the camera
temporarily for another process to use; once the other process is done
you can call {@link #reconnect()} to reclaim the camera.

<p>This must be done before calling
{@link android.media.MediaRecorder#setCamera(Camera)}. This cannot be
called after recording starts.

<p>If you are not recording video, you probably do not need this method.

@throws RuntimeException if the camera cannot be unlocked."
      end

      operation 3389580 "lock"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
	comment "Re-locks the camera to prevent other processes from accessing it.
Camera objects are locked by default unless {@link #unlock()} is
called.  Normally {@link #reconnect()} is used instead.

<p>Since API level 14, camera is automatically locked for applications in
{@link android.media.MediaRecorder#start()}. Applications can use the
camera (ex: zoom) after recording starts. There is no need to call this
after recording starts or stops.

<p>If you are not recording video, you probably do not need this method.

@throws RuntimeException if the camera cannot be re-locked (for
    example, if the camera is still in use by another process)."
      end

      operation 3389708 "reconnect"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
	comment "Reconnects to the camera service after another process used it.
After {@link #unlock()} is called, another process may use the
camera; when the process is done, you must reconnect to the camera,
which will re-acquire the lock and allow you to continue using the
camera.

<p>Since API level 14, camera is automatically locked for applications in
{@link android.media.MediaRecorder#start()}. Applications can use the
camera (ex: zoom) after recording starts. There is no need to call this
after recording starts or stops.

<p>If you are not recording video, you probably do not need this method.

@throws IOException if a connection cannot be re-established (for
    example, if the camera is still in use by another process)."
      end

      operation 3389836 "setPreviewDisplay"
	public explicit_return_type "void"
	nparams 1
	  param inout name "holder" type class_ref 709004 // SurfaceHolder
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the {@link Surface} to be used for live preview.
Either a surface or surface texture is necessary for preview, and
preview is necessary to take pictures.  The same surface can be re-set
without harm.  Setting a preview surface will un-set any preview surface
texture that was set via {@link #setPreviewTexture}.

<p>The {@link SurfaceHolder} must already contain a surface when this
method is called.  If you are using {@link android.view.SurfaceView},
you will need to register a {@link SurfaceHolder.Callback} with
{@link SurfaceHolder#addCallback(SurfaceHolder.Callback)} and wait for
{@link SurfaceHolder.Callback#surfaceCreated(SurfaceHolder)} before
calling setPreviewDisplay() or starting preview.

<p>This method must be called before {@link #startPreview()}.  The
one exception is that if the preview surface is not set (or set to null)
before startPreview() is called, then this method may be called once
with a non-null parameter to set the preview surface.  (This allows
camera setup and surface creation to happen in parallel, saving time.)
The preview surface may not otherwise change while preview is running.

@param holder containing the Surface on which to place the preview,
    or null to remove the preview surface
@throws IOException if the method fails (for example, if the surface
    is unavailable or unsuitable)."
      end

      operation 3389964 "setPreviewDisplay"
	private explicit_return_type "void"
	nparams 1
	  param inout name "surface" type class_ref 705420 // Surface
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 3390092 "setPreviewTexture"
	public explicit_return_type "void"
	nparams 1
	  param inout name "surfaceTexture" type class_ref 818316 // SurfaceTexture
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
	comment "Sets the {@link SurfaceTexture} to be used for live preview.
Either a surface or surface texture is necessary for preview, and
preview is necessary to take pictures.  The same surface texture can be
re-set without harm.  Setting a preview surface texture will un-set any
preview surface that was set via {@link #setPreviewDisplay}.

<p>This method must be called before {@link #startPreview()}.  The
one exception is that if the preview surface texture is not set (or set
to null) before startPreview() is called, then this method may be called
once with a non-null parameter to set the preview surface.  (This allows
camera setup and surface creation to happen in parallel, saving time.)
The preview surface texture may not otherwise change while preview is
running.

<p>The timestamps provided by {@link SurfaceTexture#getTimestamp()} for a
SurfaceTexture set as the preview texture have an unspecified zero point,
and cannot be directly compared between different cameras or different
instances of the same camera, or across multiple runs of the same
program.

<p>If you are using the preview data to create video or still images,
strongly consider using {@link android.media.MediaActionSound} to
properly indicate image capture or recording start/stop to the user.</p>

@see android.media.MediaActionSound
@see android.graphics.SurfaceTexture
@see android.view.TextureView
@param surfaceTexture the {@link SurfaceTexture} to which the preview
    images are to be sent or null to remove the current preview surface
    texture
@throws IOException if the method fails (for example, if the surface
    texture is unavailable or unsuitable)."
      end

      operation 3390348 "startPreview"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
	comment "Starts capturing and drawing preview frames to the screen.
Preview will not actually start until a surface is supplied
with {@link #setPreviewDisplay(SurfaceHolder)} or
{@link #setPreviewTexture(SurfaceTexture)}.

<p>If {@link #setPreviewCallback(Camera.PreviewCallback)},
{@link #setOneShotPreviewCallback(Camera.PreviewCallback)}, or
{@link #setPreviewCallbackWithBuffer(Camera.PreviewCallback)} were
called, {@link Camera.PreviewCallback#onPreviewFrame(byte[], Camera)}
will be called when preview data becomes available."
      end

      operation 3390476 "stopPreview"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Stops capturing and drawing preview frames to the surface, and
resets the camera for a future call to {@link #startPreview()}."
      end

      operation 3390604 "_stopPreview"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
      end

      operation 3390732 "previewEnabled"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
	comment "Return current preview state.

FIXME: Unhide before release
@hide"
      end

      operation 3390860 "setPreviewCallback"
	public explicit_return_type "void"
	nparams 1
	  param inout name "cb" type class_ref 817420 // PreviewCallback
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Installs a callback to be invoked for every preview frame in addition
to displaying them on the screen.  The callback will be repeatedly called
for as long as preview is active.  This method can be called at any time,
even while preview is live.  Any other preview callbacks are
overridden.</p>

<p>If you are using the preview data to create video or still images,
strongly consider using {@link android.media.MediaActionSound} to
properly indicate image capture or recording start/stop to the user.</p>

@param cb a callback object that receives a copy of each preview frame,
    or null to stop receiving callbacks.
@see android.media.MediaActionSound"
      end

      operation 3390988 "setOneShotPreviewCallback"
	public explicit_return_type "void"
	nparams 1
	  param inout name "cb" type class_ref 817420 // PreviewCallback
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Installs a callback to be invoked for the next preview frame in
addition to displaying it on the screen.  After one invocation, the
callback is cleared. This method can be called any time, even when
preview is live.  Any other preview callbacks are overridden.</p>

<p>If you are using the preview data to create video or still images,
strongly consider using {@link android.media.MediaActionSound} to
properly indicate image capture or recording start/stop to the user.</p>

@param cb a callback object that receives a copy of the next preview frame,
    or null to stop receiving callbacks.
@see android.media.MediaActionSound"
      end

      operation 3391116 "setHasPreviewCallback"
	private explicit_return_type "void"
	nparams 2
	  param inout name "installed" explicit_type "boolean"
	  param inout name "manualBuffer" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
      end

      operation 3391244 "setPreviewCallbackWithBuffer"
	public explicit_return_type "void"
	nparams 1
	  param inout name "cb" type class_ref 817420 // PreviewCallback
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Installs a callback to be invoked for every preview frame, using
buffers supplied with {@link #addCallbackBuffer(byte[])}, in addition to
displaying them on the screen.  The callback will be repeatedly called
for as long as preview is active and buffers are available.  Any other
preview callbacks are overridden.</p>

<p>The purpose of this method is to improve preview efficiency and frame
rate by allowing preview frame memory reuse.  You must call
{@link #addCallbackBuffer(byte[])} at some point -- before or after
calling this method -- or no callbacks will received.</p>

<p>The buffer queue will be cleared if this method is called with a null
callback, {@link #setPreviewCallback(Camera.PreviewCallback)} is called,
or {@link #setOneShotPreviewCallback(Camera.PreviewCallback)} is
called.</p>

<p>If you are using the preview data to create video or still images,
strongly consider using {@link android.media.MediaActionSound} to
properly indicate image capture or recording start/stop to the user.</p>

@param cb a callback object that receives a copy of the preview frame,
    or null to stop receiving callbacks and clear the buffer queue.
@see #addCallbackBuffer(byte[])
@see android.media.MediaActionSound"
      end

      operation 3391372 "addCallbackBuffer"
	public explicit_return_type "void"
	nparams 1
	  param inout name "callbackBuffer" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a pre-allocated buffer to the preview callback buffer queue.
Applications can add one or more buffers to the queue. When a preview
frame arrives and there is still at least one available buffer, the
buffer will be used and removed from the queue. Then preview callback is
invoked with the buffer. If a frame arrives and there is no buffer left,
the frame is discarded. Applications should add buffers back when they
finish processing the data in them.

<p>For formats besides YV12, the size of the buffer is determined by
multiplying the preview image width, height, and bytes per pixel. The
width and height can be read from
{@link Camera.Parameters#getPreviewSize()}. Bytes per pixel can be
computed from {@link android.graphics.ImageFormat#getBitsPerPixel(int)} /
8, using the image format from
{@link Camera.Parameters#getPreviewFormat()}.

<p>If using the {@link android.graphics.ImageFormat#YV12} format, the
size can be calculated using the equations listed in
{@link Camera.Parameters#setPreviewFormat}.

<p>This method is only necessary when
{@link #setPreviewCallbackWithBuffer(PreviewCallback)} is used. When
{@link #setPreviewCallback(PreviewCallback)} or
{@link #setOneShotPreviewCallback(PreviewCallback)} are used, buffers
are automatically allocated. When a supplied buffer is too small to
hold the preview frame data, preview callback will return null and
the buffer will be removed from the buffer queue.

@param callbackBuffer the buffer to add to the queue. The size of the
  buffer must match the values described above.
@see #setPreviewCallbackWithBuffer(PreviewCallback)"
      end

      operation 3391500 "addRawImageCallbackBuffer"
	public explicit_return_type "void"
	nparams 1
	  param inout name "callbackBuffer" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a pre-allocated buffer to the raw image callback buffer queue.
Applications can add one or more buffers to the queue. When a raw image
frame arrives and there is still at least one available buffer, the
buffer will be used to hold the raw image data and removed from the
queue. Then raw image callback is invoked with the buffer. If a raw
image frame arrives but there is no buffer left, the frame is
discarded. Applications should add buffers back when they finish
processing the data in them by calling this method again in order
to avoid running out of raw image callback buffers.

<p>The size of the buffer is determined by multiplying the raw image
width, height, and bytes per pixel. The width and height can be
read from {@link Camera.Parameters#getPictureSize()}. Bytes per pixel
can be computed from
{@link android.graphics.ImageFormat#getBitsPerPixel(int)} / 8,
using the image format from {@link Camera.Parameters#getPreviewFormat()}.

<p>This method is only necessary when the PictureCallbck for raw image
is used while calling {@link #takePicture(Camera.ShutterCallback,
Camera.PictureCallback, Camera.PictureCallback, Camera.PictureCallback)}.

<p>Please note that by calling this method, the mode for
application-managed callback buffers is triggered. If this method has
never been called, null will be returned by the raw image callback since
there is no image callback buffer available. Furthermore, When a supplied
buffer is too small to hold the raw image data, raw image callback will
return null and the buffer will be removed from the buffer queue.

@param callbackBuffer the buffer to add to the raw image callback buffer
    queue. The size should be width * height * (bits per pixel) / 8. An
    null callbackBuffer will be ignored and won't be added to the queue.

@see #takePicture(Camera.ShutterCallback,
Camera.PictureCallback, Camera.PictureCallback, Camera.PictureCallback)}.

{@hide}"
      end

      operation 3391628 "addCallbackBuffer"
	private explicit_return_type "void"
	nparams 2
	  param inout name "callbackBuffer" explicit_type "byte"
	  param in name "msgType" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3391756 "_addCallbackBuffer"
	private explicit_return_type "void"
	nparams 2
	  param inout name "callbackBuffer" explicit_type "byte"
	  param in name "msgType" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
      end

      operation 3392140 "postEventFromNative"
	class_operation private explicit_return_type "void"
	nparams 5
	  param inout name "camera_ref" explicit_type "Object"
	  param in name "what" explicit_type "int"
	  param in name "arg1" explicit_type "int"
	  param in name "arg2" explicit_type "int"
	  param inout name "obj" explicit_type "Object"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3392396 "autoFocus"
	public explicit_return_type "void"
	nparams 1
	  param inout name "cb" type class_ref 817548 // AutoFocusCallback
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Starts camera auto-focus and registers a callback function to run when
the camera is focused.  This method is only valid when preview is active
(between {@link #startPreview()} and before {@link #stopPreview()}).

<p>Callers should check
{@link android.hardware.Camera.Parameters#getFocusMode()} to determine if
this method should be called. If the camera does not support auto-focus,
it is a no-op and {@link AutoFocusCallback#onAutoFocus(boolean, Camera)}
callback will be called immediately.

<p>If your application should not be installed
on devices without auto-focus, you must declare that your application
uses auto-focus with the
<a href=\"{@docRoot}guide/topics/manifest/uses-feature-element.html\">&lt;uses-feature></a>
manifest element.</p>

<p>If the current flash mode is not
{@link android.hardware.Camera.Parameters#FLASH_MODE_OFF}, flash may be
fired during auto-focus, depending on the driver and camera hardware.<p>

<p>Auto-exposure lock {@link android.hardware.Camera.Parameters#getAutoExposureLock()}
and auto-white balance locks {@link android.hardware.Camera.Parameters#getAutoWhiteBalanceLock()}
do not change during and after autofocus. But auto-focus routine may stop
auto-exposure and auto-white balance transiently during focusing.

<p>Stopping preview with {@link #stopPreview()}, or triggering still
image capture with {@link #takePicture(Camera.ShutterCallback,
Camera.PictureCallback, Camera.PictureCallback)}, will not change the
the focus position. Applications must call cancelAutoFocus to reset the
focus.</p>

<p>If autofocus is successful, consider using
{@link android.media.MediaActionSound} to properly play back an autofocus
success sound to the user.</p>

@param cb the callback to run
@see #cancelAutoFocus()
@see android.hardware.Camera.Parameters#setAutoExposureLock(boolean)
@see android.hardware.Camera.Parameters#setAutoWhiteBalanceLock(boolean)
@see android.media.MediaActionSound"
      end

      operation 3392524 "native_autoFocus"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
      end

      operation 3392652 "cancelAutoFocus"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cancels any auto-focus function in progress.
Whether or not auto-focus is currently in progress,
this function will return the focus position to the default.
If the camera does not support auto-focus, this is a no-op.

@see #autoFocus(Camera.AutoFocusCallback)"
      end

      operation 3392780 "native_cancelAutoFocus"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
      end

      operation 3393036 "setAutoFocusMoveCallback"
	public explicit_return_type "void"
	nparams 1
	  param inout name "cb" type class_ref 817676 // AutoFocusMoveCallback
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets camera auto-focus move callback.

@param cb the callback to run"
      end

      operation 3393164 "enableFocusMoveCallback"
	private explicit_return_type "void"
	nparams 1
	  param in name "enable" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 3393548 "takePicture"
	public explicit_return_type "void"
	nparams 3
	  param inout name "shutter" type class_ref 817164 // ShutterCallback
	  param inout name "raw" type class_ref 817292 // PictureCallback
	  param inout name "jpeg" type class_ref 817292 // PictureCallback
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Equivalent to takePicture(shutter, raw, null, jpeg).

@see #takePicture(ShutterCallback, PictureCallback, PictureCallback, PictureCallback)"
      end

      operation 3393676 "native_takePicture"
	private explicit_return_type "void"
	nparams 1
	  param in name "msgType" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 3393804 "takePicture"
	public explicit_return_type "void"
	nparams 4
	  param inout name "shutter" type class_ref 817164 // ShutterCallback
	  param inout name "raw" type class_ref 817292 // PictureCallback
	  param inout name "postview" type class_ref 817292 // PictureCallback
	  param inout name "jpeg" type class_ref 817292 // PictureCallback
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Triggers an asynchronous image capture. The camera service will initiate
a series of callbacks to the application as the image capture progresses.
The shutter callback occurs after the image is captured. This can be used
to trigger a sound to let the user know that image has been captured. The
raw callback occurs when the raw image data is available (NOTE: the data
will be null if there is no raw image callback buffer available or the
raw image callback buffer is not large enough to hold the raw image).
The postview callback occurs when a scaled, fully processed postview
image is available (NOTE: not all hardware supports this). The jpeg
callback occurs when the compressed image is available. If the
application does not need a particular callback, a null can be passed
instead of a callback method.

<p>This method is only valid when preview is active (after
{@link #startPreview()}).  Preview will be stopped after the image is
taken; callers must call {@link #startPreview()} again if they want to
re-start preview or take more pictures. This should not be called between
{@link android.media.MediaRecorder#start()} and
{@link android.media.MediaRecorder#stop()}.

<p>After calling this method, you must not call {@link #startPreview()}
or take another picture until the JPEG callback has returned.

@param shutter   the callback for image capture moment, or null
@param raw       the callback for raw (uncompressed) image data, or null
@param postview  callback with postview image data, may be null
@param jpeg      the callback for JPEG image data, or null"
      end

      operation 3393932 "startSmoothZoom"
	public explicit_return_type "void"
	nparams 1
	  param in name "value" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
	comment "Zooms to the requested value smoothly. The driver will notify {@link
OnZoomChangeListener} of the zoom value and whether zoom is stopped at
the time. For example, suppose the current zoom is 0 and startSmoothZoom
is called with value 3. The
{@link Camera.OnZoomChangeListener#onZoomChange(int, boolean, Camera)}
method will be called three times with zoom values 1, 2, and 3.
Applications can call {@link #stopSmoothZoom} to stop the zoom earlier.
Applications should not call startSmoothZoom again or change the zoom
value before zoom stops. If the supplied zoom value equals to the current
zoom value, no zoom callback will be generated. This method is supported
if {@link android.hardware.Camera.Parameters#isSmoothZoomSupported}
returns true.

@param value zoom value. The valid range is 0 to {@link
             android.hardware.Camera.Parameters#getMaxZoom}.
@throws IllegalArgumentException if the zoom value is invalid.
@throws RuntimeException if the method fails.
@see #setZoomChangeListener(OnZoomChangeListener)"
      end

      operation 3394060 "stopSmoothZoom"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
	comment "Stops the smooth zoom. Applications should wait for the {@link
OnZoomChangeListener} to know when the zoom is actually stopped. This
method is supported if {@link
android.hardware.Camera.Parameters#isSmoothZoomSupported} is true.

@throws RuntimeException if the method fails."
      end

      operation 3394188 "setDisplayOrientation"
	public explicit_return_type "void"
	nparams 1
	  param in name "degrees" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
	comment "Set the clockwise rotation of preview display in degrees. This affects
the preview frames and the picture displayed after snapshot. This method
is useful for portrait mode applications. Note that preview display of
front-facing cameras is flipped horizontally before the rotation, that
is, the image is reflected along the central vertical axis of the camera
sensor. So the users can see themselves as looking into a mirror.

<p>This does not affect the order of byte array passed in {@link
PreviewCallback#onPreviewFrame}, JPEG pictures, or recorded videos. This
method is not allowed to be called during preview.

<p>If you want to make the camera image show in the same orientation as
the display, you can use the following code.
<pre>
public static void setCameraDisplayOrientation(Activity activity,
        int cameraId, android.hardware.Camera camera) {
    android.hardware.Camera.CameraInfo info =
            new android.hardware.Camera.CameraInfo();
    android.hardware.Camera.getCameraInfo(cameraId, info);
    int rotation = activity.getWindowManager().getDefaultDisplay()
            .getRotation();
    int degrees = 0;
    switch (rotation) {
        case Surface.ROTATION_0: degrees = 0; break;
        case Surface.ROTATION_90: degrees = 90; break;
        case Surface.ROTATION_180: degrees = 180; break;
        case Surface.ROTATION_270: degrees = 270; break;
    }

    int result;
    if (info.facing == Camera.CameraInfo.CAMERA_FACING_FRONT) {
        result = (info.orientation + degrees) % 360;
        result = (360 - result) % 360;  // compensate the mirror
    } else {  // back-facing
        result = (info.orientation - degrees + 360) % 360;
    }
    camera.setDisplayOrientation(result);
}
</pre>

<p>Starting from API level 14, this method can be called when preview is
active.

@param degrees the angle that the picture will be rotated clockwise.
               Valid values are 0, 90, 180, and 270. The starting
               position is 0 (landscape).
@see #setPreviewDisplay(SurfaceHolder)"
      end

      operation 3394316 "enableShutterSound"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "enabled" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Enable or disable the default shutter sound when taking a picture.</p>

<p>By default, the camera plays the system-defined camera shutter sound
when {@link #takePicture} is called. Using this method, the shutter sound
can be disabled. It is strongly recommended that an alternative shutter
sound is played in the {@link ShutterCallback} when the system shutter
sound is disabled.</p>

<p>Note that devices may not always allow disabling the camera shutter
sound. If the shutter sound state cannot be set to the desired value,
this method will return false. {@link CameraInfo#canDisableShutterSound}
can be used to determine whether the device will allow the shutter sound
to be disabled.</p>

@param enabled whether the camera should play the system shutter sound
               when {@link #takePicture takePicture} is called.
@return {@code true} if the shutter sound state was successfully
        changed. {@code false} if the shutter sound state could not be
        changed. {@code true} is also returned if shutter sound playback
        is already set to the requested state.
@see #takePicture
@see CameraInfo#canDisableShutterSound
@see ShutterCallback"
      end

      operation 3394444 "_enableShutterSound"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "enabled" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 3394700 "setZoomChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 817804 // OnZoomChangeListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Registers a listener to be notified when the zoom value is updated by the
camera driver during smooth zoom.

@param listener the listener to notify
@see #startSmoothZoom(int)"
      end

      class 818444 "Face"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 3395596 "Face"
	  public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Create an empty face."
	end

	classrelation 1664268 // rect (<unidirectional association>)
	  relation 1664268 --->
	    a role_name "rect" public
	      comment "
Bounds of the face. (-1000, -1000) represents the top-left of the
camera field of view, and (1000, 1000) represents the bottom-right of
the field of view. For example, suppose the size of the viewfinder UI
is 800x480. The rect passed from the driver is (-1000, -1000, 0, 0).
The corresponding viewfinder rect should be (0, 0, 400, 240). It is
guaranteed left < right and top < bottom. The coordinates can be
smaller than -1000 or bigger than 1000. But at least one vertex will
be within (-1000, -1000) and (1000, 1000).

<p>The direction is relative to the sensor orientation, that is, what
the sensor sees. The direction is not affected by the rotation or
mirroring of {@link #setDisplayOrientation(int)}. The face bounding
rectangle does not provide any information about face orientation.</p>

<p>Here is the matrix to convert driver coordinates to View coordinates
in pixels.</p>
<pre>
Matrix matrix = new Matrix();
CameraInfo info = CameraHolder.instance().getCameraInfo()[cameraId];
// Need mirror for front camera.
boolean mirror = (info.facing == CameraInfo.CAMERA_FACING_FRONT);
matrix.setScale(mirror ? -1 : 1, 1);
// This is the value for android.hardware.Camera.setDisplayOrientation.
matrix.postRotate(displayOrientation);
// Camera driver coordinates range from (-1000, -1000) to (1000, 1000).
// UI coordinates range from (0, 0) to (width, height).
matrix.postScale(view.getWidth() / 2000f, view.getHeight() / 2000f);
matrix.postTranslate(view.getWidth() / 2f, view.getHeight() / 2f);
</pre>

@see #startFaceDetection()

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1664268 // rect (<unidirectional association>)
	    b parent class_ref 694924 // Rect
	end

	attribute 2498828 "score"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "<p>The confidence level for the detection of the face. The range is 1 to
100. 100 is the highest confidence.</p>

<p>Depending on the device, even very low-confidence faces may be
listed, so applications should filter out faces with low confidence,
depending on the use case. For a typical point-and-shoot camera
application that wishes to display rectangles around detected faces,
filtering out faces with confidence less than 50 is recommended.</p>

@see #startFaceDetection()
"
	end

	attribute 2498956 "id"
	  public explicit_type "int"
	  init_value " -1"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "An unique id per face while the face is visible to the tracker. If
the face leaves the field-of-view and comes back, it will get a new
id. This is an optional field, may not be supported on all devices.
If not supported, id will always be set to -1. The optional fields
are supported as a set. Either they are all valid, or none of them
are.
"
	end

	classrelation 1664396 // leftEye (<unidirectional association>)
	  relation 1664396 --->
	    a role_name "leftEye" init_value " null" public
	      comment "
The coordinates of the center of the left eye. The coordinates are in
the same space as the ones for {@link #rect}. This is an optional
field, may not be supported on all devices. If not supported, the
value will always be set to null. The optional fields are supported
as a set. Either they are all valid, or none of them are.

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1664396 // leftEye (<unidirectional association>)
	    b parent class_ref 703372 // Point
	end

	classrelation 1664524 // rightEye (<unidirectional association>)
	  relation 1664524 --->
	    a role_name "rightEye" init_value " null" public
	      comment "
The coordinates of the center of the right eye. The coordinates are
in the same space as the ones for {@link #rect}.This is an optional
field, may not be supported on all devices. If not supported, the
value will always be set to null. The optional fields are supported
as a set. Either they are all valid, or none of them are.

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1664524 // rightEye (<unidirectional association>)
	    b parent class_ref 703372 // Point
	end

	classrelation 1664652 // mouth (<unidirectional association>)
	  relation 1664652 --->
	    a role_name "mouth" init_value " null" public
	      comment "
The coordinates of the center of the mouth.  The coordinates are in
the same space as the ones for {@link #rect}. This is an optional
field, may not be supported on all devices. If not supported, the
value will always be set to null. The optional fields are supported
as a set. Either they are all valid, or none of them are.

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1664652 // mouth (<unidirectional association>)
	    b parent class_ref 703372 // Point
	end
      end

      operation 3394956 "setFaceDetectionListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 817932 // FaceDetectionListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Registers a listener to be notified about the faces detected in the
preview frame.

@param listener the listener to notify
@see #startFaceDetection()"
      end

      operation 3395084 "startFaceDetection"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Starts the face detection. This should be called after preview is started.
The camera will notify {@link FaceDetectionListener} of the detected
faces in the preview frame. The detected faces may be the same as the
previous ones. Applications should call {@link #stopFaceDetection} to
stop the face detection. This method is supported if {@link
Parameters#getMaxNumDetectedFaces()} returns a number larger than 0.
If the face detection has started, apps should not call this again.

<p>When the face detection is running, {@link Parameters#setWhiteBalance(String)},
{@link Parameters#setFocusAreas(List)}, and {@link Parameters#setMeteringAreas(List)}
have no effect. The camera uses the detected faces to do auto-white balance,
auto exposure, and autofocus.

<p>If the apps call {@link #autoFocus(AutoFocusCallback)}, the camera
will stop sending face callbacks. The last face callback indicates the
areas used to do autofocus. After focus completes, face detection will
resume sending face callbacks. If the apps call {@link
#cancelAutoFocus()}, the face callbacks will also resume.</p>

<p>After calling {@link #takePicture(Camera.ShutterCallback, Camera.PictureCallback,
Camera.PictureCallback)} or {@link #stopPreview()}, and then resuming
preview with {@link #startPreview()}, the apps should call this method
again to resume face detection.</p>

@throws IllegalArgumentException if the face detection is unsupported.
@throws RuntimeException if the method fails or the face detection is
        already running.
@see FaceDetectionListener
@see #stopFaceDetection()
@see Parameters#getMaxNumDetectedFaces()"
      end

      operation 3395212 "stopFaceDetection"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Stops the face detection.

@see #startFaceDetection()"
      end

      operation 3395340 "_startFaceDetection"
	private explicit_return_type "void"
	nparams 1
	  param in name "type" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 3395468 "_stopFaceDetection"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
      end

      attribute 2499084 "CAMERA_ERROR_UNKNOWN"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Error codes match the enum in include/ui/Camera.h

Unspecified camera error.
@see Camera.ErrorCallback
"
      end

      attribute 2499212 "CAMERA_ERROR_SERVER_DIED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 100"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Media server died. In this case, the application must release the
Camera object and instantiate a new one.
@see Camera.ErrorCallback
"
      end

      operation 3395852 "setErrorCallback"
	public explicit_return_type "void"
	nparams 1
	  param inout name "cb" type class_ref 818060 // ErrorCallback
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Registers a callback to be invoked when an error occurs.
@param cb The callback to run"
      end

      operation 3395980 "native_setParameters"
	private explicit_return_type "void"
	nparams 1
	  param in name "params" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 3396108 "native_getParameters"
	private explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
      end

      operation 3396236 "setParameters"
	public explicit_return_type "void"
	nparams 1
	  param inout name "params" type class_ref 818572 // Parameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Changes the settings for this Camera service.

@param params the Parameters to use for this Camera service
@throws RuntimeException if any parameter is invalid or not supported.
@see #getParameters()"
      end

      class 818572 "Parameters"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 2499724 "KEY_PREVIEW_SIZE"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"preview-size\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Parameter keys to communicate with the camera driver."
	end

	attribute 2499852 "KEY_PREVIEW_FORMAT"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"preview-format\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2499980 "KEY_PREVIEW_FRAME_RATE"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"preview-frame-rate\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2500108 "KEY_PREVIEW_FPS_RANGE"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"preview-fps-range\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2500236 "KEY_PICTURE_SIZE"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"picture-size\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2500364 "KEY_PICTURE_FORMAT"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"picture-format\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2500492 "KEY_JPEG_THUMBNAIL_SIZE"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"jpeg-thumbnail-size\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2500620 "KEY_JPEG_THUMBNAIL_WIDTH"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"jpeg-thumbnail-width\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2500748 "KEY_JPEG_THUMBNAIL_HEIGHT"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"jpeg-thumbnail-height\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2500876 "KEY_JPEG_THUMBNAIL_QUALITY"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"jpeg-thumbnail-quality\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2501004 "KEY_JPEG_QUALITY"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"jpeg-quality\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2501132 "KEY_ROTATION"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"rotation\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2501260 "KEY_GPS_LATITUDE"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"gps-latitude\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2501388 "KEY_GPS_LONGITUDE"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"gps-longitude\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2501516 "KEY_GPS_ALTITUDE"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"gps-altitude\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2501644 "KEY_GPS_TIMESTAMP"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"gps-timestamp\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2501772 "KEY_GPS_PROCESSING_METHOD"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"gps-processing-method\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2501900 "KEY_WHITE_BALANCE"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"whitebalance\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2502028 "KEY_EFFECT"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"effect\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2502156 "KEY_ANTIBANDING"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"antibanding\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2502284 "KEY_SCENE_MODE"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"scene-mode\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2502412 "KEY_FLASH_MODE"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"flash-mode\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2502540 "KEY_FOCUS_MODE"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"focus-mode\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2502668 "KEY_FOCUS_AREAS"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"focus-areas\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2502796 "KEY_MAX_NUM_FOCUS_AREAS"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"max-num-focus-areas\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2502924 "KEY_FOCAL_LENGTH"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"focal-length\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2503052 "KEY_HORIZONTAL_VIEW_ANGLE"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"horizontal-view-angle\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2503180 "KEY_VERTICAL_VIEW_ANGLE"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"vertical-view-angle\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2503308 "KEY_EXPOSURE_COMPENSATION"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"exposure-compensation\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2503436 "KEY_MAX_EXPOSURE_COMPENSATION"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"max-exposure-compensation\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2503564 "KEY_MIN_EXPOSURE_COMPENSATION"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"min-exposure-compensation\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2503692 "KEY_EXPOSURE_COMPENSATION_STEP"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"exposure-compensation-step\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2503820 "KEY_AUTO_EXPOSURE_LOCK"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"auto-exposure-lock\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2503948 "KEY_AUTO_EXPOSURE_LOCK_SUPPORTED"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"auto-exposure-lock-supported\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2504076 "KEY_AUTO_WHITEBALANCE_LOCK"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"auto-whitebalance-lock\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2504204 "KEY_AUTO_WHITEBALANCE_LOCK_SUPPORTED"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"auto-whitebalance-lock-supported\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2504332 "KEY_METERING_AREAS"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"metering-areas\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2504460 "KEY_MAX_NUM_METERING_AREAS"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"max-num-metering-areas\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2504588 "KEY_ZOOM"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"zoom\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2504716 "KEY_MAX_ZOOM"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"max-zoom\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2504844 "KEY_ZOOM_RATIOS"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"zoom-ratios\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2504972 "KEY_ZOOM_SUPPORTED"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"zoom-supported\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2505100 "KEY_SMOOTH_ZOOM_SUPPORTED"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"smooth-zoom-supported\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2505228 "KEY_FOCUS_DISTANCES"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"focus-distances\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2505356 "KEY_VIDEO_SIZE"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"video-size\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2505484 "KEY_PREFERRED_PREVIEW_SIZE_FOR_VIDEO"
	  class_attribute const_attribute private explicit_type "String"
	  init_value "
                                            \"preferred-preview-size-for-video\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2505612 "KEY_MAX_NUM_DETECTED_FACES_HW"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"max-num-detected-faces-hw\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2505740 "KEY_MAX_NUM_DETECTED_FACES_SW"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"max-num-detected-faces-sw\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2505868 "KEY_RECORDING_HINT"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"recording-hint\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2505996 "KEY_VIDEO_SNAPSHOT_SUPPORTED"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"video-snapshot-supported\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2506124 "KEY_VIDEO_STABILIZATION"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"video-stabilization\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2506252 "KEY_VIDEO_STABILIZATION_SUPPORTED"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"video-stabilization-supported\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2506380 "SUPPORTED_VALUES_SUFFIX"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"-values\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Parameter key suffix for supported values."
	end

	attribute 2506508 "TRUE"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"true\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2506636 "FALSE"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"false\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2506764 "WHITE_BALANCE_AUTO"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"auto\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Values for white balance settings."
	end

	attribute 2506892 "WHITE_BALANCE_INCANDESCENT"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"incandescent\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2507020 "WHITE_BALANCE_FLUORESCENT"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"fluorescent\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2507148 "WHITE_BALANCE_WARM_FLUORESCENT"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"warm-fluorescent\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2507276 "WHITE_BALANCE_DAYLIGHT"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"daylight\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2507404 "WHITE_BALANCE_CLOUDY_DAYLIGHT"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"cloudy-daylight\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2507532 "WHITE_BALANCE_TWILIGHT"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"twilight\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2507660 "WHITE_BALANCE_SHADE"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"shade\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2507788 "EFFECT_NONE"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"none\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Values for color effect settings."
	end

	attribute 2507916 "EFFECT_MONO"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"mono\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2508044 "EFFECT_NEGATIVE"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"negative\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2508172 "EFFECT_SOLARIZE"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"solarize\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2508300 "EFFECT_SEPIA"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"sepia\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2508428 "EFFECT_POSTERIZE"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"posterize\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2508556 "EFFECT_WHITEBOARD"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"whiteboard\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2508684 "EFFECT_BLACKBOARD"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"blackboard\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2508812 "EFFECT_AQUA"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"aqua\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2508940 "ANTIBANDING_AUTO"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"auto\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Values for antibanding settings."
	end

	attribute 2509068 "ANTIBANDING_50HZ"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"50hz\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2509196 "ANTIBANDING_60HZ"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"60hz\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2509324 "ANTIBANDING_OFF"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"off\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2509452 "FLASH_MODE_OFF"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"off\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Values for flash mode settings.

Flash will not be fired.
"
	end

	attribute 2509580 "FLASH_MODE_AUTO"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"auto\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "Flash will be fired automatically when required. The flash may be fired
during preview, auto-focus, or snapshot depending on the driver.
"
	end

	attribute 2509708 "FLASH_MODE_ON"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"on\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "Flash will always be fired during snapshot. The flash may also be
fired during preview or auto-focus depending on the driver.
"
	end

	attribute 2509836 "FLASH_MODE_RED_EYE"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"red-eye\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "Flash will be fired in red-eye reduction mode.
"
	end

	attribute 2509964 "FLASH_MODE_TORCH"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"torch\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "Constant emission of light during preview, auto-focus and snapshot.
This can also be used for video recording.
"
	end

	attribute 2510092 "SCENE_MODE_AUTO"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"auto\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "Scene mode is off.
"
	end

	attribute 2510220 "SCENE_MODE_ACTION"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"action\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "Take photos of fast moving objects. Same as {@link
#SCENE_MODE_SPORTS}.
"
	end

	attribute 2510348 "SCENE_MODE_PORTRAIT"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"portrait\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "Take people pictures.
"
	end

	attribute 2510476 "SCENE_MODE_LANDSCAPE"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"landscape\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "Take pictures on distant objects.
"
	end

	attribute 2510604 "SCENE_MODE_NIGHT"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"night\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "Take photos at night.
"
	end

	attribute 2510732 "SCENE_MODE_NIGHT_PORTRAIT"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"night-portrait\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "Take people pictures at night.
"
	end

	attribute 2510860 "SCENE_MODE_THEATRE"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"theatre\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "Take photos in a theater. Flash light is off.
"
	end

	attribute 2510988 "SCENE_MODE_BEACH"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"beach\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "Take pictures on the beach.
"
	end

	attribute 2511116 "SCENE_MODE_SNOW"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"snow\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "Take pictures on the snow.
"
	end

	attribute 2511244 "SCENE_MODE_SUNSET"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"sunset\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "Take sunset photos.
"
	end

	attribute 2511372 "SCENE_MODE_STEADYPHOTO"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"steadyphoto\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "Avoid blurry pictures (for example, due to hand shake).
"
	end

	attribute 2511500 "SCENE_MODE_FIREWORKS"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"fireworks\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "For shooting firework displays.
"
	end

	attribute 2511628 "SCENE_MODE_SPORTS"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"sports\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "Take photos of fast moving objects. Same as {@link
#SCENE_MODE_ACTION}.
"
	end

	attribute 2511756 "SCENE_MODE_PARTY"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"party\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "Take indoor low-light shot.
"
	end

	attribute 2511884 "SCENE_MODE_CANDLELIGHT"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"candlelight\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "Capture the naturally warm color of scenes lit by candles.
"
	end

	attribute 2512012 "SCENE_MODE_BARCODE"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"barcode\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "Applications are looking for a barcode. Camera driver will be
optimized for barcode reading.
"
	end

	attribute 2512140 "SCENE_MODE_HDR"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"hdr\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "Capture a scene using high dynamic range imaging techniques. The
camera will return an image that has an extended dynamic range
compared to a regular capture. Capturing such an image may take
longer than a regular capture.
"
	end

	attribute 2512268 "FOCUS_MODE_AUTO"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"auto\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "Auto-focus mode. Applications should call {@link
#autoFocus(AutoFocusCallback)} to start the focus in this mode.
"
	end

	attribute 2512396 "FOCUS_MODE_INFINITY"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"infinity\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "Focus is set at infinity. Applications should not call
{@link #autoFocus(AutoFocusCallback)} in this mode.
"
	end

	attribute 2512524 "FOCUS_MODE_MACRO"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"macro\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "Macro (close-up) focus mode. Applications should call
{@link #autoFocus(AutoFocusCallback)} to start the focus in this
mode.
"
	end

	attribute 2512652 "FOCUS_MODE_FIXED"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"fixed\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "Focus is fixed. The camera is always in this mode if the focus is not
adjustable. If the camera has auto-focus, this mode can fix the
focus, which is usually at hyperfocal distance. Applications should
not call {@link #autoFocus(AutoFocusCallback)} in this mode.
"
	end

	attribute 2512780 "FOCUS_MODE_EDOF"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"edof\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "Extended depth of field (EDOF). Focusing is done digitally and
continuously. Applications should not call {@link
#autoFocus(AutoFocusCallback)} in this mode.
"
	end

	attribute 2512908 "FOCUS_MODE_CONTINUOUS_VIDEO"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"continuous-video\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "Continuous auto focus mode intended for video recording. The camera
continuously tries to focus. This is the best choice for video
recording because the focus changes smoothly . Applications still can
call {@link #takePicture(Camera.ShutterCallback,
Camera.PictureCallback, Camera.PictureCallback)} in this mode but the
subject may not be in focus. Auto focus starts when the parameter is
set.

<p>Since API level 14, applications can call {@link
#autoFocus(AutoFocusCallback)} in this mode. The focus callback will
immediately return with a boolean that indicates whether the focus is
sharp or not. The focus position is locked after autoFocus call. If
applications want to resume the continuous focus, cancelAutoFocus
must be called. Restarting the preview will not resume the continuous
autofocus. To stop continuous focus, applications should change the
focus mode to other modes.

@see #FOCUS_MODE_CONTINUOUS_PICTURE
"
	end

	attribute 2513036 "FOCUS_MODE_CONTINUOUS_PICTURE"
	  class_attribute const_attribute public explicit_type "String"
	  init_value " \"continuous-picture\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "Continuous auto focus mode intended for taking pictures. The camera
continuously tries to focus. The speed of focus change is more
aggressive than {@link #FOCUS_MODE_CONTINUOUS_VIDEO}. Auto focus
starts when the parameter is set.

<p>Applications can call {@link #autoFocus(AutoFocusCallback)} in
this mode. If the autofocus is in the middle of scanning, the focus
callback will return when it completes. If the autofocus is not
scanning, the focus callback will immediately return with a boolean
that indicates whether the focus is sharp or not. The apps can then
decide if they want to take a picture immediately or to change the
focus mode to auto, and run a full autofocus cycle. The focus
position is locked after autoFocus call. If applications want to
resume the continuous focus, cancelAutoFocus must be called.
Restarting the preview will not resume the continuous autofocus. To
stop continuous focus, applications should change the focus mode to
other modes.

@see #FOCUS_MODE_CONTINUOUS_VIDEO
"
	end

	attribute 2513164 "FOCUS_DISTANCE_NEAR_INDEX"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 0"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Indices for focus distance array.

The array index of near focus distance for use with
{@link #getFocusDistances(float[])}.
"
	end

	attribute 2513292 "FOCUS_DISTANCE_OPTIMAL_INDEX"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 1"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "The array index of optimal focus distance for use with
{@link #getFocusDistances(float[])}.
"
	end

	attribute 2513420 "FOCUS_DISTANCE_FAR_INDEX"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 2"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "The array index of far focus distance for use with
{@link #getFocusDistances(float[])}.
"
	end

	attribute 2513548 "PREVIEW_FPS_MIN_INDEX"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 0"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "The array index of minimum preview fps for use with {@link
#getPreviewFpsRange(int[])} or {@link
#getSupportedPreviewFpsRange()}.
"
	end

	attribute 2513676 "PREVIEW_FPS_MAX_INDEX"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 1"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "The array index of maximum preview fps for use with {@link
#getPreviewFpsRange(int[])} or {@link
#getSupportedPreviewFpsRange()}.
"
	end

	attribute 2513804 "PIXEL_FORMAT_YUV422SP"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"yuv422sp\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Formats for setPreviewFormat and setPictureFormat."
	end

	attribute 2513932 "PIXEL_FORMAT_YUV420SP"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"yuv420sp\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2514060 "PIXEL_FORMAT_YUV422I"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"yuv422i-yuyv\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2514188 "PIXEL_FORMAT_YUV420P"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"yuv420p\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2514316 "PIXEL_FORMAT_RGB565"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"rgb565\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2514444 "PIXEL_FORMAT_JPEG"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"jpeg\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2514572 "PIXEL_FORMAT_BAYER_RGGB"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"bayer-rggb\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2514700 "mMap"
	  private explicit_type "String, String"
	  stereotype "HashMap"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 3397260 "Parameters"
	  private explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3397388 "dump"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Writes the current Parameters to the log.
@hide
@deprecated"
	end

	operation 3397516 "flatten"
	  public explicit_return_type "String"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Creates a single string with all the parameters set in
this Parameters object.
<p>The {@link #unflatten(String)} method does the reverse.</p>

@return a String with all values from this Parameters object, in
        semi-colon delimited key-value pairs"
	end

	operation 3397644 "unflatten"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "flattened" explicit_type "String"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Takes a flattened string of parameters and adds each one to
this Parameters object.
<p>The {@link #flatten()} method does the reverse.</p>

@param flattened a String of parameters (key-value paired) that
                 are semi-colon delimited"
	end

	operation 3397772 "remove"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "key" explicit_type "String"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3397900 "set"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "key" explicit_type "String"
	    param in name "value" explicit_type "String"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets a String parameter.

@param key   the key name for the parameter
@param value the String value of the parameter"
	end

	operation 3398028 "set"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "key" explicit_type "String"
	    param in name "value" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets an integer parameter.

@param key   the key name for the parameter
@param value the int value of the parameter"
	end

	operation 3398156 "set"
	  private explicit_return_type "void"
	  nparams 2
	    param in name "key" explicit_type "String"
	    param inout name "areas" explicit_type "List<Area>"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3398284 "get"
	  public explicit_return_type "String"
	  nparams 1
	    param in name "key" explicit_type "String"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the value of a String parameter.

@param key the key name for the parameter
@return the String value of the parameter"
	end

	operation 3398412 "getInt"
	  public explicit_return_type "int"
	  nparams 1
	    param in name "key" explicit_type "String"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the value of an integer parameter.

@param key the key name for the parameter
@return the int value of the parameter"
	end

	operation 3398540 "setPreviewSize"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "width" explicit_type "int"
	    param in name "height" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the dimensions for preview pictures. If the preview has already
started, applications should stop the preview first before changing
preview size.

The sides of width and height are based on camera orientation. That
is, the preview size is the size before it is rotated by display
orientation. So applications need to consider the display orientation
while setting preview size. For example, suppose the camera supports
both 480x320 and 320x480 preview sizes. The application wants a 3:2
preview ratio. If the display orientation is set to 0 or 180, preview
size should be set to 480x320. If the display orientation is set to
90 or 270, preview size should be set to 320x480. The display
orientation should also be considered while setting picture size and
thumbnail size.

@param width  the width of the pictures, in pixels
@param height the height of the pictures, in pixels
@see #setDisplayOrientation(int)
@see #getCameraInfo(int, CameraInfo)
@see #setPictureSize(int, int)
@see #setJpegThumbnailSize(int, int)"
	end

	operation 3398668 "getPreviewSize"
	  public return_type class_ref 818700 // Size
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the dimensions setting for preview pictures.

@return a Size object with the width and height setting
         for the preview picture"
	end

	operation 3398796 "getSupportedPreviewSizes"
	  public return_type class_ref 818700 // Size
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the supported preview sizes.

@return a list of Size object. This method will always return a list
        with at least one element."
	end

	operation 3398924 "getSupportedVideoSizes"
	  public return_type class_ref 818700 // Size
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "<p>Gets the supported video frame sizes that can be used by
MediaRecorder.</p>

<p>If the returned list is not null, the returned list will contain at
least one Size and one of the sizes in the returned list must be
passed to MediaRecorder.setVideoSize() for camcorder application if
camera is used as the video source. In this case, the size of the
preview can be different from the resolution of the recorded video
during video recording.</p>

@return a list of Size object if camera has separate preview and
        video output; otherwise, null is returned.
@see #getPreferredPreviewSizeForVideo()"
	end

	operation 3399052 "getPreferredPreviewSizeForVideo"
	  public return_type class_ref 818700 // Size
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the preferred or recommended preview size (width and height)
in pixels for video recording. Camcorder applications should
set the preview size to a value that is not larger than the
preferred preview size. In other words, the product of the width
and height of the preview size should not be larger than that of
the preferred preview size. In addition, we recommend to choose a
preview size that has the same aspect ratio as the resolution of
video to be recorded.

@return the preferred preview size (width and height) in pixels for
        video recording if getSupportedVideoSizes() does not return
        null; otherwise, null is returned.
@see #getSupportedVideoSizes()"
	end

	operation 3399180 "setJpegThumbnailSize"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "width" explicit_type "int"
	    param in name "height" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "<p>Sets the dimensions for EXIF thumbnail in Jpeg picture. If
applications set both width and height to 0, EXIF will not contain
thumbnail.</p>

<p>Applications need to consider the display orientation. See {@link
#setPreviewSize(int,int)} for reference.</p>

@param width  the width of the thumbnail, in pixels
@param height the height of the thumbnail, in pixels
@see #setPreviewSize(int,int)"
	end

	operation 3399308 "getJpegThumbnailSize"
	  public return_type class_ref 818700 // Size
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the dimensions for EXIF thumbnail in Jpeg picture.

@return a Size object with the height and width setting for the EXIF
        thumbnails"
	end

	operation 3399436 "getSupportedJpegThumbnailSizes"
	  public return_type class_ref 818700 // Size
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the supported jpeg thumbnail sizes.

@return a list of Size object. This method will always return a list
        with at least two elements. Size 0,0 (no thumbnail) is always
        supported."
	end

	operation 3399564 "setJpegThumbnailQuality"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "quality" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the quality of the EXIF thumbnail in Jpeg picture.

@param quality the JPEG quality of the EXIF thumbnail. The range is 1
               to 100, with 100 being the best."
	end

	operation 3399692 "getJpegThumbnailQuality"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the quality setting for the EXIF thumbnail in Jpeg picture.

@return the JPEG quality setting of the EXIF thumbnail."
	end

	operation 3399820 "setJpegQuality"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "quality" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets Jpeg quality of captured picture.

@param quality the JPEG quality of captured picture. The range is 1
               to 100, with 100 being the best."
	end

	operation 3399948 "getJpegQuality"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the quality setting for the JPEG picture.

@return the JPEG picture quality setting."
	end

	operation 3400076 "setPreviewFrameRate"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "fps" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Deprecated
"
	  
	  
	  
	  comment "Sets the rate at which preview frames are received. This is the
target frame rate. The actual frame rate depends on the driver.

@param fps the frame rate (frames per second)
@deprecated replaced by {@link #setPreviewFpsRange(int,int)}"
	end

	operation 3400204 "getPreviewFrameRate"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Deprecated
"
	  
	  
	  
	  comment "Returns the setting for the rate at which preview frames are
received. This is the target frame rate. The actual frame rate
depends on the driver.

@return the frame rate setting (frames per second)
@deprecated replaced by {@link #getPreviewFpsRange(int[])}"
	end

	operation 3400332 "getSupportedPreviewFrameRates"
	  public explicit_return_type "List<Integer>"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Deprecated
"
	  
	  
	  
	  comment "Gets the supported preview frame rates.

@return a list of supported preview frame rates. null if preview
        frame rate setting is not supported.
@deprecated replaced by {@link #getSupportedPreviewFpsRange()}"
	end

	operation 3400460 "setPreviewFpsRange"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "min" explicit_type "int"
	    param in name "max" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the maximum and maximum preview fps. This controls the rate of
preview frames received in {@link PreviewCallback}. The minimum and
maximum preview fps must be one of the elements from {@link
#getSupportedPreviewFpsRange}.

@param min the minimum preview fps (scaled by 1000).
@param max the maximum preview fps (scaled by 1000).
@throws RuntimeException if fps range is invalid.
@see #setPreviewCallbackWithBuffer(Camera.PreviewCallback)
@see #getSupportedPreviewFpsRange()"
	end

	operation 3400588 "getPreviewFpsRange"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "range" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the current minimum and maximum preview fps. The values are
one of the elements returned by {@link #getSupportedPreviewFpsRange}.

@return range the minimum and maximum preview fps (scaled by 1000).
@see #PREVIEW_FPS_MIN_INDEX
@see #PREVIEW_FPS_MAX_INDEX
@see #getSupportedPreviewFpsRange()"
	end

	operation 3400716 "getSupportedPreviewFpsRange"
	  public explicit_return_type "List<int[]>"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the supported preview fps (frame-per-second) ranges. Each range
contains a minimum fps and maximum fps. If minimum fps equals to
maximum fps, the camera outputs frames in fixed frame rate. If not,
the camera outputs frames in auto frame rate. The actual frame rate
fluctuates between the minimum and the maximum. The values are
multiplied by 1000 and represented in integers. For example, if frame
rate is 26.623 frames per second, the value is 26623.

@return a list of supported preview fps ranges. This method returns a
        list with at least one element. Every element is an int array
        of two values - minimum fps and maximum fps. The list is
        sorted from small to large (first by maximum fps and then
        minimum fps).
@see #PREVIEW_FPS_MIN_INDEX
@see #PREVIEW_FPS_MAX_INDEX"
	end

	operation 3400844 "setPreviewFormat"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "pixel_format" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the image format for preview pictures.
<p>If this is never called, the default format will be
{@link android.graphics.ImageFormat#NV21}, which
uses the NV21 encoding format.</p>

<p>Use {@link Parameters#getSupportedPreviewFormats} to get a list of
the available preview formats.

<p>It is strongly recommended that either
{@link android.graphics.ImageFormat#NV21} or
{@link android.graphics.ImageFormat#YV12} is used, since
they are supported by all camera devices.</p>

<p>For YV12, the image buffer that is received is not necessarily
tightly packed, as there may be padding at the end of each row of
pixel data, as described in
{@link android.graphics.ImageFormat#YV12}. For camera callback data,
it can be assumed that the stride of the Y and UV data is the
smallest possible that meets the alignment requirements. That is, if
the preview size is <var>width x height</var>, then the following
equations describe the buffer index for the beginning of row
<var>y</var> for the Y plane and row <var>c</var> for the U and V
planes:

{@code
<pre>
yStride   = (int) ceil(width / 16.0) * 16;
uvStride  = (int) ceil( (yStride / 2) / 16.0) * 16;
ySize     = yStride * height;
uvSize    = uvStride * height / 2;
yRowIndex = yStride * y;
uRowIndex = ySize + uvSize + uvStride * c;
vRowIndex = ySize + uvStride * c;
size      = ySize + uvSize * 2;</pre>
}

@param pixel_format the desired preview picture format, defined by
  one of the {@link android.graphics.ImageFormat} constants.  (E.g.,
  <var>ImageFormat.NV21</var> (default), or
  <var>ImageFormat.YV12</var>)

@see android.graphics.ImageFormat
@see android.hardware.Camera.Parameters#getSupportedPreviewFormats"
	end

	operation 3400972 "getPreviewFormat"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the image format for preview frames got from
{@link PreviewCallback}.

@return the preview format.
@see android.graphics.ImageFormat
@see #setPreviewFormat"
	end

	operation 3401100 "getSupportedPreviewFormats"
	  public explicit_return_type "List<Integer>"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the supported preview formats. {@link android.graphics.ImageFormat#NV21}
is always supported. {@link android.graphics.ImageFormat#YV12}
is always supported since API level 12.

@return a list of supported preview formats. This method will always
        return a list with at least one element.
@see android.graphics.ImageFormat
@see #setPreviewFormat"
	end

	operation 3401228 "setPictureSize"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "width" explicit_type "int"
	    param in name "height" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "<p>Sets the dimensions for pictures.</p>

<p>Applications need to consider the display orientation. See {@link
#setPreviewSize(int,int)} for reference.</p>

@param width  the width for pictures, in pixels
@param height the height for pictures, in pixels
@see #setPreviewSize(int,int)
"
	end

	operation 3401356 "getPictureSize"
	  public return_type class_ref 818700 // Size
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the dimension setting for pictures.

@return a Size object with the height and width setting
         for pictures"
	end

	operation 3401484 "getSupportedPictureSizes"
	  public return_type class_ref 818700 // Size
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the supported picture sizes.

@return a list of supported picture sizes. This method will always
        return a list with at least one element."
	end

	operation 3401612 "setPictureFormat"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "pixel_format" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the image format for pictures.

@param pixel_format the desired picture format
                    (<var>ImageFormat.NV21</var>,
                     <var>ImageFormat.RGB_565</var>, or
                     <var>ImageFormat.JPEG</var>)
@see android.graphics.ImageFormat"
	end

	operation 3401740 "getPictureFormat"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the image format for pictures.

@return the picture format
@see android.graphics.ImageFormat"
	end

	operation 3401868 "getSupportedPictureFormats"
	  public explicit_return_type "List<Integer>"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the supported picture formats.

@return supported picture formats. This method will always return a
        list with at least one element.
@see android.graphics.ImageFormat"
	end

	operation 3401996 "cameraFormatForPixelFormat"
	  private explicit_return_type "String"
	  nparams 1
	    param in name "pixel_format" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3402124 "pixelFormatForCameraFormat"
	  private explicit_return_type "int"
	  nparams 1
	    param in name "format" explicit_type "String"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3402252 "setRotation"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "rotation" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the clockwise rotation angle in degrees relative to the
orientation of the camera. This affects the pictures returned from
JPEG {@link PictureCallback}. The camera driver may set orientation
in the EXIF header without rotating the picture. Or the driver may
rotate the picture and the EXIF thumbnail. If the Jpeg picture is
rotated, the orientation in the EXIF header will be missing or 1
(row #0 is top and column #0 is left side).

<p>If applications want to rotate the picture to match the orientation
of what users see, apps should use {@link
android.view.OrientationEventListener} and {@link CameraInfo}.
The value from OrientationEventListener is relative to the natural
orientation of the device. CameraInfo.orientation is the angle
between camera orientation and natural device orientation. The sum
of the two is the rotation angle for back-facing camera. The
difference of the two is the rotation angle for front-facing camera.
Note that the JPEG pictures of front-facing cameras are not mirrored
as in preview display.

<p>For example, suppose the natural orientation of the device is
portrait. The device is rotated 270 degrees clockwise, so the device
orientation is 270. Suppose a back-facing camera sensor is mounted in
landscape and the top side of the camera sensor is aligned with the
right edge of the display in natural orientation. So the camera
orientation is 90. The rotation should be set to 0 (270 + 90).

<p>The reference code is as follows.

<pre>
public void onOrientationChanged(int orientation) {
    if (orientation == ORIENTATION_UNKNOWN) return;
    android.hardware.Camera.CameraInfo info =
           new android.hardware.Camera.CameraInfo();
    android.hardware.Camera.getCameraInfo(cameraId, info);
    orientation = (orientation + 45) / 90 * 90;
    int rotation = 0;
    if (info.facing == CameraInfo.CAMERA_FACING_FRONT) {
        rotation = (info.orientation - orientation + 360) % 360;
    } else {  // back-facing camera
        rotation = (info.orientation + orientation) % 360;
    }
    mParameters.setRotation(rotation);
}
</pre>

@param rotation The rotation angle in degrees relative to the
                orientation of the camera. Rotation can only be 0,
                90, 180 or 270.
@throws IllegalArgumentException if rotation value is invalid.
@see android.view.OrientationEventListener
@see #getCameraInfo(int, CameraInfo)"
	end

	operation 3402380 "setGpsLatitude"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "latitude" explicit_type "double"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets GPS latitude coordinate. This will be stored in JPEG EXIF
header.

@param latitude GPS latitude coordinate."
	end

	operation 3402508 "setGpsLongitude"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "longitude" explicit_type "double"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets GPS longitude coordinate. This will be stored in JPEG EXIF
header.

@param longitude GPS longitude coordinate."
	end

	operation 3402636 "setGpsAltitude"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "altitude" explicit_type "double"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets GPS altitude. This will be stored in JPEG EXIF header.

@param altitude GPS altitude in meters."
	end

	operation 3402764 "setGpsTimestamp"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "timestamp" explicit_type "long"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets GPS timestamp. This will be stored in JPEG EXIF header.

@param timestamp GPS timestamp (UTC in seconds since January 1,
                 1970)."
	end

	operation 3402892 "setGpsProcessingMethod"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "processing_method" explicit_type "String"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets GPS processing method. It will store up to 32 characters
in JPEG EXIF header.

@param processing_method The processing method to get this location."
	end

	operation 3403020 "removeGpsData"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Removes GPS latitude, longitude, altitude, and timestamp from the
parameters."
	end

	operation 3403148 "getWhiteBalance"
	  public explicit_return_type "String"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the current white balance setting.

@return current white balance. null if white balance setting is not
        supported.
@see #WHITE_BALANCE_AUTO
@see #WHITE_BALANCE_INCANDESCENT
@see #WHITE_BALANCE_FLUORESCENT
@see #WHITE_BALANCE_WARM_FLUORESCENT
@see #WHITE_BALANCE_DAYLIGHT
@see #WHITE_BALANCE_CLOUDY_DAYLIGHT
@see #WHITE_BALANCE_TWILIGHT
@see #WHITE_BALANCE_SHADE
"
	end

	operation 3403276 "setWhiteBalance"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "value" explicit_type "String"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the white balance. Changing the setting will release the
auto-white balance lock. It is recommended not to change white
balance and AWB lock at the same time.

@param value new white balance.
@see #getWhiteBalance()
@see #setAutoWhiteBalanceLock(boolean)"
	end

	operation 3403404 "getSupportedWhiteBalance"
	  public explicit_return_type "List<String>"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the supported white balance.

@return a list of supported white balance. null if white balance
        setting is not supported.
@see #getWhiteBalance()"
	end

	operation 3403532 "getColorEffect"
	  public explicit_return_type "String"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the current color effect setting.

@return current color effect. null if color effect
        setting is not supported.
@see #EFFECT_NONE
@see #EFFECT_MONO
@see #EFFECT_NEGATIVE
@see #EFFECT_SOLARIZE
@see #EFFECT_SEPIA
@see #EFFECT_POSTERIZE
@see #EFFECT_WHITEBOARD
@see #EFFECT_BLACKBOARD
@see #EFFECT_AQUA"
	end

	operation 3403660 "setColorEffect"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "value" explicit_type "String"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the current color effect setting.

@param value new color effect.
@see #getColorEffect()"
	end

	operation 3403788 "getSupportedColorEffects"
	  public explicit_return_type "List<String>"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the supported color effects.

@return a list of supported color effects. null if color effect
        setting is not supported.
@see #getColorEffect()"
	end

	operation 3403916 "getAntibanding"
	  public explicit_return_type "String"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the current antibanding setting.

@return current antibanding. null if antibanding setting is not
        supported.
@see #ANTIBANDING_AUTO
@see #ANTIBANDING_50HZ
@see #ANTIBANDING_60HZ
@see #ANTIBANDING_OFF"
	end

	operation 3404044 "setAntibanding"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "antibanding" explicit_type "String"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the antibanding.

@param antibanding new antibanding value.
@see #getAntibanding()"
	end

	operation 3404172 "getSupportedAntibanding"
	  public explicit_return_type "List<String>"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the supported antibanding values.

@return a list of supported antibanding values. null if antibanding
        setting is not supported.
@see #getAntibanding()"
	end

	operation 3404300 "getSceneMode"
	  public explicit_return_type "String"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the current scene mode setting.

@return one of SCENE_MODE_XXX string constant. null if scene mode
        setting is not supported.
@see #SCENE_MODE_AUTO
@see #SCENE_MODE_ACTION
@see #SCENE_MODE_PORTRAIT
@see #SCENE_MODE_LANDSCAPE
@see #SCENE_MODE_NIGHT
@see #SCENE_MODE_NIGHT_PORTRAIT
@see #SCENE_MODE_THEATRE
@see #SCENE_MODE_BEACH
@see #SCENE_MODE_SNOW
@see #SCENE_MODE_SUNSET
@see #SCENE_MODE_STEADYPHOTO
@see #SCENE_MODE_FIREWORKS
@see #SCENE_MODE_SPORTS
@see #SCENE_MODE_PARTY
@see #SCENE_MODE_CANDLELIGHT
@see #SCENE_MODE_BARCODE"
	end

	operation 3404428 "setSceneMode"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "value" explicit_type "String"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the scene mode. Changing scene mode may override other
parameters (such as flash mode, focus mode, white balance). For
example, suppose originally flash mode is on and supported flash
modes are on/off. In night scene mode, both flash mode and supported
flash mode may be changed to off. After setting scene mode,
applications should call getParameters to know if some parameters are
changed.

@param value scene mode.
@see #getSceneMode()"
	end

	operation 3404556 "getSupportedSceneModes"
	  public explicit_return_type "List<String>"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the supported scene modes.

@return a list of supported scene modes. null if scene mode setting
        is not supported.
@see #getSceneMode()"
	end

	operation 3404684 "getFlashMode"
	  public explicit_return_type "String"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the current flash mode setting.

@return current flash mode. null if flash mode setting is not
        supported.
@see #FLASH_MODE_OFF
@see #FLASH_MODE_AUTO
@see #FLASH_MODE_ON
@see #FLASH_MODE_RED_EYE
@see #FLASH_MODE_TORCH"
	end

	operation 3404812 "setFlashMode"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "value" explicit_type "String"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the flash mode.

@param value flash mode.
@see #getFlashMode()"
	end

	operation 3404940 "getSupportedFlashModes"
	  public explicit_return_type "List<String>"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the supported flash modes.

@return a list of supported flash modes. null if flash mode setting
        is not supported.
@see #getFlashMode()"
	end

	operation 3405068 "getFocusMode"
	  public explicit_return_type "String"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the current focus mode setting.

@return current focus mode. This method will always return a non-null
        value. Applications should call {@link
        #autoFocus(AutoFocusCallback)} to start the focus if focus
        mode is FOCUS_MODE_AUTO or FOCUS_MODE_MACRO.
@see #FOCUS_MODE_AUTO
@see #FOCUS_MODE_INFINITY
@see #FOCUS_MODE_MACRO
@see #FOCUS_MODE_FIXED
@see #FOCUS_MODE_EDOF
@see #FOCUS_MODE_CONTINUOUS_VIDEO"
	end

	operation 3405196 "setFocusMode"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "value" explicit_type "String"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the focus mode.

@param value focus mode.
@see #getFocusMode()"
	end

	operation 3405324 "getSupportedFocusModes"
	  public explicit_return_type "List<String>"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the supported focus modes.

@return a list of supported focus modes. This method will always
        return a list with at least one element.
@see #getFocusMode()"
	end

	operation 3405452 "getFocalLength"
	  public explicit_return_type "float"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the focal length (in millimeter) of the camera.

@return the focal length. This method will always return a valid
        value."
	end

	operation 3405580 "getHorizontalViewAngle"
	  public explicit_return_type "float"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the horizontal angle of view in degrees.

@return horizontal angle of view. This method will always return a
        valid value."
	end

	operation 3405708 "getVerticalViewAngle"
	  public explicit_return_type "float"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the vertical angle of view in degrees.

@return vertical angle of view. This method will always return a
        valid value."
	end

	operation 3405836 "getExposureCompensation"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the current exposure compensation index.

@return current exposure compensation index. The range is {@link
        #getMinExposureCompensation} to {@link
        #getMaxExposureCompensation}. 0 means exposure is not
        adjusted."
	end

	operation 3405964 "setExposureCompensation"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "value" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the exposure compensation index.

@param value exposure compensation index. The valid value range is
       from {@link #getMinExposureCompensation} (inclusive) to {@link
       #getMaxExposureCompensation} (inclusive). 0 means exposure is
       not adjusted. Application should call
       getMinExposureCompensation and getMaxExposureCompensation to
       know if exposure compensation is supported."
	end

	operation 3406092 "getMaxExposureCompensation"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the maximum exposure compensation index.

@return maximum exposure compensation index (>=0). If both this
        method and {@link #getMinExposureCompensation} return 0,
        exposure compensation is not supported."
	end

	operation 3406220 "getMinExposureCompensation"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the minimum exposure compensation index.

@return minimum exposure compensation index (<=0). If both this
        method and {@link #getMaxExposureCompensation} return 0,
        exposure compensation is not supported."
	end

	operation 3406348 "getExposureCompensationStep"
	  public explicit_return_type "float"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the exposure compensation step.

@return exposure compensation step. Applications can get EV by
        multiplying the exposure compensation index and step. Ex: if
        exposure compensation index is -6 and step is 0.333333333, EV
        is -2."
	end

	operation 3406476 "setAutoExposureLock"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "toggle" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "<p>Sets the auto-exposure lock state. Applications should check
{@link #isAutoExposureLockSupported} before using this method.</p>

<p>If set to true, the camera auto-exposure routine will immediately
pause until the lock is set to false. Exposure compensation settings
changes will still take effect while auto-exposure is locked.</p>

<p>If auto-exposure is already locked, setting this to true again has
no effect (the driver will not recalculate exposure values).</p>

<p>Stopping preview with {@link #stopPreview()}, or triggering still
image capture with {@link #takePicture(Camera.ShutterCallback,
Camera.PictureCallback, Camera.PictureCallback)}, will not change the
lock.</p>

<p>Exposure compensation, auto-exposure lock, and auto-white balance
lock can be used to capture an exposure-bracketed burst of images,
for example.</p>

<p>Auto-exposure state, including the lock state, will not be
maintained after camera {@link #release()} is called.  Locking
auto-exposure after {@link #open()} but before the first call to
{@link #startPreview()} will not allow the auto-exposure routine to
run at all, and may result in severely over- or under-exposed
images.</p>

@param toggle new state of the auto-exposure lock. True means that
       auto-exposure is locked, false means that the auto-exposure
       routine is free to run normally.

@see #getAutoExposureLock()"
	end

	operation 3406604 "getAutoExposureLock"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the state of the auto-exposure lock. Applications should check
{@link #isAutoExposureLockSupported} before using this method. See
{@link #setAutoExposureLock} for details about the lock.

@return State of the auto-exposure lock. Returns true if
        auto-exposure is currently locked, and false otherwise.

@see #setAutoExposureLock(boolean)
"
	end

	operation 3406732 "isAutoExposureLockSupported"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns true if auto-exposure locking is supported. Applications
should call this before trying to lock auto-exposure. See
{@link #setAutoExposureLock} for details about the lock.

@return true if auto-exposure lock is supported.
@see #setAutoExposureLock(boolean)
"
	end

	operation 3406860 "setAutoWhiteBalanceLock"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "toggle" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "<p>Sets the auto-white balance lock state. Applications should check
{@link #isAutoWhiteBalanceLockSupported} before using this
method.</p>

<p>If set to true, the camera auto-white balance routine will
immediately pause until the lock is set to false.</p>

<p>If auto-white balance is already locked, setting this to true
again has no effect (the driver will not recalculate white balance
values).</p>

<p>Stopping preview with {@link #stopPreview()}, or triggering still
image capture with {@link #takePicture(Camera.ShutterCallback,
Camera.PictureCallback, Camera.PictureCallback)}, will not change the
the lock.</p>

<p> Changing the white balance mode with {@link #setWhiteBalance}
will release the auto-white balance lock if it is set.</p>

<p>Exposure compensation, AE lock, and AWB lock can be used to
capture an exposure-bracketed burst of images, for example.
Auto-white balance state, including the lock state, will not be
maintained after camera {@link #release()} is called.  Locking
auto-white balance after {@link #open()} but before the first call to
{@link #startPreview()} will not allow the auto-white balance routine
to run at all, and may result in severely incorrect color in captured
images.</p>

@param toggle new state of the auto-white balance lock. True means
       that auto-white balance is locked, false means that the
       auto-white balance routine is free to run normally.

@see #getAutoWhiteBalanceLock()
@see #setWhiteBalance(String)"
	end

	operation 3406988 "getAutoWhiteBalanceLock"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the state of the auto-white balance lock. Applications should
check {@link #isAutoWhiteBalanceLockSupported} before using this
method. See {@link #setAutoWhiteBalanceLock} for details about the
lock.

@return State of the auto-white balance lock. Returns true if
        auto-white balance is currently locked, and false
        otherwise.

@see #setAutoWhiteBalanceLock(boolean)
"
	end

	operation 3407116 "isAutoWhiteBalanceLockSupported"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns true if auto-white balance locking is supported. Applications
should call this before trying to lock auto-white balance. See
{@link #setAutoWhiteBalanceLock} for details about the lock.

@return true if auto-white balance lock is supported.
@see #setAutoWhiteBalanceLock(boolean)
"
	end

	operation 3407244 "getZoom"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets current zoom value. This also works when smooth zoom is in
progress. Applications should check {@link #isZoomSupported} before
using this method.

@return the current zoom value. The range is 0 to {@link
        #getMaxZoom}. 0 means the camera is not zoomed."
	end

	operation 3407372 "setZoom"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "value" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets current zoom value. If the camera is zoomed (value > 0), the
actual picture size may be smaller than picture size setting.
Applications can check the actual picture size after picture is
returned from {@link PictureCallback}. The preview size remains the
same in zoom. Applications should check {@link #isZoomSupported}
before using this method.

@param value zoom value. The valid range is 0 to {@link #getMaxZoom}."
	end

	operation 3407500 "isZoomSupported"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns true if zoom is supported. Applications should call this
before using other zoom methods.

@return true if zoom is supported."
	end

	operation 3407628 "getMaxZoom"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the maximum zoom value allowed for snapshot. This is the maximum
value that applications can set to {@link #setZoom(int)}.
Applications should call {@link #isZoomSupported} before using this
method. This value may change in different preview size. Applications
should call this again after setting preview size.

@return the maximum zoom value supported by the camera."
	end

	operation 3407756 "getZoomRatios"
	  public explicit_return_type "List<Integer>"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the zoom ratios of all zoom values. Applications should check
{@link #isZoomSupported} before using this method.

@return the zoom ratios in 1/100 increments. Ex: a zoom of 3.2x is
        returned as 320. The number of elements is {@link
        #getMaxZoom} + 1. The list is sorted from small to large. The
        first element is always 100. The last element is the zoom
        ratio of the maximum zoom value."
	end

	operation 3407884 "isSmoothZoomSupported"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns true if smooth zoom is supported. Applications should call
this before using other smooth zoom methods.

@return true if smooth zoom is supported."
	end

	operation 3408012 "getFocusDistances"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "output" explicit_type "float"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "<p>Gets the distances from the camera to where an object appears to be
in focus. The object is sharpest at the optimal focus distance. The
depth of field is the far focus distance minus near focus distance.</p>

<p>Focus distances may change after calling {@link
#autoFocus(AutoFocusCallback)}, {@link #cancelAutoFocus}, or {@link
#startPreview()}. Applications can call {@link #getParameters()}
and this method anytime to get the latest focus distances. If the
focus mode is FOCUS_MODE_CONTINUOUS_VIDEO, focus distances may change
from time to time.</p>

<p>This method is intended to estimate the distance between the camera
and the subject. After autofocus, the subject distance may be within
near and far focus distance. However, the precision depends on the
camera hardware, autofocus algorithm, the focus area, and the scene.
The error can be large and it should be only used as a reference.</p>

<p>Far focus distance >= optimal focus distance >= near focus distance.
If the focus distance is infinity, the value will be
{@code Float.POSITIVE_INFINITY}.</p>

@param output focus distances in meters. output must be a float
       array with three elements. Near focus distance, optimal focus
       distance, and far focus distance will be filled in the array.
@see #FOCUS_DISTANCE_NEAR_INDEX
@see #FOCUS_DISTANCE_OPTIMAL_INDEX
@see #FOCUS_DISTANCE_FAR_INDEX"
	end

	operation 3408140 "getMaxNumFocusAreas"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the maximum number of focus areas supported. This is the maximum
length of the list in {@link #setFocusAreas(List)} and
{@link #getFocusAreas()}.

@return the maximum number of focus areas supported by the camera.
@see #getFocusAreas()"
	end

	operation 3408268 "getFocusAreas"
	  public return_type class_ref 818828 // Area
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "<p>Gets the current focus areas. Camera driver uses the areas to decide
focus.</p>

<p>Before using this API or {@link #setFocusAreas(List)}, apps should
call {@link #getMaxNumFocusAreas()} to know the maximum number of
focus areas first. If the value is 0, focus area is not supported.</p>

<p>Each focus area is a rectangle with specified weight. The direction
is relative to the sensor orientation, that is, what the sensor sees.
The direction is not affected by the rotation or mirroring of
{@link #setDisplayOrientation(int)}. Coordinates of the rectangle
range from -1000 to 1000. (-1000, -1000) is the upper left point.
(1000, 1000) is the lower right point. The width and height of focus
areas cannot be 0 or negative.</p>

<p>The weight must range from 1 to 1000. The weight should be
interpreted as a per-pixel weight - all pixels in the area have the
specified weight. This means a small area with the same weight as a
larger area will have less influence on the focusing than the larger
area. Focus areas can partially overlap and the driver will add the
weights in the overlap region.</p>

<p>A special case of a {@code null} focus area list means the driver is
free to select focus targets as it wants. For example, the driver may
use more signals to select focus areas and change them
dynamically. Apps can set the focus area list to {@code null} if they
want the driver to completely control focusing.</p>

<p>Focus areas are relative to the current field of view
({@link #getZoom()}). No matter what the zoom level is, (-1000,-1000)
represents the top of the currently visible camera frame. The focus
area cannot be set to be outside the current field of view, even
when using zoom.</p>

<p>Focus area only has effect if the current focus mode is
{@link #FOCUS_MODE_AUTO}, {@link #FOCUS_MODE_MACRO},
{@link #FOCUS_MODE_CONTINUOUS_VIDEO}, or
{@link #FOCUS_MODE_CONTINUOUS_PICTURE}.</p>

@return a list of current focus areas"
	end

	operation 3408396 "setFocusAreas"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "focusAreas" explicit_type "List<Area>"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets focus areas. See {@link #getFocusAreas()} for documentation.

@param focusAreas the focus areas
@see #getFocusAreas()"
	end

	operation 3408524 "getMaxNumMeteringAreas"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the maximum number of metering areas supported. This is the
maximum length of the list in {@link #setMeteringAreas(List)} and
{@link #getMeteringAreas()}.

@return the maximum number of metering areas supported by the camera.
@see #getMeteringAreas()"
	end

	operation 3408652 "getMeteringAreas"
	  public return_type class_ref 818828 // Area
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "<p>Gets the current metering areas. Camera driver uses these areas to
decide exposure.</p>

<p>Before using this API or {@link #setMeteringAreas(List)}, apps should
call {@link #getMaxNumMeteringAreas()} to know the maximum number of
metering areas first. If the value is 0, metering area is not
supported.</p>

<p>Each metering area is a rectangle with specified weight. The
direction is relative to the sensor orientation, that is, what the
sensor sees. The direction is not affected by the rotation or
mirroring of {@link #setDisplayOrientation(int)}. Coordinates of the
rectangle range from -1000 to 1000. (-1000, -1000) is the upper left
point. (1000, 1000) is the lower right point. The width and height of
metering areas cannot be 0 or negative.</p>

<p>The weight must range from 1 to 1000, and represents a weight for
every pixel in the area. This means that a large metering area with
the same weight as a smaller area will have more effect in the
metering result.  Metering areas can partially overlap and the driver
will add the weights in the overlap region.</p>

<p>A special case of a {@code null} metering area list means the driver
is free to meter as it chooses. For example, the driver may use more
signals to select metering areas and change them dynamically. Apps
can set the metering area list to {@code null} if they want the
driver to completely control metering.</p>

<p>Metering areas are relative to the current field of view
({@link #getZoom()}). No matter what the zoom level is, (-1000,-1000)
represents the top of the currently visible camera frame. The
metering area cannot be set to be outside the current field of view,
even when using zoom.</p>

<p>No matter what metering areas are, the final exposure are compensated
by {@link #setExposureCompensation(int)}.</p>

@return a list of current metering areas"
	end

	operation 3408780 "setMeteringAreas"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "meteringAreas" explicit_type "List<Area>"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets metering areas. See {@link #getMeteringAreas()} for
documentation.

@param meteringAreas the metering areas
@see #getMeteringAreas()"
	end

	operation 3408908 "getMaxNumDetectedFaces"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the maximum number of detected faces supported. This is the
maximum length of the list returned from {@link FaceDetectionListener}.
If the return value is 0, face detection of the specified type is not
supported.

@return the maximum number of detected face supported by the camera.
@see #startFaceDetection()"
	end

	operation 3409036 "setRecordingHint"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "hint" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets recording mode hint. This tells the camera that the intent of
the application is to record videos {@link
android.media.MediaRecorder#start()}, not to take still pictures
{@link #takePicture(Camera.ShutterCallback, Camera.PictureCallback,
Camera.PictureCallback, Camera.PictureCallback)}. Using this hint can
allow MediaRecorder.start() to start faster or with fewer glitches on
output. This should be called before starting preview for the best
result, but can be changed while the preview is active. The default
value is false.

The app can still call takePicture() when the hint is true or call
MediaRecorder.start() when the hint is false. But the performance may
be worse.

@param hint true if the apps intend to record videos using
            {@link android.media.MediaRecorder}."
	end

	operation 3409164 "isVideoSnapshotSupported"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "<p>Returns true if video snapshot is supported. That is, applications
can call {@link #takePicture(Camera.ShutterCallback,
Camera.PictureCallback, Camera.PictureCallback,
Camera.PictureCallback)} during recording. Applications do not need
to call {@link #startPreview()} after taking a picture. The preview
will be still active. Other than that, taking a picture during
recording is identical to taking a picture normally. All settings and
methods related to takePicture work identically. Ex:
{@link #getPictureSize()}, {@link #getSupportedPictureSizes()},
{@link #setJpegQuality(int)}, {@link #setRotation(int)}, and etc. The
picture will have an EXIF header. {@link #FLASH_MODE_AUTO} and
{@link #FLASH_MODE_ON} also still work, but the video will record the
flash.</p>

<p>Applications can set shutter callback as null to avoid the shutter
sound. It is also recommended to set raw picture and post view
callbacks to null to avoid the interrupt of preview display.</p>

<p>Field-of-view of the recorded video may be different from that of the
captured pictures. The maximum size of a video snapshot may be
smaller than that for regular still captures. If the current picture
size is set higher than can be supported by video snapshot, the
picture will be captured at the maximum supported size instead.</p>

@return true if video snapshot is supported."
	end

	operation 3409292 "setVideoStabilization"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "toggle" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "<p>Enables and disables video stabilization. Use
{@link #isVideoStabilizationSupported} to determine if calling this
method is valid.</p>

<p>Video stabilization reduces the shaking due to the motion of the
camera in both the preview stream and in recorded videos, including
data received from the preview callback. It does not reduce motion
blur in images captured with
{@link Camera#takePicture takePicture}.</p>

<p>Video stabilization can be enabled and disabled while preview or
recording is active, but toggling it may cause a jump in the video
stream that may be undesirable in a recorded video.</p>

@param toggle Set to true to enable video stabilization, and false to
disable video stabilization.
@see #isVideoStabilizationSupported()
@see #getVideoStabilization()"
	end

	operation 3409420 "getVideoStabilization"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get the current state of video stabilization. See
{@link #setVideoStabilization} for details of video stabilization.

@return true if video stabilization is enabled
@see #isVideoStabilizationSupported()
@see #setVideoStabilization(boolean)"
	end

	operation 3409548 "isVideoStabilizationSupported"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns true if video stabilization is supported. See
{@link #setVideoStabilization} for details of video stabilization.

@return true if video stabilization is supported
@see #setVideoStabilization(boolean)
@see #getVideoStabilization()"
	end

	operation 3409676 "split"
	  private explicit_return_type "ArrayList<String>"
	  nparams 1
	    param in name "str" explicit_type "String"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Splits a comma delimited string to an ArrayList of String.
 Return null if the passing string is null or the size is 0."
	end

	operation 3409804 "splitInt"
	  private explicit_return_type "ArrayList<Integer>"
	  nparams 1
	    param in name "str" explicit_type "String"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Splits a comma delimited string to an ArrayList of Integer.
 Return null if the passing string is null or the size is 0."
	end

	operation 3409932 "splitInt"
	  private explicit_return_type "void"
	  nparams 2
	    param in name "str" explicit_type "String"
	    param inout name "output" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3410060 "splitFloat"
	  private explicit_return_type "void"
	  nparams 2
	    param in name "str" explicit_type "String"
	    param inout name "output" explicit_type "float"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Splits a comma delimited string to an ArrayList of Float."
	end

	operation 3410188 "getFloat"
	  private explicit_return_type "float"
	  nparams 2
	    param in name "key" explicit_type "String"
	    param in name "defaultValue" explicit_type "float"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Returns the value of a float parameter."
	end

	operation 3410316 "getInt"
	  private explicit_return_type "int"
	  nparams 2
	    param in name "key" explicit_type "String"
	    param in name "defaultValue" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Returns the value of a integer parameter."
	end

	operation 3410444 "splitSize"
	  private return_type class_ref 818700 // Size
	  nparams 1
	    param in name "str" explicit_type "String"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}ArrayList<${type}> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Splits a comma delimited string to an ArrayList of Size.
 Return null if the passing string is null or the size is 0."
	end

	operation 3410572 "strToSize"
	  private return_type class_ref 818700 // Size
	  nparams 1
	    param in name "str" explicit_type "String"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Parses a string (ex: \"480x320\") to Size object.
 Return null if the passing string is null."
	end

	operation 3410700 "splitRange"
	  private explicit_return_type "ArrayList<int[]>"
	  nparams 1
	    param in name "str" explicit_type "String"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Splits a comma delimited string to an ArrayList of int array.
 Example string: \"(10000,26623),(10000,30000)\". Return null if the
 passing string is null or the size is 0."
	end

	operation 3410828 "splitArea"
	  private return_type class_ref 818828 // Area
	  nparams 1
	    param in name "str" explicit_type "String"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}ArrayList<${type}> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Splits a comma delimited string to an ArrayList of Area objects.
 Example string: \"(-10,-10,0,0,300),(0,0,10,10,700)\". Return null if
 the passing string is null or the size is 0 or (0,0,0,0,0)."
	end

	operation 3410956 "same"
	  private explicit_return_type "boolean"
	  nparams 2
	    param in name "s1" explicit_type "String"
	    param in name "s2" explicit_type "String"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 3396364 "getParameters"
	public return_type class_ref 818572 // Parameters
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current settings for this Camera service.
If modifications are made to the returned Parameters, they must be passed
to {@link #setParameters(Camera.Parameters)} to take effect.

@see #setParameters(Camera.Parameters)"
      end

      operation 3396492 "getEmptyParameters"
	class_operation public return_type class_ref 818572 // Parameters
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an empty {@link Parameters} for testing purpose.

@return a Parameter object.

@hide"
      end

      class 818700 "Size"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 3396620 "Size"
	  public explicit_return_type ""
	  nparams 2
	    param in name "w" explicit_type "int"
	    param in name "h" explicit_type "int"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the dimensions for pictures.

@param w the photo width (pixels)
@param h the photo height (pixels)"
	end

	operation 3396748 "equals"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "obj" explicit_type "Object"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment "Compares {@code obj} to this size.

@param obj the object to compare this size with.
@return {@code true} if the width and height of {@code obj} is the
        same as those of this size. {@code false} otherwise."
	end

	operation 3396876 "hashCode"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	attribute 2499340 "width"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " width of the picture "
	end

	attribute 2499468 "height"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " height of the picture "
	end
      end

      class 818828 "Area"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 3397004 "Area"
	  public explicit_return_type ""
	  nparams 2
	    param inout name "rect" type class_ref 694924 // Rect
	    param in name "weight" explicit_type "int"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Create an area with specified rectangle and weight.

@param rect the bounds of the area.
@param weight the weight of the area."
	end

	operation 3397132 "equals"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "obj" explicit_type "Object"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment "Compares {@code obj} to this area.

@param obj the object to compare this area with.
@return {@code true} if the rectangle and weight of {@code obj} is
        the same as those of this area. {@code false} otherwise."
	end

	classrelation 1664780 // rect (<unidirectional association>)
	  relation 1664780 --->
	    a role_name "rect" public
	      comment "
Bounds of the area. (-1000, -1000) represents the top-left of the
camera field of view, and (1000, 1000) represents the bottom-right of
the field of view. Setting bounds outside that range is not
allowed. Bounds with zero or negative width or height are not
allowed.

@see Parameters#getFocusAreas()
@see Parameters#getMeteringAreas()

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1664780 // rect (<unidirectional association>)
	    b parent class_ref 694924 // Rect
	end

	attribute 2499596 "weight"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "Weight of the area. The weight must range from 1 to 1000, and
represents a weight for every pixel in the area. This means that a
large metering area with the same weight as a smaller area will have
more effect in the metering result.  Metering areas can overlap and
the driver will add the weights in the overlap region.

@see Parameters#getFocusAreas()
@see Parameters#getMeteringAreas()
"
	end
      end
    end

    class 818956 "GeomagneticField"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Estimates magnetic field at a given point on
Earth, and in particular, to compute the magnetic declination from true
north.

<p>This uses the World Magnetic Model produced by the United States National
Geospatial-Intelligence Agency.  More details about the model can be found at
<a href=\"http://www.ngdc.noaa.gov/geomag/WMM/DoDWMM.shtml\">http://www.ngdc.noaa.gov/geomag/WMM/DoDWMM.shtml</a>.
This class currently uses WMM-2010 which is valid until 2015, but should
produce acceptable results for several years after that. Future versions of
Android may use a newer version of the model."
      attribute 2514828 "mX"
	private explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " The magnetic field at a given point, in nonoteslas in geodetic
 coordinates."
      end

      attribute 2514956 "mY"
	private explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2515084 "mZ"
	private explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2515212 "mGcLatitudeRad"
	private explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Geocentric coordinates -- set by computeGeocentricCoordinates."
      end

      attribute 2515340 "mGcLongitudeRad"
	private explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2515468 "mGcRadiusKm"
	private explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2515596 "EARTH_SEMI_MAJOR_AXIS_KM"
	class_attribute const_attribute private explicit_type "float"
	init_value " 6378.137f"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Constants from WGS84 (the coordinate system used by GPS)"
      end

      attribute 2515724 "EARTH_SEMI_MINOR_AXIS_KM"
	class_attribute const_attribute private explicit_type "float"
	init_value " 6356.7523142f"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2515852 "EARTH_REFERENCE_RADIUS_KM"
	class_attribute const_attribute private explicit_type "float"
	init_value " 6371.2f"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2515980 "G_COEFF"
	class_attribute const_attribute private explicit_type "float"
	multiplicity "[][]"
	init_value " new float[][] {
        { 0.0f },
        { -29496.6f, -1586.3f },
        { -2396.6f, 3026.1f, 1668.6f },
        { 1340.1f, -2326.2f, 1231.9f, 634.0f },
        { 912.6f, 808.9f, 166.7f, -357.1f, 89.4f },
        { -230.9f, 357.2f, 200.3f, -141.1f, -163.0f, -7.8f },
        { 72.8f, 68.6f, 76.0f, -141.4f, -22.8f, 13.2f, -77.9f },
        { 80.5f, -75.1f, -4.7f, 45.3f, 13.9f, 10.4f, 1.7f, 4.9f },
        { 24.4f, 8.1f, -14.5f, -5.6f, -19.3f, 11.5f, 10.9f, -14.1f, -3.7f },
        { 5.4f, 9.4f, 3.4f, -5.2f, 3.1f, -12.4f, -0.7f, 8.4f, -8.5f, -10.1f },
        { -2.0f, -6.3f, 0.9f, -1.1f, -0.2f, 2.5f, -0.3f, 2.2f, 3.1f, -1.0f, -2.8f },
        { 3.0f, -1.5f, -2.1f, 1.7f, -0.5f, 0.5f, -0.8f, 0.4f, 1.8f, 0.1f, 0.7f, 3.8f },
        { -2.2f, -0.2f, 0.3f, 1.0f, -0.6f, 0.9f, -0.1f, 0.5f, -0.4f, -0.4f, 0.2f, -0.8f, 0.0f } }"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " These coefficients and the formulae used below are from:
 NOAA Technical Report: The US/UK World Magnetic Model for 2010-2015"
      end

      attribute 2516108 "H_COEFF"
	class_attribute const_attribute private explicit_type "float"
	multiplicity "[][]"
	init_value " new float[][] {
        { 0.0f },
        { 0.0f, 4944.4f },
        { 0.0f, -2707.7f, -576.1f },
        { 0.0f, -160.2f, 251.9f, -536.6f },
        { 0.0f, 286.4f, -211.2f, 164.3f, -309.1f },
        { 0.0f, 44.6f, 188.9f, -118.2f, 0.0f, 100.9f },
        { 0.0f, -20.8f, 44.1f, 61.5f, -66.3f, 3.1f, 55.0f },
        { 0.0f, -57.9f, -21.1f, 6.5f, 24.9f, 7.0f, -27.7f, -3.3f },
        { 0.0f, 11.0f, -20.0f, 11.9f, -17.4f, 16.7f, 7.0f, -10.8f, 1.7f },
        { 0.0f, -20.5f, 11.5f, 12.8f, -7.2f, -7.4f, 8.0f, 2.1f, -6.1f, 7.0f },
        { 0.0f, 2.8f, -0.1f, 4.7f, 4.4f, -7.2f, -1.0f, -3.9f, -2.0f, -2.0f, -8.3f },
        { 0.0f, 0.2f, 1.7f, -0.6f, -1.8f, 0.9f, -0.4f, -2.5f, -1.3f, -2.1f, -1.9f, -1.8f },
        { 0.0f, -0.9f, 0.3f, 2.1f, -2.5f, 0.5f, 0.6f, 0.0f, 0.1f, 0.3f, -0.9f, -0.2f, 0.9f } }"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2516236 "DELTA_G"
	class_attribute const_attribute private explicit_type "float"
	multiplicity "[][]"
	init_value " new float[][] {
        { 0.0f },
        { 11.6f, 16.5f },
        { -12.1f, -4.4f, 1.9f },
        { 0.4f, -4.1f, -2.9f, -7.7f },
        { -1.8f, 2.3f, -8.7f, 4.6f, -2.1f },
        { -1.0f, 0.6f, -1.8f, -1.0f, 0.9f, 1.0f },
        { -0.2f, -0.2f, -0.1f, 2.0f, -1.7f, -0.3f, 1.7f },
        { 0.1f, -0.1f, -0.6f, 1.3f, 0.4f, 0.3f, -0.7f, 0.6f },
        { -0.1f, 0.1f, -0.6f, 0.2f, -0.2f, 0.3f, 0.3f, -0.6f, 0.2f },
        { 0.0f, -0.1f, 0.0f, 0.3f, -0.4f, -0.3f, 0.1f, -0.1f, -0.4f, -0.2f },
        { 0.0f, 0.0f, -0.1f, 0.2f, 0.0f, -0.1f, -0.2f, 0.0f, -0.1f, -0.2f, -0.2f },
        { 0.0f, 0.0f, 0.0f, 0.1f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, -0.1f, 0.0f },
        { 0.0f, 0.0f, 0.1f, 0.1f, -0.1f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, -0.1f, 0.1f } }"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2516364 "DELTA_H"
	class_attribute const_attribute private explicit_type "float"
	multiplicity "[][]"
	init_value " new float[][] {
        { 0.0f },
        { 0.0f, -25.9f },
        { 0.0f, -22.5f, -11.8f },
        { 0.0f, 7.3f, -3.9f, -2.6f },
        { 0.0f, 1.1f, 2.7f, 3.9f, -0.8f },
        { 0.0f, 0.4f, 1.8f, 1.2f, 4.0f, -0.6f },
        { 0.0f, -0.2f, -2.1f, -0.4f, -0.6f, 0.5f, 0.9f },
        { 0.0f, 0.7f, 0.3f, -0.1f, -0.1f, -0.8f, -0.3f, 0.3f },
        { 0.0f, -0.1f, 0.2f, 0.4f, 0.4f, 0.1f, -0.1f, 0.4f, 0.3f },
        { 0.0f, 0.0f, -0.2f, 0.0f, -0.1f, 0.1f, 0.0f, -0.2f, 0.3f, 0.2f },
        { 0.0f, 0.1f, -0.1f, 0.0f, -0.1f, -0.1f, 0.0f, -0.1f, -0.2f, 0.0f, -0.1f },
        { 0.0f, 0.0f, 0.1f, 0.0f, 0.1f, 0.0f, 0.1f, 0.0f, -0.1f, -0.1f, 0.0f, -0.1f },
        { 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.1f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f } }"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2516492 "BASE_TIME"
	class_attribute const_attribute private explicit_type "long"
	init_value "
        new GregorianCalendar(2010, 1, 1).getTimeInMillis()"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2516620 "SCHMIDT_QUASI_NORM_FACTORS"
	class_attribute const_attribute private explicit_type "float"
	multiplicity "[][]"
	init_value "
        computeSchmidtQuasiNormFactors(G_COEFF.length)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " The ratio between the Gauss-normalized associated Legendre functions and
 the Schmid quasi-normalized ones. Compute these once staticly since they
 don't depend on input variables at all."
      end

      operation 3411084 "GeomagneticField"
	public explicit_return_type ""
	nparams 4
	  param in name "gdLatitudeDeg" explicit_type "float"
	  param in name "gdLongitudeDeg" explicit_type "float"
	  param in name "altitudeMeters" explicit_type "float"
	  param in name "timeMillis" explicit_type "long"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Estimate the magnetic field at a given point and time.

@param gdLatitudeDeg
           Latitude in WGS84 geodetic coordinates -- positive is east.
@param gdLongitudeDeg
           Longitude in WGS84 geodetic coordinates -- positive is north.
@param altitudeMeters
           Altitude in WGS84 geodetic coordinates, in meters.
@param timeMillis
           Time at which to evaluate the declination, in milliseconds
           since January 1, 1970. (approximate is fine -- the declination
           changes very slowly)."
      end

      operation 3411212 "getX"
	public explicit_return_type "float"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return The X (northward) component of the magnetic field in nanoteslas."
      end

      operation 3411340 "getY"
	public explicit_return_type "float"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return The Y (eastward) component of the magnetic field in nanoteslas."
      end

      operation 3411468 "getZ"
	public explicit_return_type "float"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return The Z (downward) component of the magnetic field in nanoteslas."
      end

      operation 3411596 "getDeclination"
	public explicit_return_type "float"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return The declination of the horizontal component of the magnetic
        field from true north, in degrees (i.e. positive means the
        magnetic field is rotated east that much from true north)."
      end

      operation 3411724 "getInclination"
	public explicit_return_type "float"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return The inclination of the magnetic field in degrees -- positive
        means the magnetic field is rotated downwards."
      end

      operation 3411852 "getHorizontalStrength"
	public explicit_return_type "float"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return  Horizontal component of the field strength in nonoteslas."
      end

      operation 3411980 "getFieldStrength"
	public explicit_return_type "float"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return  Total field strength in nanoteslas."
      end

      operation 3412108 "computeGeocentricCoordinates"
	private explicit_return_type "void"
	nparams 3
	  param in name "gdLatitudeDeg" explicit_type "float"
	  param in name "gdLongitudeDeg" explicit_type "float"
	  param in name "altitudeMeters" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@param gdLatitudeDeg
           Latitude in WGS84 geodetic coordinates.
@param gdLongitudeDeg
           Longitude in WGS84 geodetic coordinates.
@param altitudeMeters
           Altitude above sea level in WGS84 geodetic coordinates.
@return Geocentric latitude (i.e. angle between closest point on the
        equator and this point, at the center of the earth."
      end

      class 819084 "LegendreTable"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 2516748 "mP"
	  const_attribute public explicit_type "float"
	  multiplicity "[][]"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " These are the Gauss-normalized associated Legendre functions -- that
 is, they are normal Legendre functions multiplied by
 (n-m)!/(2n-1)!! (where (2n-1)!! = 1*3*5*...*2n-1)"
	end

	attribute 2516876 "mPDeriv"
	  const_attribute public explicit_type "float"
	  multiplicity "[][]"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Derivative of mP, with respect to theta."
	end

	operation 3412236 "LegendreTable"
	  public explicit_return_type ""
	  nparams 2
	    param in name "maxN" explicit_type "int"
	    param in name "thetaRad" explicit_type "float"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "@param maxN
           The maximum n- and m-values to support
@param thetaRad
           Returned functions will be Gauss-normalized
           P_n^m(cos(thetaRad)), with thetaRad in radians."
	end
      end

      operation 3412364 "computeSchmidtQuasiNormFactors"
	class_operation private explicit_return_type "float"
	nparams 1
	  param in name "maxN" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[][] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compute the ration between the Gauss-normalized associated Legendre
functions and the Schmidt quasi-normalized version. This is equivalent to
sqrt((m==0?1:2)*(n-m)!/(n+m!))*(2n-1)!!/(n-m)!"
      end
    end

    class 819212 "LegacySensorManager"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@SuppressWarnings(\"deprecation\")
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Helper class for implementing the legacy sensor manager API.
@hide"
      attribute 2517004 "sInitialized"
	class_attribute private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2517132 "sWindowManager"
	class_attribute private explicit_type "IWindowManager"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2517260 "sRotation"
	class_attribute private explicit_type "int"
	init_value " Surface.ROTATION_0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1664908 // mSensorManager (<unidirectional association>)
	relation 1664908 --->
	  a role_name "mSensorManager" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1664908 // mSensorManager (<unidirectional association>)
	  b parent class_ref 819340 // SensorManager
      end

      classrelation 1665036 // mLegacyListenersMap (<unidirectional association>)
	relation 1665036 --->
	  stereotype "HashMap"
	  a role_name "mLegacyListenersMap" init_value "
            new HashMap<SensorListener, LegacyListener>()" const_relation private
	    comment " List of legacy listeners.  Guarded by mLegacyListenersMap."
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}, LegacyListener> ${name}${value};
"
	    classrelation_ref 1665036 // mLegacyListenersMap (<unidirectional association>)
	  b parent class_ref 819468 // SensorListener
      end

      operation 3412492 "LegacySensorManager"
	public explicit_return_type ""
	nparams 1
	  param inout name "sensorManager" type class_ref 819340 // SensorManager
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3412620 "getSensors"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3412748 "registerListener"
	public explicit_return_type "boolean"
	nparams 3
	  param inout name "listener" type class_ref 819468 // SensorListener
	  param in name "sensors" explicit_type "int"
	  param in name "rate" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3412876 "registerLegacyListener"
	private explicit_return_type "boolean"
	nparams 5
	  param in name "legacyType" explicit_type "int"
	  param in name "type" explicit_type "int"
	  param inout name "listener" type class_ref 819468 // SensorListener
	  param in name "sensors" explicit_type "int"
	  param in name "rate" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3413004 "unregisterListener"
	public explicit_return_type "void"
	nparams 2
	  param inout name "listener" type class_ref 819468 // SensorListener
	  param in name "sensors" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3413132 "unregisterLegacyListener"
	private explicit_return_type "void"
	nparams 4
	  param in name "legacyType" explicit_type "int"
	  param in name "type" explicit_type "int"
	  param inout name "listener" type class_ref 819468 // SensorListener
	  param in name "sensors" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3413260 "onRotationChanged"
	class_operation package explicit_return_type "void"
	nparams 1
	  param in name "rotation" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3413388 "getRotation"
	class_operation package explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 819596 "LegacyListener"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1665164 // <realization>
	  relation 1665164 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 1665164 // <realization>
	    b parent class_ref 819724 // SensorEventListener
	end

	attribute 2517388 "mValues"
	  private explicit_type "float"
	  multiplicity "[]"
	  init_value " new float[6]"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 1665292 // mTarget (<unidirectional association>)
	  relation 1665292 --->
	    a role_name "mTarget" private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1665292 // mTarget (<unidirectional association>)
	    b parent class_ref 819468 // SensorListener
	end

	attribute 2517516 "mSensors"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 1665420 // mYawfilter (<unidirectional association>)
	  relation 1665420 --->
	    a role_name "mYawfilter" init_value " new LmsFilter()" const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1665420 // mYawfilter (<unidirectional association>)
	    b parent class_ref 820108 // LmsFilter
	end

	operation 3413772 "LegacyListener"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "target" type class_ref 819468 // SensorListener
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3413900 "registerSensor"
	  package explicit_return_type "boolean"
	  nparams 1
	    param in name "legacyType" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3414028 "unregisterSensor"
	  package explicit_return_type "boolean"
	  nparams 1
	    param in name "legacyType" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3414156 "hasSensors"
	  package explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3414284 "hasOrientationSensor"
	  class_operation private explicit_return_type "boolean"
	  nparams 1
	    param in name "sensors" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3414412 "onAccuracyChanged"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "sensor" type class_ref 819980 // Sensor
	    param in name "accuracy" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3414540 "onSensorChanged"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "event" type class_ref 819852 // SensorEvent
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3414668 "mapSensorDataToWindow"
	  private explicit_return_type "void"
	  nparams 3
	    param in name "sensor" explicit_type "int"
	    param inout name "values" explicit_type "float"
	    param in name "orientation" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Helper function to convert the specified sensor's data to the windows's
coordinate space from the device's coordinate space.

output: 3,4,5: values in the old API format
        0,1,2: transformed values in the old API format
"
	end

	operation 3414796 "getLegacySensorType"
	  class_operation private explicit_return_type "int"
	  nparams 1
	    param in name "type" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 820108 "LmsFilter"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 2517644 "SENSORS_RATE_MS"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 20"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2517772 "COUNT"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 12"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2517900 "PREDICTION_RATIO"
	  class_attribute const_attribute private explicit_type "float"
	  init_value " 1.0f/3.0f"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2518028 "PREDICTION_TIME"
	  class_attribute const_attribute private explicit_type "float"
	  init_value " (SENSORS_RATE_MS*COUNT/1000.0f)*PREDICTION_RATIO"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2518156 "mV"
	  private explicit_type "float"
	  multiplicity "[]"
	  init_value " new float[COUNT*2]"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2518284 "mT"
	  private explicit_type "long"
	  multiplicity "[]"
	  init_value " new long[COUNT*2]"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2518412 "mIndex"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 3414924 "LmsFilter"
	  public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3415052 "filter"
	  public explicit_return_type "float"
	  nparams 2
	    param in name "time" explicit_type "long"
	    param in name "in" explicit_type "float"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end
    end

    class 819340 "SensorManager"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>
SensorManager lets you access the device's {@link android.hardware.Sensor
sensors}. Get an instance of this class by calling
{@link android.content.Context#getSystemService(java.lang.String)
Context.getSystemService()} with the argument
{@link android.content.Context#SENSOR_SERVICE}.
</p>
<p>
Always make sure to disable sensors you don't need, especially when your
activity is paused. Failing to do so can drain the battery in just a few
hours. Note that the system will <i>not</i> disable sensors automatically when
the screen turns off.
</p>

<pre class=\"prettyprint\">
public class SensorActivity extends Activity, implements SensorEventListener {
    private final SensorManager mSensorManager;
    private final Sensor mAccelerometer;

    public SensorActivity() {
        mSensorManager = (SensorManager)getSystemService(SENSOR_SERVICE);
        mAccelerometer = mSensorManager.getDefaultSensor(Sensor.TYPE_ACCELEROMETER);
    }

    protected void onResume() {
        super.onResume();
        mSensorManager.registerListener(this, mAccelerometer, SensorManager.SENSOR_DELAY_NORMAL);
    }

    protected void onPause() {
        super.onPause();
        mSensorManager.unregisterListener(this);
    }

    public void onAccuracyChanged(Sensor sensor, int accuracy) {
    }

    public void onSensorChanged(SensorEvent event) {
    }
}
</pre>

@see SensorEventListener
@see SensorEvent
@see Sensor
"
      attribute 2521868 "TAG"
	class_attribute const_attribute protected explicit_type "String"
	init_value " \"SensorManager\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 2521996 "mTempMatrix"
	class_attribute const_attribute private explicit_type "float"
	multiplicity "[]"
	init_value " new float[16]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1665676 // mSensorListByType (<unidirectional association>)
	relation 1665676 --->
	  a role_name "mSensorListByType" init_value "
            new SparseArray<List<Sensor>>()" const_relation private
	    comment " Cached lists of sensors by type.  Guarded by mSensorListByType.
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<List<Sensor>> ${name}${value};
"
	    classrelation_ref 1665676 // mSensorListByType (<unidirectional association>)
	  b parent class_ref 696716 // SparseArray
      end

      classrelation 1665804 // mLegacySensorManager (<unidirectional association>)
	relation 1665804 --->
	  a role_name "mLegacySensorManager" private
	    comment " Legacy sensor manager implementation.  Guarded by mSensorListByType during initialization.
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1665804 // mLegacySensorManager (<unidirectional association>)
	  b parent class_ref 819212 // LegacySensorManager
      end

      attribute 2522124 "SENSOR_ORIENTATION"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1 << 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " NOTE: sensor IDs must be a power of 2 

A constant describing an orientation sensor. See
{@link android.hardware.SensorListener SensorListener} for more details.

@deprecated use {@link android.hardware.Sensor Sensor} instead.
"
      end

      attribute 2522252 "SENSOR_ACCELEROMETER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1 << 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A constant describing an accelerometer. See
{@link android.hardware.SensorListener SensorListener} for more details.

@deprecated use {@link android.hardware.Sensor Sensor} instead.
"
      end

      attribute 2522380 "SENSOR_TEMPERATURE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1 << 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A constant describing a temperature sensor See
{@link android.hardware.SensorListener SensorListener} for more details.

@deprecated use {@link android.hardware.Sensor Sensor} instead.
"
      end

      attribute 2522508 "SENSOR_MAGNETIC_FIELD"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1 << 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A constant describing a magnetic sensor See
{@link android.hardware.SensorListener SensorListener} for more details.

@deprecated use {@link android.hardware.Sensor Sensor} instead.
"
      end

      attribute 2522636 "SENSOR_LIGHT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1 << 4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A constant describing an ambient light sensor See
{@link android.hardware.SensorListener SensorListener} for more details.

@deprecated use {@link android.hardware.Sensor Sensor} instead.
"
      end

      attribute 2522764 "SENSOR_PROXIMITY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1 << 5"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A constant describing a proximity sensor See
{@link android.hardware.SensorListener SensorListener} for more details.

@deprecated use {@link android.hardware.Sensor Sensor} instead.
"
      end

      attribute 2522892 "SENSOR_TRICORDER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1 << 6"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A constant describing a Tricorder See
{@link android.hardware.SensorListener SensorListener} for more details.

@deprecated use {@link android.hardware.Sensor Sensor} instead.
"
      end

      attribute 2523020 "SENSOR_ORIENTATION_RAW"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1 << 7"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A constant describing an orientation sensor. See
{@link android.hardware.SensorListener SensorListener} for more details.

@deprecated use {@link android.hardware.Sensor Sensor} instead.
"
      end

      attribute 2523148 "SENSOR_ALL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x7F"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A constant that includes all sensors

@deprecated use {@link android.hardware.Sensor Sensor} instead.
"
      end

      attribute 2523276 "SENSOR_MIN"
	class_attribute const_attribute public explicit_type "int"
	init_value " SENSOR_ORIENTATION"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Smallest sensor ID

@deprecated use {@link android.hardware.Sensor Sensor} instead.
"
      end

      attribute 2523404 "SENSOR_MAX"
	class_attribute const_attribute public explicit_type "int"
	init_value " ((SENSOR_ALL + 1)>>1)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Largest sensor ID

@deprecated use {@link android.hardware.Sensor Sensor} instead.
"
      end

      attribute 2523532 "DATA_X"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Index of the X value in the array returned by
{@link android.hardware.SensorListener#onSensorChanged}

@deprecated use {@link android.hardware.Sensor Sensor} instead.
"
      end

      attribute 2523660 "DATA_Y"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Index of the Y value in the array returned by
{@link android.hardware.SensorListener#onSensorChanged}

@deprecated use {@link android.hardware.Sensor Sensor} instead.
"
      end

      attribute 2523788 "DATA_Z"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Index of the Z value in the array returned by
{@link android.hardware.SensorListener#onSensorChanged}

@deprecated use {@link android.hardware.Sensor Sensor} instead.
"
      end

      attribute 2523916 "RAW_DATA_INDEX"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Offset to the untransformed values in the array returned by
{@link android.hardware.SensorListener#onSensorChanged}

@deprecated use {@link android.hardware.Sensor Sensor} instead.
"
      end

      attribute 2524044 "RAW_DATA_X"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Index of the untransformed X value in the array returned by
{@link android.hardware.SensorListener#onSensorChanged}

@deprecated use {@link android.hardware.Sensor Sensor} instead.
"
      end

      attribute 2524172 "RAW_DATA_Y"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Index of the untransformed Y value in the array returned by
{@link android.hardware.SensorListener#onSensorChanged}

@deprecated use {@link android.hardware.Sensor Sensor} instead.
"
      end

      attribute 2524300 "RAW_DATA_Z"
	class_attribute const_attribute public explicit_type "int"
	init_value " 5"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Index of the untransformed Z value in the array returned by
{@link android.hardware.SensorListener#onSensorChanged}

@deprecated use {@link android.hardware.Sensor Sensor} instead.
"
      end

      attribute 2524428 "STANDARD_GRAVITY"
	class_attribute const_attribute public explicit_type "float"
	init_value " 9.80665f"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Standard gravity (g) on Earth. This value is equivalent to 1G "
      end

      attribute 2524556 "GRAVITY_SUN"
	class_attribute const_attribute public explicit_type "float"
	init_value " 275.0f"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Sun's gravity in SI units (m/s^2) "
      end

      attribute 2524684 "GRAVITY_MERCURY"
	class_attribute const_attribute public explicit_type "float"
	init_value " 3.70f"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Mercury's gravity in SI units (m/s^2) "
      end

      attribute 2524812 "GRAVITY_VENUS"
	class_attribute const_attribute public explicit_type "float"
	init_value " 8.87f"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Venus' gravity in SI units (m/s^2) "
      end

      attribute 2524940 "GRAVITY_EARTH"
	class_attribute const_attribute public explicit_type "float"
	init_value " 9.80665f"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Earth's gravity in SI units (m/s^2) "
      end

      attribute 2525068 "GRAVITY_MOON"
	class_attribute const_attribute public explicit_type "float"
	init_value " 1.6f"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " The Moon's gravity in SI units (m/s^2) "
      end

      attribute 2525196 "GRAVITY_MARS"
	class_attribute const_attribute public explicit_type "float"
	init_value " 3.71f"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Mars' gravity in SI units (m/s^2) "
      end

      attribute 2525324 "GRAVITY_JUPITER"
	class_attribute const_attribute public explicit_type "float"
	init_value " 23.12f"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Jupiter's gravity in SI units (m/s^2) "
      end

      attribute 2525452 "GRAVITY_SATURN"
	class_attribute const_attribute public explicit_type "float"
	init_value " 8.96f"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Saturn's gravity in SI units (m/s^2) "
      end

      attribute 2525580 "GRAVITY_URANUS"
	class_attribute const_attribute public explicit_type "float"
	init_value " 8.69f"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Uranus' gravity in SI units (m/s^2) "
      end

      attribute 2525708 "GRAVITY_NEPTUNE"
	class_attribute const_attribute public explicit_type "float"
	init_value " 11.0f"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Neptune's gravity in SI units (m/s^2) "
      end

      attribute 2525836 "GRAVITY_PLUTO"
	class_attribute const_attribute public explicit_type "float"
	init_value " 0.6f"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Pluto's gravity in SI units (m/s^2) "
      end

      attribute 2525964 "GRAVITY_DEATH_STAR_I"
	class_attribute const_attribute public explicit_type "float"
	init_value " 0.000000353036145f"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Gravity (estimate) on the first Death Star in Empire units (m/s^2) "
      end

      attribute 2526092 "GRAVITY_THE_ISLAND"
	class_attribute const_attribute public explicit_type "float"
	init_value " 4.815162342f"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Gravity on the island "
      end

      attribute 2526220 "MAGNETIC_FIELD_EARTH_MAX"
	class_attribute const_attribute public explicit_type "float"
	init_value " 60.0f"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Maximum magnetic field on Earth's surface "
      end

      attribute 2526348 "MAGNETIC_FIELD_EARTH_MIN"
	class_attribute const_attribute public explicit_type "float"
	init_value " 30.0f"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Minimum magnetic field on Earth's surface "
      end

      attribute 2526476 "PRESSURE_STANDARD_ATMOSPHERE"
	class_attribute const_attribute public explicit_type "float"
	init_value " 1013.25f"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Standard atmosphere, or average sea-level pressure in hPa (millibar) "
      end

      attribute 2526604 "LIGHT_SUNLIGHT_MAX"
	class_attribute const_attribute public explicit_type "float"
	init_value " 120000.0f"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Maximum luminance of sunlight in lux "
      end

      attribute 2526732 "LIGHT_SUNLIGHT"
	class_attribute const_attribute public explicit_type "float"
	init_value " 110000.0f"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " luminance of sunlight in lux "
      end

      attribute 2526860 "LIGHT_SHADE"
	class_attribute const_attribute public explicit_type "float"
	init_value " 20000.0f"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " luminance in shade in lux "
      end

      attribute 2526988 "LIGHT_OVERCAST"
	class_attribute const_attribute public explicit_type "float"
	init_value " 10000.0f"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " luminance under an overcast sky in lux "
      end

      attribute 2527116 "LIGHT_SUNRISE"
	class_attribute const_attribute public explicit_type "float"
	init_value " 400.0f"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " luminance at sunrise in lux "
      end

      attribute 2527244 "LIGHT_CLOUDY"
	class_attribute const_attribute public explicit_type "float"
	init_value " 100.0f"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " luminance under a cloudy sky in lux "
      end

      attribute 2527372 "LIGHT_FULLMOON"
	class_attribute const_attribute public explicit_type "float"
	init_value " 0.25f"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " luminance at night with full moon in lux "
      end

      attribute 2527500 "LIGHT_NO_MOON"
	class_attribute const_attribute public explicit_type "float"
	init_value " 0.001f"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " luminance at night with no moon in lux"
      end

      attribute 2527628 "SENSOR_DELAY_FASTEST"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " get sensor data as fast as possible "
      end

      attribute 2527756 "SENSOR_DELAY_GAME"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " rate suitable for games "
      end

      attribute 2527884 "SENSOR_DELAY_UI"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " rate suitable for the user interface  "
      end

      attribute 2528012 "SENSOR_DELAY_NORMAL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " rate (default) suitable for screen orientation changes "
      end

      attribute 2528140 "SENSOR_STATUS_UNRELIABLE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The values returned by this sensor cannot be trusted, calibration is
needed or the environment doesn't allow readings
"
      end

      attribute 2528268 "SENSOR_STATUS_ACCURACY_LOW"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "This sensor is reporting data with low accuracy, calibration with the
environment is needed
"
      end

      attribute 2528396 "SENSOR_STATUS_ACCURACY_MEDIUM"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "This sensor is reporting data with an average level of accuracy,
calibration with the environment may improve the readings
"
      end

      attribute 2528524 "SENSOR_STATUS_ACCURACY_HIGH"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " This sensor is reporting data with maximum accuracy "
      end

      attribute 2528652 "AXIS_X"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " see {@link #remapCoordinateSystem} "
      end

      attribute 2528780 "AXIS_Y"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " see {@link #remapCoordinateSystem} "
      end

      attribute 2528908 "AXIS_Z"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " see {@link #remapCoordinateSystem} "
      end

      attribute 2529036 "AXIS_MINUS_X"
	class_attribute const_attribute public explicit_type "int"
	init_value " AXIS_X | 0x80"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " see {@link #remapCoordinateSystem} "
      end

      attribute 2529164 "AXIS_MINUS_Y"
	class_attribute const_attribute public explicit_type "int"
	init_value " AXIS_Y | 0x80"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " see {@link #remapCoordinateSystem} "
      end

      attribute 2529292 "AXIS_MINUS_Z"
	class_attribute const_attribute public explicit_type "int"
	init_value " AXIS_Z | 0x80"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " see {@link #remapCoordinateSystem} "
      end

      operation 3417100 "SensorManager"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@hide}"
      end

      operation 3417228 "getFullSensorList"
	abstract protected return_type class_ref 819980 // Sensor
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the full list of sensors that are available.
@hide"
      end

      operation 3417356 "getSensors"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@return available sensors.
@deprecated This method is deprecated, use
            {@link SensorManager#getSensorList(int)} instead"
      end

      operation 3417484 "getSensorList"
	public return_type class_ref 819980 // Sensor
	nparams 1
	  param in name "type" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Use this method to get the list of available sensors of a certain type.
Make multiple calls to get sensors of different types or use
{@link android.hardware.Sensor#TYPE_ALL Sensor.TYPE_ALL} to get all the
sensors.

@param type
       of sensors requested

@return a list of sensors matching the asked type.

@see #getDefaultSensor(int)
@see Sensor"
      end

      operation 3417612 "getDefaultSensor"
	public return_type class_ref 819980 // Sensor
	nparams 1
	  param in name "type" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Use this method to get the default sensor for a given type. Note that the
returned sensor could be a composite sensor, and its data could be
averaged or filtered. If you need to access the raw sensors use
{@link SensorManager#getSensorList(int) getSensorList}.

@param type
       of sensors requested

@return the default sensors matching the asked type.

@see #getSensorList(int)
@see Sensor"
      end

      operation 3417740 "registerListener"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "listener" type class_ref 819468 // SensorListener
	  param in name "sensors" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Registers a listener for given sensors.

@deprecated This method is deprecated, use
            {@link SensorManager#registerListener(SensorEventListener, Sensor, int)}
            instead.

@param listener
       sensor listener object

@param sensors
       a bit masks of the sensors to register to

@return <code>true</code> if the sensor is supported and successfully
        enabled"
      end

      operation 3417868 "registerListener"
	public explicit_return_type "boolean"
	nparams 3
	  param inout name "listener" type class_ref 819468 // SensorListener
	  param in name "sensors" explicit_type "int"
	  param in name "rate" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Registers a SensorListener for given sensors.

@deprecated This method is deprecated, use
            {@link SensorManager#registerListener(SensorEventListener, Sensor, int)}
            instead.

@param listener
       sensor listener object

@param sensors
       a bit masks of the sensors to register to

@param rate
       rate of events. This is only a hint to the system. events may be
       received faster or slower than the specified rate. Usually events
       are received faster. The value must be one of
       {@link #SENSOR_DELAY_NORMAL}, {@link #SENSOR_DELAY_UI},
       {@link #SENSOR_DELAY_GAME}, or {@link #SENSOR_DELAY_FASTEST}.

@return <code>true</code> if the sensor is supported and successfully
        enabled"
      end

      operation 3417996 "unregisterListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 819468 // SensorListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Unregisters a listener for all sensors.

@deprecated This method is deprecated, use
            {@link SensorManager#unregisterListener(SensorEventListener)}
            instead.

@param listener
       a SensorListener object"
      end

      operation 3418124 "unregisterListener"
	public explicit_return_type "void"
	nparams 2
	  param inout name "listener" type class_ref 819468 // SensorListener
	  param in name "sensors" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Unregisters a listener for the sensors with which it is registered.

@deprecated This method is deprecated, use
            {@link SensorManager#unregisterListener(SensorEventListener, Sensor)}
            instead.

@param listener
       a SensorListener object

@param sensors
       a bit masks of the sensors to unregister from"
      end

      operation 3418252 "unregisterListener"
	public explicit_return_type "void"
	nparams 2
	  param inout name "listener" type class_ref 819724 // SensorEventListener
	  param inout name "sensor" type class_ref 819980 // Sensor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unregisters a listener for the sensors with which it is registered.

@param listener
       a SensorEventListener object

@param sensor
       the sensor to unregister from

@see #unregisterListener(SensorEventListener)
@see #registerListener(SensorEventListener, Sensor, int)
"
      end

      operation 3418380 "unregisterListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 819724 // SensorEventListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unregisters a listener for all sensors.

@param listener
       a SensorListener object

@see #unregisterListener(SensorEventListener, Sensor)
@see #registerListener(SensorEventListener, Sensor, int)
"
      end

      operation 3418508 "unregisterListenerImpl"
	abstract protected explicit_return_type "void"
	nparams 2
	  param inout name "listener" type class_ref 819724 // SensorEventListener
	  param inout name "sensor" type class_ref 819980 // Sensor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 3418636 "registerListener"
	public explicit_return_type "boolean"
	nparams 3
	  param inout name "listener" type class_ref 819724 // SensorEventListener
	  param inout name "sensor" type class_ref 819980 // Sensor
	  param in name "rate" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Registers a {@link android.hardware.SensorEventListener
SensorEventListener} for the given sensor.

@param listener
       A {@link android.hardware.SensorEventListener SensorEventListener}
       object.

@param sensor
       The {@link android.hardware.Sensor Sensor} to register to.

@param rate
       The rate {@link android.hardware.SensorEvent sensor events} are
       delivered at. This is only a hint to the system. Events may be
       received faster or slower than the specified rate. Usually events
       are received faster. The value must be one of
       {@link #SENSOR_DELAY_NORMAL}, {@link #SENSOR_DELAY_UI},
       {@link #SENSOR_DELAY_GAME}, or {@link #SENSOR_DELAY_FASTEST}
       or, the desired delay between events in microsecond.

@return <code>true</code> if the sensor is supported and successfully
        enabled.

@see #registerListener(SensorEventListener, Sensor, int, Handler)
@see #unregisterListener(SensorEventListener)
@see #unregisterListener(SensorEventListener, Sensor)
"
      end

      operation 3418764 "registerListener"
	public explicit_return_type "boolean"
	nparams 4
	  param inout name "listener" type class_ref 819724 // SensorEventListener
	  param inout name "sensor" type class_ref 819980 // Sensor
	  param in name "rate" explicit_type "int"
	  param inout name "handler" type class_ref 687500 // Handler
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Registers a {@link android.hardware.SensorEventListener
SensorEventListener} for the given sensor.

@param listener
       A {@link android.hardware.SensorEventListener SensorEventListener}
       object.

@param sensor
       The {@link android.hardware.Sensor Sensor} to register to.

@param rate
       The rate {@link android.hardware.SensorEvent sensor events} are
       delivered at. This is only a hint to the system. Events may be
       received faster or slower than the specified rate. Usually events
       are received faster. The value must be one of
       {@link #SENSOR_DELAY_NORMAL}, {@link #SENSOR_DELAY_UI},
       {@link #SENSOR_DELAY_GAME}, or {@link #SENSOR_DELAY_FASTEST}.
       or, the desired delay between events in microsecond.

@param handler
       The {@link android.os.Handler Handler} the
       {@link android.hardware.SensorEvent sensor events} will be
       delivered to.

@return true if the sensor is supported and successfully enabled.

@see #registerListener(SensorEventListener, Sensor, int)
@see #unregisterListener(SensorEventListener)
@see #unregisterListener(SensorEventListener, Sensor)
"
      end

      operation 3418892 "registerListenerImpl"
	abstract protected explicit_return_type "boolean"
	nparams 4
	  param inout name "listener" type class_ref 819724 // SensorEventListener
	  param inout name "sensor" type class_ref 819980 // Sensor
	  param in name "delay" explicit_type "int"
	  param inout name "handler" type class_ref 687500 // Handler
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 3419020 "getRotationMatrix"
	class_operation public explicit_return_type "boolean"
	nparams 4
	  param inout name "R" explicit_type "float"
	  param inout name "I" explicit_type "float"
	  param inout name "gravity" explicit_type "float"
	  param inout name "geomagnetic" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}, ${t2}[] ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>
Computes the inclination matrix <b>I</b> as well as the rotation matrix
<b>R</b> transforming a vector from the device coordinate system to the
world's coordinate system which is defined as a direct orthonormal basis,
where:
</p>

<ul>
<li>X is defined as the vector product <b>Y.Z</b> (It is tangential to
the ground at the device's current location and roughly points East).</li>
<li>Y is tangential to the ground at the device's current location and
points towards the magnetic North Pole.</li>
<li>Z points towards the sky and is perpendicular to the ground.</li>
</ul>

<p>
<center><img src=\"../../../images/axis_globe.png\"
alt=\"World coordinate-system diagram.\" border=\"0\" /></center>
</p>

<p>
<hr>
<p>
By definition:
<p>
[0 0 g] = <b>R</b> * <b>gravity</b> (g = magnitude of gravity)
<p>
[0 m 0] = <b>I</b> * <b>R</b> * <b>geomagnetic</b> (m = magnitude of
geomagnetic field)
<p>
<b>R</b> is the identity matrix when the device is aligned with the
world's coordinate system, that is, when the device's X axis points
toward East, the Y axis points to the North Pole and the device is facing
the sky.

<p>
<b>I</b> is a rotation matrix transforming the geomagnetic vector into
the same coordinate space as gravity (the world's coordinate space).
<b>I</b> is a simple rotation around the X axis. The inclination angle in
radians can be computed with {@link #getInclination}.
<hr>

<p>
Each matrix is returned either as a 3x3 or 4x4 row-major matrix depending
on the length of the passed array:
<p>
<u>If the array length is 16:</u>

<pre>
  /  M[ 0]   M[ 1]   M[ 2]   M[ 3]  \\
  |  M[ 4]   M[ 5]   M[ 6]   M[ 7]  |
  |  M[ 8]   M[ 9]   M[10]   M[11]  |
  \\  M[12]   M[13]   M[14]   M[15]  /
</pre>

This matrix is ready to be used by OpenGL ES's
{@link javax.microedition.khronos.opengles.GL10#glLoadMatrixf(float[], int)
glLoadMatrixf(float[], int)}.
<p>
Note that because OpenGL matrices are column-major matrices you must
transpose the matrix before using it. However, since the matrix is a
rotation matrix, its transpose is also its inverse, conveniently, it is
often the inverse of the rotation that is needed for rendering; it can
therefore be used with OpenGL ES directly.
<p>
Also note that the returned matrices always have this form:

<pre>
  /  M[ 0]   M[ 1]   M[ 2]   0  \\
  |  M[ 4]   M[ 5]   M[ 6]   0  |
  |  M[ 8]   M[ 9]   M[10]   0  |
  \\      0       0       0   1  /
</pre>

<p>
<u>If the array length is 9:</u>

<pre>
  /  M[ 0]   M[ 1]   M[ 2]  \\
  |  M[ 3]   M[ 4]   M[ 5]  |
  \\  M[ 6]   M[ 7]   M[ 8]  /
</pre>

<hr>
<p>
The inverse of each matrix can be computed easily by taking its
transpose.

<p>
The matrices returned by this function are meaningful only when the
device is not free-falling and it is not close to the magnetic north. If
the device is accelerating, or placed into a strong magnetic field, the
returned matrices may be inaccurate.

@param R
       is an array of 9 floats holding the rotation matrix <b>R</b> when
       this function returns. R can be null.
       <p>

@param I
       is an array of 9 floats holding the rotation matrix <b>I</b> when
       this function returns. I can be null.
       <p>

@param gravity
       is an array of 3 floats containing the gravity vector expressed in
       the device's coordinate. You can simply use the
       {@link android.hardware.SensorEvent#values values} returned by a
       {@link android.hardware.SensorEvent SensorEvent} of a
       {@link android.hardware.Sensor Sensor} of type
       {@link android.hardware.Sensor#TYPE_ACCELEROMETER
       TYPE_ACCELEROMETER}.
       <p>

@param geomagnetic
       is an array of 3 floats containing the geomagnetic vector
       expressed in the device's coordinate. You can simply use the
       {@link android.hardware.SensorEvent#values values} returned by a
       {@link android.hardware.SensorEvent SensorEvent} of a
       {@link android.hardware.Sensor Sensor} of type
       {@link android.hardware.Sensor#TYPE_MAGNETIC_FIELD
       TYPE_MAGNETIC_FIELD}.

@return <code>true</code> on success, <code>false</code> on failure (for
        instance, if the device is in free fall). On failure the output
        matrices are not modified.

@see #getInclination(float[])
@see #getOrientation(float[], float[])
@see #remapCoordinateSystem(float[], int, int, float[])"
      end

      operation 3419148 "getInclination"
	class_operation public explicit_return_type "float"
	nparams 1
	  param inout name "I" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Computes the geomagnetic inclination angle in radians from the
inclination matrix <b>I</b> returned by {@link #getRotationMatrix}.

@param I
       inclination matrix see {@link #getRotationMatrix}.

@return The geomagnetic inclination angle in radians.

@see #getRotationMatrix(float[], float[], float[], float[])
@see #getOrientation(float[], float[])
@see GeomagneticField
"
      end

      operation 3419276 "remapCoordinateSystem"
	class_operation public explicit_return_type "boolean"
	nparams 4
	  param inout name "inR" explicit_type "float"
	  param in name "X" explicit_type "int"
	  param in name "Y" explicit_type "int"
	  param inout name "outR" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>
Rotates the supplied rotation matrix so it is expressed in a different
coordinate system. This is typically used when an application needs to
compute the three orientation angles of the device (see
{@link #getOrientation}) in a different coordinate system.
</p>

<p>
When the rotation matrix is used for drawing (for instance with OpenGL
ES), it usually <b>doesn't need</b> to be transformed by this function,
unless the screen is physically rotated, in which case you can use
{@link android.view.Display#getRotation() Display.getRotation()} to
retrieve the current rotation of the screen. Note that because the user
is generally free to rotate their screen, you often should consider the
rotation in deciding the parameters to use here.
</p>

<p>
<u>Examples:</u>
<p>

<ul>
<li>Using the camera (Y axis along the camera's axis) for an augmented
reality application where the rotation angles are needed:</li>

<p>
<ul>
<code>remapCoordinateSystem(inR, AXIS_X, AXIS_Z, outR);</code>
</ul>
</p>

<li>Using the device as a mechanical compass when rotation is
{@link android.view.Surface#ROTATION_90 Surface.ROTATION_90}:</li>

<p>
<ul>
<code>remapCoordinateSystem(inR, AXIS_Y, AXIS_MINUS_X, outR);</code>
</ul>
</p>

Beware of the above example. This call is needed only to account for a
rotation from its natural orientation when calculating the rotation
angles (see {@link #getOrientation}). If the rotation matrix is also used
for rendering, it may not need to be transformed, for instance if your
{@link android.app.Activity Activity} is running in landscape mode.
</ul>

<p>
Since the resulting coordinate system is orthonormal, only two axes need
to be specified.

@param inR
       the rotation matrix to be transformed. Usually it is the matrix
       returned by {@link #getRotationMatrix}.

@param X
       defines on which world axis and direction the X axis of the device
       is mapped.

@param Y
       defines on which world axis and direction the Y axis of the device
       is mapped.

@param outR
       the transformed rotation matrix. inR and outR can be the same
       array, but it is not recommended for performance reason.

@return <code>true</code> on success. <code>false</code> if the input
        parameters are incorrect, for instance if X and Y define the same
        axis. Or if inR and outR don't have the same length.

@see #getRotationMatrix(float[], float[], float[], float[])"
      end

      operation 3419404 "remapCoordinateSystemImpl"
	class_operation private explicit_return_type "boolean"
	nparams 4
	  param inout name "inR" explicit_type "float"
	  param in name "X" explicit_type "int"
	  param in name "Y" explicit_type "int"
	  param inout name "outR" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3419532 "getOrientation"
	class_operation public explicit_return_type "float"
	nparams 2
	  param inout name "R" explicit_type "float"
	  param inout name "values" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Computes the device's orientation based on the rotation matrix.
<p>
When it returns, the array values is filled with the result:
<ul>
<li>values[0]: <i>azimuth</i>, rotation around the Z axis.</li>
<li>values[1]: <i>pitch</i>, rotation around the X axis.</li>
<li>values[2]: <i>roll</i>, rotation around the Y axis.</li>
</ul>
<p>The reference coordinate-system used is different from the world
coordinate-system defined for the rotation matrix:</p>
<ul>
<li>X is defined as the vector product <b>Y.Z</b> (It is tangential to
the ground at the device's current location and roughly points West).</li>
<li>Y is tangential to the ground at the device's current location and
points towards the magnetic North Pole.</li>
<li>Z points towards the center of the Earth and is perpendicular to the ground.</li>
</ul>

<p>
<center><img src=\"../../../images/axis_globe_inverted.png\"
alt=\"Inverted world coordinate-system diagram.\" border=\"0\" /></center>
</p>
<p>
All three angles above are in <b>radians</b> and <b>positive</b> in the
<b>counter-clockwise</b> direction.

@param R
       rotation matrix see {@link #getRotationMatrix}.

@param values
       an array of 3 floats to hold the result.

@return The array values passed as argument.

@see #getRotationMatrix(float[], float[], float[], float[])
@see GeomagneticField"
      end

      operation 3419660 "getAltitude"
	class_operation public explicit_return_type "float"
	nparams 2
	  param in name "p0" explicit_type "float"
	  param in name "p" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Computes the Altitude in meters from the atmospheric pressure and the
pressure at sea level.
<p>
Typically the atmospheric pressure is read from a
{@link Sensor#TYPE_PRESSURE} sensor. The pressure at sea level must be
known, usually it can be retrieved from airport databases in the
vicinity. If unknown, you can use {@link #PRESSURE_STANDARD_ATMOSPHERE}
as an approximation, but absolute altitudes won't be accurate.
</p>
<p>
To calculate altitude differences, you must calculate the difference
between the altitudes at both points. If you don't know the altitude
as sea level, you can use {@link #PRESSURE_STANDARD_ATMOSPHERE} instead,
which will give good results considering the range of pressure typically
involved.
</p>
<p>
<code><ul>
 float altitude_difference =
     getAltitude(SensorManager.PRESSURE_STANDARD_ATMOSPHERE, pressure_at_point2)
     - getAltitude(SensorManager.PRESSURE_STANDARD_ATMOSPHERE, pressure_at_point1);
</ul></code>
</p>

@param p0 pressure at sea level
@param p atmospheric pressure
@return Altitude in meters"
      end

      operation 3419788 "getAngleChange"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "angleChange" explicit_type "float"
	  param inout name "R" explicit_type "float"
	  param inout name "prevR" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Helper function to compute the angle change between two rotation matrices.
 Given a current rotation matrix (R) and a previous rotation matrix
 (prevR) computes the rotation around the z,x, and y axes which
 transforms prevR to R.
 outputs a 3 element vector containing the z,x, and y angle
 change at indexes 0, 1, and 2 respectively.
<p> Each input matrix is either as a 3x3 or 4x4 row-major matrix
depending on the length of the passed array:
<p>If the array length is 9, then the array elements represent this matrix
<pre>
  /  R[ 0]   R[ 1]   R[ 2]   \\
  |  R[ 3]   R[ 4]   R[ 5]   |
  \\  R[ 6]   R[ 7]   R[ 8]   /
</pre>
<p>If the array length is 16, then the array elements represent this matrix
<pre>
  /  R[ 0]   R[ 1]   R[ 2]   R[ 3]  \\
  |  R[ 4]   R[ 5]   R[ 6]   R[ 7]  |
  |  R[ 8]   R[ 9]   R[10]   R[11]  |
  \\  R[12]   R[13]   R[14]   R[15]  /
</pre>
@param R current rotation matrix
@param prevR previous rotation matrix
@param angleChange an an array of floats (z, x, and y) in which the angle change is stored"
      end

      operation 3419916 "getRotationMatrixFromVector"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "R" explicit_type "float"
	  param inout name "rotationVector" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Helper function to convert a rotation vector to a rotation matrix.
 Given a rotation vector (presumably from a ROTATION_VECTOR sensor), returns a
 9  or 16 element rotation matrix in the array R.  R must have length 9 or 16.
 If R.length == 9, the following matrix is returned:
<pre>
  /  R[ 0]   R[ 1]   R[ 2]   \\
  |  R[ 3]   R[ 4]   R[ 5]   |
  \\  R[ 6]   R[ 7]   R[ 8]   /
</pre>
If R.length == 16, the following matrix is returned:
<pre>
  /  R[ 0]   R[ 1]   R[ 2]   0  \\
  |  R[ 4]   R[ 5]   R[ 6]   0  |
  |  R[ 8]   R[ 9]   R[10]   0  |
  \\  0       0       0       1  /
</pre>
 @param rotationVector the rotation vector to convert
 @param R an array of floats in which to store the rotation matrix"
      end

      operation 3420044 "getQuaternionFromVector"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "Q" explicit_type "float"
	  param inout name "rv" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Helper function to convert a rotation vector to a normalized quaternion.
 Given a rotation vector (presumably from a ROTATION_VECTOR sensor), returns a normalized
 quaternion in the array Q.  The quaternion is stored as [w, x, y, z]
 @param rv the rotation vector to convert
 @param Q an array of floats in which to store the computed quaternion"
      end

      operation 3420172 "getLegacySensorManager"
	private return_type class_ref 819212 // LegacySensorManager
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 820236 "SensorEventPool"
	visibility protected 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 2529420 "mPoolSize"
	  const_attribute private explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 1665932 // mPool (<unidirectional association>)
	  relation 1665932 --->
	    a role_name "mPool" multiplicity "[]" const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 1665932 // mPool (<unidirectional association>)
	    b parent class_ref 819852 // SensorEvent
	end

	attribute 2529548 "mNumItemsInPool"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 3420300 "createSensorEvent"
	  private return_type class_ref 819852 // SensorEvent
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3420428 "SensorEventPool"
	  package explicit_return_type ""
	  nparams 1
	    param in name "poolSize" explicit_type "int"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3420556 "getFromPool"
	  package return_type class_ref 819852 // SensorEvent
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3420684 "returnToPool"
	  package explicit_return_type "void"
	  nparams 1
	    param inout name "t" type class_ref 819852 // SensorEvent
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 6441996 // <unidirectional association>
	relation 6441868 --->
	  a role_name "" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6441996 // <unidirectional association>
	  b parent class_ref 693260 // Activity
      end
    end

    class 819468 "SensorListener"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      java_annotation "@Deprecated
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Used for receiving notifications from the SensorManager when
sensor values have changed.

@deprecated Use 
{@link android.hardware.SensorEventListener SensorEventListener} instead."
      operation 3416844 "onSensorChanged"
	public explicit_return_type "void"
	nparams 2
	  param in name "sensor" explicit_type "int"
	  param inout name "values" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Called when sensor values have changed.
The length and contents of the values array vary
depending on which sensor is being monitored.
See {@link android.hardware.SensorManager SensorManager}
for details on possible sensor types.

<p><u>Definition of the coordinate system used below.</u><p>
<p>The X axis refers to the screen's horizontal axis
(the small edge in portrait mode, the long edge in landscape mode) and
points to the right. 
<p>The Y axis refers to the screen's vertical axis and points towards
the top of the screen (the origin is in the lower-left corner).
<p>The Z axis points toward the sky when the device is lying on its back
on a table.
<p> <b>IMPORTANT NOTE:</b> The axis <b><u>are swapped</u></b> when the
device's screen orientation changes. To access the unswapped values,
use indices 3, 4 and 5 in values[].

<p>{@link android.hardware.SensorManager#SENSOR_ORIENTATION SENSOR_ORIENTATION},
{@link android.hardware.SensorManager#SENSOR_ORIENTATION_RAW SENSOR_ORIENTATION_RAW}:<p>
 All values are angles in degrees.

<p>values[0]: Azimuth, rotation around the Z axis (0<=azimuth<360).
0 = North, 90 = East, 180 = South, 270 = West

<p>values[1]: Pitch, rotation around X axis (-180<=pitch<=180), with positive
values when the z-axis moves toward the y-axis.

<p>values[2]: Roll, rotation around Y axis (-90<=roll<=90), with positive values 
when the z-axis moves toward the x-axis.

<p>Note that this definition of yaw, pitch and roll is different from the
traditional definition used in aviation where the X axis is along the long
side of the plane (tail to nose).

<p>{@link android.hardware.SensorManager#SENSOR_ACCELEROMETER SENSOR_ACCELEROMETER}:<p>
 All values are in SI units (m/s^2) and measure contact forces.
 
 <p>values[0]: force applied by the device on the x-axis 
 <p>values[1]: force applied by the device on the y-axis 
 <p>values[2]: force applied by the device on the z-axis
 
 <p><u>Examples</u>:
   <li>When the device is pushed on its left side toward the right, the
   x acceleration value is negative (the device applies a reaction force
   to the push toward the left)</li>
   
   <li>When the device lies flat on a table, the acceleration value is 
   {@link android.hardware.SensorManager#STANDARD_GRAVITY -STANDARD_GRAVITY},
   which correspond to the force the device applies on the table in reaction
   to gravity.</li>

<p>{@link android.hardware.SensorManager#SENSOR_MAGNETIC_FIELD SENSOR_MAGNETIC_FIELD}:<p>
 All values are in micro-Tesla (uT) and measure the ambient magnetic
 field in the X, Y and -Z axis.
 <p><b><u>Note:</u></b> the magnetic field's Z axis is inverted.
 
@param sensor The ID of the sensor being monitored
@param values The new values for the sensor."
      end

      operation 3416972 "onAccuracyChanged"
	public explicit_return_type "void"
	nparams 2
	  param in name "sensor" explicit_type "int"
	  param in name "accuracy" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when the accuracy of a sensor has changed.
See {@link android.hardware.SensorManager SensorManager}
for details.

@param sensor The ID of the sensor being monitored
@param accuracy The new accuracy of this sensor."
      end
    end

    class 819724 "SensorEventListener"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Used for receiving notifications from the SensorManager when
sensor values have changed."
      operation 3413516 "onSensorChanged"
	public explicit_return_type "void"
	nparams 1
	  param inout name "event" type class_ref 819852 // SensorEvent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when sensor values have changed.
<p>See {@link android.hardware.SensorManager SensorManager}
for details on possible sensor types.
<p>See also {@link android.hardware.SensorEvent SensorEvent}.

<p><b>NOTE:</b> The application doesn't own the
{@link android.hardware.SensorEvent event}
object passed as a parameter and therefore cannot hold on to it.
The object may be part of an internal pool and may be reused by
the framework.

@param event the {@link android.hardware.SensorEvent SensorEvent}. "
      end

      operation 3413644 "onAccuracyChanged"
	public explicit_return_type "void"
	nparams 2
	  param inout name "sensor" type class_ref 819980 // Sensor
	  param in name "accuracy" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when the accuracy of a sensor has changed.
<p>See {@link android.hardware.SensorManager SensorManager}
for details.

@param accuracy The new accuracy of this sensor"
      end
    end

    class 819852 "SensorEvent"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>
This class represents a {@link android.hardware.Sensor Sensor} event and
holds informations such as the sensor's type, the time-stamp, accuracy and of
course the sensor's {@link SensorEvent#values data}.
</p>

<p>
<u>Definition of the coordinate system used by the SensorEvent API.</u>
</p>

<p>
The coordinate-system is defined relative to the screen of the phone in its
default orientation. The axes are not swapped when the device's screen
orientation changes.
</p>

<p>
The X axis is horizontal and points to the right, the Y axis is vertical and
points up and the Z axis points towards the outside of the front face of the
screen. In this system, coordinates behind the screen have negative Z values.
</p>

<p>
<center><img src=\"../../../images/axis_device.png\"
alt=\"Sensors coordinate-system diagram.\" border=\"0\" /></center>
</p>

<p>
<b>Note:</b> This coordinate system is different from the one used in the
Android 2D APIs where the origin is in the top-left corner.
</p>

@see SensorManager
@see SensorEvent
@see Sensor
"
      attribute 2521484 "values"
	const_attribute public explicit_type "float"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "<p>
The length and contents of the {@link #values values} array depends on
which {@link android.hardware.Sensor sensor} type is being monitored (see
also {@link SensorEvent} for a definition of the coordinate system used).
</p>

<h4>{@link android.hardware.Sensor#TYPE_ACCELEROMETER
Sensor.TYPE_ACCELEROMETER}:</h4> All values are in SI units (m/s^2)

<ul>
<p>
values[0]: Acceleration minus Gx on the x-axis
</p>
<p>
values[1]: Acceleration minus Gy on the y-axis
</p>
<p>
values[2]: Acceleration minus Gz on the z-axis
</p>
</ul>

<p>
A sensor of this type measures the acceleration applied to the device
(<b>Ad</b>). Conceptually, it does so by measuring forces applied to the
sensor itself (<b>Fs</b>) using the relation:
</p>

<b><center>Ad = - &#8721;Fs / mass</center></b>

<p>
In particular, the force of gravity is always influencing the measured
acceleration:
</p>

<b><center>Ad = -g - &#8721;F / mass</center></b>

<p>
For this reason, when the device is sitting on a table (and obviously not
accelerating), the accelerometer reads a magnitude of <b>g</b> = 9.81
m/s^2
</p>

<p>
Similarly, when the device is in free-fall and therefore dangerously
accelerating towards to ground at 9.81 m/s^2, its accelerometer reads a
magnitude of 0 m/s^2.
</p>

<p>
It should be apparent that in order to measure the real acceleration of
the device, the contribution of the force of gravity must be eliminated.
This can be achieved by applying a <i>high-pass</i> filter. Conversely, a
<i>low-pass</i> filter can be used to isolate the force of gravity.
</p>

<pre class=\"prettyprint\">

    public void onSensorChanged(SensorEvent event)
    {
         // alpha is calculated as t / (t + dT)
         // with t, the low-pass filter's time-constant
         // and dT, the event delivery rate

         final float alpha = 0.8;

         gravity[0] = alpha * gravity[0] + (1 - alpha) * event.values[0];
         gravity[1] = alpha * gravity[1] + (1 - alpha) * event.values[1];
         gravity[2] = alpha * gravity[2] + (1 - alpha) * event.values[2];

         linear_acceleration[0] = event.values[0] - gravity[0];
         linear_acceleration[1] = event.values[1] - gravity[1];
         linear_acceleration[2] = event.values[2] - gravity[2];
    }
</pre>

<p>
<u>Examples</u>:
<ul>
<li>When the device lies flat on a table and is pushed on its left side
toward the right, the x acceleration value is positive.</li>

<li>When the device lies flat on a table, the acceleration value is
+9.81, which correspond to the acceleration of the device (0 m/s^2) minus
the force of gravity (-9.81 m/s^2).</li>

<li>When the device lies flat on a table and is pushed toward the sky
with an acceleration of A m/s^2, the acceleration value is equal to
A+9.81 which correspond to the acceleration of the device (+A m/s^2)
minus the force of gravity (-9.81 m/s^2).</li>
</ul>


<h4>{@link android.hardware.Sensor#TYPE_MAGNETIC_FIELD
Sensor.TYPE_MAGNETIC_FIELD}:</h4>
All values are in micro-Tesla (uT) and measure the ambient magnetic field
in the X, Y and Z axis.

<h4>{@link android.hardware.Sensor#TYPE_GYROSCOPE Sensor.TYPE_GYROSCOPE}:
</h4> All values are in radians/second and measure the rate of rotation
around the device's local X, Y and Z axis. The coordinate system is the
same as is used for the acceleration sensor. Rotation is positive in the
counter-clockwise direction. That is, an observer looking from some
positive location on the x, y or z axis at a device positioned on the
origin would report positive rotation if the device appeared to be
rotating counter clockwise. Note that this is the standard mathematical
definition of positive rotation and does not agree with the definition of
roll given earlier.
<ul>
<p>
values[0]: Angular speed around the x-axis
</p>
<p>
values[1]: Angular speed around the y-axis
</p>
<p>
values[2]: Angular speed around the z-axis
</p>
</ul>
<p>
Typically the output of the gyroscope is integrated over time to
calculate a rotation describing the change of angles over the timestep,
for example:
</p>

<pre class=\"prettyprint\">
    private static final float NS2S = 1.0f / 1000000000.0f;
    private final float[] deltaRotationVector = new float[4]();
    private float timestamp;

    public void onSensorChanged(SensorEvent event) {
         // This timestep's delta rotation to be multiplied by the current rotation
         // after computing it from the gyro sample data.
         if (timestamp != 0) {
             final float dT = (event.timestamp - timestamp) * NS2S;
             // Axis of the rotation sample, not normalized yet.
             float axisX = event.values[0];
             float axisY = event.values[1];
             float axisZ = event.values[2];

             // Calculate the angular speed of the sample
             float omegaMagnitude = sqrt(axisX*axisX + axisY*axisY + axisZ*axisZ);

             // Normalize the rotation vector if it's big enough to get the axis
             if (omegaMagnitude > EPSILON) {
                 axisX /= omegaMagnitude;
                 axisY /= omegaMagnitude;
                 axisZ /= omegaMagnitude;
             }

             // Integrate around this axis with the angular speed by the timestep
             // in order to get a delta rotation from this sample over the timestep
             // We will convert this axis-angle representation of the delta rotation
             // into a quaternion before turning it into the rotation matrix.
             float thetaOverTwo = omegaMagnitude * dT / 2.0f;
             float sinThetaOverTwo = sin(thetaOverTwo);
             float cosThetaOverTwo = cos(thetaOverTwo);
             deltaRotationVector[0] = sinThetaOverTwo * axisX;
             deltaRotationVector[1] = sinThetaOverTwo * axisY;
             deltaRotationVector[2] = sinThetaOverTwo * axisZ;
             deltaRotationVector[3] = cosThetaOverTwo;
         }
         timestamp = event.timestamp;
         float[] deltaRotationMatrix = new float[9];
         SensorManager.getRotationMatrixFromVector(deltaRotationMatrix, deltaRotationVector);
         // User code should concatenate the delta rotation we computed with the current rotation
         // in order to get the updated rotation.
         // rotationCurrent = rotationCurrent * deltaRotationMatrix;
    }
</pre>
<p>
In practice, the gyroscope noise and offset will introduce some errors
which need to be compensated for. This is usually done using the
information from other sensors, but is beyond the scope of this document.
</p>
<h4>{@link android.hardware.Sensor#TYPE_LIGHT Sensor.TYPE_LIGHT}:</h4>
<ul>
<p>
values[0]: Ambient light level in SI lux units
</ul>

<h4>{@link android.hardware.Sensor#TYPE_PRESSURE Sensor.TYPE_PRESSURE}:</h4>
<ul>
<p>
values[0]: Atmospheric pressure in hPa (millibar)
</ul>

<h4>{@link android.hardware.Sensor#TYPE_PROXIMITY Sensor.TYPE_PROXIMITY}:
</h4>

<ul>
<p>
values[0]: Proximity sensor distance measured in centimeters
</ul>

<p>
<b>Note:</b> Some proximity sensors only support a binary <i>near</i> or
<i>far</i> measurement. In this case, the sensor should report its
{@link android.hardware.Sensor#getMaximumRange() maximum range} value in
the <i>far</i> state and a lesser value in the <i>near</i> state.
</p>

 <h4>{@link android.hardware.Sensor#TYPE_GRAVITY Sensor.TYPE_GRAVITY}:</h4>
 <p>A three dimensional vector indicating the direction and magnitude of gravity.  Units
 are m/s^2. The coordinate system is the same as is used by the acceleration sensor.</p>
 <p><b>Note:</b> When the device is at rest, the output of the gravity sensor should be identical
 to that of the accelerometer.</p>

 <h4>{@link android.hardware.Sensor#TYPE_LINEAR_ACCELERATION Sensor.TYPE_LINEAR_ACCELERATION}:</h4>
 A three dimensional vector indicating acceleration along each device axis, not including
 gravity.  All values have units of m/s^2.  The coordinate system is the same as is used by the
 acceleration sensor.
 <p>The output of the accelerometer, gravity and  linear-acceleration sensors must obey the
 following relation:</p>
  <p><ul>acceleration = gravity + linear-acceleration</ul></p>

 <h4>{@link android.hardware.Sensor#TYPE_ROTATION_VECTOR Sensor.TYPE_ROTATION_VECTOR}:</h4>
 <p>The rotation vector represents the orientation of the device as a combination of an <i>angle</i>
 and an <i>axis</i>, in which the device has rotated through an angle &#952 around an axis
 &lt;x, y, z>.</p>
 <p>The three elements of the rotation vector are
 &lt;x*sin(&#952/2), y*sin(&#952/2), z*sin(&#952/2)>, such that the magnitude of the rotation
 vector is equal to sin(&#952/2), and the direction of the rotation vector is equal to the
 direction of the axis of rotation.</p>
 </p>The three elements of the rotation vector are equal to
 the last three components of a <b>unit</b> quaternion
 &lt;cos(&#952/2), x*sin(&#952/2), y*sin(&#952/2), z*sin(&#952/2)>.</p>
 <p>Elements of the rotation vector are unitless.
 The x,y, and z axis are defined in the same way as the acceleration
 sensor.</p>
 The reference coordinate system is defined as a direct orthonormal basis,
 where:
</p>

<ul>
<li>X is defined as the vector product <b>Y.Z</b> (It is tangential to
the ground at the device's current location and roughly points East).</li>
<li>Y is tangential to the ground at the device's current location and
points towards magnetic north.</li>
<li>Z points towards the sky and is perpendicular to the ground.</li>
</ul>

<p>
<center><img src=\"../../../images/axis_globe.png\"
alt=\"World coordinate-system diagram.\" border=\"0\" /></center>
</p>

<ul>
<p>
values[0]: x*sin(&#952/2)
</p>
<p>
values[1]: y*sin(&#952/2)
</p>
<p>
values[2]: z*sin(&#952/2)
</p>
<p>
values[3]: cos(&#952/2) <i>(optional: only if value.length = 4)</i>
</p>
</ul>

<h4>{@link android.hardware.Sensor#TYPE_ORIENTATION
Sensor.TYPE_ORIENTATION}:</h4> All values are angles in degrees.

<ul>
<p>
values[0]: Azimuth, angle between the magnetic north direction and the
y-axis, around the z-axis (0 to 359). 0=North, 90=East, 180=South,
270=West
</p>

<p>
values[1]: Pitch, rotation around x-axis (-180 to 180), with positive
values when the z-axis moves <b>toward</b> the y-axis.
</p>

<p>
values[2]: Roll, rotation around y-axis (-90 to 90), with positive values
when the x-axis moves <b>toward</b> the z-axis.
</p>
</ul>

<p>
<b>Note:</b> This definition is different from <b>yaw, pitch and roll</b>
used in aviation where the X axis is along the long side of the plane
(tail to nose).
</p>

<p>
<b>Note:</b> This sensor type exists for legacy reasons, please use
{@link android.hardware.SensorManager#getRotationMatrix
getRotationMatrix()} in conjunction with
{@link android.hardware.SensorManager#remapCoordinateSystem
remapCoordinateSystem()} and
{@link android.hardware.SensorManager#getOrientation getOrientation()} to
compute these values instead.
</p>

<p>
<b>Important note:</b> For historical reasons the roll angle is positive
in the clockwise direction (mathematically speaking, it should be
positive in the counter-clockwise direction).
</p>

<h4>{@link android.hardware.Sensor#TYPE_RELATIVE_HUMIDITY
Sensor.TYPE_RELATIVE_HUMIDITY}:</h4>
<ul>
<p>
values[0]: Relative ambient air humidity in percent
</p>
</ul>
<p>
When relative ambient air humidity and ambient temperature are
measured, the dew point and absolute humidity can be calculated.
</p>
<u>Dew Point</u>
<p>
The dew point is the temperature to which a given parcel of air must be
cooled, at constant barometric pressure, for water vapor to condense
into water.
</p>
<center><pre>
                   ln(RH/100%) + m&#183;t/(T<sub>n</sub>+t)
t<sub>d</sub>(t,RH) = T<sub>n</sub> &#183; ------------------------------
                m - [ln(RH/100%) + m&#183;t/(T<sub>n</sub>+t)]
</pre></center>
<dl>
<dt>t<sub>d</sub></dt> <dd>dew point temperature in &deg;C</dd>
<dt>t</dt>             <dd>actual temperature in &deg;C</dd>
<dt>RH</dt>            <dd>actual relative humidity in %</dd>
<dt>m</dt>             <dd>17.62</dd>
<dt>T<sub>n</sub></dt> <dd>243.12 &deg;C</dd>
</dl>
<p>for example:</p>
<pre class=\"prettyprint\">
h = Math.log(rh / 100.0) + (17.62 * t) / (243.12 + t);
td = 243.12 * h / (17.62 - h);
</pre>
<u>Absolute Humidity</u>
<p>
The absolute humidity is the mass of water vapor in a particular volume
of dry air. The unit is g/m<sup>3</sup>.
</p>
<center><pre>
                   RH/100%&#183;A&#183;exp(m&#183;t/(T<sub>n</sub>+t))
d<sub>v</sub>(t,RH) = 216.7 &#183; -------------------------
                          273.15 + t
</pre></center>
<dl>
<dt>d<sub>v</sub></dt> <dd>absolute humidity in g/m<sup>3</sup></dd>
<dt>t</dt>             <dd>actual temperature in &deg;C</dd>
<dt>RH</dt>            <dd>actual relative humidity in %</dd>
<dt>m</dt>             <dd>17.62</dd>
<dt>T<sub>n</sub></dt> <dd>243.12 &deg;C</dd>
<dt>A</dt>             <dd>6.112 hPa</dd>
</dl>
<p>for example:</p>
<pre class=\"prettyprint\">
dv = 216.7 *
(rh / 100.0 * 6.112 * Math.exp(17.62 * t / (243.12 + t)) / (273.15 + t));
</pre>

<h4>{@link android.hardware.Sensor#TYPE_AMBIENT_TEMPERATURE Sensor.TYPE_AMBIENT_TEMPERATURE}:
</h4>

<ul>
<p>
values[0]: ambient (room) temperature in degree Celsius.
</ul>

@see SensorEvent
@see GeomagneticField
"
      end

      classrelation 1665548 // sensor (<unidirectional association>)
	relation 1665548 --->
	  a role_name "sensor" public
	    comment "
The sensor that generated this event. See
{@link android.hardware.SensorManager SensorManager} for details.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1665548 // sensor (<unidirectional association>)
	  b parent class_ref 819980 // Sensor
      end

      attribute 2521612 "accuracy"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The accuracy of this event. See {@link android.hardware.SensorManager
SensorManager} for details.
"
      end

      attribute 2521740 "timestamp"
	public explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The time in nanosecond at which the event happened
"
      end

      operation 3416716 "SensorEvent"
	package explicit_return_type ""
	nparams 1
	  param in name "size" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 819980 "Sensor"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Class representing a sensor. Use {@link SensorManager#getSensorList} to get
the list of available Sensors.

@see SensorManager
@see SensorEventListener
@see SensorEvent
"
      attribute 2518540 "TYPE_ACCELEROMETER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A constant describing an accelerometer sensor type. See
{@link android.hardware.SensorEvent#values SensorEvent.values} for more
details.
"
      end

      attribute 2518668 "TYPE_MAGNETIC_FIELD"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A constant describing a magnetic field sensor type. See
{@link android.hardware.SensorEvent#values SensorEvent.values} for more
details.
"
      end

      attribute 2518796 "TYPE_ORIENTATION"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A constant describing an orientation sensor type. See
{@link android.hardware.SensorEvent#values SensorEvent.values} for more
details.

@deprecated use {@link android.hardware.SensorManager#getOrientation
            SensorManager.getOrientation()} instead.
"
      end

      attribute 2518924 "TYPE_GYROSCOPE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " A constant describing a gyroscope sensor type "
      end

      attribute 2519052 "TYPE_LIGHT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 5"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A constant describing a light sensor type. See
{@link android.hardware.SensorEvent#values SensorEvent.values} for more
details.
"
      end

      attribute 2519180 "TYPE_PRESSURE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 6"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " A constant describing a pressure sensor type "
      end

      attribute 2519308 "TYPE_TEMPERATURE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 7"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A constant describing a temperature sensor type

@deprecated use
            {@link android.hardware.Sensor#TYPE_AMBIENT_TEMPERATURE
            Sensor.TYPE_AMBIENT_TEMPERATURE} instead.
"
      end

      attribute 2519436 "TYPE_PROXIMITY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 8"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A constant describing a proximity sensor type. See
{@link android.hardware.SensorEvent#values SensorEvent.values} for more
details.
"
      end

      attribute 2519564 "TYPE_GRAVITY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 9"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A constant describing a gravity sensor type.
See {@link android.hardware.SensorEvent SensorEvent}
for more details.
"
      end

      attribute 2519692 "TYPE_LINEAR_ACCELERATION"
	class_attribute const_attribute public explicit_type "int"
	init_value " 10"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A constant describing a linear acceleration sensor type.
See {@link android.hardware.SensorEvent SensorEvent}
for more details.
"
      end

      attribute 2519820 "TYPE_ROTATION_VECTOR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 11"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A constant describing a rotation vector sensor type.
See {@link android.hardware.SensorEvent SensorEvent}
for more details.
"
      end

      attribute 2519948 "TYPE_RELATIVE_HUMIDITY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 12"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A constant describing a relative humidity sensor type.
See {@link android.hardware.SensorEvent SensorEvent}
for more details.
"
      end

      attribute 2520076 "TYPE_AMBIENT_TEMPERATURE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 13"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " A constant describing an ambient temperature sensor type "
      end

      attribute 2520204 "TYPE_ALL"
	class_attribute const_attribute public explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A constant describing all sensor types.
"
      end

      attribute 2520332 "mName"
	private explicit_type "String"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Some of these fields are set only by the native bindings in
SensorManager.
"
      end

      attribute 2520460 "mVendor"
	private explicit_type "String"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2520588 "mVersion"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2520716 "mHandle"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2520844 "mType"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2520972 "mMaxRange"
	private explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2521100 "mResolution"
	private explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2521228 "mPower"
	private explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2521356 "mMinDelay"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 3415180 "Sensor"
	package explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3415308 "getName"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return name string of the sensor."
      end

      operation 3415436 "getVendor"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return vendor string of this sensor."
      end

      operation 3415564 "getType"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return generic type of this sensor."
      end

      operation 3415692 "getVersion"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return version of the sensor's module."
      end

      operation 3415820 "getMaximumRange"
	public explicit_return_type "float"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return maximum range of the sensor in the sensor's unit."
      end

      operation 3415948 "getResolution"
	public explicit_return_type "float"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return resolution of the sensor in the sensor's unit."
      end

      operation 3416076 "getPower"
	public explicit_return_type "float"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return the power in mA used by this sensor while in use"
      end

      operation 3416204 "getMinDelay"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return the minimum delay allowed between two events in microsecond
or zero if this sensor only returns a value when the data it's measuring
changes."
      end

      operation 3416332 "getHandle"
	package explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3416460 "setRange"
	package explicit_return_type "void"
	nparams 2
	  param in name "max" explicit_type "float"
	  param in name "res" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3416588 "toString"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 820364 "SerialManager"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "@hide"
      attribute 2529676 "TAG"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"SerialManager\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1666060 // mContext (<unidirectional association>)
	relation 1666060 --->
	  a role_name "mContext" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1666060 // mContext (<unidirectional association>)
	  b parent class_ref 684812 // Context
      end

      attribute 2529804 "mService"
	const_attribute private explicit_type "ISerialManager"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 3420812 "SerialManager"
	public explicit_return_type ""
	nparams 2
	  param inout name "context" type class_ref 684812 // Context
	  param inout name "service" explicit_type "ISerialManager"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@hide}"
      end

      operation 3420940 "getSerialPorts"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string array containing the names of available serial ports

@return names of available serial ports"
      end

      operation 3421068 "openSerialPort"
	public return_type class_ref 820492 // SerialPort
	nparams 2
	  param in name "name" explicit_type "String"
	  param in name "speed" explicit_type "int"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Opens and returns the {@link android.hardware.SerialPort} with the given name.
The speed of the serial port must be one of:
50, 75, 110, 134, 150, 200, 300, 600, 1200, 1800, 2400, 4800, 9600,
19200, 38400, 57600, 115200, 230400, 460800, 500000, 576000, 921600, 1000000, 1152000,
1500000, 2000000, 2500000, 3000000, 3500000 or 4000000

@param name of the serial port
@param speed at which to open the serial port
@return the serial port"
      end
    end

    class 820492 "SerialPort"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "@hide"
      attribute 2529932 "TAG"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"SerialPort\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2530060 "mNativeContext"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " used by the JNI code"
      end

      attribute 2530188 "mName"
	const_attribute private explicit_type "String"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1666188 // mFileDescriptor (<unidirectional association>)
	relation 1666188 --->
	  a role_name "mFileDescriptor" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1666188 // mFileDescriptor (<unidirectional association>)
	  b parent class_ref 729484 // ParcelFileDescriptor
      end

      operation 3421196 "SerialPort"
	public explicit_return_type ""
	nparams 1
	  param in name "name" explicit_type "String"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "SerialPort should only be instantiated by SerialManager
@hide"
      end

      operation 3421324 "open"
	public explicit_return_type "void"
	nparams 2
	  param inout name "pfd" type class_ref 729484 // ParcelFileDescriptor
	  param in name "speed" explicit_type "int"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "SerialPort should only be instantiated by SerialManager
Speed must be one of 50, 75, 110, 134, 150, 200, 300, 600, 1200, 1800, 2400, 4800, 9600,
19200, 38400, 57600, 115200, 230400, 460800, 500000, 576000, 921600, 1000000, 1152000,
1500000, 2000000, 2500000, 3000000, 3500000, 4000000

@hide"
      end

      operation 3421452 "close"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Closes the serial port"
      end

      operation 3421580 "getName"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the serial port

@return the serial port's name"
      end

      operation 3421708 "read"
	public explicit_return_type "int"
	nparams 1
	  param inout name "buffer" explicit_type "ByteBuffer"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads data into the provided buffer

@param buffer to read into
@return number of bytes read"
      end

      operation 3421836 "write"
	public explicit_return_type "void"
	nparams 2
	  param inout name "buffer" explicit_type "ByteBuffer"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes data from provided buffer

@param buffer to write
@param length number of bytes to write"
      end

      operation 3421964 "sendBreak"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sends a stream of zero valued bits for 0.25 to 0.5 seconds"
      end

      operation 3422092 "native_open"
	private explicit_return_type "void"
	nparams 2
	  param inout name "pfd" explicit_type "FileDescriptor"
	  param in name "speed" explicit_type "int"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
      end

      operation 3422220 "native_close"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
      end

      operation 3422348 "native_read_array"
	private explicit_return_type "int"
	nparams 2
	  param inout name "buffer" explicit_type "byte"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
      end

      operation 3422476 "native_read_direct"
	private explicit_return_type "int"
	nparams 2
	  param inout name "buffer" explicit_type "ByteBuffer"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
      end

      operation 3422604 "native_write_array"
	private explicit_return_type "void"
	nparams 2
	  param inout name "buffer" explicit_type "byte"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
      end

      operation 3422732 "native_write_direct"
	private explicit_return_type "void"
	nparams 2
	  param inout name "buffer" explicit_type "ByteBuffer"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
      end

      operation 3422860 "native_send_break"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
      end
    end

    class 820620 "SystemSensorManager"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Sensor manager implementation that communicates with the built-in
system sensors.

@hide"
      classrelation 1666316 // <generalisation>
	relation 1666316 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 1666316 // <generalisation>
	  b parent class_ref 819340 // SensorManager
      end

      attribute 2530316 "SENSOR_DISABLE"
	class_attribute const_attribute private explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2530444 "sSensorModuleInitialized"
	class_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1666444 // sFullSensorsList (<unidirectional association>)
	relation 1666444 --->
	  stereotype "ArrayList"
	  a role_name "sFullSensorsList" init_value " new ArrayList<Sensor>()" class_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 1666444 // sFullSensorsList (<unidirectional association>)
	  b parent class_ref 819980 // Sensor
      end

      class 820748 "SensorThread"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 2530700 "mThread"
	  package explicit_type "Thread"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2530828 "mSensorsReady"
	  package explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 3422988 "SensorThread"
	  package explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3423116 "finalize"
	  protected explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 3423244 "startLocked"
	  package explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " must be called with sListeners lock"
	end

	class 821004 "SensorThreadRunnable"
	  visibility private 
	  cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	  java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  
	  operation 3423372 "SensorThreadRunnable"
	    package explicit_return_type ""
	    nparams 0
	    cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	    cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 3423500 "open"
	    private explicit_return_type "boolean"
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 3423628 "run"
	    public explicit_return_type "void"
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end
	end
      end

      classrelation 1666572 // sSensorThread (<unidirectional association>)
	relation 1666572 --->
	  a role_name "sSensorThread" class_relation private
	    comment " The thread and the sensor list are global to the process
but the actual thread is spawned on demand 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1666572 // sSensorThread (<unidirectional association>)
	  b parent class_ref 820748 // SensorThread
      end

      classrelation 1666700 // sHandleToSensor (<unidirectional association>)
	relation 1666700 --->
	  a role_name "sHandleToSensor" init_value " new SparseArray<Sensor>()" class_relation package
	    comment " Used within this module from outside SensorManager, don't make private
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Sensor> ${name}${value};
"
	    classrelation_ref 1666700 // sHandleToSensor (<unidirectional association>)
	  b parent class_ref 696716 // SparseArray
      end

      class 820876 "ListenerDelegate"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1667340 // mSensorEventListener (<unidirectional association>)
	  relation 1667340 --->
	    a role_name "mSensorEventListener" const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1667340 // mSensorEventListener (<unidirectional association>)
	    b parent class_ref 819724 // SensorEventListener
	end

	classrelation 1667468 // mSensorList (<unidirectional association>)
	  relation 1667468 --->
	    stereotype "ArrayList"
	    a role_name "mSensorList" init_value " new ArrayList<Sensor>()" const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	      classrelation_ref 1667468 // mSensorList (<unidirectional association>)
	    b parent class_ref 819980 // Sensor
	end

	classrelation 1667596 // mHandler (<unidirectional association>)
	  relation 1667596 --->
	    a role_name "mHandler" const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1667596 // mHandler (<unidirectional association>)
	    b parent class_ref 687500 // Handler
	end

	classrelation 1667724 // mSensors (<unidirectional association>)
	  relation 1667724 --->
	    a role_name "mSensors" init_value " new SparseBooleanArray()" public
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1667724 // mSensors (<unidirectional association>)
	    b parent class_ref 752908 // SparseBooleanArray
	end

	classrelation 1667852 // mFirstEvent (<unidirectional association>)
	  relation 1667852 --->
	    a role_name "mFirstEvent" init_value " new SparseBooleanArray()" public
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1667852 // mFirstEvent (<unidirectional association>)
	    b parent class_ref 752908 // SparseBooleanArray
	end

	classrelation 1667980 // mSensorAccuracies (<unidirectional association>)
	  relation 1667980 --->
	    a role_name "mSensorAccuracies" init_value " new SparseIntArray()" public
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1667980 // mSensorAccuracies (<unidirectional association>)
	    b parent class_ref 697228 // SparseIntArray
	end

	operation 3423756 "ListenerDelegate"
	  package explicit_return_type ""
	  nparams 3
	    param inout name "listener" type class_ref 819724 // SensorEventListener
	    param inout name "sensor" type class_ref 819980 // Sensor
	    param inout name "handler" type class_ref 687500 // Handler
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3423884 "getListener"
	  package explicit_return_type "Object"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3424012 "addSensor"
	  package explicit_return_type "void"
	  nparams 1
	    param inout name "sensor" type class_ref 819980 // Sensor
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3424140 "removeSensor"
	  package explicit_return_type "int"
	  nparams 1
	    param inout name "sensor" type class_ref 819980 // Sensor
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3424268 "hasSensor"
	  package explicit_return_type "boolean"
	  nparams 1
	    param inout name "sensor" type class_ref 819980 // Sensor
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3424396 "getSensors"
	  package return_type class_ref 819980 // Sensor
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 3424524 "onSensorChangedLocked"
	  package explicit_return_type "void"
	  nparams 4
	    param inout name "sensor" type class_ref 819980 // Sensor
	    param inout name "values" explicit_type "float"
	    param inout name "timestamp" explicit_type "long"
	    param in name "accuracy" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2}[] ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	classrelation 6441356 // <directional composition>
	  relation 6441228 *-->
	    a role_name "" private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 6441356 // <directional composition>
	    b parent class_ref 3282956 // HandleR
	end
      end

      classrelation 1666828 // sListeners (<unidirectional association>)
	relation 1666828 --->
	  stereotype "ArrayList"
	  a role_name "sListeners" init_value "
        new ArrayList<ListenerDelegate>()" class_relation const_relation package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 1666828 // sListeners (<unidirectional association>)
	  b parent class_ref 820876 // ListenerDelegate
      end

      classrelation 1666956 // sPool (<unidirectional association>)
	relation 1666956 --->
	  a role_name "sPool" class_relation package
	    comment " Common pool of sensor events.
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1666956 // sPool (<unidirectional association>)
	  b parent class_ref 820236 // SensorEventPool
      end

      classrelation 1667084 // mMainLooper (<unidirectional association>)
	relation 1667084 --->
	  a role_name "mMainLooper" const_relation package
	    comment " Looper associated with the context in which this instance was created.
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1667084 // mMainLooper (<unidirectional association>)
	  b parent class_ref 685324 // Looper
      end

      operation 3424652 "SystemSensorManager"
	public explicit_return_type ""
	nparams 1
	  param inout name "mainLooper" type class_ref 685324 // Looper
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@hide}"
      end

      operation 3424780 "getFullSensorList"
	protected return_type class_ref 819980 // Sensor
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " @hide "
      end

      operation 3424908 "enableSensorLocked"
	private explicit_return_type "boolean"
	nparams 2
	  param inout name "sensor" type class_ref 819980 // Sensor
	  param in name "delay" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3425036 "disableSensorLocked"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "sensor" type class_ref 819980 // Sensor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 3425164 "registerListenerImpl"
	protected explicit_return_type "boolean"
	nparams 4
	  param inout name "listener" type class_ref 819724 // SensorEventListener
	  param inout name "sensor" type class_ref 819980 // Sensor
	  param in name "delay" explicit_type "int"
	  param inout name "handler" type class_ref 687500 // Handler
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " @hide "
      end

      operation 3425292 "unregisterListenerImpl"
	protected explicit_return_type "void"
	nparams 2
	  param inout name "listener" type class_ref 819724 // SensorEventListener
	  param inout name "sensor" type class_ref 819980 // Sensor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " @hide "
      end

      operation 3425420 "nativeClassInit"
	class_operation private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
      end

      operation 3425548 "sensors_module_init"
	class_operation private explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
      end

      operation 3425676 "sensors_module_get_next_sensor"
	class_operation private explicit_return_type "int"
	nparams 2
	  param inout name "sensor" type class_ref 819980 // Sensor
	  param in name "next" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
      end

      operation 3425804 "sensors_create_queue"
	class_operation package explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
	comment " Used within this module from outside SensorManager, don't make private"
      end

      operation 3425932 "sensors_destroy_queue"
	class_operation package explicit_return_type "void"
	nparams 1
	  param in name "queue" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 3426060 "sensors_enable_sensor"
	class_operation package explicit_return_type "boolean"
	nparams 4
	  param in name "queue" explicit_type "int"
	  param in name "name" explicit_type "String"
	  param in name "sensor" explicit_type "int"
	  param in name "enable" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws};
"
	
	
	
      end

      operation 3426188 "sensors_data_poll"
	class_operation package explicit_return_type "int"
	nparams 4
	  param in name "queue" explicit_type "int"
	  param inout name "values" explicit_type "float"
	  param inout name "status" explicit_type "int"
	  param inout name "timestamp" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2}[] ${p2}, ${t3}[] ${p3}${)}${throws};
"
	
	
	
      end

      classrelation 6440332 // <directional composition>
	relation 6440204 *-->
	  a role_name "" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6440332 // <directional composition>
	  b parent class_ref 821004 // SensorThreadRunnable
      end

    end

    class 2289292 "ISerialManager"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " @hide "
      classrelation 4434700 // <generalisation>
	relation 4434572 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 4434700 // <generalisation>
	  b parent class_ref 716940 // IInterface
      end

      class 2289420 "Stub"
	abstract visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 4434828 // <generalisation>
	  relation 4434700 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 4434828 // <generalisation>
	    b parent class_ref 729100 // Binder
	end

	classrelation 4434956 // <realization>
	  relation 4434828 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 4434956 // <realization>
	    b parent class_ref 2289292 // ISerialManager
	end

	attribute 8377996 "DESCRIPTOR"
	  class_attribute const_attribute private explicit_type "java.lang.String"
	  init_value " \"android.hardware.ISerialManager\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 10549132 "Stub"
	  public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Construct the stub at attach it to the interface. "
	end

	operation 10549260 "asInterface"
	  class_operation public return_type class_ref 2289292 // ISerialManager
	  nparams 1
	    param inout name "obj" explicit_type "android.os.IBinder"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Cast an IBinder object into an android.hardware.ISerialManager interface,
generating a proxy if needed."
	end

	operation 10549388 "asBinder"
	  public explicit_return_type "android.os.IBinder"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 10549516 "onTransact"
	  public explicit_return_type "boolean"
	  nparams 4
	    param in name "code" explicit_type "int"
	    param inout name "data" explicit_type "android.os.Parcel"
	    param inout name "reply" explicit_type "android.os.Parcel"
	    param in name "flags" explicit_type "int"
	  nexceptions 1
	    explicit_exception "android.os.RemoteException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	class 2289548 "Proxy"
	  visibility private 
	  cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	  java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  
	  classrelation 4435084 // <realization>
	    relation 4434956 -_-|>
	      a public
		cpp default "${type}"
		java "${type}"
		classrelation_ref 4435084 // <realization>
	      b parent class_ref 2289292 // ISerialManager
	  end

	  attribute 8378124 "mRemote"
	    private explicit_type "android.os.IBinder"
	    cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	  end

	  operation 10549644 "Proxy"
	    package explicit_return_type ""
	    nparams 1
	      param inout name "remote" explicit_type "android.os.IBinder"
	    cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	    cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 10549772 "asBinder"
	    public explicit_return_type "android.os.IBinder"
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 10549900 "getInterfaceDescriptor"
	    public explicit_return_type "java.lang.String"
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 10550028 "getSerialPorts"
	    public explicit_return_type "java.lang.String"
	    nparams 0
	    nexceptions 1
	      explicit_exception "android.os.RemoteException"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment " Returns a list of all available serial ports "
	  end

	  operation 10550156 "openSerialPort"
	    public explicit_return_type "android.os.ParcelFileDescriptor"
	    nparams 1
	      param inout name "name" explicit_type "java.lang.String"
	    nexceptions 1
	      explicit_exception "android.os.RemoteException"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment " Returns a file descriptor for the serial port. "
	  end
	end

	attribute 8378252 "TRANSACTION_getSerialPorts"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 0)"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 8378380 "TRANSACTION_openSerialPort"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 1)"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      operation 10550284 "getSerialPorts"
	public explicit_return_type "java.lang.String"
	nparams 0
	nexceptions 1
	  explicit_exception "android.os.RemoteException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns a list of all available serial ports "
      end

      operation 10550412 "openSerialPort"
	public explicit_return_type "android.os.ParcelFileDescriptor"
	nparams 1
	  param inout name "name" explicit_type "java.lang.String"
	nexceptions 1
	  explicit_exception "android.os.RemoteException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns a file descriptor for the serial port. "
      end
    end

    class 3720460 "TriggerEvent"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class represents a Trigger Event - the event
associated with a Trigger Sensor. When the sensor detects a trigger
event condition, such as significant motion in the case of the
{@link Sensor#TYPE_SIGNIFICANT_MOTION}, the {@link TriggerEventListener}
is called with the TriggerEvent. The sensor is automatically canceled
after the trigger.
<p>
This class holds information such as the value of the sensor
when the trigger happened, the timestamp along with detailed
information regarding the Sensor itself.
</p>
@see android.hardware.SensorManager
@see android.hardware.TriggerEvent
@see android.hardware.Sensor"
      attribute 13273356 "values"
	const_attribute public explicit_type "float"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "<p>
The length and contents of the {@link #values values} array depends on
which {@link android.hardware.Sensor sensor} type is being monitored (see
also {@link SensorEvent} for a definition of the coordinate system used).
</p>
<h4> {@link Sensor#TYPE_SIGNIFICANT_MOTION} </h4>
The value field is of length 1. value[0] = 1.0 when the sensor triggers.
1.0 is the only allowed value.
"
      end

      classrelation 7056268 // sensor (<unidirectional association>)
	relation 7056140 --->
	  a role_name "sensor" public
	    comment "
The sensor that generated this event. See
{@link android.hardware.SensorManager SensorManager} for details.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7056268 // sensor (<unidirectional association>)
	  b parent class_ref 819980 // Sensor
      end

      attribute 13273484 "timestamp"
	public explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The time in nanosecond at which the event happened
"
      end

      operation 15784972 "TriggerEvent"
	package explicit_return_type ""
	nparams 1
	  param in name "size" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 3720588 "TriggerEventListener"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class is the listener used to handle Trigger Sensors.
Trigger Sensors are sensors that trigger an event and are automatically
disabled. {@link Sensor#TYPE_SIGNIFICANT_MOTION} is one such example.
<p>
{@link SensorManager} lets you access the device's {@link android.hardware.Sensor
sensors}. Get an instance of {@link SensorManager} by calling
{@link android.content.Context#getSystemService(java.lang.String)
Context.getSystemService()} with the argument
{@link android.content.Context#SENSOR_SERVICE}.
<p>Here's an example setup for a TriggerEventListener:

<pre>
class TriggerListener extends TriggerEventListener {
    public void onTrigger(TriggerEvent event) {
         // Do Work.

    // As it is a one shot sensor, it will be canceled automatically.
    // SensorManager.requestTriggerSensor(this, mSigMotion); needs to
    // be called again, if needed.
    }
}
public class SensorActivity extends Activity {
    private final SensorManager mSensorManager;
    private final Sensor mSigMotion;
    private final TriggerEventListener mListener = new TriggerEventListener();

    public SensorActivity() {
        mSensorManager = (SensorManager)getSystemService(SENSOR_SERVICE);
        mSigMotion = mSensorManager.getDefaultSensor(Sensor.TYPE_SIGNIFICANT_MOTION);
    }

    protected void onResume() {
        super.onResume();
        mSensorManager.requestTriggerSensor(mListener, mSigMotion);
    }

    protected void onPause() {
        super.onPause();
        // Call disable to ensure that the trigger request has been canceled.
        mSensorManager.cancelTriggerSensor(mListener, mSigMotion);
    }

}
</pre>

@see TriggerEvent
@see Sensor"
      operation 15785100 "onTrigger"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "event" type class_ref 3720460 // TriggerEvent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The method that will be called when the sensor
is triggered. Override this method in your implementation
of this class.

@param event The details of the event."
      end
    end
  end

  deploymentview 170380 "hardware"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 373772 "Camera"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.SdkConstant;
import android.annotation.SdkConstant.SdkConstantType;
import android.content.Context;
import android.graphics.ImageFormat;
import android.graphics.Point;
import android.graphics.Rect;
import android.graphics.SurfaceTexture;
import android.media.IAudioService;
import android.os.Handler;
import android.os.IBinder;
import android.os.Looper;
import android.os.Message;
import android.os.RemoteException;
import android.os.ServiceManager;
import android.util.Log;
import android.text.TextUtils;
import android.view.Surface;
import android.view.SurfaceHolder;
import java.io.IOException;
import java.lang.ref.WeakReference;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.concurrent.locks.ReentrantLock;
${definition}"
      associated_classes
	class_ref 816908 // Camera
      end
      comment "Copyright (C) 2008 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 373900 "GeomagneticField"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.util.GregorianCalendar;
${definition}"
      associated_classes
	class_ref 818956 // GeomagneticField
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 374028 "SensorEventListener"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 819724 // SensorEventListener
      end
      comment "Copyright (C) 2008 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 374156 "LegacySensorManager"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.RemoteException;
import android.os.ServiceManager;
import android.view.IRotationWatcher;
import android.view.IWindowManager;
import android.view.Surface;
import java.util.HashMap;
import java.util.List;
${definition}"
      associated_classes
	class_ref 819212 // LegacySensorManager
      end
      comment "Copyright (C) 2012 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 374284 "Sensor"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 819980 // Sensor
      end
      comment "Copyright (C) 2008 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 374412 "SensorEvent"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 819852 // SensorEvent
      end
      comment "Copyright (C) 2008 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 374540 "SensorListener"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 819468 // SensorListener
      end
      comment "Copyright (C) 2008 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 374668 "SensorManager"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.Handler;
import android.util.Log;
import android.util.SparseArray;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
${definition}"
      associated_classes
	class_ref 819340 // SensorManager
      end
      comment "Copyright (C) 2008 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 374796 "SerialManager"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.app.PendingIntent;
import android.content.Context;
import android.os.Bundle;
import android.os.ParcelFileDescriptor;
import android.os.RemoteException;
import android.os.SystemProperties;
import android.util.Log;
import java.io.IOException;
import java.util.HashMap;
${definition}"
      associated_classes
	class_ref 820364 // SerialManager
      end
      comment "Copyright (C) 2011 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 374924 "SerialPort"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.ParcelFileDescriptor;
import android.util.Log;
import java.io.FileDescriptor;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.nio.ByteBuffer;
${definition}"
      associated_classes
	class_ref 820492 // SerialPort
      end
      comment "Copyright (C) 2011 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 375052 "SystemSensorManager"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.Looper;
import android.os.Process;
import android.os.Handler;
import android.os.Message;
import android.util.Log;
import android.util.SparseArray;
import android.util.SparseBooleanArray;
import android.util.SparseIntArray;
import java.util.ArrayList;
import java.util.List;
${definition}"
      associated_classes
	class_ref 820620 // SystemSensorManager
      end
      comment "Copyright (C) 2012 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 963852 "ISerialManager"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2289292 // ISerialManager
      end
      comment "This file is auto-generated.  DO NOT MODIFY.
Original file: frameworks/base/core/java/android/hardware/ISerialManager.aidl"
    end

    artifact 1496204 "TriggerEvent"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3720460 // TriggerEvent
      end
      comment "Copyright (C) 2013 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1496332 "TriggerEventListener"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3720588 // TriggerEventListener
      end
      comment "Copyright (C) 2013 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end
  end

  package_ref 188172 // input

  package_ref 188428 // usb

  package_ref 427020 // location
end
