class DateTimeLocationSettings
!!!13814796.java!!!	onCreate(inout icicle : Bundle) : void
        super.onCreate(icicle);

        PreferenceManager manager = getPreferenceManager();
        PreferenceScreen preferenceScreen = manager.inflateFromResource(getActivity(),
              R.xml.date_time_section_header, null);
        preferenceScreen.setOrderingAsAdded(true);
        for (int i = 0; i < getPreferenceScreen().getPreferenceCount(); ++i) {
            getPreferenceScreen().getPreference(i).setOrder(Preference.DEFAULT_ORDER);
            preferenceScreen.addPreference(getPreferenceScreen().getPreference(i));
        }

        setPreferenceScreen(
                manager.inflateFromResource(
                        getActivity(),
                        R.xml.location_section,
                        preferenceScreen));

        initUI();
!!!13814924.java!!!	initUI() : void
        setupCountryPreference();
        mLocationPref = findPreference(KEY_LOCATION);
        if (getResources().getBoolean(R.bool.ask_for_zip_code)) {
            updateLocationSummary();
        } else {
            ((PreferenceCategory) findPreference(KEY_LOCATION_SECTION)).
                    removePreference(mLocationPref);
        }
!!!13815052.java!!!	setupCountryPreference() : void
        final ArrayAdapter<CountryInfo> adapter = CountryPicker.constructAdapter(getActivity());
        final int countryCount = adapter.getCount();

        mCountryPref = (ListPreference) findPreference(KEY_COUNTRY);
        if (countryCount > 1) {
            final String[] countryCodes = new String[countryCount];
            final String[] countryNames = new String[countryCount];
            final String currentCountryCode = CountryPicker.getCountryCode();
            int currentCountryIndex = -1;

            for (int index = 0; index < countryCount; index++) {
                final CountryInfo info = adapter.getItem(index);
                countryNames[index] = info.getName();
                countryCodes[index] = info.getCode();
                if (currentCountryIndex < 0 && currentCountryCode.equals(countryCodes[index])) {
                    currentCountryIndex = index;
                }
            }

            mCountryPref.setEntries(countryNames);
            mCountryPref.setEntryValues(countryCodes);
            mCountryPref.setValueIndex(currentCountryIndex);
            mCountryPref.setOnPreferenceChangeListener(new OnPreferenceChangeListener() {
                @Override
                public boolean onPreferenceChange(Preference preference, Object newValue) {
                    final String newCountryCode = (String) newValue;
                    CountryPicker.updateCountryOverride(newCountryCode);
                    setCountryPreferenceSummary(
                            countryNames[mCountryPref.findIndexOfValue(newCountryCode)]);
                    return true;
                }
            });
            if (currentCountryIndex >= 0) {
                setCountryPreferenceSummary(countryNames[currentCountryIndex]);
            }
        } else {
            if (countryCount == 1) {
                setCountryPreferenceSummary(adapter.getItem(0).getName());
            }
            mCountryPref.setEnabled(false);
        }
!!!13815180.java!!!	setCountryPreferenceSummary(in countryName : String) : void
        if (mCountryPref != null) {
            if (!TextUtils.isEmpty(countryName)) {
                mCountryPref.setSummary(countryName);
            } else {
                mCountryPref.setSummary("");
            }
        }
!!!13815308.java!!!	onDateSet(inout view : DatePicker, in year : int, in month : int, in day : int) : void
        super.onDateSet(view, year, month, day);
!!!13815436.java!!!	onTimeSet(inout view : TimePicker, in hourOfDay : int, in minute : int) : void
        super.onTimeSet(view, hourOfDay, minute);
!!!13815564.java!!!	onLocationSet(in location : String) : void
        if (location != null) {
            location.trim();
            android.provider.Settings.Secure.putString(this.getContentResolver(),
                    TvSettings.Secure.LOCATION_LINEUP_LOOKUP, location);
            updateLocationSummary();
        }
!!!13815692.java!!!	onSharedPreferenceChanged(inout preferences : SharedPreferences, in key : String) : void
        if (key.equals(KEY_LOCATION)) {
            super.onSharedPreferenceChanged(preferences, "date_format");
        } else {
            super.onSharedPreferenceChanged(preferences, key);
        }
!!!13815820.java!!!	onCreateDialog(in id : int) : Dialog
        switch (id) {
        case DIALOG_LOCATION_SETTER: {
            mLocationSetter = new LocationSetterDialog(getActivity(), this);
            return mLocationSetter;
        }
        default:
            return super.onCreateDialog(id);
        }
!!!13815948.java!!!	onPreferenceTreeClick(inout preferenceScreen : PreferenceScreen, inout preference : Preference) : boolean
        if (preference == mLocationPref) {
            showDialog(DIALOG_LOCATION_SETTER);
        }
        return super.onPreferenceTreeClick(preferenceScreen, preference);
!!!13816076.java!!!	updateLocationSummary() : void
        mLocationPref.setSummary(getZipCode());
!!!13816204.java!!!	getZipCode() : String
        String zipCode = android.provider.Settings.Secure.getString(
                this.getContentResolver(), TvSettings.Secure.LOCATION_LINEUP_LOOKUP);
        return zipCode;
