class ReplayingRunner
!!!12653964.java!!!	run() : void
            ActionItem anItem;
            long sleepTime;
            int actionNum;

            anItem = mBasicData.popActionItem();

            do {
                sendMessageToHandler("actionStr", anItem.getActionStr());

                try {
                    sleepTime = anItem.getActionTime();
                    actionNum = anItem.getActionNum();
                    if (sleepTime < sDefaultTimeout) {
                        sendMessageToHandler("showController", "");
                        Thread.sleep(sleepTime);
                    } else {
                        Thread.sleep(sleepTime - sDefaultTimeout);
                        sendMessageToHandler("showController", "");
                        Thread.sleep(sDefaultTimeout);
                    }

                    if (actionNum != 5)
                        sendMessageToHandler("showController", "");

                    followAction(anItem);

                } catch (InterruptedException e) {
                    break;
                }

            } while (null != (anItem = mBasicData.popActionItem()));

            sendMessageToHandler("actionStr", " ");
!!!12654092.java!!!	followAction(inout anItem : ActionItem) : void
            switch (anItem.getActionNum()) {
                case 2 :
                case 3 :
                    if (mVideoView.canPause()) {
                        if (mVideoView.isPlaying()) {
                            mVideoView.pause();
                            Log.d(LOG_TAG, LOG_STAGE + "pause() called");
                        } else {
                            mVideoView.start();
                            Log.d(LOG_TAG, LOG_STAGE + "start() called");
                        }
                    }
                    break;

                case 4 :
                    mVideoView.seekTo(Integer.parseInt(anItem.getOtherParam()));
                    Log.d(LOG_TAG, LOG_STAGE + "seekTo() called");
                    break;
                case 5 :
                    mVideoView.stopPlayback();
                    Log.d(LOG_TAG, LOG_STAGE + "stopPlayback() called");
                    break;
            }
!!!12654220.java!!!	sendMessageToHandler(in key : String, in value : String) : void
            Message msg = mHandler.obtainMessage();
            Bundle b = new Bundle();
            b.putString(key, value);
            msg.setData(b);
            mHandler.sendMessage(msg);
