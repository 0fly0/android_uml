class StringReader
!!!271003.java!!!	StringReader(inout str : String)
        this.str = str;
        this.count = str.length();
!!!271131.java!!!	close() : void
        str = null;
!!!271259.java!!!	isClosed() : boolean
        return str == null;
!!!271387.java!!!	mark(in readLimit : int) : void
        if (readLimit < 0) {
            throw new IllegalArgumentException("readLimit < 0: " + readLimit);
        }

        synchronized (lock) {
            checkNotClosed();
            markpos = pos;
        }
!!!271515.java!!!	checkNotClosed() : void
        if (isClosed()) {
            throw new IOException("StringReader is closed");
        }
!!!271643.java!!!	markSupported() : boolean
        return true;
!!!271771.java!!!	read() : int
        synchronized (lock) {
            checkNotClosed();
            if (pos != count) {
                return str.charAt(pos++);
            }
            return -1;
        }
!!!271899.java!!!	read(inout buf : char, in offset : int, in len : int) : int
        synchronized (lock) {
            checkNotClosed();
            Arrays.checkOffsetAndCount(buf.length, offset, len);
            if (len == 0) {
                return 0;
            }
            if (pos == this.count) {
                return -1;
            }
            int end = pos + len > this.count ? this.count : pos + len;
            str.getChars(pos, end, buf, offset);
            int read = end - pos;
            pos = end;
            return read;
        }
!!!272027.java!!!	ready() : boolean
        synchronized (lock) {
            checkNotClosed();
            return true;
        }
!!!272155.java!!!	reset() : void
        synchronized (lock) {
            checkNotClosed();
            pos = markpos != -1 ? markpos : 0;
        }
!!!272283.java!!!	skip(in charCount : long) : long
        synchronized (lock) {
            checkNotClosed();

            int minSkip = -pos;
            int maxSkip = count - pos;

            if (maxSkip == 0 || charCount > maxSkip) {
                charCount = maxSkip; // no rewinding if we're at the end
            } else if (charCount < minSkip) {
                charCount = minSkip;
            }

            pos += charCount;
            return charCount;
        }
