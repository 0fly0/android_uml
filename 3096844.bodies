class Params
!!!12894220.java!!!	clearKeys() : void
            mKeys.clear();
            mShiftKeys.clear();
            clearHistogram();
!!!12894348.java!!!	onAddKey(inout newKey : Key) : void
            final Key key = (mKeysCache != null) ? mKeysCache.get(newKey) : newKey;
            final boolean zeroWidthSpacer = key.isSpacer() && key.mWidth == 0;
            if (!zeroWidthSpacer) {
                mKeys.add(key);
                updateHistogram(key);
            }
            if (key.mCode == Keyboard.CODE_SHIFT) {
                mShiftKeys.add(key);
            }
            if (key.altCodeWhileTyping()) {
                mAltCodeKeysWhileTyping.add(key);
            }
!!!12894476.java!!!	clearHistogram() : void
            mMostCommonKeyHeight = 0;
            mMaxHeightCount = 0;
            mHeightHistogram.clear();

            mMaxWidthCount = 0;
            mMostCommonKeyWidth = 0;
            mWidthHistogram.clear();
!!!12894604.java!!!	updateHistogramCounter(inout histogram : HashMap<Integer, Integer>, inout key : Integer) : int
            final int count = (histogram.containsKey(key) ? histogram.get(key) : 0) + 1;
            histogram.put(key, count);
            return count;
!!!12894732.java!!!	updateHistogram(inout key : Key) : void
            final Integer height = key.mHeight + key.mVerticalGap;
            final int heightCount = updateHistogramCounter(mHeightHistogram, height);
            if (heightCount > mMaxHeightCount) {
                mMaxHeightCount = heightCount;
                mMostCommonKeyHeight = height;
            }

            final Integer width = key.mWidth + key.mHorizontalGap;
            final int widthCount = updateHistogramCounter(mWidthHistogram, width);
            if (widthCount > mMaxWidthCount) {
                mMaxWidthCount = widthCount;
                mMostCommonKeyWidth = width;
            }
