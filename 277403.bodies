class RAFStream
!!!1683867.java!!!	RAFStream(inout raf : RandomAccessFile, in initialOffset : long)
            sharedRaf = raf;
            offset = initialOffset;
            length = raf.length();
!!!1683995.java!!!	available() : int
            return (offset < length ? 1 : 0);
!!!1684123.java!!!	read() : int
            return Streams.readSingleByte(this);
!!!1684251.java!!!	read(inout b : byte, in off : int, in len : int) : int
            synchronized (sharedRaf) {
                sharedRaf.seek(offset);
                if (len > length - offset) {
                    len = (int) (length - offset);
                }
                int count = sharedRaf.read(b, off, len);
                if (count > 0) {
                    offset += count;
                    return count;
                } else {
                    return -1;
                }
            }
!!!1684379.java!!!	skip(in byteCount : long) : long
            if (byteCount > length - offset) {
                byteCount = length - offset;
            }
            offset += byteCount;
            return byteCount;
!!!1684507.java!!!	fill(inout inflater : Inflater, in nativeEndBufSize : int) : int
            synchronized (sharedRaf) {
                int len = Math.min((int) (length - offset), nativeEndBufSize);
                int cnt = inflater.setFileInput(sharedRaf.getFD(), offset, nativeEndBufSize);
                // setFileInput read from the file, so we need to get the OS and RAFStream back
                // in sync...
                skip(cnt);
                return len;
            }
