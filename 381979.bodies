class StrictLineReaderTest
!!!2620187.java!!!	testLineReaderConsistencyWithReadAsciiLine() : void
        try {
            // Testing with LineReader buffer capacity 32 to check some corner cases.
            StrictLineReader lineReader = new StrictLineReader(createTestInputStream(), 32,
                    Charsets.US_ASCII);
            InputStream refStream = createTestInputStream();
            while (true) {
                try {
                    String refLine = Streams.readAsciiLine(refStream);
                    try {
                        String line = lineReader.readLine();
                        if (!refLine.equals(line)) {
                            fail("line (\""+line+"\") differs from expected (\""+refLine+"\").");
                        }
                    } catch (EOFException eof) {
                        fail("line reader threw EOFException too early.");
                    }
                } catch (EOFException refEof) {
                    try {
                        lineReader.readLine();
                        fail("line reader didn't throw the expected EOFException.");
                    } catch (EOFException eof) {
                        // OK
                        break;
                    }
                }
            }
            refStream.close();
            lineReader.close();
        } catch (IOException ioe) {
            fail("Unexpected IOException " + ioe.toString());
        }
!!!2620315.java!!!	createTestInputStream() : InputStream
        return new ByteArrayInputStream((
                /* each source lines below should represent 32 bytes, until the next comment */
                "12 byte line\n18 byte line......\n" +
                "pad\nline spanning two 32-byte bu" +
                "ffers\npad......................\n" +
                "pad\nline spanning three 32-byte " +
                "buffers and ending with LF at th" +
                "e end of a 32 byte buffer......\n" +
                "pad\nLine ending with CRLF split" +
                " at the end of a 32-byte buffer\r" +
                "\npad...........................\n" +
                /* end of 32-byte lines */
                "line ending with CRLF\r\n" +
                "this is a long line with embedded CR \r ending with CRLF and having more than " +
                "32 characters\r\n" +
                "unterminated line - should be dropped"
                ).getBytes());
