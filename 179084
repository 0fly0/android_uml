format 74
"backup" // framework::base::core::java::android::app::backup
  revision 3
  modified_by 12 "shchen"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "/home/shchen/work/jellybean/framework/base/core/java/android/app/backup/"
  java_package "android.app.backup"
  classview 161036 "backup"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 679564 "RestoreSet"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Descriptive information about a set of backed-up app data available for restore.
Used by IRestoreSession clients.

@hide"
      classrelation 1572748 // <realization>
	relation 1572748 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 1572748 // <realization>
	  b parent class_ref 691212 // Parcelable
      end

      attribute 2228620 "name"
	public explicit_type "String"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Name of this restore set.  May be user generated, may simply be the name
of the handset model, e.g. \"T-Mobile G1\".
"
      end

      attribute 2228748 "device"
	public explicit_type "String"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Identifier of the device whose data this is.  This will be as unique as
is practically possible; for example, it might be an IMEI.
"
      end

      attribute 2228876 "token"
	public explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Token that identifies this backup set unambiguously to the backup/restore
transport.  This is guaranteed to be valid for the duration of a restore
session, but is meaningless once the session has ended.
"
      end

      operation 2977932 "RestoreSet"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2978060 "RestoreSet"
	public explicit_return_type ""
	nparams 3
	  param in name "_name" explicit_type "String"
	  param in name "_dev" explicit_type "String"
	  param in name "_token" explicit_type "long"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2978188 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Parcelable implementation"
      end

      operation 2978316 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "out" type class_ref 691340 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 1572876 // CREATOR (<unidirectional association>)
	relation 1572876 --->
	  a role_name "CREATOR" init_value " new Parcelable.Creator<RestoreSet>() {
        public RestoreSet createFromParcel(Parcel in) {
            return new RestoreSet(in);
        }

        public RestoreSet[] newArray(int size) {
            return new RestoreSet[size];
        }
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<RestoreSet> ${name}${value};
"
	    classrelation_ref 1572876 // CREATOR (<unidirectional association>)
	  b parent class_ref 691468 // Creator
      end

      operation 2978444 "RestoreSet"
	private explicit_return_type ""
	nparams 1
	  param inout name "in" type class_ref 691340 // Parcel
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 732556 "BackupAgent"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Provides the central interface between an
application and Android's data backup infrastructure.  An application that wishes
to participate in the backup and restore mechanism will declare a subclass of
{@link android.app.backup.BackupAgent}, implement the
{@link #onBackup(ParcelFileDescriptor, BackupDataOutput, ParcelFileDescriptor) onBackup()}
and {@link #onRestore(BackupDataInput, int, ParcelFileDescriptor) onRestore()} methods,
and provide the name of its backup agent class in its {@code AndroidManifest.xml} file via
the <code>
<a href=\"{@docRoot}guide/topics/manifest/application-element.html\">&lt;application&gt;</a></code>
tag's {@code android:backupAgent} attribute.

<div class=\"special reference\">
<h3>Developer Guides</h3>
<p>For more information about using BackupAgent, read the
<a href=\"{@docRoot}guide/topics/data/backup.html\">Data Backup</a> developer guide.</p></div>

<h3>Basic Operation</h3>
<p>
When the application makes changes to data that it wishes to keep backed up,
it should call the
{@link android.app.backup.BackupManager#dataChanged() BackupManager.dataChanged()} method.
This notifies the Android Backup Manager that the application needs an opportunity
to update its backup image.  The Backup Manager, in turn, schedules a
backup pass to be performed at an opportune time.
<p>
Restore operations are typically performed only when applications are first
installed on a device.  At that time, the operating system checks to see whether
there is a previously-saved data set available for the application being installed, and if so,
begins an immediate restore pass to deliver the backup data as part of the installation
process.
<p>
When a backup or restore pass is run, the application's process is launched
(if not already running), the manifest-declared backup agent class (in the {@code
android:backupAgent} attribute) is instantiated within
that process, and the agent's {@link #onCreate()} method is invoked.  This prepares the
agent instance to run the actual backup or restore logic.  At this point the
agent's
{@link #onBackup(ParcelFileDescriptor, BackupDataOutput, ParcelFileDescriptor) onBackup()} or
{@link #onRestore(BackupDataInput, int, ParcelFileDescriptor) onRestore()} method will be
invoked as appropriate for the operation being performed.
<p>
A backup data set consists of one or more \"entities,\" flattened binary data
records that are each identified with a key string unique within the data set.  Adding a
record to the active data set or updating an existing record is done by simply
writing new entity data under the desired key.  Deleting an entity from the data set
is done by writing an entity under that key with header specifying a negative data
size, and no actual entity data.
<p>
<b>Helper Classes</b>
<p>
An extensible agent based on convenient helper classes is available in
{@link android.app.backup.BackupAgentHelper}.  That class is particularly
suited to handling of simple file or {@link android.content.SharedPreferences}
backup and restore.

@see android.app.backup.BackupManager
@see android.app.backup.BackupAgentHelper
@see android.app.backup.BackupDataInput
@see android.app.backup.BackupDataOutput"
      classrelation 1570188 // <generalisation>
	relation 1570188 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 1570188 // <generalisation>
	  b parent class_ref 684684 // ContextWrapper
      end

      attribute 2222860 "TAG"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"BackupAgent\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2222988 "DEBUG"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " true"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2223116 "TYPE_EOF"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 2223244 "TYPE_FILE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "During a full restore, indicates that the file system object being restored
is an ordinary file.
"
      end

      attribute 2223372 "TYPE_DIRECTORY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "During a full restore, indicates that the file system object being restored
is a directory.
"
      end

      attribute 2223500 "TYPE_SYMLINK"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      operation 2966796 "BackupAgent"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2966924 "onCreate"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Provided as a convenience for agent implementations that need an opportunity
to do one-time initialization before the actual backup or restore operation
is begun.
<p>
Agents do not need to override this method."
      end

      operation 2967052 "onDestroy"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Provided as a convenience for agent implementations that need to do some
sort of shutdown process after backup or restore is completed.
<p>
Agents do not need to override this method."
      end

      operation 2967180 "onBackup"
	abstract public explicit_return_type "void"
	nparams 3
	  param inout name "oldState" type class_ref 729484 // ParcelFileDescriptor
	  param inout name "data" type class_ref 775692 // BackupDataOutput
	  param inout name "newState" type class_ref 729484 // ParcelFileDescriptor
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The application is being asked to write any data changed since the last
time it performed a backup operation. The state data recorded during the
last backup pass is provided in the <code>oldState</code> file
descriptor. If <code>oldState</code> is <code>null</code>, no old state
is available and the application should perform a full backup. In both
cases, a representation of the final backup state after this pass should
be written to the file pointed to by the file descriptor wrapped in
<code>newState</code>.
<p>
Each entity written to the {@link android.app.backup.BackupDataOutput}
<code>data</code> stream will be transmitted
over the current backup transport and stored in the remote data set under
the key supplied as part of the entity.  Writing an entity with a negative
data size instructs the transport to delete whatever entity currently exists
under that key from the remote data set.

@param oldState An open, read-only ParcelFileDescriptor pointing to the
           last backup state provided by the application. May be
           <code>null</code>, in which case no prior state is being
           provided and the application should perform a full backup.
@param data A structured wrapper around an open, read/write
           file descriptor pointing to the backup data destination.
           Typically the application will use backup helper classes to
           write to this file.
@param newState An open, read/write ParcelFileDescriptor pointing to an
           empty file. The application should record the final backup
           state here after writing the requested data to the <code>data</code>
           output stream."
      end

      operation 2967308 "onRestore"
	abstract public explicit_return_type "void"
	nparams 3
	  param inout name "data" type class_ref 776076 // BackupDataInput
	  param in name "appVersionCode" explicit_type "int"
	  param inout name "newState" type class_ref 729484 // ParcelFileDescriptor
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The application is being restored from backup and should replace any
existing data with the contents of the backup. The backup data is
provided through the <code>data</code> parameter. Once
the restore is finished, the application should write a representation of
the final state to the <code>newState</code> file descriptor.
<p>
The application is responsible for properly erasing its old data and
replacing it with the data supplied to this method. No \"clear user data\"
operation will be performed automatically by the operating system. The
exception to this is in the case of a failed restore attempt: if
onRestore() throws an exception, the OS will assume that the
application's data may now be in an incoherent state, and will clear it
before proceeding.

@param data A structured wrapper around an open, read-only
           file descriptor pointing to a full snapshot of the
           application's data.  The application should consume every
           entity represented in this data stream.
@param appVersionCode The value of the <a
href=\"{@docRoot}guide/topics/manifest/manifest-element.html#vcode\">{@code
           android:versionCode}</a> manifest attribute,
           from the application that backed up this particular data set. This
           makes it possible for an application's agent to distinguish among any
           possible older data versions when asked to perform the restore
           operation.
@param newState An open, read/write ParcelFileDescriptor pointing to an
           empty file. The application should record the final backup
           state here after restoring its data from the <code>data</code> stream.
           When a full-backup dataset is being restored, this will be <code>null</code>."
      end

      operation 2967436 "onFullBackup"
	public explicit_return_type "void"
	nparams 1
	  param inout name "data" type class_ref 776204 // FullBackupDataOutput
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The default implementation backs up the entirety of the application's \"owned\"
file system trees to the output."
      end

      operation 2967564 "fullBackupFile"
	public explicit_return_type "void"
	nparams 2
	  param inout name "file" explicit_type "File"
	  param inout name "output" type class_ref 776204 // FullBackupDataOutput
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Write an entire file as part of a full-backup operation.  The file's contents
will be delivered to the backup destination along with the metadata necessary
to place it with the proper location and permissions on the device where the
data is restored.

@param file The file to be backed up.  The file must exist and be readable by
    the caller.
@param output The destination to which the backed-up file data will be sent."
      end

      operation 2967692 "fullBackupFileTree"
	protected explicit_return_type "void"
	nparams 5
	  param in name "packageName" explicit_type "String"
	  param in name "domain" explicit_type "String"
	  param in name "rootPath" explicit_type "String"
	  param inout name "excludes" explicit_type "HashSet<String>"
	  param inout name "output" type class_ref 776204 // FullBackupDataOutput
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Scan the dir tree (if it actually exists) and process each entry we find.  If the
'excludes' parameter is non-null, it is consulted each time a new file system entity
is visited to see whether that entity (and its subtree, if appropriate) should be
omitted from the backup process.

@hide"
      end

      operation 2967820 "onRestoreFile"
	public explicit_return_type "void"
	nparams 6
	  param inout name "data" type class_ref 729484 // ParcelFileDescriptor
	  param in name "size" explicit_type "long"
	  param inout name "destination" explicit_type "File"
	  param in name "type" explicit_type "int"
	  param in name "mode" explicit_type "long"
	  param in name "mtime" explicit_type "long"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handle the data delivered via the given file descriptor during a full restore
operation.  The agent is given the path to the file's original location as well
as its size and metadata.
<p>
The file descriptor can only be read for {@code size} bytes; attempting to read
more data has undefined behavior.
<p>
The default implementation creates the destination file/directory and populates it
with the data from the file descriptor, then sets the file's access mode and
modification time to match the restore arguments.

@param data A read-only file descriptor from which the agent can read {@code size}
    bytes of file data.
@param size The number of bytes of file content to be restored to the given
    destination.  If the file system object being restored is a directory, {@code size}
    will be zero.
@param destination The File on disk to be restored with the given data.
@param type The kind of file system object being restored.  This will be either
    {@link BackupAgent#TYPE_FILE} or {@link BackupAgent#TYPE_DIRECTORY}.
@param mode The access mode to be assigned to the destination after its data is
    written.  This is in the standard format used by {@code chmod()}.
@param mtime The modification time of the file when it was backed up, suitable to
    be assigned to the file after its data is written.
@throws IOException"
      end

      operation 2967948 "onRestoreFile"
	protected explicit_return_type "void"
	nparams 7
	  param inout name "data" type class_ref 729484 // ParcelFileDescriptor
	  param in name "size" explicit_type "long"
	  param in name "type" explicit_type "int"
	  param in name "domain" explicit_type "String"
	  param in name "path" explicit_type "String"
	  param in name "mode" explicit_type "long"
	  param in name "mtime" explicit_type "long"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Only specialized platform agents should overload this entry point to support
restores to crazy non-app locations.
@hide"
      end

      operation 2968076 "onBind"
	public return_type class_ref 688652 // IBinder
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ----- Core implementation -----
 @hide "
      end

      classrelation 1570316 // mBinder (<unidirectional association>)
	relation 1570316 --->
	  a role_name "mBinder" init_value " new BackupServiceBinder().asBinder()" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1570316 // mBinder (<unidirectional association>)
	  b parent class_ref 688652 // IBinder
      end

      operation 2968204 "attach"
	public explicit_return_type "void"
	nparams 1
	  param inout name "context" type class_ref 684812 // Context
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      class 776332 "BackupServiceBinder"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 2223628 "TAG"
	  class_attribute const_attribute private explicit_type "String"
	  init_value " \"BackupServiceBinder\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 2968332 "doBackup"
	  public explicit_return_type "void"
	  nparams 5
	    param inout name "oldState" type class_ref 729484 // ParcelFileDescriptor
	    param inout name "data" type class_ref 729484 // ParcelFileDescriptor
	    param inout name "newState" type class_ref 729484 // ParcelFileDescriptor
	    param in name "token" explicit_type "int"
	    param inout name "callbackBinder" explicit_type "IBackupManager"
	  nexceptions 1
	    exception class_ref 678540 // RemoteException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 2968460 "doRestore"
	  public explicit_return_type "void"
	  nparams 5
	    param inout name "data" type class_ref 729484 // ParcelFileDescriptor
	    param in name "appVersionCode" explicit_type "int"
	    param inout name "newState" type class_ref 729484 // ParcelFileDescriptor
	    param in name "token" explicit_type "int"
	    param inout name "callbackBinder" explicit_type "IBackupManager"
	  nexceptions 1
	    exception class_ref 678540 // RemoteException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 2968588 "doFullBackup"
	  public explicit_return_type "void"
	  nparams 3
	    param inout name "data" type class_ref 729484 // ParcelFileDescriptor
	    param in name "token" explicit_type "int"
	    param inout name "callbackBinder" explicit_type "IBackupManager"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 2968716 "doRestoreFile"
	  public explicit_return_type "void"
	  nparams 9
	    param inout name "data" type class_ref 729484 // ParcelFileDescriptor
	    param in name "size" explicit_type "long"
	    param in name "type" explicit_type "int"
	    param in name "domain" explicit_type "String"
	    param in name "path" explicit_type "String"
	    param in name "mode" explicit_type "long"
	    param in name "mtime" explicit_type "long"
	    param in name "token" explicit_type "int"
	    param inout name "callbackBinder" explicit_type "IBackupManager"
	  nexceptions 1
	    exception class_ref 678540 // RemoteException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end
    end

    class 775436 "AbsoluteFileBackupHelper"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Like FileBackupHelper, but takes absolute paths for the files instead of
subpaths of getFilesDir()

@hide"
      classrelation 1569804 // <generalisation>
	relation 1569804 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 1569804 // <generalisation>
	  b parent class_ref 775564 // FileBackupHelperBase
      end

      classrelation 1569932 // <realization>
	relation 1569932 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 1569932 // <realization>
	  b parent class_ref 775948 // BackupHelper
      end

      attribute 2222476 "TAG"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"AbsoluteFileBackupHelper\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2222604 "DEBUG"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1570060 // mContext (<unidirectional association>)
	relation 1570060 --->
	  a role_name "mContext" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1570060 // mContext (<unidirectional association>)
	  b parent class_ref 684812 // Context
      end

      attribute 2222732 "mFiles"
	package explicit_type "String"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 2966412 "AbsoluteFileBackupHelper"
	public explicit_return_type ""
	nparams 2
	  param inout name "context" type class_ref 684812 // Context
	  param inout name "" explicit_type "String...files"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a helper for backing up / restoring the files at the given absolute locations
within the file system.

@param context
@param files"
      end

      operation 2966540 "performBackup"
	public explicit_return_type "void"
	nparams 3
	  param inout name "oldState" type class_ref 729484 // ParcelFileDescriptor
	  param inout name "data" type class_ref 775692 // BackupDataOutput
	  param inout name "newState" type class_ref 729484 // ParcelFileDescriptor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Based on oldState, determine which of the files from the application's data directory
need to be backed up, write them to the data stream, and fill in newState with the
state as it exists now."
      end

      operation 2966668 "restoreEntity"
	public explicit_return_type "void"
	nparams 1
	  param inout name "data" type class_ref 775820 // BackupDataInputStream
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Restore one absolute file entity from the restore stream"
      end
    end

    class 775564 "FileBackupHelperBase"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Base class for the {@link android.app.backup.FileBackupHelper} implementation."
      attribute 2222092 "TAG"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"FileBackupHelperBase\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2222220 "mPtr"
	package explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1569676 // mContext (<unidirectional association>)
	relation 1569676 --->
	  a role_name "mContext" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1569676 // mContext (<unidirectional association>)
	  b parent class_ref 684812 // Context
      end

      attribute 2222348 "mExceptionLogged"
	package explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 2964620 "FileBackupHelperBase"
	package explicit_return_type ""
	nparams 1
	  param inout name "context" type class_ref 684812 // Context
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2964748 "finalize"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Throwable"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2964876 "performBackup_checked"
	class_operation package explicit_return_type "void"
	nparams 5
	  param inout name "oldState" type class_ref 729484 // ParcelFileDescriptor
	  param inout name "data" type class_ref 775692 // BackupDataOutput
	  param inout name "newState" type class_ref 729484 // ParcelFileDescriptor
	  param inout name "files" explicit_type "String"
	  param inout name "keys" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4}[] ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check the parameters so the native code doesn't have to throw all the exceptions
since it's easier to do that from Java."
      end

      operation 2965004 "writeFile"
	package explicit_return_type "boolean"
	nparams 2
	  param inout name "f" explicit_type "File"
	  param inout name "in" type class_ref 775820 // BackupDataInputStream
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2965132 "writeNewStateDescription"
	public explicit_return_type "void"
	nparams 1
	  param inout name "fd" type class_ref 729484 // ParcelFileDescriptor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2965260 "isKeyInList"
	package explicit_return_type "boolean"
	nparams 2
	  param in name "key" explicit_type "String"
	  param inout name "list" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2965388 "ctor"
	class_operation private explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
      end

      operation 2965516 "dtor"
	class_operation private explicit_return_type "void"
	nparams 1
	  param in name "ptr" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 2965644 "performBackup_native"
	class_operation private explicit_return_type "int"
	nparams 5
	  param inout name "oldState" explicit_type "FileDescriptor"
	  param in name "data" explicit_type "int"
	  param inout name "newState" explicit_type "FileDescriptor"
	  param inout name "files" explicit_type "String"
	  param inout name "keys" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4}[] ${p4}${)}${throws};
"
	
	
	
      end

      operation 2965772 "writeFile_native"
	class_operation private explicit_return_type "int"
	nparams 3
	  param in name "ptr" explicit_type "int"
	  param in name "filename" explicit_type "String"
	  param in name "backupReader" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws};
"
	
	
	
      end

      operation 2965900 "writeSnapshot_native"
	class_operation private explicit_return_type "int"
	nparams 2
	  param in name "ptr" explicit_type "int"
	  param inout name "fd" explicit_type "FileDescriptor"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
      end
    end

    class 775692 "BackupDataOutput"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Provides the structured interface through which a {@link BackupAgent} commits
information to the backup data set, via its {@link
BackupAgent#onBackup(ParcelFileDescriptor,BackupDataOutput,ParcelFileDescriptor)
onBackup()} method.  Data written for backup is presented
as a set of \"entities,\" key/value pairs in which each binary data record \"value\" is
named with a string \"key.\"
<p>
To commit a data record to the backup transport, the agent's
{@link BackupAgent#onBackup(ParcelFileDescriptor,BackupDataOutput,ParcelFileDescriptor)
onBackup()} method first writes an \"entity header\" that supplies the key string for the record
and the total size of the binary value for the record.  After the header has been
written, the agent then writes the binary entity value itself.  The entity value can
be written in multiple chunks if desired, as long as the total count of bytes written
matches what was supplied to {@link #writeEntityHeader(String, int) writeEntityHeader()}.
<p>
Entity key strings are considered to be unique within a given application's backup
data set. If a backup agent writes a new entity under an existing key string, its value will
replace any previous value in the transport's remote data store.  You can remove a record
entirely from the remote data set by writing a new entity header using the
existing record's key, but supplying a negative <code>dataSize</code> parameter.
When you do so, the agent does not need to call {@link #writeEntityData(byte[], int)}.
<h3>Example</h3>
<p>
Here is an example illustrating a way to back up the value of a String variable
called <code>mStringToBackUp</code>:
<pre>
static final String MY_STRING_KEY = \"storedstring\";

public void {@link BackupAgent#onBackup(ParcelFileDescriptor, BackupDataOutput, ParcelFileDescriptor) onBackup(ParcelFileDescriptor oldState, BackupDataOutput data, ParcelFileDescriptor newState)}
        throws IOException {
    ...
    byte[] stringBytes = mStringToBackUp.getBytes();
    data.writeEntityHeader(MY_STRING_KEY, stringBytes.length);
    data.writeEntityData(stringBytes, stringBytes.length);
    ...
}</pre>

@see BackupAgent"
      attribute 2224780 "mBackupWriter"
	package explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 2971660 "BackupDataOutput"
	public explicit_return_type ""
	nparams 1
	  param inout name "fd" explicit_type "FileDescriptor"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 2971788 "writeEntityHeader"
	public explicit_return_type "int"
	nparams 2
	  param in name "key" explicit_type "String"
	  param in name "dataSize" explicit_type "int"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Mark the beginning of one record in the backup data stream. This must be called before
{@link #writeEntityData}.
@param key A string key that uniquely identifies the data record within the application
@param dataSize The size in bytes of this record's data.  Passing a dataSize
   of -1 indicates that the record under this key should be deleted.
@return The number of bytes written to the backup stream
@throws IOException if the write failed"
      end

      operation 2971916 "writeEntityData"
	public explicit_return_type "int"
	nparams 2
	  param inout name "data" explicit_type "byte"
	  param in name "size" explicit_type "int"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Write a chunk of data under the current entity to the backup transport.
@param data A raw data buffer to send
@param size The number of bytes to be sent in this chunk
@return the number of bytes written
@throws IOException if the write failed"
      end

      operation 2972044 "setKeyPrefix"
	public explicit_return_type "void"
	nparams 1
	  param in name "keyPrefix" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 2972172 "finalize"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Throwable"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 2972300 "ctor"
	class_operation private explicit_return_type "int"
	nparams 1
	  param inout name "fd" explicit_type "FileDescriptor"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 2972428 "dtor"
	class_operation private explicit_return_type "void"
	nparams 1
	  param in name "mBackupWriter" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 2972556 "writeEntityHeader_native"
	class_operation private explicit_return_type "int"
	nparams 3
	  param in name "mBackupWriter" explicit_type "int"
	  param in name "key" explicit_type "String"
	  param in name "dataSize" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws};
"
	
	
	
      end

      operation 2972684 "writeEntityData_native"
	class_operation private explicit_return_type "int"
	nparams 3
	  param in name "mBackupWriter" explicit_type "int"
	  param inout name "data" explicit_type "byte"
	  param in name "size" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws};
"
	
	
	
      end

      operation 2972812 "setKeyPrefix_native"
	class_operation private explicit_return_type "void"
	nparams 2
	  param in name "mBackupWriter" explicit_type "int"
	  param in name "keyPrefix" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
      end
    end

    class 775820 "BackupDataInputStream"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Provides an {@link java.io.InputStream}-like interface for accessing an
entity's data during a restore operation. Used by {@link BackupHelper} classes within the {@link
BackupAgentHelper} mechanism.
<p>
When {@link BackupHelper#restoreEntity(BackupDataInputStream) BackupHelper.restoreEntity()}
is called, the current entity's header has already been read from the underlying
{@link BackupDataInput}.  The entity's key string and total data size are available
through this class's {@link #getKey()} and {@link #size()} methods, respectively.
<p class=\"note\">
<strong>Note:</strong> The caller should take care not to seek or close the underlying data
source, nor read more than {@link #size()} bytes from the stream.</p>

@see BackupAgentHelper
@see BackupHelper"
      attribute 2224396 "key"
	package explicit_type "String"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2224524 "dataSize"
	package explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1571084 // mData (<unidirectional association>)
	relation 1571084 --->
	  a role_name "mData" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1571084 // mData (<unidirectional association>)
	  b parent class_ref 776076 // BackupDataInput
      end

      attribute 2224652 "mOneByte"
	package explicit_type "byte"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 2970892 "BackupDataInputStream"
	package explicit_return_type ""
	nparams 1
	  param inout name "data" type class_ref 776076 // BackupDataInput
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 2971020 "read"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read one byte of entity data from the stream, returning it as
an integer value.  If more than {@link #size()} bytes of data
are read from the stream, the output of this method is undefined.

@return The byte read, or undefined if the end of the stream has been reached."
      end

      operation 2971148 "read"
	public explicit_return_type "int"
	nparams 3
	  param inout name "b" explicit_type "byte"
	  param in name "offset" explicit_type "int"
	  param in name "size" explicit_type "int"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read up to {@code size} bytes of data into a byte array, beginning at position
{@code offset} within the array.

@param b Byte array into which the data will be read
@param offset The data will be stored in {@code b} beginning at this index
  within the array.
@param size The number of bytes to read in this operation.  If insufficient
  data exists within the entity to fulfill this request, only as much data
  will be read as is available.
@return The number of bytes of data read, or zero if all of the entity's
  data has already been read."
      end

      operation 2971276 "read"
	public explicit_return_type "int"
	nparams 1
	  param inout name "b" explicit_type "byte"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read enough entity data into a byte array to fill the array.

@param b Byte array to fill with data from the stream.  If the stream does not
  have sufficient data to fill the array, then the contents of the remainder of
  the array will be undefined.
@return The number of bytes of data read, or zero if all of the entity's
  data has already been read."
      end

      operation 2971404 "getKey"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Report the key string associated with this entity within the backup data set.

@return The key string for this entity, equivalent to calling
  {@link BackupDataInput#getKey()} on the underlying {@link BackupDataInput}."
      end

      operation 2971532 "size"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Report the total number of bytes of data available for the current entity.

@return The number of data bytes available, equivalent to calling
  {@link BackupDataInput#getDataSize()} on the underlying {@link BackupDataInput}."
      end
    end

    class 775948 "BackupHelper"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Defines the calling interface that {@link BackupAgentHelper} uses
when dispatching backup and restore operations to the installed helpers.
Applications can define and install their own helpers as well as using those
provided as part of the Android framework.
<p>
Although multiple helper objects may be installed simultaneously, each helper
is responsible only for handling its own data, and will not see entities
created by other components within the backup system.  Invocations of multiple
helpers are performed sequentially by the {@link BackupAgentHelper}, with each
helper given a chance to access its own saved state from within the state record
produced during the previous backup operation.

@see BackupAgentHelper
@see FileBackupHelper
@see SharedPreferencesBackupHelper"
      operation 2966028 "performBackup"
	public explicit_return_type "void"
	nparams 3
	  param inout name "oldState" type class_ref 729484 // ParcelFileDescriptor
	  param inout name "data" type class_ref 775692 // BackupDataOutput
	  param inout name "newState" type class_ref 729484 // ParcelFileDescriptor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Based on <code>oldState</code>, determine which of the files from the
application's data directory need to be backed up, write them to
<code>data</code>, and fill in <code>newState</code> with the state as it
exists now.
<p>
Implementing this method is much like implementing
{@link BackupAgent#onBackup(ParcelFileDescriptor, BackupDataOutput, ParcelFileDescriptor)
onBackup()} &mdash; the method parameters are the same.  When this method is invoked the
{@code oldState} descriptor points to the beginning of the state data
written during this helper's previous backup operation, and the {@code newState}
descriptor points to the file location at which the helper should write its
new state after performing the backup operation.
<p class=\"note\">
<strong>Note:</strong> The helper should not close or seek either the {@code oldState} or
the {@code newState} file descriptors.</p>

@param oldState An open, read-only {@link android.os.ParcelFileDescriptor} pointing to the
           last backup state provided by the application. May be
           <code>null</code>, in which case no prior state is being
           provided and the application should perform a full backup.
@param data An open, read/write {@link BackupDataOutput}
           pointing to the backup data destination.
           Typically the application will use backup helper classes to
           write to this file.
@param newState An open, read/write {@link android.os.ParcelFileDescriptor} pointing to an
           empty file. The application should record the final backup
           state here after writing the requested data to the <code>data</code>
           output stream."
      end

      operation 2966156 "restoreEntity"
	public explicit_return_type "void"
	nparams 1
	  param inout name "data" type class_ref 775820 // BackupDataInputStream
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called by {@link android.app.backup.BackupAgentHelper BackupAgentHelper}
to restore a single entity from the restore data set.  This method will be
called for each entity in the data set that belongs to this handler.
<p class=\"note\">
<strong>Note:</strong> Do not close the <code>data</code> stream.  Do not read more than
{@link android.app.backup.BackupDataInputStream#size() size()} bytes from
<code>data</code>.</p>

@param data An open {@link BackupDataInputStream} from which the backup data can be read."
      end

      operation 2966284 "writeNewStateDescription"
	public explicit_return_type "void"
	nparams 1
	  param inout name "newState" type class_ref 729484 // ParcelFileDescriptor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called by {@link android.app.backup.BackupAgentHelper BackupAgentHelper}
after a restore operation to write the backup state file corresponding to
the data as processed by the helper.  The data written here will be
available to the helper during the next call to its
{@link #performBackup(ParcelFileDescriptor, BackupDataOutput, ParcelFileDescriptor)
performBackup()} method.
<p>
This method will be called even if the handler's
{@link #restoreEntity(BackupDataInputStream) restoreEntity()} method was never invoked during
the restore operation.
<p class=\"note\">
<strong>Note:</strong> The helper should not close or seek the {@code newState}
file descriptor.</p>

@param newState A {@link android.os.ParcelFileDescriptor} to which the new state will be
written."
      end
    end

    class 776076 "BackupDataInput"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Provides the structured interface through which a {@link BackupAgent} reads
information from the backup data set, via its
{@link BackupAgent#onRestore(BackupDataInput, int, android.os.ParcelFileDescriptor) onRestore()}
method.  The data is presented as a set of \"entities,\" each
representing one named record as previously stored by the agent's
{@link BackupAgent#onBackup(ParcelFileDescriptor,BackupDataOutput,ParcelFileDescriptor)
onBackup()} implementation.  An entity is composed of a descriptive header plus a
byte array that holds the raw data saved in the remote backup.
<p>
The agent must consume every entity in the data stream, otherwise the
restored state of the application will be incomplete.
<h3>Example</h3>
<p>
A typical
{@link BackupAgent#onRestore(BackupDataInput,int,ParcelFileDescriptor)
onRestore()} implementation might be structured something like this:
<pre>
public void onRestore(BackupDataInput data, int appVersionCode,
                      ParcelFileDescriptor newState) {
    while (data.readNextHeader()) {
        String key = data.getKey();
        int dataSize = data.getDataSize();

        if (key.equals(MY_BACKUP_KEY_ONE)) {
            // process this kind of record here
            byte[] buffer = new byte[dataSize];
            data.readEntityData(buffer, 0, dataSize); // reads the entire entity at once

            // now 'buffer' holds the raw data and can be processed however
            // the agent wishes
            processBackupKeyOne(buffer);
        } else if (key.equals(MY_BACKUP_KEY_TO_IGNORE) {
            // a key we recognize but wish to discard
            data.skipEntityData();
        } // ... etc.
   }
}</pre>"
      attribute 2223884 "mBackupReader"
	package explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      class 776844 "EntityHeader"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 2224140 "key"
	  package explicit_type "String"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2224268 "dataSize"
	  package explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      classrelation 1570828 // mHeader (<unidirectional association>)
	relation 1570828 --->
	  a role_name "mHeader" init_value " new EntityHeader()" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1570828 // mHeader (<unidirectional association>)
	  b parent class_ref 776844 // EntityHeader
      end

      attribute 2224012 "mHeaderReady"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 2969356 "BackupDataInput"
	public explicit_return_type ""
	nparams 1
	  param inout name "fd" explicit_type "FileDescriptor"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 2969484 "finalize"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Throwable"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 2969612 "readNextHeader"
	public explicit_return_type "boolean"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Extract the next entity header from the restore stream.  After this method
return success, the {@link #getKey()} and {@link #getDataSize()} methods can
be used to inspect the entity that is now available for processing.

@return <code>true</code> when there is an entity ready for consumption from the
   restore stream, <code>false</code> if the restore stream has been fully consumed.
@throws IOException if an error occurred while reading the restore stream"
      end

      operation 2969740 "getKey"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Report the key associated with the current entity in the restore stream
@return the current entity's key string
@throws IllegalStateException if the next record header has not yet been read"
      end

      operation 2969868 "getDataSize"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Report the size in bytes of the data associated with the current entity in the
restore stream.

@return The size of the record's raw data, in bytes
@throws IllegalStateException if the next record header has not yet been read"
      end

      operation 2969996 "readEntityData"
	public explicit_return_type "int"
	nparams 3
	  param inout name "data" explicit_type "byte"
	  param in name "offset" explicit_type "int"
	  param in name "size" explicit_type "int"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read a record's raw data from the restore stream.  The record's header must first
have been processed by the {@link #readNextHeader()} method.  Multiple calls to
this method may be made in order to process the data in chunks; not all of it
must be read in a single call.  Once all of the raw data for the current entity
has been read, further calls to this method will simply return zero.

@param data An allocated byte array of at least 'size' bytes
@param offset Offset within the 'data' array at which the data will be placed
   when read from the stream
@param size The number of bytes to read in this pass
@return The number of bytes of data read.  Once all of the data for this entity
   has been read, further calls to this method will return zero.
@throws IOException if an error occurred when trying to read the restore data stream"
      end

      operation 2970124 "skipEntityData"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Consume the current entity's data without extracting it into a buffer
for further processing.  This allows a {@link android.app.backup.BackupAgent} to
efficiently discard obsolete or otherwise uninteresting records during the
restore operation.

@throws IOException if an error occurred when trying to read the restore data stream"
      end

      operation 2970252 "ctor"
	class_operation private explicit_return_type "int"
	nparams 1
	  param inout name "fd" explicit_type "FileDescriptor"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 2970380 "dtor"
	class_operation private explicit_return_type "void"
	nparams 1
	  param in name "mBackupReader" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 2970508 "readNextHeader_native"
	private explicit_return_type "int"
	nparams 2
	  param in name "mBackupReader" explicit_type "int"
	  param inout name "entity" type class_ref 776844 // EntityHeader
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
      end

      operation 2970636 "readEntityData_native"
	private explicit_return_type "int"
	nparams 4
	  param in name "mBackupReader" explicit_type "int"
	  param inout name "data" explicit_type "byte"
	  param in name "offset" explicit_type "int"
	  param in name "size" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws};
"
	
	
	
      end

      operation 2970764 "skipEntityData_native"
	private explicit_return_type "int"
	nparams 1
	  param in name "mBackupReader" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end
    end

    class 776204 "FullBackupDataOutput"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Provides the interface through which a {@link BackupAgent} writes entire files
to a full backup data set, via its {@link BackupAgent#onFullBackup(FullBackupDataOutput)}
method."
      classrelation 1571980 // mData (<unidirectional association>)
	relation 1571980 --->
	  a role_name "mData" private
	    comment " Currently a name-scoping shim around BackupDataOutput
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1571980 // mData (<unidirectional association>)
	  b parent class_ref 775692 // BackupDataOutput
      end

      operation 2975756 "FullBackupDataOutput"
	public explicit_return_type ""
	nparams 1
	  param inout name "fd" type class_ref 729484 // ParcelFileDescriptor
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 2975884 "getData"
	public return_type class_ref 775692 // BackupDataOutput
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end
    end

    class 776588 "BackupAgentHelper"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A convenient {@link BackupAgent} wrapper class that automatically manages
heterogeneous data sets within the backup data, each identified by a unique
key prefix.  When processing a backup or restore operation, the BackupAgentHelper
dispatches to one or more installed {@link BackupHelper} objects, each
of which is responsible for a defined subset of the data being processed.
<p>
An application will typically extend this class in its own
backup agent. Then, within the agent's {@link BackupAgent#onCreate() onCreate()}
method, it will call {@link #addHelper(String, BackupHelper) addHelper()} one or more times to
install the handlers for each kind of data it wishes to manage within its backups.
<p>
The Android framework currently provides two predefined {@link BackupHelper} classes:</p>
<ul><li>{@link FileBackupHelper} - Manages the backup and restore of entire files
within an application's data directory hierarchy.</li>
<li>{@link SharedPreferencesBackupHelper} - Manages the backup and restore of an
application's {@link android.content.SharedPreferences} data.</li></ul>
<p>
An application can also implement its own helper classes to work within the
{@link BackupAgentHelper} framework.  See the {@link BackupHelper} interface
documentation for details.

<div class=\"special reference\">
<h3>Developer Guides</h3>
<p>For more information about using BackupAgentHelper, read the
<a href=\"{@docRoot}guide/topics/data/backup.html\">Data Backup</a> developer guide.</p>
</div>

@see BackupHelper
@see FileBackupHelper
@see SharedPreferencesBackupHelper"
      classrelation 1570572 // <generalisation>
	relation 1570572 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 1570572 // <generalisation>
	  b parent class_ref 732556 // BackupAgent
      end

      attribute 2223756 "TAG"
	class_attribute const_attribute package explicit_type "String"
	init_value " \"BackupAgentHelper\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1570700 // mDispatcher (<unidirectional association>)
	relation 1570700 --->
	  a role_name "mDispatcher" init_value " new BackupHelperDispatcher()" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1570700 // mDispatcher (<unidirectional association>)
	  b parent class_ref 776716 // BackupHelperDispatcher
      end

      operation 2968844 "onBackup"
	public explicit_return_type "void"
	nparams 3
	  param inout name "oldState" type class_ref 729484 // ParcelFileDescriptor
	  param inout name "data" type class_ref 775692 // BackupDataOutput
	  param inout name "newState" type class_ref 729484 // ParcelFileDescriptor
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Run the backup process on each of the configured handlers."
      end

      operation 2968972 "onRestore"
	public explicit_return_type "void"
	nparams 3
	  param inout name "data" type class_ref 776076 // BackupDataInput
	  param in name "appVersionCode" explicit_type "int"
	  param inout name "newState" type class_ref 729484 // ParcelFileDescriptor
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Run the restore process on each of the configured handlers."
      end

      operation 2969100 "getDispatcher"
	public return_type class_ref 776716 // BackupHelperDispatcher
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 2969228 "addHelper"
	public explicit_return_type "void"
	nparams 2
	  param in name "keyPrefix" explicit_type "String"
	  param inout name "helper" type class_ref 775948 // BackupHelper
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add a helper for a given data subset to the agent's configuration.  Each helper
must have a prefix string that is unique within this backup agent's set of
helpers.

@param keyPrefix A string used to disambiguate the various helpers within this agent
@param helper A backup/restore helper object to be invoked during backup and restore
   operations."
      end
    end

    class 776716 "BackupHelperDispatcher"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " @hide "
      attribute 2224908 "TAG"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"BackupHelperDispatcher\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      class 777100 "Header"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 2225036 "chunkSize"
	  package explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " not including the header"
	end

	attribute 2225164 "keyPrefix"
	  package explicit_type "String"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      classrelation 1571212 // mHelpers (<unidirectional association>)
	relation 1571212 --->
	  stereotype "TreeMap"
	  a role_name "mHelpers" init_value " new TreeMap<String,BackupHelper>()" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<String,${type}> ${name}${value};
"
	    classrelation_ref 1571212 // mHelpers (<unidirectional association>)
	  b parent class_ref 775948 // BackupHelper
      end

      operation 2972940 "BackupHelperDispatcher"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2973068 "addHelper"
	public explicit_return_type "void"
	nparams 2
	  param in name "keyPrefix" explicit_type "String"
	  param inout name "helper" type class_ref 775948 // BackupHelper
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2973196 "performBackup"
	public explicit_return_type "void"
	nparams 3
	  param inout name "oldState" type class_ref 729484 // ParcelFileDescriptor
	  param inout name "data" type class_ref 775692 // BackupDataOutput
	  param inout name "newState" type class_ref 729484 // ParcelFileDescriptor
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2973324 "doOneBackup"
	private explicit_return_type "void"
	nparams 5
	  param inout name "oldState" type class_ref 729484 // ParcelFileDescriptor
	  param inout name "data" type class_ref 775692 // BackupDataOutput
	  param inout name "newState" type class_ref 729484 // ParcelFileDescriptor
	  param inout name "header" type class_ref 777100 // Header
	  param inout name "helper" type class_ref 775948 // BackupHelper
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2973452 "performRestore"
	public explicit_return_type "void"
	nparams 3
	  param inout name "input" type class_ref 776076 // BackupDataInput
	  param in name "appVersionCode" explicit_type "int"
	  param inout name "newState" type class_ref 729484 // ParcelFileDescriptor
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2973580 "readHeader_native"
	class_operation private explicit_return_type "int"
	nparams 2
	  param inout name "h" type class_ref 777100 // Header
	  param inout name "fd" explicit_type "FileDescriptor"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
      end

      operation 2973708 "skipChunk_native"
	class_operation private explicit_return_type "int"
	nparams 2
	  param inout name "fd" explicit_type "FileDescriptor"
	  param in name "bytesToSkip" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
      end

      operation 2973836 "allocateHeader_native"
	class_operation private explicit_return_type "int"
	nparams 2
	  param inout name "h" type class_ref 777100 // Header
	  param inout name "fd" explicit_type "FileDescriptor"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
      end

      operation 2973964 "writeHeader_native"
	class_operation private explicit_return_type "int"
	nparams 3
	  param inout name "h" type class_ref 777100 // Header
	  param inout name "fd" explicit_type "FileDescriptor"
	  param in name "pos" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws};
"
	
	
	
      end
    end

    class 777228 "BackupManager"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The interface through which an application interacts with the Android backup service to
request backup and restore operations.
Applications instantiate it using the constructor and issue calls through that instance.
<p>
When an application has made changes to data which should be backed up, a
call to {@link #dataChanged()} will notify the backup service. The system
will then schedule a backup operation to occur in the near future. Repeated
calls to {@link #dataChanged()} have no further effect until the backup
operation actually occurs.
<p>
A backup or restore operation for your application begins when the system launches the
{@link android.app.backup.BackupAgent} subclass you've declared in your manifest. See the
documentation for {@link android.app.backup.BackupAgent} for a detailed description
of how the operation then proceeds.
<p>
Several attributes affecting the operation of the backup and restore mechanism
can be set on the <code>
<a href=\"{@docRoot}guide/topics/manifest/application-element.html\">&lt;application&gt;</a></code>
tag in your application's AndroidManifest.xml file.

<div class=\"special reference\">
<h3>Developer Guides</h3>
<p>For more information about using BackupManager, read the
<a href=\"{@docRoot}guide/topics/data/backup.html\">Data Backup</a> developer guide.</p></div>

@attr ref android.R.styleable#AndroidManifestApplication_allowBackup
@attr ref android.R.styleable#AndroidManifestApplication_backupAgent
@attr ref android.R.styleable#AndroidManifestApplication_killAfterRestore
@attr ref android.R.styleable#AndroidManifestApplication_restoreAnyVersion"
      attribute 2225292 "TAG"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"BackupManager\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1571340 // mContext (<unidirectional association>)
	relation 1571340 --->
	  a role_name "mContext" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1571340 // mContext (<unidirectional association>)
	  b parent class_ref 684812 // Context
      end

      attribute 2225420 "sService"
	class_attribute private explicit_type "IBackupManager"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 2974092 "checkServiceBinder"
	class_operation private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2974220 "BackupManager"
	public explicit_return_type ""
	nparams 1
	  param inout name "context" type class_ref 684812 // Context
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a BackupManager object through which the application can
communicate with the Android backup system.

@param context The {@link android.content.Context} that was provided when
               one of your application's {@link android.app.Activity Activities}
               was created."
      end

      operation 2974348 "dataChanged"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies the Android backup system that your application wishes to back up
new changes to its data.  A backup operation using your application's
{@link android.app.backup.BackupAgent} subclass will be scheduled when you
call this method."
      end

      operation 2974476 "dataChanged"
	class_operation public explicit_return_type "void"
	nparams 1
	  param in name "packageName" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience method for callers who need to indicate that some other package
needs a backup pass.  This can be useful in the case of groups of packages
that share a uid.
<p>
This method requires that the application hold the \"android.permission.BACKUP\"
permission if the package named in the argument does not run under the same uid
as the caller.

@param packageName The package name identifying the application to back up."
      end

      operation 2974604 "requestRestore"
	public explicit_return_type "int"
	nparams 1
	  param inout name "observer" type class_ref 777356 // RestoreObserver
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Restore the calling application from backup.  The data will be restored from the
current backup dataset if the application has stored data there, or from
the dataset used during the last full device setup operation if the current
backup dataset has no matching data.  If no backup data exists for this application
in either source, a nonzero value will be returned.

<p>If this method returns zero (meaning success), the OS will attempt to retrieve
a backed-up dataset from the remote transport, instantiate the application's
backup agent, and pass the dataset to the agent's
{@link android.app.backup.BackupAgent#onRestore(BackupDataInput, int, android.os.ParcelFileDescriptor) onRestore()}
method.

@param observer The {@link RestoreObserver} to receive callbacks during the restore
operation. This must not be null.

@return Zero on success; nonzero on error."
      end

      operation 2974732 "beginRestoreSession"
	public return_type class_ref 777484 // RestoreSession
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Begin the process of restoring data from backup.  See the
{@link android.app.backup.RestoreSession} class for documentation on that process.
@hide"
      end
    end

    class 777356 "RestoreObserver"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Callback class for receiving progress reports during a restore operation.  These
methods will all be called on your application's main thread."
      operation 2976012 "restoreSetsAvailable"
	public explicit_return_type "void"
	nparams 1
	  param inout name "result" type class_ref 679564 // RestoreSet
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Supply a list of the restore datasets available from the current transport.  This
method is invoked as a callback following the application's use of the
{@link android.app.backup.IRestoreSession.getAvailableRestoreSets} method.

@param result An array of {@link android.app.backup.RestoreSet RestoreSet} objects
  describing all of the available datasets that are candidates for restoring to
  the current device.  If no applicable datasets exist, {@code result} will be
  {@code null}.

@hide"
      end

      operation 2976140 "restoreStarting"
	public explicit_return_type "void"
	nparams 1
	  param in name "numPackages" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The restore operation has begun.

@param numPackages The total number of packages being processed in
  this restore operation."
      end

      operation 2976268 "onUpdate"
	public explicit_return_type "void"
	nparams 2
	  param in name "nowBeingRestored" explicit_type "int"
	  param in name "currentPackage" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "An indication of which package is being restored currently, out of the
total number provided in the {@link #restoreStarting(int)} callback.  This method
is not guaranteed to be called: if the transport is unable to obtain
data for one or more of the requested packages, no onUpdate() call will
occur for those packages.

@param nowBeingRestored The index, between 1 and the numPackages parameter
  to the {@link #restoreStarting(int)} callback, of the package now being
  restored.  This may be non-monotonic; it is intended purely as a rough
  indication of the backup manager's progress through the overall restore process.
@param currentPackage The name of the package now being restored."
      end

      operation 2976396 "restoreFinished"
	public explicit_return_type "void"
	nparams 1
	  param in name "error" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The restore process has completed.  This method will always be called,
even if no individual package restore operations were attempted.

@param error Zero on success; a nonzero error code if the restore operation
  as a whole failed."
      end
    end

    class 777484 "RestoreSession"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Interface for managing a restore session.
@hide"
      attribute 2227852 "TAG"
	class_attribute const_attribute package explicit_type "String"
	init_value " \"RestoreSession\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1572108 // mContext (<unidirectional association>)
	relation 1572108 --->
	  a role_name "mContext" const_relation package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1572108 // mContext (<unidirectional association>)
	  b parent class_ref 684812 // Context
      end

      attribute 2227980 "mBinder"
	package explicit_type "IRestoreSession"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      class 777996 "RestoreObserverWrapper"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1572492 // mHandler (<unidirectional association>)
	  relation 1572492 --->
	    a role_name "mHandler" const_relation package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1572492 // mHandler (<unidirectional association>)
	    b parent class_ref 687500 // Handler
	end

	classrelation 1572620 // mAppObserver (<unidirectional association>)
	  relation 1572620 --->
	    a role_name "mAppObserver" const_relation package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1572620 // mAppObserver (<unidirectional association>)
	    b parent class_ref 777356 // RestoreObserver
	end

	attribute 2228108 "MSG_RESTORE_STARTING"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " 1"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2228236 "MSG_UPDATE"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " 2"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2228364 "MSG_RESTORE_FINISHED"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " 3"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 2228492 "MSG_RESTORE_SETS_AVAILABLE"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " 4"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 2977292 "RestoreObserverWrapper"
	  package explicit_return_type ""
	  nparams 2
	    param inout name "context" type class_ref 684812 // Context
	    param inout name "appObserver" type class_ref 777356 // RestoreObserver
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2977420 "restoreSetsAvailable"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "result" type class_ref 679564 // RestoreSet
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Binder calls into this object just enqueue on the main-thread handler"
	end

	operation 2977548 "restoreStarting"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "numPackages" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2977676 "onUpdate"
	  public explicit_return_type "void"
	  nparams 2
	    param in name "nowBeingRestored" explicit_type "int"
	    param in name "currentPackage" explicit_type "String"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2977804 "restoreFinished"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "error" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 1572236 // mObserver (<unidirectional association>)
	relation 1572236 --->
	  a role_name "mObserver" init_value " null" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1572236 // mObserver (<unidirectional association>)
	  b parent class_ref 777996 // RestoreObserverWrapper
      end

      operation 2976524 "getAvailableRestoreSets"
	public explicit_return_type "int"
	nparams 1
	  param inout name "observer" type class_ref 777356 // RestoreObserver
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Ask the current transport what the available restore sets are.

@param observer a RestoreObserver object whose restoreSetsAvailable() method will
  be called on the application's main thread in order to supply the results of
  the restore set lookup by the backup transport.  This parameter must not be
  null.
@return Zero on success, nonzero on error.  The observer's restoreSetsAvailable()
  method will only be called if this method returned zero."
      end

      operation 2976652 "restoreAll"
	public explicit_return_type "int"
	nparams 2
	  param in name "token" explicit_type "long"
	  param inout name "observer" type class_ref 777356 // RestoreObserver
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Restore the given set onto the device, replacing the current data of any app
contained in the restore set with the data previously backed up.

<p>Callers must hold the android.permission.BACKUP permission to use this method.

@return Zero on success; nonzero on error.  The observer will only receive
  progress callbacks if this method returned zero.
@param token The token from {@link #getAvailableRestoreSets()} corresponding to
  the restore set that should be used.
@param observer If non-null, this binder points to an object that will receive
  progress callbacks during the restore operation."
      end

      operation 2976780 "restoreSome"
	public explicit_return_type "int"
	nparams 3
	  param in name "token" explicit_type "long"
	  param inout name "observer" type class_ref 777356 // RestoreObserver
	  param inout name "packages" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Restore select packages from the given set onto the device, replacing the
current data of any app contained in the set with the data previously
backed up.

<p>Callers must hold the android.permission.BACKUP permission to use this method.

@return Zero on success, nonzero on error. The observer will only receive
  progress callbacks if this method returned zero.
@param token The token from {@link getAvailableRestoreSets()} corresponding to
  the restore set that should be used.
@param observer If non-null, this binder points to an object that will receive
  progress callbacks during the restore operation.
@param packages The set of packages for which to attempt a restore.  Regardless of
  the contents of the actual back-end dataset named by {@code token}, only
  applications mentioned in this list will have their data restored.

@hide"
      end

      operation 2976908 "restorePackage"
	public explicit_return_type "int"
	nparams 2
	  param in name "packageName" explicit_type "String"
	  param inout name "observer" type class_ref 777356 // RestoreObserver
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Restore a single application from backup.  The data will be restored from the
current backup dataset if the given package has stored data there, or from
the dataset used during the last full device setup operation if the current
backup dataset has no matching data.  If no backup data exists for this package
in either source, a nonzero value will be returned.

@return Zero on success; nonzero on error.  The observer will only receive
  progress callbacks if this method returned zero.
@param packageName The name of the package whose data to restore.  If this is
  not the name of the caller's own package, then the android.permission.BACKUP
  permission must be held.
@param observer If non-null, this binder points to an object that will receive
  progress callbacks during the restore operation."
      end

      operation 2977036 "endRestoreSession"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "End this restore session.  After this method is called, the RestoreSession
object is no longer valid.

<p><b>Note:</b> The caller <i>must</i> invoke this method to end the restore session,
  even if {@link #restorePackage(String, RestoreObserver)} failed."
      end

      operation 2977164 "RestoreSession"
	package explicit_return_type ""
	nparams 2
	  param inout name "context" type class_ref 684812 // Context
	  param inout name "binder" explicit_type "IRestoreSession"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Nonpublic implementation here"
      end
    end

    class 777612 "FileBackupHelper"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A helper class that can be used in conjunction with
{@link android.app.backup.BackupAgentHelper} to manage the backup of a set of
files. Whenever backup is performed, all files changed since the last backup
will be saved in their entirety. When backup first occurs,
every file in the list provided to {@link #FileBackupHelper} will be backed up.
<p>
During restore, if the helper encounters data for a file that was not
specified when the FileBackupHelper object was constructed, that data
will be ignored.
<p class=\"note\"><strong>Note:</strong> This should be
used only with small configuration files, not large binary files."
      classrelation 1571468 // <generalisation>
	relation 1571468 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 1571468 // <generalisation>
	  b parent class_ref 775564 // FileBackupHelperBase
      end

      classrelation 1571596 // <realization>
	relation 1571596 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 1571596 // <realization>
	  b parent class_ref 775948 // BackupHelper
      end

      attribute 2225548 "TAG"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"FileBackupHelper\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2225676 "DEBUG"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1571724 // mContext (<unidirectional association>)
	relation 1571724 --->
	  a role_name "mContext" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1571724 // mContext (<unidirectional association>)
	  b parent class_ref 684812 // Context
      end

      attribute 2225804 "mFilesDir"
	package explicit_type "File"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2225932 "mFiles"
	package explicit_type "String"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 2974860 "FileBackupHelper"
	public explicit_return_type ""
	nparams 2
	  param inout name "context" type class_ref 684812 // Context
	  param inout name "" explicit_type "String...files"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a helper to manage backup/restore of entire files within the
application's data directory hierarchy.

@param context The backup agent's Context object
@param files A list of the files to be backed up or restored."
      end

      operation 2974988 "performBackup"
	public explicit_return_type "void"
	nparams 3
	  param inout name "oldState" type class_ref 729484 // ParcelFileDescriptor
	  param inout name "data" type class_ref 775692 // BackupDataOutput
	  param inout name "newState" type class_ref 729484 // ParcelFileDescriptor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Based on <code>oldState</code>, determine which of the files from the
application's data directory need to be backed up, write them to the data
stream, and fill in <code>newState</code> with the state as it exists
now. When <code>oldState</code> is <code>null</code>, all the files will
be backed up.
<p>
This should only be called directly from within the {@link BackupAgentHelper}
implementation. See
{@link android.app.backup.BackupAgent#onBackup(ParcelFileDescriptor, BackupDataOutput, ParcelFileDescriptor)}
for a description of parameter meanings."
      end

      operation 2975116 "restoreEntity"
	public explicit_return_type "void"
	nparams 1
	  param inout name "data" type class_ref 775820 // BackupDataInputStream
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Restore one record [representing a single file] from the restore dataset.
<p>
This should only be called directly from within the {@link BackupAgentHelper}
implementation."
      end
    end

    class 777740 "FullBackup"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Global constant definitions et cetera related to the full-backup-to-fd
binary format.  Nothing in this namespace is part of any API; it's all
hidden details of the current implementation gathered into one location.

@hide"
      attribute 2226060 "TAG"
	class_attribute const_attribute package explicit_type "String"
	init_value " \"FullBackup\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2226188 "APK_TREE_TOKEN"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"a\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2226316 "OBB_TREE_TOKEN"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"obb\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2226444 "ROOT_TREE_TOKEN"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"r\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2226572 "DATA_TREE_TOKEN"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"f\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2226700 "DATABASE_TREE_TOKEN"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"db\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2226828 "SHAREDPREFS_TREE_TOKEN"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"sp\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2226956 "CACHE_TREE_TOKEN"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"c\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2227084 "SHARED_STORAGE_TOKEN"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"shared\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2227212 "APPS_PREFIX"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"apps/\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2227340 "SHARED_PREFIX"
	class_attribute const_attribute public explicit_type "String"
	init_value " SHARED_STORAGE_TOKEN + \"/\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2227468 "FULL_BACKUP_INTENT_ACTION"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"fullback\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2227596 "FULL_RESTORE_INTENT_ACTION"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"fullrest\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2227724 "CONF_TOKEN_INTENT_EXTRA"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"conftoken\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 2975244 "backupToTar"
	class_operation public explicit_return_type "int"
	nparams 6
	  param in name "packageName" explicit_type "String"
	  param in name "domain" explicit_type "String"
	  param in name "linkdomain" explicit_type "String"
	  param in name "rootpath" explicit_type "String"
	  param in name "path" explicit_type "String"
	  param inout name "output" type class_ref 775692 // BackupDataOutput
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws};
"
	
	
	
	comment "@hide"
      end

      operation 2975372 "restoreFile"
	class_operation public explicit_return_type "void"
	nparams 6
	  param inout name "data" type class_ref 729484 // ParcelFileDescriptor
	  param in name "size" explicit_type "long"
	  param in name "type" explicit_type "int"
	  param in name "mode" explicit_type "long"
	  param in name "mtime" explicit_type "long"
	  param inout name "outFile" explicit_type "File"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copy data from a socket to the given File location on permanent storage.  The
modification time and access mode of the resulting file will be set if desired,
although group/all rwx modes will be stripped: the restored file will not be
accessible from outside the target application even if the original file was.
If the {@code type} parameter indicates that the result should be a directory,
the socket parameter may be {@code null}; even if it is valid, no data will be
read from it in this case.
<p>
If the {@code mode} argument is negative, then the resulting output file will not
have its access mode or last modification time reset as part of this operation.

@param data Socket supplying the data to be copied to the output file.  If the
   output is a directory, this may be {@code null}.
@param size Number of bytes of data to copy from the socket to the file.  At least
   this much data must be available through the {@code data} parameter.
@param type Must be either {@link BackupAgent#TYPE_FILE} for ordinary file data
   or {@link BackupAgent#TYPE_DIRECTORY} for a directory.
@param mode Unix-style file mode (as used by the chmod(2) syscall) to be set on
   the output file or directory.  group/all rwx modes are stripped even if set
   in this parameter.  If this parameter is negative then neither
   the mode nor the mtime values will be applied to the restored file.
@param mtime A timestamp in the standard Unix epoch that will be imposed as the
   last modification time of the output file.  if the {@code mode} parameter is
   negative then this parameter will be ignored.
@param outFile Location within the filesystem to place the data.  This must point
   to a location that is writeable by the caller, prefereably using an absolute path.
@throws IOException"
      end
    end

    class 777868 "FullBackupAgent"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Simple concrete class that merely provides the default BackupAgent full backup/restore
implementations for applications that do not supply their own.

{@hide}"
      classrelation 1571852 // <generalisation>
	relation 1571852 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 1571852 // <generalisation>
	  b parent class_ref 732556 // BackupAgent
      end

      operation 2975500 "onBackup"
	public explicit_return_type "void"
	nparams 3
	  param inout name "oldState" type class_ref 729484 // ParcelFileDescriptor
	  param inout name "data" type class_ref 775692 // BackupDataOutput
	  param inout name "newState" type class_ref 729484 // ParcelFileDescriptor
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 2975628 "onRestore"
	public explicit_return_type "void"
	nparams 3
	  param inout name "data" type class_ref 776076 // BackupDataInput
	  param in name "appVersionCode" explicit_type "int"
	  param inout name "newState" type class_ref 729484 // ParcelFileDescriptor
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 778124 "SharedPreferencesBackupHelper"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A helper class that can be used in conjunction with
{@link android.app.backup.BackupAgentHelper} to manage the backup of
{@link android.content.SharedPreferences}. Whenever a backup is performed, it
will back up all named shared preferences that have changed since the last
backup operation.
<p>
To use this class, the application's backup agent class should extend
{@link android.app.backup.BackupAgentHelper}.  Then, in the agent's
{@link BackupAgent#onCreate()} method, an instance of this class should be
allocated and installed as a backup/restore handler within the BackupAgentHelper
framework.  For example, an agent supporting backup and restore for
an application with two groups of {@link android.content.SharedPreferences}
data might look something like this:
<pre>
import android.app.backup.BackupAgentHelper;
import android.app.backup.SharedPreferencesBackupHelper;

public class MyBackupAgent extends BackupAgentHelper {
    // The names of the SharedPreferences groups that the application maintains.  These
    // are the same strings that are passed to {@link Context#getSharedPreferences(String, int)}.
    static final String PREFS_DISPLAY = \"displayprefs\";
    static final String PREFS_SCORES = \"highscores\";

    // An arbitrary string used within the BackupAgentHelper implementation to
    // identify the SharedPreferenceBackupHelper's data.
    static final String MY_PREFS_BACKUP_KEY = \"myprefs\";

    // Simply allocate a helper and install it
    void onCreate() {
        SharedPreferencesBackupHelper helper =
                new SharedPreferencesBackupHelper(this, PREFS_DISPLAY, PREFS_SCORES);
        addHelper(MY_PREFS_BACKUP_KEY, helper);
    }
}</pre>
<p>
No further implementation is needed; the {@link BackupAgentHelper} mechanism automatically
dispatches the
{@link BackupAgent#onBackup(android.os.ParcelFileDescriptor, BackupDataOutput, android.os.ParcelFileDescriptor) BackupAgent.onBackup()}
and
{@link BackupAgent#onRestore(BackupDataInput, int, android.os.ParcelFileDescriptor) BackupAgent.onRestore()}
callbacks to the SharedPreferencesBackupHelper as appropriate."
      classrelation 1573004 // <generalisation>
	relation 1573004 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 1573004 // <generalisation>
	  b parent class_ref 775564 // FileBackupHelperBase
      end

      classrelation 1573132 // <realization>
	relation 1573132 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 1573132 // <realization>
	  b parent class_ref 775948 // BackupHelper
      end

      attribute 2229004 "TAG"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"SharedPreferencesBackupHelper\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2229132 "DEBUG"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1573260 // mContext (<unidirectional association>)
	relation 1573260 --->
	  a role_name "mContext" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1573260 // mContext (<unidirectional association>)
	  b parent class_ref 684812 // Context
      end

      attribute 2229260 "mPrefGroups"
	private explicit_type "String"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 2978572 "SharedPreferencesBackupHelper"
	public explicit_return_type ""
	nparams 2
	  param inout name "context" type class_ref 684812 // Context
	  param inout name "" explicit_type "String...prefGroups"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a helper for backing up and restoring the
{@link android.content.SharedPreferences} under the given names.

@param context The application {@link android.content.Context}
@param prefGroups The names of each {@link android.content.SharedPreferences} file to
back up"
      end

      operation 2978700 "performBackup"
	public explicit_return_type "void"
	nparams 3
	  param inout name "oldState" type class_ref 729484 // ParcelFileDescriptor
	  param inout name "data" type class_ref 775692 // BackupDataOutput
	  param inout name "newState" type class_ref 729484 // ParcelFileDescriptor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Backs up the configured {@link android.content.SharedPreferences} groups."
      end

      operation 2978828 "restoreEntity"
	public explicit_return_type "void"
	nparams 1
	  param inout name "data" type class_ref 775820 // BackupDataInputStream
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Restores one entity from the restore data stream to its proper shared
preferences file store."
      end
    end

    class 778252 "WallpaperBackupHelper"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Helper for backing up / restoring wallpapers.  Basically an AbsoluteFileBackupHelper,
but with logic for deciding what to do with restored wallpaper images.

@hide"
      classrelation 1573388 // <generalisation>
	relation 1573388 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 1573388 // <generalisation>
	  b parent class_ref 775564 // FileBackupHelperBase
      end

      classrelation 1573516 // <realization>
	relation 1573516 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 1573516 // <realization>
	  b parent class_ref 775948 // BackupHelper
      end

      attribute 2229388 "TAG"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"WallpaperBackupHelper\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2229516 "DEBUG"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2229644 "WALLPAPER_IMAGE"
	class_attribute const_attribute public explicit_type "String"
	init_value "
            new File(Environment.getUserSystemDirectory(UserHandle.USER_OWNER),
                    \"wallpaper\").getAbsolutePath()"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " This path must match what the WallpaperManagerService uses
 TODO: Will need to change if backing up non-primary user's wallpaper"
      end

      attribute 2229772 "WALLPAPER_INFO"
	class_attribute const_attribute public explicit_type "String"
	init_value "
            new File(Environment.getUserSystemDirectory(UserHandle.USER_OWNER),
                    \"wallpaper_info.xml\").getAbsolutePath()"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2229900 "WALLPAPER_IMAGE_KEY"
	class_attribute const_attribute public explicit_type "String"
	init_value "
            \"/data/data/com.android.settings/files/wallpaper\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Use old keys to keep legacy data compatibility and avoid writing two wallpapers"
      end

      attribute 2230028 "WALLPAPER_INFO_KEY"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"/data/system/wallpaper_info.xml\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2230156 "STAGE_FILE"
	class_attribute const_attribute private explicit_type "String"
	init_value "
            new File(Environment.getUserSystemDirectory(UserHandle.USER_OWNER),
                    \"wallpaper-tmp\").getAbsolutePath()"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Stage file - should be adjacent to the WALLPAPER_IMAGE location.  The wallpapers
 will be saved to this file from the restore stream, then renamed to the proper
 location if it's deemed suitable.
 TODO: Will need to change if backing up non-primary user's wallpaper"
      end

      classrelation 1573644 // mContext (<unidirectional association>)
	relation 1573644 --->
	  a role_name "mContext" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1573644 // mContext (<unidirectional association>)
	  b parent class_ref 684812 // Context
      end

      attribute 2230284 "mFiles"
	package explicit_type "String"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2230412 "mKeys"
	package explicit_type "String"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2230540 "mDesiredMinWidth"
	package explicit_type "double"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 2230668 "mDesiredMinHeight"
	package explicit_type "double"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 2978956 "WallpaperBackupHelper"
	public explicit_return_type ""
	nparams 3
	  param inout name "context" type class_ref 684812 // Context
	  param inout name "files" explicit_type "String"
	  param inout name "keys" explicit_type "String"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a helper for backing up / restoring the files at the given absolute locations
within the file system.

@param context
@param files"
      end

      operation 2979084 "performBackup"
	public explicit_return_type "void"
	nparams 3
	  param inout name "oldState" type class_ref 729484 // ParcelFileDescriptor
	  param inout name "data" type class_ref 775692 // BackupDataOutput
	  param inout name "newState" type class_ref 729484 // ParcelFileDescriptor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Based on oldState, determine which of the files from the application's data directory
need to be backed up, write them to the data stream, and fill in newState with the
state as it exists now."
      end

      operation 2979212 "restoreEntity"
	public explicit_return_type "void"
	nparams 1
	  param inout name "data" type class_ref 775820 // BackupDataInputStream
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Restore one absolute file entity from the restore stream.  If we're restoring the
magic wallpaper file, take specific action to determine whether it is suitable for
the current device."
      end
    end

    class 2270988 "IBackupManager"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Direct interface to the Backup Manager Service that applications invoke on.  The only
operation currently needed is a simple notification that the app has made changes to
data it wishes to back up, so the system should run a backup pass.

Apps will use the {@link android.app.backup.BackupManager} class rather than going through
this Binder interface directly.

{@hide}"
      classrelation 4418316 // <generalisation>
	relation 4418188 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 4418316 // <generalisation>
	  b parent class_ref 716940 // IInterface
      end

      class 2277004 "Stub"
	abstract visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 4418444 // <generalisation>
	  relation 4418316 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 4418444 // <generalisation>
	    b parent class_ref 729100 // Binder
	end

	classrelation 4418572 // <realization>
	  relation 4418444 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 4418572 // <realization>
	    b parent class_ref 2270988 // IBackupManager
	end

	attribute 8331404 "DESCRIPTOR"
	  class_attribute const_attribute private explicit_type "java.lang.String"
	  init_value " \"android.app.backup.IBackupManager\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 10443916 "Stub"
	  public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Construct the stub at attach it to the interface. "
	end

	operation 10444044 "asInterface"
	  class_operation public return_type class_ref 2270988 // IBackupManager
	  nparams 1
	    param inout name "obj" explicit_type "android.os.IBinder"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Cast an IBinder object into an android.app.backup.IBackupManager interface,
generating a proxy if needed."
	end

	operation 10444172 "asBinder"
	  public explicit_return_type "android.os.IBinder"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 10444300 "onTransact"
	  public explicit_return_type "boolean"
	  nparams 4
	    param in name "code" explicit_type "int"
	    param inout name "data" explicit_type "android.os.Parcel"
	    param inout name "reply" explicit_type "android.os.Parcel"
	    param in name "flags" explicit_type "int"
	  nexceptions 1
	    explicit_exception "android.os.RemoteException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	class 2277132 "Proxy"
	  visibility private 
	  cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	  java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  
	  classrelation 4418700 // <realization>
	    relation 4418572 -_-|>
	      a public
		cpp default "${type}"
		java "${type}"
		classrelation_ref 4418700 // <realization>
	      b parent class_ref 2270988 // IBackupManager
	  end

	  attribute 8331532 "mRemote"
	    private explicit_type "android.os.IBinder"
	    cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	  end

	  operation 10444428 "Proxy"
	    package explicit_return_type ""
	    nparams 1
	      param inout name "remote" explicit_type "android.os.IBinder"
	    cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	    cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 10444556 "asBinder"
	    public explicit_return_type "android.os.IBinder"
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 10444684 "getInterfaceDescriptor"
	    public explicit_return_type "java.lang.String"
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 10444812 "dataChanged"
	    public explicit_return_type "void"
	    nparams 1
	      param inout name "packageName" explicit_type "java.lang.String"
	    nexceptions 1
	      explicit_exception "android.os.RemoteException"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Tell the system service that the caller has made changes to its
data, and therefore needs to undergo an incremental backup pass.

Any application can invoke this method for its own package, but
only callers who hold the android.permission.BACKUP permission
may invoke it for arbitrary packages."
	  end

	  operation 10444940 "clearBackupData"
	    public explicit_return_type "void"
	    nparams 1
	      param inout name "packageName" explicit_type "java.lang.String"
	    nexceptions 1
	      explicit_exception "android.os.RemoteException"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Erase all backed-up data for the given package from the storage
destination.

Any application can invoke this method for its own package, but
only callers who hold the android.permission.BACKUP permission
may invoke it for arbitrary packages."
	  end

	  operation 10445068 "agentConnected"
	    public explicit_return_type "void"
	    nparams 2
	      param inout name "packageName" explicit_type "java.lang.String"
	      param inout name "agent" explicit_type "android.os.IBinder"
	    nexceptions 1
	      explicit_exception "android.os.RemoteException"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Notifies the Backup Manager Service that an agent has become available.  This
method is only invoked by the Activity Manager."
	  end

	  operation 10445196 "agentDisconnected"
	    public explicit_return_type "void"
	    nparams 1
	      param inout name "packageName" explicit_type "java.lang.String"
	    nexceptions 1
	      explicit_exception "android.os.RemoteException"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Notify the Backup Manager Service that an agent has unexpectedly gone away.
This method is only invoked by the Activity Manager."
	  end

	  operation 10445324 "restoreAtInstall"
	    public explicit_return_type "void"
	    nparams 2
	      param inout name "packageName" explicit_type "java.lang.String"
	      param in name "token" explicit_type "int"
	    nexceptions 1
	      explicit_exception "android.os.RemoteException"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Notify the Backup Manager Service that an application being installed will
need a data-restore pass.  This method is only invoked by the Package Manager."
	  end

	  operation 10445452 "setBackupEnabled"
	    public explicit_return_type "void"
	    nparams 1
	      param inout name "isEnabled" explicit_type "boolean"
	    nexceptions 1
	      explicit_exception "android.os.RemoteException"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Enable/disable the backup service entirely.  When disabled, no backup
or restore operations will take place.  Data-changed notifications will
still be observed and collected, however, so that changes made while the
mechanism was disabled will still be backed up properly if it is enabled
at some point in the future.

<p>Callers must hold the android.permission.BACKUP permission to use this method."
	  end

	  operation 10445580 "setAutoRestore"
	    public explicit_return_type "void"
	    nparams 1
	      param inout name "doAutoRestore" explicit_type "boolean"
	    nexceptions 1
	      explicit_exception "android.os.RemoteException"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Enable/disable automatic restore of application data at install time.  When
enabled, installation of any package will involve the Backup Manager.  If data
exists for the newly-installed package, either from the device's current [enabled]
backup dataset or from the restore set used in the last wholesale restore operation,
that data will be supplied to the new package's restore agent before the package
is made generally available for launch.

<p>Callers must hold  the android.permission.BACKUP permission to use this method.

@param doAutoRestore When true, enables the automatic app-data restore facility.  When
  false, this facility will be disabled."
	  end

	  operation 10445708 "setBackupProvisioned"
	    public explicit_return_type "void"
	    nparams 1
	      param inout name "isProvisioned" explicit_type "boolean"
	    nexceptions 1
	      explicit_exception "android.os.RemoteException"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Indicate that any necessary one-time provisioning has occurred.

<p>Callers must hold the android.permission.BACKUP permission to use this method."
	  end

	  operation 10445836 "isBackupEnabled"
	    public explicit_return_type "boolean"
	    nparams 0
	    nexceptions 1
	      explicit_exception "android.os.RemoteException"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Report whether the backup mechanism is currently enabled.

<p>Callers must hold the android.permission.BACKUP permission to use this method."
	  end

	  operation 10445964 "setBackupPassword"
	    public explicit_return_type "boolean"
	    nparams 2
	      param inout name "currentPw" explicit_type "java.lang.String"
	      param inout name "newPw" explicit_type "java.lang.String"
	    nexceptions 1
	      explicit_exception "android.os.RemoteException"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Set the device's backup password.  Returns {@code true} if the password was set
successfully, {@code false} otherwise.  Typically a failure means that an incorrect
current password was supplied.

<p>Callers must hold the android.permission.BACKUP permission to use this method."
	  end

	  operation 10446092 "hasBackupPassword"
	    public explicit_return_type "boolean"
	    nparams 0
	    nexceptions 1
	      explicit_exception "android.os.RemoteException"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Reports whether a backup password is currently set.  If not, then a null or empty
\"current password\" argument should be passed to setBackupPassword().

<p>Callers must hold the android.permission.BACKUP permission to use this method."
	  end

	  operation 10446220 "backupNow"
	    public explicit_return_type "void"
	    nparams 0
	    nexceptions 1
	      explicit_exception "android.os.RemoteException"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Schedule an immediate backup attempt for all pending updates.  This is
primarily intended for transports to use when they detect a suitable
opportunity for doing a backup pass.  If there are no pending updates to
be sent, no action will be taken.  Even if some updates are pending, the
transport will still be asked to confirm via the usual requestBackupTime()
method.

<p>Callers must hold the android.permission.BACKUP permission to use this method."
	  end

	  operation 10446348 "fullBackup"
	    public explicit_return_type "void"
	    nparams 6
	      param inout name "fd" explicit_type "android.os.ParcelFileDescriptor"
	      param inout name "includeApks" explicit_type "boolean"
	      param inout name "includeShared" explicit_type "boolean"
	      param inout name "allApps" explicit_type "boolean"
	      param inout name "allIncludesSystem" explicit_type "boolean"
	      param inout name "packageNames" explicit_type "java.lang.String"
	    nexceptions 1
	      explicit_exception "android.os.RemoteException"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5}[] ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Write a full backup of the given package to the supplied file descriptor.
The fd may be a socket or other non-seekable destination.  If no package names
are supplied, then every application on the device will be backed up to the output.

<p>This method is <i>synchronous</i> -- it does not return until the backup has
completed.

<p>Callers must hold the android.permission.BACKUP permission to use this method.

@param fd The file descriptor to which a 'tar' file stream is to be written
@param includeApks If <code>true</code>, the resulting tar stream will include the
    application .apk files themselves as well as their data.
@param includeShared If <code>true</code>, the resulting tar stream will include
    the contents of the device's shared storage (SD card or equivalent).
@param allApps If <code>true</code>, the resulting tar stream will include all
    installed applications' data, not just those named in the <code>packageNames</code>
    parameter.
@param allIncludesSystem If {@code true}, then {@code allApps} will be interpreted
    as including packages pre-installed as part of the system. If {@code false},
    then setting {@code allApps} to {@code true} will mean only that all 3rd-party
    applications will be included in the dataset.
@param packageNames The package names of the apps whose data (and optionally .apk files)
    are to be backed up.  The <code>allApps</code> parameter supersedes this."
	  end

	  operation 10446476 "fullRestore"
	    public explicit_return_type "void"
	    nparams 1
	      param inout name "fd" explicit_type "android.os.ParcelFileDescriptor"
	    nexceptions 1
	      explicit_exception "android.os.RemoteException"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Restore device content from the data stream passed through the given socket.  The
data stream must be in the format emitted by fullBackup().

<p>Callers must hold the android.permission.BACKUP permission to use this method."
	  end

	  operation 10446604 "acknowledgeFullBackupOrRestore"
	    public explicit_return_type "void"
	    nparams 5
	      param in name "token" explicit_type "int"
	      param inout name "allow" explicit_type "boolean"
	      param inout name "curPassword" explicit_type "java.lang.String"
	      param inout name "encryptionPassword" explicit_type "java.lang.String"
	      param inout name "observer" type class_ref 2277260 // IFullBackupRestoreObserver
	    nexceptions 1
	      explicit_exception "android.os.RemoteException"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Confirm that the requested full backup/restore operation can proceed.  The system will
not actually perform the operation described to fullBackup() / fullRestore() unless the
UI calls back into the Backup Manager to confirm, passing the correct token.  At
the same time, the UI supplies a callback Binder for progress notifications during
the operation.

<p>The password passed by the confirming entity must match the saved backup or
full-device encryption password in order to perform a backup.  If a password is
supplied for restore, it must match the password used when creating the full
backup dataset being used for restore.

<p>Callers must hold the android.permission.BACKUP permission to use this method."
	  end

	  operation 10446732 "getCurrentTransport"
	    public explicit_return_type "java.lang.String"
	    nparams 0
	    nexceptions 1
	      explicit_exception "android.os.RemoteException"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Identify the currently selected transport.  Callers must hold the
android.permission.BACKUP permission to use this method."
	  end

	  operation 10446860 "listAllTransports"
	    public explicit_return_type "java.lang.String"
	    nparams 0
	    nexceptions 1
	      explicit_exception "android.os.RemoteException"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Request a list of all available backup transports' names.  Callers must
hold the android.permission.BACKUP permission to use this method."
	  end

	  operation 10446988 "selectBackupTransport"
	    public explicit_return_type "java.lang.String"
	    nparams 1
	      param inout name "transport" explicit_type "java.lang.String"
	    nexceptions 1
	      explicit_exception "android.os.RemoteException"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Specify the current backup transport.  Callers must hold the
android.permission.BACKUP permission to use this method.

@param transport The name of the transport to select.  This should be one
of {@link BackupManager.TRANSPORT_GOOGLE} or {@link BackupManager.TRANSPORT_ADB}.
@return The name of the previously selected transport.  If the given transport
  name is not one of the currently available transports, no change is made to
  the current transport setting and the method returns null."
	  end

	  operation 10447116 "getConfigurationIntent"
	    public explicit_return_type "android.content.Intent"
	    nparams 1
	      param inout name "transport" explicit_type "java.lang.String"
	    nexceptions 1
	      explicit_exception "android.os.RemoteException"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Get the configuration Intent, if any, from the given transport.  Callers must
hold the android.permission.BACKUP permission in order to use this method.

@param transport The name of the transport to query.
@return An Intent to use with Activity#startActivity() to bring up the configuration
  UI supplied by the transport.  If the transport has no configuration UI, it should
  return {@code null} here."
	  end

	  operation 10447244 "getDestinationString"
	    public explicit_return_type "java.lang.String"
	    nparams 1
	      param inout name "transport" explicit_type "java.lang.String"
	    nexceptions 1
	      explicit_exception "android.os.RemoteException"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Get the destination string supplied by the given transport.  Callers must
hold the android.permission.BACKUP permission in order to use this method.

@param transport The name of the transport to query.
@return A string describing the current backup destination.  This string is used
  verbatim by the Settings UI as the summary text of the \"configure...\" item."
	  end

	  operation 10447372 "beginRestoreSession"
	    public return_type class_ref 2277388 // IRestoreSession
	    nparams 2
	      param inout name "packageName" explicit_type "java.lang.String"
	      param inout name "transportID" explicit_type "java.lang.String"
	    nexceptions 1
	      explicit_exception "android.os.RemoteException"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Begin a restore session.  Either or both of packageName and transportID
may be null.  If packageName is non-null, then only the given package will be
considered for restore.  If transportID is null, then the restore will use
the current active transport.
<p>
This method requires the android.permission.BACKUP permission <i>except</i>
when transportID is null and packageName is the name of the caller's own
package.  In that case, the restore session returned is suitable for supporting
the BackupManager.requestRestore() functionality via RestoreSession.restorePackage()
without requiring the app to hold any special permission.

@param packageName The name of the single package for which a restore will
       be requested.  May be null, in which case all packages in the restore
       set can be restored.
@param transportID The name of the transport to use for the restore operation.
       May be null, in which case the current active transport is used.
@return An interface to the restore session, or null on error."
	  end

	  operation 10447500 "opComplete"
	    public explicit_return_type "void"
	    nparams 1
	      param in name "token" explicit_type "int"
	    nexceptions 1
	      explicit_exception "android.os.RemoteException"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Notify the backup manager that a BackupAgent has completed the operation
corresponding to the given token.

@param token The transaction token passed to a BackupAgent's doBackup() or
       doRestore() method.
{@hide}"
	  end
	end

	attribute 8331660 "TRANSACTION_dataChanged"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 0)"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 8331788 "TRANSACTION_clearBackupData"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 1)"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 8331916 "TRANSACTION_agentConnected"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 2)"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 8332044 "TRANSACTION_agentDisconnected"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 3)"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 8332172 "TRANSACTION_restoreAtInstall"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 4)"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 8332300 "TRANSACTION_setBackupEnabled"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 5)"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 8332428 "TRANSACTION_setAutoRestore"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 6)"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 8332556 "TRANSACTION_setBackupProvisioned"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 7)"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 8332684 "TRANSACTION_isBackupEnabled"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 8)"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 8332812 "TRANSACTION_setBackupPassword"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 9)"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 8332940 "TRANSACTION_hasBackupPassword"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 10)"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 8333068 "TRANSACTION_backupNow"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 11)"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 8333196 "TRANSACTION_fullBackup"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 12)"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 8333324 "TRANSACTION_fullRestore"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 13)"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 8333452 "TRANSACTION_acknowledgeFullBackupOrRestore"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 14)"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 8333580 "TRANSACTION_getCurrentTransport"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 15)"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 8333708 "TRANSACTION_listAllTransports"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 16)"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 8333836 "TRANSACTION_selectBackupTransport"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 17)"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 8333964 "TRANSACTION_getConfigurationIntent"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 18)"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 8334092 "TRANSACTION_getDestinationString"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 19)"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 8334220 "TRANSACTION_beginRestoreSession"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 20)"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 8334348 "TRANSACTION_opComplete"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 21)"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      operation 10447628 "dataChanged"
	public explicit_return_type "void"
	nparams 1
	  param inout name "packageName" explicit_type "java.lang.String"
	nexceptions 1
	  explicit_exception "android.os.RemoteException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tell the system service that the caller has made changes to its
data, and therefore needs to undergo an incremental backup pass.

Any application can invoke this method for its own package, but
only callers who hold the android.permission.BACKUP permission
may invoke it for arbitrary packages."
      end

      operation 10447756 "clearBackupData"
	public explicit_return_type "void"
	nparams 1
	  param inout name "packageName" explicit_type "java.lang.String"
	nexceptions 1
	  explicit_exception "android.os.RemoteException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Erase all backed-up data for the given package from the storage
destination.

Any application can invoke this method for its own package, but
only callers who hold the android.permission.BACKUP permission
may invoke it for arbitrary packages."
      end

      operation 10447884 "agentConnected"
	public explicit_return_type "void"
	nparams 2
	  param inout name "packageName" explicit_type "java.lang.String"
	  param inout name "agent" explicit_type "android.os.IBinder"
	nexceptions 1
	  explicit_exception "android.os.RemoteException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies the Backup Manager Service that an agent has become available.  This
method is only invoked by the Activity Manager."
      end

      operation 10448012 "agentDisconnected"
	public explicit_return_type "void"
	nparams 1
	  param inout name "packageName" explicit_type "java.lang.String"
	nexceptions 1
	  explicit_exception "android.os.RemoteException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notify the Backup Manager Service that an agent has unexpectedly gone away.
This method is only invoked by the Activity Manager."
      end

      operation 10448140 "restoreAtInstall"
	public explicit_return_type "void"
	nparams 2
	  param inout name "packageName" explicit_type "java.lang.String"
	  param in name "token" explicit_type "int"
	nexceptions 1
	  explicit_exception "android.os.RemoteException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notify the Backup Manager Service that an application being installed will
need a data-restore pass.  This method is only invoked by the Package Manager."
      end

      operation 10448268 "setBackupEnabled"
	public explicit_return_type "void"
	nparams 1
	  param inout name "isEnabled" explicit_type "boolean"
	nexceptions 1
	  explicit_exception "android.os.RemoteException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enable/disable the backup service entirely.  When disabled, no backup
or restore operations will take place.  Data-changed notifications will
still be observed and collected, however, so that changes made while the
mechanism was disabled will still be backed up properly if it is enabled
at some point in the future.

<p>Callers must hold the android.permission.BACKUP permission to use this method."
      end

      operation 10448396 "setAutoRestore"
	public explicit_return_type "void"
	nparams 1
	  param inout name "doAutoRestore" explicit_type "boolean"
	nexceptions 1
	  explicit_exception "android.os.RemoteException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enable/disable automatic restore of application data at install time.  When
enabled, installation of any package will involve the Backup Manager.  If data
exists for the newly-installed package, either from the device's current [enabled]
backup dataset or from the restore set used in the last wholesale restore operation,
that data will be supplied to the new package's restore agent before the package
is made generally available for launch.

<p>Callers must hold  the android.permission.BACKUP permission to use this method.

@param doAutoRestore When true, enables the automatic app-data restore facility.  When
  false, this facility will be disabled."
      end

      operation 10448524 "setBackupProvisioned"
	public explicit_return_type "void"
	nparams 1
	  param inout name "isProvisioned" explicit_type "boolean"
	nexceptions 1
	  explicit_exception "android.os.RemoteException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicate that any necessary one-time provisioning has occurred.

<p>Callers must hold the android.permission.BACKUP permission to use this method."
      end

      operation 10448652 "isBackupEnabled"
	public explicit_return_type "boolean"
	nparams 0
	nexceptions 1
	  explicit_exception "android.os.RemoteException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Report whether the backup mechanism is currently enabled.

<p>Callers must hold the android.permission.BACKUP permission to use this method."
      end

      operation 10448780 "setBackupPassword"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "currentPw" explicit_type "java.lang.String"
	  param inout name "newPw" explicit_type "java.lang.String"
	nexceptions 1
	  explicit_exception "android.os.RemoteException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the device's backup password.  Returns {@code true} if the password was set
successfully, {@code false} otherwise.  Typically a failure means that an incorrect
current password was supplied.

<p>Callers must hold the android.permission.BACKUP permission to use this method."
      end

      operation 10448908 "hasBackupPassword"
	public explicit_return_type "boolean"
	nparams 0
	nexceptions 1
	  explicit_exception "android.os.RemoteException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reports whether a backup password is currently set.  If not, then a null or empty
\"current password\" argument should be passed to setBackupPassword().

<p>Callers must hold the android.permission.BACKUP permission to use this method."
      end

      operation 10449036 "backupNow"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "android.os.RemoteException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Schedule an immediate backup attempt for all pending updates.  This is
primarily intended for transports to use when they detect a suitable
opportunity for doing a backup pass.  If there are no pending updates to
be sent, no action will be taken.  Even if some updates are pending, the
transport will still be asked to confirm via the usual requestBackupTime()
method.

<p>Callers must hold the android.permission.BACKUP permission to use this method."
      end

      operation 10449164 "fullBackup"
	public explicit_return_type "void"
	nparams 6
	  param inout name "fd" explicit_type "android.os.ParcelFileDescriptor"
	  param inout name "includeApks" explicit_type "boolean"
	  param inout name "includeShared" explicit_type "boolean"
	  param inout name "allApps" explicit_type "boolean"
	  param inout name "allIncludesSystem" explicit_type "boolean"
	  param inout name "packageNames" explicit_type "java.lang.String"
	nexceptions 1
	  explicit_exception "android.os.RemoteException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5}[] ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Write a full backup of the given package to the supplied file descriptor.
The fd may be a socket or other non-seekable destination.  If no package names
are supplied, then every application on the device will be backed up to the output.

<p>This method is <i>synchronous</i> -- it does not return until the backup has
completed.

<p>Callers must hold the android.permission.BACKUP permission to use this method.

@param fd The file descriptor to which a 'tar' file stream is to be written
@param includeApks If <code>true</code>, the resulting tar stream will include the
    application .apk files themselves as well as their data.
@param includeShared If <code>true</code>, the resulting tar stream will include
    the contents of the device's shared storage (SD card or equivalent).
@param allApps If <code>true</code>, the resulting tar stream will include all
    installed applications' data, not just those named in the <code>packageNames</code>
    parameter.
@param allIncludesSystem If {@code true}, then {@code allApps} will be interpreted
    as including packages pre-installed as part of the system. If {@code false},
    then setting {@code allApps} to {@code true} will mean only that all 3rd-party
    applications will be included in the dataset.
@param packageNames The package names of the apps whose data (and optionally .apk files)
    are to be backed up.  The <code>allApps</code> parameter supersedes this."
      end

      operation 10449292 "fullRestore"
	public explicit_return_type "void"
	nparams 1
	  param inout name "fd" explicit_type "android.os.ParcelFileDescriptor"
	nexceptions 1
	  explicit_exception "android.os.RemoteException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Restore device content from the data stream passed through the given socket.  The
data stream must be in the format emitted by fullBackup().

<p>Callers must hold the android.permission.BACKUP permission to use this method."
      end

      operation 10449420 "acknowledgeFullBackupOrRestore"
	public explicit_return_type "void"
	nparams 5
	  param in name "token" explicit_type "int"
	  param inout name "allow" explicit_type "boolean"
	  param inout name "curPassword" explicit_type "java.lang.String"
	  param inout name "encryptionPassword" explicit_type "java.lang.String"
	  param inout name "observer" type class_ref 2277260 // IFullBackupRestoreObserver
	nexceptions 1
	  explicit_exception "android.os.RemoteException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Confirm that the requested full backup/restore operation can proceed.  The system will
not actually perform the operation described to fullBackup() / fullRestore() unless the
UI calls back into the Backup Manager to confirm, passing the correct token.  At
the same time, the UI supplies a callback Binder for progress notifications during
the operation.

<p>The password passed by the confirming entity must match the saved backup or
full-device encryption password in order to perform a backup.  If a password is
supplied for restore, it must match the password used when creating the full
backup dataset being used for restore.

<p>Callers must hold the android.permission.BACKUP permission to use this method."
      end

      operation 10449548 "getCurrentTransport"
	public explicit_return_type "java.lang.String"
	nparams 0
	nexceptions 1
	  explicit_exception "android.os.RemoteException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Identify the currently selected transport.  Callers must hold the
android.permission.BACKUP permission to use this method."
      end

      operation 10449676 "listAllTransports"
	public explicit_return_type "java.lang.String"
	nparams 0
	nexceptions 1
	  explicit_exception "android.os.RemoteException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Request a list of all available backup transports' names.  Callers must
hold the android.permission.BACKUP permission to use this method."
      end

      operation 10449804 "selectBackupTransport"
	public explicit_return_type "java.lang.String"
	nparams 1
	  param inout name "transport" explicit_type "java.lang.String"
	nexceptions 1
	  explicit_exception "android.os.RemoteException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specify the current backup transport.  Callers must hold the
android.permission.BACKUP permission to use this method.

@param transport The name of the transport to select.  This should be one
of {@link BackupManager.TRANSPORT_GOOGLE} or {@link BackupManager.TRANSPORT_ADB}.
@return The name of the previously selected transport.  If the given transport
  name is not one of the currently available transports, no change is made to
  the current transport setting and the method returns null."
      end

      operation 10449932 "getConfigurationIntent"
	public explicit_return_type "android.content.Intent"
	nparams 1
	  param inout name "transport" explicit_type "java.lang.String"
	nexceptions 1
	  explicit_exception "android.os.RemoteException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the configuration Intent, if any, from the given transport.  Callers must
hold the android.permission.BACKUP permission in order to use this method.

@param transport The name of the transport to query.
@return An Intent to use with Activity#startActivity() to bring up the configuration
  UI supplied by the transport.  If the transport has no configuration UI, it should
  return {@code null} here."
      end

      operation 10450060 "getDestinationString"
	public explicit_return_type "java.lang.String"
	nparams 1
	  param inout name "transport" explicit_type "java.lang.String"
	nexceptions 1
	  explicit_exception "android.os.RemoteException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the destination string supplied by the given transport.  Callers must
hold the android.permission.BACKUP permission in order to use this method.

@param transport The name of the transport to query.
@return A string describing the current backup destination.  This string is used
  verbatim by the Settings UI as the summary text of the \"configure...\" item."
      end

      operation 10450188 "beginRestoreSession"
	public return_type class_ref 2277388 // IRestoreSession
	nparams 2
	  param inout name "packageName" explicit_type "java.lang.String"
	  param inout name "transportID" explicit_type "java.lang.String"
	nexceptions 1
	  explicit_exception "android.os.RemoteException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Begin a restore session.  Either or both of packageName and transportID
may be null.  If packageName is non-null, then only the given package will be
considered for restore.  If transportID is null, then the restore will use
the current active transport.
<p>
This method requires the android.permission.BACKUP permission <i>except</i>
when transportID is null and packageName is the name of the caller's own
package.  In that case, the restore session returned is suitable for supporting
the BackupManager.requestRestore() functionality via RestoreSession.restorePackage()
without requiring the app to hold any special permission.

@param packageName The name of the single package for which a restore will
       be requested.  May be null, in which case all packages in the restore
       set can be restored.
@param transportID The name of the transport to use for the restore operation.
       May be null, in which case the current active transport is used.
@return An interface to the restore session, or null on error."
      end

      operation 10450316 "opComplete"
	public explicit_return_type "void"
	nparams 1
	  param in name "token" explicit_type "int"
	nexceptions 1
	  explicit_exception "android.os.RemoteException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notify the backup manager that a BackupAgent has completed the operation
corresponding to the given token.

@param token The transaction token passed to a BackupAgent's doBackup() or
       doRestore() method.
{@hide}"
      end
    end

    class 2277260 "IFullBackupRestoreObserver"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Observer of a full backup or restore process.  The observer is told \"interesting\"
information about an ongoing full backup or restore action.

{@hide}"
      classrelation 4418828 // <generalisation>
	relation 4418700 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 4418828 // <generalisation>
	  b parent class_ref 716940 // IInterface
      end

      class 2277516 "Stub"
	abstract visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 4418956 // <generalisation>
	  relation 4418828 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 4418956 // <generalisation>
	    b parent class_ref 729100 // Binder
	end

	classrelation 4419084 // <realization>
	  relation 4418956 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 4419084 // <realization>
	    b parent class_ref 2277260 // IFullBackupRestoreObserver
	end

	attribute 8334476 "DESCRIPTOR"
	  class_attribute const_attribute private explicit_type "java.lang.String"
	  init_value " \"android.app.backup.IFullBackupRestoreObserver\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 10450444 "Stub"
	  public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Construct the stub at attach it to the interface. "
	end

	operation 10450572 "asInterface"
	  class_operation public return_type class_ref 2277260 // IFullBackupRestoreObserver
	  nparams 1
	    param inout name "obj" explicit_type "android.os.IBinder"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Cast an IBinder object into an android.app.backup.IFullBackupRestoreObserver interface,
generating a proxy if needed."
	end

	operation 10450700 "asBinder"
	  public explicit_return_type "android.os.IBinder"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 10450828 "onTransact"
	  public explicit_return_type "boolean"
	  nparams 4
	    param in name "code" explicit_type "int"
	    param inout name "data" explicit_type "android.os.Parcel"
	    param inout name "reply" explicit_type "android.os.Parcel"
	    param in name "flags" explicit_type "int"
	  nexceptions 1
	    explicit_exception "android.os.RemoteException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	class 2277644 "Proxy"
	  visibility private 
	  cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	  java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  
	  classrelation 4419212 // <realization>
	    relation 4419084 -_-|>
	      a public
		cpp default "${type}"
		java "${type}"
		classrelation_ref 4419212 // <realization>
	      b parent class_ref 2277260 // IFullBackupRestoreObserver
	  end

	  attribute 8334604 "mRemote"
	    private explicit_type "android.os.IBinder"
	    cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	  end

	  operation 10450956 "Proxy"
	    package explicit_return_type ""
	    nparams 1
	      param inout name "remote" explicit_type "android.os.IBinder"
	    cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	    cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 10451084 "asBinder"
	    public explicit_return_type "android.os.IBinder"
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 10451212 "getInterfaceDescriptor"
	    public explicit_return_type "java.lang.String"
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 10451340 "onStartBackup"
	    public explicit_return_type "void"
	    nparams 0
	    nexceptions 1
	      explicit_exception "android.os.RemoteException"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Notification: a full backup operation has begun."
	  end

	  operation 10451468 "onBackupPackage"
	    public explicit_return_type "void"
	    nparams 1
	      param inout name "name" explicit_type "java.lang.String"
	    nexceptions 1
	      explicit_exception "android.os.RemoteException"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Notification: the system has begun backing up the given package.

@param name The name of the application being saved.  This will typically be a
    user-meaningful name such as \"Browser\" rather than a package name such as
    \"com.android.browser\", though this is not guaranteed."
	  end

	  operation 10451596 "onEndBackup"
	    public explicit_return_type "void"
	    nparams 0
	    nexceptions 1
	      explicit_exception "android.os.RemoteException"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Notification: the full backup operation has ended."
	  end

	  operation 10451724 "onStartRestore"
	    public explicit_return_type "void"
	    nparams 0
	    nexceptions 1
	      explicit_exception "android.os.RemoteException"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Notification: a restore-from-full-backup operation has begun."
	  end

	  operation 10451852 "onRestorePackage"
	    public explicit_return_type "void"
	    nparams 1
	      param inout name "name" explicit_type "java.lang.String"
	    nexceptions 1
	      explicit_exception "android.os.RemoteException"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Notification: the system has begun restore of the given package.

@param name The name of the application being saved.  This will typically be a
    user-meaningful name such as \"Browser\" rather than a package name such as
    \"com.android.browser\", though this is not guaranteed."
	  end

	  operation 10451980 "onEndRestore"
	    public explicit_return_type "void"
	    nparams 0
	    nexceptions 1
	      explicit_exception "android.os.RemoteException"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Notification: the restore-from-full-backup operation has ended."
	  end

	  operation 10452108 "onTimeout"
	    public explicit_return_type "void"
	    nparams 0
	    nexceptions 1
	      explicit_exception "android.os.RemoteException"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "The user's window of opportunity for confirming the operation has timed out."
	  end
	end

	attribute 8334732 "TRANSACTION_onStartBackup"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 0)"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 8334860 "TRANSACTION_onBackupPackage"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 1)"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 8334988 "TRANSACTION_onEndBackup"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 2)"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 8335116 "TRANSACTION_onStartRestore"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 3)"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 8335244 "TRANSACTION_onRestorePackage"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 4)"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 8335372 "TRANSACTION_onEndRestore"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 5)"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 8335500 "TRANSACTION_onTimeout"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 6)"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      operation 10452236 "onStartBackup"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "android.os.RemoteException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notification: a full backup operation has begun."
      end

      operation 10452364 "onBackupPackage"
	public explicit_return_type "void"
	nparams 1
	  param inout name "name" explicit_type "java.lang.String"
	nexceptions 1
	  explicit_exception "android.os.RemoteException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notification: the system has begun backing up the given package.

@param name The name of the application being saved.  This will typically be a
    user-meaningful name such as \"Browser\" rather than a package name such as
    \"com.android.browser\", though this is not guaranteed."
      end

      operation 10452492 "onEndBackup"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "android.os.RemoteException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notification: the full backup operation has ended."
      end

      operation 10452620 "onStartRestore"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "android.os.RemoteException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notification: a restore-from-full-backup operation has begun."
      end

      operation 10452748 "onRestorePackage"
	public explicit_return_type "void"
	nparams 1
	  param inout name "name" explicit_type "java.lang.String"
	nexceptions 1
	  explicit_exception "android.os.RemoteException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notification: the system has begun restore of the given package.

@param name The name of the application being saved.  This will typically be a
    user-meaningful name such as \"Browser\" rather than a package name such as
    \"com.android.browser\", though this is not guaranteed."
      end

      operation 10452876 "onEndRestore"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "android.os.RemoteException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notification: the restore-from-full-backup operation has ended."
      end

      operation 10453004 "onTimeout"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "android.os.RemoteException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The user's window of opportunity for confirming the operation has timed out."
      end
    end

    class 2277388 "IRestoreSession"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Binder interface used by clients who wish to manage a restore operation.  Every
method in this interface requires the android.permission.BACKUP permission.

{@hide}"
      classrelation 4419852 // <generalisation>
	relation 4419724 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 4419852 // <generalisation>
	  b parent class_ref 716940 // IInterface
      end

      class 2278156 "Stub"
	abstract visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 4419980 // <generalisation>
	  relation 4419852 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 4419980 // <generalisation>
	    b parent class_ref 729100 // Binder
	end

	classrelation 4420108 // <realization>
	  relation 4419980 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 4420108 // <realization>
	    b parent class_ref 2277388 // IRestoreSession
	end

	attribute 8336396 "DESCRIPTOR"
	  class_attribute const_attribute private explicit_type "java.lang.String"
	  init_value " \"android.app.backup.IRestoreSession\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 10455052 "Stub"
	  public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Construct the stub at attach it to the interface. "
	end

	operation 10455180 "asInterface"
	  class_operation public return_type class_ref 2277388 // IRestoreSession
	  nparams 1
	    param inout name "obj" explicit_type "android.os.IBinder"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Cast an IBinder object into an android.app.backup.IRestoreSession interface,
generating a proxy if needed."
	end

	operation 10455308 "asBinder"
	  public explicit_return_type "android.os.IBinder"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 10455436 "onTransact"
	  public explicit_return_type "boolean"
	  nparams 4
	    param in name "code" explicit_type "int"
	    param inout name "data" explicit_type "android.os.Parcel"
	    param inout name "reply" explicit_type "android.os.Parcel"
	    param in name "flags" explicit_type "int"
	  nexceptions 1
	    explicit_exception "android.os.RemoteException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	class 2278284 "Proxy"
	  visibility private 
	  cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	  java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  
	  classrelation 4420236 // <realization>
	    relation 4420108 -_-|>
	      a public
		cpp default "${type}"
		java "${type}"
		classrelation_ref 4420236 // <realization>
	      b parent class_ref 2277388 // IRestoreSession
	  end

	  attribute 8336524 "mRemote"
	    private explicit_type "android.os.IBinder"
	    cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	  end

	  operation 10455564 "Proxy"
	    package explicit_return_type ""
	    nparams 1
	      param inout name "remote" explicit_type "android.os.IBinder"
	    cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	    cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 10455692 "asBinder"
	    public explicit_return_type "android.os.IBinder"
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 10455820 "getInterfaceDescriptor"
	    public explicit_return_type "java.lang.String"
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 10455948 "getAvailableRestoreSets"
	    public explicit_return_type "int"
	    nparams 1
	      param inout name "observer" type class_ref 2277772 // IRestoreObserver
	    nexceptions 1
	      explicit_exception "android.os.RemoteException"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Ask the current transport what the available restore sets are.

@param observer This binder points to an object whose onRestoreSetsAvailable()
  method will be called to supply the results of the transport's lookup.
@return Zero on success; nonzero on error.  The observer will only receive a
  result callback if this method returned zero."
	  end

	  operation 10456076 "restoreAll"
	    public explicit_return_type "int"
	    nparams 2
	      param in name "token" explicit_type "long"
	      param inout name "observer" type class_ref 2277772 // IRestoreObserver
	    nexceptions 1
	      explicit_exception "android.os.RemoteException"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Restore the given set onto the device, replacing the current data of any app
contained in the restore set with the data previously backed up.

<p>Callers must hold the android.permission.BACKUP permission to use this method.

@return Zero on success; nonzero on error.  The observer will only receive
  progress callbacks if this method returned zero.
@param token The token from {@link getAvailableRestoreSets()} corresponding to
  the restore set that should be used.
@param observer If non-null, this binder points to an object that will receive
  progress callbacks during the restore operation."
	  end

	  operation 10456204 "restoreSome"
	    public explicit_return_type "int"
	    nparams 3
	      param in name "token" explicit_type "long"
	      param inout name "observer" type class_ref 2277772 // IRestoreObserver
	      param inout name "packages" explicit_type "java.lang.String"
	    nexceptions 1
	      explicit_exception "android.os.RemoteException"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Restore select packages from the given set onto the device, replacing the
current data of any app contained in the set with the data previously
backed up.

<p>Callers must hold the android.permission.BACKUP permission to use this method.

@return Zero on success, nonzero on error. The observer will only receive
  progress callbacks if this method returned zero.
@param token The token from {@link getAvailableRestoreSets()} corresponding to
  the restore set that should be used.
@param observer If non-null, this binder points to an object that will receive
  progress callbacks during the restore operation.
@param packages The set of packages for which to attempt a restore.  Regardless of
  the contents of the actual back-end dataset named by {@code token}, only
  applications mentioned in this list will have their data restored."
	  end

	  operation 10456332 "restorePackage"
	    public explicit_return_type "int"
	    nparams 2
	      param inout name "packageName" explicit_type "java.lang.String"
	      param inout name "observer" type class_ref 2277772 // IRestoreObserver
	    nexceptions 1
	      explicit_exception "android.os.RemoteException"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Restore a single application from backup.  The data will be restored from the
current backup dataset if the given package has stored data there, or from
the dataset used during the last full device setup operation if the current
backup dataset has no matching data.  If no backup data exists for this package
in either source, a nonzero value will be returned.

@return Zero on success; nonzero on error.  The observer will only receive
  progress callbacks if this method returned zero.
@param packageName The name of the package whose data to restore.  If this is
  not the name of the caller's own package, then the android.permission.BACKUP
  permission must be held.
@param observer If non-null, this binder points to an object that will receive
  progress callbacks during the restore operation."
	  end

	  operation 10456460 "endRestoreSession"
	    public explicit_return_type "void"
	    nparams 0
	    nexceptions 1
	      explicit_exception "android.os.RemoteException"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "End this restore session.  After this method is called, the IRestoreSession binder
is no longer valid.

<p><b>Note:</b> The caller <i>must</i> invoke this method to end the restore session,
  even if {@link getAvailableRestoreSets} or {@link performRestore} failed."
	  end
	end

	attribute 8336652 "TRANSACTION_getAvailableRestoreSets"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 0)"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 8336780 "TRANSACTION_restoreAll"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 1)"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 8336908 "TRANSACTION_restoreSome"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 2)"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 8337036 "TRANSACTION_restorePackage"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 3)"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 8337164 "TRANSACTION_endRestoreSession"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 4)"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      operation 10456588 "getAvailableRestoreSets"
	public explicit_return_type "int"
	nparams 1
	  param inout name "observer" type class_ref 2277772 // IRestoreObserver
	nexceptions 1
	  explicit_exception "android.os.RemoteException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Ask the current transport what the available restore sets are.

@param observer This binder points to an object whose onRestoreSetsAvailable()
  method will be called to supply the results of the transport's lookup.
@return Zero on success; nonzero on error.  The observer will only receive a
  result callback if this method returned zero."
      end

      operation 10456716 "restoreAll"
	public explicit_return_type "int"
	nparams 2
	  param in name "token" explicit_type "long"
	  param inout name "observer" type class_ref 2277772 // IRestoreObserver
	nexceptions 1
	  explicit_exception "android.os.RemoteException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Restore the given set onto the device, replacing the current data of any app
contained in the restore set with the data previously backed up.

<p>Callers must hold the android.permission.BACKUP permission to use this method.

@return Zero on success; nonzero on error.  The observer will only receive
  progress callbacks if this method returned zero.
@param token The token from {@link getAvailableRestoreSets()} corresponding to
  the restore set that should be used.
@param observer If non-null, this binder points to an object that will receive
  progress callbacks during the restore operation."
      end

      operation 10456844 "restoreSome"
	public explicit_return_type "int"
	nparams 3
	  param in name "token" explicit_type "long"
	  param inout name "observer" type class_ref 2277772 // IRestoreObserver
	  param inout name "packages" explicit_type "java.lang.String"
	nexceptions 1
	  explicit_exception "android.os.RemoteException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Restore select packages from the given set onto the device, replacing the
current data of any app contained in the set with the data previously
backed up.

<p>Callers must hold the android.permission.BACKUP permission to use this method.

@return Zero on success, nonzero on error. The observer will only receive
  progress callbacks if this method returned zero.
@param token The token from {@link getAvailableRestoreSets()} corresponding to
  the restore set that should be used.
@param observer If non-null, this binder points to an object that will receive
  progress callbacks during the restore operation.
@param packages The set of packages for which to attempt a restore.  Regardless of
  the contents of the actual back-end dataset named by {@code token}, only
  applications mentioned in this list will have their data restored."
      end

      operation 10456972 "restorePackage"
	public explicit_return_type "int"
	nparams 2
	  param inout name "packageName" explicit_type "java.lang.String"
	  param inout name "observer" type class_ref 2277772 // IRestoreObserver
	nexceptions 1
	  explicit_exception "android.os.RemoteException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Restore a single application from backup.  The data will be restored from the
current backup dataset if the given package has stored data there, or from
the dataset used during the last full device setup operation if the current
backup dataset has no matching data.  If no backup data exists for this package
in either source, a nonzero value will be returned.

@return Zero on success; nonzero on error.  The observer will only receive
  progress callbacks if this method returned zero.
@param packageName The name of the package whose data to restore.  If this is
  not the name of the caller's own package, then the android.permission.BACKUP
  permission must be held.
@param observer If non-null, this binder points to an object that will receive
  progress callbacks during the restore operation."
      end

      operation 10457100 "endRestoreSession"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "android.os.RemoteException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "End this restore session.  After this method is called, the IRestoreSession binder
is no longer valid.

<p><b>Note:</b> The caller <i>must</i> invoke this method to end the restore session,
  even if {@link getAvailableRestoreSets} or {@link performRestore} failed."
      end
    end

    class 2277772 "IRestoreObserver"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Callback class for receiving progress reports during a restore operation.

@hide"
      classrelation 4419340 // <generalisation>
	relation 4419212 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 4419340 // <generalisation>
	  b parent class_ref 716940 // IInterface
      end

      class 2277900 "Stub"
	abstract visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 4419468 // <generalisation>
	  relation 4419340 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 4419468 // <generalisation>
	    b parent class_ref 729100 // Binder
	end

	classrelation 4419596 // <realization>
	  relation 4419468 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 4419596 // <realization>
	    b parent class_ref 2277772 // IRestoreObserver
	end

	attribute 8335628 "DESCRIPTOR"
	  class_attribute const_attribute private explicit_type "java.lang.String"
	  init_value " \"android.app.backup.IRestoreObserver\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 10453132 "Stub"
	  public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Construct the stub at attach it to the interface. "
	end

	operation 10453260 "asInterface"
	  class_operation public return_type class_ref 2277772 // IRestoreObserver
	  nparams 1
	    param inout name "obj" explicit_type "android.os.IBinder"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Cast an IBinder object into an android.app.backup.IRestoreObserver interface,
generating a proxy if needed."
	end

	operation 10453388 "asBinder"
	  public explicit_return_type "android.os.IBinder"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 10453516 "onTransact"
	  public explicit_return_type "boolean"
	  nparams 4
	    param in name "code" explicit_type "int"
	    param inout name "data" explicit_type "android.os.Parcel"
	    param inout name "reply" explicit_type "android.os.Parcel"
	    param in name "flags" explicit_type "int"
	  nexceptions 1
	    explicit_exception "android.os.RemoteException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	class 2278028 "Proxy"
	  visibility private 
	  cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	  java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  
	  classrelation 4419724 // <realization>
	    relation 4419596 -_-|>
	      a public
		cpp default "${type}"
		java "${type}"
		classrelation_ref 4419724 // <realization>
	      b parent class_ref 2277772 // IRestoreObserver
	  end

	  attribute 8335756 "mRemote"
	    private explicit_type "android.os.IBinder"
	    cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	  end

	  operation 10453644 "Proxy"
	    package explicit_return_type ""
	    nparams 1
	      param inout name "remote" explicit_type "android.os.IBinder"
	    cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	    cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 10453772 "asBinder"
	    public explicit_return_type "android.os.IBinder"
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 10453900 "getInterfaceDescriptor"
	    public explicit_return_type "java.lang.String"
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 10454028 "restoreSetsAvailable"
	    public explicit_return_type "void"
	    nparams 1
	      param inout name "result" explicit_type "android.app.backup.RestoreSet"
	    nexceptions 1
	      explicit_exception "android.os.RemoteException"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Supply a list of the restore datasets available from the current transport.  This
method is invoked as a callback following the application's use of the
{@link android.app.backup.IRestoreSession.getAvailableRestoreSets} method.

@param result An array of {@link android.app.backup.RestoreSet RestoreSet} objects
  describing all of the available datasets that are candidates for restoring to
  the current device.  If no applicable datasets exist, {@code result} will be
  {@code null}."
	  end

	  operation 10454156 "restoreStarting"
	    public explicit_return_type "void"
	    nparams 1
	      param in name "numPackages" explicit_type "int"
	    nexceptions 1
	      explicit_exception "android.os.RemoteException"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "The restore operation has begun.

@param numPackages The total number of packages being processed in
  this restore operation."
	  end

	  operation 10454284 "onUpdate"
	    public explicit_return_type "void"
	    nparams 2
	      param in name "nowBeingRestored" explicit_type "int"
	      param inout name "curentPackage" explicit_type "java.lang.String"
	    nexceptions 1
	      explicit_exception "android.os.RemoteException"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "An indication of which package is being restored currently, out of the
total number provided in the {@link #restoreStarting(int numPackages)} callback.
This method is not guaranteed to be called.

@param nowBeingRestored The index, between 1 and the numPackages parameter
  to the restoreStarting() callback, of the package now being restored.
@param currentPackage The name of the package now being restored."
	  end

	  operation 10454412 "restoreFinished"
	    public explicit_return_type "void"
	    nparams 1
	      param in name "error" explicit_type "int"
	    nexceptions 1
	      explicit_exception "android.os.RemoteException"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "The restore operation has completed.

@param error Zero on success; a nonzero error code if the restore operation
  as a whole failed."
	  end
	end

	attribute 8335884 "TRANSACTION_restoreSetsAvailable"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 0)"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 8336012 "TRANSACTION_restoreStarting"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 1)"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 8336140 "TRANSACTION_onUpdate"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 2)"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 8336268 "TRANSACTION_restoreFinished"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 3)"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      operation 10454540 "restoreSetsAvailable"
	public explicit_return_type "void"
	nparams 1
	  param inout name "result" explicit_type "android.app.backup.RestoreSet"
	nexceptions 1
	  explicit_exception "android.os.RemoteException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Supply a list of the restore datasets available from the current transport.  This
method is invoked as a callback following the application's use of the
{@link android.app.backup.IRestoreSession.getAvailableRestoreSets} method.

@param result An array of {@link android.app.backup.RestoreSet RestoreSet} objects
  describing all of the available datasets that are candidates for restoring to
  the current device.  If no applicable datasets exist, {@code result} will be
  {@code null}."
      end

      operation 10454668 "restoreStarting"
	public explicit_return_type "void"
	nparams 1
	  param in name "numPackages" explicit_type "int"
	nexceptions 1
	  explicit_exception "android.os.RemoteException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The restore operation has begun.

@param numPackages The total number of packages being processed in
  this restore operation."
      end

      operation 10454796 "onUpdate"
	public explicit_return_type "void"
	nparams 2
	  param in name "nowBeingRestored" explicit_type "int"
	  param inout name "curentPackage" explicit_type "java.lang.String"
	nexceptions 1
	  explicit_exception "android.os.RemoteException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "An indication of which package is being restored currently, out of the
total number provided in the {@link #restoreStarting(int numPackages)} callback.
This method is not guaranteed to be called.

@param nowBeingRestored The index, between 1 and the numPackages parameter
  to the restoreStarting() callback, of the package now being restored.
@param currentPackage The name of the package now being restored."
      end

      operation 10454924 "restoreFinished"
	public explicit_return_type "void"
	nparams 1
	  param in name "error" explicit_type "int"
	nexceptions 1
	  explicit_exception "android.os.RemoteException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The restore operation has completed.

@param error Zero on success; a nonzero error code if the restore operation
  as a whole failed."
      end
    end
  end

  deploymentview 169100 "backup"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 344972 "FileBackupHelperBase"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.content.Context;
import android.os.ParcelFileDescriptor;
import android.util.Log;
import java.io.File;
import java.io.FileDescriptor;
${definition}"
      associated_classes
	class_ref 775564 // FileBackupHelperBase
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 345100 "BackupHelper"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.ParcelFileDescriptor;
${definition}"
      associated_classes
	class_ref 775948 // BackupHelper
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 345228 "AbsoluteFileBackupHelper"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.content.Context;
import android.os.ParcelFileDescriptor;
import android.util.Log;
import java.io.File;
${definition}"
      associated_classes
	class_ref 775436 // AbsoluteFileBackupHelper
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 345356 "BackupAgent"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.app.IBackupAgent;
import android.app.backup.IBackupManager;
import android.content.Context;
import android.content.ContextWrapper;
import android.content.pm.ApplicationInfo;
import android.os.Binder;
import android.os.IBinder;
import android.os.ParcelFileDescriptor;
import android.os.RemoteException;
import android.util.Log;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.HashSet;
import java.util.LinkedList;
import libcore.io.ErrnoException;
import libcore.io.Libcore;
import libcore.io.OsConstants;
import libcore.io.StructStat;
${definition}"
      associated_classes
	class_ref 732556 // BackupAgent
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 345484 "BackupAgentHelper"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.ParcelFileDescriptor;
import java.io.IOException;
${definition}"
      associated_classes
	class_ref 776588 // BackupAgentHelper
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 345612 "BackupDataInput"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.FileDescriptor;
import java.io.IOException;
${definition}"
      associated_classes
	class_ref 776076 // BackupDataInput
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 345740 "BackupDataInputStream"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.InputStream;
import java.io.IOException;
${definition}"
      associated_classes
	class_ref 775820 // BackupDataInputStream
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 345868 "BackupDataOutput"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.ParcelFileDescriptor;
import java.io.FileDescriptor;
import java.io.IOException;
${definition}"
      associated_classes
	class_ref 775692 // BackupDataOutput
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 345996 "BackupHelperDispatcher"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.ParcelFileDescriptor;
import android.util.Log;
import java.io.FileDescriptor;
import java.io.IOException;
import java.util.Map;
import java.util.TreeMap;
${definition}"
      associated_classes
	class_ref 776716 // BackupHelperDispatcher
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 346124 "BackupManager"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.app.backup.RestoreSession;
import android.app.backup.IBackupManager;
import android.app.backup.IRestoreSession;
import android.content.Context;
import android.os.RemoteException;
import android.os.ServiceManager;
import android.util.Log;
${definition}"
      associated_classes
	class_ref 777228 // BackupManager
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 346252 "FileBackupHelper"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.content.Context;
import android.os.ParcelFileDescriptor;
import android.util.Log;
import java.io.File;
${definition}"
      associated_classes
	class_ref 777612 // FileBackupHelper
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 346380 "FullBackup"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.content.Context;
import android.content.pm.ApplicationInfo;
import android.content.pm.PackageManager;
import android.os.ParcelFileDescriptor;
import android.util.Log;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import libcore.io.ErrnoException;
import libcore.io.Libcore;
${definition}"
      associated_classes
	class_ref 777740 // FullBackup
      end
      comment "Copyright (C) 2011 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 346508 "FullBackupAgent"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.ParcelFileDescriptor;
import java.io.IOException;
${definition}"
      associated_classes
	class_ref 777868 // FullBackupAgent
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 346636 "FullBackupDataOutput"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.ParcelFileDescriptor;
${definition}"
      associated_classes
	class_ref 776204 // FullBackupDataOutput
      end
    end

    artifact 346764 "RestoreObserver"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.lang.String;
import android.app.backup.RestoreSet;
${definition}"
      associated_classes
	class_ref 777356 // RestoreObserver
      end
      comment "Copyright (C) 2010 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 346892 "RestoreSession"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.app.backup.RestoreObserver;
import android.app.backup.RestoreSet;
import android.app.backup.IRestoreObserver;
import android.app.backup.IRestoreSession;
import android.content.Context;
import android.os.Handler;
import android.os.Message;
import android.os.RemoteException;
import android.util.Log;
${definition}"
      associated_classes
	class_ref 777484 // RestoreSession
      end
      comment "Copyright (C) 2010 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 347020 "RestoreSet"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.Parcel;
import android.os.Parcelable;
${definition}"
      associated_classes
	class_ref 679564 // RestoreSet
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 347148 "SharedPreferencesBackupHelper"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.app.QueuedWork;
import android.content.Context;
import android.content.SharedPreferences;
import android.os.ParcelFileDescriptor;
import android.util.Log;
import java.io.File;
${definition}"
      associated_classes
	class_ref 778124 // SharedPreferencesBackupHelper
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 347276 "WallpaperBackupHelper"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.app.WallpaperManager;
import android.content.Context;
import android.graphics.BitmapFactory;
import android.graphics.Point;
import android.os.Environment;
import android.os.ParcelFileDescriptor;
import android.os.UserHandle;
import android.util.Slog;
import android.view.Display;
import android.view.WindowManager;
import java.io.File;
${definition}"
      associated_classes
	class_ref 778252 // WallpaperBackupHelper
      end
      comment "Copyright (C) 2010 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 959628 "IBackupManager"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2270988 // IBackupManager
      end
      comment "This file is auto-generated.  DO NOT MODIFY.
Original file: frameworks/base/core/java/android/app/backup/IBackupManager.aidl"
    end

    artifact 959756 "IFullBackupRestoreObserver"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2277260 // IFullBackupRestoreObserver
      end
      comment "This file is auto-generated.  DO NOT MODIFY.
Original file: frameworks/base/core/java/android/app/backup/IFullBackupRestoreObserver.aidl"
    end

    artifact 959884 "IRestoreObserver"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2277772 // IRestoreObserver
      end
      comment "This file is auto-generated.  DO NOT MODIFY.
Original file: frameworks/base/core/java/android/app/backup/IRestoreObserver.aidl"
    end

    artifact 960012 "IRestoreSession"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2277388 // IRestoreSession
      end
      comment "This file is auto-generated.  DO NOT MODIFY.
Original file: frameworks/base/core/java/android/app/backup/IRestoreSession.aidl"
    end
  end
end
