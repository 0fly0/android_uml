format 74
"fm_detect" // vendor::marvell::generic::frameworks::factory::factory_mode::fm_detect
  revision 1
  modified_by 12 "shchen"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  cpp_h_dir "/home/shchen/work/jellybean/vendor/marvell/generic/frameworks/factory/factory_mode/fm_detect/"
  cpp_src_dir "/home/shchen/work/jellybean/vendor/marvell/generic/frameworks/factory/factory_mode/fm_detect/"
  deploymentview 271372 "fm_detect"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 1117068 "main"
      stereotype "source"
      cpp_src "int main(int argc, char** argv)
{
    ALOGI(\"main enter\\n\");

    bool bFmDetectEnabled = false;

#ifdef FM_DETECT_ENABLE_FIRST_BOOT
    if (false == bFmDetectEnabled) {
        bool bFirstBoot = isFirstBoot();
        if (true == bFirstBoot) {
            ALOGI(\"main first boot, go into factory mode\\n\");
            setFtsFirstBootWithNonFirstBoot();
            bFmDetectEnabled = true;

            const char *pService_fm_detect_enable_property_name = \"ro.service.fm_detect.enable\";
            ALOGI(\"setprop %s with 1\\n\", pService_fm_detect_enable_property_name);
            while (property_set(pService_fm_detect_enable_property_name, \"1\") < 0) {
                ALOGI(\"Failed to set %s wit 1\\n\", pService_fm_detect_enable_property_name);
                usleep(20 * 1000);
            }
        }
    }
#endif

    if (false == bFmDetectEnabled) {
        const char *pPersist_fm_property_name = \"persist.radio.fm.enabled\";
        const char *pService_fm_detect_enable_property_name = \"ro.service.fm_detect.enable\";
        // Check the property \"persist.radio.fm.enabled\"
        char fm_property[PROPERTY_VALUE_MAX] = {0};
        property_get(pPersist_fm_property_name, fm_property, \"0\");
        if (!strcmp(fm_property, \"0\")) {
            ALOGI(\"%s value is 0\\n\", pPersist_fm_property_name);
            ALOGI(\"setprop %s with 0\\n\", pService_fm_detect_enable_property_name);
            while (property_set(pService_fm_detect_enable_property_name, \"0\") < 0) {
                ALOGI(\"Failed to set %s with 0\\n\", pService_fm_detect_enable_property_name);
                usleep(20 * 1000);
            }
        } else {
            ALOGI(\"%s value is 1\\n\", pPersist_fm_property_name);
            ALOGI(\"setprop %s with 1\\n\", pService_fm_detect_enable_property_name);
            while (property_set(pService_fm_detect_enable_property_name, \"1\") < 0) {
                ALOGI(\"Failed to set %s wit 1\\n\", pService_fm_detect_enable_property_name);
                usleep(20 * 1000);
            }
            ALOGI(\"setprop %s with 0\\n\", pPersist_fm_property_name);
            while (property_set(pPersist_fm_property_name, \"0\") < 0) {
                ALOGI(\"Failed to set %s wit 0\\n\", pPersist_fm_property_name);
                usleep(20 * 1000);
            }

            bFmDetectEnabled = true;
        }
    }

    ALOGI(\"main leave\");
}
"
      associated_classes
      end
    end
  end
end
