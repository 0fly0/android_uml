class CancellationSignal
!!!3300236.java!!!	isCanceled() : boolean
        synchronized (this) {
            return mIsCanceled;
        }
!!!3300364.java!!!	throwIfCanceled() : void
        if (isCanceled()) {
            throw new OperationCanceledException();
        }
!!!3300492.java!!!	cancel() : void
        final OnCancelListener listener;
        final ICancellationSignal remote;
        synchronized (this) {
            if (mIsCanceled) {
                return;
            }
            mIsCanceled = true;
            mCancelInProgress = true;
            listener = mOnCancelListener;
            remote = mRemote;
        }

        try {
            if (listener != null) {
                listener.onCancel();
            }
            if (remote != null) {
                try {
                    remote.cancel();
                } catch (RemoteException ex) {
                }
            }
        } finally {
            synchronized (this) {
                mCancelInProgress = false;
                notifyAll();
            }
        }
!!!3300620.java!!!	setOnCancelListener(inout listener : OnCancelListener) : void
        synchronized (this) {
            waitForCancelFinishedLocked();

            if (mOnCancelListener == listener) {
                return;
            }
            mOnCancelListener = listener;
            if (!mIsCanceled || listener == null) {
                return;
            }
        }
        listener.onCancel();
!!!3300748.java!!!	setRemote(inout remote : ICancellationSignal) : void
        synchronized (this) {
            waitForCancelFinishedLocked();

            if (mRemote == remote) {
                return;
            }
            mRemote = remote;
            if (!mIsCanceled || remote == null) {
                return;
            }
        }
        try {
            remote.cancel();
        } catch (RemoteException ex) {
        }
!!!3300876.java!!!	waitForCancelFinishedLocked() : void
        while (mCancelInProgress) {
            try {
                wait();
            } catch (InterruptedException ex) {
            }
        }
!!!3301004.java!!!	createTransport() : ICancellationSignal
        return new Transport();
!!!3301132.java!!!	fromTransport(inout transport : ICancellationSignal) : CancellationSignal
        if (transport instanceof Transport) {
            return ((Transport)transport).mCancellationSignal;
        }
        return null;
