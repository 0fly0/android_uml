class DESKeySpec
!!!1806491.java!!!	DESKeySpec(inout key : byte)
        this(key, 0);
!!!1806619.java!!!	DESKeySpec(inout key : byte, in offset : int)
        if (key == null) {
            throw new NullPointerException("key == null");
        }
        if (key.length - offset < DES_KEY_LEN) {
            throw new InvalidKeyException("key too short");
        }
        this.key = new byte[DES_KEY_LEN];
        System.arraycopy(key, offset, this.key, 0, DES_KEY_LEN);
!!!1806747.java!!!	getKey() : byte
        byte[] result = new byte[DES_KEY_LEN];
        System.arraycopy(this.key, 0, result, 0, DES_KEY_LEN);
        return result;
!!!1806875.java!!!	isParityAdjusted(inout key : byte, in offset : int) : boolean
        if (key == null) {
            throw new InvalidKeyException("key == null");
        }
        if (key.length - offset < DES_KEY_LEN) {
            throw new InvalidKeyException("key too short");
        }

        int byteKey = 0;

        for (int i = offset; i < DES_KEY_LEN; i++) {
            byteKey = key[i];

            byteKey ^= byteKey >> 1;
            byteKey ^= byteKey >> 2;
            byteKey ^= byteKey >> 4;

            if ((byteKey & 1) == 0) {
                return false;
            }
        }
        return true;
!!!1807003.java!!!	isWeak(inout key : byte, in offset : int) : boolean
        if (key == null) {
            throw new InvalidKeyException("key == null");
        }
        if (key.length - offset < DES_KEY_LEN) {
            throw new InvalidKeyException("key too short");
        }
        I:
        for (int i=0; i<SEMIWEAKS.length; i++) {
            for (int j=0; j<DES_KEY_LEN; j++) {
                if (SEMIWEAKS[i][j] != key[offset+j]) {
                    continue I;
                }
            }
            return true;
        }
        return false;
