class Assert
!!!15336972.java!!!	assertTrue(inout message : String, inout condition : boolean) : void
        if (!condition)
            fail(message);
!!!15337100.java!!!	assertTrue(inout condition : boolean) : void
        assertTrue(null, condition);
!!!15337228.java!!!	assertFalse(inout message : String, inout condition : boolean) : void
        assertTrue(message, !condition);
!!!15337356.java!!!	assertFalse(inout condition : boolean) : void
        assertFalse(null, condition);
!!!15337484.java!!!	fail(inout message : String) : void
        throw new AssertionFailedError(message);
!!!15337612.java!!!	fail() : void
        fail(null);
!!!15337740.java!!!	assertEquals(inout message : String, inout expected : Object, inout actual : Object) : void
        if (expected == null && actual == null)
            return;
        if (expected != null && expected.equals(actual))
            return;
        failNotEquals(message, expected, actual);
!!!15337868.java!!!	assertEquals(inout expected : Object, inout actual : Object) : void
        assertEquals(null, expected, actual);
!!!15337996.java!!!	assertEquals(inout message : String, inout expected : String, inout actual : String) : void
        if (expected == null && actual == null)
            return;
        if (expected != null && expected.equals(actual))
            return;
        throw new ComparisonFailure(message, expected, actual);
!!!15338124.java!!!	assertEquals(inout expected : String, inout actual : String) : void
        assertEquals(null, expected, actual);
!!!15338252.java!!!	assertEquals(inout message : String, in expected : double, in actual : double, in delta : double) : void
        // handle infinity specially since subtracting to infinite values gives NaN and the
        // the following test fails
        if (Double.isInfinite(expected)) {
            if (!(expected == actual))
                failNotEquals(message, new Double(expected), new Double(actual));
        } else if (!(Math.abs(expected-actual) <= delta)) // Because comparison with NaN always returns false
            failNotEquals(message, new Double(expected), new Double(actual));
!!!15338380.java!!!	assertEquals(in expected : double, in actual : double, in delta : double) : void
        assertEquals(null, expected, actual, delta);
!!!15338508.java!!!	assertEquals(inout message : String, in expected : float, in actual : float, in delta : float) : void
         // handle infinity specially since subtracting to infinite values gives NaN and the
        // the following test fails
        if (Float.isInfinite(expected)) {
            if (!(expected == actual))
                failNotEquals(message, new Float(expected), new Float(actual));
        } else if (!(Math.abs(expected-actual) <= delta))
              failNotEquals(message, new Float(expected), new Float(actual));
!!!15338636.java!!!	assertEquals(in expected : float, in actual : float, in delta : float) : void
        assertEquals(null, expected, actual, delta);
!!!15338764.java!!!	assertEquals(inout message : String, in expected : long, in actual : long) : void
        assertEquals(message, new Long(expected), new Long(actual));
!!!15338892.java!!!	assertEquals(in expected : long, in actual : long) : void
        assertEquals(null, expected, actual);
!!!15339020.java!!!	assertEquals(inout message : String, inout expected : boolean, inout actual : boolean) : void
            assertEquals(message, new Boolean(expected), new Boolean(actual));
!!!15339148.java!!!	assertEquals(inout expected : boolean, inout actual : boolean) : void
        assertEquals(null, expected, actual);
!!!15339276.java!!!	assertEquals(inout message : String, in expected : byte, in actual : byte) : void
        assertEquals(message, new Byte(expected), new Byte(actual));
!!!15339404.java!!!	assertEquals(in expected : byte, in actual : byte) : void
        assertEquals(null, expected, actual);
!!!15339532.java!!!	assertEquals(inout message : String, in expected : char, in actual : char) : void
            assertEquals(message, new Character(expected), new Character(actual));
!!!15339660.java!!!	assertEquals(in expected : char, in actual : char) : void
        assertEquals(null, expected, actual);
!!!15339788.java!!!	assertEquals(inout message : String, in expected : short, in actual : short) : void
            assertEquals(message, new Short(expected), new Short(actual));
!!!15339916.java!!!	assertEquals(in expected : short, in actual : short) : void
        assertEquals(null, expected, actual);
!!!15340044.java!!!	assertEquals(inout message : String, in expected : int, in actual : int) : void
        assertEquals(message, new Integer(expected), new Integer(actual));
!!!15340172.java!!!	assertEquals(in expected : int, in actual : int) : void
          assertEquals(null, expected, actual);
!!!15340300.java!!!	assertNotNull(inout object : Object) : void
        assertNotNull(null, object);
!!!15340428.java!!!	assertNotNull(inout message : String, inout object : Object) : void
        assertTrue(message, object != null);
!!!15340556.java!!!	assertNull(inout object : Object) : void
        assertNull(null, object);
!!!15340684.java!!!	assertNull(inout message : String, inout object : Object) : void
        assertTrue(message, object == null);
!!!15340812.java!!!	assertSame(inout message : String, inout expected : Object, inout actual : Object) : void
        if (expected == actual)
            return;
        failNotSame(message, expected, actual);
!!!15340940.java!!!	assertSame(inout expected : Object, inout actual : Object) : void
        assertSame(null, expected, actual);
!!!15341068.java!!!	assertNotSame(inout message : String, inout expected : Object, inout actual : Object) : void
        if (expected == actual)
            failSame(message);
!!!15341196.java!!!	assertNotSame(inout expected : Object, inout actual : Object) : void
        assertNotSame(null, expected, actual);
!!!15341324.java!!!	failSame(inout message : String) : void
        String formatted= "";
         if (message != null)
             formatted= message+" ";
         fail(formatted+"expected not same");
!!!15341452.java!!!	failNotSame(inout message : String, inout expected : Object, inout actual : Object) : void
        String formatted= "";
        if (message != null)
            formatted= message+" ";
        fail(formatted+"expected same:<"+expected+"> was not:<"+actual+">");
!!!15341580.java!!!	failNotEquals(inout message : String, inout expected : Object, inout actual : Object) : void
        fail(format(message, expected, actual));
!!!15341708.java!!!	format(inout message : String, inout expected : Object, inout actual : Object) : String
        String formatted= "";
        if (message != null)
            formatted= message+" ";
        return formatted+"expected:<"+expected+"> but was:<"+actual+">";
