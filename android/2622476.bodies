class MrvlCameraHardwareFactory
!!!11048972.cpp!!!	createCameraInstance(in cameraId : int, inout dev : camera_device_t) : MrvlCameraHardware

    LOGI("enter %s", __FUNCTION__);
#if ENABLE_QIC

    if (checkQICCamera()) {
        return new QicCameraHardware(cameraId, dev);
    }

#endif

    // default use SecCameraHWInterface
    return new CameraHardwareSec(cameraId, dev);
!!!11049100.cpp!!!	checkQICCamera() : bool
    LOGI("enter %s", __FUNCTION__);
    FILE *fp ;
    char buffer[100], tmp[100];
    size_t bytes_read;
    char *match ;

    fp = fopen("/proc/qicuvc", "r") ;

    if (fp != NULL) {
        bytes_read = fread(buffer, 1, sizeof(buffer), fp) ;
        fclose(fp);

        if (bytes_read == 0 || bytes_read == sizeof(buffer)) {
            LOGD("read file fail");
            return false;
        }

        buffer[bytes_read] = '\0' ;
        match = strstr(buffer, "YUV:") ;

        if (match == NULL) {
            LOGD("can not found YUV \r\n");
            return false;
        }

        match = strstr(buffer, "AVC:") ;

        if (match == NULL) {
            LOGD("can not found AVC \r\n");
            return false;
        }

        return true;
    } else {
        LOGD("open /proc/qicuvc error!!\n");
    }

    return false;
