format 74
"gui" // framework::native::libs::gui
  revision 3
  modified_by 12 "shchen"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  cpp_h_dir "/home/shchen/work/jellybean/framework/native/libs/gui/"
  cpp_src_dir "/home/shchen/work/jellybean/framework/native/libs/gui/"
  cpp_namespace "android"
  classview 150540 "gui"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 516364 "Composer"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 1376524 // <generalisation>
	relation 1376524 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 1376524 // <generalisation>
	  b parent class_ref 664588 // typedef62
      end

      extra_member 140172 "friend"
	
	cpp "
    friend class Singleton<Composer>;" ""
	java ""
	php ""
	python ""
	idl ""
      end

      classrelation 1376652 // mLock (<directional composition>)
	relation 1376652 *-->
	  a role_name "mLock" private
	    cpp mutable default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 1376652 // mLock (<directional composition>)
	  b parent class_ref 133132 // Mutex
      end

      classrelation 1376780 // mComposerStates (<directional composition>)
	relation 1376780 *-->
	  stereotype "SortedVector"
	  a role_name "mComposerStates" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 1376780 // mComposerStates (<directional composition>)
	  b parent class_ref 549644 // ComposerState
      end

      classrelation 1376908 // mDisplayStates (<directional composition>)
	relation 1376908 *-->
	  stereotype "SortedVector"
	  a role_name "mDisplayStates" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 1376908 // mDisplayStates (<directional composition>)
	  b parent class_ref 549772 // DisplayState
      end

      attribute 1786252 "mForceSynchronous"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1786380 "mAnimation"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 2050828 "Composer"
	cpp_inline private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} : Singleton<Composer>(),
        mForceSynchronous(0),
        mAnimation(false)
    { };
"
	
	
	
	
      end

      operation 2050956 "closeGlobalTransactionImpl"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 1
	  param in name "synchronous" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 2051084 "setAnimationTransactionImpl"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 2051212 "getLayerStateLocked"
	preserve_cpp_body_indent private return_type class_ref 549132 // layer_state_t
	nparams 2
	  param in name "client" explicit_type "sp<SurfaceComposerClient>"
	  param in name "id" explicit_type "SurfaceID"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}const ${t0} & ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 2051340 "getDisplayStateLocked"
	preserve_cpp_body_indent private return_type class_ref 549772 // DisplayState
	nparams 1
	  param in name "token" explicit_type "sp<IBinder>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "// ---------------------------------------------------------------------------

${inline}${type} & ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 2051468 "createDisplay"
	preserve_cpp_body_indent public explicit_return_type "sp<IBinder>"
	nparams 2
	  param in name "displayName" type class_ref 131340 // String8
	  param in name "secure" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "// ---------------------------------------------------------------------------

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 2051596 "getBuiltInDisplay"
	preserve_cpp_body_indent public explicit_return_type "sp<IBinder>"
	nparams 1
	  param in name "id" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 2051724 "setPosition"
	preserve_cpp_body_indent public return_type class_ref 128268 // status_t
	nparams 4
	  param in name "client" explicit_type "sp<SurfaceComposerClient>"
	  param in name "id" explicit_type "SurfaceID"
	  param in name "x" explicit_type "float"
	  param in name "y" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 2051852 "setSize"
	preserve_cpp_body_indent public return_type class_ref 128268 // status_t
	nparams 4
	  param in name "client" explicit_type "sp<SurfaceComposerClient>"
	  param in name "id" explicit_type "SurfaceID"
	  param in name "w" explicit_type "uint32_t"
	  param in name "h" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 2051980 "setLayer"
	preserve_cpp_body_indent public return_type class_ref 128268 // status_t
	nparams 3
	  param in name "client" explicit_type "sp<SurfaceComposerClient>"
	  param in name "id" explicit_type "SurfaceID"
	  param in name "z" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 2052108 "setFlags"
	preserve_cpp_body_indent public return_type class_ref 128268 // status_t
	nparams 4
	  param in name "client" explicit_type "sp<SurfaceComposerClient>"
	  param in name "id" explicit_type "SurfaceID"
	  param in name "flags" explicit_type "uint32_t"
	  param in name "mask" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 2052236 "setTransparentRegionHint"
	preserve_cpp_body_indent public return_type class_ref 128268 // status_t
	nparams 3
	  param in name "client" explicit_type "sp<SurfaceComposerClient>"
	  param in name "id" explicit_type "SurfaceID"
	  param in name "transparentRegion" type class_ref 434572 // Region
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}, const ${t2} & ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} ${p1}, const ${t2} & ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 2052364 "setAlpha"
	preserve_cpp_body_indent public return_type class_ref 128268 // status_t
	nparams 3
	  param in name "client" explicit_type "sp<SurfaceComposerClient>"
	  param in name "id" explicit_type "SurfaceID"
	  param in name "alpha" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 2052492 "setMatrix"
	preserve_cpp_body_indent public return_type class_ref 128268 // status_t
	nparams 6
	  param in name "client" explicit_type "sp<SurfaceComposerClient>"
	  param in name "id" explicit_type "SurfaceID"
	  param in name "dsdx" explicit_type "float"
	  param in name "dtdx" explicit_type "float"
	  param in name "dsdy" explicit_type "float"
	  param in name "dtdy" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} ${p5}${v5}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 2052620 "setOrientation"
	public return_type class_ref 128268 // status_t
	nparams 1
	  param in name "orientation" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 2052748 "setCrop"
	preserve_cpp_body_indent public return_type class_ref 128268 // status_t
	nparams 3
	  param in name "client" explicit_type "sp<SurfaceComposerClient>"
	  param in name "id" explicit_type "SurfaceID"
	  param in name "crop" type class_ref 186892 // Rect
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}, const ${t2} & ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} ${p1}, const ${t2} & ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 2052876 "setLayerStack"
	preserve_cpp_body_indent public return_type class_ref 128268 // status_t
	nparams 3
	  param in name "client" explicit_type "sp<SurfaceComposerClient>"
	  param in name "id" explicit_type "SurfaceID"
	  param in name "layerStack" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 2053004 "setDisplaySurface"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 2
	  param in name "token" explicit_type "sp<IBinder>"
	  param in name "surface" explicit_type "sp<ISurfaceTexture>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 2053132 "setDisplayLayerStack"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 2
	  param in name "token" explicit_type "sp<IBinder>"
	  param in name "layerStack" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 2053260 "setDisplayProjection"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 4
	  param in name "token" explicit_type "sp<IBinder>"
	  param in name "orientation" explicit_type "uint32_t"
	  param in name "layerStackRect" type class_ref 186892 // Rect
	  param in name "displayRect" type class_ref 186892 // Rect
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}, const ${t2} & ${p2}${v2}, const ${t3} & ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} ${p1}, const ${t2} & ${p2}, const ${t3} & ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 2053388 "setAnimationTransaction"
	class_operation cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        Composer::getInstance().setAnimationTransactionImpl();
    };
"
	
	
	
	
      end

      operation 2053516 "closeGlobalTransaction"
	class_operation cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "synchronous" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        Composer::getInstance().closeGlobalTransactionImpl(synchronous);
    };
"
	
	
	
	
      end

      classrelation 7212044 // <dependency>
	relation 7211916 -_->
	  a default
	    cpp default "#include in source"
	    classrelation_ref 7212044 // <dependency>
	  b parent class_ref 548876 // ComposerService
      end
    end

    class 552844 "BpSurface"
      visibility package 
      nactuals 2
      actual class class_ref 135180 // BpInterface
        rank 0 explicit_value "ISurface"
      actual class class_ref 135180 // BpInterface
        rank 1 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " ----------------------------------------------------------------------"
      classrelation 1376012 // <realization>
	relation 1376012 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    classrelation_ref 1376012 // <realization>
	  b parent class_ref 135180 // BpInterface
      end

      operation 2047244 "BpSurface"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param in name "impl" explicit_type "sp<IBinder>"
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}${)}${volatile}${throw} : BpInterface<ISurface>(impl)
    {
    };
"
	
	
	
	
      end

      operation 2047372 "getSurfaceTexture"
	const cpp_virtual cpp_inline public explicit_return_type "sp<ISurfaceTexture>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        Parcel data, reply;
        data.writeInterfaceToken(ISurface::getInterfaceDescriptor());
        remote()->transact(GET_SURFACE_TEXTURE, data, &reply);
        return interface_cast<ISurfaceTexture>(reply.readStrongBinder());
    };
"
	
	
	
	
      end
    end

    class 663052 "BpDisplayEventConnection"
      visibility package 
      nactuals 2
      actual class class_ref 135180 // BpInterface
        rank 0 explicit_value "IDisplayEventConnection"
      actual class class_ref 135180 // BpInterface
        rank 1 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 1375500 // <realization>
	relation 1375500 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    classrelation_ref 1375500 // <realization>
	  b parent class_ref 135180 // BpInterface
      end

      operation 2045580 "BpDisplayEventConnection"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param in name "impl" explicit_type "sp<IBinder>"
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}${)}${volatile}${throw} : BpInterface<IDisplayEventConnection>(impl)
    {
    };
"
	
	
	
	
      end

      operation 2045708 "getDataChannel"
	const cpp_virtual cpp_inline public explicit_return_type "sp<BitTube>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        Parcel data, reply;
        data.writeInterfaceToken(IDisplayEventConnection::getInterfaceDescriptor());
        remote()->transact(GET_DATA_CHANNEL, data, &reply);
        return new BitTube(reply);
    };
"
	
	
	
	
      end

      operation 2045836 "setVsyncRate"
	cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "count" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        Parcel data, reply;
        data.writeInterfaceToken(IDisplayEventConnection::getInterfaceDescriptor());
        data.writeInt32(count);
        remote()->transact(SET_VSYNC_RATE, data, &reply);
    };
"
	
	
	
	
      end

      operation 2045964 "requestNextVsync"
	cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        Parcel data, reply;
        data.writeInterfaceToken(IDisplayEventConnection::getInterfaceDescriptor());
        remote()->transact(REQUEST_NEXT_VSYNC, data, &reply, IBinder::FLAG_ONEWAY);
    };
"
	
	
	
	
      end
    end

    class 663308 "BpGraphicBufferAlloc"
      visibility package 
      nactuals 2
      actual class class_ref 135180 // BpInterface
        rank 0 explicit_value "IGraphicBufferAlloc"
      actual class class_ref 135180 // BpInterface
        rank 1 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 1375628 // <realization>
	relation 1375628 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    classrelation_ref 1375628 // <realization>
	  b parent class_ref 135180 // BpInterface
      end

      operation 2046092 "BpGraphicBufferAlloc"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param in name "impl" explicit_type "sp<IBinder>"
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}${)}${volatile}${throw} : BpInterface<IGraphicBufferAlloc>(impl)
    {
    };
"
	
	
	
	
      end

      operation 2046220 "createGraphicBuffer"
	cpp_virtual cpp_inline public explicit_return_type "sp<GraphicBuffer>"
	nparams 5
	  param in name "w" explicit_type "uint32_t"
	  param in name "h" explicit_type "uint32_t"
	  param in name "format" type class_ref 511756 // PixelFormat
	  param in name "usage" explicit_type "uint32_t"
	  param inout name "error" type class_ref 128268 // status_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} * ${p4}${v4}${)}${const}${volatile}${throw}${abstract} {
        Parcel data, reply;
        data.writeInterfaceToken(IGraphicBufferAlloc::getInterfaceDescriptor());
        data.writeInt32(w);
        data.writeInt32(h);
        data.writeInt32(format);
        data.writeInt32(usage);
        remote()->transact(CREATE_GRAPHIC_BUFFER, data, &reply);
        sp<GraphicBuffer> graphicBuffer;
        status_t result = reply.readInt32();
        if (result == NO_ERROR) {
            graphicBuffer = new GraphicBuffer();
            result = reply.read(*graphicBuffer);
            // reply.readStrongBinder();
            // here we don't even have to read the BufferReference from
            // the parcel, it'll die with the parcel.
        }
        *error = result;
        return graphicBuffer;
    };
"
	
	
	
	
      end
    end

    class 663564 "BpSensorEventConnection"
      visibility package 
      nactuals 2
      actual class class_ref 135180 // BpInterface
        rank 0 explicit_value "ISensorEventConnection"
      actual class class_ref 135180 // BpInterface
        rank 1 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 1375756 // <realization>
	relation 1375756 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    classrelation_ref 1375756 // <realization>
	  b parent class_ref 135180 // BpInterface
      end

      operation 2046348 "BpSensorEventConnection"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param in name "impl" explicit_type "sp<IBinder>"
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}${)}${volatile}${throw} : BpInterface<ISensorEventConnection>(impl)
    {
    };
"
	
	
	
	
      end

      operation 2046476 "getSensorChannel"
	const cpp_virtual cpp_inline public explicit_return_type "sp<BitTube>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        Parcel data, reply;
        data.writeInterfaceToken(ISensorEventConnection::getInterfaceDescriptor());
        remote()->transact(GET_SENSOR_CHANNEL, data, &reply);
        return new BitTube(reply);
    };
"
	
	
	
	
      end

      operation 2046604 "enableDisable"
	cpp_virtual cpp_inline public return_type class_ref 128268 // status_t
	nparams 2
	  param in name "handle" explicit_type "int"
	  param in name "enabled" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        Parcel data, reply;
        data.writeInterfaceToken(ISensorEventConnection::getInterfaceDescriptor());
        data.writeInt32(handle);
        data.writeInt32(enabled);
        remote()->transact(ENABLE_DISABLE, data, &reply);
        return reply.readInt32();
    };
"
	
	
	
	
      end

      operation 2046732 "setEventRate"
	cpp_virtual cpp_inline public return_type class_ref 128268 // status_t
	nparams 2
	  param in name "handle" explicit_type "int"
	  param in name "ns" type class_ref 140172 // nsecs_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        Parcel data, reply;
        data.writeInterfaceToken(ISensorEventConnection::getInterfaceDescriptor());
        data.writeInt32(handle);
        data.writeInt64(ns);
        remote()->transact(SET_EVENT_RATE, data, &reply);
        return reply.readInt32();
    };
"
	
	
	
	
      end
    end

    class 663820 "BpSensorServer"
      visibility package 
      nactuals 2
      actual class class_ref 135180 // BpInterface
        rank 0 explicit_value "ISensorServer"
      actual class class_ref 135180 // BpInterface
        rank 1 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 1375884 // <realization>
	relation 1375884 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    classrelation_ref 1375884 // <realization>
	  b parent class_ref 135180 // BpInterface
      end

      operation 2046860 "BpSensorServer"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param in name "impl" explicit_type "sp<IBinder>"
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}${)}${volatile}${throw} : BpInterface<ISensorServer>(impl)
    {
    };
"
	
	
	
	
      end

      operation 2046988 "getSensorList"
	cpp_virtual cpp_inline public explicit_return_type "Vector<Sensor>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        Parcel data, reply;
        data.writeInterfaceToken(ISensorServer::getInterfaceDescriptor());
        remote()->transact(GET_SENSOR_LIST, data, &reply);
        Sensor s;
        Vector<Sensor> v;
        int32_t n = reply.readInt32();
        v.setCapacity(n);
        while (n--) {
            reply.read(s);
            v.add(s);
        }
        return v;
    };
"
	
	
	
	
      end

      operation 2047116 "createSensorEventConnection"
	cpp_virtual cpp_inline public explicit_return_type "sp<ISensorEventConnection>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        Parcel data, reply;
        data.writeInterfaceToken(ISensorServer::getInterfaceDescriptor());
        remote()->transact(CREATE_SENSOR_EVENT_CONNECTION, data, &reply);
        return interface_cast<ISensorEventConnection>(reply.readStrongBinder());
    };
"
	
	
	
	
      end
    end

    class 663948 "BpSurfaceComposer"
      visibility package 
      nactuals 2
      actual class class_ref 135180 // BpInterface
        rank 0 explicit_value "ISurfaceComposer"
      actual class class_ref 135180 // BpInterface
        rank 1 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 1376140 // <realization>
	relation 1376140 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    classrelation_ref 1376140 // <realization>
	  b parent class_ref 135180 // BpInterface
      end

      operation 2047500 "BpSurfaceComposer"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param in name "impl" explicit_type "sp<IBinder>"
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}${)}${volatile}${throw} : BpInterface<ISurfaceComposer>(impl)
    {
    };
"
	
	
	
	
      end

      operation 2047628 "createConnection"
	cpp_virtual cpp_inline public explicit_return_type "sp<ISurfaceComposerClient>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        uint32_t n;
        Parcel data, reply;
        data.writeInterfaceToken(ISurfaceComposer::getInterfaceDescriptor());
        remote()->transact(BnSurfaceComposer::CREATE_CONNECTION, data, &reply);
        return interface_cast<ISurfaceComposerClient>(reply.readStrongBinder());
    };
"
	
	
	
	
      end

      operation 2047756 "createGraphicBufferAlloc"
	cpp_virtual cpp_inline public explicit_return_type "sp<IGraphicBufferAlloc>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        uint32_t n;
        Parcel data, reply;
        data.writeInterfaceToken(ISurfaceComposer::getInterfaceDescriptor());
        remote()->transact(BnSurfaceComposer::CREATE_GRAPHIC_BUFFER_ALLOC, data, &reply);
        return interface_cast<IGraphicBufferAlloc>(reply.readStrongBinder());
    };
"
	
	
	
	
      end

      operation 2047884 "setTransactionState"
	cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 3
	  param in name "state" explicit_type "Vector<ComposerState>"
	  param in name "displays" explicit_type "Vector<DisplayState>"
	  param in name "flags" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract} {
        Parcel data, reply;
        data.writeInterfaceToken(ISurfaceComposer::getInterfaceDescriptor());
        {
            Vector<ComposerState>::const_iterator b(state.begin());
            Vector<ComposerState>::const_iterator e(state.end());
            data.writeInt32(state.size());
            for ( ; b != e ; ++b ) {
                b->write(data);
            }
        }
        {
            Vector<DisplayState>::const_iterator b(displays.begin());
            Vector<DisplayState>::const_iterator e(displays.end());
            data.writeInt32(displays.size());
            for ( ; b != e ; ++b ) {
                b->write(data);
            }
        }
        data.writeInt32(flags);
        remote()->transact(BnSurfaceComposer::SET_TRANSACTION_STATE, data, &reply);
    };
"
	
	
	
	
      end

      operation 2048012 "bootFinished"
	cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        Parcel data, reply;
        data.writeInterfaceToken(ISurfaceComposer::getInterfaceDescriptor());
        remote()->transact(BnSurfaceComposer::BOOT_FINISHED, data, &reply);
    };
"
	
	
	
	
      end

      operation 2048140 "captureScreen"
	cpp_virtual cpp_inline public return_type class_ref 128268 // status_t
	nparams 9
	  param in name "display" explicit_type "sp<IBinder>"
	  param inout name "heap" explicit_type "sp<IMemoryHeap>"
	  param inout name "width" explicit_type "uint32_t"
	  param inout name "height" explicit_type "uint32_t"
	  param inout name "format" type class_ref 511756 // PixelFormat
	  param in name "reqWidth" explicit_type "uint32_t"
	  param in name "reqHeight" explicit_type "uint32_t"
	  param in name "minLayerZ" explicit_type "uint32_t"
	  param in name "maxLayerZ" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}, ${t3} * ${p3}${v3}, ${t4} * ${p4}${v4}, ${t5} ${p5}${v5}, ${t6} ${p6}${v6}, ${t7} ${p7}${v7}, ${t8} ${p8}${v8}${)}${const}${volatile}${throw}${abstract} {
        Parcel data, reply;
        data.writeInterfaceToken(ISurfaceComposer::getInterfaceDescriptor());
        data.writeStrongBinder(display);
        data.writeInt32(reqWidth);
        data.writeInt32(reqHeight);
        data.writeInt32(minLayerZ);
        data.writeInt32(maxLayerZ);
        remote()->transact(BnSurfaceComposer::CAPTURE_SCREEN, data, &reply);
        *heap = interface_cast<IMemoryHeap>(reply.readStrongBinder());
        *width = reply.readInt32();
        *height = reply.readInt32();
        *format = reply.readInt32();
        return reply.readInt32();
    };
"
	
	
	
	
      end

      operation 2048268 "authenticateSurfaceTexture"
	const cpp_virtual cpp_inline public explicit_return_type "bool"
	nparams 1
	  param in name "surfaceTexture" explicit_type "sp<ISurfaceTexture>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        Parcel data, reply;
        int err = NO_ERROR;
        err = data.writeInterfaceToken(
                ISurfaceComposer::getInterfaceDescriptor());
        if (err != NO_ERROR) {
            ALOGE(\"ISurfaceComposer::authenticateSurfaceTexture: error writing \"
                    \"interface descriptor: %s (%d)\", strerror(-err), -err);
            return false;
        }
        err = data.writeStrongBinder(surfaceTexture->asBinder());
        if (err != NO_ERROR) {
            ALOGE(\"ISurfaceComposer::authenticateSurfaceTexture: error writing \"
                    \"strong binder to parcel: %s (%d)\", strerror(-err), -err);
            return false;
        }
        err = remote()->transact(BnSurfaceComposer::AUTHENTICATE_SURFACE, data,
                &reply);
        if (err != NO_ERROR) {
            ALOGE(\"ISurfaceComposer::authenticateSurfaceTexture: error \"
                    \"performing transaction: %s (%d)\", strerror(-err), -err);
            return false;
        }
        int32_t result = 0;
        err = reply.readInt32(&result);
        if (err != NO_ERROR) {
            ALOGE(\"ISurfaceComposer::authenticateSurfaceTexture: error \"
                    \"retrieving result: %s (%d)\", strerror(-err), -err);
            return false;
        }
        return result != 0;
    };
"
	
	
	
	
      end

      operation 2048396 "createDisplayEventConnection"
	cpp_virtual cpp_inline public explicit_return_type "sp<IDisplayEventConnection>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        Parcel data, reply;
        sp<IDisplayEventConnection> result;
        int err = data.writeInterfaceToken(
                ISurfaceComposer::getInterfaceDescriptor());
        if (err != NO_ERROR) {
            return result;
        }
        err = remote()->transact(
                BnSurfaceComposer::CREATE_DISPLAY_EVENT_CONNECTION,
                data, &reply);
        if (err != NO_ERROR) {
            ALOGE(\"ISurfaceComposer::createDisplayEventConnection: error performing \"
                    \"transaction: %s (%d)\", strerror(-err), -err);
            return result;
        }
        result = interface_cast<IDisplayEventConnection>(reply.readStrongBinder());
        return result;
    };
"
	
	
	
	
      end

      operation 2048524 "createDisplay"
	cpp_virtual cpp_inline public explicit_return_type "sp<IBinder>"
	nparams 2
	  param in name "displayName" type class_ref 131340 // String8
	  param in name "secure" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        Parcel data, reply;
        data.writeInterfaceToken(ISurfaceComposer::getInterfaceDescriptor());
        data.writeString8(displayName);
        data.writeInt32(secure ? 1 : 0);
        remote()->transact(BnSurfaceComposer::CREATE_DISPLAY, data, &reply);
        return reply.readStrongBinder();
    };
"
	
	
	
	
      end

      operation 2048652 "getBuiltInDisplay"
	cpp_virtual cpp_inline public explicit_return_type "sp<IBinder>"
	nparams 1
	  param in name "id" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        Parcel data, reply;
        data.writeInterfaceToken(ISurfaceComposer::getInterfaceDescriptor());
        data.writeInt32(id);
        remote()->transact(BnSurfaceComposer::GET_BUILT_IN_DISPLAY, data, &reply);
        return reply.readStrongBinder();
    };
"
	
	
	
	
      end

      operation 2048780 "blank"
	cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "display" explicit_type "sp<IBinder>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        Parcel data, reply;
        data.writeInterfaceToken(ISurfaceComposer::getInterfaceDescriptor());
        data.writeStrongBinder(display);
        remote()->transact(BnSurfaceComposer::BLANK, data, &reply);
    };
"
	
	
	
	
      end

      operation 2048908 "unblank"
	cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "display" explicit_type "sp<IBinder>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        Parcel data, reply;
        data.writeInterfaceToken(ISurfaceComposer::getInterfaceDescriptor());
        data.writeStrongBinder(display);
        remote()->transact(BnSurfaceComposer::UNBLANK, data, &reply);
    };
"
	
	
	
	
      end

      operation 2049036 "getDisplayInfo"
	cpp_virtual cpp_inline public return_type class_ref 128268 // status_t
	nparams 2
	  param in name "display" explicit_type "sp<IBinder>"
	  param inout name "info" type class_ref 514572 // DisplayInfo
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        Parcel data, reply;
        data.writeInterfaceToken(ISurfaceComposer::getInterfaceDescriptor());
        data.writeStrongBinder(display);
        remote()->transact(BnSurfaceComposer::GET_DISPLAY_INFO, data, &reply);
        memcpy(info, reply.readInplace(sizeof(DisplayInfo)), sizeof(DisplayInfo));
        return reply.readInt32();
    };
"
	
	
	
	
      end
    end

    class 664204 "BpSurfaceComposerClient"
      visibility package 
      nactuals 2
      actual class class_ref 135180 // BpInterface
        rank 0 explicit_value "ISurfaceComposerClient"
      actual class class_ref 135180 // BpInterface
        rank 1 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 1376268 // <realization>
	relation 1376268 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    classrelation_ref 1376268 // <realization>
	  b parent class_ref 135180 // BpInterface
      end

      operation 2049164 "BpSurfaceComposerClient"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param in name "impl" explicit_type "sp<IBinder>"
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}${)}${volatile}${throw} : BpInterface<ISurfaceComposerClient>(impl)
    {
    };
"
	
	
	
	
      end

      operation 2049292 "createSurface"
	cpp_virtual cpp_inline public explicit_return_type "sp<ISurface>"
	nparams 6
	  param inout name "params" explicit_type "surface_data_t"
	  param in name "name" type class_ref 131340 // String8
	  param in name "w" explicit_type "uint32_t"
	  param in name "h" explicit_type "uint32_t"
	  param in name "format" type class_ref 511756 // PixelFormat
	  param in name "flags" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} ${p5}${v5}${)}${const}${volatile}${throw}${abstract} {
        Parcel data, reply;
        data.writeInterfaceToken(ISurfaceComposerClient::getInterfaceDescriptor());
        data.writeString8(name);
        data.writeInt32(w);
        data.writeInt32(h);
        data.writeInt32(format);
        data.writeInt32(flags);
        remote()->transact(CREATE_SURFACE, data, &reply);
        params->readFromParcel(reply);
        return interface_cast<ISurface>(reply.readStrongBinder());
    };
"
	
	
	
	
      end

      operation 2049420 "destroySurface"
	cpp_virtual cpp_inline public return_type class_ref 128268 // status_t
	nparams 1
	  param in name "sid" explicit_type "SurfaceID"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        Parcel data, reply;
        data.writeInterfaceToken(ISurfaceComposerClient::getInterfaceDescriptor());
        data.writeInt32(sid);
        remote()->transact(DESTROY_SURFACE, data, &reply);
        return reply.readInt32();
    };
"
	
	
	
	
      end
    end

    class 664460 "BpSurfaceTexture"
      visibility package 
      nactuals 2
      actual class class_ref 135180 // BpInterface
        rank 0 explicit_value "ISurfaceTexture"
      actual class class_ref 135180 // BpInterface
        rank 1 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 1376396 // <realization>
	relation 1376396 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    classrelation_ref 1376396 // <realization>
	  b parent class_ref 135180 // BpInterface
      end

      operation 2049548 "BpSurfaceTexture"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param in name "impl" explicit_type "sp<IBinder>"
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}${)}${volatile}${throw} : BpInterface<ISurfaceTexture>(impl)
    {
    };
"
	
	
	
	
      end

      operation 2049676 "requestBuffer"
	cpp_virtual cpp_inline public return_type class_ref 128268 // status_t
	nparams 2
	  param in name "bufferIdx" explicit_type "int"
	  param inout name "buf" explicit_type "sp<GraphicBuffer>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        Parcel data, reply;
        data.writeInterfaceToken(ISurfaceTexture::getInterfaceDescriptor());
        data.writeInt32(bufferIdx);
        status_t result =remote()->transact(REQUEST_BUFFER, data, &reply);
        if (result != NO_ERROR) {
            return result;
        }
        bool nonNull = reply.readInt32();
        if (nonNull) {
            *buf = new GraphicBuffer();
            reply.read(**buf);
        }
        result = reply.readInt32();
        return result;
    };
"
	
	
	
	
      end

      operation 2049804 "setBufferCount"
	cpp_virtual cpp_inline public return_type class_ref 128268 // status_t
	nparams 1
	  param in name "bufferCount" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        Parcel data, reply;
        data.writeInterfaceToken(ISurfaceTexture::getInterfaceDescriptor());
        data.writeInt32(bufferCount);
        status_t result =remote()->transact(SET_BUFFER_COUNT, data, &reply);
        if (result != NO_ERROR) {
            return result;
        }
        result = reply.readInt32();
        return result;
    };
"
	
	
	
	
      end

      operation 2049932 "dequeueBuffer"
	cpp_virtual cpp_inline public return_type class_ref 128268 // status_t
	nparams 6
	  param inout name "buf" explicit_type "int"
	  param inout name "fence" explicit_type "sp<Fence>"
	  param in name "w" explicit_type "uint32_t"
	  param in name "h" explicit_type "uint32_t"
	  param in name "format" explicit_type "uint32_t"
	  param in name "usage" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} & ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} ${p5}${v5}${)}${const}${volatile}${throw}${abstract} {
        Parcel data, reply;
        data.writeInterfaceToken(ISurfaceTexture::getInterfaceDescriptor());
        data.writeInt32(w);
        data.writeInt32(h);
        data.writeInt32(format);
        data.writeInt32(usage);
        status_t result = remote()->transact(DEQUEUE_BUFFER, data, &reply);
        if (result != NO_ERROR) {
            return result;
        }
        *buf = reply.readInt32();
        fence.clear();
        bool hasFence = reply.readInt32();
        if (hasFence) {
            fence = new Fence();
            reply.read(*fence.get());
        }
        result = reply.readInt32();
        return result;
    };
"
	
	
	
	
      end

      operation 2050060 "queueBuffer"
	cpp_virtual cpp_inline public return_type class_ref 128268 // status_t
	nparams 3
	  param in name "buf" explicit_type "int"
	  param in name "input" explicit_type "QueueBufferInput"
	  param inout name "output" explicit_type "QueueBufferOutput"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract} {
        Parcel data, reply;
        data.writeInterfaceToken(ISurfaceTexture::getInterfaceDescriptor());
        data.writeInt32(buf);
        data.write(input);
        status_t result = remote()->transact(QUEUE_BUFFER, data, &reply);
        if (result != NO_ERROR) {
            return result;
        }
        memcpy(output, reply.readInplace(sizeof(*output)), sizeof(*output));
        result = reply.readInt32();
        return result;
    };
"
	
	
	
	
      end

      operation 2050188 "cancelBuffer"
	cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "buf" explicit_type "int"
	  param in name "fence" explicit_type "sp<Fence>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        Parcel data, reply;
        bool hasFence = fence.get() && fence->isValid();
        data.writeInterfaceToken(ISurfaceTexture::getInterfaceDescriptor());
        data.writeInt32(buf);
        data.writeInt32(hasFence);
        if (hasFence) {
            data.write(*fence.get());
        }
        remote()->transact(CANCEL_BUFFER, data, &reply);
    };
"
	
	
	
	
      end

      operation 2050316 "query"
	cpp_virtual cpp_inline public explicit_return_type "int"
	nparams 2
	  param in name "what" explicit_type "int"
	  param inout name "value" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        Parcel data, reply;
        data.writeInterfaceToken(ISurfaceTexture::getInterfaceDescriptor());
        data.writeInt32(what);
        status_t result = remote()->transact(QUERY, data, &reply);
        if (result != NO_ERROR) {
            return result;
        }
        value[0] = reply.readInt32();
        result = reply.readInt32();
        return result;
    };
"
	
	
	
	
      end

      operation 2050444 "setSynchronousMode"
	cpp_virtual cpp_inline public return_type class_ref 128268 // status_t
	nparams 1
	  param in name "enabled" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        Parcel data, reply;
        data.writeInterfaceToken(ISurfaceTexture::getInterfaceDescriptor());
        data.writeInt32(enabled);
        status_t result = remote()->transact(SET_SYNCHRONOUS_MODE, data, &reply);
        if (result != NO_ERROR) {
            return result;
        }
        result = reply.readInt32();
        return result;
    };
"
	
	
	
	
      end

      operation 2050572 "connect"
	cpp_virtual cpp_inline public return_type class_ref 128268 // status_t
	nparams 2
	  param in name "api" explicit_type "int"
	  param inout name "output" explicit_type "QueueBufferOutput"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        Parcel data, reply;
        data.writeInterfaceToken(ISurfaceTexture::getInterfaceDescriptor());
        data.writeInt32(api);
        status_t result = remote()->transact(CONNECT, data, &reply);
        if (result != NO_ERROR) {
            return result;
        }
        memcpy(output, reply.readInplace(sizeof(*output)), sizeof(*output));
        result = reply.readInt32();
        return result;
    };
"
	
	
	
	
      end

      operation 2050700 "disconnect"
	cpp_virtual cpp_inline public return_type class_ref 128268 // status_t
	nparams 1
	  param in name "api" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        Parcel data, reply;
        data.writeInterfaceToken(ISurfaceTexture::getInterfaceDescriptor());
        data.writeInt32(api);
        status_t result =remote()->transact(DISCONNECT, data, &reply);
        if (result != NO_ERROR) {
            return result;
        }
        result = reply.readInt32();
        return result;
    };
"
	
	
	
	
      end
    end

    class 664588 "typedef62"
      visibility package stereotype "typedef" explicit_base_type "Singleton<Composer>"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
    end
  end

  package_ref 172428 // gui

  deploymentview 160140 "gui"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 303884 "BpDisplayEventConnection"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 663052 // BpDisplayEventConnection
      end
    end

    artifact 304140 "BpGraphicBufferAlloc"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 663308 // BpGraphicBufferAlloc
      end
    end

    artifact 304396 "BpSensorEventConnection"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 663564 // BpSensorEventConnection
      end
    end

    artifact 304652 "BpSensorServer"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 663820 // BpSensorServer
      end
    end

    artifact 304780 "BpSurface"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 552844 // BpSurface
      end
    end

    artifact 304908 "BpSurfaceComposer"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 663948 // BpSurfaceComposer
      end
    end

    artifact 305164 "BpSurfaceComposerClient"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 664204 // BpSurfaceComposerClient
      end
    end

    artifact 305420 "BpSurfaceTexture"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 664460 // BpSurfaceTexture
      end
    end

    artifact 305548 "typedef62"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 664588 // typedef62
      end
    end

    artifact 305676 "Composer"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 516364 // Composer
      end
    end
  end

  package_ref 172556 // tests
end
