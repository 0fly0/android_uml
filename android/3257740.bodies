class SpellCheckersSettings
!!!14069900.java!!!	onCreate(inout icicle : Bundle) : void
        super.onCreate(icicle);
        mTsm = (TextServicesManager) getSystemService(Context.TEXT_SERVICES_MANAGER_SERVICE);
        addPreferencesFromResource(R.xml.spellchecker_prefs);
        updateScreen();
!!!14070028.java!!!	onPreferenceTreeClick(inout screen : PreferenceScreen, inout preference : Preference) : boolean
        return false;
!!!14070156.java!!!	onResume() : void
        super.onResume();
        updateScreen();
!!!14070284.java!!!	onPause() : void
        super.onPause();
        saveState();
!!!14070412.java!!!	saveState() : void
        SpellCheckerUtils.setCurrentSpellChecker(mTsm, mCurrentSci);
!!!14070540.java!!!	updateScreen() : void
        getPreferenceScreen().removeAll();
        updateEnabledSpellCheckers();
!!!14070668.java!!!	updateEnabledSpellCheckers() : void
        final PackageManager pm = getPackageManager();
        mCurrentSci = SpellCheckerUtils.getCurrentSpellChecker(mTsm);
        mEnabledScis = SpellCheckerUtils.getEnabledSpellCheckers(mTsm);
        if (mCurrentSci == null || mEnabledScis == null) {
            return;
        }
        mSpellCheckers.clear();
        for (int i = 0; i < mEnabledScis.length; ++i) {
            final SpellCheckerInfo sci = mEnabledScis[i];
            final SingleSpellCheckerPreference scPref = new SingleSpellCheckerPreference(
                    this, null, sci, mTsm);
            mSpellCheckers.add(scPref);
            scPref.setTitle(sci.loadLabel(pm));
            scPref.setSelected(mCurrentSci != null && mCurrentSci.getId().equals(sci.getId()));
            getPreferenceScreen().addPreference(scPref);
        }
!!!14070796.java!!!	onPreferenceClick(inout pref : Preference) : boolean
        SingleSpellCheckerPreference targetScp = null;
        for (SingleSpellCheckerPreference scp : mSpellCheckers) {
            if (pref.equals(scp)) {
                targetScp = scp;
            }
        }
        if (targetScp != null) {
            if (!isSystemApp(targetScp.getSpellCheckerInfo())) {
                showSecurityWarnDialog(targetScp);
            } else {
                changeCurrentSpellChecker(targetScp);
            }
        }
        return true;
!!!14070924.java!!!	showSecurityWarnDialog(in scp : SingleSpellCheckerPreference) : void
        if (mDialog != null && mDialog.isShowing()) {
            mDialog.dismiss();
        }
        mDialog = (new AlertDialog.Builder(getActivity()))
                .setTitle(android.R.string.dialog_alert_title)
                .setIconAttribute(android.R.attr.alertDialogIcon)
                .setCancelable(true)
                .setPositiveButton(android.R.string.ok,
                        new DialogInterface.OnClickListener() {
                    @Override
                    public void onClick(DialogInterface dialog, int which) {
                        changeCurrentSpellChecker(scp);
                    }
                })
                .setNegativeButton(android.R.string.cancel,
                        new DialogInterface.OnClickListener() {
                    @Override
                    public void onClick(DialogInterface dialog, int which) {
                    }
                })
                .create();
        mDialog.setMessage(getResources().getString(R.string.spellchecker_security_warning,
                scp.getSpellCheckerInfo().getServiceInfo().applicationInfo.loadLabel(
                        getActivity().getPackageManager())));
        mDialog.show();
!!!14071052.java!!!	changeCurrentSpellChecker(inout scp : SingleSpellCheckerPreference) : void
        mTsm.setCurrentSpellChecker(scp.getSpellCheckerInfo());
        if (DBG) {
            Log.d(TAG, "Current spell check is "
                        + SpellCheckerUtils.getCurrentSpellChecker(mTsm).getId());
        }
        updateScreen();
!!!14071180.java!!!	isSystemApp(inout sci : SpellCheckerInfo) : boolean
        return (sci.getServiceInfo().applicationInfo.flags & ApplicationInfo.FLAG_SYSTEM) != 0;
