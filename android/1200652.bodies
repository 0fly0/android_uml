class DrmInputStream
!!!6729996.java!!!	DrmInputStream(inout rights : DrmRights)
            /**
             * Because currently the media object associate with rights object
             * has been handled in native logic, so here it is not need to deal
             * the rights. But for the apps, it is mandatory for user to get
             * the rights object before get the media content data.
             */

            isClosed = false;
            offset = 0;
            b = new byte[1];
!!!6730124.java!!!	available() : int
            /* call native method to get this DRM decrypted media content length */
            int len = nativeGetContentLength();

            if (JNI_DRM_FAILURE == len)
                throw new IOException();

            /* if the length is unknown, just return 0 for available value */
            if (JNI_DRM_UNKNOWN_DATA_LEN == len)
                return 0;

            int availableLen = len - offset;
            if (availableLen < 0)
                throw new IOException();

            return availableLen;
!!!6730252.java!!!	read() : int
            int res;

            res = read(b, 0, 1);

            if (-1 == res)
                return -1;

            return b[0] & 0xff;
!!!6730380.java!!!	read(inout b : byte) : int
            return read(b, 0, b.length);
!!!6730508.java!!!	read(inout b : byte, in off : int, in len : int) : int
            if (null == b)
                throw new NullPointerException();
            if (off < 0 || len < 0 || off + len > b.length)
                throw new IndexOutOfBoundsException();
            if (true == isClosed)
                throw new IOException();

            if (0 == len)
                return 0;

            len = nativeReadContent(b, off, len, offset);

            if (JNI_DRM_FAILURE == len)
                throw new IOException();
            else if (JNI_DRM_EOF == len)
                return -1;

            offset += len;

            return len;
!!!6730636.java!!!	markSupported() : boolean
            return false;
!!!6730892.java!!!	reset() : void
            throw new IOException();
!!!6731020.java!!!	skip(in n : long) : long
            return 0;
!!!6731148.java!!!	close() : void
            isClosed = true;
