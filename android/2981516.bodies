class WfdSinkReceiver
!!!12133260.java!!!	setWfdSinkHandle(inout handle : Handler) : void
		Wfdhandler = handle;
		Log.i(TAG,"WfdSinkReceiver Constructor called");
!!!12133388.java!!!	onReceive(inout context : Context, inout intent : Intent) : void
	   String action = intent.getAction();
	   if(action.equalsIgnoreCase("android.intent.action.WfdSinkAppStart")){
		   Log.i(TAG,"Received android.intent.action.WfdSinkAppStart");

			   Log.i(TAG,"WfdSinkApp not created yet hence launch new activity");
			   /*Start WFD Sink App */
			   Intent service = new Intent(context, WfdSinkApp.class);
			   service.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
			   service.putExtra("ipaddr",intent.getStringExtra("ipaddr"));
			   service.putExtra("rtspport",intent.getStringExtra("rtspport"));
			   context.startActivity(service);


			   /*Bundle b = new Bundle();
			   String[] arr = new String[3];
			   arr[0] = "screen_connect";
			   arr[1] = intent.getStringExtra("ipaddr");
			   arr[2] = intent.getStringExtra("rtspport");

			   b.putStringArray("wfd_recv_msg",arr);
			   Message m = Message.obtain();
			   m.setData(b);
			   m.setTarget(Wfdhandler);
			   m.sendToTarget();*/
		   // send message to activity

	   } else if(action.equalsIgnoreCase("android.intent.action.WfdSinkAppStop")){
		   Log.i(TAG,"WFDSinkService: Received android.intent.action.WfdSinkAppStop");

		   if(Wfdhandler != null)
		   {
			   Bundle b = new Bundle();
			   String[] arr = new String[3];
			   arr[0] = "screen_disconnect";

			   b.putStringArray("wfd_recv_msg",arr);
			   Message m = Message.obtain();
			   m.setData(b);
			   m.setTarget(Wfdhandler);
			   m.sendToTarget();
			   //activity.nativeInterface.WfdSetProperty(NativeProp.JNI_USER_WFD_NAV_STOP,0,0);
			   Log.i(TAG,"WFDSinkService: JNI_USER_WFD_NAV_STOP ");
			   //activity.finish();
			   //this.activity = null;
	       }
	   }
