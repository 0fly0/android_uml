class TrustedCertificateProvider
!!!13346060.java!!!	TrustedCertificateProvider()
        super();
!!!13346572.java!!!	onCreate() : boolean
        mOpenHelper = new DatabaseHelper(getContext());
        return true;
!!!13346700.java!!!	query(inout uri : Uri, inout projection : String, in selection : String, inout selectionArgs : String, in sortOrder : String) : Cursor
        SQLiteQueryBuilder qb = new SQLiteQueryBuilder();

        qb.setTables(TABLE_NAME);
        qb.setProjectionMap(sTrustTableProjectionMap);

        // If no sort order is specified use the default
        String orderBy;
        if (TextUtils.isEmpty(sortOrder)) {
            orderBy = TrustedCertificateColumns.DEFAULT_SORT_ORDER;
        } else {
            orderBy = sortOrder;
        }

        // Get the database and run the query
        SQLiteDatabase db = mOpenHelper.getReadableDatabase();
        Cursor c =
            qb.query(db, projection, selection, selectionArgs, null, null,
                    orderBy);

        // Tell the cursor what uri to watch, so it knows when its source data
        // changes
        c.setNotificationUri(getContext().getContentResolver(), uri);
        return c;
!!!13346828.java!!!	getType(inout uri : Uri) : String
        if (sUriMatcher.match(uri) != URI_CERT) {
            throw new IllegalArgumentException("Bad URI");
        }
        return TrustedCertificateColumns.CONTENT_TYPE;
!!!13346956.java!!!	insert(inout uri : Uri, inout initialValues : ContentValues) : Uri
        if (sUriMatcher.match(uri) != URI_CERT) {
            throw new IllegalArgumentException("Bad URI");
        }

        ContentValues values;
        if (initialValues != null) {
            values = new ContentValues(initialValues);
        } else {
            values = new ContentValues();
        }

        Long now = Long.valueOf(System.currentTimeMillis());

        // Make sure that the fields are all set
        if (values.containsKey(TrustedCertificateColumns.DATE) == false) {
            values.put(TrustedCertificateColumns.DATE, now);
        }

        SQLiteDatabase db = mOpenHelper.getWritableDatabase();
        long rowId = db.insert(TABLE_NAME, null, values);
        if (rowId > 0) {
            Uri keyUri =
                ContentUris.withAppendedId(
                        TrustedCertificateProvider.CONTENT_URI, rowId);
            getContext().getContentResolver().notifyChange(keyUri, null);
            return keyUri;
        }

        throw new SQLException("Failed to insert row into " + uri);
!!!13347084.java!!!	delete(inout uri : Uri, in where : String, inout whereArgs : String) : int
        SQLiteDatabase db = mOpenHelper.getWritableDatabase();
        // TODO(mikey): must validate URI against a matcher
        int count = db.delete(TABLE_NAME, where, whereArgs);
        getContext().getContentResolver().notifyChange(uri, null);
        return count;
!!!13347212.java!!!	update(inout uri : Uri, inout values : ContentValues, in where : String, inout whereArgs : String) : int
        SQLiteDatabase db = mOpenHelper.getWritableDatabase();
        // TODO(mikey): must validate URI against a matcher
        int count = db.update(TABLE_NAME, values, where, whereArgs);
        getContext().getContentResolver().notifyChange(uri, null);
        return count;
