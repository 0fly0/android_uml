class KeyboardStateTestsBase
!!!13021708.java!!!	setUp() : void
        super.setUp();

        mSwitcher = new MockKeyboardSwitcher();
        mSwitcher.setAutoCapsMode(CAP_MODE_OFF);

        loadKeyboard(ALPHABET_UNSHIFTED);
!!!13021836.java!!!	setAutoCapsMode(in autoCaps : int) : void
        mSwitcher.setAutoCapsMode(autoCaps);
!!!13021964.java!!!	setLayoutSwitchBackSymbols(in switchBackSymbols : String) : void
        mLayoutSwitchBackSymbols = switchBackSymbols;
!!!13022092.java!!!	assertLayout(in message : String, in expected : int, in actual : int) : void
        assertTrue(message + ": expected=" + MockKeyboardSwitcher.getLayoutName(expected)
                + " actual=" + MockKeyboardSwitcher.getLayoutName(actual),
                expected == actual);
!!!13022220.java!!!	updateShiftState(in afterUpdate : int) : void
        mSwitcher.updateShiftState();
        assertLayout("afterUpdate", afterUpdate, mSwitcher.getLayoutId());
!!!13022348.java!!!	loadKeyboard(in afterLoad : int) : void
        mSwitcher.loadKeyboard(mLayoutSwitchBackSymbols);
        mSwitcher.updateShiftState();
        assertLayout("afterLoad", afterLoad, mSwitcher.getLayoutId());
!!!13022476.java!!!	rotateDevice(in afterRotate : int) : void
        mSwitcher.saveKeyboardState();
        mSwitcher.loadKeyboard(mLayoutSwitchBackSymbols);
        assertLayout("afterRotate", afterRotate, mSwitcher.getLayoutId());
!!!13022604.java!!!	pressKeyWithoutTimerExpire(in code : int, inout isSinglePointer : boolean, in afterPress : int) : void
        mSwitcher.onPressKey(code, isSinglePointer);
        assertLayout("afterPress", afterPress, mSwitcher.getLayoutId());
!!!13022732.java!!!	pressKey(in code : int, in afterPress : int) : void
        mSwitcher.expireDoubleTapTimeout();
        pressKeyWithoutTimerExpire(code, true, afterPress);
!!!13022860.java!!!	releaseKey(in code : int, in afterRelease : int) : void
        mSwitcher.onCodeInput(code, SINGLE);
        mSwitcher.onReleaseKey(code, NOT_SLIDING);
        assertLayout("afterRelease", afterRelease, mSwitcher.getLayoutId());
!!!13022988.java!!!	pressAndReleaseKey(in code : int, in afterPress : int, in afterRelease : int) : void
        pressKey(code, afterPress);
        releaseKey(code, afterRelease);
!!!13023116.java!!!	chordingPressKey(in code : int, in afterPress : int) : void
        mSwitcher.expireDoubleTapTimeout();
        pressKeyWithoutTimerExpire(code, false, afterPress);
!!!13023244.java!!!	chordingReleaseKey(in code : int, in afterRelease : int) : void
        mSwitcher.onCodeInput(code, MULTI);
        mSwitcher.onReleaseKey(code, NOT_SLIDING);
        assertLayout("afterRelease", afterRelease, mSwitcher.getLayoutId());
!!!13023372.java!!!	chordingPressAndReleaseKey(in code : int, in afterPress : int, in afterRelease : int) : void
        chordingPressKey(code, afterPress);
        chordingReleaseKey(code, afterRelease);
!!!13023500.java!!!	pressAndSlideFromKey(in code : int, in afterPress : int, in afterSlide : int) : void
        pressKey(code, afterPress);
        mSwitcher.onReleaseKey(code, SLIDING);
        assertLayout("afterSlide", afterSlide, mSwitcher.getLayoutId());
!!!13023628.java!!!	longPressKey(in code : int, in afterPress : int, in afterLongPress : int) : void
        pressKey(code, afterPress);
        mSwitcher.onLongPressTimeout(code);
        assertLayout("afterLongPress", afterLongPress, mSwitcher.getLayoutId());
!!!13023756.java!!!	longPressAndReleaseKey(in code : int, in afterPress : int, in afterLongPress : int, in afterRelease : int) : void
        longPressKey(code, afterPress, afterLongPress);
        releaseKey(code, afterRelease);
!!!13023884.java!!!	secondPressKey(in code : int, in afterPress : int) : void
        pressKeyWithoutTimerExpire(code, true, afterPress);
!!!13024012.java!!!	secondPressAndReleaseKey(in code : int, in afterPress : int, in afterRelease : int) : void
        secondPressKey(code, afterPress);
        releaseKey(code, afterRelease);
