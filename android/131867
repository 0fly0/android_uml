format 74
"spec" // _unknown::java::security::spec
  revision 1
  modified_by 27 "shchen"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "/home/shchen/work/android-x86/libcore/luni/src/main/java/java/security/spec/"
  java_package "java.security.spec"
  classview 131227 "spec"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 196123 "AlgorithmParameterSpec"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The marker interface for algorithm parameter specifications. The purpose is
to group parameter specifications for algorithms."
    end

    class 196635 "InvalidParameterSpecException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The exception that is thrown when an invalid parameter specification is
encountered."
      classrelation 325787 // <generalisation>
	relation 325787 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 325787 // <generalisation>
	  b parent class_ref 200603 // GeneralSecurityException
      end

      attribute 265243 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -970468769593399342L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The serial version identifier.
"
      end

      operation 954139 "InvalidParameterSpecException"
	public explicit_return_type ""
	nparams 1
	  param inout name "msg" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code InvalidParameterSpecException} with the specified
message.

@param msg
           the detail message for this exception."
      end

      operation 954267 "InvalidParameterSpecException"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code InvalidParameterSpecException}."
      end
    end

    class 202395 "KeySpec"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The marker interface for key specifications. The purpose is
to group key specifications for cryptographic keys."
    end

    class 202523 "InvalidKeySpecException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The exception that is thrown when an invalid key specification is
encountered."
      classrelation 325659 // <generalisation>
	relation 325659 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 325659 // <generalisation>
	  b parent class_ref 200603 // GeneralSecurityException
      end

      attribute 265115 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 3546139293998810778L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The serial version identifier.
"
      end

      operation 953627 "InvalidKeySpecException"
	public explicit_return_type ""
	nparams 1
	  param inout name "msg" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code InvalidKeySpecException} with the specified message.

@param msg
           the detail message of this exception."
      end

      operation 953755 "InvalidKeySpecException"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code InvalidKeySpecException}."
      end

      operation 953883 "InvalidKeySpecException"
	public explicit_return_type ""
	nparams 2
	  param inout name "message" type class_ref 3399692 // String
	  param inout name "cause" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code InvalidKeySpecException} with the specified message
and cause.

@param message
           the detail message of this exception.
@param cause
           the cause of this exception."
      end

      operation 954011 "InvalidKeySpecException"
	public explicit_return_type ""
	nparams 1
	  param inout name "cause" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code InvalidKeySpecException} with the specified cause.

@param cause
           the cause of this exception."
      end
    end

    class 216091 "ECParameterSpec"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The parameter specification used with Elliptic Curve Cryptography (ECC)."
      classrelation 323355 // <realization>
	relation 323355 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 323355 // <realization>
	  b parent class_ref 196123 // AlgorithmParameterSpec
      end

      classrelation 323483 // curve (<unidirectional association>)
	relation 323483 --->
	  a role_name "curve" const_relation private
	    comment " Elliptic curve for which this is parameter
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 323483 // curve (<unidirectional association>)
	  b parent class_ref 218267 // EllipticCurve
      end

      classrelation 323611 // generator (<unidirectional association>)
	relation 323611 --->
	  a role_name "generator" const_relation private
	    comment " Distinguished point on the elliptic curve called generator or base point
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 323611 // generator (<unidirectional association>)
	  b parent class_ref 216475 // ECPoint
      end

      classrelation 323739 // order (<unidirectional association>)
	relation 323739 --->
	  a role_name "order" const_relation private
	    comment " Order of the generator
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 323739 // order (<unidirectional association>)
	  b parent class_ref 166299 // BigInteger
      end

      attribute 264603 "cofactor"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Cofactor"
      end

      classrelation 323867 // curveName (<unidirectional association>)
	relation 323867 --->
	  a role_name "curveName" const_relation private
	    comment " Name of curve if available.
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 323867 // curveName (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      operation 949787 "ECParameterSpec"
	public explicit_return_type ""
	nparams 4
	  param inout name "curve" type class_ref 218267 // EllipticCurve
	  param inout name "generator" type class_ref 216475 // ECPoint
	  param inout name "order" type class_ref 166299 // BigInteger
	  param in name "cofactor" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code ECParameterSpec} with the specified elliptic curve,
the base point, the order of the generator (or base point) and the
co-factor.

@param curve
           the elliptic curve.
@param generator
           the generator (or base point).
@param order
           the order of the generator.
@param cofactor
           the co-factor.
@throws IllegalArgumentException
            if {@code order <= zero} or {@code cofactor <= zero}."
      end

      operation 949915 "ECParameterSpec"
	public explicit_return_type ""
	nparams 5
	  param inout name "curve" type class_ref 218267 // EllipticCurve
	  param inout name "generator" type class_ref 216475 // ECPoint
	  param inout name "order" type class_ref 166299 // BigInteger
	  param in name "cofactor" explicit_type "int"
	  param inout name "curveName" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code ECParameterSpec} with the specified named curve
and all of its parameters.

@see #ECParameterSpec(EllipticCurve, ECPoint, BigInteger, int)
@hide"
      end

      operation 950043 "getCofactor"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code cofactor}.

@return the {@code cofactor}."
      end

      operation 950171 "getCurve"
	public return_type class_ref 218267 // EllipticCurve
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the elliptic curve.

@return the elliptic curve."
      end

      operation 950299 "getGenerator"
	public return_type class_ref 216475 // ECPoint
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the generator (or base point).

@return the generator (or base point)."
      end

      operation 950427 "getOrder"
	public return_type class_ref 166299 // BigInteger
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the order of the generator.

@return the order of the generator."
      end

      operation 950555 "getCurveName"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the curve if this is a named curve. Returns
{@code null} if this is not known to be a named curve.

@hide"
      end
    end

    class 216475 "ECPoint"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A Point on an Elliptic Curve in barycentric (or affine) coordinates."
      classrelation 323995 // POINT_INFINITY (<unidirectional association>)
	relation 323995 --->
	  a role_name "POINT_INFINITY" init_value " new ECPoint()" class_relation const_relation public
	    comment "
The point on an Elliptic Curve at infinity.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 323995 // POINT_INFINITY (<unidirectional association>)
	  b parent class_ref 216475 // ECPoint
      end

      classrelation 324123 // affineX (<unidirectional association>)
	relation 324123 --->
	  a role_name "affineX" const_relation private
	    comment " affine X coordinate of this point
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 324123 // affineX (<unidirectional association>)
	  b parent class_ref 166299 // BigInteger
      end

      classrelation 324251 // affineY (<unidirectional association>)
	relation 324251 --->
	  a role_name "affineY" const_relation private
	    comment " affine Y coordinate of this point
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 324251 // affineY (<unidirectional association>)
	  b parent class_ref 166299 // BigInteger
      end

      operation 950683 "ECPoint"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Private ctor for POINT_INFINITY"
      end

      operation 950811 "ECPoint"
	public explicit_return_type ""
	nparams 2
	  param inout name "affineX" type class_ref 166299 // BigInteger
	  param inout name "affineY" type class_ref 166299 // BigInteger
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new point at the specified coordinates.

@param affineX
           the x-coordinate.
@param affineY
           the y-coordinate."
      end

      operation 950939 "getAffineX"
	public return_type class_ref 166299 // BigInteger
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the x-coordinate.

@return the x-coordinate, or {@code null} for the infinite point."
      end

      operation 951067 "getAffineY"
	public return_type class_ref 166299 // BigInteger
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the y-coordinate.

@return the y-coordinate, or {@code null} fot the infinite point."
      end

      operation 951195 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "other" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the specified object and this elliptic curve point are
equal.

@param other
           the object to compare.
@return {@code true} if the specified object and this elliptic curve
        point are equal, otherwise {@code false}."
      end

      operation 951323 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the hashcode of this elliptic curve point.

@return the hashcode of this elliptic curve point."
      end
    end

    class 216987 "RSAOtherPrimeInfo"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The additional prime information specified as triplet of primes, a prime
exponent, and a Chinese Remainder Theorem (CRT) coefficient.
<p>
Defined in the <a
href=\"http://www.rsa.com/rsalabs/pubs/PKCS/html/pkcs-1.html\">PKCS #1 v2.1</a>
standard."
      classrelation 329371 // prime (<unidirectional association>)
	relation 329371 --->
	  a role_name "prime" const_relation private
	    comment " Prime
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 329371 // prime (<unidirectional association>)
	  b parent class_ref 166299 // BigInteger
      end

      classrelation 329499 // primeExponent (<unidirectional association>)
	relation 329499 --->
	  a role_name "primeExponent" const_relation private
	    comment " Prime Exponent
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 329499 // primeExponent (<unidirectional association>)
	  b parent class_ref 166299 // BigInteger
      end

      classrelation 329627 // crtCoefficient (<unidirectional association>)
	relation 329627 --->
	  a role_name "crtCoefficient" const_relation private
	    comment " CRT Coefficient
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 329627 // crtCoefficient (<unidirectional association>)
	  b parent class_ref 166299 // BigInteger
      end

      operation 957723 "RSAOtherPrimeInfo"
	public explicit_return_type ""
	nparams 3
	  param inout name "prime" type class_ref 166299 // BigInteger
	  param inout name "primeExponent" type class_ref 166299 // BigInteger
	  param inout name "crtCoefficient" type class_ref 166299 // BigInteger
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code RSAOtherPrimeInfo} with the specified prime,
exponent, and CRT coefficient.

@param prime
           the prime factor.
@param primeExponent
           the prime exponent.
@param crtCoefficient
           the CRT coefficient."
      end

      operation 957851 "getCrtCoefficient"
	public return_type class_ref 166299 // BigInteger
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the CRT coefficient.

@return the CRT coefficient."
      end

      operation 957979 "getPrime"
	public return_type class_ref 166299 // BigInteger
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the prime factor.

@return the prime factor."
      end

      operation 958107 "getExponent"
	public return_type class_ref 166299 // BigInteger
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the exponent.

@return the exponent."
      end
    end

    class 217371 "DSAParameterSpec"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The parameter specification used with the Digital Signature Algorithm (DSA)."
      classrelation 320667 // <realization>
	relation 320667 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 320667 // <realization>
	  b parent class_ref 196123 // AlgorithmParameterSpec
      end

      classrelation 320795 // <realization>
	relation 320795 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 320795 // <realization>
	  b parent class_ref 215451 // DSAParams
      end

      classrelation 320923 // p (<unidirectional association>)
	relation 320923 --->
	  a role_name "p" const_relation private
	    comment " Prime
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 320923 // p (<unidirectional association>)
	  b parent class_ref 166299 // BigInteger
      end

      classrelation 321051 // q (<unidirectional association>)
	relation 321051 --->
	  a role_name "q" const_relation private
	    comment " Sub-prime
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 321051 // q (<unidirectional association>)
	  b parent class_ref 166299 // BigInteger
      end

      classrelation 321179 // g (<unidirectional association>)
	relation 321179 --->
	  a role_name "g" const_relation private
	    comment " Base
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 321179 // g (<unidirectional association>)
	  b parent class_ref 166299 // BigInteger
      end

      operation 945819 "DSAParameterSpec"
	public explicit_return_type ""
	nparams 3
	  param inout name "p" type class_ref 166299 // BigInteger
	  param inout name "q" type class_ref 166299 // BigInteger
	  param inout name "g" type class_ref 166299 // BigInteger
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code DSAParameterSpec} with the specified prime {@code p},
sub-prime {@code q} and the base {@code g}.

@param p
           the prime {@code p}.
@param q
           the sub-prime {@code q}.
@param g
           the base {@code g};"
      end

      operation 945947 "getG"
	public return_type class_ref 166299 // BigInteger
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the base {@code g}.

@return the base {@code g}."
      end

      operation 946075 "getP"
	public return_type class_ref 166299 // BigInteger
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the prime {@code p}.

@return the prime {@code p}."
      end

      operation 946203 "getQ"
	public return_type class_ref 166299 // BigInteger
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the sub-prime {@code q}.

@return the sub-prime {@code q}."
      end
    end

    class 217499 "DSAPrivateKeySpec"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The parameters specifying a DSA private key."
      classrelation 321307 // <realization>
	relation 321307 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 321307 // <realization>
	  b parent class_ref 202395 // KeySpec
      end

      classrelation 321435 // x (<unidirectional association>)
	relation 321435 --->
	  a role_name "x" const_relation private
	    comment " Private key
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 321435 // x (<unidirectional association>)
	  b parent class_ref 166299 // BigInteger
      end

      classrelation 321563 // p (<unidirectional association>)
	relation 321563 --->
	  a role_name "p" const_relation private
	    comment " Prime
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 321563 // p (<unidirectional association>)
	  b parent class_ref 166299 // BigInteger
      end

      classrelation 321691 // q (<unidirectional association>)
	relation 321691 --->
	  a role_name "q" const_relation private
	    comment " Sub-prime
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 321691 // q (<unidirectional association>)
	  b parent class_ref 166299 // BigInteger
      end

      classrelation 321819 // g (<unidirectional association>)
	relation 321819 --->
	  a role_name "g" const_relation private
	    comment " Base
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 321819 // g (<unidirectional association>)
	  b parent class_ref 166299 // BigInteger
      end

      operation 946331 "DSAPrivateKeySpec"
	public explicit_return_type ""
	nparams 4
	  param inout name "x" type class_ref 166299 // BigInteger
	  param inout name "p" type class_ref 166299 // BigInteger
	  param inout name "q" type class_ref 166299 // BigInteger
	  param inout name "g" type class_ref 166299 // BigInteger
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code DSAPrivateKeySpec} with the specified private key,
prime, sub-prime and base.

@param x
           the private key {@code x}.
@param p
           the prime {@code p}.
@param q
           the sub-prime {@code q}.
@param g
           the base {@code g}."
      end

      operation 946459 "getG"
	public return_type class_ref 166299 // BigInteger
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the base {@code g}.

@return the base {@code g}."
      end

      operation 946587 "getP"
	public return_type class_ref 166299 // BigInteger
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the prime {@code p}.

@return the prime {@code p}."
      end

      operation 946715 "getQ"
	public return_type class_ref 166299 // BigInteger
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the sub-prime {@code q}.

@return the sub-prime {@code q}."
      end

      operation 946843 "getX"
	public return_type class_ref 166299 // BigInteger
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the private key {@code x}.

@return the private key {@code x}."
      end
    end

    class 217627 "DSAPublicKeySpec"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The parameters specifying a DSA public key."
      classrelation 321947 // <realization>
	relation 321947 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 321947 // <realization>
	  b parent class_ref 202395 // KeySpec
      end

      classrelation 322075 // y (<unidirectional association>)
	relation 322075 --->
	  a role_name "y" const_relation private
	    comment " Public key
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 322075 // y (<unidirectional association>)
	  b parent class_ref 166299 // BigInteger
      end

      classrelation 322203 // p (<unidirectional association>)
	relation 322203 --->
	  a role_name "p" const_relation private
	    comment " Prime
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 322203 // p (<unidirectional association>)
	  b parent class_ref 166299 // BigInteger
      end

      classrelation 322331 // q (<unidirectional association>)
	relation 322331 --->
	  a role_name "q" const_relation private
	    comment " Sub-prime
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 322331 // q (<unidirectional association>)
	  b parent class_ref 166299 // BigInteger
      end

      classrelation 322459 // g (<unidirectional association>)
	relation 322459 --->
	  a role_name "g" const_relation private
	    comment " Base
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 322459 // g (<unidirectional association>)
	  b parent class_ref 166299 // BigInteger
      end

      operation 946971 "DSAPublicKeySpec"
	public explicit_return_type ""
	nparams 4
	  param inout name "y" type class_ref 166299 // BigInteger
	  param inout name "p" type class_ref 166299 // BigInteger
	  param inout name "q" type class_ref 166299 // BigInteger
	  param inout name "g" type class_ref 166299 // BigInteger
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code DSAPublicKeySpec} with the specified public key,
 prime, sub-prime and base.

@param y
           the public key value {@code y}.
@param p
           the prime {@code p}.
@param q
           the sub-prime {@code q}.
@param g
           the base {@code g}."
      end

      operation 947099 "getG"
	public return_type class_ref 166299 // BigInteger
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the base {@code g}.

@return the base {@code g}."
      end

      operation 947227 "getP"
	public return_type class_ref 166299 // BigInteger
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the prime {@code p}.

@return the prime {@code p}."
      end

      operation 947355 "getQ"
	public return_type class_ref 166299 // BigInteger
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the sub-prime {@code q}.

@return the sub-prime {@code q}."
      end

      operation 947483 "getY"
	public return_type class_ref 166299 // BigInteger
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the public key value {@code y}.

@return the public key value {@code y}."
      end
    end

    class 217755 "ECField"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The base interface for a Finite Field of an Elliptic Curve."
      operation 947611 "getFieldSize"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the size of the field (in bits).

@return the size of the field (in bits)."
      end
    end

    class 217883 "ECFieldF2m"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The parameters specifying a <i>characteristic 2 finite field</i> of an
elliptic curve."
      classrelation 322587 // <realization>
	relation 322587 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 322587 // <realization>
	  b parent class_ref 217755 // ECField
      end

      attribute 263835 "TPB_MID_LEN"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Mid terms array length for trinomial basis"
      end

      attribute 263963 "PPB_MID_LEN"
	class_attribute const_attribute private explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Mid terms array length for pentanomial basis"
      end

      attribute 264091 "TPB_LEN"
	class_attribute const_attribute private explicit_type "int"
	init_value " TPB_MID_LEN + 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " All terms number for trinomial basis"
      end

      attribute 264219 "PPB_LEN"
	class_attribute const_attribute private explicit_type "int"
	init_value " PPB_MID_LEN + 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " All terms number for pentanomial basis"
      end

      attribute 264347 "m"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " m value"
      end

      classrelation 322715 // rp (<unidirectional association>)
	relation 322715 --->
	  a role_name "rp" const_relation private
	    comment " Reduction polynomial
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 322715 // rp (<unidirectional association>)
	  b parent class_ref 166299 // BigInteger
      end

      attribute 264475 "ks"
	const_attribute private explicit_type "int"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Mid term(s) of reduction polynomial"
      end

      operation 947739 "ECFieldF2m"
	public explicit_return_type ""
	nparams 1
	  param in name "m" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code ECFieldF2m} with {@code 2^m} elements with a normal
basis.

@param m
           the exponent {@code m} for the number of elements.
@throws IllegalArgumentException
            if {@code m <= zero}."
      end

      operation 947867 "ECFieldF2m"
	public explicit_return_type ""
	nparams 2
	  param in name "m" explicit_type "int"
	  param inout name "rp" type class_ref 166299 // BigInteger
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code ECFieldF2m} with {@code 2^m} elements with a polynomial
basis and the reduction polynomial based on {@code rp}.
<p>
The reduction polynomial must be either <i>trinomial</i> or
<i>pentanomial</i>.

@param m
           the exponent {@code m} for the number of elements.
@param rp
           the base of the reduction polynomial with the n-th bit
           corresponding to the n-th coefficient of the reduction
           polynomial.
@throws IllegalArgumentException
            if {@code m <= zero} or the {@code rp} is invalid."
      end

      operation 947995 "ECFieldF2m"
	public explicit_return_type ""
	nparams 2
	  param in name "m" explicit_type "int"
	  param inout name "ks" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code ECFieldF2m} with {@code 2^m} elements with
a polynomial basis and the reduction polynomial based on {@code ks}.
<p>
The reduction polynomial must be either <i>trinomial</i> or
<i>pentanomial</i>.

@param m
           the exponent {@code m} for the number of elements.
@param ks
           the base of the reduction polynomial with coefficients
           given in descending order.
@throws IllegalArgumentException
            if {@code m <= zero} or the reduction polynomial is not
            valid."
      end

      operation 948123 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the specified object equals to this finite field.

@param obj
           the object to compare to this finite field.
@return {@code true} if the specified object is equal to this finite field,
        otherwise {@code false}."
      end

      operation 948251 "getFieldSize"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the size of this finite field (in bits).

@return the size of this finite field (in bits)."
      end

      operation 948379 "getM"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the exponent {@code m} for this finite field, with {@code 2^m} as
the number of elements.

@return the exponent {@code m} for this finite field"
      end

      operation 948507 "getMidTermsOfReductionPolynomial"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a copy of the integer array containing the order of the middle
term(s) of the reduction polynomial for a polynomial basis.

@return a copy of the integer array containing the order of the middle
        term(s) of the reduction polynomial for a polynomial basis or
        {@code null} for a normal basis."
      end

      operation 948635 "getReductionPolynomial"
	public return_type class_ref 166299 // BigInteger
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the base of the reduction polynomial with the n-th bit
corresponding to the n-th coefficient of the reduction polynomial for a
polynomial basis.

@return the base of the reduction polynomial with the n-th bit
        corresponding to the n-th coefficient of the reduction polynomial
        for a polynomial basis or {@code null} for a normal basis."
      end

      operation 948763 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the hashcode value for this finite field.

@return the hashcode value for this finite field."
      end
    end

    class 218011 "ECFieldFp"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The parameters specifying a <i>prime finite field</i> of an
elliptic curve."
      classrelation 322843 // <realization>
	relation 322843 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 322843 // <realization>
	  b parent class_ref 217755 // ECField
      end

      classrelation 322971 // p (<unidirectional association>)
	relation 322971 --->
	  a role_name "p" const_relation private
	    comment " Prime
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 322971 // p (<unidirectional association>)
	  b parent class_ref 166299 // BigInteger
      end

      operation 948891 "ECFieldFp"
	public explicit_return_type ""
	nparams 1
	  param inout name "p" type class_ref 166299 // BigInteger
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new prime finite field of an elliptic curve with the specified
prime {@code p}.

@param p
           the prime value {@code p}.
@throws IllegalArgumentException
            if {@code p <= zero}."
      end

      operation 949019 "getFieldSize"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the size of the finite field (in bits).

@return the size of the finite field (in bits)."
      end

      operation 949147 "getP"
	public return_type class_ref 166299 // BigInteger
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the prime value {@code p} for this finite field.

@return the prime value {@code p} for this finite field."
      end

      operation 949275 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the specified object is equal to this finite field.

@param obj
           the object to compare to this finite field.
@return {@code true} if the specified object is equal to this finite field,
        otherwise {@code false}."
      end

      operation 949403 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the hashcode value for this finite field.

@return the hashcode value for this finite field."
      end
    end

    class 218139 "ECGenParameterSpec"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The parameter specification used to generate elliptic curve domain parameters."
      classrelation 323099 // <realization>
	relation 323099 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 323099 // <realization>
	  b parent class_ref 196123 // AlgorithmParameterSpec
      end

      classrelation 323227 // name (<unidirectional association>)
	relation 323227 --->
	  a role_name "name" const_relation private
	    comment " Standard (or predefined) name for EC domain
 parameters to be generated
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 323227 // name (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      operation 949531 "ECGenParameterSpec"
	public explicit_return_type ""
	nparams 1
	  param inout name "name" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code ECGenParameterSpec} with the specified standard or
predefined name of the to-be-generated domain parameter.

@param name
           the name of the elliptic curve domain parameter."
      end

      operation 949659 "getName"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name (standard or predefined) of the to-be-generated elliptic
curve domain parameter.

@return the name"
      end
    end

    class 218267 "EllipticCurve"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "An Elliptic Curve with its necessary values."
      classrelation 325147 // field (<unidirectional association>)
	relation 325147 --->
	  a role_name "field" const_relation private
	    comment " Underlying finite field
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 325147 // field (<unidirectional association>)
	  b parent class_ref 217755 // ECField
      end

      classrelation 325275 // a (<unidirectional association>)
	relation 325275 --->
	  a role_name "a" const_relation private
	    comment " The first coefficient of the equation defining this elliptic curve
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 325275 // a (<unidirectional association>)
	  b parent class_ref 166299 // BigInteger
      end

      classrelation 325403 // b (<unidirectional association>)
	relation 325403 --->
	  a role_name "b" const_relation private
	    comment " The second coefficient of the equation defining this elliptic curve
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 325403 // b (<unidirectional association>)
	  b parent class_ref 166299 // BigInteger
      end

      attribute 264731 "seed"
	const_attribute private explicit_type "byte"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Bytes used during this elliptic curve generation,
 if it was generated randomly"
      end

      attribute 264859 "hash"
	volatile private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Hash code"
      end

      operation 952219 "EllipticCurve"
	public explicit_return_type ""
	nparams 4
	  param inout name "field" type class_ref 217755 // ECField
	  param inout name "a" type class_ref 166299 // BigInteger
	  param inout name "b" type class_ref 166299 // BigInteger
	  param inout name "seed" explicit_type "byte"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code EllipticCurve} with the specified field,
coefficients and seed.

@param field
           the finite field of this elliptic curve.
@param a
           the coefficient {@code a}.
@param b
           the coefficient {@code b}.
@param seed
           the seed used for the generation of the curve.
@throws IllegalArgumentException
            if the specified coefficients are not in the specified field."
      end

      operation 952347 "EllipticCurve"
	public explicit_return_type ""
	nparams 3
	  param inout name "field" type class_ref 217755 // ECField
	  param inout name "a" type class_ref 166299 // BigInteger
	  param inout name "b" type class_ref 166299 // BigInteger
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code EllipticCurve} with the specified field and
coefficients.

@param field
           the finite field of this elliptic curve.
@param a
           the coefficient {@code a}.
@param b
           the coefficient {@code b}.
@throws IllegalArgumentException
            if the specified coefficients are not in the specified field."
      end

      operation 952475 "getA"
	public return_type class_ref 166299 // BigInteger
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the coefficient {@code a} of this elliptic curve.

@return the coefficient {@code a} of this elliptic curve."
      end

      operation 952603 "getB"
	public return_type class_ref 166299 // BigInteger
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the coefficient {@code b} of this elliptic curve.

@return the coefficient {@code b} of this elliptic curve."
      end

      operation 952731 "getField"
	public return_type class_ref 217755 // ECField
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the finite field of this elliptic curve.

@return the finite field of this elliptic curve."
      end

      operation 952859 "getSeed"
	public explicit_return_type "byte"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a copy of the seed that was used to generate this elliptic curve.

@return a copy of the seed that was used to generate this elliptic curve,
        or {@code null} if none specified."
      end

      operation 952987 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "other" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the specified object equals to this elliptic curve.

@param other
           the object to compare.
@return {@code true} if the specified object is equal to this elliptic
        curve, otherwise {@code false}."
      end

      operation 953115 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the hashcode of this elliptic curve.

@return the hashcode of this elliptic curve."
      end
    end

    class 218395 "ECPrivateKeySpec"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The parameters specifying an Elliptic Curve (EC) private key."
      classrelation 324379 // <realization>
	relation 324379 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 324379 // <realization>
	  b parent class_ref 202395 // KeySpec
      end

      classrelation 324507 // s (<unidirectional association>)
	relation 324507 --->
	  a role_name "s" const_relation private
	    comment " Private value associated with this key
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 324507 // s (<unidirectional association>)
	  b parent class_ref 166299 // BigInteger
      end

      classrelation 324635 // params (<unidirectional association>)
	relation 324635 --->
	  a role_name "params" const_relation private
	    comment " Elliptic Curve domain parameters associated with this key
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 324635 // params (<unidirectional association>)
	  b parent class_ref 216091 // ECParameterSpec
      end

      operation 951451 "ECPrivateKeySpec"
	public explicit_return_type ""
	nparams 2
	  param inout name "s" type class_ref 166299 // BigInteger
	  param inout name "params" type class_ref 216091 // ECParameterSpec
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code ECPrivateKeySpec} with the specified private value
{@code S} and parameter specification.

@param s
           the private value {@code S}.
@param params
           the domain parameter specification."
      end

      operation 951579 "getParams"
	public return_type class_ref 216091 // ECParameterSpec
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the domain parameter specification.

@return the domain parameter specification."
      end

      operation 951707 "getS"
	public return_type class_ref 166299 // BigInteger
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the private value {@code S}.

@return the private value {@code S}."
      end
    end

    class 218523 "ECPublicKeySpec"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The parameters specifying an Elliptic Curve (EC) public key."
      classrelation 324763 // <realization>
	relation 324763 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 324763 // <realization>
	  b parent class_ref 202395 // KeySpec
      end

      classrelation 324891 // w (<unidirectional association>)
	relation 324891 --->
	  a role_name "w" const_relation private
	    comment " The public point
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 324891 // w (<unidirectional association>)
	  b parent class_ref 216475 // ECPoint
      end

      classrelation 325019 // params (<unidirectional association>)
	relation 325019 --->
	  a role_name "params" const_relation private
	    comment " The associated elliptic curve domain parameters
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 325019 // params (<unidirectional association>)
	  b parent class_ref 216091 // ECParameterSpec
      end

      operation 951835 "ECPublicKeySpec"
	public explicit_return_type ""
	nparams 2
	  param inout name "w" type class_ref 216475 // ECPoint
	  param inout name "params" type class_ref 216091 // ECParameterSpec
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code ECPublicKey} with the specified public elliptic
curve point and parameter specification.

@param w
           the public elliptic curve point {@code W}.
@param params
           the domain parameter specification.
@throws IllegalArgumentException
            if the specified point {@code W} is at infinity."
      end

      operation 951963 "getParams"
	public return_type class_ref 216091 // ECParameterSpec
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the domain parameter specification.

@return the domain parameter specification."
      end

      operation 952091 "getW"
	public return_type class_ref 216475 // ECPoint
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the public elliptic curve point {@code W}.

@return the public elliptic curve point {@code W}."
      end
    end

    class 218651 "EncodedKeySpec"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The abstract key specification for a public or a private key in encoded
format."
      classrelation 325531 // <realization>
	relation 325531 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 325531 // <realization>
	  b parent class_ref 202395 // KeySpec
      end

      attribute 264987 "encodedKey"
	const_attribute private explicit_type "byte"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Encoded key"
      end

      operation 953243 "EncodedKeySpec"
	public explicit_return_type ""
	nparams 1
	  param inout name "encodedKey" explicit_type "byte"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code EncodedKeySpec} with the specified encoded key bytes.

@param encodedKey
           the encoded key bytes."
      end

      operation 953371 "getEncoded"
	public explicit_return_type "byte"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the encoded key bytes.

@return the encoded key bytes."
      end

      operation 953499 "getFormat"
	abstract public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the encoding format of this encoded key
specification.

@return the name of the encoding format of this encoded key
        specification."
      end
    end

    class 218779 "MGF1ParameterSpec"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The parameter specification for the Mask Generation Function (MGF1) in
the RSA-PSS Signature and OAEP Padding scheme.
<p>
Defined in the <a
href=\"http://www.rsa.com/rsalabs/pubs/PKCS/html/pkcs-1.html\">PKCS #1 v2.1</a>
standard"
      classrelation 325915 // <realization>
	relation 325915 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 325915 // <realization>
	  b parent class_ref 196123 // AlgorithmParameterSpec
      end

      classrelation 326043 // SHA1 (<unidirectional association>)
	relation 326043 --->
	  a role_name "SHA1" init_value "
        new MGF1ParameterSpec(\"SHA-1\")" class_relation const_relation public
	    comment "
The predefined MGF1 parameter specification with an \"SHA-1\" message
digest.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 326043 // SHA1 (<unidirectional association>)
	  b parent class_ref 218779 // MGF1ParameterSpec
      end

      classrelation 326171 // SHA256 (<unidirectional association>)
	relation 326171 --->
	  a role_name "SHA256" init_value "
        new MGF1ParameterSpec(\"SHA-256\")" class_relation const_relation public
	    comment "
The predefined MGF1 parameter specification with an \"SHA-256\" message
digest.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 326171 // SHA256 (<unidirectional association>)
	  b parent class_ref 218779 // MGF1ParameterSpec
      end

      classrelation 326299 // SHA384 (<unidirectional association>)
	relation 326299 --->
	  a role_name "SHA384" init_value "
        new MGF1ParameterSpec(\"SHA-384\")" class_relation const_relation public
	    comment "
The predefined MGF1 parameter specification with an \"SHA-384\" message
digest.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 326299 // SHA384 (<unidirectional association>)
	  b parent class_ref 218779 // MGF1ParameterSpec
      end

      classrelation 326427 // SHA512 (<unidirectional association>)
	relation 326427 --->
	  a role_name "SHA512" init_value "
        new MGF1ParameterSpec(\"SHA-512\")" class_relation const_relation public
	    comment "
The predefined MGF1 parameter specification with an \"SHA-512\" message
digest.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 326427 // SHA512 (<unidirectional association>)
	  b parent class_ref 218779 // MGF1ParameterSpec
      end

      classrelation 326555 // mdName (<unidirectional association>)
	relation 326555 --->
	  a role_name "mdName" const_relation private
	    comment "  Message digest algorithm name
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 326555 // mdName (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      operation 954395 "MGF1ParameterSpec"
	public explicit_return_type ""
	nparams 1
	  param inout name "mdName" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code MGF1ParameterSpec} with the specified message digest
algorithm name.

@param mdName
           the name of the message digest algorithm."
      end

      operation 954523 "getDigestAlgorithm"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the message digest algorithm.

@return the name of the message digest algorithm."
      end
    end

    class 218907 "PKCS8EncodedKeySpec"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The key specification for an encoded private key in ASN.1 format as defined
in the PKCS#8 standard."
      classrelation 326683 // <generalisation>
	relation 326683 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 326683 // <generalisation>
	  b parent class_ref 218651 // EncodedKeySpec
      end

      operation 954651 "PKCS8EncodedKeySpec"
	public explicit_return_type ""
	nparams 1
	  param inout name "encodedKey" explicit_type "byte"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code PKCS8EncodedKeySpec} with the specified encoded key
bytes.

@param encodedKey
           the encoded key bytes."
      end

      operation 954779 "getEncoded"
	public explicit_return_type "byte"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a copy of the encoded key bytes.

@return a copy of the encoded key bytes."
      end

      operation 954907 "getFormat"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the encoding format of this encoded key
specification.

@return the string \"PKCS#8\"."
      end
    end

    class 219035 "PSSParameterSpec"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The parameter specification for the RSA-PSS Signature scheme.
<p>
Defined in the <a
href=\"http://www.rsa.com/rsalabs/pubs/PKCS/html/pkcs-1.html\">PKCS #1 v2.1</a>
standard."
      classrelation 326811 // <realization>
	relation 326811 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 326811 // <realization>
	  b parent class_ref 196123 // AlgorithmParameterSpec
      end

      classrelation 326939 // DEFAULT (<unidirectional association>)
	relation 326939 --->
	  a role_name "DEFAULT" init_value " new PSSParameterSpec(20)" class_relation const_relation public
	    comment "
The default parameter specification. It specifies the following parameters:
<ul>
<li>message digest: {@code \"SHA-1\"}</li>
<li>mask generation function (<i>mgf</i>): {@code \"MGF1\"}</li>
<li>parameters for the <i>mgf</i>: {@link MGF1ParameterSpec#SHA1}</li>
<li>salt length: {@code 20}</li>
<li>trailer field: {@code -1}</li>
</ul>

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 326939 // DEFAULT (<unidirectional association>)
	  b parent class_ref 219035 // PSSParameterSpec
      end

      classrelation 327067 // mdName (<unidirectional association>)
	relation 327067 --->
	  a role_name "mdName" const_relation private
	    comment " Message digest algorithm name
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 327067 // mdName (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 327195 // mgfName (<unidirectional association>)
	relation 327195 --->
	  a role_name "mgfName" const_relation private
	    comment " Mask generation function algorithm name
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 327195 // mgfName (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 327323 // mgfSpec (<unidirectional association>)
	relation 327323 --->
	  a role_name "mgfSpec" const_relation private
	    comment " Mask generation function parameters
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 327323 // mgfSpec (<unidirectional association>)
	  b parent class_ref 196123 // AlgorithmParameterSpec
      end

      attribute 265371 "trailerField"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Trailer field value"
      end

      attribute 265499 "saltLen"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Salt length in bits"
      end

      operation 955035 "PSSParameterSpec"
	public explicit_return_type ""
	nparams 1
	  param in name "saltLen" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code PSSParameterSpec} with the specified salt length
and the default values.

@param saltLen
           the salt length (in bits).
@throws IllegalArgumentException
            if {@code saltLen} is negative."
      end

      operation 955163 "PSSParameterSpec"
	public explicit_return_type ""
	nparams 5
	  param inout name "mdName" type class_ref 3399692 // String
	  param inout name "mgfName" type class_ref 3399692 // String
	  param inout name "mgfSpec" type class_ref 196123 // AlgorithmParameterSpec
	  param in name "saltLen" explicit_type "int"
	  param in name "trailerField" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code PSSParameterSpec} with the specified message digest
name, mask generation function name, mask generation function parameters,
salt length, and trailer field value.

@param mdName
           the name of the message digest algorithm.
@param mgfName
           the name of the mask generation function algorithm.
@param mgfSpec
           the parameter for the mask generation function algorithm.
@param saltLen
           the salt length (in bits).
@param trailerField
           the trailer field value.
@throws IllegalArgumentException
            if {@code saltLen} or {@code trailerField} is negative."
      end

      operation 955291 "getSaltLength"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the length of the salt (in bits).

@return the length of the salt (in bits)."
      end

      operation 955419 "getDigestAlgorithm"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the message digest algorithm.

@return the name of the message digest algorithm."
      end

      operation 955547 "getMGFAlgorithm"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the mask generation function algorithm.

@return the name of the mask generation function algorithm."
      end

      operation 955675 "getMGFParameters"
	public return_type class_ref 196123 // AlgorithmParameterSpec
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the parameter for the mask generation function algorithm.

@return the parameter for the mask generation function algorithm, or
        {@code null} if none specified."
      end

      operation 955803 "getTrailerField"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the trailer field value.

@return the trailer field value."
      end
    end

    class 219163 "RSAKeyGenParameterSpec"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The parameter specification for generating an RSA key pair."
      classrelation 327451 // <realization>
	relation 327451 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 327451 // <realization>
	  b parent class_ref 196123 // AlgorithmParameterSpec
      end

      classrelation 327579 // F0 (<unidirectional association>)
	relation 327579 --->
	  a role_name "F0" init_value " BigInteger.valueOf(3L)" class_relation const_relation public
	    comment "
The value of the public exponent {@code F0} = 3.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 327579 // F0 (<unidirectional association>)
	  b parent class_ref 166299 // BigInteger
      end

      classrelation 327707 // F4 (<unidirectional association>)
	relation 327707 --->
	  a role_name "F4" init_value " BigInteger.valueOf(65537L)" class_relation const_relation public
	    comment "
The value of the public exponent {@code F4} = 65537.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 327707 // F4 (<unidirectional association>)
	  b parent class_ref 166299 // BigInteger
      end

      attribute 265627 "keysize"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Key size"
      end

      classrelation 327835 // publicExponent (<unidirectional association>)
	relation 327835 --->
	  a role_name "publicExponent" const_relation private
	    comment " Public Exponent
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 327835 // publicExponent (<unidirectional association>)
	  b parent class_ref 166299 // BigInteger
      end

      operation 955931 "RSAKeyGenParameterSpec"
	public explicit_return_type ""
	nparams 2
	  param in name "keysize" explicit_type "int"
	  param inout name "publicExponent" type class_ref 166299 // BigInteger
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code RSAKeyGenParameterSpec} with the specified key size
and public exponent.

@param keysize
           the size of the modulus (number of bits).
@param publicExponent
           the value of the public exponent."
      end

      operation 956059 "getKeysize"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the size of the modulus (number of bits).

@return the size of the modulus (number of bits)."
      end

      operation 956187 "getPublicExponent"
	public return_type class_ref 166299 // BigInteger
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of the public exponent.

@return the value of the public exponent."
      end
    end

    class 219291 "RSAMultiPrimePrivateCrtKeySpec"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The key specification of a RSA multi-prime private key with the Chinese
Remainder Theorem (CRT) information values used.
<p>
Defined in the <a
href=\"http://www.rsa.com/rsalabs/pubs/PKCS/html/pkcs-1.html\">PKCS #1 v2.1</a>
standard."
      classrelation 328347 // <generalisation>
	relation 328347 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 328347 // <generalisation>
	  b parent class_ref 219419 // RSAPrivateKeySpec
      end

      classrelation 328475 // publicExponent (<unidirectional association>)
	relation 328475 --->
	  a role_name "publicExponent" const_relation private
	    comment " Public Exponent
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 328475 // publicExponent (<unidirectional association>)
	  b parent class_ref 166299 // BigInteger
      end

      classrelation 328603 // primeP (<unidirectional association>)
	relation 328603 --->
	  a role_name "primeP" const_relation private
	    comment " Prime P
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 328603 // primeP (<unidirectional association>)
	  b parent class_ref 166299 // BigInteger
      end

      classrelation 328731 // primeQ (<unidirectional association>)
	relation 328731 --->
	  a role_name "primeQ" const_relation private
	    comment " Prime Q
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 328731 // primeQ (<unidirectional association>)
	  b parent class_ref 166299 // BigInteger
      end

      classrelation 328859 // primeExponentP (<unidirectional association>)
	relation 328859 --->
	  a role_name "primeExponentP" const_relation private
	    comment " Prime Exponent P
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 328859 // primeExponentP (<unidirectional association>)
	  b parent class_ref 166299 // BigInteger
      end

      classrelation 328987 // primeExponentQ (<unidirectional association>)
	relation 328987 --->
	  a role_name "primeExponentQ" const_relation private
	    comment " Prime Exponent Q
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 328987 // primeExponentQ (<unidirectional association>)
	  b parent class_ref 166299 // BigInteger
      end

      classrelation 329115 // crtCoefficient (<unidirectional association>)
	relation 329115 --->
	  a role_name "crtCoefficient" const_relation private
	    comment " CRT Coefficient
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 329115 // crtCoefficient (<unidirectional association>)
	  b parent class_ref 166299 // BigInteger
      end

      classrelation 329243 // otherPrimeInfo (<unidirectional association>)
	relation 329243 --->
	  a role_name "otherPrimeInfo" multiplicity "[]" const_relation private
	    comment " Other Prime Info
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 329243 // otherPrimeInfo (<unidirectional association>)
	  b parent class_ref 216987 // RSAOtherPrimeInfo
      end

      operation 956699 "RSAMultiPrimePrivateCrtKeySpec"
	public explicit_return_type ""
	nparams 9
	  param inout name "modulus" type class_ref 166299 // BigInteger
	  param inout name "publicExponent" type class_ref 166299 // BigInteger
	  param inout name "privateExponent" type class_ref 166299 // BigInteger
	  param inout name "primeP" type class_ref 166299 // BigInteger
	  param inout name "primeQ" type class_ref 166299 // BigInteger
	  param inout name "primeExponentP" type class_ref 166299 // BigInteger
	  param inout name "primeExponentQ" type class_ref 166299 // BigInteger
	  param inout name "crtCoefficient" type class_ref 166299 // BigInteger
	  param inout name "otherPrimeInfo" type class_ref 216987 // RSAOtherPrimeInfo
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8}[] ${p8}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code RSAMultiPrimePrivateCrtKeySpec} with the specified
modulus, public exponent, private exponent, prime factors, prime
exponents, crt coefficient, and additional primes.

@param modulus
           the modulus {@code n}.
@param publicExponent
           the public exponent {@code e}.
@param privateExponent
           the private exponent {@code d}.
@param primeP
           the prime factor {@code p} of {@code n}.
@param primeQ
           the prime factor {@code q} of {@code n}.
@param primeExponentP
           the exponent of the prime {@code p}.
@param primeExponentQ
           the exponent of the prime {@code q}.
@param crtCoefficient
           the CRT coefficient {@code q^-1 mod p}.
@param otherPrimeInfo
           the information for the additional primes or {@code null} if
           there are only the two primes ({@code p, q}).
@throws IllegalArgumentException
            if {@code otherPrimeInfo} is not null but empty."
      end

      operation 956827 "getCrtCoefficient"
	public return_type class_ref 166299 // BigInteger
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the CRT coefficient, {@code q^-1 mod p}.

@return the CRT coefficient, {@code q^-1 mod p}."
      end

      operation 956955 "getOtherPrimeInfo"
	public return_type class_ref 216987 // RSAOtherPrimeInfo
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the information for the additional primes.

@return the information for the additional primes, or {@code null} if
        there are only the two primes ({@code p, q})."
      end

      operation 957083 "getPrimeExponentP"
	public return_type class_ref 166299 // BigInteger
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the exponent of the prime {@code p}.

@return the exponent of the prime {@code p}."
      end

      operation 957211 "getPrimeExponentQ"
	public return_type class_ref 166299 // BigInteger
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the exponent of the prime {@code q}.

@return the exponent of the prime {@code q}."
      end

      operation 957339 "getPrimeP"
	public return_type class_ref 166299 // BigInteger
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the prime factor {@code p}.

@return the prime factor {@code p}."
      end

      operation 957467 "getPrimeQ"
	public return_type class_ref 166299 // BigInteger
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the prime factor {@code q}.

@return the prime factor {@code q}."
      end

      operation 957595 "getPublicExponent"
	public return_type class_ref 166299 // BigInteger
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the public exponent {@code e}.

@return the public exponent {@code e}."
      end
    end

    class 219419 "RSAPrivateKeySpec"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The key specification of a RSA private key.
<p>
Defined in the <a
href=\"http://www.rsa.com/rsalabs/pubs/PKCS/html/pkcs-1.html\">PKCS #1 v2.1</a>
standard"
      classrelation 327963 // <realization>
	relation 327963 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 327963 // <realization>
	  b parent class_ref 202395 // KeySpec
      end

      classrelation 328091 // modulus (<unidirectional association>)
	relation 328091 --->
	  a role_name "modulus" const_relation private
	    comment " Modulus
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 328091 // modulus (<unidirectional association>)
	  b parent class_ref 166299 // BigInteger
      end

      classrelation 328219 // privateExponent (<unidirectional association>)
	relation 328219 --->
	  a role_name "privateExponent" const_relation private
	    comment " Private Exponent
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 328219 // privateExponent (<unidirectional association>)
	  b parent class_ref 166299 // BigInteger
      end

      operation 956315 "RSAPrivateKeySpec"
	public explicit_return_type ""
	nparams 2
	  param inout name "modulus" type class_ref 166299 // BigInteger
	  param inout name "privateExponent" type class_ref 166299 // BigInteger
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code RSAPrivateKeySpec} with the specified modulus and
private exponent.

@param modulus
           the modulus {@code n}.
@param privateExponent
           the private exponent {@code e}"
      end

      operation 956443 "getModulus"
	public return_type class_ref 166299 // BigInteger
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the modulus {@code n}.

@return the modulus {@code n}."
      end

      operation 956571 "getPrivateExponent"
	public return_type class_ref 166299 // BigInteger
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the private exponent {@code e}.

@return the private exponent {@code e}."
      end
    end

    class 219547 "RSAPrivateCrtKeySpec"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The key specification of a RSA private key using Chinese Remainder Theorem
(CRT) values.
<p>
Defined in the <a
href=\"http://www.rsa.com/rsalabs/pubs/PKCS/html/pkcs-1.html\">PKCS #1 v2.1</a>
standard."
      classrelation 329755 // <generalisation>
	relation 329755 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 329755 // <generalisation>
	  b parent class_ref 219419 // RSAPrivateKeySpec
      end

      classrelation 329883 // publicExponent (<unidirectional association>)
	relation 329883 --->
	  a role_name "publicExponent" const_relation private
	    comment " Public Exponent
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 329883 // publicExponent (<unidirectional association>)
	  b parent class_ref 166299 // BigInteger
      end

      classrelation 330011 // primeP (<unidirectional association>)
	relation 330011 --->
	  a role_name "primeP" const_relation private
	    comment " Prime P
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 330011 // primeP (<unidirectional association>)
	  b parent class_ref 166299 // BigInteger
      end

      classrelation 330139 // primeQ (<unidirectional association>)
	relation 330139 --->
	  a role_name "primeQ" const_relation private
	    comment " Prime Q
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 330139 // primeQ (<unidirectional association>)
	  b parent class_ref 166299 // BigInteger
      end

      classrelation 330267 // primeExponentP (<unidirectional association>)
	relation 330267 --->
	  a role_name "primeExponentP" const_relation private
	    comment " Prime Exponent P
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 330267 // primeExponentP (<unidirectional association>)
	  b parent class_ref 166299 // BigInteger
      end

      classrelation 330395 // primeExponentQ (<unidirectional association>)
	relation 330395 --->
	  a role_name "primeExponentQ" const_relation private
	    comment " Prime Exponent Q
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 330395 // primeExponentQ (<unidirectional association>)
	  b parent class_ref 166299 // BigInteger
      end

      classrelation 330523 // crtCoefficient (<unidirectional association>)
	relation 330523 --->
	  a role_name "crtCoefficient" const_relation private
	    comment " CRT Coefficient
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 330523 // crtCoefficient (<unidirectional association>)
	  b parent class_ref 166299 // BigInteger
      end

      operation 958235 "RSAPrivateCrtKeySpec"
	public explicit_return_type ""
	nparams 8
	  param inout name "modulus" type class_ref 166299 // BigInteger
	  param inout name "publicExponent" type class_ref 166299 // BigInteger
	  param inout name "privateExponent" type class_ref 166299 // BigInteger
	  param inout name "primeP" type class_ref 166299 // BigInteger
	  param inout name "primeQ" type class_ref 166299 // BigInteger
	  param inout name "primeExponentP" type class_ref 166299 // BigInteger
	  param inout name "primeExponentQ" type class_ref 166299 // BigInteger
	  param inout name "crtCoefficient" type class_ref 166299 // BigInteger
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code RSAMultiPrimePrivateCrtKeySpec} with the specified
modulus, public exponent, private exponent, prime factors, prime
exponents, crt coefficient, and additional primes.

@param modulus
           the modulus {@code n}.
@param publicExponent
           the public exponent {@code e}.
@param privateExponent
           the private exponent {@code d}.
@param primeP
           the prime factor {@code p} of {@code n}.
@param primeQ
           the prime factor {@code q} of {@code n}.
@param primeExponentP
           the exponent of the prime {@code p}.
@param primeExponentQ
           the exponent of the prime {@code q}.
@param crtCoefficient
           the CRT coefficient {@code q^-1 mod p}."
      end

      operation 958363 "getCrtCoefficient"
	public return_type class_ref 166299 // BigInteger
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the CRT coefficient, {@code q^-1 mod p}.

@return the CRT coefficient, {@code q^-1 mod p}."
      end

      operation 958491 "getPrimeExponentP"
	public return_type class_ref 166299 // BigInteger
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the exponent of the prime {@code p}.

@return the exponent of the prime {@code p}."
      end

      operation 958619 "getPrimeExponentQ"
	public return_type class_ref 166299 // BigInteger
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the exponent of the prime {@code q}.

@return the exponent of the prime {@code q}."
      end

      operation 958747 "getPrimeP"
	public return_type class_ref 166299 // BigInteger
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the prime factor {@code p}.

@return the prime factor {@code p}."
      end

      operation 958875 "getPrimeQ"
	public return_type class_ref 166299 // BigInteger
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the prime factor {@code q}.

@return the prime factor {@code q}."
      end

      operation 959003 "getPublicExponent"
	public return_type class_ref 166299 // BigInteger
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the public exponent {@code e}.

@return the public exponent {@code e}."
      end
    end

    class 219675 "RSAPublicKeySpec"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The key specification of a RSA public key.
<p>
Defined in the <a
href=\"http://www.rsa.com/rsalabs/pubs/PKCS/html/pkcs-1.html\">PKCS #1 v2.1</a>
standard."
      classrelation 330651 // <realization>
	relation 330651 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 330651 // <realization>
	  b parent class_ref 202395 // KeySpec
      end

      classrelation 330779 // modulus (<unidirectional association>)
	relation 330779 --->
	  a role_name "modulus" const_relation private
	    comment " Modulus
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 330779 // modulus (<unidirectional association>)
	  b parent class_ref 166299 // BigInteger
      end

      classrelation 330907 // publicExponent (<unidirectional association>)
	relation 330907 --->
	  a role_name "publicExponent" const_relation private
	    comment " Public Exponent
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 330907 // publicExponent (<unidirectional association>)
	  b parent class_ref 166299 // BigInteger
      end

      operation 959131 "RSAPublicKeySpec"
	public explicit_return_type ""
	nparams 2
	  param inout name "modulus" type class_ref 166299 // BigInteger
	  param inout name "publicExponent" type class_ref 166299 // BigInteger
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code RSAPublicKeySpec} with the specified modulus and
public exponent.

@param modulus
           the modulus {@code n}.
@param publicExponent
           the public exponent {@code d}."
      end

      operation 959259 "getModulus"
	public return_type class_ref 166299 // BigInteger
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the modulus {@code n}.

@return the modulus {@code n}."
      end

      operation 959387 "getPublicExponent"
	public return_type class_ref 166299 // BigInteger
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the public exponent {@code d}.

@return the public exponent {@code d}."
      end
    end

    class 219803 "X509EncodedKeySpec"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The key specification of an X.509 encoded key in ASN.1 format."
      classrelation 331035 // <generalisation>
	relation 331035 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 331035 // <generalisation>
	  b parent class_ref 218651 // EncodedKeySpec
      end

      operation 959515 "X509EncodedKeySpec"
	public explicit_return_type ""
	nparams 1
	  param inout name "encodedKey" explicit_type "byte"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code X509EncodedKeySpec} with the specified encoded key
bytes.

@param encodedKey
           the encoded key bytes."
      end

      operation 959643 "getEncoded"
	public explicit_return_type "byte"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the encoded key bytes.

@return the encoded key bytes."
      end

      operation 959771 "getFormat"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the encoding format of this encoded key
specification.

@return the string \"X.509\"."
      end
    end
  end

  deploymentview 130843 "spec"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 200219 "AlgorithmParameterSpec"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 196123 // AlgorithmParameterSpec
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 200347 "DSAParameterSpec"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.math.BigInteger;
import java.security.interfaces.DSAParams;
${definition}"
      associated_classes
	class_ref 217371 // DSAParameterSpec
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 200475 "KeySpec"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 202395 // KeySpec
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 200603 "DSAPrivateKeySpec"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.math.BigInteger;
${definition}"
      associated_classes
	class_ref 217499 // DSAPrivateKeySpec
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 200731 "DSAPublicKeySpec"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.math.BigInteger;
${definition}"
      associated_classes
	class_ref 217627 // DSAPublicKeySpec
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 200859 "ECField"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 217755 // ECField
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 200987 "ECFieldF2m"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.math.BigInteger;
import java.util.Arrays;
${definition}"
      associated_classes
	class_ref 217883 // ECFieldF2m
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 201115 "ECFieldFp"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.math.BigInteger;
${definition}"
      associated_classes
	class_ref 218011 // ECFieldFp
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 201243 "ECGenParameterSpec"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 218139 // ECGenParameterSpec
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 201371 "ECParameterSpec"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.math.BigInteger;
${definition}"
      associated_classes
	class_ref 216091 // ECParameterSpec
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 201499 "ECPoint"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.math.BigInteger;
${definition}"
      associated_classes
	class_ref 216475 // ECPoint
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 201627 "ECPrivateKeySpec"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.math.BigInteger;
${definition}"
      associated_classes
	class_ref 218395 // ECPrivateKeySpec
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 201755 "ECPublicKeySpec"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 218523 // ECPublicKeySpec
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 201883 "EllipticCurve"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.math.BigInteger;
import java.util.Arrays;
${definition}"
      associated_classes
	class_ref 218267 // EllipticCurve
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 202011 "EncodedKeySpec"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 218651 // EncodedKeySpec
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 202139 "InvalidKeySpecException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.security.GeneralSecurityException;
${definition}"
      associated_classes
	class_ref 202523 // InvalidKeySpecException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 202267 "InvalidParameterSpecException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.security.GeneralSecurityException;
${definition}"
      associated_classes
	class_ref 196635 // InvalidParameterSpecException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 202395 "MGF1ParameterSpec"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 218779 // MGF1ParameterSpec
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 202523 "PKCS8EncodedKeySpec"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 218907 // PKCS8EncodedKeySpec
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 202651 "PSSParameterSpec"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 219035 // PSSParameterSpec
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 202779 "RSAKeyGenParameterSpec"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.math.BigInteger;
${definition}"
      associated_classes
	class_ref 219163 // RSAKeyGenParameterSpec
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 202907 "RSAPrivateKeySpec"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.math.BigInteger;
${definition}"
      associated_classes
	class_ref 219419 // RSAPrivateKeySpec
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 203035 "RSAMultiPrimePrivateCrtKeySpec"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.math.BigInteger;
${definition}"
      associated_classes
	class_ref 219291 // RSAMultiPrimePrivateCrtKeySpec
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 203163 "RSAOtherPrimeInfo"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.math.BigInteger;
${definition}"
      associated_classes
	class_ref 216987 // RSAOtherPrimeInfo
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 203291 "RSAPrivateCrtKeySpec"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.math.BigInteger;
${definition}"
      associated_classes
	class_ref 219547 // RSAPrivateCrtKeySpec
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 203419 "RSAPublicKeySpec"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.math.BigInteger;
${definition}"
      associated_classes
	class_ref 219675 // RSAPublicKeySpec
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 203547 "X509EncodedKeySpec"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 219803 // X509EncodedKeySpec
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end
  end
end
