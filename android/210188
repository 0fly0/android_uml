format 74
"audiofx" // framework::base::core::java::android::media::audiofx
  revision 1
  modified_by 12 "shchen"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "/home/shchen/work/jellybean/framework/base/media/java/android/media/audiofx/"
  java_package "android.media.audiofx"
  classview 189580 "audiofx"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 1214604 "AcousticEchoCanceler"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Acoustic Echo Canceler (AEC).
<p>Acoustic Echo Canceler (AEC) is an audio pre-processing which removes the contribution of the
signal received from the remote party from the captured audio signal.
<p>AEC is used by voice communication applications (voice chat, video conferencing, SIP calls)
where the presence of echo with significant delay in the signal received from the remote party
is highly disturbing. AEC is often used in conjunction with noise suppression (NS).
<p>An application creates an AcousticEchoCanceler object to instantiate and control an AEC
engine in the audio capture path.
<p>To attach the AcousticEchoCanceler to a particular {@link android.media.AudioRecord},
specify the audio session ID of this AudioRecord when creating the AcousticEchoCanceler.
The audio session is retrieved by calling
{@link android.media.AudioRecord#getAudioSessionId()} on the AudioRecord instance.
<p>On some devices, an AEC can be inserted by default in the capture path by the platform
according to the {@link android.media.MediaRecorder.AudioSource} used. The application should
call AcousticEchoCanceler.getEnable() after creating the AEC to check the default AEC activation
state on a particular AudioRecord session.
<p>See {@link android.media.audiofx.AudioEffect} class for more details on
controlling audio effects."
      classrelation 2475916 // <generalisation>
	relation 2475916 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 2475916 // <generalisation>
	  b parent class_ref 1214732 // AudioEffect
      end

      attribute 4439308 "TAG"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"AcousticEchoCanceler\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 6871180 "isAvailable"
	class_operation public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks if the device implements acoustic echo cancellation.
@return true if the device implements acoustic echo cancellation, false otherwise."
      end

      operation 6871308 "create"
	class_operation public return_type class_ref 1214604 // AcousticEchoCanceler
	nparams 1
	  param in name "audioSession" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an AcousticEchoCanceler and attaches it to the AudioRecord on the audio
session specified.
@param audioSession system wide unique audio session identifier. The AcousticEchoCanceler
will be applied to the AudioRecord with the same audio session.
@return AcousticEchoCanceler created or null if the device does not implement AEC."
      end

      operation 6871436 "AcousticEchoCanceler"
	private explicit_return_type ""
	nparams 1
	  param in name "audioSession" explicit_type "int"
	nexceptions 3
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	  exception class_ref 806284 // RuntimeException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Class constructor.
<p> The constructor is not guarantied to succeed and throws the following exceptions:
<ul>
 <li>IllegalArgumentException is thrown if the device does not implement an AEC</li>
 <li>UnsupportedOperationException is thrown is the resources allocated to audio
 pre-procesing are currently exceeded.</li>
 <li>RuntimeException is thrown if a memory allocation error occurs.</li>
</ul>

@param audioSession system wide unique audio session identifier. The AcousticEchoCanceler
will be applied to the AudioRecord with the same audio session.

@throws java.lang.IllegalArgumentException
@throws java.lang.UnsupportedOperationException
@throws java.lang.RuntimeException"
      end
    end

    class 1214732 "AudioEffect"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "AudioEffect is the base class for controlling audio effects provided by the android audio
framework.
<p>Applications should not use the AudioEffect class directly but one of its derived classes to
control specific effects:
<ul>
  <li> {@link android.media.audiofx.Equalizer}</li>
  <li> {@link android.media.audiofx.Virtualizer}</li>
  <li> {@link android.media.audiofx.BassBoost}</li>
  <li> {@link android.media.audiofx.PresetReverb}</li>
  <li> {@link android.media.audiofx.EnvironmentalReverb}</li>
</ul>
<p>To apply the audio effect to a specific AudioTrack or MediaPlayer instance,
the application must specify the audio session ID of that instance when creating the AudioEffect.
(see {@link android.media.MediaPlayer#getAudioSessionId()} for details on audio sessions).
<p>NOTE: attaching insert effects (equalizer, bass boost, virtualizer) to the global audio output
mix by use of session 0 is deprecated.
<p>Creating an AudioEffect object will create the corresponding effect engine in the audio
framework if no instance of the same effect type exists in the specified audio session.
If one exists, this instance will be used.
<p>The application creating the AudioEffect object (or a derived class) will either receive
control of the effect engine or not depending on the priority parameter. If priority is higher
than the priority used by the current effect engine owner, the control will be transfered to the
new object. Otherwise control will remain with the previous object. In this case, the new
application will be notified of changes in effect engine state or control ownership by the
appropiate listener."
      extra_member 151436 "initialization"
	
	cpp "" ""
	java "  static {
        System.loadLibrary(\"audioeffect_jni\");
        native_init();
    }"
	php ""
	python ""
	idl ""
      end

      attribute 4433292 "TAG"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"AudioEffect-JAVA\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 4433420 "EFFECT_TYPE_ENV_REVERB"
	class_attribute const_attribute public explicit_type "UUID"
	init_value " UUID
            .fromString(\"c2e5d5f0-94bd-4763-9cac-4e234d06839e\")"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " effect type UUIDs are taken from hardware/libhardware/include/hardware/audio_effect.h

The following UUIDs define effect types corresponding to standard audio
effects whose implementation and interface conform to the OpenSL ES
specification. The definitions match the corresponding interface IDs in
OpenSLES_IID.h


UUID for environmental reverb effect
@hide
"
      end

      attribute 4433548 "EFFECT_TYPE_PRESET_REVERB"
	class_attribute const_attribute public explicit_type "UUID"
	init_value " UUID
            .fromString(\"47382d60-ddd8-11db-bf3a-0002a5d5c51b\")"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "UUID for preset reverb effect
@hide
"
      end

      attribute 4433676 "EFFECT_TYPE_EQUALIZER"
	class_attribute const_attribute public explicit_type "UUID"
	init_value " UUID
            .fromString(\"0bed4300-ddd6-11db-8f34-0002a5d5c51b\")"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "UUID for equalizer effect
@hide
"
      end

      attribute 4433804 "EFFECT_TYPE_BASS_BOOST"
	class_attribute const_attribute public explicit_type "UUID"
	init_value " UUID
            .fromString(\"0634f220-ddd4-11db-a0fc-0002a5d5c51b\")"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "UUID for bass boost effect
@hide
"
      end

      attribute 4433932 "EFFECT_TYPE_VIRTUALIZER"
	class_attribute const_attribute public explicit_type "UUID"
	init_value " UUID
            .fromString(\"37cc2c00-dddd-11db-8577-0002a5d5c51b\")"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "UUID for virtualizer effect
@hide
"
      end

      attribute 4434060 "EFFECT_TYPE_AGC"
	class_attribute const_attribute public explicit_type "UUID"
	init_value " UUID
            .fromString(\"0a8abfe0-654c-11e0-ba26-0002a5d5c51b\")"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "UUID for Automatic Gain Control (AGC) audio pre-processing
@hide
"
      end

      attribute 4434188 "EFFECT_TYPE_AEC"
	class_attribute const_attribute public explicit_type "UUID"
	init_value " UUID
            .fromString(\"7b491460-8d4d-11e0-bd61-0002a5d5c51b\")"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "UUID for Acoustic Echo Canceler (AEC) audio pre-processing
@hide
"
      end

      attribute 4434316 "EFFECT_TYPE_NS"
	class_attribute const_attribute public explicit_type "UUID"
	init_value " UUID
            .fromString(\"58b4b260-8e06-11e0-aa8e-0002a5d5c51b\")"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "UUID for Noise Suppressor (NS) audio pre-processing
@hide
"
      end

      attribute 4434444 "EFFECT_TYPE_NULL"
	class_attribute const_attribute public explicit_type "UUID"
	init_value " UUID
            .fromString(\"ec7178ec-e5e1-4432-a3f4-4657e6795210\")"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Null effect UUID. Used when the UUID for effect type of
@hide
"
      end

      attribute 4434572 "STATE_UNINITIALIZED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "State of an AudioEffect object that was not successfully initialized upon
creation
@hide
"
      end

      attribute 4434700 "STATE_INITIALIZED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "State of an AudioEffect object that is ready to be used.
@hide
"
      end

      attribute 4434828 "NATIVE_EVENT_CONTROL_STATUS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " to keep in sync with
 frameworks/base/include/media/AudioEffect.h

Event id for engine control ownership change notification.
@hide
"
      end

      attribute 4434956 "NATIVE_EVENT_ENABLED_STATUS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Event id for engine state change notification.
@hide
"
      end

      attribute 4435084 "NATIVE_EVENT_PARAMETER_CHANGED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Event id for engine parameter change notification.
@hide
"
      end

      attribute 4435212 "SUCCESS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Successful operation.
"
      end

      attribute 4435340 "ERROR"
	class_attribute const_attribute public explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Unspecified error.
"
      end

      attribute 4435468 "ALREADY_EXISTS"
	class_attribute const_attribute public explicit_type "int"
	init_value " -2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Internal operation status. Not returned by any method.
"
      end

      attribute 4435596 "ERROR_NO_INIT"
	class_attribute const_attribute public explicit_type "int"
	init_value " -3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Operation failed due to bad object initialization.
"
      end

      attribute 4435724 "ERROR_BAD_VALUE"
	class_attribute const_attribute public explicit_type "int"
	init_value " -4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Operation failed due to bad parameter value.
"
      end

      attribute 4435852 "ERROR_INVALID_OPERATION"
	class_attribute const_attribute public explicit_type "int"
	init_value " -5"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Operation failed because it was requested in wrong state.
"
      end

      attribute 4435980 "ERROR_NO_MEMORY"
	class_attribute const_attribute public explicit_type "int"
	init_value " -6"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Operation failed due to lack of memory.
"
      end

      attribute 4436108 "ERROR_DEAD_OBJECT"
	class_attribute const_attribute public explicit_type "int"
	init_value " -7"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Operation failed due to dead remote object.
"
      end

      class 1214860 "Descriptor"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 6863500 "Descriptor"
	  public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6863628 "Descriptor"
	  public explicit_return_type ""
	  nparams 5
	    param in name "type" explicit_type "String"
	    param in name "uuid" explicit_type "String"
	    param in name "connectMode" explicit_type "String"
	    param in name "name" explicit_type "String"
	    param in name "implementor" explicit_type "String"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	attribute 4436236 "type"
	  public explicit_type "UUID"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Indicates the generic type of the effect (Equalizer, Bass boost ...). The UUID
 corresponds to the OpenSL ES Interface ID for this type of effect.
"
	end

	attribute 4436364 "uuid"
	  public explicit_type "UUID"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Indicates the particular implementation of the effect in that type. Several effects
 can have the same type but this uuid is unique to a given implementation.
"
	end

	attribute 4436492 "connectMode"
	  public explicit_type "String"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Indicates if the effect is of insert category {@link #EFFECT_INSERT}, auxiliary
 category {@link #EFFECT_AUXILIARY} or pre processing category
 {at_link #EFFECT_PRE_PROCESSING}. Insert effects (Typically an Equalizer) are applied
 to the entire audio source and usually not shared by several sources. Auxiliary effects
 (typically a reverberator) are applied to part of the signal (wet) and the effect output
 is added to the original signal (dry).
 Audio pre processing are applied to audio captured on a particular AudioRecord.
"
	end

	attribute 4436620 "name"
	  public explicit_type "String"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "Human readable effect name
"
	end

	attribute 4436748 "implementor"
	  public explicit_type "String"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "Human readable effect implementor name
"
	end
      end

      attribute 4436876 "EFFECT_INSERT"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"Insert\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Effect connection mode is insert. Specifying an audio session ID when creating the effect
will insert this effect after all players in the same audio session.
"
      end

      attribute 4437004 "EFFECT_AUXILIARY"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"Auxiliary\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Effect connection mode is auxiliary.
<p>Auxiliary effects must be created on session 0 (global output mix). In order for a
MediaPlayer or AudioTrack to be fed into this effect, they must be explicitely attached to
this effect and a send level must be specified.
<p>Use the effect ID returned by {@link #getId()} to designate this particular effect when
attaching it to the MediaPlayer or AudioTrack.
"
      end

      attribute 4437132 "EFFECT_PRE_PROCESSING"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"Pre Processing\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Effect connection mode is pre processing.
The audio pre processing effects are attached to an audio input (AudioRecord).
@hide
"
      end

      attribute 4437260 "mState"
	private explicit_type "int"
	init_value " STATE_UNINITIALIZED"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " --------------------------------------------------------------------------
 Member variables
 --------------------

Indicates the state of the AudioEffect instance
"
      end

      attribute 4437388 "mStateLock"
	const_attribute private explicit_type "Object"
	init_value " new Object()"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Lock to synchronize access to mState
"
      end

      attribute 4437516 "mId"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "System wide unique effect ID
"
      end

      attribute 4437644 "mNativeAudioEffect"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " accessed by native methods"
      end

      attribute 4437772 "mJniData"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 2475020 // mDescriptor (<unidirectional association>)
	relation 2475020 --->
	  a role_name "mDescriptor" private
	    comment "
Effect descriptor

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2475020 // mDescriptor (<unidirectional association>)
	  b parent class_ref 1214860 // Descriptor
      end

      class 1214988 "OnEnableStatusChangeListener"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 6867596 "onEnableStatusChange"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "effect" type class_ref 1214732 // AudioEffect
	    param inout name "enabled" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Called on the listener to notify it that the effect engine has been
enabled or disabled.
@param effect the effect on which the interface is registered.
@param enabled new effect state."
	end
      end

      classrelation 2475148 // mEnableStatusChangeListener (<unidirectional association>)
	relation 2475148 --->
	  a role_name "mEnableStatusChangeListener" init_value " null" private
	    comment "
Listener for effect engine state change notifications.

@see #setEnableStatusListener(OnEnableStatusChangeListener)

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2475148 // mEnableStatusChangeListener (<unidirectional association>)
	  b parent class_ref 1214988 // OnEnableStatusChangeListener
      end

      class 1215116 "OnControlStatusChangeListener"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 6867724 "onControlStatusChange"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "effect" type class_ref 1214732 // AudioEffect
	    param inout name "controlGranted" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Called on the listener to notify it that the effect engine control
has been taken or returned.
@param effect the effect on which the interface is registered.
@param controlGranted true if the application has been granted control of the effect
engine, false otherwise."
	end
      end

      classrelation 2475276 // mControlChangeStatusListener (<unidirectional association>)
	relation 2475276 --->
	  a role_name "mControlChangeStatusListener" init_value " null" private
	    comment "
Listener for effect engine control ownership change notifications.

@see #setControlStatusListener(OnControlStatusChangeListener)

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2475276 // mControlChangeStatusListener (<unidirectional association>)
	  b parent class_ref 1215116 // OnControlStatusChangeListener
      end

      class 1215244 "OnParameterChangeListener"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 6867852 "onParameterChange"
	  public explicit_return_type "void"
	  nparams 4
	    param inout name "effect" type class_ref 1214732 // AudioEffect
	    param in name "status" explicit_type "int"
	    param inout name "param" explicit_type "byte"
	    param inout name "value" explicit_type "byte"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Called on the listener to notify it that a parameter value has changed.
@param effect the effect on which the interface is registered.
@param status status of the set parameter operation.
@param param ID of the modified parameter.
@param value the new parameter value."
	end
      end

      classrelation 2475404 // mParameterChangeListener (<unidirectional association>)
	relation 2475404 --->
	  a role_name "mParameterChangeListener" init_value " null" private
	    comment "
Listener for effect engine control ownership change notifications.

@see #setParameterListener(OnParameterChangeListener)

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2475404 // mParameterChangeListener (<unidirectional association>)
	  b parent class_ref 1215244 // OnParameterChangeListener
      end

      attribute 4437900 "mListenerLock"
	const_attribute public explicit_type "Object"
	init_value " new Object()"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Lock to protect listeners updates against event notifications
@hide
"
      end

      class 1215372 "NativeEventHandler"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 2475660 // <generalisation>
	  relation 2475660 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 2475660 // <generalisation>
	    b parent class_ref 687500 // Handler
	end

	classrelation 2475788 // mAudioEffect (<unidirectional association>)
	  relation 2475788 --->
	    a role_name "mAudioEffect" private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2475788 // mAudioEffect (<unidirectional association>)
	    b parent class_ref 1214732 // AudioEffect
	end

	operation 6867980 "NativeEventHandler"
	  public explicit_return_type ""
	  nparams 2
	    param inout name "ae" type class_ref 1214732 // AudioEffect
	    param inout name "looper" type class_ref 685324 // Looper
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6868108 "handleMessage"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "msg" type class_ref 690316 // Message
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      classrelation 2475532 // mNativeEventHandler (<unidirectional association>)
	relation 2475532 --->
	  a role_name "mNativeEventHandler" init_value " null" public
	    comment "
Handler for events coming from the native code
@hide

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2475532 // mNativeEventHandler (<unidirectional association>)
	  b parent class_ref 1215372 // NativeEventHandler
      end

      operation 6863756 "AudioEffect"
	public explicit_return_type ""
	nparams 4
	  param inout name "type" explicit_type "UUID"
	  param inout name "uuid" explicit_type "UUID"
	  param in name "priority" explicit_type "int"
	  param in name "audioSession" explicit_type "int"
	nexceptions 3
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	  exception class_ref 806284 // RuntimeException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " --------------------------------------------------------------------------
 Constructor, Finalize
 --------------------

Class constructor.

@param type type of effect engine created. See {@link #EFFECT_TYPE_ENV_REVERB},
           {@link #EFFECT_TYPE_EQUALIZER} ... Types corresponding to
           built-in effects are defined by AudioEffect class. Other types
           can be specified provided they correspond an existing OpenSL
           ES interface ID and the corresponsing effect is available on
           the platform. If an unspecified effect type is requested, the
           constructor with throw the IllegalArgumentException. This
           parameter can be set to {@link #EFFECT_TYPE_NULL} in which
           case only the uuid will be used to select the effect.
@param uuid unique identifier of a particular effect implementation.
           Must be specified if the caller wants to use a particular
           implementation of an effect type. This parameter can be set to
           {@link #EFFECT_TYPE_NULL} in which case only the type will
           be used to select the effect.
@param priority the priority level requested by the application for
           controlling the effect engine. As the same effect engine can
           be shared by several applications, this parameter indicates
           how much the requesting application needs control of effect
           parameters. The normal priority is 0, above normal is a
           positive number, below normal a negative number.
@param audioSession system wide unique audio session identifier.
           The effect will be attached to the MediaPlayer or AudioTrack in
           the same audio session.

@throws java.lang.IllegalArgumentException
@throws java.lang.UnsupportedOperationException
@throws java.lang.RuntimeException
@hide"
      end

      operation 6863884 "release"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Releases the native AudioEffect resources. It is a good practice to
release the effect engine when not in use as control can be returned to
other applications or the native resources released."
      end

      operation 6864012 "finalize"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 6864140 "getDescriptor"
	public return_type class_ref 1214860 // Descriptor
	nparams 0
	nexceptions 1
	  explicit_exception "IllegalStateException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the effect descriptor.

@see android.media.audiofx.AudioEffect.Descriptor
@throws IllegalStateException"
      end

      operation 6864268 "queryEffects"
	class_operation public return_type class_ref 1214860 // Descriptor
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " --------------------------------------------------------------------------
 Effects Enumeration
 --------------------

Query all effects available on the platform. Returns an array of
{@link android.media.audiofx.AudioEffect.Descriptor} objects

@throws IllegalStateException"
      end

      operation 6864396 "queryPreProcessings"
	class_operation public return_type class_ref 1214860 // Descriptor
	nparams 1
	  param in name "audioSession" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Query all audio pre processing effects applied to the AudioRecord with the supplied
audio session ID. Returns an array of {@link android.media.audiofx.AudioEffect.Descriptor}
objects.
@param audioSession system wide unique audio session identifier.
@throws IllegalStateException
@hide"
      end

      operation 6864524 "isEffectTypeAvailable"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "type" explicit_type "UUID"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks if the device implements the specified effect type.
@param type the requested effect type.
@return true if the device implements the specified effect type, false otherwise.
@hide"
      end

      operation 6864652 "setEnabled"
	public explicit_return_type "int"
	nparams 1
	  param inout name "enabled" explicit_type "boolean"
	nexceptions 1
	  explicit_exception "IllegalStateException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " --------------------------------------------------------------------------
 Control methods
 --------------------

Enable or disable the effect.
Creating an audio effect does not automatically apply this effect on the audio source. It
creates the resources necessary to process this effect but the audio signal is still bypassed
through the effect engine. Calling this method will make that the effect is actually applied
or not to the audio content being played in the corresponding audio session.

@param enabled the requested enable state
@return {@link #SUCCESS} in case of success, {@link #ERROR_INVALID_OPERATION}
        or {@link #ERROR_DEAD_OBJECT} in case of failure.
@throws IllegalStateException"
      end

      operation 6864780 "setParameter"
	public explicit_return_type "int"
	nparams 2
	  param inout name "param" explicit_type "byte"
	  param inout name "value" explicit_type "byte"
	nexceptions 1
	  explicit_exception "IllegalStateException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set effect parameter. The setParameter method is provided in several
forms addressing most common parameter formats. This form is the most
generic one where the parameter and its value are both specified as an
array of bytes. The parameter and value type and length are therefore
totally free. For standard effect defined by OpenSL ES, the parameter
format and values must match the definitions in the corresponding OpenSL
ES interface.

@param param the identifier of the parameter to set
@param value the new value for the specified parameter
@return {@link #SUCCESS} in case of success, {@link #ERROR_BAD_VALUE},
        {@link #ERROR_NO_MEMORY}, {@link #ERROR_INVALID_OPERATION} or
        {@link #ERROR_DEAD_OBJECT} in case of failure
@throws IllegalStateException
@hide"
      end

      operation 6864908 "setParameter"
	public explicit_return_type "int"
	nparams 2
	  param in name "param" explicit_type "int"
	  param in name "value" explicit_type "int"
	nexceptions 1
	  explicit_exception "IllegalStateException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set effect parameter. The parameter and its value are integers.

@see #setParameter(byte[], byte[])
@hide"
      end

      operation 6865036 "setParameter"
	public explicit_return_type "int"
	nparams 2
	  param in name "param" explicit_type "int"
	  param in name "value" explicit_type "short"
	nexceptions 1
	  explicit_exception "IllegalStateException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set effect parameter. The parameter is an integer and the value is a
short integer.

@see #setParameter(byte[], byte[])
@hide"
      end

      operation 6865164 "setParameter"
	public explicit_return_type "int"
	nparams 2
	  param in name "param" explicit_type "int"
	  param inout name "value" explicit_type "byte"
	nexceptions 1
	  explicit_exception "IllegalStateException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set effect parameter. The parameter is an integer and the value is an
array of bytes.

@see #setParameter(byte[], byte[])
@hide"
      end

      operation 6865292 "setParameter"
	public explicit_return_type "int"
	nparams 2
	  param inout name "param" explicit_type "int"
	  param inout name "value" explicit_type "int"
	nexceptions 1
	  explicit_exception "IllegalStateException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set effect parameter. The parameter is an array of 1 or 2 integers and
the value is also an array of 1 or 2 integers

@see #setParameter(byte[], byte[])
@hide"
      end

      operation 6865420 "setParameter"
	public explicit_return_type "int"
	nparams 2
	  param inout name "param" explicit_type "int"
	  param inout name "value" explicit_type "short"
	nexceptions 1
	  explicit_exception "IllegalStateException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set effect parameter. The parameter is an array of 1 or 2 integers and
the value is an array of 1 or 2 short integers

@see #setParameter(byte[], byte[])
@hide"
      end

      operation 6865548 "setParameter"
	public explicit_return_type "int"
	nparams 2
	  param inout name "param" explicit_type "int"
	  param inout name "value" explicit_type "byte"
	nexceptions 1
	  explicit_exception "IllegalStateException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set effect parameter. The parameter is an array of 1 or 2 integers and
the value is an array of bytes

@see #setParameter(byte[], byte[])
@hide"
      end

      operation 6865676 "getParameter"
	public explicit_return_type "int"
	nparams 2
	  param inout name "param" explicit_type "byte"
	  param inout name "value" explicit_type "byte"
	nexceptions 1
	  explicit_exception "IllegalStateException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get effect parameter. The getParameter method is provided in several
forms addressing most common parameter formats. This form is the most
generic one where the parameter and its value are both specified as an
array of bytes. The parameter and value type and length are therefore
totally free.

@param param the identifier of the parameter to set
@param value the new value for the specified parameter
@return the number of meaningful bytes in value array in case of success or
 {@link #ERROR_BAD_VALUE}, {@link #ERROR_NO_MEMORY}, {@link #ERROR_INVALID_OPERATION}
 or {@link #ERROR_DEAD_OBJECT} in case of failure.
@throws IllegalStateException
@hide"
      end

      operation 6865804 "getParameter"
	public explicit_return_type "int"
	nparams 2
	  param in name "param" explicit_type "int"
	  param inout name "value" explicit_type "byte"
	nexceptions 1
	  explicit_exception "IllegalStateException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get effect parameter. The parameter is an integer and the value is an
array of bytes.

@see #getParameter(byte[], byte[])
@hide"
      end

      operation 6865932 "getParameter"
	public explicit_return_type "int"
	nparams 2
	  param in name "param" explicit_type "int"
	  param inout name "value" explicit_type "int"
	nexceptions 1
	  explicit_exception "IllegalStateException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get effect parameter. The parameter is an integer and the value is an
array of 1 or 2 integers

@see #getParameter(byte[], byte[])
In case of success, returns the number of meaningful integers in value array.
@hide"
      end

      operation 6866060 "getParameter"
	public explicit_return_type "int"
	nparams 2
	  param in name "param" explicit_type "int"
	  param inout name "value" explicit_type "short"
	nexceptions 1
	  explicit_exception "IllegalStateException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get effect parameter. The parameter is an integer and the value is an
array of 1 or 2 short integers

@see #getParameter(byte[], byte[])
In case of success, returns the number of meaningful short integers in value array.
@hide"
      end

      operation 6866188 "getParameter"
	public explicit_return_type "int"
	nparams 2
	  param inout name "param" explicit_type "int"
	  param inout name "value" explicit_type "int"
	nexceptions 1
	  explicit_exception "IllegalStateException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get effect parameter. The parameter is an array of 1 or 2 integers and
the value is also an array of 1 or 2 integers

@see #getParameter(byte[], byte[])
In case of success, the returns the number of meaningful integers in value array.
@hide"
      end

      operation 6866316 "getParameter"
	public explicit_return_type "int"
	nparams 2
	  param inout name "param" explicit_type "int"
	  param inout name "value" explicit_type "short"
	nexceptions 1
	  explicit_exception "IllegalStateException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get effect parameter. The parameter is an array of 1 or 2 integers and
the value is an array of 1 or 2 short integers

@see #getParameter(byte[], byte[])
In case of success, returns the number of meaningful short integers in value array.
@hide"
      end

      operation 6866444 "getParameter"
	public explicit_return_type "int"
	nparams 2
	  param inout name "param" explicit_type "int"
	  param inout name "value" explicit_type "byte"
	nexceptions 1
	  explicit_exception "IllegalStateException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get effect parameter. The parameter is an array of 1 or 2 integers and
the value is an array of bytes

@see #getParameter(byte[], byte[])
@hide"
      end

      operation 6866572 "command"
	public explicit_return_type "int"
	nparams 3
	  param in name "cmdCode" explicit_type "int"
	  param inout name "command" explicit_type "byte"
	  param inout name "reply" explicit_type "byte"
	nexceptions 1
	  explicit_exception "IllegalStateException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Send a command to the effect engine. This method is intended to send
proprietary commands to a particular effect implementation.
In case of success, returns the number of meaningful bytes in reply array.
In case of failure, the returned value is negative and implementation specific.
@hide"
      end

      operation 6866700 "getId"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  explicit_exception "IllegalStateException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " --------------------------------------------------------------------------
 Getters
 --------------------

Returns effect unique identifier. This system wide unique identifier can
be used to attach this effect to a MediaPlayer or an AudioTrack when the
effect is an auxiliary effect (Reverb)

@return the effect identifier.
@throws IllegalStateException"
      end

      operation 6866828 "getEnabled"
	public explicit_return_type "boolean"
	nparams 0
	nexceptions 1
	  explicit_exception "IllegalStateException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns effect enabled state

@return true if the effect is enabled, false otherwise.
@throws IllegalStateException"
      end

      operation 6866956 "hasControl"
	public explicit_return_type "boolean"
	nparams 0
	nexceptions 1
	  explicit_exception "IllegalStateException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks if this AudioEffect object is controlling the effect engine.

@return true if this instance has control of effect engine, false
        otherwise.
@throws IllegalStateException"
      end

      operation 6867084 "setEnableStatusListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 1214988 // OnEnableStatusChangeListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " --------------------------------------------------------------------------
 Initialization / configuration
 --------------------

Sets the listener AudioEffect notifies when the effect engine is enabled
or disabled.

@param listener"
      end

      operation 6867212 "setControlStatusListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 1215116 // OnControlStatusChangeListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the listener AudioEffect notifies when the effect engine control is
taken or returned.

@param listener"
      end

      operation 6867340 "setParameterListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 1215244 // OnParameterChangeListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the listener AudioEffect notifies when a parameter is changed.

@param listener
@hide"
      end

      operation 6867468 "createNativeEventHandler"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Convenience method for the creation of the native event handler
 It is called only when a non-null event listener is set.
 precondition:
 mNativeEventHandler is null"
      end

      attribute 4438028 "ACTION_DISPLAY_AUDIO_EFFECT_CONTROL_PANEL"
	class_attribute const_attribute public explicit_type "String"
	init_value "
        \"android.media.action.DISPLAY_AUDIO_EFFECT_CONTROL_PANEL\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " -------------------------------------------------------------------------
 Audio Effect Control panel intents
 -------------------------------------------------------------------------

 Intent to launch an audio effect control panel UI.
 <p>The goal of this intent is to enable separate implementations of music/media player
 applications and audio effect control application or services.
 This will allow platform vendors to offer more advanced control options for standard effects
 or control for platform specific effects.
 <p>The intent carries a number of extras used by the player application to communicate
 necessary pieces of information to the control panel application.
 <p>The calling application must use the
 {@link android.app.Activity#startActivityForResult(Intent, int)} method to launch the
 control panel so that its package name is indicated and used by the control panel
 application to keep track of changes for this particular application.
 <p>The {@link #EXTRA_AUDIO_SESSION} extra will indicate an audio session to which the
 audio effects should be applied. If no audio session is specified, either one of the
 follownig will happen:
 <p>- If an audio session was previously opened by the calling application with
 {@link #ACTION_OPEN_AUDIO_EFFECT_CONTROL_SESSION} intent, the effect changes will
 be applied to that session.
 <p>- If no audio session is opened, the changes will be stored in the package specific
 storage area and applied whenever a new audio session is opened by this application.
 <p>The {@link #EXTRA_CONTENT_TYPE} extra will help the control panel application
 customize both the UI layout and the default audio effect settings if none are already
 stored for the calling application.
"
      end

      attribute 4438156 "ACTION_OPEN_AUDIO_EFFECT_CONTROL_SESSION"
	class_attribute const_attribute public explicit_type "String"
	init_value "
        \"android.media.action.OPEN_AUDIO_EFFECT_CONTROL_SESSION\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Intent to signal to the effect control application or service that a new audio session
 is opened and requires audio effects to be applied.
 <p>This is different from {@link #ACTION_DISPLAY_AUDIO_EFFECT_CONTROL_PANEL} in that no
 UI should be displayed in this case. Music player applications can broadcast this intent
 before starting playback to make sure that any audio effect settings previously selected
 by the user are applied.
 <p>The effect control application receiving this intent will look for previously stored
 settings for the calling application, create all required audio effects and apply the
 effect settings to the specified audio session.
 <p>The calling package name is indicated by the {@link #EXTRA_PACKAGE_NAME} extra and the
 audio session ID by the {@link #EXTRA_AUDIO_SESSION} extra. Both extras are mandatory.
 <p>If no stored settings are found for the calling application, default settings for the
 content type indicated by {@link #EXTRA_CONTENT_TYPE} will be applied. The default settings
 for a given content type are platform specific.
"
      end

      attribute 4438284 "ACTION_CLOSE_AUDIO_EFFECT_CONTROL_SESSION"
	class_attribute const_attribute public explicit_type "String"
	init_value "
        \"android.media.action.CLOSE_AUDIO_EFFECT_CONTROL_SESSION\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Intent to signal to the effect control application or service that an audio session
 is closed and that effects should not be applied anymore.
 <p>The effect control application receiving this intent will delete all effects on
 this session and store current settings in package specific storage.
 <p>The calling package name is indicated by the {@link #EXTRA_PACKAGE_NAME} extra and the
 audio session ID by the {@link #EXTRA_AUDIO_SESSION} extra. Both extras are mandatory.
 <p>It is good practice for applications to broadcast this intent when music playback stops
 and/or when exiting to free system resources consumed by audio effect engines.
"
      end

      attribute 4438412 "EXTRA_AUDIO_SESSION"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.media.extra.AUDIO_SESSION\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Contains the ID of the audio session the effects should be applied to.
<p>This extra is for use with {@link #ACTION_DISPLAY_AUDIO_EFFECT_CONTROL_PANEL},
{@link #ACTION_OPEN_AUDIO_EFFECT_CONTROL_SESSION} and
{@link #ACTION_CLOSE_AUDIO_EFFECT_CONTROL_SESSION} intents.
<p>The extra value is of type int and is the audio session ID.
 @see android.media.MediaPlayer#getAudioSessionId() for details on audio sessions.
"
      end

      attribute 4438540 "EXTRA_PACKAGE_NAME"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.media.extra.PACKAGE_NAME\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Contains the package name of the calling application.
<p>This extra is for use with {@link #ACTION_OPEN_AUDIO_EFFECT_CONTROL_SESSION} and
{@link #ACTION_CLOSE_AUDIO_EFFECT_CONTROL_SESSION} intents.
<p>The extra value is a string containing the full package name.
"
      end

      attribute 4438668 "EXTRA_CONTENT_TYPE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.media.extra.CONTENT_TYPE\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Indicates which type of content is played by the application.
<p>This extra is for use with {@link #ACTION_DISPLAY_AUDIO_EFFECT_CONTROL_PANEL} and
{@link #ACTION_OPEN_AUDIO_EFFECT_CONTROL_SESSION} intents.
<p>This information is used by the effect control application to customize UI and select
appropriate default effect settings. The content type is one of the following:
<ul>
  <li>{@link #CONTENT_TYPE_MUSIC}</li>
  <li>{@link #CONTENT_TYPE_MOVIE}</li>
  <li>{@link #CONTENT_TYPE_GAME}</li>
  <li>{@link #CONTENT_TYPE_VOICE}</li>
</ul>
If omitted, the content type defaults to {@link #CONTENT_TYPE_MUSIC}.
"
      end

      attribute 4438796 "CONTENT_TYPE_MUSIC"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Value for {@link #EXTRA_CONTENT_TYPE} when the type of content played is music
"
      end

      attribute 4438924 "CONTENT_TYPE_MOVIE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Value for {@link #EXTRA_CONTENT_TYPE} when the type of content played is video or movie
"
      end

      attribute 4439052 "CONTENT_TYPE_GAME"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Value for {@link #EXTRA_CONTENT_TYPE} when the type of content played is game audio
"
      end

      attribute 4439180 "CONTENT_TYPE_VOICE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Value for {@link #EXTRA_CONTENT_TYPE} when the type of content played is voice audio
"
      end

      operation 6868236 "postEventFromNative"
	class_operation private explicit_return_type "void"
	nparams 5
	  param inout name "effect_ref" explicit_type "Object"
	  param in name "what" explicit_type "int"
	  param in name "arg1" explicit_type "int"
	  param in name "arg2" explicit_type "int"
	  param inout name "obj" explicit_type "Object"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unused\")
"
	
	
	
	comment " ---------------------------------------------------------
 Java methods called from the native side
 --------------------"
      end

      operation 6868364 "native_init"
	class_operation private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
	comment " ---------------------------------------------------------
 Native methods called from the Java side
 --------------------"
      end

      operation 6868492 "native_setup"
	private explicit_return_type "int"
	nparams 7
	  param inout name "audioeffect_this" explicit_type "Object"
	  param in name "type" explicit_type "String"
	  param in name "uuid" explicit_type "String"
	  param in name "priority" explicit_type "int"
	  param in name "audioSession" explicit_type "int"
	  param inout name "id" explicit_type "int"
	  param inout name "desc" explicit_type "Object"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5}[] ${p5}, ${t6}[] ${p6}${)}${throws};
"
	
	
	
      end

      operation 6868620 "native_finalize"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
      end

      operation 6868748 "native_release"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
      end

      operation 6868876 "native_setEnabled"
	private explicit_return_type "int"
	nparams 1
	  param inout name "enabled" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 6869004 "native_getEnabled"
	private explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
      end

      operation 6869132 "native_hasControl"
	private explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
      end

      operation 6869260 "native_setParameter"
	private explicit_return_type "int"
	nparams 4
	  param in name "psize" explicit_type "int"
	  param inout name "param" explicit_type "byte"
	  param in name "vsize" explicit_type "int"
	  param inout name "value" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3}[] ${p3}${)}${throws};
"
	
	
	
      end

      operation 6869388 "native_getParameter"
	private explicit_return_type "int"
	nparams 4
	  param in name "psize" explicit_type "int"
	  param inout name "param" explicit_type "byte"
	  param in name "vsize" explicit_type "int"
	  param inout name "value" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3}[] ${p3}${)}${throws};
"
	
	
	
      end

      operation 6869516 "native_command"
	private explicit_return_type "int"
	nparams 5
	  param in name "cmdCode" explicit_type "int"
	  param in name "cmdSize" explicit_type "int"
	  param inout name "cmdData" explicit_type "byte"
	  param in name "repSize" explicit_type "int"
	  param inout name "repData" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3} ${p3}, ${t4}[] ${p4}${)}${throws};
"
	
	
	
      end

      operation 6869644 "native_query_effects"
	class_operation private explicit_return_type "Object"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type}[] ${name}${(}${)}${throws};
"
	
	
	
      end

      operation 6869772 "native_query_pre_processing"
	class_operation private explicit_return_type "Object"
	nparams 1
	  param in name "audioSession" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type}[] ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 6869900 "checkState"
	public explicit_return_type "void"
	nparams 1
	  param in name "methodName" explicit_type "String"
	nexceptions 1
	  explicit_exception "IllegalStateException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ---------------------------------------------------------
 Utility methods
 ------------------

@hide"
      end

      operation 6870028 "checkStatus"
	public explicit_return_type "void"
	nparams 1
	  param in name "status" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide"
      end

      operation 6870156 "isError"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "status" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide"
      end

      operation 6870284 "byteArrayToInt"
	public explicit_return_type "int"
	nparams 1
	  param inout name "valueBuf" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide"
      end

      operation 6870412 "byteArrayToInt"
	public explicit_return_type "int"
	nparams 2
	  param inout name "valueBuf" explicit_type "byte"
	  param in name "offset" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide"
      end

      operation 6870540 "intToByteArray"
	public explicit_return_type "byte"
	nparams 1
	  param in name "value" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide"
      end

      operation 6870668 "byteArrayToShort"
	public explicit_return_type "short"
	nparams 1
	  param inout name "valueBuf" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide"
      end

      operation 6870796 "byteArrayToShort"
	public explicit_return_type "short"
	nparams 2
	  param inout name "valueBuf" explicit_type "byte"
	  param in name "offset" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide"
      end

      operation 6870924 "shortToByteArray"
	public explicit_return_type "byte"
	nparams 1
	  param in name "value" explicit_type "short"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide"
      end

      operation 6871052 "concatArrays"
	public explicit_return_type "byte"
	nparams 1
	  param inout name "arrays" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ... ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide"
      end
    end

    class 1215500 "AutomaticGainControl"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Automatic Gain Control (AGC).
<p>Automatic Gain Control (AGC) is an audio pre-processing which automatically normalizes the
output of the captured signal by boosting or lowering input from the microphone to match a preset
level so that the output signal level is virtually constant.
AGC can be used by applications where the input signal dynamic range is not important but where
a constant strong capture level is desired.
<p>An application creates a AutomaticGainControl object to instantiate and control an AGC
engine in the audio framework.
<p>To attach the AutomaticGainControl to a particular {@link android.media.AudioRecord},
specify the audio session ID of this AudioRecord when creating the AutomaticGainControl.
The audio session is retrieved by calling
{@link android.media.AudioRecord#getAudioSessionId()} on the AudioRecord instance.
<p>On some devices, an AGC can be inserted by default in the capture path by the platform
according to the {@link android.media.MediaRecorder.AudioSource} used. The application should
call AutomaticGainControl.getEnable() after creating the AGC to check the default AGC activation
state on a particular AudioRecord session.
<p>See {@link android.media.audiofx.AudioEffect} class for more details on
controlling audio effects."
      classrelation 2476044 // <generalisation>
	relation 2476044 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 2476044 // <generalisation>
	  b parent class_ref 1214732 // AudioEffect
      end

      attribute 4439436 "TAG"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"AutomaticGainControl\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 6871564 "isAvailable"
	class_operation public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks if the device implements automatic gain control.
@return true if the device implements automatic gain control, false otherwise."
      end

      operation 6871692 "create"
	class_operation public return_type class_ref 1215500 // AutomaticGainControl
	nparams 1
	  param in name "audioSession" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an AutomaticGainControl and attaches it to the AudioRecord on the audio
session specified.
@param audioSession system wide unique audio session identifier. The AutomaticGainControl
will be applied to the AudioRecord with the same audio session.
@return AutomaticGainControl created or null if the device does not implement AGC."
      end

      operation 6871820 "AutomaticGainControl"
	private explicit_return_type ""
	nparams 1
	  param in name "audioSession" explicit_type "int"
	nexceptions 3
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	  exception class_ref 806284 // RuntimeException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Class constructor.
<p> The constructor is not guarantied to succeed and throws the following exceptions:
<ul>
 <li>IllegalArgumentException is thrown if the device does not implement an AGC</li>
 <li>UnsupportedOperationException is thrown is the resources allocated to audio
 pre-procesing are currently exceeded.</li>
 <li>RuntimeException is thrown if a memory allocation error occurs.</li>
</ul>

@param audioSession system wide unique audio session identifier. The AutomaticGainControl
will be applied to the AudioRecord with the same audio session.

@throws java.lang.IllegalArgumentException
@throws java.lang.UnsupportedOperationException
@throws java.lang.RuntimeException"
      end
    end

    class 1215628 "BassBoost"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Bass boost is an audio effect to boost or amplify low frequencies of the sound. It is comparable
to a simple equalizer but limited to one band amplification in the low frequency range.
<p>An application creates a BassBoost object to instantiate and control a bass boost engine in
the audio framework.
<p>The methods, parameter types and units exposed by the BassBoost implementation are directly
mapping those defined by the OpenSL ES 1.0.1 Specification (http://www.khronos.org/opensles/)
for the SLBassBoostItf interface. Please refer to this specification for more details.
<p>To attach the BassBoost to a particular AudioTrack or MediaPlayer, specify the audio session
ID of this AudioTrack or MediaPlayer when constructing the BassBoost.
<p>NOTE: attaching a BassBoost to the global audio output mix by use of session 0 is deprecated.
<p>See {@link android.media.MediaPlayer#getAudioSessionId()} for details on audio sessions.
<p>See {@link android.media.audiofx.AudioEffect} class for more details on
controlling audio effects."
      classrelation 2476172 // <generalisation>
	relation 2476172 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 2476172 // <generalisation>
	  b parent class_ref 1214732 // AudioEffect
      end

      attribute 4439564 "TAG"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"BassBoost\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 4439692 "PARAM_STRENGTH_SUPPORTED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " These constants must be synchronized with those in
 frameworks/base/include/media/EffectBassBoostApi.h

Is strength parameter supported by bass boost engine. Parameter ID for getParameter().
"
      end

      attribute 4439820 "PARAM_STRENGTH"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Bass boost effect strength. Parameter ID for
{@link android.media.audiofx.BassBoost.OnParameterChangeListener}
"
      end

      attribute 4439948 "mStrengthSupported"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Indicates if strength parameter is supported by the bass boost engine
"
      end

      classrelation 2476300 // mParamListener (<unidirectional association>)
	relation 2476300 --->
	  a role_name "mParamListener" init_value " null" private
	    comment "
Registered listener for parameter changes.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2476300 // mParamListener (<unidirectional association>)
	  b parent class_ref 1215244 // OnParameterChangeListener
      end

      class 1215756 "BaseParameterListener"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
      end

      classrelation 2476428 // mBaseParamListener (<unidirectional association>)
	relation 2476428 --->
	  a role_name "mBaseParamListener" init_value " null" private
	    comment "
Listener used internally to to receive raw parameter change event from AudioEffect super class

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2476428 // mBaseParamListener (<unidirectional association>)
	  b parent class_ref 1215756 // BaseParameterListener
      end

      attribute 4440076 "mParamListenerLock"
	const_attribute private explicit_type "Object"
	init_value " new Object()"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Lock for access to mParamListener
"
      end

      operation 6871948 "BassBoost"
	public explicit_return_type ""
	nparams 2
	  param in name "priority" explicit_type "int"
	  param in name "audioSession" explicit_type "int"
	nexceptions 4
	  explicit_exception "IllegalStateException"
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	  exception class_ref 806284 // RuntimeException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Class constructor.
@param priority the priority level requested by the application for controlling the BassBoost
engine. As the same engine can be shared by several applications, this parameter indicates
how much the requesting application needs control of effect parameters. The normal priority
is 0, above normal is a positive number, below normal a negative number.
@param audioSession system wide unique audio session identifier. The BassBoost will be
attached to the MediaPlayer or AudioTrack in the same audio session.

@throws java.lang.IllegalStateException
@throws java.lang.IllegalArgumentException
@throws java.lang.UnsupportedOperationException
@throws java.lang.RuntimeException"
      end

      operation 6872076 "getStrengthSupported"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether setting strength is supported. If this method returns false, only one
strength is supported and the setStrength() method always rounds to that value.
@return true is strength parameter is supported, false otherwise"
      end

      operation 6872204 "setStrength"
	public explicit_return_type "void"
	nparams 1
	  param in name "strength" explicit_type "short"
	nexceptions 3
	  explicit_exception "IllegalStateException"
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the strength of the bass boost effect. If the implementation does not support per mille
accuracy for setting the strength, it is allowed to round the given strength to the nearest
supported value. You can use the {@link #getRoundedStrength()} method to query the
(possibly rounded) value that was actually set.
@param strength strength of the effect. The valid range for strength strength is [0, 1000],
where 0 per mille designates the mildest effect and 1000 per mille designates the strongest.
@throws IllegalStateException
@throws IllegalArgumentException
@throws UnsupportedOperationException"
      end

      operation 6872332 "getRoundedStrength"
	public explicit_return_type "short"
	nparams 0
	nexceptions 3
	  explicit_exception "IllegalStateException"
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the current strength of the effect.
@return the strength of the effect. The valid range for strength is [0, 1000], where 0 per
mille designates the mildest effect and 1000 per mille the strongest
@throws IllegalStateException
@throws IllegalArgumentException
@throws UnsupportedOperationException"
      end
    end

    class 1215884 "EnvironmentalReverb"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A sound generated within a room travels in many directions. The listener first hears the direct
sound from the source itself. Later, he or she hears discrete echoes caused by sound bouncing off
nearby walls, the ceiling and the floor. As sound waves arrive after undergoing more and more
reflections, individual reflections become indistinguishable and the listener hears continuous
reverberation that decays over time.
Reverb is vital for modeling a listener's environment. It can be used in music applications
to simulate music being played back in various environments, or in games to immerse the
listener within the game's environment.
The EnvironmentalReverb class allows an application to control each reverb engine property in a
global reverb environment and is more suitable for games. For basic control, more suitable for
music applications, it is recommended to use the
{@link android.media.audiofx.PresetReverb} class.
<p>An application creates a EnvironmentalReverb object to instantiate and control a reverb engine
in the audio framework.
<p>The methods, parameter types and units exposed by the EnvironmentalReverb implementation are
directly mapping those defined by the OpenSL ES 1.0.1 Specification
(http://www.khronos.org/opensles/) for the SLEnvironmentalReverbItf interface.
Please refer to this specification for more details.
<p>The EnvironmentalReverb is an output mix auxiliary effect and should be created on
Audio session 0. In order for a MediaPlayer or AudioTrack to be fed into this effect,
they must be explicitely attached to it and a send level must be specified. Use the effect ID
returned by getId() method to designate this particular effect when attaching it to the
MediaPlayer or AudioTrack.
<p>Creating a reverb on the output mix (audio session 0) requires permission
{@link android.Manifest.permission#MODIFY_AUDIO_SETTINGS}
<p>See {@link android.media.audiofx.AudioEffect} class for more details on controlling
audio effects."
      classrelation 2476556 // <generalisation>
	relation 2476556 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 2476556 // <generalisation>
	  b parent class_ref 1214732 // AudioEffect
      end

      attribute 4440204 "TAG"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"EnvironmentalReverb\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 4440332 "PARAM_ROOM_LEVEL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " These constants must be synchronized with those in
 frameworks/base/include/media/EffectEnvironmentalReverbApi.h

Room level. Parameter ID for OnParameterChangeListener
"
      end

      attribute 4440460 "PARAM_ROOM_HF_LEVEL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Room HF level. Parameter ID for OnParameterChangeListener
"
      end

      attribute 4440588 "PARAM_DECAY_TIME"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Decay time. Parameter ID for OnParameterChangeListener
"
      end

      attribute 4440716 "PARAM_DECAY_HF_RATIO"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Decay HF ratio. Parameter ID for
{@link android.media.audiofx.EnvironmentalReverb.OnParameterChangeListener}
"
      end

      attribute 4440844 "PARAM_REFLECTIONS_LEVEL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Early reflections level. Parameter ID for OnParameterChangeListener
"
      end

      attribute 4440972 "PARAM_REFLECTIONS_DELAY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 5"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Early reflections delay. Parameter ID for OnParameterChangeListener
"
      end

      attribute 4441100 "PARAM_REVERB_LEVEL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 6"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Reverb level. Parameter ID for OnParameterChangeListener
"
      end

      attribute 4441228 "PARAM_REVERB_DELAY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 7"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Reverb delay. Parameter ID for OnParameterChangeListener
"
      end

      attribute 4441356 "PARAM_DIFFUSION"
	class_attribute const_attribute public explicit_type "int"
	init_value " 8"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Diffusion. Parameter ID for OnParameterChangeListener
"
      end

      attribute 4441484 "PARAM_DENSITY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 9"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Density. Parameter ID for OnParameterChangeListener
"
      end

      attribute 4441612 "PARAM_PROPERTIES"
	class_attribute const_attribute private explicit_type "int"
	init_value " 10"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " used by setProperties()/getProperties"
      end

      classrelation 2476684 // mParamListener (<unidirectional association>)
	relation 2476684 --->
	  a role_name "mParamListener" init_value " null" private
	    comment "
Registered listener for parameter changes

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2476684 // mParamListener (<unidirectional association>)
	  b parent class_ref 1215244 // OnParameterChangeListener
      end

      class 1216012 "BaseParameterListener"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
      end

      classrelation 2476812 // mBaseParamListener (<unidirectional association>)
	relation 2476812 --->
	  a role_name "mBaseParamListener" init_value " null" private
	    comment "
Listener used internally to to receive raw parameter change event from AudioEffect super
class

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2476812 // mBaseParamListener (<unidirectional association>)
	  b parent class_ref 1216012 // BaseParameterListener
      end

      attribute 4441740 "mParamListenerLock"
	const_attribute private explicit_type "Object"
	init_value " new Object()"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Lock for access to mParamListener
"
      end

      operation 6872460 "EnvironmentalReverb"
	public explicit_return_type ""
	nparams 2
	  param in name "priority" explicit_type "int"
	  param in name "audioSession" explicit_type "int"
	nexceptions 3
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	  exception class_ref 806284 // RuntimeException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Class constructor.
@param priority the priority level requested by the application for controlling the
EnvironmentalReverb engine. As the same engine can be shared by several applications, this
parameter indicates how much the requesting application needs control of effect parameters.
The normal priority is 0, above normal is a positive number, below normal a negative number.
@param audioSession  system wide unique audio session identifier. If audioSession
 is not 0, the EnvironmentalReverb will be attached to the MediaPlayer or AudioTrack in the
 same audio session. Otherwise, the EnvironmentalReverb will apply to the output mix.
 As the EnvironmentalReverb is an auxiliary effect it is recommended to instantiate it on
 audio session 0 and to attach it to the MediaPLayer auxiliary output.

@throws java.lang.IllegalArgumentException
@throws java.lang.UnsupportedOperationException
@throws java.lang.RuntimeException"
      end

      operation 6872588 "setRoomLevel"
	public explicit_return_type "void"
	nparams 1
	  param in name "room" explicit_type "short"
	nexceptions 3
	  explicit_exception "IllegalStateException"
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the master volume level of the environmental reverb effect.
@param room room level in millibels. The valid range is [-9000, 0].
@throws IllegalStateException
@throws IllegalArgumentException
@throws UnsupportedOperationException"
      end

      operation 6872716 "getRoomLevel"
	public explicit_return_type "short"
	nparams 0
	nexceptions 3
	  explicit_exception "IllegalStateException"
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the master volume level of the environmental reverb effect.
@return the room level in millibels.
@throws IllegalStateException
@throws IllegalArgumentException
@throws UnsupportedOperationException"
      end

      operation 6872844 "setRoomHFLevel"
	public explicit_return_type "void"
	nparams 1
	  param in name "roomHF" explicit_type "short"
	nexceptions 3
	  explicit_exception "IllegalStateException"
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the volume level at 5 kHz relative to the volume level at low frequencies of the
overall reverb effect.
<p>This controls a low-pass filter that will reduce the level of the high-frequency.
@param roomHF high frequency attenuation level in millibels. The valid range is [-9000, 0].
@throws IllegalStateException
@throws IllegalArgumentException
@throws UnsupportedOperationException"
      end

      operation 6872972 "getRoomHFLevel"
	public explicit_return_type "short"
	nparams 0
	nexceptions 3
	  explicit_exception "IllegalStateException"
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the room HF level.
@return the room HF level in millibels.
@throws IllegalStateException
@throws IllegalArgumentException
@throws UnsupportedOperationException"
      end

      operation 6873100 "setDecayTime"
	public explicit_return_type "void"
	nparams 1
	  param in name "decayTime" explicit_type "int"
	nexceptions 3
	  explicit_exception "IllegalStateException"
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the time taken for the level of reverberation to decay by 60 dB.
@param decayTime decay time in milliseconds. The valid range is [100, 20000].
@throws IllegalStateException
@throws IllegalArgumentException
@throws UnsupportedOperationException"
      end

      operation 6873228 "getDecayTime"
	public explicit_return_type "int"
	nparams 0
	nexceptions 3
	  explicit_exception "IllegalStateException"
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the decay time.
@return the decay time in milliseconds.
@throws IllegalStateException
@throws IllegalArgumentException
@throws UnsupportedOperationException"
      end

      operation 6873356 "setDecayHFRatio"
	public explicit_return_type "void"
	nparams 1
	  param in name "decayHFRatio" explicit_type "short"
	nexceptions 3
	  explicit_exception "IllegalStateException"
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the ratio of high frequency decay time (at 5 kHz) relative to the decay time at low
frequencies.
@param decayHFRatio high frequency decay ratio using a permille scale. The valid range is
[100, 2000]. A ratio of 1000 indicates that all frequencies decay at the same rate.
@throws IllegalStateException
@throws IllegalArgumentException
@throws UnsupportedOperationException"
      end

      operation 6873484 "getDecayHFRatio"
	public explicit_return_type "short"
	nparams 0
	nexceptions 3
	  explicit_exception "IllegalStateException"
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the ratio of high frequency decay time (at 5 kHz) relative to low frequencies.
@return the decay HF ration. See {@link #setDecayHFRatio(short)} for units.
@throws IllegalStateException
@throws IllegalArgumentException
@throws UnsupportedOperationException"
      end

      operation 6873612 "setReflectionsLevel"
	public explicit_return_type "void"
	nparams 1
	  param in name "reflectionsLevel" explicit_type "short"
	nexceptions 3
	  explicit_exception "IllegalStateException"
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the volume level of the early reflections.
<p>This level is combined with the overall room level
(set using {@link #setRoomLevel(short)}).
@param reflectionsLevel reflection level in millibels. The valid range is [-9000, 1000].
@throws IllegalStateException
@throws IllegalArgumentException
@throws UnsupportedOperationException"
      end

      operation 6873740 "getReflectionsLevel"
	public explicit_return_type "short"
	nparams 0
	nexceptions 3
	  explicit_exception "IllegalStateException"
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the volume level of the early reflections.
@return the early reflections level in millibels.
@throws IllegalStateException
@throws IllegalArgumentException
@throws UnsupportedOperationException"
      end

      operation 6873868 "setReflectionsDelay"
	public explicit_return_type "void"
	nparams 1
	  param in name "reflectionsDelay" explicit_type "int"
	nexceptions 3
	  explicit_exception "IllegalStateException"
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the delay time for the early reflections.
<p>This method sets the time between when the direct path is heard and when the first
reflection is heard.
@param reflectionsDelay reflections delay in milliseconds. The valid range is [0, 300].
@throws IllegalStateException
@throws IllegalArgumentException
@throws UnsupportedOperationException"
      end

      operation 6873996 "getReflectionsDelay"
	public explicit_return_type "int"
	nparams 0
	nexceptions 3
	  explicit_exception "IllegalStateException"
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the reflections delay.
@return the early reflections delay in milliseconds.
@throws IllegalStateException
@throws IllegalArgumentException
@throws UnsupportedOperationException"
      end

      operation 6874124 "setReverbLevel"
	public explicit_return_type "void"
	nparams 1
	  param in name "reverbLevel" explicit_type "short"
	nexceptions 3
	  explicit_exception "IllegalStateException"
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the volume level of the late reverberation.
<p>This level is combined with the overall room level (set using {@link #setRoomLevel(short)}).
@param reverbLevel reverb level in millibels. The valid range is [-9000, 2000].
@throws IllegalStateException
@throws IllegalArgumentException
@throws UnsupportedOperationException"
      end

      operation 6874252 "getReverbLevel"
	public explicit_return_type "short"
	nparams 0
	nexceptions 3
	  explicit_exception "IllegalStateException"
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the reverb level.
@return the reverb level in millibels.
@throws IllegalStateException
@throws IllegalArgumentException
@throws UnsupportedOperationException"
      end

      operation 6874380 "setReverbDelay"
	public explicit_return_type "void"
	nparams 1
	  param in name "reverbDelay" explicit_type "int"
	nexceptions 3
	  explicit_exception "IllegalStateException"
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the time between the first reflection and the reverberation.
@param reverbDelay reverb delay in milliseconds. The valid range is [0, 100].
@throws IllegalStateException
@throws IllegalArgumentException
@throws UnsupportedOperationException"
      end

      operation 6874508 "getReverbDelay"
	public explicit_return_type "int"
	nparams 0
	nexceptions 3
	  explicit_exception "IllegalStateException"
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the reverb delay.
@return the reverb delay in milliseconds.
@throws IllegalStateException
@throws IllegalArgumentException
@throws UnsupportedOperationException"
      end

      operation 6874636 "setDiffusion"
	public explicit_return_type "void"
	nparams 1
	  param in name "diffusion" explicit_type "short"
	nexceptions 3
	  explicit_exception "IllegalStateException"
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the echo density in the late reverberation decay.
<p>The scale should approximately map linearly to the perceived change in reverberation.
@param diffusion diffusion specified using a permille scale. The diffusion valid range is
[0, 1000]. A value of 1000 o/oo indicates a smooth reverberation decay.
Values below this level give a more <i>grainy</i> character.
@throws IllegalStateException
@throws IllegalArgumentException
@throws UnsupportedOperationException"
      end

      operation 6874764 "getDiffusion"
	public explicit_return_type "short"
	nparams 0
	nexceptions 3
	  explicit_exception "IllegalStateException"
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets diffusion level.
@return the diffusion level. See {@link #setDiffusion(short)} for units.
@throws IllegalStateException
@throws IllegalArgumentException
@throws UnsupportedOperationException"
      end

      operation 6874892 "setDensity"
	public explicit_return_type "void"
	nparams 1
	  param in name "density" explicit_type "short"
	nexceptions 3
	  explicit_exception "IllegalStateException"
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Controls the modal density of the late reverberation decay.
<p> The scale should approximately map linearly to the perceived change in reverberation.
A lower density creates a hollow sound that is useful for simulating small reverberation
spaces such as bathrooms.
@param density density specified using a permille scale. The valid range is [0, 1000].
A value of 1000 o/oo indicates a natural sounding reverberation. Values below this level
produce a more colored effect.
@throws IllegalStateException
@throws IllegalArgumentException
@throws UnsupportedOperationException"
      end

      operation 6875020 "getDensity"
	public explicit_return_type "short"
	nparams 0
	nexceptions 3
	  explicit_exception "IllegalStateException"
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the density level.
@return the density level. See {@link #setDiffusion(short)} for units.
@throws IllegalStateException
@throws IllegalArgumentException
@throws UnsupportedOperationException"
      end
    end

    class 1216140 "Equalizer"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "An Equalizer is used to alter the frequency response of a particular music source or of the main
output mix.
<p>An application creates an Equalizer object to instantiate and control an Equalizer engine
in the audio framework. The application can either simply use predefined presets or have a more
precise control of the gain in each frequency band controlled by the equalizer.
<p>The methods, parameter types and units exposed by the Equalizer implementation are directly
mapping those defined by the OpenSL ES 1.0.1 Specification (http://www.khronos.org/opensles/)
for the SLEqualizerItf interface. Please refer to this specification for more details.
<p>To attach the Equalizer to a particular AudioTrack or MediaPlayer, specify the audio session
ID of this AudioTrack or MediaPlayer when constructing the Equalizer.
<p>NOTE: attaching an Equalizer to the global audio output mix by use of session 0 is deprecated.
<p>See {@link android.media.MediaPlayer#getAudioSessionId()} for details on audio sessions.
<p>See {@link android.media.audiofx.AudioEffect} class for more details on controlling audio
effects."
      classrelation 2476940 // <generalisation>
	relation 2476940 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 2476940 // <generalisation>
	  b parent class_ref 1214732 // AudioEffect
      end

      attribute 4441868 "TAG"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"Equalizer\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 4441996 "PARAM_NUM_BANDS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " These constants must be synchronized with those in
 frameworks/base/include/media/EffectEqualizerApi.h

Number of bands. Parameter ID for OnParameterChangeListener
"
      end

      attribute 4442124 "PARAM_LEVEL_RANGE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Band level range. Parameter ID for OnParameterChangeListener
"
      end

      attribute 4442252 "PARAM_BAND_LEVEL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Band level. Parameter ID for OnParameterChangeListener
"
      end

      attribute 4442380 "PARAM_CENTER_FREQ"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Band center frequency. Parameter ID for OnParameterChangeListener
"
      end

      attribute 4442508 "PARAM_BAND_FREQ_RANGE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Band frequency range. Parameter ID for
{@link android.media.audiofx.Equalizer.OnParameterChangeListener}
"
      end

      attribute 4442636 "PARAM_GET_BAND"
	class_attribute const_attribute public explicit_type "int"
	init_value " 5"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Band for a given frequency. Parameter ID for OnParameterChangeListener

"
      end

      attribute 4442764 "PARAM_CURRENT_PRESET"
	class_attribute const_attribute public explicit_type "int"
	init_value " 6"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Current preset. Parameter ID for OnParameterChangeListener
"
      end

      attribute 4442892 "PARAM_GET_NUM_OF_PRESETS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 7"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Request number of presets. Parameter ID for OnParameterChangeListener
"
      end

      attribute 4443020 "PARAM_GET_PRESET_NAME"
	class_attribute const_attribute public explicit_type "int"
	init_value " 8"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Request preset name. Parameter ID for OnParameterChangeListener
"
      end

      attribute 4443148 "PARAM_PROPERTIES"
	class_attribute const_attribute private explicit_type "int"
	init_value " 9"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " used by setProperties()/getProperties"
      end

      attribute 4443276 "PARAM_STRING_SIZE_MAX"
	class_attribute const_attribute public explicit_type "int"
	init_value " 32"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Maximum size for preset name
"
      end

      attribute 4443404 "mNumBands"
	private explicit_type "short"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Number of bands implemented by Equalizer engine
"
      end

      attribute 4443532 "mNumPresets"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Number of presets implemented by Equalizer engine
"
      end

      attribute 4443660 "mPresetNames"
	private explicit_type "String"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Names of presets implemented by Equalizer engine
"
      end

      classrelation 2477068 // mParamListener (<unidirectional association>)
	relation 2477068 --->
	  a role_name "mParamListener" init_value " null" private
	    comment "
Registered listener for parameter changes.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2477068 // mParamListener (<unidirectional association>)
	  b parent class_ref 1215244 // OnParameterChangeListener
      end

      class 1216268 "BaseParameterListener"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
      end

      classrelation 2477196 // mBaseParamListener (<unidirectional association>)
	relation 2477196 --->
	  a role_name "mBaseParamListener" init_value " null" private
	    comment "
Listener used internally to to receive raw parameter change event from AudioEffect super class

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2477196 // mBaseParamListener (<unidirectional association>)
	  b parent class_ref 1216268 // BaseParameterListener
      end

      attribute 4443788 "mParamListenerLock"
	const_attribute private explicit_type "Object"
	init_value " new Object()"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Lock for access to mParamListener
"
      end

      operation 6875148 "Equalizer"
	public explicit_return_type ""
	nparams 2
	  param in name "priority" explicit_type "int"
	  param in name "audioSession" explicit_type "int"
	nexceptions 4
	  explicit_exception "IllegalStateException"
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	  exception class_ref 806284 // RuntimeException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Class constructor.
@param priority the priority level requested by the application for controlling the Equalizer
engine. As the same engine can be shared by several applications, this parameter indicates
how much the requesting application needs control of effect parameters. The normal priority
is 0, above normal is a positive number, below normal a negative number.
@param audioSession  system wide unique audio session identifier. The Equalizer will be
attached to the MediaPlayer or AudioTrack in the same audio session.

@throws java.lang.IllegalStateException
@throws java.lang.IllegalArgumentException
@throws java.lang.UnsupportedOperationException
@throws java.lang.RuntimeException"
      end

      operation 6875276 "getNumberOfBands"
	public explicit_return_type "short"
	nparams 0
	nexceptions 3
	  explicit_exception "IllegalStateException"
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the number of frequency bands supported by the Equalizer engine.
@return the number of bands
@throws IllegalStateException
@throws IllegalArgumentException
@throws UnsupportedOperationException"
      end

      operation 6875404 "getBandLevelRange"
	public explicit_return_type "short"
	nparams 0
	nexceptions 3
	  explicit_exception "IllegalStateException"
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the level range for use by {@link #setBandLevel(short,short)}. The level is expressed in
milliBel.
@return the band level range in an array of short integers. The first element is the lower
limit of the range, the second element the upper limit.
@throws IllegalStateException
@throws IllegalArgumentException
@throws UnsupportedOperationException"
      end

      operation 6875532 "setBandLevel"
	public explicit_return_type "void"
	nparams 2
	  param in name "band" explicit_type "short"
	  param in name "level" explicit_type "short"
	nexceptions 3
	  explicit_exception "IllegalStateException"
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the given equalizer band to the given gain value.
@param band frequency band that will have the new gain. The numbering of the bands starts
from 0 and ends at (number of bands - 1).
@param level new gain in millibels that will be set to the given band. getBandLevelRange()
will define the maximum and minimum values.
@throws IllegalStateException
@throws IllegalArgumentException
@throws UnsupportedOperationException
@see #getNumberOfBands()"
      end

      operation 6875660 "getBandLevel"
	public explicit_return_type "short"
	nparams 1
	  param in name "band" explicit_type "short"
	nexceptions 3
	  explicit_exception "IllegalStateException"
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the gain set for the given equalizer band.
@param band frequency band whose gain is requested. The numbering of the bands starts
from 0 and ends at (number of bands - 1).
@return the gain in millibels of the given band.
@throws IllegalStateException
@throws IllegalArgumentException
@throws UnsupportedOperationException"
      end

      operation 6875788 "getCenterFreq"
	public explicit_return_type "int"
	nparams 1
	  param in name "band" explicit_type "short"
	nexceptions 3
	  explicit_exception "IllegalStateException"
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the center frequency of the given band.
@param band frequency band whose center frequency is requested. The numbering of the bands
starts from 0 and ends at (number of bands - 1).
@return the center frequency in milliHertz
@throws IllegalStateException
@throws IllegalArgumentException
@throws UnsupportedOperationException"
      end

      operation 6875916 "getBandFreqRange"
	public explicit_return_type "int"
	nparams 1
	  param in name "band" explicit_type "short"
	nexceptions 3
	  explicit_exception "IllegalStateException"
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the frequency range of the given frequency band.
@param band frequency band whose frequency range is requested. The numbering of the bands
starts from 0 and ends at (number of bands - 1).
@return the frequency range in millHertz in an array of integers. The first element is the
lower limit of the range, the second element the upper limit.
@throws IllegalStateException
@throws IllegalArgumentException
@throws UnsupportedOperationException"
      end

      operation 6876044 "getBand"
	public explicit_return_type "short"
	nparams 1
	  param in name "frequency" explicit_type "int"
	nexceptions 3
	  explicit_exception "IllegalStateException"
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the band that has the most effect on the given frequency.
@param frequency frequency in milliHertz which is to be equalized via the returned band.
@return the frequency band that has most effect on the given frequency.
@throws IllegalStateException
@throws IllegalArgumentException
@throws UnsupportedOperationException"
      end

      operation 6876172 "getCurrentPreset"
	public explicit_return_type "short"
	nparams 0
	nexceptions 3
	  explicit_exception "IllegalStateException"
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets current preset.
@return the preset that is set at the moment.
@throws IllegalStateException
@throws IllegalArgumentException
@throws UnsupportedOperationException"
      end

      operation 6876300 "usePreset"
	public explicit_return_type "void"
	nparams 1
	  param in name "preset" explicit_type "short"
	nexceptions 3
	  explicit_exception "IllegalStateException"
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the equalizer according to the given preset.
@param preset new preset that will be taken into use. The valid range is [0,
number of presets-1].
@throws IllegalStateException
@throws IllegalArgumentException
@throws UnsupportedOperationException
@see #getNumberOfPresets()"
      end

      operation 6876428 "getNumberOfPresets"
	public explicit_return_type "short"
	nparams 0
	nexceptions 3
	  explicit_exception "IllegalStateException"
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the total number of presets the equalizer supports. The presets will have indices
[0, number of presets-1].
@return the number of presets the equalizer supports.
@throws IllegalStateException
@throws IllegalArgumentException
@throws UnsupportedOperationException"
      end

      operation 6876556 "getPresetName"
	public explicit_return_type "String"
	nparams 1
	  param in name "preset" explicit_type "short"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the preset name based on the index.
@param preset index of the preset. The valid range is [0, number of presets-1].
@return a string containing the name of the given preset.
@throws IllegalStateException
@throws IllegalArgumentException
@throws UnsupportedOperationException"
      end

      class 1255692 "OnParameterChangeListener"
	visibility package stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
      end
    end

    class 1216396 "NoiseSuppressor"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Noise Suppressor (NS).
<p>Noise suppression (NS) is an audio pre-processing which removes background noise from the
captured signal. The component of the signal considered as noise can be either stationary
(car/airplane engine, AC system) or non-stationary (other peoples conversations, car horn) for
more advanced implementations.
<p>NS is mostly used by voice communication applications (voice chat, video conferencing,
SIP calls).
<p>An application creates a NoiseSuppressor object to instantiate and control an NS
engine in the audio framework.
<p>To attach the NoiseSuppressor to a particular {@link android.media.AudioRecord},
specify the audio session ID of this AudioRecord when creating the NoiseSuppressor.
The audio session is retrieved by calling
{@link android.media.AudioRecord#getAudioSessionId()} on the AudioRecord instance.
<p>On some devices, NS can be inserted by default in the capture path by the platform
according to the {@link android.media.MediaRecorder.AudioSource} used. The application should
call NoiseSuppressor.getEnable() after creating the NS to check the default NS activation
state on a particular AudioRecord session.
<p>See {@link android.media.audiofx.AudioEffect} class for more details on
controlling audio effects."
      classrelation 2477324 // <generalisation>
	relation 2477324 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 2477324 // <generalisation>
	  b parent class_ref 1214732 // AudioEffect
      end

      attribute 4443916 "TAG"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"NoiseSuppressor\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 6876684 "isAvailable"
	class_operation public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks if the device implements noise suppression.
@return true if the device implements noise suppression, false otherwise."
      end

      operation 6876812 "create"
	class_operation public return_type class_ref 1216396 // NoiseSuppressor
	nparams 1
	  param in name "audioSession" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a NoiseSuppressor and attaches it to the AudioRecord on the audio
session specified.
@param audioSession system wide unique audio session identifier. The NoiseSuppressor
will be applied to the AudioRecord with the same audio session.
@return NoiseSuppressor created or null if the device does not implement noise
suppression."
      end

      operation 6876940 "NoiseSuppressor"
	private explicit_return_type ""
	nparams 1
	  param in name "audioSession" explicit_type "int"
	nexceptions 3
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	  exception class_ref 806284 // RuntimeException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Class constructor.
<p> The constructor is not guarantied to succeed and throws the following exceptions:
<ul>
 <li>IllegalArgumentException is thrown if the device does not implement an NS</li>
 <li>UnsupportedOperationException is thrown is the resources allocated to audio
 pre-procesing are currently exceeded.</li>
 <li>RuntimeException is thrown if a memory allocation error occurs.</li>
</ul>

@param audioSession system wide unique audio session identifier. The NoiseSuppressor
will be applied to the AudioRecord with the same audio session.

@throws java.lang.IllegalArgumentException
@throws java.lang.UnsupportedOperationException
@throws java.lang.RuntimeException"
      end
    end

    class 1216524 "PresetReverb"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A sound generated within a room travels in many directions. The listener first hears the
direct sound from the source itself. Later, he or she hears discrete echoes caused by sound
bouncing off nearby walls, the ceiling and the floor. As sound waves arrive after
undergoing more and more reflections, individual reflections become indistinguishable and
the listener hears continuous reverberation that decays over time.
Reverb is vital for modeling a listener's environment. It can be used in music applications
to simulate music being played back in various environments, or in games to immerse the
listener within the game's environment.
The PresetReverb class allows an application to configure the global reverb using a reverb preset.
This is primarily used for adding some reverb in a music playback context. Applications
requiring control over a more advanced environmental reverb are advised to use the
{@link android.media.audiofx.EnvironmentalReverb} class.
<p>An application creates a PresetReverb object to instantiate and control a reverb engine in the
audio framework.
<p>The methods, parameter types and units exposed by the PresetReverb implementation are
directly mapping those defined by the OpenSL ES 1.0.1 Specification
(http://www.khronos.org/opensles/) for the SLPresetReverbItf interface.
Please refer to this specification for more details.
<p>The PresetReverb is an output mix auxiliary effect and should be created on
Audio session 0. In order for a MediaPlayer or AudioTrack to be fed into this effect,
they must be explicitely attached to it and a send level must be specified. Use the effect ID
returned by getId() method to designate this particular effect when attaching it to the
MediaPlayer or AudioTrack.
<p>Creating a reverb on the output mix (audio session 0) requires permission
{@link android.Manifest.permission#MODIFY_AUDIO_SETTINGS}
<p>See {@link android.media.audiofx.AudioEffect} class for more details on controlling
audio effects."
      classrelation 2477452 // <generalisation>
	relation 2477452 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 2477452 // <generalisation>
	  b parent class_ref 1214732 // AudioEffect
      end

      attribute 4444044 "TAG"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"PresetReverb\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 4444172 "PARAM_PRESET"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " These constants must be synchronized with those in
 frameworks/base/include/media/EffectPresetReverbApi.h

Preset. Parameter ID for
{@link android.media.audiofx.PresetReverb.OnParameterChangeListener}
"
      end

      attribute 4444300 "PRESET_NONE"
	class_attribute const_attribute public explicit_type "short"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "No reverb or reflections
"
      end

      attribute 4444428 "PRESET_SMALLROOM"
	class_attribute const_attribute public explicit_type "short"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Reverb preset representing a small room less than five meters in length
"
      end

      attribute 4444556 "PRESET_MEDIUMROOM"
	class_attribute const_attribute public explicit_type "short"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Reverb preset representing a medium room with a length of ten meters or less
"
      end

      attribute 4444684 "PRESET_LARGEROOM"
	class_attribute const_attribute public explicit_type "short"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Reverb preset representing a large-sized room suitable for live performances
"
      end

      attribute 4444812 "PRESET_MEDIUMHALL"
	class_attribute const_attribute public explicit_type "short"
	init_value " 4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Reverb preset representing a medium-sized hall
"
      end

      attribute 4444940 "PRESET_LARGEHALL"
	class_attribute const_attribute public explicit_type "short"
	init_value " 5"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Reverb preset representing a large-sized hall suitable for a full orchestra
"
      end

      attribute 4445068 "PRESET_PLATE"
	class_attribute const_attribute public explicit_type "short"
	init_value " 6"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Reverb preset representing a synthesis of the traditional plate reverb
"
      end

      classrelation 2477580 // mParamListener (<unidirectional association>)
	relation 2477580 --->
	  a role_name "mParamListener" init_value " null" private
	    comment "
Registered listener for parameter changes.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2477580 // mParamListener (<unidirectional association>)
	  b parent class_ref 1215244 // OnParameterChangeListener
      end

      class 1216652 "BaseParameterListener"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
      end

      classrelation 2477708 // mBaseParamListener (<unidirectional association>)
	relation 2477708 --->
	  a role_name "mBaseParamListener" init_value " null" private
	    comment "
Listener used internally to to receive raw parameter change event from AudioEffect super class

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2477708 // mBaseParamListener (<unidirectional association>)
	  b parent class_ref 1216652 // BaseParameterListener
      end

      attribute 4445196 "mParamListenerLock"
	const_attribute private explicit_type "Object"
	init_value " new Object()"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Lock for access to mParamListener
"
      end

      operation 6877068 "PresetReverb"
	public explicit_return_type ""
	nparams 2
	  param in name "priority" explicit_type "int"
	  param in name "audioSession" explicit_type "int"
	nexceptions 3
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	  exception class_ref 806284 // RuntimeException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Class constructor.
@param priority the priority level requested by the application for controlling the
PresetReverb engine. As the same engine can be shared by several applications, this
parameter indicates how much the requesting application needs control of effect parameters.
The normal priority is 0, above normal is a positive number, below normal a negative number.
@param audioSession  system wide unique audio session identifier. If audioSession
 is not 0, the PresetReverb will be attached to the MediaPlayer or AudioTrack in the
 same audio session. Otherwise, the PresetReverb will apply to the output mix.
 As the PresetReverb is an auxiliary effect it is recommended to instantiate it on
 audio session 0 and to attach it to the MediaPLayer auxiliary output.

@throws java.lang.IllegalArgumentException
@throws java.lang.UnsupportedOperationException
@throws java.lang.RuntimeException"
      end

      operation 6877196 "setPreset"
	public explicit_return_type "void"
	nparams 1
	  param in name "preset" explicit_type "short"
	nexceptions 3
	  explicit_exception "IllegalStateException"
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Enables a preset on the reverb.
 <p>The reverb PRESET_NONE disables any reverb from the current output but does not free the
 resources associated with the reverb. For an application to signal to the implementation
 to free the resources, it must call the release() method.
@param preset this must be one of the the preset constants defined in this class.
e.g. {@link #PRESET_SMALLROOM}
@throws IllegalStateException
@throws IllegalArgumentException
@throws UnsupportedOperationException"
      end

      operation 6877324 "getPreset"
	public explicit_return_type "short"
	nparams 0
	nexceptions 3
	  explicit_exception "IllegalStateException"
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets current reverb preset.
@return the preset that is set at the moment.
@throws IllegalStateException
@throws IllegalArgumentException
@throws UnsupportedOperationException"
      end

      class 1256204 "OnParameterChangeListener"
	visibility package stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
      end
    end

    class 1216780 "Virtualizer"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "An audio virtualizer is a general name for an effect to spatialize audio channels. The exact
behavior of this effect is dependent on the number of audio input channels and the types and
number of audio output channels of the device. For example, in the case of a stereo input and
stereo headphone output, a stereo widening effect is used when this effect is turned on.
<p>An application creates a Virtualizer object to instantiate and control a virtualizer engine
in the audio framework.
<p>The methods, parameter types and units exposed by the Virtualizer implementation are directly
mapping those defined by the OpenSL ES 1.0.1 Specification (http://www.khronos.org/opensles/)
for the SLVirtualizerItf interface. Please refer to this specification for more details.
<p>To attach the Virtualizer to a particular AudioTrack or MediaPlayer, specify the audio session
ID of this AudioTrack or MediaPlayer when constructing the Virtualizer.
<p>NOTE: attaching a Virtualizer to the global audio output mix by use of session 0 is
deprecated.
<p>See {@link android.media.MediaPlayer#getAudioSessionId()} for details on audio sessions.
<p>See {@link android.media.audiofx.AudioEffect} class for more details on controlling
audio effects."
      classrelation 2477836 // <generalisation>
	relation 2477836 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 2477836 // <generalisation>
	  b parent class_ref 1214732 // AudioEffect
      end

      attribute 4445324 "TAG"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"Virtualizer\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 4445452 "PARAM_STRENGTH_SUPPORTED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " These constants must be synchronized with those in frameworks/base/include/media/EffectVirtualizerApi.h

Is strength parameter supported by virtualizer engine. Parameter ID for getParameter().
"
      end

      attribute 4445580 "PARAM_STRENGTH"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Virtualizer effect strength. Parameter ID for
{@link android.media.audiofx.Virtualizer.OnParameterChangeListener}
"
      end

      attribute 4445708 "mStrengthSupported"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Indicates if strength parameter is supported by the virtualizer engine
"
      end

      classrelation 2477964 // mParamListener (<unidirectional association>)
	relation 2477964 --->
	  a role_name "mParamListener" init_value " null" private
	    comment "
Registered listener for parameter changes.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2477964 // mParamListener (<unidirectional association>)
	  b parent class_ref 1215244 // OnParameterChangeListener
      end

      class 1216908 "BaseParameterListener"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
      end

      classrelation 2478092 // mBaseParamListener (<unidirectional association>)
	relation 2478092 --->
	  a role_name "mBaseParamListener" init_value " null" private
	    comment "
Listener used internally to to receive raw parameter change event from AudioEffect super class

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2478092 // mBaseParamListener (<unidirectional association>)
	  b parent class_ref 1216908 // BaseParameterListener
      end

      attribute 4445836 "mParamListenerLock"
	const_attribute private explicit_type "Object"
	init_value " new Object()"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Lock for access to mParamListener
"
      end

      operation 6877452 "Virtualizer"
	public explicit_return_type ""
	nparams 2
	  param in name "priority" explicit_type "int"
	  param in name "audioSession" explicit_type "int"
	nexceptions 4
	  explicit_exception "IllegalStateException"
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	  exception class_ref 806284 // RuntimeException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Class constructor.
@param priority the priority level requested by the application for controlling the Virtualizer
engine. As the same engine can be shared by several applications, this parameter indicates
how much the requesting application needs control of effect parameters. The normal priority
is 0, above normal is a positive number, below normal a negative number.
@param audioSession  system wide unique audio session identifier. The Virtualizer will
be attached to the MediaPlayer or AudioTrack in the same audio session.

@throws java.lang.IllegalStateException
@throws java.lang.IllegalArgumentException
@throws java.lang.UnsupportedOperationException
@throws java.lang.RuntimeException"
      end

      operation 6877580 "getStrengthSupported"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether setting strength is supported. If this method returns false, only one
strength is supported and the setStrength() method always rounds to that value.
@return true is strength parameter is supported, false otherwise"
      end

      operation 6877708 "setStrength"
	public explicit_return_type "void"
	nparams 1
	  param in name "strength" explicit_type "short"
	nexceptions 3
	  explicit_exception "IllegalStateException"
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the strength of the virtualizer effect. If the implementation does not support per mille
accuracy for setting the strength, it is allowed to round the given strength to the nearest
supported value. You can use the {@link #getRoundedStrength()} method to query the
(possibly rounded) value that was actually set.
@param strength strength of the effect. The valid range for strength strength is [0, 1000],
where 0 per mille designates the mildest effect and 1000 per mille designates the strongest.
@throws IllegalStateException
@throws IllegalArgumentException
@throws UnsupportedOperationException"
      end

      operation 6877836 "getRoundedStrength"
	public explicit_return_type "short"
	nparams 0
	nexceptions 3
	  explicit_exception "IllegalStateException"
	  explicit_exception "IllegalArgumentException"
	  explicit_exception "UnsupportedOperationException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the current strength of the effect.
@return the strength of the effect. The valid range for strength is [0, 1000], where 0 per
mille designates the mildest effect and 1000 per mille the strongest
@throws IllegalStateException
@throws IllegalArgumentException
@throws UnsupportedOperationException"
      end
    end

    class 1217036 "Visualizer"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The Visualizer class enables application to retrieve part of the currently playing audio for
visualization purpose. It is not an audio recording interface and only returns partial and low
quality audio content. However, to protect privacy of certain audio data (e.g voice mail) the use
of the visualizer requires the permission android.permission.RECORD_AUDIO.
<p>The audio session ID passed to the constructor indicates which audio content should be
visualized:<br>
<ul>
  <li>If the session is 0, the audio output mix is visualized</li>
  <li>If the session is not 0, the audio from a particular {@link android.media.MediaPlayer} or
  {@link android.media.AudioTrack}
  using this audio session is visualized </li>
</ul>
<p>Two types of representation of audio content can be captured: <br>
<ul>
  <li>Waveform data: consecutive 8-bit (unsigned) mono samples by using the
  {@link #getWaveForm(byte[])} method</li>
  <li>Frequency data: 8-bit magnitude FFT by using the {@link #getFft(byte[])} method</li>
</ul>
<p>The length of the capture can be retrieved or specified by calling respectively
{@link #getCaptureSize()} and {@link #setCaptureSize(int)} methods. The capture size must be a
power of 2 in the range returned by {@link #getCaptureSizeRange()}.
<p>In addition to the polling capture mode described above with {@link #getWaveForm(byte[])} and
 {@link #getFft(byte[])} methods, a callback mode is also available by installing a listener by
 use of the {@link #setDataCaptureListener(OnDataCaptureListener, int, boolean, boolean)} method.
 The rate at which the listener capture method is called as well as the type of data returned is
 specified.
<p>Before capturing data, the Visualizer must be enabled by calling the
{@link #setEnabled(boolean)} method.
When data capture is not needed any more, the Visualizer should be disabled.
<p>It is good practice to call the {@link #release()} method when the Visualizer is not used
anymore to free up native resources associated to the Visualizer instance.
<p>Creating a Visualizer on the output mix (audio session 0) requires permission
{@link android.Manifest.permission#MODIFY_AUDIO_SETTINGS}"
      extra_member 151564 "initialization"
	
	cpp "" ""
	java "  static {
        System.loadLibrary(\"audioeffect_jni\");
        native_init();
    }"
	php ""
	python ""
	idl ""
      end

      attribute 4445964 "TAG"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"Visualizer-JAVA\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 4446092 "STATE_UNINITIALIZED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "State of a Visualizer object that was not successfully initialized upon creation
"
      end

      attribute 4446220 "STATE_INITIALIZED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "State of a Visualizer object that is ready to be used.
"
      end

      attribute 4446348 "STATE_ENABLED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "State of a Visualizer object that is active.
"
      end

      attribute 4446476 "SCALING_MODE_NORMALIZED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " to keep in sync with system/media/audio_effects/include/audio_effects/effect_visualizer.h

Defines a capture mode where amplification is applied based on the content of the captured
data. This is the default Visualizer mode, and is suitable for music visualization.
"
      end

      attribute 4446604 "SCALING_MODE_AS_PLAYED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Defines a capture mode where the playback volume will affect (scale) the range of the
captured data. A low playback volume will lead to low sample and fft values, and vice-versa.
"
      end

      attribute 4446732 "NATIVE_EVENT_PCM_CAPTURE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " to keep in sync with frameworks/base/media/jni/audioeffect/android_media_Visualizer.cpp"
      end

      attribute 4446860 "NATIVE_EVENT_FFT_CAPTURE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 4446988 "NATIVE_EVENT_SERVER_DIED"
	class_attribute const_attribute private explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 4447116 "SUCCESS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Error codes:

Successful operation.
"
      end

      attribute 4447244 "ERROR"
	class_attribute const_attribute public explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Unspecified error.
"
      end

      attribute 4447372 "ALREADY_EXISTS"
	class_attribute const_attribute public explicit_type "int"
	init_value " -2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Internal operation status. Not returned by any method.
"
      end

      attribute 4447500 "ERROR_NO_INIT"
	class_attribute const_attribute public explicit_type "int"
	init_value " -3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Operation failed due to bad object initialization.
"
      end

      attribute 4447628 "ERROR_BAD_VALUE"
	class_attribute const_attribute public explicit_type "int"
	init_value " -4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Operation failed due to bad parameter value.
"
      end

      attribute 4447756 "ERROR_INVALID_OPERATION"
	class_attribute const_attribute public explicit_type "int"
	init_value " -5"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Operation failed because it was requested in wrong state.
"
      end

      attribute 4447884 "ERROR_NO_MEMORY"
	class_attribute const_attribute public explicit_type "int"
	init_value " -6"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Operation failed due to lack of memory.
"
      end

      attribute 4448012 "ERROR_DEAD_OBJECT"
	class_attribute const_attribute public explicit_type "int"
	init_value " -7"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Operation failed due to dead remote object.
"
      end

      attribute 4448140 "mState"
	private explicit_type "int"
	init_value " STATE_UNINITIALIZED"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "--------------------------------------------------------------------------
 Member variables
--------------------

Indicates the state of the Visualizer instance
"
      end

      attribute 4448268 "mStateLock"
	const_attribute private explicit_type "Object"
	init_value " new Object()"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Lock to synchronize access to mState
"
      end

      attribute 4448396 "mId"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "System wide unique Identifier of the visualizer engine used by this Visualizer instance
"
      end

      attribute 4448524 "mListenerLock"
	const_attribute private explicit_type "Object"
	init_value " new Object()"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Lock to protect listeners updates against event notifications
"
      end

      class 1217164 "NativeEventHandler"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 2478604 // <generalisation>
	  relation 2478604 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 2478604 // <generalisation>
	    b parent class_ref 687500 // Handler
	end

	classrelation 2478732 // mVisualizer (<unidirectional association>)
	  relation 2478732 --->
	    a role_name "mVisualizer" private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 2478732 // mVisualizer (<unidirectional association>)
	    b parent class_ref 1217036 // Visualizer
	end

	operation 6880396 "NativeEventHandler"
	  public explicit_return_type ""
	  nparams 2
	    param inout name "v" type class_ref 1217036 // Visualizer
	    param inout name "looper" type class_ref 685324 // Looper
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6880524 "handleCaptureMessage"
	  private explicit_return_type "void"
	  nparams 1
	    param inout name "msg" type class_ref 690316 // Message
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6880652 "handleServerDiedMessage"
	  private explicit_return_type "void"
	  nparams 1
	    param inout name "msg" type class_ref 690316 // Message
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 6880780 "handleMessage"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "msg" type class_ref 690316 // Message
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      classrelation 2478220 // mNativeEventHandler (<unidirectional association>)
	relation 2478220 --->
	  a role_name "mNativeEventHandler" init_value " null" private
	    comment "
Handler for events coming from the native code

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2478220 // mNativeEventHandler (<unidirectional association>)
	  b parent class_ref 1217164 // NativeEventHandler
      end

      class 1217292 "OnDataCaptureListener"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 6879756 "onWaveFormDataCapture"
	  public explicit_return_type "void"
	  nparams 3
	    param inout name "visualizer" type class_ref 1217036 // Visualizer
	    param inout name "waveform" explicit_type "byte"
	    param in name "samplingRate" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Method called when a new waveform capture is available.
<p>Data in the waveform buffer is valid only within the scope of the callback.
Applications which needs access to the waveform data after returning from the callback
should make a copy of the data instead of holding a reference.
@param visualizer Visualizer object on which the listener is registered.
@param waveform array of bytes containing the waveform representation.
@param samplingRate sampling rate of the audio visualized."
	end

	operation 6879884 "onFftDataCapture"
	  public explicit_return_type "void"
	  nparams 3
	    param inout name "visualizer" type class_ref 1217036 // Visualizer
	    param inout name "fft" explicit_type "byte"
	    param in name "samplingRate" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Method called when a new frequency capture is available.
<p>Data in the fft buffer is valid only within the scope of the callback.
Applications which needs access to the fft data after returning from the callback
should make a copy of the data instead of holding a reference.
@param visualizer Visualizer object on which the listener is registered.
@param fft array of bytes containing the frequency representation.
@param samplingRate sampling rate of the audio visualized."
	end
      end

      classrelation 2478348 // mCaptureListener (<unidirectional association>)
	relation 2478348 --->
	  a role_name "mCaptureListener" init_value " null" private
	    comment "
 PCM and FFT capture listener registered by client

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2478348 // mCaptureListener (<unidirectional association>)
	  b parent class_ref 1217292 // OnDataCaptureListener
      end

      class 1217420 "OnServerDiedListener"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 6880140 "onServerDied"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "@hide

Method called when the native media server has died.
<p>If the native media server encounters a fatal error and needs to restart, the binder
connection from the {@link #Visualizer} to the media server will be broken.  Data capture
callbacks will stop happening, and client initiated calls to the {@link #Visualizer}
instance will fail with the error code {@link #DEAD_OBJECT}.  To restore functionality,
clients should {@link #release()} their old visualizer and create a new instance."
	end
      end

      classrelation 2478476 // mServerDiedListener (<unidirectional association>)
	relation 2478476 --->
	  a role_name "mServerDiedListener" init_value " null" private
	    comment "
 Server Died listener registered by client

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2478476 // mServerDiedListener (<unidirectional association>)
	  b parent class_ref 1217420 // OnServerDiedListener
      end

      attribute 4448652 "mNativeVisualizer"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " accessed by native methods"
      end

      attribute 4448780 "mJniData"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 6877964 "Visualizer"
	public explicit_return_type ""
	nparams 1
	  param in name "audioSession" explicit_type "int"
	nexceptions 2
	  explicit_exception "UnsupportedOperationException"
	  exception class_ref 806284 // RuntimeException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "--------------------------------------------------------------------------
 Constructor, Finalize
--------------------

Class constructor.
@param audioSession system wide unique audio session identifier. If audioSession
 is not 0, the visualizer will be attached to the MediaPlayer or AudioTrack in the
 same audio session. Otherwise, the Visualizer will apply to the output mix.

@throws java.lang.UnsupportedOperationException
@throws java.lang.RuntimeException"
      end

      operation 6878092 "release"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Releases the native Visualizer resources. It is a good practice to release the
visualization engine when not in use."
      end

      operation 6878220 "finalize"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 6878348 "setEnabled"
	public explicit_return_type "int"
	nparams 1
	  param inout name "enabled" explicit_type "boolean"
	nexceptions 1
	  explicit_exception "IllegalStateException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enable or disable the visualization engine.
@param enabled requested enable state
@return {@link #SUCCESS} in case of success,
{@link #ERROR_INVALID_OPERATION} or {@link #ERROR_DEAD_OBJECT} in case of failure.
@throws IllegalStateException"
      end

      operation 6878476 "getEnabled"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get current activation state of the visualizer.
@return true if the visualizer is active, false otherwise"
      end

      operation 6878604 "getCaptureSizeRange"
	class_operation public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type}[] ${name}${(}${)}${throws};
"
	
	
	
	comment "Returns the capture size range.
@return the mininum capture size is returned in first array element and the maximum in second
array element."
      end

      operation 6878732 "getMaxCaptureRate"
	class_operation public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
	comment "Returns the maximum capture rate for the callback capture method. This is the maximum value
for the rate parameter of the
{@link #setDataCaptureListener(OnDataCaptureListener, int, boolean, boolean)} method.
@return the maximum capture rate expressed in milliHertz"
      end

      operation 6878860 "setCaptureSize"
	public explicit_return_type "int"
	nparams 1
	  param in name "size" explicit_type "int"
	nexceptions 1
	  explicit_exception "IllegalStateException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the capture size, i.e. the number of bytes returned by {@link #getWaveForm(byte[])} and
{@link #getFft(byte[])} methods. The capture size must be a power of 2 in the range returned
by {@link #getCaptureSizeRange()}.
This method must not be called when the Visualizer is enabled.
@param size requested capture size
@return {@link #SUCCESS} in case of success,
{@link #ERROR_BAD_VALUE} in case of failure.
@throws IllegalStateException"
      end

      operation 6878988 "getCaptureSize"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  explicit_exception "IllegalStateException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns current capture size.
@return the capture size in bytes."
      end

      operation 6879116 "setScalingMode"
	public explicit_return_type "int"
	nparams 1
	  param in name "mode" explicit_type "int"
	nexceptions 1
	  explicit_exception "IllegalStateException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the type of scaling applied on the captured visualization data.
@param mode see {@link #SCALING_MODE_NORMALIZED}
    and {@link #SCALING_MODE_AS_PLAYED}
@return {@link #SUCCESS} in case of success,
    {@link #ERROR_BAD_VALUE} in case of failure.
@throws IllegalStateException"
      end

      operation 6879244 "getScalingMode"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  explicit_exception "IllegalStateException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current scaling mode on the captured visualization data.
@return the scaling mode, see {@link #SCALING_MODE_NORMALIZED}
    and {@link #SCALING_MODE_AS_PLAYED}.
@throws IllegalStateException"
      end

      operation 6879372 "getSamplingRate"
	public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  explicit_exception "IllegalStateException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the sampling rate of the captured audio.
@return the sampling rate in milliHertz."
      end

      operation 6879500 "getWaveForm"
	public explicit_return_type "int"
	nparams 1
	  param inout name "waveform" explicit_type "byte"
	nexceptions 1
	  explicit_exception "IllegalStateException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a waveform capture of currently playing audio content. The capture consists in
a number of consecutive 8-bit (unsigned) mono PCM samples equal to the capture size returned
by {@link #getCaptureSize()}.
<p>This method must be called when the Visualizer is enabled.
@param waveform array of bytes where the waveform should be returned
@return {@link #SUCCESS} in case of success,
{@link #ERROR_NO_MEMORY}, {@link #ERROR_INVALID_OPERATION} or {@link #ERROR_DEAD_OBJECT}
in case of failure.
@throws IllegalStateException"
      end

      operation 6879628 "getFft"
	public explicit_return_type "int"
	nparams 1
	  param inout name "fft" explicit_type "byte"
	nexceptions 1
	  explicit_exception "IllegalStateException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a frequency capture of currently playing audio content.
<p>This method must be called when the Visualizer is enabled.
<p>The capture is an 8-bit magnitude FFT, the frequency range covered being 0 (DC) to half of
the sampling rate returned by {@link #getSamplingRate()}. The capture returns the real and
imaginary parts of a number of frequency points equal to half of the capture size plus one.
<p>Note: only the real part is returned for the first point (DC) and the last point
(sampling frequency / 2).
<p>The layout in the returned byte array is as follows:
<ul>
  <li> n is the capture size returned by getCaptureSize()</li>
  <li> Rfk, Ifk are respectively  the real and imaginary parts of the kth frequency
  component</li>
  <li> If Fs is the sampling frequency retuned by getSamplingRate() the kth frequency is:
  (k*Fs)/(n/2) </li>
</ul>
<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">
<tr><td>Index </p></td>
    <td>0 </p></td>
    <td>1 </p></td>
    <td>2 </p></td>
    <td>3 </p></td>
    <td>4 </p></td>
    <td>5 </p></td>
    <td>... </p></td>
    <td>n - 2 </p></td>
    <td>n - 1 </p></td></tr>
<tr><td>Data </p></td>
    <td>Rf0 </p></td>
    <td>Rf(n/2) </p></td>
    <td>Rf1 </p></td>
    <td>If1 </p></td>
    <td>Rf2 </p></td>
    <td>If2 </p></td>
    <td>... </p></td>
    <td>Rf(n-1)/2 </p></td>
    <td>If(n-1)/2 </p></td></tr>
</table>
@param fft array of bytes where the FFT should be returned
@return {@link #SUCCESS} in case of success,
{@link #ERROR_NO_MEMORY}, {@link #ERROR_INVALID_OPERATION} or {@link #ERROR_DEAD_OBJECT}
in case of failure.
@throws IllegalStateException"
      end

      operation 6880012 "setDataCaptureListener"
	public explicit_return_type "int"
	nparams 4
	  param inout name "listener" type class_ref 1217292 // OnDataCaptureListener
	  param in name "rate" explicit_type "int"
	  param inout name "waveform" explicit_type "boolean"
	  param inout name "fft" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Registers an OnDataCaptureListener interface and specifies the rate at which the capture
should be updated as well as the type of capture requested.
<p>Call this method with a null listener to stop receiving the capture updates.
@param listener OnDataCaptureListener registered
@param rate rate in milliHertz at which the capture should be updated
@param waveform true if a waveform capture is requested: the onWaveFormDataCapture()
method will be called on the OnDataCaptureListener interface.
@param fft true if a frequency capture is requested: the onFftDataCapture() method will be
called on the OnDataCaptureListener interface.
@return {@link #SUCCESS} in case of success,
{@link #ERROR_NO_INIT} or {@link #ERROR_BAD_VALUE} in case of failure."
      end

      operation 6880268 "setServerDiedListener"
	public explicit_return_type "int"
	nparams 1
	  param inout name "listener" type class_ref 1217420 // OnServerDiedListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide

Registers an OnServerDiedListener interface.
<p>Call this method with a null listener to stop receiving server death notifications.
@return {@link #SUCCESS} in case of success,"
      end

      operation 6880908 "native_init"
	class_operation private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
	comment "---------------------------------------------------------
 Interface definitions
--------------------"
      end

      operation 6881036 "native_setup"
	private explicit_return_type "int"
	nparams 3
	  param inout name "audioeffect_this" explicit_type "Object"
	  param in name "audioSession" explicit_type "int"
	  param inout name "id" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws};
"
	
	
	
      end

      operation 6881164 "native_finalize"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
      end

      operation 6881292 "native_release"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
      end

      operation 6881420 "native_setEnabled"
	private explicit_return_type "int"
	nparams 1
	  param inout name "enabled" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 6881548 "native_getEnabled"
	private explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
      end

      operation 6881676 "native_setCaptureSize"
	private explicit_return_type "int"
	nparams 1
	  param in name "size" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 6881804 "native_getCaptureSize"
	private explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
      end

      operation 6881932 "native_setScalingMode"
	private explicit_return_type "int"
	nparams 1
	  param in name "mode" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 6882060 "native_getScalingMode"
	private explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
      end

      operation 6882188 "native_getSamplingRate"
	private explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
      end

      operation 6882316 "native_getWaveForm"
	private explicit_return_type "int"
	nparams 1
	  param inout name "waveform" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0}[] ${p0}${)}${throws};
"
	
	
	
      end

      operation 6882444 "native_getFft"
	private explicit_return_type "int"
	nparams 1
	  param inout name "fft" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0}[] ${p0}${)}${throws};
"
	
	
	
      end

      operation 6882572 "native_setPeriodicCapture"
	private explicit_return_type "int"
	nparams 3
	  param in name "rate" explicit_type "int"
	  param inout name "waveForm" explicit_type "boolean"
	  param inout name "fft" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws};
"
	
	
	
      end

      operation 6882700 "postEventFromNative"
	class_operation private explicit_return_type "void"
	nparams 5
	  param inout name "effect_ref" explicit_type "Object"
	  param in name "what" explicit_type "int"
	  param in name "arg1" explicit_type "int"
	  param in name "arg2" explicit_type "int"
	  param inout name "obj" explicit_type "Object"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unused\")
"
	
	
	
	comment "---------------------------------------------------------
 Java methods called from the native side
--------------------"
      end
    end
  end

  deploymentview 183948 "audiofx"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 588684 "AudioEffect"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.annotation.SdkConstant;
import android.annotation.SdkConstant.SdkConstantType;
import android.os.Handler;
import android.os.Looper;
import android.os.Message;
import android.util.Log;
import java.io.IOException;
import java.lang.ref.WeakReference;
import java.nio.ByteOrder;
import java.nio.ByteBuffer;
import java.util.UUID;
${definition}"
      associated_classes
	class_ref 1214732 // AudioEffect
      end
      comment "Copyright (C) 2010 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 588812 "AcousticEchoCanceler"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.util.Log;
${definition}"
      associated_classes
	class_ref 1214604 // AcousticEchoCanceler
      end
      comment "Copyright (C) 2011 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 588940 "AutomaticGainControl"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.util.Log;
${definition}"
      associated_classes
	class_ref 1215500 // AutomaticGainControl
      end
      comment "Copyright (C) 2011 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 589068 "NoiseSuppressor"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.util.Log;
${definition}"
      associated_classes
	class_ref 1216396 // NoiseSuppressor
      end
      comment "Copyright (C) 2011 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 589196 "Visualizer"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.util.Log;
import java.lang.ref.WeakReference;
import java.io.IOException;
import android.os.Handler;
import android.os.Looper;
import android.os.Message;
${definition}"
      associated_classes
	class_ref 1217036 // Visualizer
      end
      comment "Copyright (C) 2010 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end
  end
end
