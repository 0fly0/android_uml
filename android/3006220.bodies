class Lineup
!!!13263500.java!!!	Lineup(inout in : Parcel)
        // Use readValue() which handles nulls
        mLineupId = (String) in.readValue(null);
        mLineupName = (String) in.readValue(null);
        mOperatorId = (String) in.readValue(null);
        mOperatorName = (String) in.readValue(null);
        mHeadendName = (String) in.readValue(null);
        mLineupType = LineupType.safeValueOf((String) in.readValue(null));
        mPreferred = (in.readInt() == 1);
        mSupportsTwoWay = (in.readInt() == 1);
        if (in.readInt() == 1) {
            mIcon = Bitmap.CREATOR.createFromParcel(in);
        }

        mChannels = new ArrayList<Channel>();
        in.readTypedList(mChannels, Channel.CREATOR);
        Collections.sort(mChannels);
!!!13263628.java!!!	Lineup(inout lineup : Lineup)
        mLineupId = lineup.getLineupId();
        mLineupName = lineup.getLineupName();
        mOperatorId = lineup.getOperatorId();
        mOperatorName = lineup.getOperatorName();
        mHeadendName = lineup.getHeadendName();
        mChannels = new ArrayList<Channel>();
        mLineupType = lineup.getLineupType();
        mPreferred = lineup.isPreferred();
        mSupportsTwoWay = lineup.getSupportsTwoWay();
        mIcon = lineup.getIcon();
        for (Channel channel : lineup.getChannels()) {
            mChannels.add(new Channel(channel));
        }
!!!13263756.java!!!	Lineup(in lineupId : String, in lineupName : String)
        mLineupId = lineupId;
        mLineupName = lineupName;
        mLineupType = LineupType.OTHER;
        mChannels = new ArrayList<Channel>();
!!!13263884.java!!!	toString() : String
        return mLineupName;
!!!13264012.java!!!	getLineupId() : String
        return mLineupId;
!!!13264140.java!!!	setLineupId(in lineupId : String) : void
        mLineupId = lineupId;
!!!13264268.java!!!	getLineupName() : String
        return mLineupName;
!!!13264396.java!!!	setLineupName(in lineupName : String) : void
        mLineupName = lineupName;
!!!13264524.java!!!	setLocationName(in locationName : String) : void
        if ((mLineupName != null) && (locationName != null)
                && !mLineupName.contains(locationName)) {
            // Lineup names can be ambiguous (e.g. "Comcast").  If the
            // lineup name doesn't include the location name, append it
            // for disambiguation.
            mLineupName += " " + locationName;
        }
!!!13264652.java!!!	getOperatorId() : String
        return mOperatorId;
!!!13264780.java!!!	setOperatorId(in operatorId : String) : void
        mOperatorId = operatorId;
!!!13264908.java!!!	getOperatorName() : String
        return mOperatorName;
!!!13265036.java!!!	setOperatorName(in operatorName : String) : void
        mOperatorName = operatorName;
!!!13265164.java!!!	getHeadendName() : String
        return mHeadendName;
!!!13265292.java!!!	setHeadendName(in headendName : String) : void
        mHeadendName = headendName;
!!!13265420.java!!!	getLineupType() : LineupType
        return mLineupType;
!!!13265548.java!!!	setLineupType(inout lineupType : LineupType) : void
        mLineupType = (lineupType == null) ? LineupType.OTHER : lineupType;
!!!13265676.java!!!	isPreferred() : boolean
        return mPreferred;
!!!13265804.java!!!	setPreferred(inout preferred : boolean) : void
        mPreferred = preferred;
!!!13265932.java!!!	getSupportsTwoWay() : boolean
        return mSupportsTwoWay;
!!!13266060.java!!!	setSupportsTwoWay(inout supportsTwoWay : boolean) : void
        mSupportsTwoWay = supportsTwoWay;
!!!13266188.java!!!	getIcon() : Bitmap
        return mIcon;
!!!13266316.java!!!	setIcon(inout icon : Bitmap) : void
        mIcon = icon;
!!!13266444.java!!!	getChannels() : Channel
        return mChannels;
!!!13266572.java!!!	hasChannels() : boolean
        return (mChannels != null) && !mChannels.isEmpty();
!!!13266700.java!!!	setChannels(inout channels : List<Channel>) : void
        mChannels.clear();
        mChannels.addAll(channels);
!!!13266828.java!!!	addChannel(inout channel : Channel) : void
        mChannels.add(channel);
!!!13266956.java!!!	sortChannels() : void
        Collections.sort(mChannels);
!!!13267084.java!!!	hasTier(inout tier : TmsChannelTier) : boolean
        for (Channel channel : mChannels) {
            if (channel.getTier() == tier) {
                return true;
            }
        }
        return false;
!!!13267212.java!!!	hasTierEnabled(inout tier : TmsChannelTier) : boolean
        for (Channel channel : mChannels) {
            if (channel.getTier() == tier && channel.isEnabled()) {
                return true;
            }
        }
        return false;
!!!13267340.java!!!	setTierEnabled(inout tier : TmsChannelTier, inout enabled : boolean) : void
        for (Channel channel : mChannels) {
            if (channel.getTier() == tier) {
                channel.setEnabled(enabled);
            }
        }
!!!13267468.java!!!	containsChannel(inout channel : Channel) : boolean
        return mChannels.contains(channel);
!!!13267596.java!!!	getChannelByChannelNumber(inout channelNumber : ChannelNumber) : Channel
        for (Channel channel : mChannels) {
            if (channelNumber.equals(channel.getChannelNumber())) {
                return channel;
            }
        }
        return null;
!!!13267724.java!!!	compareTo(inout other : Lineup) : int
        if (mPreferred && !other.mPreferred) {
            return -1;
        } else if (!mPreferred && other.mPreferred) {
            return 1;
        }
        return mLineupName.compareTo(other.mLineupName);
!!!13267852.java!!!	hashCode() : int
        if (!TextUtils.isEmpty(mOperatorId)) {
            return mOperatorId.hashCode();
        } else {
            return mLineupId.hashCode();
        }
!!!13267980.java!!!	equals(inout other : Object) : boolean
        if (this == other) {
            return true;
        }
        if (!(other instanceof Lineup)) {
            return false;
        }
        Lineup otherLineup = (Lineup) other;
        if (!TextUtils.isEmpty(mOperatorId) && !TextUtils.isEmpty(otherLineup.mOperatorId)) {
            return mOperatorId.equals(otherLineup.mOperatorId);
        } else {
            return mLineupId.equals(otherLineup.mLineupId);
        }
!!!13270028.java!!!	describeContents() : int
        return 0;
!!!13270156.java!!!	writeToParcel(inout dest : Parcel, in flags : int) : void
        // Use writeValue() which handles nulls
        dest.writeValue(mLineupId);
        dest.writeValue(mLineupName);
        dest.writeValue(mOperatorId);
        dest.writeValue(mOperatorName);
        dest.writeValue(mHeadendName);
        dest.writeValue(mLineupType.name());
        dest.writeInt(mPreferred ? 1 : 0);
        dest.writeInt(mSupportsTwoWay ? 1 : 0);
        dest.writeInt((mIcon != null) ? 1 : 0);
        if (mIcon != null) {
            mIcon.writeToParcel(dest, 0);
        }
        dest.writeTypedList(mChannels);
