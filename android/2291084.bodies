class Proxy
!!!10556556.java!!!	Proxy(inout remote : android.os.IBinder)
mRemote = remote;
!!!10556684.java!!!	asBinder() : android.os.IBinder
return mRemote;
!!!10556812.java!!!	getInterfaceDescriptor() : java.lang.String
return DESCRIPTOR;
!!!10556940.java!!!	getInputDevice(in deviceId : int) : android.view.InputDevice
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
android.view.InputDevice _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(deviceId);
mRemote.transact(Stub.TRANSACTION_getInputDevice, _data, _reply, 0);
_reply.readException();
if ((0!=_reply.readInt())) {
_result = android.view.InputDevice.CREATOR.createFromParcel(_reply);
}
else {
_result = null;
}
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!10557068.java!!!	getInputDeviceIds() : int
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
int[] _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
mRemote.transact(Stub.TRANSACTION_getInputDeviceIds, _data, _reply, 0);
_reply.readException();
_result = _reply.createIntArray();
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!10557196.java!!!	hasKeys(in deviceId : int, in sourceMask : int, inout keyCodes : int, inout keyExists : boolean) : boolean
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
boolean _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(deviceId);
_data.writeInt(sourceMask);
_data.writeIntArray(keyCodes);
if ((keyExists==null)) {
_data.writeInt(-1);
}
else {
_data.writeInt(keyExists.length);
}
mRemote.transact(Stub.TRANSACTION_hasKeys, _data, _reply, 0);
_reply.readException();
_result = (0!=_reply.readInt());
_reply.readBooleanArray(keyExists);
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!10557324.java!!!	tryPointerSpeed(in speed : int) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(speed);
mRemote.transact(Stub.TRANSACTION_tryPointerSpeed, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!10557452.java!!!	injectInputEvent(inout ev : android.view.InputEvent, in mode : int) : boolean
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
boolean _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
if ((ev!=null)) {
_data.writeInt(1);
ev.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
_data.writeInt(mode);
mRemote.transact(Stub.TRANSACTION_injectInputEvent, _data, _reply, 0);
_reply.readException();
_result = (0!=_reply.readInt());
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!10557580.java!!!	getKeyboardLayouts() : android.hardware.input.KeyboardLayout
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
android.hardware.input.KeyboardLayout[] _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
mRemote.transact(Stub.TRANSACTION_getKeyboardLayouts, _data, _reply, 0);
_reply.readException();
_result = _reply.createTypedArray(android.hardware.input.KeyboardLayout.CREATOR);
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!10557708.java!!!	getKeyboardLayout(inout keyboardLayoutDescriptor : java.lang.String) : android.hardware.input.KeyboardLayout
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
android.hardware.input.KeyboardLayout _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeString(keyboardLayoutDescriptor);
mRemote.transact(Stub.TRANSACTION_getKeyboardLayout, _data, _reply, 0);
_reply.readException();
if ((0!=_reply.readInt())) {
_result = android.hardware.input.KeyboardLayout.CREATOR.createFromParcel(_reply);
}
else {
_result = null;
}
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!10557836.java!!!	getCurrentKeyboardLayoutForInputDevice(inout inputDeviceDescriptor : java.lang.String) : java.lang.String
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
java.lang.String _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeString(inputDeviceDescriptor);
mRemote.transact(Stub.TRANSACTION_getCurrentKeyboardLayoutForInputDevice, _data, _reply, 0);
_reply.readException();
_result = _reply.readString();
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!10557964.java!!!	setCurrentKeyboardLayoutForInputDevice(inout inputDeviceDescriptor : java.lang.String, inout keyboardLayoutDescriptor : java.lang.String) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeString(inputDeviceDescriptor);
_data.writeString(keyboardLayoutDescriptor);
mRemote.transact(Stub.TRANSACTION_setCurrentKeyboardLayoutForInputDevice, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!10558092.java!!!	getKeyboardLayoutsForInputDevice(inout inputDeviceDescriptor : java.lang.String) : java.lang.String
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
java.lang.String[] _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeString(inputDeviceDescriptor);
mRemote.transact(Stub.TRANSACTION_getKeyboardLayoutsForInputDevice, _data, _reply, 0);
_reply.readException();
_result = _reply.createStringArray();
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!10558220.java!!!	addKeyboardLayoutForInputDevice(inout inputDeviceDescriptor : java.lang.String, inout keyboardLayoutDescriptor : java.lang.String) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeString(inputDeviceDescriptor);
_data.writeString(keyboardLayoutDescriptor);
mRemote.transact(Stub.TRANSACTION_addKeyboardLayoutForInputDevice, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!10558348.java!!!	removeKeyboardLayoutForInputDevice(inout inputDeviceDescriptor : java.lang.String, inout keyboardLayoutDescriptor : java.lang.String) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeString(inputDeviceDescriptor);
_data.writeString(keyboardLayoutDescriptor);
mRemote.transact(Stub.TRANSACTION_removeKeyboardLayoutForInputDevice, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!10558476.java!!!	registerInputDevicesChangedListener(inout listener : IInputDevicesChangedListener) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeStrongBinder((((listener!=null))?(listener.asBinder()):(null)));
mRemote.transact(Stub.TRANSACTION_registerInputDevicesChangedListener, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!10558604.java!!!	vibrate(in deviceId : int, inout pattern : long, in repeat : int, inout token : android.os.IBinder) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(deviceId);
_data.writeLongArray(pattern);
_data.writeInt(repeat);
_data.writeStrongBinder(token);
mRemote.transact(Stub.TRANSACTION_vibrate, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!10558732.java!!!	cancelVibrate(in deviceId : int, inout token : android.os.IBinder) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeInt(deviceId);
_data.writeStrongBinder(token);
mRemote.transact(Stub.TRANSACTION_cancelVibrate, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
