class IAccessibilityServiceClientWrapper
!!!2147340.java!!!	IAccessibilityServiceClientWrapper(inout context : Context, inout looper : Looper, inout callback : Callbacks)
            mCallback = callback;
            mCaller = new HandlerCaller(context, looper, this);
!!!2147468.java!!!	setConnection(inout connection : IAccessibilityServiceConnection, in connectionId : int) : void
            Message message = mCaller.obtainMessageIO(DO_SET_SET_CONNECTION, connectionId,
                    connection);
            mCaller.sendMessage(message);
!!!2147596.java!!!	onInterrupt() : void
            Message message = mCaller.obtainMessage(DO_ON_INTERRUPT);
            mCaller.sendMessage(message);
!!!2147724.java!!!	onAccessibilityEvent(inout event : AccessibilityEvent) : void
            Message message = mCaller.obtainMessageO(DO_ON_ACCESSIBILITY_EVENT, event);
            mCaller.sendMessage(message);
!!!2147852.java!!!	onGesture(in gestureId : int) : void
            Message message = mCaller.obtainMessageI(DO_ON_GESTURE, gestureId);
            mCaller.sendMessage(message);
!!!2147980.java!!!	executeMessage(inout message : Message) : void
            switch (message.what) {
                case DO_ON_ACCESSIBILITY_EVENT :
                    AccessibilityEvent event = (AccessibilityEvent) message.obj;
                    if (event != null) {
                        AccessibilityInteractionClient.getInstance().onAccessibilityEvent(event);
                        mCallback.onAccessibilityEvent(event);
                        event.recycle();
                    }
                    return;
                case DO_ON_INTERRUPT :
                    mCallback.onInterrupt();
                    return;
                case DO_SET_SET_CONNECTION :
                    final int connectionId = message.arg1;
                    IAccessibilityServiceConnection connection =
                        (IAccessibilityServiceConnection) message.obj;
                    if (connection != null) {
                        AccessibilityInteractionClient.getInstance().addConnection(connectionId,
                                connection);
                        mCallback.onSetConnectionId(connectionId);
                        mCallback.onServiceConnected();
                    } else {
                        AccessibilityInteractionClient.getInstance().removeConnection(connectionId);
                        mCallback.onSetConnectionId(AccessibilityInteractionClient.NO_ID);
                    }
                    return;
                case DO_ON_GESTURE :
                    final int gestureId = message.arg1;
                    mCallback.onGesture(gestureId);
                    return;
                default :
                    Log.w(LOG_TAG, "Unknown message type " + message.what);
            }
