class Inet6Address
!!!572315.java!!!	Inet6Address(inout ipaddress : byte, inout hostName : String, in scope_id : int)
        super(AF_INET6, ipaddress, hostName);
        this.scope_id = scope_id;
        this.scope_id_set = (scope_id != 0);
!!!572443.java!!!	getByAddress(inout host : String, inout addr : byte, in scope_id : int) : Inet6Address
        if (addr == null || addr.length != 16) {
            throw new UnknownHostException("Not an IPv6 address: " + Arrays.toString(addr));
        }
        if (scope_id < 0) {
            scope_id = 0;
        }
        // TODO: should we clone 'addr'?
        return new Inet6Address(addr, host, scope_id);
!!!572571.java!!!	getByAddress(inout host : String, inout addr : byte, inout nif : NetworkInterface) : Inet6Address

        Inet6Address address = Inet6Address.getByAddress(host, addr, 0);

        // if nif is null, nothing needs to be set.
        if (nif == null) {
            return address;
        }

        // find the first address which matches the type addr,
        // then set the scope_id and ifname.
        Enumeration<InetAddress> addressList = nif.getInetAddresses();
        while (addressList.hasMoreElements()) {
            InetAddress ia = addressList.nextElement();
            if (ia.getAddress().length == 16) {
                Inet6Address v6ia = (Inet6Address) ia;
                boolean isSameType = v6ia.compareLocalType(address);
                if (isSameType) {
                    address.scope_id_set = true;
                    address.scope_id = v6ia.scope_id;
                    address.scope_ifname_set = true;
                    address.ifname = nif.getName();
                    break;
                }
            }
        }
        // if no address matches the type of addr, throws an
        // UnknownHostException.
        if (!address.scope_id_set) {
            throw new UnknownHostException("Scope id not found for address: " + Arrays.toString(addr));
        }
        return address;
!!!572699.java!!!	compareLocalType(inout ia : Inet6Address) : boolean
        if (ia.isSiteLocalAddress() && isSiteLocalAddress()) {
            return true;
        }
        if (ia.isLinkLocalAddress() && isLinkLocalAddress()) {
            return true;
        }
        if (!ia.isSiteLocalAddress() && !ia.isLinkLocalAddress()) {
            return true;
        }
        return false;
!!!572827.java!!!	isAnyLocalAddress() : boolean
        return Arrays.equals(ipaddress, Inet6Address.ANY.ipaddress);
!!!572955.java!!!	isIPv4CompatibleAddress() : boolean
        for (int i = 0; i < 12; i++) {
            if (ipaddress[i] != 0) {
                return false;
            }
        }
        return true;
!!!573083.java!!!	isLinkLocalAddress() : boolean
        return ((ipaddress[0] & 0xff) == 0xfe) && ((ipaddress[1] & 0xc0) == 0x80); // fe80:/10
!!!573211.java!!!	isLoopbackAddress() : boolean
        return Arrays.equals(ipaddress, Inet6Address.LOOPBACK.ipaddress);
!!!573339.java!!!	isMCGlobal() : boolean
        return ((ipaddress[0] & 0xff) == 0xff) && ((ipaddress[1] & 0x0f) == 0x0e); // ffxe:/16
!!!573467.java!!!	isMCLinkLocal() : boolean
        return ((ipaddress[0] & 0xff) == 0xff) && ((ipaddress[1] & 0x0f) == 0x02); // ffx2:/16
!!!573595.java!!!	isMCNodeLocal() : boolean
        return ((ipaddress[0] & 0xff) == 0xff) && ((ipaddress[1] & 0x0f) == 0x01); // ffx1:/16
!!!573723.java!!!	isMCOrgLocal() : boolean
        return ((ipaddress[0] & 0xff) == 0xff) && ((ipaddress[1] & 0x0f) == 0x08); // ffx8:/16
!!!573851.java!!!	isMCSiteLocal() : boolean
        return ((ipaddress[0] & 0xff) == 0xff) && ((ipaddress[1] & 0x0f) == 0x05); // ffx5:/16
!!!573979.java!!!	isMulticastAddress() : boolean
        return ((ipaddress[0] & 0xff) == 0xff); // ff::/8
!!!574107.java!!!	isSiteLocalAddress() : boolean
        return ((ipaddress[0] & 0xff) == 0xfe) && ((ipaddress[1] & 0xc0) == 0xc0); // fec0:/10
!!!574235.java!!!	getScopeId() : int
        return scope_id_set ? scope_id : 0;
!!!574363.java!!!	getScopedInterface() : NetworkInterface
        try {
            return (scope_ifname_set && ifname != null) ? NetworkInterface.getByName(ifname) : null;
        } catch (SocketException ex) {
            return null;
        }
!!!574491.java!!!	writeObject(inout stream : ObjectOutputStream) : void
        ObjectOutputStream.PutField fields = stream.putFields();
        if (ipaddress == null) {
            fields.put("ipaddress", null);
        } else {
            fields.put("ipaddress", ipaddress);
        }

        fields.put("scope_id", scope_id);
        fields.put("scope_id_set", scope_id_set);
        fields.put("scope_ifname_set", scope_ifname_set);
        fields.put("ifname", ifname);
        stream.writeFields();
!!!574619.java!!!	readObject(inout stream : ObjectInputStream) : void
        ObjectInputStream.GetField fields = stream.readFields();
        ipaddress = (byte[]) fields.get("ipaddress", null);
        scope_id = fields.get("scope_id", 0);
        scope_id_set = fields.get("scope_id_set", false);
        ifname = (String) fields.get("ifname", null);
        scope_ifname_set = fields.get("scope_ifname_set", false);
!!!574747.java!!!	toString() : String
        if (ifname != null) {
            return super.toString() + "%" + ifname;
        }
        if (scope_id != 0) {
            return super.toString() + "%" + scope_id;
        }
        return super.toString();
