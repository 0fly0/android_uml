format 74
"android" // framework::base::libs::storage::android
  revision 2
  modified_by 12 "shchen"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  cpp_h_dir "/home/shchen/work/jellybean/framework/base/libs/storage/"
  cpp_src_dir "/home/shchen/work/jellybean/framework/base/libs/storage/"
  cpp_namespace "android"
  classview 157068 "storage"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 647436 "BpMountService"
      visibility package 
      nactuals 2
      actual class class_ref 135180 // BpInterface
        rank 0 value class_ref 429196 // IMountService
      actual class class_ref 135180 // BpInterface
        rank 1 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 1351820 // <realization>
	relation 1351820 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    classrelation_ref 1351820 // <realization>
	  b parent class_ref 135180 // BpInterface
      end

      operation 1984012 "BpMountService"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param in name "impl" explicit_type "sp<IBinder>"
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}${)}${volatile}${throw} : BpInterface<IMountService>(impl)
    {
    };
"
	
	
	
	
      end

      operation 1984140 "registerListener"
	cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "listener" explicit_type "sp<IMountServiceListener>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        Parcel data, reply;
        data.writeInterfaceToken(IMountService::getInterfaceDescriptor());
        data.writeStrongBinder(listener->asBinder());
        if (remote()->transact(TRANSACTION_registerListener, data, &reply) != NO_ERROR) {
            ALOGD(\"registerListener could not contact remote\\n\");
            return;
        }
        int32_t err = reply.readExceptionCode();
        if (err < 0) {
            ALOGD(\"registerListener caught exception %d\\n\", err);
            return;
        }
    };
"
	
	
	
	
      end

      operation 1984268 "unregisterListener"
	cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "listener" explicit_type "sp<IMountServiceListener>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        Parcel data, reply;
        data.writeInterfaceToken(IMountService::getInterfaceDescriptor());
        data.writeStrongBinder(listener->asBinder());
        if (remote()->transact(TRANSACTION_unregisterListener, data, &reply) != NO_ERROR) {
            ALOGD(\"unregisterListener could not contact remote\\n\");
            return;
        }
        int32_t err = reply.readExceptionCode();
        if (err < 0) {
            ALOGD(\"unregisterListener caught exception %d\\n\", err);
            return;
        }
    };
"
	
	
	
	
      end

      operation 1984396 "isUsbMassStorageConnected"
	cpp_virtual cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        Parcel data, reply;
        data.writeInterfaceToken(IMountService::getInterfaceDescriptor());
        if (remote()->transact(TRANSACTION_isUsbMassStorageConnected, data, &reply) != NO_ERROR) {
            ALOGD(\"isUsbMassStorageConnected could not contact remote\\n\");
            return false;
        }
        int32_t err = reply.readExceptionCode();
        if (err < 0) {
            ALOGD(\"isUsbMassStorageConnected caught exception %d\\n\", err);
            return false;
        }
        return reply.readInt32() != 0;
    };
"
	
	
	
	
      end

      operation 1984524 "setUsbMassStorageEnabled"
	cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "enable" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        Parcel data, reply;
        data.writeInterfaceToken(IMountService::getInterfaceDescriptor());
        data.writeInt32(enable != 0);
        if (remote()->transact(TRANSACTION_setUsbMassStorageEnabled, data, &reply) != NO_ERROR) {
            ALOGD(\"setUsbMassStorageEnabled could not contact remote\\n\");
            return;
        }
        int32_t err = reply.readExceptionCode();
        if (err < 0) {
            ALOGD(\"setUsbMassStorageEnabled caught exception %d\\n\", err);
            return;
        }
    };
"
	
	
	
	
      end

      operation 1984652 "isUsbMassStorageEnabled"
	cpp_virtual cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        Parcel data, reply;
        data.writeInterfaceToken(IMountService::getInterfaceDescriptor());
        if (remote()->transact(TRANSACTION_isUsbMassStorageEnabled, data, &reply) != NO_ERROR) {
            ALOGD(\"isUsbMassStorageEnabled could not contact remote\\n\");
            return false;
        }
        int32_t err = reply.readExceptionCode();
        if (err < 0) {
            ALOGD(\"isUsbMassStorageEnabled caught exception %d\\n\", err);
            return false;
        }
        return reply.readInt32() != 0;
    };
"
	
	
	
	
      end

      operation 1984780 "mountVolume"
	cpp_inline public explicit_return_type "int32_t"
	nparams 1
	  param in name "mountPoint" type class_ref 142988 // String16
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        Parcel data, reply;
        data.writeInterfaceToken(IMountService::getInterfaceDescriptor());
        data.writeString16(mountPoint);
        if (remote()->transact(TRANSACTION_mountVolume, data, &reply) != NO_ERROR) {
            ALOGD(\"mountVolume could not contact remote\\n\");
            return -1;
        }
        int32_t err = reply.readExceptionCode();
        if (err < 0) {
            ALOGD(\"mountVolume caught exception %d\\n\", err);
            return err;
        }
        return reply.readInt32();
    };
"
	
	
	
	
      end

      operation 1984908 "unmountVolume"
	cpp_inline public explicit_return_type "int32_t"
	nparams 3
	  param in name "mountPoint" type class_ref 142988 // String16
	  param in name "force" explicit_type "bool"
	  param in name "removeEncryption" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} ${p1}${v1}, const ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract} {
        Parcel data, reply;
        data.writeInterfaceToken(IMountService::getInterfaceDescriptor());
        data.writeString16(mountPoint);
        data.writeInt32(force ? 1 : 0);
        data.writeInt32(removeEncryption ? 1 : 0);
        if (remote()->transact(TRANSACTION_unmountVolume, data, &reply) != NO_ERROR) {
            ALOGD(\"unmountVolume could not contact remote\\n\");
            return -1;
        }
        int32_t err = reply.readExceptionCode();
        if (err < 0) {
            ALOGD(\"unmountVolume caught exception %d\\n\", err);
            return err;
        }
        return reply.readInt32();
    };
"
	
	
	
	
      end

      operation 1985036 "formatVolume"
	cpp_inline public explicit_return_type "int32_t"
	nparams 1
	  param in name "mountPoint" type class_ref 142988 // String16
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        Parcel data, reply;
        data.writeInterfaceToken(IMountService::getInterfaceDescriptor());
        data.writeString16(mountPoint);
        if (remote()->transact(TRANSACTION_formatVolume, data, &reply) != NO_ERROR) {
            ALOGD(\"formatVolume could not contact remote\\n\");
            return -1;
        }
        int32_t err = reply.readExceptionCode();
        if (err < 0) {
            ALOGD(\"formatVolume caught exception %d\\n\", err);
            return err;
        }
        return reply.readInt32();
    };
"
	
	
	
	
      end

      operation 1985164 "getStorageUsers"
	cpp_inline public explicit_return_type "int32_t"
	nparams 2
	  param in name "mountPoint" type class_ref 142988 // String16
	  param inout name "users" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} * * ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        Parcel data, reply;
        data.writeInterfaceToken(IMountService::getInterfaceDescriptor());
        data.writeString16(mountPoint);
        if (remote()->transact(TRANSACTION_getStorageUsers, data, &reply) != NO_ERROR) {
            ALOGD(\"getStorageUsers could not contact remote\\n\");
            return -1;
        }
        int32_t err = reply.readExceptionCode();
        if (err < 0) {
            ALOGD(\"getStorageUsers caught exception %d\\n\", err);
            return err;
        }
        const int32_t numUsers = reply.readInt32();
        *users = (int32_t*)malloc(sizeof(int32_t)*numUsers);
        for (int i = 0; i < numUsers; i++) {
            **users++ = reply.readInt32();
        }
        return numUsers;
    };
"
	
	
	
	
      end

      operation 1985292 "getVolumeState"
	cpp_inline public explicit_return_type "int32_t"
	nparams 1
	  param in name "mountPoint" type class_ref 142988 // String16
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        Parcel data, reply;
        data.writeInterfaceToken(IMountService::getInterfaceDescriptor());
        data.writeString16(mountPoint);
        if (remote()->transact(TRANSACTION_getVolumeState, data, &reply) != NO_ERROR) {
            ALOGD(\"getVolumeState could not contact remote\\n\");
            return -1;
        }
        int32_t err = reply.readExceptionCode();
        if (err < 0) {
            ALOGD(\"getVolumeState caught exception %d\\n\", err);
            return err;
        }
        return reply.readInt32();
    };
"
	
	
	
	
      end

      operation 1985420 "createSecureContainer"
	cpp_inline public explicit_return_type "int32_t"
	nparams 5
	  param in name "id" type class_ref 142988 // String16
	  param in name "sizeMb" explicit_type "int32_t"
	  param in name "fstype" type class_ref 142988 // String16
	  param in name "key" type class_ref 142988 // String16
	  param in name "ownerUid" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} ${p1}${v1}, const ${t2} & ${p2}${v2}, const ${t3} & ${p3}${v3}, const ${t4} ${p4}${v4}${)}${const}${volatile}${throw}${abstract} {
        Parcel data, reply;
        data.writeInterfaceToken(IMountService::getInterfaceDescriptor());
        data.writeString16(id);
        data.writeInt32(sizeMb);
        data.writeString16(fstype);
        data.writeString16(key);
        data.writeInt32(ownerUid);
        if (remote()->transact(TRANSACTION_createSecureContainer, data, &reply) != NO_ERROR) {
            ALOGD(\"createSecureContainer could not contact remote\\n\");
            return -1;
        }
        int32_t err = reply.readExceptionCode();
        if (err < 0) {
            ALOGD(\"createSecureContainer caught exception %d\\n\", err);
            return err;
        }
        return reply.readInt32();
    };
"
	
	
	
	
      end

      operation 1985548 "finalizeSecureContainer"
	cpp_inline public explicit_return_type "int32_t"
	nparams 1
	  param in name "id" type class_ref 142988 // String16
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        Parcel data, reply;
        data.writeInterfaceToken(IMountService::getInterfaceDescriptor());
        data.writeString16(id);
        if (remote()->transact(TRANSACTION_finalizeSecureContainer, data, &reply) != NO_ERROR) {
            ALOGD(\"finalizeSecureContainer couldn't call remote\\n\");
            return -1;
        }
        int32_t err = reply.readExceptionCode();
        if (err < 0) {
            ALOGD(\"finalizeSecureContainer caught exception %d\\n\", err);
            return err;
        }
        return reply.readInt32();
    };
"
	
	
	
	
      end

      operation 1985676 "destroySecureContainer"
	cpp_inline public explicit_return_type "int32_t"
	nparams 1
	  param in name "id" type class_ref 142988 // String16
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        Parcel data, reply;
        data.writeInterfaceToken(IMountService::getInterfaceDescriptor());
        data.writeString16(id);
        if (remote()->transact(TRANSACTION_destroySecureContainer, data, &reply) != NO_ERROR) {
            ALOGD(\"destroySecureContainer couldn't call remote\");
            return -1;
        }
        int32_t err = reply.readExceptionCode();
        if (err < 0) {
            ALOGD(\"destroySecureContainer caught exception %d\\n\", err);
            return err;
        }
        return reply.readInt32();
    };
"
	
	
	
	
      end

      operation 1985804 "mountSecureContainer"
	cpp_inline public explicit_return_type "int32_t"
	nparams 3
	  param in name "id" type class_ref 142988 // String16
	  param in name "key" type class_ref 142988 // String16
	  param in name "ownerUid" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, const ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract} {
        Parcel data, reply;
        data.writeInterfaceToken(IMountService::getInterfaceDescriptor());
        data.writeString16(id);
        data.writeString16(key);
        data.writeInt32(ownerUid);
        if (remote()->transact(TRANSACTION_mountSecureContainer, data, &reply) != NO_ERROR) {
            ALOGD(\"mountSecureContainer couldn't call remote\");
            return -1;
        }
        int32_t err = reply.readExceptionCode(); // What to do...
        if (err < 0) {
            ALOGD(\"mountSecureContainer caught exception %d\\n\", err);
            return err;
        }
        return reply.readInt32();
    };
"
	
	
	
	
      end

      operation 1985932 "unmountSecureContainer"
	cpp_inline public explicit_return_type "int32_t"
	nparams 2
	  param in name "id" type class_ref 142988 // String16
	  param in name "force" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        Parcel data, reply;
        data.writeInterfaceToken(IMountService::getInterfaceDescriptor());
        data.writeString16(id);
        data.writeInt32(force ? 1 : 0);
        if (remote()->transact(TRANSACTION_getSecureContainerPath, data, &reply) != NO_ERROR) {
            ALOGD(\"unmountSecureContainer couldn't call remote\");
            return -1;
        }
        int32_t err = reply.readExceptionCode(); // What to do...
        if (err < 0) {
            ALOGD(\"unmountSecureContainer caught exception %d\\n\", err);
            return err;
        }
        return reply.readInt32();
    };
"
	
	
	
	
      end

      operation 1986060 "isSecureContainerMounted"
	cpp_inline public explicit_return_type "bool"
	nparams 1
	  param in name "id" type class_ref 142988 // String16
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        Parcel data, reply;
        data.writeInterfaceToken(IMountService::getInterfaceDescriptor());
        data.writeString16(id);
        if (remote()->transact(TRANSACTION_isSecureContainerMounted, data, &reply) != NO_ERROR) {
            ALOGD(\"isSecureContainerMounted couldn't call remote\");
            return false;
        }
        int32_t err = reply.readExceptionCode(); // What to do...
        if (err < 0) {
            ALOGD(\"isSecureContainerMounted caught exception %d\\n\", err);
            return false;
        }
        return reply.readInt32() != 0;
    };
"
	
	
	
	
      end

      operation 1986188 "renameSecureContainer"
	cpp_inline public explicit_return_type "int32_t"
	nparams 2
	  param in name "oldId" type class_ref 142988 // String16
	  param in name "newId" type class_ref 142988 // String16
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        Parcel data, reply;
        data.writeInterfaceToken(IMountService::getInterfaceDescriptor());
        data.writeString16(oldId);
        data.writeString16(newId);
        if (remote()->transact(TRANSACTION_renameSecureContainer, data, &reply) != NO_ERROR) {
            ALOGD(\"renameSecureContainer couldn't call remote\");
            return -1;
        }
        int32_t err = reply.readExceptionCode(); // What to do...
        if (err < 0) {
            ALOGD(\"renameSecureContainer caught exception %d\\n\", err);
            return err;
        }
        return reply.readInt32();
    };
"
	
	
	
	
      end

      operation 1986316 "getSecureContainerPath"
	cpp_inline public explicit_return_type "bool"
	nparams 2
	  param in name "id" type class_ref 142988 // String16
	  param inout name "path" type class_ref 142988 // String16
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        Parcel data, reply;
        data.writeInterfaceToken(IMountService::getInterfaceDescriptor());
        data.writeString16(id);
        if (remote()->transact(TRANSACTION_getSecureContainerPath, data, &reply) != NO_ERROR) {
            ALOGD(\"getSecureContainerPath couldn't call remote\");
            return false;
        }
        int32_t err = reply.readExceptionCode(); // What to do...
        if (err < 0) {
            ALOGD(\"getSecureContainerPath caught exception %d\\n\", err);
            return false;
        }
        path = reply.readString16();
        return true;
    };
"
	
	
	
	
      end

      operation 1986444 "getSecureContainerList"
	cpp_inline public explicit_return_type "int32_t"
	nparams 2
	  param in name "id" type class_ref 142988 // String16
	  param inout name "containers" type class_ref 142988 // String16
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} * & ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        Parcel data, reply;
        data.writeInterfaceToken(IMountService::getInterfaceDescriptor());
        data.writeString16(id);
        if (remote()->transact(TRANSACTION_getSecureContainerList, data, &reply) != NO_ERROR) {
            ALOGD(\"getSecureContainerList couldn't call remote\");
            return -1;
        }
        int32_t err = reply.readExceptionCode();
        if (err < 0) {
            ALOGD(\"getSecureContainerList caught exception %d\\n\", err);
            return err;
        }
        const int32_t numStrings = reply.readInt32();
        containers = new String16[numStrings];
        for (int i = 0; i < numStrings; i++) {
            containers[i] = reply.readString16();
        }
        return numStrings;
    };
"
	
	
	
	
      end

      operation 1986572 "shutdown"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "observer" explicit_type "sp<IMountShutdownObserver>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        Parcel data, reply;
        data.writeInterfaceToken(IMountService::getInterfaceDescriptor());
        data.writeStrongBinder(observer->asBinder());
        if (remote()->transact(TRANSACTION_shutdown, data, &reply) != NO_ERROR) {
            ALOGD(\"shutdown could not contact remote\\n\");
            return;
        }
        int32_t err = reply.readExceptionCode();
        if (err < 0) {
            ALOGD(\"shutdown caught exception %d\\n\", err);
            return;
        }
        reply.readExceptionCode();
    };
"
	
	
	
	
      end

      operation 1986700 "finishMediaUpdate"
	cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        Parcel data, reply;
        data.writeInterfaceToken(IMountService::getInterfaceDescriptor());
        if (remote()->transact(TRANSACTION_finishMediaUpdate, data, &reply) != NO_ERROR) {
            ALOGD(\"finishMediaUpdate could not contact remote\\n\");
            return;
        }
        int32_t err = reply.readExceptionCode();
        if (err < 0) {
            ALOGD(\"finishMediaUpdate caught exception %d\\n\", err);
            return;
        }
        reply.readExceptionCode();
    };
"
	
	
	
	
      end

      operation 1986828 "mountObb"
	cpp_inline public explicit_return_type "void"
	nparams 5
	  param in name "rawPath" type class_ref 142988 // String16
	  param in name "canonicalPath" type class_ref 142988 // String16
	  param in name "key" type class_ref 142988 // String16
	  param in name "token" explicit_type "sp<IObbActionListener>"
	  param in name "nonce" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, const ${t2} & ${p2}${v2}, const ${t3} & ${p3}${v3}, ${t4} ${p4}${v4}${)}${const}${volatile}${throw}${abstract} {
        Parcel data, reply;
        data.writeInterfaceToken(IMountService::getInterfaceDescriptor());
        data.writeString16(rawPath);
        data.writeString16(canonicalPath);
        data.writeString16(key);
        data.writeStrongBinder(token->asBinder());
        data.writeInt32(nonce);
        if (remote()->transact(TRANSACTION_mountObb, data, &reply) != NO_ERROR) {
            ALOGD(\"mountObb could not contact remote\\n\");
            return;
        }
        int32_t err = reply.readExceptionCode();
        if (err < 0) {
            ALOGD(\"mountObb caught exception %d\\n\", err);
            return;
        }
    };
"
	
	
	
	
      end

      operation 1986956 "unmountObb"
	cpp_inline public explicit_return_type "void"
	nparams 4
	  param in name "filename" type class_ref 142988 // String16
	  param in name "force" explicit_type "bool"
	  param in name "token" explicit_type "sp<IObbActionListener>"
	  param in name "nonce" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} ${p1}${v1}, const ${t2} & ${p2}${v2}, const ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract} {
        Parcel data, reply;
        data.writeInterfaceToken(IMountService::getInterfaceDescriptor());
        data.writeString16(filename);
        data.writeInt32(force ? 1 : 0);
        data.writeStrongBinder(token->asBinder());
        data.writeInt32(nonce);
        if (remote()->transact(TRANSACTION_unmountObb, data, &reply) != NO_ERROR) {
            ALOGD(\"unmountObb could not contact remote\\n\");
            return;
        }
        int32_t err = reply.readExceptionCode();
        if (err < 0) {
            ALOGD(\"unmountObb caught exception %d\\n\", err);
            return;
        }
    };
"
	
	
	
	
      end

      operation 1987084 "isObbMounted"
	cpp_inline public explicit_return_type "bool"
	nparams 1
	  param in name "filename" type class_ref 142988 // String16
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        Parcel data, reply;
        data.writeInterfaceToken(IMountService::getInterfaceDescriptor());
        data.writeString16(filename);
        if (remote()->transact(TRANSACTION_isObbMounted, data, &reply) != NO_ERROR) {
            ALOGD(\"isObbMounted could not contact remote\\n\");
            return false;
        }
        int32_t err = reply.readExceptionCode();
        if (err < 0) {
            ALOGD(\"isObbMounted caught exception %d\\n\", err);
            return false;
        }
        return reply.readInt32() != 0;
    };
"
	
	
	
	
      end

      operation 1987212 "getMountedObbPath"
	cpp_inline public explicit_return_type "bool"
	nparams 2
	  param in name "filename" type class_ref 142988 // String16
	  param inout name "path" type class_ref 142988 // String16
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        Parcel data, reply;
        data.writeInterfaceToken(IMountService::getInterfaceDescriptor());
        data.writeString16(filename);
        if (remote()->transact(TRANSACTION_getMountedObbPath, data, &reply) != NO_ERROR) {
            ALOGD(\"getMountedObbPath could not contact remote\\n\");
            return false;
        }
        int32_t err = reply.readExceptionCode();
        if (err < 0) {
            ALOGD(\"getMountedObbPath caught exception %d\\n\", err);
            return false;
        }
        path = reply.readString16();
        return true;
    };
"
	
	
	
	
      end

      operation 1987340 "decryptStorage"
	cpp_inline public explicit_return_type "int32_t"
	nparams 1
	  param in name "password" type class_ref 142988 // String16
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        Parcel data, reply;
        data.writeInterfaceToken(IMountService::getInterfaceDescriptor());
        data.writeString16(password);
        if (remote()->transact(TRANSACTION_decryptStorage, data, &reply) != NO_ERROR) {
            ALOGD(\"decryptStorage could not contact remote\\n\");
            return -1;
        }
        int32_t err = reply.readExceptionCode();
        if (err < 0) {
            ALOGD(\"decryptStorage caught exception %d\\n\", err);
            return err;
        }
        return reply.readInt32();
    };
"
	
	
	
	
      end

      operation 1987468 "encryptStorage"
	cpp_inline public explicit_return_type "int32_t"
	nparams 1
	  param in name "password" type class_ref 142988 // String16
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        Parcel data, reply;
        data.writeInterfaceToken(IMountService::getInterfaceDescriptor());
        data.writeString16(password);
        if (remote()->transact(TRANSACTION_encryptStorage, data, &reply) != NO_ERROR) {
            ALOGD(\"encryptStorage could not contact remote\\n\");
            return -1;
        }
        int32_t err = reply.readExceptionCode();
        if (err < 0) {
            ALOGD(\"encryptStorage caught exception %d\\n\", err);
            return err;
        }
        return reply.readInt32();
    };
"
	
	
	
	
      end
    end

    class 647948 "BpObbActionListener"
      visibility package 
      nactuals 2
      actual class class_ref 135180 // BpInterface
        rank 0 value class_ref 429964 // IObbActionListener
      actual class class_ref 135180 // BpInterface
        rank 1 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " This is a stub that real consumers should override."
      classrelation 1351948 // <realization>
	relation 1351948 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    classrelation_ref 1351948 // <realization>
	  b parent class_ref 135180 // BpInterface
      end

      operation 1987596 "BpObbActionListener"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param in name "impl" explicit_type "sp<IBinder>"
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}${)}${volatile}${throw} : BpInterface<IObbActionListener>(impl)
    { };
"
	
	
	
	
      end

      operation 1987724 "onObbResult"
	cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 3
	  param in name "filename" type class_ref 142988 // String16
	  param in name "nonce" explicit_type "int32_t"
	  param in name "state" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} ${p1}${v1}, const ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract} { };
"
	
	
	
	
      end
    end
  end

  deploymentview 157964 "android"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 288268 "BpMountService"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 647436 // BpMountService
      end
    end

    artifact 288780 "BpObbActionListener"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 647948 // BpObbActionListener
      end
    end
  end
end
