class TextClock
!!!5433996.java!!!	TextClock(inout context : Context)
        super(context);
        init();
!!!5434124.java!!!	TextClock(inout context : Context, inout attrs : AttributeSet)
        this(context, attrs, 0);
!!!5434252.java!!!	TextClock(inout context : Context, inout attrs : AttributeSet, in defStyle : int)
        super(context, attrs, defStyle);

        TypedArray a = context.obtainStyledAttributes(attrs, R.styleable.TextClock, defStyle, 0);
        try {
            CharSequence format;

            format = a.getText(R.styleable.TextClock_format12Hour);
            mFormat12 = format == null ? DEFAULT_FORMAT_12_HOUR : format;

            format = a.getText(R.styleable.TextClock_format24Hour);
            mFormat24 = format == null ? DEFAULT_FORMAT_24_HOUR : format;

            mTimeZone = a.getString(R.styleable.TextClock_timeZone);
        } finally {
            a.recycle();
        }

        init();
!!!5434380.java!!!	init() : void
        createTime(mTimeZone);
        // Wait until onAttachedToWindow() to handle the ticker
        chooseFormat(false);
!!!5434508.java!!!	createTime(in timeZone : String) : void
        if (timeZone != null) {
            mTime = Calendar.getInstance(TimeZone.getTimeZone(timeZone));
        } else {
            mTime = Calendar.getInstance();
        }
!!!5434636.java!!!	getFormat12Hour() : CharSequence
        return mFormat12;
!!!5434764.java!!!	setFormat12Hour(inout format : CharSequence) : void
        mFormat12 = format;

        chooseFormat();
        onTimeChanged();
!!!5434892.java!!!	getFormat24Hour() : CharSequence
        return mFormat24;
!!!5435020.java!!!	setFormat24Hour(inout format : CharSequence) : void
        mFormat24 = format;

        chooseFormat();
        onTimeChanged();
!!!5435148.java!!!	is24HourModeEnabled() : boolean
        return DateFormat.is24HourFormat(getContext());
!!!5435276.java!!!	getTimeZone() : String
        return mTimeZone;
!!!5435404.java!!!	setTimeZone(in timeZone : String) : void
        mTimeZone = timeZone;

        createTime(timeZone);
        onTimeChanged();
!!!5435532.java!!!	chooseFormat() : void
        chooseFormat(true);
!!!5435660.java!!!	chooseFormat(inout handleTicker : boolean) : void
        final boolean format24Requested = is24HourModeEnabled();

        if (format24Requested) {
            mFormat = abc(mFormat24, mFormat12, DEFAULT_FORMAT_24_HOUR);
        } else {
            mFormat = abc(mFormat12, mFormat24, DEFAULT_FORMAT_12_HOUR);
        }

        boolean hadSeconds = mHasSeconds;
        mHasSeconds = DateFormat.hasSeconds(mFormat);

        if (handleTicker && mAttached && hadSeconds != mHasSeconds) {
            if (hadSeconds) getHandler().removeCallbacks(mTicker);
            else mTicker.run();
        }
!!!5435788.java!!!	abc(inout a : CharSequence, inout b : CharSequence, inout c : CharSequence) : CharSequence
        return a == null ? (b == null ? c : b) : a;
!!!5435916.java!!!	onAttachedToWindow() : void
        super.onAttachedToWindow();

        if (!mAttached) {
            mAttached = true;

            registerReceiver();
            registerObserver();

            createTime(mTimeZone);

            if (mHasSeconds) {
                mTicker.run();
            } else {
                onTimeChanged();
            }
        }
!!!5436044.java!!!	onDetachedFromWindow() : void
        super.onDetachedFromWindow();

        if (mAttached) {
            unregisterReceiver();
            unregisterObserver();

            getHandler().removeCallbacks(mTicker);

            mAttached = false;
        }
!!!5436172.java!!!	registerReceiver() : void
        final IntentFilter filter = new IntentFilter();

        filter.addAction(Intent.ACTION_TIME_TICK);
        filter.addAction(Intent.ACTION_TIME_CHANGED);
        filter.addAction(Intent.ACTION_TIMEZONE_CHANGED);

        getContext().registerReceiver(mIntentReceiver, filter, null, getHandler());
!!!5436300.java!!!	registerObserver() : void
        final ContentResolver resolver = getContext().getContentResolver();
        resolver.registerContentObserver(Settings.System.CONTENT_URI, true, mFormatChangeObserver);
!!!5436428.java!!!	unregisterReceiver() : void
        getContext().unregisterReceiver(mIntentReceiver);
!!!5436556.java!!!	unregisterObserver() : void
        final ContentResolver resolver = getContext().getContentResolver();
        resolver.unregisterContentObserver(mFormatChangeObserver);
!!!5436684.java!!!	onTimeChanged() : void
        mTime.setTimeInMillis(System.currentTimeMillis());
        setText(DateFormat.format(mFormat, mTime));
