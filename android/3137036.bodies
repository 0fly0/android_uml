class ChannelFilter
!!!13260428.java!!!	performFiltering(inout constraint : CharSequence) : FilterResults
            FilterResults results = new FilterResults();

            String substring = constraint.toString().trim().toLowerCase();

            if (TextUtils.isEmpty(substring)) {
                results.count = 0;
                results.values = null;
            } else {
                ArrayList<Channel> list = new ArrayList<Channel>();
                for (Channel channel : mChannelList) {
                    String callSign = channel.getCallSign();
                    boolean hasCallSign = !TextUtils.isEmpty(callSign);
                    if (hasCallSign) {
                        callSign = callSign.toLowerCase();
                    }

                    String name = channel.getName();
                    boolean hasName = !TextUtils.isEmpty(name);
                    if (hasName) {
                        name = name.toLowerCase();
                    }

                    ChannelNumber channelNumber = channel.getChannelNumber();
                    boolean hasChannelNumber = channelNumber != null;

                    if ((hasCallSign && callSign.contains(substring))
                            || (hasName && name.contains(substring))
                            || (hasChannelNumber && channelNumber.startsWith(substring))) {
                        list.add(channel);
                    }
                }
                results.count = list.size();
                results.values = list;
            }
            return results;
!!!13260556.java!!!	publishResults(inout constraint : CharSequence, inout results : FilterResults) : void
            if (results.values == null) {
                mFilteredChannelList = mChannelList;
            } else {
                mFilteredChannelList = (ArrayList<Channel>) results.values;
            }
            notifyDataSetChanged();
