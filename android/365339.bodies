class OpenSSLMac
!!!2429723.java!!!	OpenSSLMac(in evp_md : long, in size : int, in evp_pkey_type : int)
        this.evp_md = evp_md;
        this.size = size;
        this.evp_pkey_type = evp_pkey_type;
!!!2429851.java!!!	engineGetMacLength() : int
        return size;
!!!2429979.java!!!	engineInit(inout key : Key, inout params : AlgorithmParameterSpec) : void
        if (!(key instanceof SecretKey)) {
            throw new InvalidKeyException("key must be a SecretKey");
        }

        if (params != null) {
            throw new InvalidAlgorithmParameterException("unknown parameter type");
        }

        if (key instanceof OpenSSLKeyHolder) {
            macKey = ((OpenSSLKeyHolder) key).getOpenSSLKey();
        } else {
            final byte[] keyBytes = key.getEncoded();
            if (keyBytes == null) {
                throw new InvalidKeyException("key cannot be encoded");
            }

            macKey = new OpenSSLKey(NativeCrypto.EVP_PKEY_new_mac_key(evp_pkey_type, keyBytes));
        }

        NativeCrypto.EVP_MD_CTX_init(ctx.getContext());

        reset();
!!!2430107.java!!!	reset() : void
        NativeCrypto.EVP_DigestSignInit(ctx.getContext(), evp_md, macKey.getPkeyContext());
!!!2430235.java!!!	engineUpdate(in input : byte) : void
        singleByte[0] = input;
        engineUpdate(singleByte, 0, 1);
!!!2430363.java!!!	engineUpdate(inout input : byte, in offset : int, in len : int) : void
        NativeCrypto.EVP_DigestUpdate(ctx.getContext(), input, offset, len);
!!!2430491.java!!!	engineDoFinal() : byte
        final byte[] output = NativeCrypto.EVP_DigestSignFinal(ctx.getContext());
        reset();
        return output;
!!!2430619.java!!!	engineReset() : void
        reset();
