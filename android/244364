format 74
"nsd" // framework::base::core::java::android::net::wifi::p2p::nsd
  revision 1
  modified_by 12 "shchen"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "/home/shchen/work/jellybean/framework/base/wifi/java/android/net/wifi/p2p/nsd/"
  java_package "android.net.wifi.p2p.nsd"
  classview 219532 "nsd"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 1570700 "WifiP2pServiceInfo"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A class for storing service information that is advertised
over a Wi-Fi peer-to-peer setup

@see WifiP2pUpnpServiceInfo
@see WifiP2pDnsSdServiceInfo"
      classrelation 3431052 // <realization>
	relation 3431052 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 3431052 // <realization>
	  b parent class_ref 691212 // Parcelable
      end

      attribute 6214540 "SERVICE_TYPE_ALL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "All service protocol types.
"
      end

      attribute 6214668 "SERVICE_TYPE_BONJOUR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "DNS based service discovery protocol.
"
      end

      attribute 6214796 "SERVICE_TYPE_UPNP"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "UPnP protocol.
"
      end

      attribute 6214924 "SERVICE_TYPE_WS_DISCOVERY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "WS-Discovery protocol
@hide
"
      end

      attribute 6215052 "SERVICE_TYPE_VENDOR_SPECIFIC"
	class_attribute const_attribute public explicit_type "int"
	init_value " 255"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Vendor Specific protocol
"
      end

      attribute 6215180 "mQueryList"
	private explicit_type "String"
	stereotype "List"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "the list of query string for wpa_supplicant

e.g)
# IP Printing over TCP (PTR) (RDATA=MyPrinter._ipp._tcp.local.)
{\"bonjour\", \"045f697070c00c000c01\", \"094d795072696e746572c027\"

# IP Printing over TCP (TXT) (RDATA=txtvers=1,pdl=application/postscript)
{\"bonjour\", \"096d797072696e746572045f697070c00c001001\",
 \"09747874766572733d311a70646c3d6170706c69636174696f6e2f706f7374736372797074\"}

[UPnP]
# UPnP uuid
{\"upnp\", \"10\", \"uuid:6859dede-8574-59ab-9332-123456789012\"}

# UPnP rootdevice
{\"upnp\", \"10\", \"uuid:6859dede-8574-59ab-9332-123456789012::upnp:rootdevice\"}

# UPnP device
{\"upnp\", \"10\", \"uuid:6859dede-8574-59ab-9332-123456789012::urn:schemas-upnp
-org:device:InternetGatewayDevice:1\"}

 # UPnP service
{\"upnp\", \"10\", \"uuid:6859dede-8574-59ab-9322-123456789012::urn:schemas-upnp
-org:service:ContentDirectory:2\"}
"
      end

      operation 9806220 "WifiP2pServiceInfo"
	protected explicit_return_type ""
	nparams 1
	  param inout name "queryList" explicit_type "List<String>"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This is only used in subclass.

@param queryList query string for wpa_supplicant
@hide"
      end

      operation 9806348 "getSupplicantQueryList"
	public explicit_return_type "List<String>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the list of the query string for wpa_supplicant.

@return the list of the query string for wpa_supplicant.
@hide"
      end

      operation 9806476 "bin2HexStr"
	class_operation package explicit_return_type "String"
	nparams 1
	  param inout name "data" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts byte array to hex string.

@param data
@return hex string.
@hide"
      end

      operation 9806604 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" explicit_type "Object"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 9806732 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 9806860 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Implement the Parcelable interface {@hide} "
      end

      operation 9806988 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "dest" type class_ref 691340 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Implement the Parcelable interface {@hide} "
      end

      classrelation 3431180 // CREATOR (<unidirectional association>)
	relation 3431180 --->
	  a role_name "CREATOR" init_value "
        new Creator<WifiP2pServiceInfo>() {
            public WifiP2pServiceInfo createFromParcel(Parcel in) {

                List<String> data = new ArrayList<String>();
                in.readStringList(data);
                return new WifiP2pServiceInfo(data);
            }

            public WifiP2pServiceInfo[] newArray(int size) {
                return new WifiP2pServiceInfo[size];
            }
        }" class_relation const_relation public
	    comment " Implement the Parcelable interface {@hide} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<WifiP2pServiceInfo> ${name}${value};
"
	    classrelation_ref 3431180 // CREATOR (<unidirectional association>)
	  b parent class_ref 691468 // Creator
      end
    end

    class 1579020 "WifiP2pServiceResponse"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The class for a response of service discovery.

@hide"
      classrelation 3431820 // <realization>
	relation 3431820 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 3431820 // <realization>
	  b parent class_ref 691212 // Parcelable
      end

      attribute 6216332 "MAX_BUF_SIZE"
	class_attribute private explicit_type "int"
	init_value " 1024"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 6216460 "mServiceType"
	protected explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Service type. It's defined in table63 in Wi-Fi Direct specification.
"
      end

      attribute 6216588 "mStatus"
	protected explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Status code of service discovery response.
It's defined in table65 in Wi-Fi Direct specification.
@see Status
"
      end

      attribute 6216716 "mTransId"
	protected explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Service transaction ID.
This is a nonzero value used to match the service request/response TLVs.
"
      end

      classrelation 3431948 // mDevice (<unidirectional association>)
	relation 3431948 --->
	  a role_name "mDevice" protected
	    comment "
Source device.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 3431948 // mDevice (<unidirectional association>)
	  b parent class_ref 1397260 // WifiP2pDevice
      end

      attribute 6216844 "mData"
	protected explicit_type "byte"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Service discovery response data based on the requested on
the service protocol type. The protocol format depends on the service type.
"
      end

      class 1582220 "Status"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 6216972 "SUCCESS"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 0"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " success "
	end

	attribute 6217100 "SERVICE_PROTOCOL_NOT_AVAILABLE"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 1"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " the service protocol type is not available "
	end

	attribute 6217228 "REQUESTED_INFORMATION_NOT_AVAILABLE"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 2"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " the requested information is not available "
	end

	attribute 6217356 "BAD_REQUEST"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 3"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " bad request "
	end

	operation 9810188 "toString"
	  class_operation public explicit_return_type "String"
	  nparams 1
	    param in name "status" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " @hide "
	end

	operation 9810316 "Status"
	  private explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " not used "
	end
      end

      operation 9810444 "WifiP2pServiceResponse"
	protected explicit_return_type ""
	nparams 5
	  param in name "serviceType" explicit_type "int"
	  param in name "status" explicit_type "int"
	  param in name "transId" explicit_type "int"
	  param inout name "device" type class_ref 1397260 // WifiP2pDevice
	  param inout name "data" explicit_type "byte"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4}[] ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Hidden constructor. This is only used in framework.

@param serviceType service discovery type.
@param status status code.
@param transId transaction id.
@param device source device.
@param data query data."
      end

      operation 9810572 "getServiceType"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the service type of service discovery response.

@return service discovery type.<br>
e.g) {@link WifiP2pServiceInfo#SERVICE_TYPE_BONJOUR}"
      end

      operation 9810700 "getStatus"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the status code of service discovery response.

@return status code.
@see Status"
      end

      operation 9810828 "getTransactionId"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the transaction id of service discovery response.

@return transaction id.
@hide"
      end

      operation 9810956 "getRawData"
	public explicit_return_type "byte"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return response data.

<pre>Data format depends on service type

@return a query or response data."
      end

      operation 9811084 "getSrcDevice"
	public return_type class_ref 1397260 // WifiP2pDevice
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the source device of service discovery response.

<pre>This is valid only when service discovery response.

@return the source device of service discovery response."
      end

      operation 9811212 "setSrcDevice"
	public explicit_return_type "void"
	nparams 1
	  param inout name "dev" type class_ref 1397260 // WifiP2pDevice
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 9811340 "newInstance"
	class_operation public return_type class_ref 1579020 // WifiP2pServiceResponse
	nparams 1
	  param in name "supplicantEvent" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create the list of  WifiP2pServiceResponse instance from supplicant event.

<pre>The format is as follows.
P2P-SERV-DISC-RESP &lt;address&gt; &lt;update indicator&gt; &lt;response data&gt;
e.g) P2P-SERV-DISC-RESP 02:03:7f:11:62:da 1 0300000101

@param supplicantEvent wpa_supplicant event string.
@return if parse failed, return null
@hide"
      end

      operation 9811468 "hexStr2Bin"
	class_operation private explicit_return_type "byte"
	nparams 1
	  param in name "hex" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts hex string to byte array.

@param hex hex string. if invalid, return null.
@return binary data."
      end

      operation 9811596 "toString"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 9811724 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" explicit_type "Object"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 9811852 "equals"
	private explicit_return_type "boolean"
	nparams 2
	  param inout name "a" explicit_type "Object"
	  param inout name "b" explicit_type "Object"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9811980 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 9812108 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Implement the Parcelable interface {@hide} "
      end

      operation 9812236 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "dest" type class_ref 691340 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Implement the Parcelable interface {@hide} "
      end

      classrelation 3432076 // CREATOR (<unidirectional association>)
	relation 3432076 --->
	  a role_name "CREATOR" init_value "
        new Creator<WifiP2pServiceResponse>() {
            public WifiP2pServiceResponse createFromParcel(Parcel in) {

                int type = in.readInt();
                int status = in.readInt();
                int transId = in.readInt();
                WifiP2pDevice dev = (WifiP2pDevice)in.readParcelable(null);
                int len = in.readInt();
                byte[] data = null;
                if (len > 0) {
                    data = new byte[len];
                    in.readByteArray(data);
                }
                if (type ==  WifiP2pServiceInfo.SERVICE_TYPE_BONJOUR) {
                    return WifiP2pDnsSdServiceResponse.newInstance(status,
                            transId, dev, data);
                } else if (type == WifiP2pServiceInfo.SERVICE_TYPE_UPNP) {
                    return WifiP2pUpnpServiceResponse.newInstance(status,
                            transId, dev, data);
                }
                return new WifiP2pServiceResponse(type, status, transId, dev, data);
            }

            public WifiP2pServiceResponse[] newArray(int size) {
                return new WifiP2pServiceResponse[size];
            }
        }" class_relation const_relation public
	    comment " Implement the Parcelable interface {@hide} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<WifiP2pServiceResponse> ${name}${value};
"
	    classrelation_ref 3432076 // CREATOR (<unidirectional association>)
	  b parent class_ref 691468 // Creator
      end
    end

    class 1579148 "WifiP2pUpnpServiceResponse"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A class for a response of upnp service discovery.

@hide"
      classrelation 3432588 // <generalisation>
	relation 3432588 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 3432588 // <generalisation>
	  b parent class_ref 1579020 // WifiP2pServiceResponse
      end

      attribute 6218380 "mVersion"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "UPnP version. should be {@link WifiP2pUpnpServiceInfo#VERSION_1_0}
"
      end

      attribute 6218508 "mUniqueServiceNames"
	private explicit_type "String"
	stereotype "List"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The list of Unique Service Name.
e.g)
{\"uuid:6859dede-8574-59ab-9332-123456789012\",
\"uuid:6859dede-8574-59ab-9332-123456789012::upnp:rootdevice\"}
"
      end

      operation 9814668 "getVersion"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return UPnP version number.

@return version number.
@see WifiP2pUpnpServiceInfo#VERSION_1_0"
      end

      operation 9814796 "getUniqueServiceNames"
	public explicit_return_type "List<String>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return Unique Service Name strings.

@return Unique Service Name.<br>
e.g ) <br>
<ul>
<li>\"uuid:6859dede-8574-59ab-9332-123456789012\"
<li>\"uuid:6859dede-8574-59ab-9332-123456789012::upnp:rootdevice\"
<li>\"uuid:6859dede-8574-59ab-9332-123456789012::urn:schemas-upnp-org:device:
MediaServer:2\"
<li>\"uuid:6859dede-8574-59ab-9332-123456789012::urn:schemas-upnp-org:service:
ContentDirectory:2\"
</ul>"
      end

      operation 9814924 "WifiP2pUpnpServiceResponse"
	protected explicit_return_type ""
	nparams 4
	  param in name "status" explicit_type "int"
	  param in name "transId" explicit_type "int"
	  param inout name "dev" type class_ref 1397260 // WifiP2pDevice
	  param inout name "data" explicit_type "byte"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "hidden constructor.

@param status status code
@param transId transaction id
@param dev source device
@param data UPnP response data."
      end

      operation 9815052 "parse"
	private explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parse UPnP service discovery response

@return {@code true} if the operation succeeded"
      end

      operation 9815180 "toString"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 9815308 "newInstance"
	class_operation package return_type class_ref 1579148 // WifiP2pUpnpServiceResponse
	nparams 4
	  param in name "status" explicit_type "int"
	  param in name "transId" explicit_type "int"
	  param inout name "device" type class_ref 1397260 // WifiP2pDevice
	  param inout name "data" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create upnp service response.

<pre>This is only used in{@link WifiP2pServiceResponse}

@param status status code.
@param transId transaction id.
@param device source device.
@param data UPnP response data.
@return UPnP service response data.
@hide"
      end
    end

    class 1579276 "WifiP2pDnsSdServiceResponse"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A class for a response of bonjour service discovery.

@hide"
      classrelation 3432204 // <generalisation>
	relation 3432204 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 3432204 // <generalisation>
	  b parent class_ref 1579020 // WifiP2pServiceResponse
      end

      attribute 6217484 "mDnsQueryName"
	private explicit_type "String"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "DNS query name.
e.g)
for PTR
\"_ipp._tcp.local.\"
for TXT
\"MyPrinter._ipp._tcp.local.\"
"
      end

      attribute 6217612 "mInstanceName"
	private explicit_type "String"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Service instance name.
e.g) \"MyPrinter\"
This field is only used when the dns type equals to
{@link WifiP2pDnsSdServiceInfo#DNS_TYPE_PTR}.
"
      end

      attribute 6217740 "mDnsType"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "DNS Type.
Should be {@link WifiP2pDnsSdServiceInfo#DNS_TYPE_PTR} or
{@link WifiP2pDnsSdServiceInfo#DNS_TYPE_TXT}.
"
      end

      attribute 6217868 "mVersion"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "DnsSd version number.
Should be {@link WifiP2pDnsSdServiceInfo#VERSION_1}.
"
      end

      attribute 6217996 "mTxtRecord"
	const_attribute private explicit_type "String, String"
	init_value " new HashMap<String, String>()"
	stereotype "HashMap"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Txt record.
This field is only used when the dns type equals to
{@link WifiP2pDnsSdServiceInfo#DNS_TYPE_TXT}.
"
      end

      attribute 6218124 "sVmpack"
	class_attribute const_attribute private explicit_type "Integer, String"
	stereotype "Map"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Virtual memory packet.
see E.3 of the Wi-Fi Direct technical specification for the detail.<br>
The spec can be obtained from wi-fi.org
Key: pointer Value: domain name.<br>
"
      end

      extra_member 157452 "initialization"
	
	cpp "" ""
	java "  static {
        sVmpack = new HashMap<Integer, String>();
        sVmpack.put(0x0c, \"_tcp.local.\");
        sVmpack.put(0x11, \"local.\");
        sVmpack.put(0x1c, \"_udp.local.\");
    }"
	php ""
	python ""
	idl ""
      end

      operation 9812364 "getDnsQueryName"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns query DNS name.
@return DNS name."
      end

      operation 9812492 "getDnsType"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return query DNS type.
@return DNS type."
      end

      operation 9812620 "getVersion"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return bonjour version number.
@return version number."
      end

      operation 9812748 "getInstanceName"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return instance name.
@return"
      end

      operation 9812876 "getTxtRecord"
	public explicit_return_type "Map<String, String>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return TXT record data.
@return TXT record data."
      end

      operation 9813004 "toString"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 9813132 "WifiP2pDnsSdServiceResponse"
	protected explicit_return_type ""
	nparams 4
	  param in name "status" explicit_type "int"
	  param in name "tranId" explicit_type "int"
	  param inout name "dev" type class_ref 1397260 // WifiP2pDevice
	  param inout name "data" explicit_type "byte"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This is only used in framework.
@param status status code.
@param dev source device.
@param data RDATA.
@hide"
      end

      operation 9813260 "parse"
	private explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parse DnsSd service discovery response.

@return {@code true} if the operation succeeded"
      end

      operation 9813388 "readDnsName"
	private explicit_return_type "String"
	nparams 1
	  param inout name "dis" explicit_type "DataInputStream"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read dns name.

@param dis data input stream.
@return dns name"
      end

      operation 9813516 "readTxtData"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "dis" explicit_type "DataInputStream"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read TXT record data.

@param dis
@return true if TXT data is valid"
      end

      operation 9813644 "newInstance"
	class_operation package return_type class_ref 1579276 // WifiP2pDnsSdServiceResponse
	nparams 4
	  param in name "status" explicit_type "int"
	  param in name "transId" explicit_type "int"
	  param inout name "dev" type class_ref 1397260 // WifiP2pDevice
	  param inout name "data" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates DnsSd service response.
 This is only called from WifiP2pServiceResponse

@param status status code.
@param dev source device.
@param data DnsSd response data.
@return DnsSd service response data.
@hide"
      end
    end

    class 1579404 "WifiP2pServiceRequest"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A class for creating a service discovery request for use with
{@link WifiP2pManager#addServiceRequest} and {@link WifiP2pManager#removeServiceRequest}

<p>This class is used to create service discovery request for custom
vendor specific service discovery protocol {@link WifiP2pServiceInfo#SERVICE_TYPE_VENDOR_SPECIFIC}
or to search all service protocols {@link WifiP2pServiceInfo#SERVICE_TYPE_ALL}.

<p>For the purpose of creating a UPnP or Bonjour service request, use
{@link WifiP2pUpnpServiceRequest} or {@link WifiP2pDnsSdServiceRequest} respectively.

{@see WifiP2pManager}
{@see WifiP2pUpnpServiceRequest}
{@see WifiP2pDnsSdServiceRequest}"
      classrelation 3431436 // <realization>
	relation 3431436 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 3431436 // <realization>
	  b parent class_ref 691212 // Parcelable
      end

      attribute 6215820 "mProtocolType"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Service discovery protocol. It's defined in table63 in Wi-Fi Direct specification.
"
      end

      attribute 6215948 "mLength"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The length of the service request TLV.
The value is equal to 2 plus the number of octets in the
query data field.
"
      end

      attribute 6216076 "mTransId"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Service transaction ID.
This is a nonzero value used to match the service request/response TLVs.
"
      end

      attribute 6216204 "mQuery"
	private explicit_type "String"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The hex dump string of query data for the requested service information.

e.g) DnsSd apple file sharing over tcp (dns name=_afpovertcp._tcp.local.)
0b5f6166706f766572746370c00c000c01
"
      end

      operation 9807884 "WifiP2pServiceRequest"
	protected explicit_return_type ""
	nparams 2
	  param in name "protocolType" explicit_type "int"
	  param in name "query" explicit_type "String"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This constructor is only used in newInstance().

@param protocolType service discovery protocol.
@param query The part of service specific query.
@hide"
      end

      operation 9808012 "WifiP2pServiceRequest"
	private explicit_return_type ""
	nparams 4
	  param in name "serviceType" explicit_type "int"
	  param in name "length" explicit_type "int"
	  param in name "transId" explicit_type "int"
	  param in name "query" explicit_type "String"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This constructor is only used in Parcelable.

@param serviceType service discovery type.
@param length the length of service discovery packet.
@param transId the transaction id
@param query The part of service specific query."
      end

      operation 9808140 "getTransactionId"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return transaction id.

@return transaction id
@hide"
      end

      operation 9808268 "setTransactionId"
	public explicit_return_type "void"
	nparams 1
	  param in name "id" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set transaction id.

@param id
@hide"
      end

      operation 9808396 "getSupplicantQuery"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return wpa_supplicant request string.

The format is the hex dump of the following frame.
<pre>
_______________________________________________________________
|        Length (2)        |   Type (1)   | Transaction ID (1) |
|                  Query Data (variable)                       |
</pre>

@return wpa_supplicant request string.
@hide"
      end

      operation 9808524 "validateQuery"
	private explicit_return_type "void"
	nparams 1
	  param in name "query" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Validate query.

<p>If invalid, throw IllegalArgumentException.
@param query The part of service specific query."
      end

      operation 9808652 "newInstance"
	class_operation public return_type class_ref 1579404 // WifiP2pServiceRequest
	nparams 2
	  param in name "protocolType" explicit_type "int"
	  param in name "queryData" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a service discovery request.

@param protocolType can be {@link WifiP2pServiceInfo#SERVICE_TYPE_ALL}
or {@link WifiP2pServiceInfo#SERVICE_TYPE_VENDOR_SPECIFIC}.
In order to create a UPnP or Bonjour service request, use
{@link WifiP2pUpnpServiceRequest} or {@link WifiP2pDnsSdServiceRequest}
respectively

@param queryData hex string that is vendor specific.  Can be null.
@return service discovery request."
      end

      operation 9808780 "newInstance"
	class_operation public return_type class_ref 1579404 // WifiP2pServiceRequest
	nparams 1
	  param in name "protocolType" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a service discovery request.

@param protocolType can be {@link WifiP2pServiceInfo#SERVICE_TYPE_ALL}
or {@link WifiP2pServiceInfo#SERVICE_TYPE_VENDOR_SPECIFIC}.
In order to create a UPnP or Bonjour service request, use
{@link WifiP2pUpnpServiceRequest} or {@link WifiP2pDnsSdServiceRequest}
respectively

@return service discovery request."
      end

      operation 9808908 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" explicit_type "Object"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 9809036 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 9809164 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Implement the Parcelable interface {@hide} "
      end

      operation 9809292 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "dest" type class_ref 691340 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Implement the Parcelable interface {@hide} "
      end

      classrelation 3431564 // CREATOR (<unidirectional association>)
	relation 3431564 --->
	  a role_name "CREATOR" init_value "
        new Creator<WifiP2pServiceRequest>() {
            public WifiP2pServiceRequest createFromParcel(Parcel in) {
                int servType = in.readInt();
                int length = in.readInt();
                int transId = in.readInt();
                String query = in.readString();
                return new WifiP2pServiceRequest(servType, length, transId, query);
            }

            public WifiP2pServiceRequest[] newArray(int size) {
                return new WifiP2pServiceRequest[size];
            }
        }" class_relation const_relation public
	    comment " Implement the Parcelable interface {@hide} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<WifiP2pServiceRequest> ${name}${value};
"
	    classrelation_ref 3431564 // CREATOR (<unidirectional association>)
	  b parent class_ref 691468 // Creator
      end
    end

    class 1581964 "WifiP2pDnsSdServiceInfo"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A class for storing Bonjour service information that is advertised
over a Wi-Fi peer-to-peer setup.

{@see android.net.wifi.p2p.WifiP2pManager#addLocalService}
{@see android.net.wifi.p2p.WifiP2pManager#removeLocalService}
{@see WifiP2pServiceInfo}
{@see WifiP2pUpnpServiceInfo}"
      classrelation 3431308 // <generalisation>
	relation 3431308 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 3431308 // <generalisation>
	  b parent class_ref 1570700 // WifiP2pServiceInfo
      end

      attribute 6215308 "VERSION_1"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x01"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Bonjour version 1.
@hide
"
      end

      attribute 6215436 "DNS_TYPE_PTR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 12"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Pointer record.
@hide
"
      end

      attribute 6215564 "DNS_TYPE_TXT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 16"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Text record.
@hide
"
      end

      attribute 6215692 "sVmPacket"
	class_attribute const_attribute private explicit_type "String, String"
	stereotype "Map"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "virtual memory packet.
see E.3 of the Wi-Fi Direct technical specification for the detail.<br>
Key: domain name Value: pointer address.<br>
"
      end

      extra_member 157324 "initialization"
	
	cpp "" ""
	java "  static {
        sVmPacket = new HashMap<String, String>();
        sVmPacket.put(\"_tcp.local.\", \"c00c\");
        sVmPacket.put(\"local.\", \"c011\");
        sVmPacket.put(\"_udp.local.\", \"c01c\");
    }"
	php ""
	python ""
	idl ""
      end

      operation 9807116 "WifiP2pDnsSdServiceInfo"
	private explicit_return_type ""
	nparams 1
	  param inout name "queryList" explicit_type "List<String>"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This constructor is only used in newInstance().

@param queryList"
      end

      operation 9807244 "newInstance"
	class_operation public return_type class_ref 1581964 // WifiP2pDnsSdServiceInfo
	nparams 3
	  param in name "instanceName" explicit_type "String"
	  param in name "serviceType" explicit_type "String"
	  param inout name "txtMap" explicit_type "Map<String, String>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a Bonjour service information object.

@param instanceName instance name.<br>
 e.g) \"MyPrinter\"
@param serviceType service type.<br>
 e.g) \"_ipp._tcp\"
@param txtMap TXT record with key/value pair in a map confirming to format defined at
http://files.dns-sd.org/draft-cheshire-dnsext-dns-sd.txt
@return Bonjour service information object"
      end

      operation 9807372 "createPtrServiceQuery"
	class_operation private explicit_return_type "String"
	nparams 2
	  param in name "instanceName" explicit_type "String"
	  param in name "serviceType" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create wpa_supplicant service query for PTR record.

@param instanceName instance name.<br>
 e.g) \"MyPrinter\"
@param serviceType service type.<br>
 e.g) \"_ipp._tcp\"
@return wpa_supplicant service query."
      end

      operation 9807500 "createTxtServiceQuery"
	class_operation private explicit_return_type "String"
	nparams 3
	  param in name "instanceName" explicit_type "String"
	  param in name "serviceType" explicit_type "String"
	  param inout name "txtRecord" type class_ref 852748 // DnsSdTxtRecord
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create wpa_supplicant service query for TXT record.

@param instanceName instance name.<br>
 e.g) \"MyPrinter\"
@param serviceType service type.<br>
 e.g) \"_ipp._tcp\"
@param txtRecord TXT record.<br>
@return wpa_supplicant service query."
      end

      operation 9807628 "createRequest"
	class_operation package explicit_return_type "String"
	nparams 3
	  param in name "dnsName" explicit_type "String"
	  param in name "dnsType" explicit_type "int"
	  param in name "version" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create bonjour service discovery request.

@param dnsName dns name
@param dnsType dns type
@param version version number
@hide"
      end

      operation 9807756 "compressDnsName"
	class_operation private explicit_return_type "String"
	nparams 1
	  param in name "dnsName" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compress DNS data.

see E.3 of the Wi-Fi Direct technical specification for the detail.

@param dnsName dns name
@return compressed dns name"
      end
    end

    class 1582092 "WifiP2pDnsSdServiceRequest"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A class for creating a Bonjour service discovery request for use with
{@link WifiP2pManager#addServiceRequest} and {@link WifiP2pManager#removeServiceRequest}

{@see WifiP2pManager}
{@see WifiP2pServiceRequest}
{@see WifiP2pUpnpServiceRequest}"
      classrelation 3431692 // <generalisation>
	relation 3431692 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 3431692 // <generalisation>
	  b parent class_ref 1579404 // WifiP2pServiceRequest
      end

      operation 9809420 "WifiP2pDnsSdServiceRequest"
	private explicit_return_type ""
	nparams 1
	  param in name "query" explicit_type "String"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This constructor is only used in newInstance().

@param query The part of service specific query.
@hide"
      end

      operation 9809548 "WifiP2pDnsSdServiceRequest"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This constructor is only used in newInstance().
@hide"
      end

      operation 9809676 "WifiP2pDnsSdServiceRequest"
	private explicit_return_type ""
	nparams 3
	  param in name "dnsQuery" explicit_type "String"
	  param in name "dnsType" explicit_type "int"
	  param in name "version" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 9809804 "newInstance"
	class_operation public return_type class_ref 1582092 // WifiP2pDnsSdServiceRequest
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a service discovery request to search all Bonjour services.

@return service request for Bonjour."
      end

      operation 9809932 "newInstance"
	class_operation public return_type class_ref 1582092 // WifiP2pDnsSdServiceRequest
	nparams 1
	  param in name "serviceType" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a service discovery to search for Bonjour services with the specified
service type.

@param serviceType service type. Cannot be null <br>
 \"_afpovertcp._tcp.\"(Apple File Sharing over TCP)<br>
 \"_ipp._tcp\" (IP Printing over TCP)<br>
 \"_http._tcp\" (http service)
@return service request for DnsSd."
      end

      operation 9810060 "newInstance"
	class_operation public return_type class_ref 1582092 // WifiP2pDnsSdServiceRequest
	nparams 2
	  param in name "instanceName" explicit_type "String"
	  param in name "serviceType" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a service discovery request to get the TXT data from the specified
Bonjour service.

@param instanceName instance name. Cannot be null. <br>
 \"MyPrinter\"
@param serviceType service type. Cannot be null. <br>
e.g) <br>
 \"_afpovertcp._tcp\"(Apple File Sharing over TCP)<br>
 \"_ipp._tcp\" (IP Printing over TCP)<br>
@return service request for Bonjour."
      end
    end

    class 1582348 "WifiP2pUpnpServiceInfo"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A class for storing Upnp service information that is advertised
over a Wi-Fi peer-to-peer setup.

{@see android.net.wifi.p2p.WifiP2pManager#addLocalService}
{@see android.net.wifi.p2p.WifiP2pManager#removeLocalService}
{@see WifiP2pServiceInfo}
{@see WifiP2pDnsSdServiceInfo}"
      classrelation 3432332 // <generalisation>
	relation 3432332 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 3432332 // <generalisation>
	  b parent class_ref 1570700 // WifiP2pServiceInfo
      end

      attribute 6218252 "VERSION_1_0"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x10"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "UPnP version 1.0.

<pre>Query Version should always be set to 0x10 if the query values are
compatible with UPnP Device Architecture 1.0.
@hide
"
      end

      operation 9813772 "WifiP2pUpnpServiceInfo"
	private explicit_return_type ""
	nparams 1
	  param inout name "queryList" explicit_type "List<String>"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This constructor is only used in newInstance().

@param queryList"
      end

      operation 9813900 "newInstance"
	class_operation public return_type class_ref 1582348 // WifiP2pUpnpServiceInfo
	nparams 3
	  param in name "uuid" explicit_type "String"
	  param in name "device" explicit_type "String"
	  param inout name "services" explicit_type "List<String>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create UPnP service information object.

@param uuid a string representation of this UUID in the following format,
 as per <a href=\"http://www.ietf.org/rfc/rfc4122.txt\">RFC 4122</a>.<br>
 e.g) 6859dede-8574-59ab-9332-123456789012
@param device a string representation of this device in the following format,
as per
<a href=\"http://www.upnp.org/specs/arch/UPnP-arch-DeviceArchitecture-v1.1.pdf\">
 UPnP Device Architecture1.1</a><br>
 e.g) urn:schemas-upnp-org:device:MediaServer:1
@param services a string representation of this service in the following format,
as per
<a href=\"http://www.upnp.org/specs/arch/UPnP-arch-DeviceArchitecture-v1.1.pdf\">
 UPnP Device Architecture1.1</a><br>
 e.g) urn:schemas-upnp-org:service:ContentDirectory:1
@return UPnP service information object."
      end

      operation 9814028 "createSupplicantQuery"
	class_operation private explicit_return_type "String"
	nparams 2
	  param in name "uuid" explicit_type "String"
	  param in name "data" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create wpa_supplicant service query for upnp.

@param uuid
@param data
@return wpa_supplicant service query for upnp"
      end
    end

    class 1582476 "WifiP2pUpnpServiceRequest"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A class for creating a Upnp service discovery request for use with
{@link WifiP2pManager#addServiceRequest} and {@link WifiP2pManager#removeServiceRequest}

{@see WifiP2pManager}
{@see WifiP2pServiceRequest}
{@see WifiP2pDnsSdServiceRequest}"
      classrelation 3432460 // <generalisation>
	relation 3432460 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 3432460 // <generalisation>
	  b parent class_ref 1579404 // WifiP2pServiceRequest
      end

      operation 9814156 "WifiP2pUpnpServiceRequest"
	protected explicit_return_type ""
	nparams 1
	  param in name "query" explicit_type "String"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This constructor is only used in newInstance().

@param query The part of service specific query.
@hide"
      end

      operation 9814284 "WifiP2pUpnpServiceRequest"
	protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This constructor is only used in newInstance().
@hide"
      end

      operation 9814412 "newInstance"
	class_operation public return_type class_ref 1582476 // WifiP2pUpnpServiceRequest
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a service discovery request to search all UPnP services.

@return service request for UPnP."
      end

      operation 9814540 "newInstance"
	class_operation public return_type class_ref 1582476 // WifiP2pUpnpServiceRequest
	nparams 1
	  param in name "st" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a service discovery request to search specified UPnP services.

@param st ssdp search target.  Cannot be null.<br>
e.g ) <br>
<ul>
<li>\"ssdp:all\"
<li>\"upnp:rootdevice\"
<li>\"urn:schemas-upnp-org:device:MediaServer:2\"
<li>\"urn:schemas-upnp-org:service:ContentDirectory:2\"
<li>\"uuid:6859dede-8574-59ab-9332-123456789012\"
</ul>
@return service request for UPnP."
      end
    end
  end

  deploymentview 207116 "nsd"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 795660 "WifiP2pServiceInfo"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.Parcel;
import android.os.Parcelable;
import java.util.ArrayList;
import java.util.List;
${definition}"
      associated_classes
	class_ref 1570700 // WifiP2pServiceInfo
      end
      comment "Copyright (C) 2012 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 795788 "WifiP2pDnsSdServiceInfo"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.net.nsd.DnsSdTxtRecord;
import android.text.TextUtils;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
${definition}"
      associated_classes
	class_ref 1581964 // WifiP2pDnsSdServiceInfo
      end
      comment "Copyright (C) 2012 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 795916 "WifiP2pServiceRequest"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.net.wifi.p2p.WifiP2pManager;
import android.os.Parcel;
import android.os.Parcelable;
${definition}"
      associated_classes
	class_ref 1579404 // WifiP2pServiceRequest
      end
      comment "Copyright (C) 2012 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 796044 "WifiP2pDnsSdServiceRequest"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.net.wifi.p2p.WifiP2pManager;
${definition}"
      associated_classes
	class_ref 1582092 // WifiP2pDnsSdServiceRequest
      end
      comment "Copyright (C) 2012 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 796172 "WifiP2pServiceResponse"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.net.wifi.p2p.WifiP2pDevice;
import android.os.Parcel;
import android.os.Parcelable;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
${definition}"
      associated_classes
	class_ref 1579020 // WifiP2pServiceResponse
      end
      comment "Copyright (C) 2012 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 796300 "WifiP2pDnsSdServiceResponse"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.net.wifi.p2p.WifiP2pDevice;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;
${definition}"
      associated_classes
	class_ref 1579276 // WifiP2pDnsSdServiceResponse
      end
      comment "Copyright (C) 2012 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 796428 "WifiP2pUpnpServiceInfo"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
${definition}"
      associated_classes
	class_ref 1582348 // WifiP2pUpnpServiceInfo
      end
      comment "Copyright (C) 2012 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 796556 "WifiP2pUpnpServiceRequest"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.net.wifi.p2p.WifiP2pManager;
${definition}"
      associated_classes
	class_ref 1582476 // WifiP2pUpnpServiceRequest
      end
      comment "Copyright (C) 2012 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 796684 "WifiP2pUpnpServiceResponse"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.net.wifi.p2p.WifiP2pDevice;
import java.util.ArrayList;
import java.util.List;
${definition}"
      associated_classes
	class_ref 1579148 // WifiP2pUpnpServiceResponse
      end
      comment "Copyright (C) 2012 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end
  end
end
