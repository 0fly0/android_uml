format 74
"lang" // _unknown::java::lang
  revision 4
  modified_by 27 "shchen"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "<unknown>java/lang/"
  java_package "java.lang"
  classview 168972 "lang"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 806284 "RuntimeException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "{@code RuntimeException} is the superclass of all classes that represent
exceptional conditions which occur as a result of executing an application in
the VM. Unlike checked exceptions (exceptions where the type
doesn't extend {@code RuntimeException} or {@link Error}), the compiler does
not require code to handle runtime exceptions."
      classrelation 168347 // <generalisation>
	relation 168347 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 168347 // <generalisation>
	  b parent class_ref 132251 // Exception
      end

      attribute 159771 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -7034897190745766939L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 281755 "RuntimeException"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code RuntimeException} that includes the current stack
trace."
      end

      operation 281883 "RuntimeException"
	public explicit_return_type ""
	nparams 1
	  param inout name "detailMessage" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code RuntimeException} with the current stack trace
and the specified detail message.

@param detailMessage
           the detail message for this exception."
      end

      operation 282011 "RuntimeException"
	public explicit_return_type ""
	nparams 2
	  param inout name "detailMessage" type class_ref 3399692 // String
	  param inout name "throwable" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code RuntimeException} with the current stack trace,
the specified detail message and the specified cause.

@param detailMessage
           the detail message for this exception.
@param throwable
           the cause of this exception."
      end

      operation 282139 "RuntimeException"
	public explicit_return_type ""
	nparams 1
	  param inout name "throwable" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code RuntimeException} with the current stack trace
and the specified cause.

@param throwable
           the cause of this exception."
      end
    end

    class 1201420 "Thread"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A {@code Thread} is a concurrent unit of execution. It has its own call stack
for methods being invoked, their arguments and local variables. Each application
has at least one thread running when it is started, the main thread, in the main
{@link ThreadGroup}. The runtime keeps its own threads in the system thread
group.

<p>There are two ways to execute code in a new thread.
You can either subclass {@code Thread} and overriding its {@link #run()} method,
or construct a new {@code Thread} and pass a {@link Runnable} to the constructor.
In either case, the {@link #start()} method must be called to actually execute
the new {@code Thread}.

<p>Each {@code Thread} has an integer priority that affect how the thread is
scheduled by the OS. A new thread inherits the priority of its parent.
A thread's priority can be set using the {@link #setPriority(int)} method."
      classrelation 208795 // <realization>
	relation 208795 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 208795 // <realization>
	  b parent class_ref 151963 // Runnable
      end

      attribute 190747 "NANOS_PER_MILLI"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1000000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      class 161051 "ParkState"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 190875 "UNPARKED"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 1"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " park state indicating unparked "
	end

	attribute 191003 "PREEMPTIVELY_UNPARKED"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 2"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " park state indicating preemptively unparked "
	end

	attribute 191131 "PARKED"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 3"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " park state indicating parked "
	end
      end

      class 161179 "State"
	visibility public stereotype "enum"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}enum ${name}${implements} {
${items};
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 191259 "NEW"
	  public type class_ref 161179 // State
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "The thread has been created, but has never been started.
"
	end

	attribute 191387 "RUNNABLE"
	  public type class_ref 161179 // State
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "The thread may be run.
"
	end

	attribute 191515 "BLOCKED"
	  public type class_ref 161179 // State
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "The thread is blocked and waiting for a lock.
"
	end

	attribute 191643 "WAITING"
	  public type class_ref 161179 // State
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "The thread is waiting.
"
	end

	attribute 191771 "TIMED_WAITING"
	  public type class_ref 161179 // State
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "The thread is waiting for a specified amount of time.
"
	end

	attribute 191899 "TERMINATED"
	  public type class_ref 161179 // State
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "The thread has been terminated."
	end
      end

      attribute 192027 "MAX_PRIORITY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 10"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The maximum priority value allowed for a thread.
This corresponds to (but does not have the same value as)
{@code android.os.Process.THREAD_PRIORITY_URGENT_DISPLAY}.
"
      end

      attribute 192155 "MIN_PRIORITY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The minimum priority value allowed for a thread.
This corresponds to (but does not have the same value as)
{@code android.os.Process.THREAD_PRIORITY_LOWEST}.
"
      end

      attribute 192283 "NORM_PRIORITY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 5"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The normal (default) priority value assigned to the main thread.
This corresponds to (but does not have the same value as)
{@code android.os.Process.THREAD_PRIORITY_DEFAULT}.

"
      end

      classrelation 208923 // vmThread (<unidirectional association>)
	relation 208923 --->
	  a role_name "vmThread" volatile package
	    comment " some of these are accessed directly by the VM; do not rename them 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 208923 // vmThread (<unidirectional association>)
	  b parent class_ref 161307 // VMThread
      end

      classrelation 209051 // group (<unidirectional association>)
	relation 209051 --->
	  a role_name "group" volatile package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 209051 // group (<unidirectional association>)
	  b parent class_ref 158747 // ThreadGroup
      end

      attribute 192411 "daemon"
	volatile package explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 209179 // name (<unidirectional association>)
	relation 209179 --->
	  a role_name "name" volatile package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 209179 // name (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      attribute 192539 "priority"
	volatile package explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 192667 "stackSize"
	volatile package explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 209307 // target (<unidirectional association>)
	relation 209307 --->
	  a role_name "target" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 209307 // target (<unidirectional association>)
	  b parent class_ref 151963 // Runnable
      end

      attribute 192795 "count"
	class_attribute private explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 192923 "id"
	private explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Holds the thread's ID. We simply count upwards, so
each Thread has a unique ID.
"
      end

      classrelation 209435 // localValues (<unidirectional association>)
	relation 209435 --->
	  a role_name "localValues" package
	    comment "
Normal thread local values.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 209435 // localValues (<unidirectional association>)
	  b parent class_ref 154651 // Values
      end

      classrelation 209563 // inheritableValues (<unidirectional association>)
	relation 209563 --->
	  a role_name "inheritableValues" package
	    comment "
Inheritable thread local values.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 209563 // inheritableValues (<unidirectional association>)
	  b parent class_ref 154651 // Values
      end

      classrelation 209691 // interruptActions (<unidirectional association>)
	relation 209691 --->
	  a role_name "interruptActions" init_value " new ArrayList<Runnable>()" const_relation private
	    comment " Callbacks to run on interruption. 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Runnable> ${name}${value};
"
	    classrelation_ref 209691 // interruptActions (<unidirectional association>)
	  b parent class_ref 131483 // List
      end

      classrelation 209819 // contextClassLoader (<unidirectional association>)
	relation 209819 --->
	  a role_name "contextClassLoader" private
	    comment "
Holds the class loader for this Thread, in case there is one.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 209819 // contextClassLoader (<unidirectional association>)
	  b parent class_ref 138523 // ClassLoader
      end

      class 161435 "UncaughtExceptionHandler"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 446747 "uncaughtException"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "thread" type class_ref 1201420 // Thread
	    param inout name "ex" type class_ref 134683 // Throwable
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "The thread is being terminated by an uncaught exception. Further
exceptions thrown in this method are prevent the remainder of the
method from executing, but are otherwise ignored.

@param thread the thread that has an uncaught exception
@param ex the exception that was thrown"
	end
      end

      classrelation 209947 // uncaughtHandler (<unidirectional association>)
	relation 209947 --->
	  a role_name "uncaughtHandler" private
	    comment "
Holds the handler for uncaught exceptions in this Thread,
in case there is one.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 209947 // uncaughtHandler (<unidirectional association>)
	  b parent class_ref 161435 // UncaughtExceptionHandler
      end

      classrelation 210075 // defaultUncaughtHandler (<unidirectional association>)
	relation 210075 --->
	  a role_name "defaultUncaughtHandler" class_relation private
	    comment "
Holds the default handler for uncaught exceptions, in case there is one.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 210075 // defaultUncaughtHandler (<unidirectional association>)
	  b parent class_ref 161435 // UncaughtExceptionHandler
      end

      attribute 193051 "hasBeenStarted"
	package explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Reflects whether this Thread has already been started. A Thread
can only be started once (no recycling). Also, we need it to deduce
the proper Thread status.
"
      end

      attribute 193179 "parkState"
	private explicit_type "int"
	init_value " ParkState.UNPARKED"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " the park state of the thread "
      end

      classrelation 210203 // parkBlocker (<unidirectional association>)
	relation 210203 --->
	  a role_name "parkBlocker" private
	    comment " The synchronization object responsible for this thread parking. 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 210203 // parkBlocker (<unidirectional association>)
	  b parent class_ref 3401484 // Object
      end

      operation 439707 "Thread"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code Thread} with no {@code Runnable} object and a
newly generated name. The new {@code Thread} will belong to the same
{@code ThreadGroup} as the {@code Thread} calling this constructor.

@see java.lang.ThreadGroup
@see java.lang.Runnable"
      end

      operation 439835 "Thread"
	public explicit_return_type ""
	nparams 1
	  param inout name "runnable" type class_ref 151963 // Runnable
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code Thread} with a {@code Runnable} object and a
newly generated name. The new {@code Thread} will belong to the same
{@code ThreadGroup} as the {@code Thread} calling this constructor.

@param runnable
           a {@code Runnable} whose method <code>run</code> will be
           executed by the new {@code Thread}

@see java.lang.ThreadGroup
@see java.lang.Runnable"
      end

      operation 439963 "Thread"
	public explicit_return_type ""
	nparams 2
	  param inout name "runnable" type class_ref 151963 // Runnable
	  param inout name "threadName" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code Thread} with a {@code Runnable} object and name
provided. The new {@code Thread} will belong to the same {@code
ThreadGroup} as the {@code Thread} calling this constructor.

@param runnable
           a {@code Runnable} whose method <code>run</code> will be
           executed by the new {@code Thread}
@param threadName
           the name for the {@code Thread} being created

@see java.lang.ThreadGroup
@see java.lang.Runnable"
      end

      operation 440091 "Thread"
	public explicit_return_type ""
	nparams 1
	  param inout name "threadName" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code Thread} with no {@code Runnable} object and the
name provided. The new {@code Thread} will belong to the same {@code
ThreadGroup} as the {@code Thread} calling this constructor.

@param threadName
           the name for the {@code Thread} being created

@see java.lang.ThreadGroup
@see java.lang.Runnable
"
      end

      operation 440219 "Thread"
	public explicit_return_type ""
	nparams 2
	  param inout name "group" type class_ref 158747 // ThreadGroup
	  param inout name "runnable" type class_ref 151963 // Runnable
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code Thread} with a {@code Runnable} object and a
newly generated name. The new {@code Thread} will belong to the {@code
ThreadGroup} passed as parameter.

@param group
           {@code ThreadGroup} to which the new {@code Thread} will
           belong
@param runnable
           a {@code Runnable} whose method <code>run</code> will be
           executed by the new {@code Thread}
@throws IllegalThreadStateException
            if <code>group.destroy()</code> has already been done
@see java.lang.ThreadGroup
@see java.lang.Runnable"
      end

      operation 440347 "Thread"
	public explicit_return_type ""
	nparams 3
	  param inout name "group" type class_ref 158747 // ThreadGroup
	  param inout name "runnable" type class_ref 151963 // Runnable
	  param inout name "threadName" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code Thread} with a {@code Runnable} object, the given
name and belonging to the {@code ThreadGroup} passed as parameter.

@param group
           ThreadGroup to which the new {@code Thread} will belong
@param runnable
           a {@code Runnable} whose method <code>run</code> will be
           executed by the new {@code Thread}
@param threadName
           the name for the {@code Thread} being created
@throws IllegalThreadStateException
            if <code>group.destroy()</code> has already been done
@see java.lang.ThreadGroup
@see java.lang.Runnable"
      end

      operation 440475 "Thread"
	public explicit_return_type ""
	nparams 2
	  param inout name "group" type class_ref 158747 // ThreadGroup
	  param inout name "threadName" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code Thread} with no {@code Runnable} object, the
given name and belonging to the {@code ThreadGroup} passed as parameter.

@param group
           {@code ThreadGroup} to which the new {@code Thread} will belong
@param threadName
           the name for the {@code Thread} being created
@throws IllegalThreadStateException
            if <code>group.destroy()</code> has already been done
@see java.lang.ThreadGroup
@see java.lang.Runnable"
      end

      operation 440603 "Thread"
	public explicit_return_type ""
	nparams 4
	  param inout name "group" type class_ref 158747 // ThreadGroup
	  param inout name "runnable" type class_ref 151963 // Runnable
	  param inout name "threadName" type class_ref 3399692 // String
	  param in name "stackSize" explicit_type "long"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code Thread} with a {@code Runnable} object, the given
name and belonging to the {@code ThreadGroup} passed as parameter.

@param group
           {@code ThreadGroup} to which the new {@code Thread} will
           belong
@param runnable
           a {@code Runnable} whose method <code>run</code> will be
           executed by the new {@code Thread}
@param threadName
           the name for the {@code Thread} being created
@param stackSize
           a stack size for the new {@code Thread}. This has a highly
           platform-dependent interpretation. It may even be ignored
           completely.
@throws IllegalThreadStateException
            if <code>group.destroy()</code> has already been done
@see java.lang.ThreadGroup
@see java.lang.Runnable"
      end

      operation 440731 "Thread"
	package explicit_return_type ""
	nparams 4
	  param inout name "group" type class_ref 158747 // ThreadGroup
	  param inout name "name" type class_ref 3399692 // String
	  param in name "priority" explicit_type "int"
	  param inout name "daemon" explicit_type "boolean"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Package-scope method invoked by Dalvik VM to create \"internal\"
threads or attach threads created externally.

Don't call Thread.currentThread(), since there may not be such
a thing (e.g. for Main)."
      end

      operation 440859 "create"
	private explicit_return_type "void"
	nparams 4
	  param inout name "group" type class_ref 158747 // ThreadGroup
	  param inout name "runnable" type class_ref 151963 // Runnable
	  param inout name "threadName" type class_ref 3399692 // String
	  param in name "stackSize" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes a new, existing Thread object with a runnable object,
the given name and belonging to the ThreadGroup passed as parameter.
This is the method that the several public constructors delegate their
work to.

@param group ThreadGroup to which the new Thread will belong
@param runnable a java.lang.Runnable whose method <code>run</code> will
       be executed by the new Thread
@param threadName Name for the Thread being created
@param stackSize Platform dependent stack size
@throws IllegalThreadStateException if <code>group.destroy()</code> has
        already been done
@see java.lang.ThreadGroup
@see java.lang.Runnable"
      end

      operation 440987 "activeCount"
	class_operation public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of active {@code Thread}s in the running {@code
Thread}'s group and its subgroups.

@return the number of {@code Thread}s"
      end

      operation 441115 "checkAccess"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Does nothing."
      end

      operation 441243 "countStackFrames"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Returns the number of stack frames in this thread.

@return Number of stack frames
@deprecated The results of this call were never well defined. To make
            things worse, it would depend on whether the Thread was
            suspended or not, and suspend was deprecated too."
      end

      operation 441371 "currentThread"
	class_operation public return_type class_ref 1201420 // Thread
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the Thread of the caller, that is, the current Thread.

@return the current Thread."
      end

      operation 441499 "destroy"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Throws {@code UnsupportedOperationException}.
@deprecated Not implemented."
      end

      operation 441627 "dumpStack"
	class_operation public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prints to the standard error stream a text representation of the current
stack for this Thread.

@see Throwable#printStackTrace()"
      end

      operation 441755 "enumerate"
	class_operation public explicit_return_type "int"
	nparams 1
	  param inout name "threads" type class_ref 1201420 // Thread
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copies an array with all Threads which are in the same ThreadGroup as the
receiver - and subgroups - into the array <code>threads</code> passed as
parameter. If the array passed as parameter is too small no exception is
thrown - the extra elements are simply not copied.

@param threads
           array into which the Threads will be copied
@return How many Threads were copied over"
      end

      operation 441883 "getAllStackTraces"
	class_operation public return_type class_ref 129819 // Map
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Thread, StackTraceElement[]> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a map of all the currently live threads to their stack traces."
      end

      operation 442011 "getContextClassLoader"
	public return_type class_ref 138523 // ClassLoader
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the context ClassLoader for this Thread.

@return ClassLoader The context ClassLoader
@see java.lang.ClassLoader
@see #getContextClassLoader()"
      end

      operation 442139 "getDefaultUncaughtExceptionHandler"
	class_operation public return_type class_ref 161435 // UncaughtExceptionHandler
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the default exception handler that's executed when uncaught
exception terminates a thread.

@return an {@link UncaughtExceptionHandler} or <code>null</code> if
        none exists."
      end

      operation 442267 "getId"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the thread's identifier. The ID is a positive <code>long</code>
generated on thread creation, is unique to the thread, and doesn't change
during the lifetime of the thread; the ID may be reused after the thread
has been terminated.

@return the thread's ID."
      end

      operation 442395 "getName"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the Thread."
      end

      operation 442523 "getPriority"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the priority of the Thread."
      end

      operation 442651 "getStackTrace"
	public return_type class_ref 134811 // StackTraceElement
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of {@link StackTraceElement} representing the current thread's stack."
      end

      operation 442779 "getState"
	public return_type class_ref 161179 // State
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current state of the Thread. This method is useful for
monitoring purposes.

@return a {@link State} value."
      end

      operation 442907 "getThreadGroup"
	public return_type class_ref 158747 // ThreadGroup
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the ThreadGroup to which this Thread belongs.

@return the Thread's ThreadGroup"
      end

      operation 443035 "getUncaughtExceptionHandler"
	public return_type class_ref 161435 // UncaughtExceptionHandler
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the thread's uncaught exception handler. If not explicitly set,
then the ThreadGroup's handler is returned. If the thread is terminated,
then <code>null</code> is returned.

@return an {@link UncaughtExceptionHandler} instance or {@code null}."
      end

      operation 443163 "interrupt"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Posts an interrupt request to this {@code Thread}. The behavior depends on
the state of this {@code Thread}:
<ul>
<li>
{@code Thread}s blocked in one of {@code Object}'s {@code wait()} methods
or one of {@code Thread}'s {@code join()} or {@code sleep()} methods will
be woken up, their interrupt status will be cleared, and they receive an
{@link InterruptedException}.
<li>
{@code Thread}s blocked in an I/O operation of an
{@link java.nio.channels.InterruptibleChannel} will have their interrupt
status set and receive an
{@link java.nio.channels.ClosedByInterruptException}. Also, the channel
will be closed.
<li>
{@code Thread}s blocked in a {@link java.nio.channels.Selector} will have
their interrupt status set and return immediately. They don't receive an
exception in this case.
<ul>

@see Thread#interrupted
@see Thread#isInterrupted"
      end

      operation 443291 "interrupted"
	class_operation public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a <code>boolean</code> indicating whether the current Thread (
<code>currentThread()</code>) has a pending interrupt request (<code>
true</code>) or not (<code>false</code>). It also has the side-effect of
clearing the flag.

@return a <code>boolean</code> indicating the interrupt status
@see Thread#currentThread
@see Thread#interrupt
@see Thread#isInterrupted"
      end

      operation 443419 "isAlive"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns <code>true</code> if the receiver has already been started and
still runs code (hasn't died yet). Returns <code>false</code> either if
the receiver hasn't been started yet or if it has already started and run
to completion and died.

@return a <code>boolean</code> indicating the liveness of the Thread
@see Thread#start"
      end

      operation 443547 "isDaemon"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests whether this is a daemon thread.
A daemon thread only runs as long as there are non-daemon threads running.
When the last non-daemon thread ends, the runtime will exit. This is not
normally relevant to applications with a UI."
      end

      operation 443675 "isInterrupted"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a <code>boolean</code> indicating whether the receiver has a
pending interrupt request (<code>true</code>) or not (
<code>false</code>)

@return a <code>boolean</code> indicating the interrupt status
@see Thread#interrupt
@see Thread#interrupted"
      end

      operation 443803 "join"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 155547 // InterruptedException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Blocks the current Thread (<code>Thread.currentThread()</code>) until
the receiver finishes its execution and dies.

@throws InterruptedException if <code>interrupt()</code> was called for
        the receiver while it was in the <code>join()</code> call
@see Object#notifyAll
@see java.lang.ThreadDeath"
      end

      operation 443931 "join"
	public explicit_return_type "void"
	nparams 1
	  param in name "millis" explicit_type "long"
	nexceptions 1
	  exception class_ref 155547 // InterruptedException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Blocks the current Thread (<code>Thread.currentThread()</code>) until
the receiver finishes its execution and dies or the specified timeout
expires, whatever happens first.

@param millis The maximum time to wait (in milliseconds).
@throws InterruptedException if <code>interrupt()</code> was called for
        the receiver while it was in the <code>join()</code> call
@see Object#notifyAll
@see java.lang.ThreadDeath"
      end

      operation 444059 "join"
	public explicit_return_type "void"
	nparams 2
	  param in name "millis" explicit_type "long"
	  param in name "nanos" explicit_type "int"
	nexceptions 1
	  exception class_ref 155547 // InterruptedException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Blocks the current Thread (<code>Thread.currentThread()</code>) until
the receiver finishes its execution and dies or the specified timeout
expires, whatever happens first.

@param millis The maximum time to wait (in milliseconds).
@param nanos Extra nanosecond precision
@throws InterruptedException if <code>interrupt()</code> was called for
        the receiver while it was in the <code>join()</code> call
@see Object#notifyAll
@see java.lang.ThreadDeath"
      end

      operation 444187 "resume"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Throws {@code UnsupportedOperationException}.
@deprecated Only useful in conjunction with deprecated method {@link Thread#suspend}."
      end

      operation 444315 "run"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Calls the <code>run()</code> method of the Runnable object the receiver
holds. If no Runnable is set, does nothing.

@see Thread#start"
      end

      operation 444443 "setContextClassLoader"
	public explicit_return_type "void"
	nparams 1
	  param inout name "cl" type class_ref 138523 // ClassLoader
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the context ClassLoader for the receiver.

@param cl The context ClassLoader
@see #getContextClassLoader()"
      end

      operation 444571 "setDaemon"
	public explicit_return_type "void"
	nparams 1
	  param inout name "isDaemon" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Marks this thread as a daemon thread.
A daemon thread only runs as long as there are non-daemon threads running.
When the last non-daemon thread ends, the runtime will exit. This is not
normally relevant to applications with a UI.
@throws IllegalThreadStateException - if this thread has already started."
      end

      operation 444699 "checkNotStarted"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 444827 "setDefaultUncaughtExceptionHandler"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "handler" type class_ref 161435 // UncaughtExceptionHandler
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the default uncaught exception handler. This handler is invoked in
case any Thread dies due to an unhandled exception.

@param handler
           The handler to set or null."
      end

      operation 444955 "pushInterruptAction$"
	public explicit_return_type "void"
	nparams 1
	  param inout name "interruptAction" type class_ref 151963 // Runnable
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a runnable to be invoked upon interruption. If this thread has
already been interrupted, the runnable will be invoked immediately. The
action should be idempotent as it may be invoked multiple times for a
single interruption.

<p>Each call to this method must be matched with a corresponding call to
{@link #popInterruptAction$}.

@hide used by NIO"
      end

      operation 445083 "popInterruptAction$"
	public explicit_return_type "void"
	nparams 1
	  param inout name "interruptAction" type class_ref 151963 // Runnable
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes {@code interruptAction} so it is not invoked upon interruption.

@param interruptAction the pushed action, used to check that the call
    stack is correctly nested.

@hide used by NIO"
      end

      operation 445211 "setName"
	public explicit_return_type "void"
	nparams 1
	  param inout name "threadName" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the name of the Thread.

@param threadName the new name for the Thread
@see Thread#getName"
      end

      operation 445339 "setPriority"
	public explicit_return_type "void"
	nparams 1
	  param in name "priority" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the priority of this thread. If the requested priority is greater than the
parent thread group's {@link java.lang.ThreadGroup#getMaxPriority}, the group's maximum
priority will be used instead.

@throws IllegalArgumentException - if the new priority is greater than {@link #MAX_PRIORITY}
    or less than {@link #MIN_PRIORITY}"
      end

      operation 445467 "setUncaughtExceptionHandler"
	public explicit_return_type "void"
	nparams 1
	  param inout name "handler" type class_ref 161435 // UncaughtExceptionHandler
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>
Sets the uncaught exception handler. This handler is invoked in case this
Thread dies due to an unhandled exception.
</p>

@param handler
           The handler to set or <code>null</code>."
      end

      operation 445595 "sleep"
	class_operation public explicit_return_type "void"
	nparams 1
	  param in name "time" explicit_type "long"
	nexceptions 1
	  exception class_ref 155547 // InterruptedException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Causes the thread which sent this message to sleep for the given interval
of time (given in milliseconds). The precision is not guaranteed - the
Thread may sleep more or less than requested.

@param time
           The time to sleep in milliseconds.
@throws InterruptedException
            if <code>interrupt()</code> was called for this Thread while
            it was sleeping
@see Thread#interrupt()"
      end

      operation 445723 "sleep"
	class_operation public explicit_return_type "void"
	nparams 2
	  param in name "millis" explicit_type "long"
	  param in name "nanos" explicit_type "int"
	nexceptions 1
	  exception class_ref 155547 // InterruptedException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Causes the thread which sent this message to sleep for the given interval
of time (given in milliseconds and nanoseconds). The precision is not
guaranteed - the Thread may sleep more or less than requested.

@param millis
           The time to sleep in milliseconds.
@param nanos
           Extra nanosecond precision
@throws InterruptedException
            if <code>interrupt()</code> was called for this Thread while
            it was sleeping
@see Thread#interrupt()"
      end

      operation 445851 "start"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Starts the new Thread of execution. The <code>run()</code> method of
the receiver will be called by the receiver Thread itself (and not the
Thread calling <code>start()</code>).

@throws IllegalThreadStateException - if this thread has already started.
@see Thread#run"
      end

      operation 445979 "stop"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Requests the receiver Thread to stop and throw ThreadDeath. The Thread is
resumed if it was suspended and awakened if it was sleeping, so that it
can proceed to throw ThreadDeath.

@deprecated because stopping a thread in this manner is unsafe and can
leave your application and the VM in an unpredictable state."
      end

      operation 446107 "stop"
	public explicit_return_type "void"
	nparams 1
	  param inout name "throwable" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Throws {@code UnsupportedOperationException}.
@deprecated because stopping a thread in this manner is unsafe and can
leave your application and the VM in an unpredictable state."
      end

      operation 446235 "suspend"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Throws {@code UnsupportedOperationException}.
@deprecated May cause deadlocks."
      end

      operation 446363 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns a string containing a concise, human-readable description of the
Thread. It includes the Thread's name, priority, and group name.

@return a printable representation for the receiver."
      end

      operation 446491 "yield"
	class_operation public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Causes the calling Thread to yield execution time to another Thread that
is ready to run. The actual scheduling is implementation-dependent."
      end

      operation 446619 "holdsLock"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "object" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether the current Thread has a monitor lock on the specified
object.

@param object the object to test for the monitor lock
@return true if the current thread has a monitor lock on the specified
        object; false otherwise"
      end

      operation 446875 "unpark"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unparks this thread. This unblocks the thread it if it was
previously parked, or indicates that the thread is \"preemptively
unparked\" if it wasn't already parked. The latter means that the
next time the thread is told to park, it will merely clear its
latent park bit and carry on without blocking.

<p>See {@link java.util.concurrent.locks.LockSupport} for more
in-depth information of the behavior of this method.</p>

@hide for Unsafe"
      end

      operation 447003 "parkFor"
	public explicit_return_type "void"
	nparams 1
	  param in name "nanos" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parks the current thread for a particular number of nanoseconds, or
indefinitely. If not indefinitely, this method unparks the thread
after the given number of nanoseconds if no other thread unparks it
first. If the thread has been \"preemptively unparked,\" this method
cancels that unparking and returns immediately. This method may
also return spuriously (that is, without the thread being told to
unpark and without the indicated amount of time elapsing).

<p>See {@link java.util.concurrent.locks.LockSupport} for more
in-depth information of the behavior of this method.</p>

<p>This method must only be called when <code>this</code> is the current
thread.

@param nanos number of nanoseconds to park for or <code>0</code>
to park indefinitely
@throws IllegalArgumentException thrown if <code>nanos &lt; 0</code>

@hide for Unsafe"
      end

      operation 447131 "parkUntil"
	public explicit_return_type "void"
	nparams 1
	  param in name "time" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parks the current thread until the specified system time. This
method attempts to unpark the current thread immediately after
<code>System.currentTimeMillis()</code> reaches the specified
value, if no other thread unparks it first. If the thread has
been \"preemptively unparked,\" this method cancels that
unparking and returns immediately. This method may also return
spuriously (that is, without the thread being told to unpark
and without the indicated amount of time elapsing).

<p>See {@link java.util.concurrent.locks.LockSupport} for more
in-depth information of the behavior of this method.</p>

<p>This method must only be called when <code>this</code> is the
current thread.

@param time the time after which the thread should be unparked,
in absolute milliseconds-since-the-epoch

@hide for Unsafe"
      end
    end

    class 3399692 "String"
      visibility public 
      nactuals 1
      actual class class_ref 139675 // Comparable
        rank 0 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "An immutable sequence of characters/code units ({@code char}s). A
{@code String} is represented by array of UTF-16 values, such that
Unicode supplementary characters (code points) are stored/encoded as
surrogate pairs via Unicode code units ({@code char}).

<a name=\"backing_array\"><h3>Backing Arrays</h3></a>
This class is implemented using a char[]. The length of the array may exceed
the length of the string. For example, the string \"Hello\" may be backed by
the array {@code ['H', 'e', 'l', 'l', 'o', 'W'. 'o', 'r', 'l', 'd']} with
offset 0 and length 5.

<p>Multiple strings can share the same char[] because strings are immutable.
The {@link #substring} method <strong>always</strong> returns a string that
shares the backing array of its source string. Generally this is an
optimization: fewer character arrays need to be allocated, and less copying
is necessary. But this can also lead to unwanted heap retention. Taking a
short substring of long string means that the long shared char[] won't be
garbage until both strings are garbage. This typically happens when parsing
small substrings out of a large input. To avoid this where necessary, call
{@code new String(longString.subString(...))}. The string copy constructor
always ensures that the backing array is no larger than necessary.

@see StringBuffer
@see StringBuilder
@see Charset
@since 1.0"
      classrelation 204827 // <realization>
	relation 204827 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 204827 // <realization>
	  b parent class_ref 128155 // Serializable
      end

      classrelation 204955 // <realization>
	relation 204955 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 204955 // <realization>
	  b parent class_ref 139675 // Comparable
      end

      classrelation 205083 // <realization>
	relation 205083 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 205083 // <realization>
	  b parent class_ref 133787 // CharSequence
      end

      attribute 188059 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -6849794470754667710L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 188187 "REPLACEMENT_CHAR"
	class_attribute const_attribute private explicit_type "char"
	init_value " (char) 0xfffd"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      class 159387 "CaseInsensitiveComparator"
	visibility private 
	nactuals 1
	actual class class_ref 3094156 // Comparator
	  rank 0 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 205211 // <realization>
	  relation 205211 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 205211 // <realization>
	    b parent class_ref 3094156 // Comparator
	end

	classrelation 205339 // <realization>
	  relation 205339 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 205339 // <realization>
	    b parent class_ref 128155 // Serializable
	end

	attribute 188315 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " 8575799808933029326L"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 401435 "compare"
	  public explicit_return_type "int"
	  nparams 2
	    param inout name "o1" type class_ref 3399692 // String
	    param inout name "o2" type class_ref 3399692 // String
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Compare the two objects to determine the relative ordering.

@param o1
           an Object to compare
@param o2
           an Object to compare
@return an int < 0 if object1 is less than object2, 0 if they are
        equal, and > 0 if object1 is greater

@exception ClassCastException
               if objects are not the correct type"
	end
      end

      classrelation 205467 // CASE_INSENSITIVE_ORDER (<unidirectional association>)
	relation 205467 --->
	  a role_name "CASE_INSENSITIVE_ORDER" init_value " new CaseInsensitiveComparator()" class_relation const_relation public
	    comment "
A comparator ignoring the case of the characters.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String> ${name}${value};
"
	    classrelation_ref 205467 // CASE_INSENSITIVE_ORDER (<unidirectional association>)
	  b parent class_ref 3094156 // Comparator
      end

      attribute 188443 "ASCII"
	class_attribute const_attribute private explicit_type "char"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      extra_member 129307 "initialization"
	
	cpp "" ""
	java "  static {
        ASCII = new char[128];
        for (int i = 0; i < ASCII.length; ++i) {
            ASCII[i] = (char) i;
        }
    }"
	php ""
	python ""
	idl ""
      end

      attribute 188571 "value"
	const_attribute private explicit_type "char"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 188699 "offset"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 188827 "count"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 188955 "hashCode"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 401563 "String"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an empty string."
      end

      operation 401691 "String"
	private explicit_return_type ""
	nparams 2
	  param inout name "s" type class_ref 3399692 // String
	  param in name "c" explicit_type "char"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unused\")
"
	
	
	
	comment "Private constructor used for JIT optimization."
      end

      operation 401819 "String"
	public explicit_return_type ""
	nparams 1
	  param inout name "data" explicit_type "byte"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@FindBugsSuppressWarnings(\"DM_DEFAULT_ENCODING\")
"
	
	
	
	comment "Converts the byte array to a string using the system's
{@link java.nio.charset.Charset#defaultCharset default charset}."
      end

      operation 401947 "String"
	public explicit_return_type ""
	nparams 2
	  param inout name "data" explicit_type "byte"
	  param in name "high" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Converts the byte array to a string, setting the high byte of every
character to the specified value.

@param data
           the byte array to convert to a string.
@param high
           the high byte to use.
@throws NullPointerException
            if {@code data == null}.
@deprecated Use {@link #String(byte[])} or {@link #String(byte[], String)} instead."
      end

      operation 402075 "String"
	public explicit_return_type ""
	nparams 3
	  param inout name "data" explicit_type "byte"
	  param in name "offset" explicit_type "int"
	  param in name "byteCount" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts a subsequence of the byte array to a string using the system's
{@link java.nio.charset.Charset#defaultCharset default charset}.

@throws NullPointerException
            if {@code data == null}.
@throws IndexOutOfBoundsException
            if {@code byteCount < 0 || offset < 0 || offset + byteCount > data.length}."
      end

      operation 402203 "String"
	public explicit_return_type ""
	nparams 4
	  param inout name "data" explicit_type "byte"
	  param in name "high" explicit_type "int"
	  param in name "offset" explicit_type "int"
	  param in name "byteCount" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Converts the byte array to a string, setting the high byte of every
character to {@code high}.

@throws NullPointerException
            if {@code data == null}.
@throws IndexOutOfBoundsException
            if {@code byteCount < 0 || offset < 0 || offset + byteCount > data.length}

@deprecated Use {@link #String(byte[], int, int)} instead."
      end

      operation 402331 "String"
	public explicit_return_type ""
	nparams 4
	  param inout name "data" explicit_type "byte"
	  param in name "offset" explicit_type "int"
	  param in name "byteCount" explicit_type "int"
	  param inout name "charsetName" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 134171 // UnsupportedEncodingException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts the byte array to a string using the named charset.

<p>The behavior when the bytes cannot be decoded by the named charset
is unspecified. Use {@link java.nio.charset.CharsetDecoder} for more control.

@throws NullPointerException
            if {@code data == null}.
@throws IndexOutOfBoundsException
            if {@code byteCount < 0 || offset < 0 || offset + byteCount > data.length}.
@throws UnsupportedEncodingException
            if the named charset is not supported."
      end

      operation 402459 "String"
	public explicit_return_type ""
	nparams 2
	  param inout name "data" explicit_type "byte"
	  param inout name "charsetName" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 134171 // UnsupportedEncodingException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts the byte array to a string using the named charset.

<p>The behavior when the bytes cannot be decoded by the named charset
is unspecified. Use {@link java.nio.charset.CharsetDecoder} for more control.

@throws NullPointerException
            if {@code data == null}.
@throws UnsupportedEncodingException
            if {@code charsetName} is not supported."
      end

      operation 402587 "String"
	public explicit_return_type ""
	nparams 4
	  param inout name "data" explicit_type "byte"
	  param in name "offset" explicit_type "int"
	  param in name "byteCount" explicit_type "int"
	  param inout name "charset" type class_ref 142491 // Charset
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts the byte array to a string using the given charset.

<p>The behavior when the bytes cannot be decoded by the given charset
is to replace malformed input and unmappable characters with the charset's default
replacement string. Use {@link java.nio.charset.CharsetDecoder} for more control.

@throws IndexOutOfBoundsException
            if {@code byteCount < 0 || offset < 0 || offset + byteCount > data.length}
@throws NullPointerException
            if {@code data == null}

@since 1.6"
      end

      operation 402715 "String"
	public explicit_return_type ""
	nparams 2
	  param inout name "data" explicit_type "byte"
	  param inout name "charset" type class_ref 142491 // Charset
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts the byte array to a String using the given charset.

@throws NullPointerException if {@code data == null}
@since 1.6"
      end

      operation 402843 "String"
	public explicit_return_type ""
	nparams 1
	  param inout name "data" explicit_type "char"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes this string to contain the characters in the specified
character array. Modifying the character array after creating the string
has no effect on the string.

@throws NullPointerException if {@code data == null}"
      end

      operation 402971 "String"
	public explicit_return_type ""
	nparams 3
	  param inout name "data" explicit_type "char"
	  param in name "offset" explicit_type "int"
	  param in name "charCount" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes this string to contain the specified characters in the
character array. Modifying the character array after creating the string
has no effect on the string.

@throws NullPointerException
            if {@code data == null}.
@throws IndexOutOfBoundsException
            if {@code charCount < 0 || offset < 0 || offset + charCount > data.length}"
      end

      operation 403099 "String"
	package explicit_return_type ""
	nparams 3
	  param in name "offset" explicit_type "int"
	  param in name "charCount" explicit_type "int"
	  param inout name "chars" explicit_type "char"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Internal version of the String(char[], int, int) constructor.
Does not range check, null check, or copy the character array."
      end

      operation 403227 "String"
	public explicit_return_type ""
	nparams 1
	  param inout name "toCopy" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new string with the same sequence of characters as {@code
toCopy}. The returned string's <a href=\"#backing_array\">backing array</a>
is no larger than necessary."
      end

      operation 403355 "String"
	private explicit_return_type ""
	nparams 2
	  param inout name "s1" type class_ref 3399692 // String
	  param inout name "s2" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings( { \"unused\", \"nls\" })
"
	
	
	
	comment "Private constructor useful for JIT optimization."
      end

      operation 403483 "String"
	private explicit_return_type ""
	nparams 3
	  param inout name "s1" type class_ref 3399692 // String
	  param inout name "s2" type class_ref 3399692 // String
	  param inout name "s3" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings( { \"unused\", \"nls\" })
"
	
	
	
	comment "Private constructor useful for JIT optimization."
      end

      operation 403611 "String"
	public explicit_return_type ""
	nparams 1
	  param inout name "stringBuffer" type class_ref 146715 // StringBuffer
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a {@code String} from the contents of the specified
{@code StringBuffer}."
      end

      operation 403739 "String"
	public explicit_return_type ""
	nparams 3
	  param inout name "codePoints" explicit_type "int"
	  param in name "offset" explicit_type "int"
	  param in name "count" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a {@code String} from the sub-array of Unicode code points.

@throws NullPointerException
            if {@code codePoints == null}.
@throws IllegalArgumentException
            if any of the elements of {@code codePoints} are not valid
            Unicode code points.
@throws IndexOutOfBoundsException
            if {@code offset} or {@code count} are not within the bounds
            of {@code codePoints}.
@since 1.5"
      end

      operation 403867 "String"
	public explicit_return_type ""
	nparams 1
	  param inout name "stringBuilder" type class_ref 155163 // StringBuilder
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a {@code String} from the contents of the specified {@code
StringBuilder}.

@throws NullPointerException
            if {@code stringBuilder == null}.
@since 1.5"
      end

      operation 403995 "String"
	private explicit_return_type ""
	nparams 2
	  param inout name "s1" type class_ref 3399692 // String
	  param in name "v1" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unused\")
"
	
	
	
	comment "Creates a {@code String} that is s1 + v1. May be used by JIT code."
      end

      operation 404123 "charAt"
	public explicit_return_type "char"
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
	comment "Returns the character at the specified offset in this string.

@param index
           the zero-based index in this string.
@return the character at the index.
@throws IndexOutOfBoundsException
            if {@code index < 0} or {@code index >= length()}."
      end

      operation 404251 "indexAndLength"
	private return_type class_ref 147483 // StringIndexOutOfBoundsException
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 404379 "startEndAndLength"
	private return_type class_ref 147483 // StringIndexOutOfBoundsException
	nparams 2
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 404507 "failedBoundsCheck"
	private return_type class_ref 147483 // StringIndexOutOfBoundsException
	nparams 3
	  param in name "arrayLength" explicit_type "int"
	  param in name "offset" explicit_type "int"
	  param in name "count" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 404635 "foldCase"
	private explicit_return_type "char"
	nparams 1
	  param in name "ch" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This isn't equivalent to either of ICU's u_foldCase case folds, and thus any of the Unicode
case folds, but it's what the RI uses."
      end

      operation 404763 "compareTo"
	public explicit_return_type "int"
	nparams 1
	  param inout name "string" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
	comment "Compares the specified string to this string using the Unicode values of
the characters. Returns 0 if the strings contain the same characters in
the same order. Returns a negative integer if the first non-equal
character in this string has a Unicode value which is less than the
Unicode value of the character at the same position in the specified
string, or if this string is a prefix of the specified string. Returns a
positive integer if the first non-equal character in this string has a
Unicode value which is greater than the Unicode value of the character at
the same position in the specified string, or if the specified string is
a prefix of this string.

@param string
           the string to compare.
@return 0 if the strings are equal, a negative integer if this string is
        before the specified string, or a positive integer if this string
        is after the specified string.
@throws NullPointerException
            if {@code string} is {@code null}."
      end

      operation 404891 "compareToIgnoreCase"
	public explicit_return_type "int"
	nparams 1
	  param inout name "string" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares the specified string to this string using the Unicode values of
the characters, ignoring case differences. Returns 0 if the strings
contain the same characters in the same order. Returns a negative integer
if the first non-equal character in this string has a Unicode value which
is less than the Unicode value of the character at the same position in
the specified string, or if this string is a prefix of the specified
string. Returns a positive integer if the first non-equal character in
this string has a Unicode value which is greater than the Unicode value
of the character at the same position in the specified string, or if the
specified string is a prefix of this string.

@param string
           the string to compare.
@return 0 if the strings are equal, a negative integer if this string is
        before the specified string, or a positive integer if this string
        is after the specified string.
@throws NullPointerException
            if {@code string} is {@code null}."
      end

      operation 405019 "concat"
	public return_type class_ref 3399692 // String
	nparams 1
	  param inout name "string" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Concatenates this string and the specified string.

@param string
           the string to concatenate
@return a new string which is the concatenation of this string and the
        specified string."
      end

      operation 405147 "copyValueOf"
	class_operation public return_type class_ref 3399692 // String
	nparams 1
	  param inout name "data" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new string containing the characters in the specified character
array. Modifying the character array after creating the string has no
effect on the string.

@param data
           the array of characters.
@return the new string.
@throws NullPointerException
            if {@code data} is {@code null}."
      end

      operation 405275 "copyValueOf"
	class_operation public return_type class_ref 3399692 // String
	nparams 3
	  param inout name "data" explicit_type "char"
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new string containing the specified characters in the character
array. Modifying the character array after creating the string has no
effect on the string.

@param data
           the array of characters.
@param start
           the starting offset in the character array.
@param length
           the number of characters to use.
@return the new string.
@throws NullPointerException
            if {@code data} is {@code null}.
@throws IndexOutOfBoundsException
            if {@code length < 0, start < 0} or {@code start + length >
            data.length}."
      end

      operation 405403 "endsWith"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "suffix" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares the specified string to this string to determine if the
specified string is a suffix.

@param suffix
           the suffix to look for.
@return {@code true} if the specified string is a suffix of this string,
        {@code false} otherwise.
@throws NullPointerException
            if {@code suffix} is {@code null}."
      end

      operation 405531 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "object" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	java_annotation "@Override
"
	
	
	
	comment "Compares the specified object to this string and returns true if they are
equal. The object must be an instance of string with the same characters
in the same order.

@param object
           the object to compare.
@return {@code true} if the specified object is equal to this string,
        {@code false} otherwise.
@see #hashCode"
      end

      operation 405659 "equalsIgnoreCase"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "string" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@FindBugsSuppressWarnings(\"ES_COMPARING_PARAMETER_STRING_WITH_EQ\")
"
	
	
	
	comment "Compares the specified string to this string ignoring the case of the
characters and returns true if they are equal.

@param string
           the string to compare.
@return {@code true} if the specified string is equal to this string,
        {@code false} otherwise."
      end

      operation 405787 "getBytes"
	public explicit_return_type "void"
	nparams 4
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	  param inout name "data" explicit_type "byte"
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Mangles this string into a byte array by stripping the high order bits from
each character. Use {@link #getBytes()} or {@link #getBytes(String)} instead.

@param start
           the starting offset of characters to copy.
@param end
           the ending offset of characters to copy.
@param data
           the destination byte array.
@param index
           the starting offset in the destination byte array.
@throws NullPointerException
            if {@code data} is {@code null}.
@throws IndexOutOfBoundsException
            if {@code start < 0}, {@code end > length()}, {@code index <
            0} or {@code end - start > data.length - index}.
@deprecated Use {@link #getBytes()} or {@link #getBytes(String)}"
      end

      operation 405915 "getBytes"
	public explicit_return_type "byte"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new byte array containing the characters of this string encoded using the
system's {@link java.nio.charset.Charset#defaultCharset default charset}.

<p>The behavior when this string cannot be represented in the system's default charset
is unspecified. In practice, when the default charset is UTF-8 (as it is on Android),
all strings can be encoded."
      end

      operation 406043 "getBytes"
	public explicit_return_type "byte"
	nparams 1
	  param inout name "charsetName" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 134171 // UnsupportedEncodingException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new byte array containing the characters of this string encoded using the
named charset.

<p>The behavior when this string cannot be represented in the named charset
is unspecified. Use {@link java.nio.charset.CharsetEncoder} for more control.

@throws UnsupportedEncodingException if the charset is not supported"
      end

      operation 406171 "getBytes"
	public explicit_return_type "byte"
	nparams 1
	  param inout name "charset" type class_ref 142491 // Charset
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new byte array containing the characters of this string encoded using the
given charset.

<p>The behavior when this string cannot be represented in the given charset
is to replace malformed input and unmappable characters with the charset's default
replacement byte array. Use {@link java.nio.charset.CharsetEncoder} for more control.

@since 1.6"
      end

      operation 406299 "getChars"
	public explicit_return_type "void"
	nparams 4
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	  param inout name "buffer" explicit_type "char"
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copies the specified characters in this string to the character array
starting at the specified offset in the character array.

@param start
           the starting offset of characters to copy.
@param end
           the ending offset of characters to copy.
@param buffer
           the destination character array.
@param index
           the starting offset in the character array.
@throws NullPointerException
            if {@code buffer} is {@code null}.
@throws IndexOutOfBoundsException
            if {@code start < 0}, {@code end > length()}, {@code start >
            end}, {@code index < 0}, {@code end - start > buffer.length -
            index}"
      end

      operation 406427 "_getChars"
	package explicit_return_type "void"
	nparams 4
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	  param inout name "buffer" explicit_type "char"
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Version of getChars without bounds checks, for use by other classes
within the java.lang package only.  The caller is responsible for
ensuring that start >= 0 && start <= end && end <= count."
      end

      operation 406555 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 406683 "indexOf"
	public explicit_return_type "int"
	nparams 1
	  param in name "c" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Searches in this string for the first index of the specified character.
The search for the character starts at the beginning and moves towards
the end of this string.

@param c
           the character to find.
@return the index in this string of the specified character, -1 if the
        character isn't found."
      end

      operation 406811 "indexOf"
	public explicit_return_type "int"
	nparams 2
	  param in name "c" explicit_type "int"
	  param in name "start" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Searches in this string for the index of the specified character. The
search for the character starts at the specified offset and moves towards
the end of this string.

@param c
           the character to find.
@param start
           the starting offset.
@return the index in this string of the specified character, -1 if the
        character isn't found."
      end

      operation 406939 "fastIndexOf"
	private explicit_return_type "int"
	nparams 2
	  param in name "c" explicit_type "int"
	  param in name "start" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
      end

      operation 407067 "indexOfSupplementary"
	private explicit_return_type "int"
	nparams 2
	  param in name "c" explicit_type "int"
	  param in name "start" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 407195 "indexOf"
	public explicit_return_type "int"
	nparams 1
	  param inout name "string" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Searches in this string for the first index of the specified string. The
search for the string starts at the beginning and moves towards the end
of this string.

@param string
           the string to find.
@return the index of the first character of the specified string in this
        string, -1 if the specified string is not a substring.
@throws NullPointerException
            if {@code string} is {@code null}."
      end

      operation 407323 "indexOf"
	public explicit_return_type "int"
	nparams 2
	  param inout name "subString" type class_ref 3399692 // String
	  param in name "start" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Searches in this string for the index of the specified string. The search
for the string starts at the specified offset and moves towards the end
of this string.

@param subString
           the string to find.
@param start
           the starting offset.
@return the index of the first character of the specified string in this
        string, -1 if the specified string is not a substring.
@throws NullPointerException
            if {@code subString} is {@code null}."
      end

      operation 407451 "intern"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
	comment "Returns an interned string equal to this string. The VM maintains an internal set of
unique strings. All string literals found in loaded classes'
constant pools are automatically interned. Manually-interned strings are only weakly
referenced, so calling {@code intern} won't lead to unwanted retention.

<p>Interning is typically used because it guarantees that for interned strings
{@code a} and {@code b}, {@code a.equals(b)} can be simplified to
{@code a == b}. (This is not true of non-interned strings.)

<p>Many applications find it simpler and more convenient to use an explicit
{@link java.util.HashMap} to implement their own pools."
      end

      operation 407579 "isEmpty"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
	comment "Returns true if the length of this string is 0.

@since 1.6"
      end

      operation 407707 "lastIndexOf"
	public explicit_return_type "int"
	nparams 1
	  param in name "c" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the last index of the code point {@code c}, or -1.
The search for the character starts at the end and moves towards the
beginning of this string."
      end

      operation 407835 "lastIndexOf"
	public explicit_return_type "int"
	nparams 2
	  param in name "c" explicit_type "int"
	  param in name "start" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the last index of the code point {@code c}, or -1.
The search for the character starts at offset {@code start} and moves towards
the beginning of this string."
      end

      operation 407963 "lastIndexOfSupplementary"
	private explicit_return_type "int"
	nparams 2
	  param in name "c" explicit_type "int"
	  param in name "start" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 408091 "lastIndexOf"
	public explicit_return_type "int"
	nparams 1
	  param inout name "string" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Searches in this string for the last index of the specified string. The
search for the string starts at the end and moves towards the beginning
of this string.

@param string
           the string to find.
@return the index of the first character of the specified string in this
        string, -1 if the specified string is not a substring.
@throws NullPointerException
            if {@code string} is {@code null}."
      end

      operation 408219 "lastIndexOf"
	public explicit_return_type "int"
	nparams 2
	  param inout name "subString" type class_ref 3399692 // String
	  param in name "start" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Searches in this string for the index of the specified string. The search
for the string starts at the specified offset and moves towards the
beginning of this string.

@param subString
           the string to find.
@param start
           the starting offset.
@return the index of the first character of the specified string in this
        string , -1 if the specified string is not a substring.
@throws NullPointerException
            if {@code subString} is {@code null}."
      end

      operation 408347 "length"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
	comment "Returns the size of this string.

@return the number of characters in this string."
      end

      operation 408475 "regionMatches"
	public explicit_return_type "boolean"
	nparams 4
	  param in name "thisStart" explicit_type "int"
	  param inout name "string" type class_ref 3399692 // String
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares the specified string to this string and compares the specified
range of characters to determine if they are the same.

@param thisStart
           the starting offset in this string.
@param string
           the string to compare.
@param start
           the starting offset in the specified string.
@param length
           the number of characters to compare.
@return {@code true} if the ranges of characters are equal, {@code false}
        otherwise
@throws NullPointerException
            if {@code string} is {@code null}."
      end

      operation 408603 "regionMatches"
	public explicit_return_type "boolean"
	nparams 5
	  param inout name "ignoreCase" explicit_type "boolean"
	  param in name "thisStart" explicit_type "int"
	  param inout name "string" type class_ref 3399692 // String
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares the specified string to this string and compares the specified
range of characters to determine if they are the same. When ignoreCase is
true, the case of the characters is ignored during the comparison.

@param ignoreCase
           specifies if case should be ignored.
@param thisStart
           the starting offset in this string.
@param string
           the string to compare.
@param start
           the starting offset in the specified string.
@param length
           the number of characters to compare.
@return {@code true} if the ranges of characters are equal, {@code false}
        otherwise.
@throws NullPointerException
            if {@code string} is {@code null}."
      end

      operation 408731 "replace"
	public return_type class_ref 3399692 // String
	nparams 2
	  param in name "oldChar" explicit_type "char"
	  param in name "newChar" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copies this string replacing occurrences of the specified character with
another character.

@param oldChar
           the character to replace.
@param newChar
           the replacement character.
@return a new string with occurrences of oldChar replaced by newChar."
      end

      operation 408859 "replace"
	public return_type class_ref 3399692 // String
	nparams 2
	  param inout name "target" type class_ref 133787 // CharSequence
	  param inout name "replacement" type class_ref 133787 // CharSequence
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copies this string replacing occurrences of the specified target sequence
with another sequence. The string is processed from the beginning to the
end.

@param target
           the sequence to replace.
@param replacement
           the replacement sequence.
@return the resulting string.
@throws NullPointerException
            if {@code target} or {@code replacement} is {@code null}."
      end

      operation 408987 "startsWith"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "prefix" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares the specified string to this string to determine if the
specified string is a prefix.

@param prefix
           the string to look for.
@return {@code true} if the specified string is a prefix of this string,
        {@code false} otherwise
@throws NullPointerException
            if {@code prefix} is {@code null}."
      end

      operation 409115 "startsWith"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "prefix" type class_ref 3399692 // String
	  param in name "start" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares the specified string to this string, starting at the specified
offset, to determine if the specified string is a prefix.

@param prefix
           the string to look for.
@param start
           the starting offset.
@return {@code true} if the specified string occurs in this string at the
        specified offset, {@code false} otherwise.
@throws NullPointerException
            if {@code prefix} is {@code null}."
      end

      operation 409243 "substring"
	public return_type class_ref 3399692 // String
	nparams 1
	  param in name "start" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string containing a suffix of this string. The returned string
shares this string's <a href=\"#backing_array\">backing array</a>.

@param start
           the offset of the first character.
@return a new string containing the characters from start to the end of
        the string.
@throws IndexOutOfBoundsException
            if {@code start < 0} or {@code start > length()}."
      end

      operation 409371 "substring"
	public return_type class_ref 3399692 // String
	nparams 2
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string containing a subsequence of characters from this string.
The returned string shares this string's <a href=\"#backing_array\">backing
array</a>.

@param start
           the offset of the first character.
@param end
           the offset one past the last character.
@return a new string containing the characters from start to end - 1
@throws IndexOutOfBoundsException
            if {@code start < 0}, {@code start > end} or {@code end >
            length()}."
      end

      operation 409499 "toCharArray"
	public explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copies the characters in this string to a character array.

@return a character array containing the characters of this string."
      end

      operation 409627 "toLowerCase"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts this string to lower case, using the rules of the user's default locale.
See \"<a href=\"../util/Locale.html#default_locale\">Be wary of the default locale</a>\".

@return a new lower case string, or {@code this} if it's already all lower case."
      end

      operation 409755 "toLowerCase"
	public return_type class_ref 3399692 // String
	nparams 1
	  param inout name "locale" type class_ref 135835 // Locale
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts this string to lower case, using the rules of {@code locale}.

<p>Most case mappings are unaffected by the language of a {@code Locale}. Exceptions include
dotted and dotless I in Azeri and Turkish locales, and dotted and dotless I and J in
Lithuanian locales. On the other hand, it isn't necessary to provide a Greek locale to get
correct case mapping of Greek characters: any locale will do.

<p>See <a href=\"http://www.unicode.org/Public/UNIDATA/SpecialCasing.txt\">http://www.unicode.org/Public/UNIDATA/SpecialCasing.txt</a>
for full details of context- and language-specific special cases.

@return a new lower case string, or {@code this} if it's already all lower case."
      end

      operation 409883 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns this string."
      end

      operation 410011 "toUpperCase"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts this this string to upper case, using the rules of the user's default locale.
See \"<a href=\"../util/Locale.html#default_locale\">Be wary of the default locale</a>\".

@return a new upper case string, or {@code this} if it's already all upper case."
      end

      operation 410139 "toUpperCase"
	public return_type class_ref 3399692 // String
	nparams 1
	  param inout name "locale" type class_ref 135835 // Locale
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts this this string to upper case, using the rules of {@code locale}.

<p>Most case mappings are unaffected by the language of a {@code Locale}. Exceptions include
dotted and dotless I in Azeri and Turkish locales, and dotted and dotless I and J in
Lithuanian locales. On the other hand, it isn't necessary to provide a Greek locale to get
correct case mapping of Greek characters: any locale will do.

<p>See <a href=\"http://www.unicode.org/Public/UNIDATA/SpecialCasing.txt\">http://www.unicode.org/Public/UNIDATA/SpecialCasing.txt</a>
for full details of context- and language-specific special cases.

@return a new upper case string, or {@code this} if it's already all upper case."
      end

      operation 410267 "trim"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copies this string removing white space characters from the beginning and
end of the string.

@return a new string with characters <code><= \\\\u0020</code> removed from
        the beginning and the end."
      end

      operation 410395 "valueOf"
	class_operation public return_type class_ref 3399692 // String
	nparams 1
	  param inout name "data" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new string containing the characters in the specified character
array. Modifying the character array after creating the string has no
effect on the string.

@param data
           the array of characters.
@return the new string.
@throws NullPointerException
            if {@code data} is {@code null}."
      end

      operation 410523 "valueOf"
	class_operation public return_type class_ref 3399692 // String
	nparams 3
	  param inout name "data" explicit_type "char"
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new string containing the specified characters in the character
array. Modifying the character array after creating the string has no
effect on the string.

@param data
           the array of characters.
@param start
           the starting offset in the character array.
@param length
           the number of characters to use.
@return the new string.
@throws IndexOutOfBoundsException
            if {@code length < 0}, {@code start < 0} or {@code start +
            length > data.length}
@throws NullPointerException
            if {@code data} is {@code null}."
      end

      operation 410651 "valueOf"
	class_operation public return_type class_ref 3399692 // String
	nparams 1
	  param in name "value" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts the specified character to its string representation.

@param value
           the character.
@return the character converted to a string."
      end

      operation 410779 "valueOf"
	class_operation public return_type class_ref 3399692 // String
	nparams 1
	  param in name "value" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts the specified double to its string representation.

@param value
           the double.
@return the double converted to a string."
      end

      operation 410907 "valueOf"
	class_operation public return_type class_ref 3399692 // String
	nparams 1
	  param in name "value" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts the specified float to its string representation.

@param value
           the float.
@return the float converted to a string."
      end

      operation 411035 "valueOf"
	class_operation public return_type class_ref 3399692 // String
	nparams 1
	  param in name "value" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts the specified integer to its string representation.

@param value
           the integer.
@return the integer converted to a string."
      end

      operation 411163 "valueOf"
	class_operation public return_type class_ref 3399692 // String
	nparams 1
	  param in name "value" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts the specified long to its string representation.

@param value
           the long.
@return the long converted to a string."
      end

      operation 411291 "valueOf"
	class_operation public return_type class_ref 3399692 // String
	nparams 1
	  param inout name "value" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts the specified object to its string representation. If the object
is null return the string {@code \"null\"}, otherwise use {@code
toString()} to get the string representation.

@param value
           the object.
@return the object converted to a string, or the string {@code \"null\"}."
      end

      operation 411419 "valueOf"
	class_operation public return_type class_ref 3399692 // String
	nparams 1
	  param inout name "value" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts the specified boolean to its string representation. When the
boolean is {@code true} return {@code \"true\"}, otherwise return {@code
\"false\"}.

@param value
           the boolean.
@return the boolean converted to a string."
      end

      operation 411547 "contentEquals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "strbuf" type class_ref 146715 // StringBuffer
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the characters in the StringBuffer {@code strbuf} are the
same as those in this string.

@param strbuf
           the StringBuffer to compare this string to.
@return {@code true} if the characters in {@code strbuf} are identical to
        those in this string. If they are not, {@code false} will be
        returned.
@throws NullPointerException
            if {@code strbuf} is {@code null}.
@since 1.4"
      end

      operation 411675 "contentEquals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "cs" type class_ref 133787 // CharSequence
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares a {@code CharSequence} to this {@code String} to determine if
their contents are equal.

@param cs
           the character sequence to compare to.
@return {@code true} if equal, otherwise {@code false}
@since 1.5"
      end

      operation 411803 "matches"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "regularExpression" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests whether this string matches the given {@code regularExpression}. This method returns
true only if the regular expression matches the <i>entire</i> input string. A common mistake is
to assume that this method behaves like {@link #contains}; if you want to match anywhere
within the input string, you need to add {@code .*} to the beginning and end of your
regular expression. See {@link Pattern#matches}.

<p>If the same regular expression is to be used for multiple operations, it may be more
efficient to reuse a compiled {@code Pattern}.

@throws PatternSyntaxException
            if the syntax of the supplied regular expression is not
            valid.
@throws NullPointerException if {@code regularExpression == null}
@since 1.4"
      end

      operation 411931 "replaceAll"
	public return_type class_ref 3399692 // String
	nparams 2
	  param inout name "regularExpression" type class_ref 3399692 // String
	  param inout name "replacement" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Replaces all matches for {@code regularExpression} within this string with the given
{@code replacement}.
See {@link Pattern} for regular expression syntax.

<p>If the same regular expression is to be used for multiple operations, it may be more
efficient to reuse a compiled {@code Pattern}.

@throws PatternSyntaxException
            if the syntax of the supplied regular expression is not
            valid.
@throws NullPointerException if {@code regularExpression == null}
@see Pattern
@since 1.4"
      end

      operation 412059 "replaceFirst"
	public return_type class_ref 3399692 // String
	nparams 2
	  param inout name "regularExpression" type class_ref 3399692 // String
	  param inout name "replacement" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Replaces the first match for {@code regularExpression} within this string with the given
{@code replacement}.
See {@link Pattern} for regular expression syntax.

<p>If the same regular expression is to be used for multiple operations, it may be more
efficient to reuse a compiled {@code Pattern}.

@throws PatternSyntaxException
            if the syntax of the supplied regular expression is not
            valid.
@throws NullPointerException if {@code regularExpression == null}
@see Pattern
@since 1.4"
      end

      operation 412187 "split"
	public return_type class_ref 3399692 // String
	nparams 1
	  param inout name "regularExpression" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Splits this string using the supplied {@code regularExpression}.
Equivalent to {@code split(regularExpression, 0)}.
See {@link Pattern#split(CharSequence, int)} for an explanation of {@code limit}.
See {@link Pattern} for regular expression syntax.

<p>If the same regular expression is to be used for multiple operations, it may be more
efficient to reuse a compiled {@code Pattern}.

@throws NullPointerException if {@code regularExpression ==  null}
@throws PatternSyntaxException
            if the syntax of the supplied regular expression is not
            valid.
@see Pattern
@since 1.4"
      end

      operation 412315 "split"
	public return_type class_ref 3399692 // String
	nparams 2
	  param inout name "regularExpression" type class_ref 3399692 // String
	  param in name "limit" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Splits this string using the supplied {@code regularExpression}.
See {@link Pattern#split(CharSequence, int)} for an explanation of {@code limit}.
See {@link Pattern} for regular expression syntax.

<p>If the same regular expression is to be used for multiple operations, it may be more
efficient to reuse a compiled {@code Pattern}.

@throws NullPointerException if {@code regularExpression ==  null}
@throws PatternSyntaxException
            if the syntax of the supplied regular expression is not
            valid.
@since 1.4"
      end

      operation 412443 "subSequence"
	public return_type class_ref 133787 // CharSequence
	nparams 2
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Has the same result as the substring function, but is present so that
string may implement the CharSequence interface.

@param start
           the offset the first character.
@param end
           the offset of one past the last character to include.
@return the subsequence requested.
@throws IndexOutOfBoundsException
            if {@code start < 0}, {@code end < 0}, {@code start > end} or
            {@code end > length()}.
@see java.lang.CharSequence#subSequence(int, int)
@since 1.4"
      end

      operation 412571 "codePointAt"
	public explicit_return_type "int"
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the Unicode code point at the given {@code index}.

@throws IndexOutOfBoundsException if {@code index < 0 || index >= length()}
@see Character#codePointAt(char[], int, int)
@since 1.5"
      end

      operation 412699 "codePointBefore"
	public explicit_return_type "int"
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the Unicode code point that precedes the given {@code index}.

@throws IndexOutOfBoundsException if {@code index < 1 || index > length()}
@see Character#codePointBefore(char[], int, int)
@since 1.5"
      end

      operation 412827 "codePointCount"
	public explicit_return_type "int"
	nparams 2
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Calculates the number of Unicode code points between {@code start}
and {@code end}.

@param start
           the inclusive beginning index of the subsequence.
@param end
           the exclusive end index of the subsequence.
@return the number of Unicode code points in the subsequence.
@throws IndexOutOfBoundsException
        if {@code start < 0 || end > length() || start > end}
@see Character#codePointCount(CharSequence, int, int)
@since 1.5"
      end

      operation 412955 "contains"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "cs" type class_ref 133787 // CharSequence
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines if this {@code String} contains the sequence of characters in
the {@code CharSequence} passed.

@param cs
           the character sequence to search for.
@return {@code true} if the sequence of characters are contained in this
        string, otherwise {@code false}.
@since 1.5"
      end

      operation 413083 "offsetByCodePoints"
	public explicit_return_type "int"
	nparams 2
	  param in name "index" explicit_type "int"
	  param in name "codePointOffset" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index within this object that is offset from {@code index} by
{@code codePointOffset} code points.

@param index
           the index within this object to calculate the offset from.
@param codePointOffset
           the number of code points to count.
@return the index within this object that is the offset.
@throws IndexOutOfBoundsException
            if {@code index} is negative or greater than {@code length()}
            or if there aren't enough code points before or after {@code
            index} to match {@code codePointOffset}.
@since 1.5"
      end

      operation 413211 "format"
	class_operation public return_type class_ref 3399692 // String
	nparams 2
	  param inout name "format" type class_ref 3399692 // String
	  param inout name "" explicit_type "Object...args"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a localized formatted string, using the supplied format and arguments,
using the user's default locale.

<p>If you're formatting a string other than for human
consumption, you should use the {@code format(Locale, String, Object...)}
overload and supply {@code Locale.US}. See
\"<a href=\"../util/Locale.html#default_locale\">Be wary of the default locale</a>\".

@param format the format string (see {@link java.util.Formatter#format})
@param args
           the list of arguments passed to the formatter. If there are
           more arguments than required by {@code format},
           additional arguments are ignored.
@return the formatted string.
@throws NullPointerException if {@code format == null}
@throws java.util.IllegalFormatException
            if the format is invalid.
@since 1.5"
      end

      operation 413339 "format"
	class_operation public return_type class_ref 3399692 // String
	nparams 3
	  param inout name "locale" type class_ref 135835 // Locale
	  param inout name "format" type class_ref 3399692 // String
	  param inout name "" explicit_type "Object...args"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a formatted string, using the supplied format and arguments,
localized to the given locale.

@param locale
           the locale to apply; {@code null} value means no localization.
@param format the format string (see {@link java.util.Formatter#format})
@param args
           the list of arguments passed to the formatter. If there are
           more arguments than required by {@code format},
           additional arguments are ignored.
@return the formatted string.
@throws NullPointerException if {@code format == null}
@throws java.util.IllegalFormatException
            if the format is invalid.
@since 1.5"
      end

      operation 413467 "indexOf"
	class_operation private explicit_return_type "int"
	nparams 5
	  param inout name "haystackString" type class_ref 3399692 // String
	  param inout name "needleString" type class_ref 3399692 // String
	  param in name "cache" explicit_type "int"
	  param in name "md2" explicit_type "int"
	  param in name "lastChar" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@FindBugsSuppressWarnings(\"UPM_UNCALLED_PRIVATE_METHOD\")
    @SuppressWarnings(\"unused\")
"
	
	
	
	comment "An implementation of a String.indexOf that is supposed to perform
substantially better than the default algorithm if the \"needle\" (the
subString being searched for) is a constant string.

For example, a JIT, upon encountering a call to String.indexOf(String),
where the needle is a constant string, may compute the values cache, md2
and lastChar, and change the call to the following method."
      end
    end

    class 3401484 "Object"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      operation 15275660 "Object"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15275788 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15275916 "finalize"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15276044 "getClass"
	public return_type class_ref 3421708 // Class
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type}<? extends Object> ${name}${(}${)}${throws};
"
	
	
	
      end

      operation 15276172 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
      end

      operation 15276300 "notify"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
      end

      operation 15276428 "notifyAll"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
      end

      operation 15276556 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15276684 "wait"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15276812 "wait"
	public explicit_return_type "void"
	nparams 1
	  param in name "time" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15276940 "wait"
	public explicit_return_type "void"
	nparams 2
	  param in name "time" explicit_type "long"
	  param in name "frac" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
      end
    end

    class 3421708 "Class"
      visibility public 
      nformals 2
      formal name "T" type "" explicit_default_value ""
        explicit_extends ""
      formal name "T" type "" explicit_default_value ""
        explicit_extends ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The in-memory representation of a Java class. This representation serves as
the starting point for querying class-related information, a process usually
called \"reflection\". There are basically three types of {@code Class}
instances: those representing real classes and interfaces, those representing
primitive types, and those representing array classes.

<h4>Class instances representing object types (classes or interfaces)</h4>
<p>
These represent an ordinary class or interface as found in the class
hierarchy. The name associated with these {@code Class} instances is simply
the fully qualified class name of the class or interface that it represents.
In addition to this human-readable name, each class is also associated by a
so-called <em>signature</em>, which is the letter \"L\", followed by the
class name and a semicolon (\";\"). The signature is what the runtime system
uses internally for identifying the class (for example in a DEX file).
</p>
<h4>Classes representing primitive types</h4>
<p>
These represent the standard Java primitive types and hence share their
names (for example \"int\" for the {@code int} primitive type). Although it is
not possible to create new instances based on these {@code Class} instances,
they are still useful for providing reflection information, and as the
component type of array classes. There is one {@code Class} instance for each
primitive type, and their signatures are:
</p>
<ul>
<li>{@code B} representing the {@code byte} primitive type</li>
<li>{@code S} representing the {@code short} primitive type</li>
<li>{@code I} representing the {@code int} primitive type</li>
<li>{@code J} representing the {@code long} primitive type</li>
<li>{@code F} representing the {@code float} primitive type</li>
<li>{@code D} representing the {@code double} primitive type</li>
<li>{@code C} representing the {@code char} primitive type</li>
<li>{@code Z} representing the {@code boolean} primitive type</li>
<li>{@code V} representing void function return values</li>
</ul>
<p>
<h4>Classes representing array classes</h4>
<p>
These represent the classes of Java arrays. There is one such {@code Class}
instance per combination of array leaf component type and arity (number of
dimensions). In this case, the name associated with the {@code Class}
consists of one or more left square brackets (one per dimension in the array)
followed by the signature of the class representing the leaf component type,
which can be either an object type or a primitive type. The signature of a
{@code Class} representing an array type is the same as its name. Examples
of array class signatures are:
</p>
<ul>
<li>{@code [I} representing the {@code int[]} type</li>
<li>{@code [Ljava/lang/String;} representing the {@code String[]} type</li>
<li>{@code [[[C} representing the {@code char[][][]} type (three dimensions!)</li>
</ul>"
      classrelation 187419 // <realization>
	relation 187419 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 187419 // <realization>
	  b parent class_ref 128155 // Serializable
      end

      classrelation 187547 // <realization>
	relation 187547 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 187547 // <realization>
	  b parent class_ref 149147 // AnnotatedElement
      end

      classrelation 187675 // <realization>
	relation 187675 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 187675 // <realization>
	  b parent class_ref 149403 // GenericDeclaration
      end

      classrelation 187803 // <realization>
	relation 187803 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 187803 // <realization>
	  b parent class_ref 149659 // Type
      end

      attribute 170779 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 3206093459760846163L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 187931 // name (<unidirectional association>)
	relation 187931 --->
	  a role_name "name" private
	    comment "
Lazily computed name of this class; always prefer calling getName().

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 187931 // name (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      operation 306715 "Class"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 306843 "getSignatureAttribute"
	private return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the Signature attribute for this class.  Returns null if not found."
      end

      operation 306971 "getSignatureAnnotation"
	private return_type class_ref 3401484 // Object
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type}[] ${name}${(}${)}${throws};
"
	
	
	
	comment "Get the Signature annotation for this class.  Returns null if not found."
      end

      operation 307099 "forName"
	class_operation public return_type class_ref 3421708 // Class
	nparams 1
	  param inout name "className" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 128795 // ClassNotFoundException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@code Class} object which represents the class with the
given name. The name should be the name of a non-primitive class, as described in
the {@link Class class definition}.
Primitive types can not be found using this method; use {@code int.class} or {@code Integer.TYPE} instead.

<p>If the class has not yet been loaded, it is loaded and initialized
first. This is done through either the class loader of the calling class
or one of its parent class loaders. It is possible that a static initializer is run as
a result of this call.

@throws ClassNotFoundException
            if the requested class can not be found.
@throws LinkageError
            if an error occurs during linkage
@throws ExceptionInInitializerError
            if an exception occurs during static initialization of a
            class."
      end

      operation 307227 "forName"
	class_operation public return_type class_ref 3421708 // Class
	nparams 3
	  param inout name "className" type class_ref 3399692 // String
	  param inout name "shouldInitialize" explicit_type "boolean"
	  param inout name "classLoader" type class_ref 138523 // ClassLoader
	nexceptions 1
	  exception class_ref 128795 // ClassNotFoundException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@code Class} object which represents the class with the
given name. The name should be the name of a non-primitive class, as described in
the {@link Class class definition}.
Primitive types can not be found using this method; use {@code int.class} or {@code Integer.TYPE} instead.

<p>If the class has not yet been loaded, it is loaded first, using the given class loader.
If the class has not yet been initialized and {@code shouldInitialize} is true,
the class will be initialized.

@throws ClassNotFoundException
            if the requested class can not be found.
@throws LinkageError
            if an error occurs during linkage
@throws ExceptionInInitializerError
            if an exception occurs during static initialization of a
            class."
      end

      operation 307355 "classForName"
	class_operation private return_type class_ref 3421708 // Class
	nparams 3
	  param inout name "className" type class_ref 3399692 // String
	  param inout name "shouldInitialize" explicit_type "boolean"
	  param inout name "classLoader" type class_ref 138523 // ClassLoader
	nexceptions 1
	  exception class_ref 128795 // ClassNotFoundException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type}<?> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws};
"
	
	
	
      end

      operation 307483 "getClasses"
	public return_type class_ref 3421708 // Class
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?>[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array containing {@code Class} objects for all public classes
and interfaces that are members of this class. This includes public
members inherited from super classes and interfaces. If there are no such
class members or if this object represents a primitive type then an array
of length 0 is returned."
      end

      operation 307611 "getAnnotation"
	public explicit_return_type "A"
	nparams 1
	  param inout name "annotationType" type class_ref 3421708 // Class
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<A extends Annotation> ${type} ${name}${(}${t0}<A> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 307739 "getAnnotations"
	public return_type class_ref 149275 // Annotation
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array containing all the annotations of this class. If there are no annotations
then an empty array is returned.

@see #getDeclaredAnnotations()"
      end

      operation 307867 "getCanonicalName"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the canonical name of this class. If this class does not have a
canonical name as defined in the Java Language Specification, then the
method returns {@code null}."
      end

      operation 307995 "getClassLoader"
	public return_type class_ref 138523 // ClassLoader
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the class loader which was used to load the class represented by
this {@code Class}. Implementations are free to return {@code null} for
classes that were loaded by the bootstrap class loader. The Android
reference implementation, though, always returns a reference to an actual
class loader."
      end

      operation 308123 "getClassLoaderImpl"
	package return_type class_ref 138523 // ClassLoader
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This must be provided by the VM vendor, as it is used by other provided
class implementations in this package. Outside of this class, it is used
by SecurityManager.classLoaderDepth(),
currentClassLoader() and currentLoadedClass(). Return the ClassLoader for
this Class without doing any security checks. The bootstrap ClassLoader
is returned, unlike getClassLoader() which returns null in place of the
bootstrap ClassLoader."
      end

      operation 308251 "getClassLoader"
	class_operation private return_type class_ref 138523 // ClassLoader
	nparams 1
	  param inout name "c" type class_ref 3421708 // Class
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0}<?> ${p0}${)}${throws};
"
	
	
	
	comment "Returns the defining class loader for the given class."
      end

      operation 308379 "getComponentType"
	public return_type class_ref 3421708 // Class
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type}<?> ${name}${(}${)}${throws};
"
	
	
	
	comment "Returns a {@code Class} object which represents the component type if
this class represents an array type. Returns {@code null} if this class
does not represent an array type. The component type of an array type is
the type of the elements of the array."
      end

      operation 308507 "getConstructor"
	public return_type class_ref 144411 // Constructor
	nparams 1
	  param inout name "parameterTypes" explicit_type "Class<?>..."
	nexceptions 1
	  exception class_ref 149787 // NoSuchMethodException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<T> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Returns a {@code Constructor} object which represents the public
constructor matching the given parameter types.
{@code (Class[]) null} is equivalent to the empty array.

@throws NoSuchMethodException
            if the constructor can not be found.
@see #getDeclaredConstructor(Class[])"
      end

      operation 308635 "getConstructorOrMethod"
	private return_type class_ref 149915 // Member
	nparams 4
	  param inout name "name" type class_ref 3399692 // String
	  param inout name "searchSuperTypes" explicit_type "boolean"
	  param inout name "publicOnly" explicit_type "boolean"
	  param inout name "parameterTypes" type class_ref 3421708 // Class
	nexceptions 1
	  exception class_ref 149787 // NoSuchMethodException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}<?>[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a constructor or method with the given name. Use \"<init>\" to return a constructor."
      end

      operation 308763 "getPublicConstructorOrMethodRecursive"
	private return_type class_ref 149915 // Member
	nparams 2
	  param inout name "name" type class_ref 3399692 // String
	  param inout name "parameterTypes" type class_ref 3421708 // Class
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<?>[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 308891 "getConstructors"
	public return_type class_ref 144411 // Constructor
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?>[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array containing {@code Constructor} objects for all public
constructors for this {@code Class}. If there
are no public constructors or if this {@code Class} represents an array
class, a primitive type or void then an empty array is returned.

@see #getDeclaredConstructors()"
      end

      operation 309019 "getDeclaredAnnotations"
	public return_type class_ref 149275 // Annotation
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type}[] ${name}${(}${)}${throws};
"
	
	
	
	comment "Returns the annotations that are directly defined on the class
represented by this {@code Class}. Annotations that are inherited are not
included in the result. If there are no annotations at all, an empty
array is returned.

@see #getAnnotations()"
      end

      operation 309147 "getDeclaredAnnotation"
	private explicit_return_type "A"
	nparams 1
	  param inout name "annotationClass" type class_ref 3421708 // Class
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native <A extends Annotation> ${type} ${name}${(}${t0}<A> ${p0}${)}${throws};
"
	
	
	
	comment "Returns the annotation if it exists."
      end

      operation 309275 "isDeclaredAnnotationPresent"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "annotationClass" type class_ref 3421708 // Class
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0}<? extends Annotation> ${p0}${)}${throws};
"
	
	
	
	comment "Returns true if the annotation exists."
      end

      operation 309403 "getDeclaredClasses"
	public return_type class_ref 3421708 // Class
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?>[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array containing {@code Class} objects for all classes and
interfaces that are declared as members of the class which this {@code
Class} represents. If there are no classes or interfaces declared or if
this class represents an array class, a primitive type or void, then an
empty array is returned."
      end

      operation 309531 "getDeclaredClasses"
	class_operation private return_type class_ref 3421708 // Class
	nparams 2
	  param inout name "c" type class_ref 3421708 // Class
	  param inout name "publicOnly" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type}<?>[] ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
	comment "Returns the list of member classes of the given class.
If no members exist, an empty array is returned."
      end

      operation 309659 "getDeclaredConstructor"
	public return_type class_ref 144411 // Constructor
	nparams 1
	  param inout name "parameterTypes" explicit_type "Class<?>..."
	nexceptions 1
	  exception class_ref 149787 // NoSuchMethodException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<T> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Returns a {@code Constructor} object which represents the constructor
matching the given parameter types that is declared by the class
represented by this {@code Class}.
{@code (Class[]) null} is equivalent to the empty array.

@throws NoSuchMethodException
            if the requested constructor can not be found.
@see #getConstructor(Class[])"
      end

      operation 309787 "getDeclaredConstructors"
	public return_type class_ref 144411 // Constructor
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?>[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array containing {@code Constructor} objects for all
constructors declared in the class represented by this {@code Class}. If
there are no constructors or if this {@code Class} represents an array
class, a primitive type, or void then an empty array is returned.

@see #getConstructors()"
      end

      operation 309915 "getDeclaredConstructors"
	class_operation private return_type class_ref 144411 // Constructor
	nparams 2
	  param inout name "c" type class_ref 3421708 // Class
	  param inout name "publicOnly" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native <T> ${type}<T>[] ${name}${(}${t0}<T> ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
	comment "Returns the list of constructors. If no constructors exist, an empty array is returned."
      end

      operation 310043 "getDeclaredField"
	public return_type class_ref 144283 // Field
	nparams 1
	  param inout name "name" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 150043 // NoSuchFieldException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@code Field} object for the field with the given name
which is declared in the class represented by this {@code Class}.

@throws NoSuchFieldException if the requested field can not be found.
@see #getField(String)"
      end

      operation 310171 "getDeclaredFields"
	public return_type class_ref 144283 // Field
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array containing {@code Field} objects for all fields declared
in the class represented by this {@code Class}. If there are no fields or
if this {@code Class} represents an array class, a primitive type or void
then an empty array is returned.

@see #getFields()"
      end

      operation 310299 "getDeclaredFields"
	class_operation package return_type class_ref 144283 // Field
	nparams 2
	  param inout name "c" type class_ref 3421708 // Class
	  param inout name "publicOnly" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type}[] ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
	comment "Returns the list of fields without performing any security checks
first. If no fields exist at all, an empty array is returned."
      end

      operation 310427 "getDeclaredField"
	class_operation package return_type class_ref 144283 // Field
	nparams 2
	  param inout name "c" type class_ref 3421708 // Class
	  param inout name "name" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
	comment "Returns the field if it is defined by {@code c}; null otherwise. This
may return a non-public member."
      end

      operation 310555 "getDeclaredMethod"
	public return_type class_ref 144155 // Method
	nparams 2
	  param inout name "name" type class_ref 3399692 // String
	  param inout name "parameterTypes" explicit_type "Class<?>..."
	nexceptions 1
	  exception class_ref 149787 // NoSuchMethodException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@code Method} object which represents the method matching the
given name and parameter types that is declared by the class
represented by this {@code Class}.
{@code (Class[]) null} is equivalent to the empty array.

@throws NoSuchMethodException
            if the requested method can not be found.
@throws NullPointerException
            if {@code name} is {@code null}.
@see #getMethod(String, Class[])"
      end

      operation 310683 "getDeclaredMethods"
	public return_type class_ref 144155 // Method
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array containing {@code Method} objects for all methods
declared in the class represented by this {@code Class}. If there are no
methods or if this {@code Class} represents an array class, a primitive
type or void then an empty array is returned.

@see #getMethods()"
      end

      operation 310811 "getDeclaredMethods"
	class_operation package return_type class_ref 144155 // Method
	nparams 2
	  param inout name "c" type class_ref 3421708 // Class
	  param inout name "publicOnly" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type}[] ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
	comment "Returns the list of methods. If no methods exist, an empty array is returned."
      end

      operation 310939 "getDeclaredConstructorOrMethod"
	class_operation package return_type class_ref 149915 // Member
	nparams 3
	  param inout name "c" type class_ref 3421708 // Class
	  param inout name "name" type class_ref 3399692 // String
	  param inout name "args" type class_ref 3421708 // Class
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws};
"
	
	
	
	comment "Returns the constructor or method if it is defined by {@code c}; null
otherwise. This may return a non-public member. Use \"<init>\" to get a constructor."
      end

      operation 311067 "getDeclaringClass"
	public return_type class_ref 3421708 // Class
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type}<?> ${name}${(}${)}${throws};
"
	
	
	
	comment "Returns the declaring {@code Class} of this {@code Class}. Returns
{@code null} if the class is not a member of another class or if this
{@code Class} represents an array class, a primitive type, or void."
      end

      operation 311195 "getEnclosingClass"
	public return_type class_ref 3421708 // Class
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type}<?> ${name}${(}${)}${throws};
"
	
	
	
	comment "Returns the enclosing {@code Class} of this {@code Class}. If there is no
enclosing class the method returns {@code null}."
      end

      operation 311323 "getEnclosingConstructor"
	public return_type class_ref 144411 // Constructor
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type}<?> ${name}${(}${)}${throws};
"
	
	
	
	comment "Returns the enclosing {@code Constructor} of this {@code Class}, if it is an
anonymous or local/automatic class; otherwise {@code null}."
      end

      operation 311451 "getEnclosingMethod"
	public return_type class_ref 144155 // Method
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
	comment "Returns the enclosing {@code Method} of this {@code Class}, if it is an
anonymous or local/automatic class; otherwise {@code null}."
      end

      operation 311579 "getEnumConstants"
	public explicit_return_type "T"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Returns the {@code enum} constants associated with this {@code Class}.
Returns {@code null} if this {@code Class} does not represent an {@code
enum} type.

 we only cast after confirming that this class is an enum"
      end

      operation 311707 "getField"
	public return_type class_ref 144283 // Field
	nparams 1
	  param inout name "name" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 150043 // NoSuchFieldException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@code Field} object which represents the public field with the
given name. This method first searches the class C represented by
this {@code Class}, then the interfaces implemented by C and finally the
superclasses of C.

@throws NoSuchFieldException
            if the field can not be found.
@see #getDeclaredField(String)"
      end

      operation 311835 "getPublicFieldRecursive"
	private return_type class_ref 144283 // Field
	nparams 1
	  param inout name "name" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 311963 "getFields"
	public return_type class_ref 144283 // Field
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array containing {@code Field} objects for all public fields
for the class C represented by this {@code Class}. Fields may be declared
in C, the interfaces it implements or in the superclasses of C. The
elements in the returned array are in no particular order.

<p>If there are no public fields or if this class represents an array class,
a primitive type or {@code void} then an empty array is returned.

@see #getDeclaredFields()"
      end

      operation 312091 "getPublicFieldsRecursive"
	private explicit_return_type "void"
	nparams 1
	  param inout name "result" type class_ref 131483 // List
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<Field> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Populates {@code result} with public fields defined by this class, its
superclasses, and all implemented interfaces."
      end

      operation 312219 "getGenericInterfaces"
	public return_type class_ref 149659 // Type
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@link Type}s of the interfaces that this {@code Class} directly
implements. If the {@code Class} represents a primitive type or {@code
void} then an empty array is returned."
      end

      operation 312347 "getGenericSuperclass"
	public return_type class_ref 149659 // Type
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code Type} that represents the superclass of this {@code
class}."
      end

      operation 312475 "getInterfaces"
	public return_type class_ref 3421708 // Class
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type}<?>[] ${name}${(}${)}${throws};
"
	
	
	
	comment "Returns an array of {@code Class} objects that match the interfaces
in the {@code implements} declaration of the class represented
by this {@code Class}. The order of the elements in the array is
identical to the order in the original class declaration. If the class
does not implement any interfaces, an empty array is returned."
      end

      operation 312603 "getMethod"
	public return_type class_ref 144155 // Method
	nparams 2
	  param inout name "name" type class_ref 3399692 // String
	  param inout name "parameterTypes" explicit_type "Class<?>..."
	nexceptions 1
	  exception class_ref 149787 // NoSuchMethodException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@code Method} object which represents the public method with
the given name and parameter types.
{@code (Class[]) null} is equivalent to the empty array.
This method first searches the
class C represented by this {@code Class}, then the superclasses of C and
finally the interfaces implemented by C and finally the superclasses of C
for a method with matching name.

@throws NoSuchMethodException
            if the method can not be found.
@see #getDeclaredMethod(String, Class[])"
      end

      operation 312731 "getMethods"
	public return_type class_ref 144155 // Method
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array containing {@code Method} objects for all public methods
for the class C represented by this {@code Class}. Methods may be
declared in C, the interfaces it implements or in the superclasses of C.
The elements in the returned array are in no particular order.

<p>If there are no public methods or if this {@code Class} represents a
primitive type or {@code void} then an empty array is returned.

@see #getDeclaredMethods()"
      end

      operation 312859 "getPublicMethodsRecursive"
	private explicit_return_type "void"
	nparams 1
	  param inout name "result" type class_ref 131483 // List
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<Method> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Populates {@code result} with public methods defined by this class, its
superclasses, and all implemented interfaces, including overridden methods."
      end

      operation 312987 "getModifiers"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an integer that represents the modifiers of the class represented
by this {@code Class}. The returned value is a combination of bits
defined by constants in the {@link Modifier} class."
      end

      operation 313115 "getModifiers"
	class_operation private explicit_return_type "int"
	nparams 2
	  param inout name "clazz" type class_ref 3421708 // Class
	  param inout name "ignoreInnerClassesAttrib" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
	comment "Returns the modifiers for the given class.

{@code ignoreInnerClassesAttrib} determines whether we look for and use the
    flags from an \"inner class\" attribute"
      end

      operation 313243 "getName"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the class represented by this {@code Class}. For a
description of the format which is used, see the class definition of
{@link Class}."
      end

      operation 313371 "getNameNative"
	private return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
      end

      operation 313499 "getSimpleName"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the simple name of the class represented by this {@code Class} as
defined in the source code. If there is no name (that is, the class is
anonymous) then an empty string is returned. If the receiver is an array
then the name of the underlying type with square braces appended (for
example {@code \"Integer[]\"}) is returned.

@return the simple name of the class represented by this {@code Class}."
      end

      operation 313627 "getInnerClassName"
	private return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
	comment "Returns the simple name of a member or local class, or null otherwise."
      end

      operation 313755 "getProtectionDomain"
	public return_type class_ref 150171 // ProtectionDomain
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns null."
      end

      operation 313883 "getResource"
	public return_type class_ref 140443 // URL
	nparams 1
	  param inout name "resourceName" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the URL of the given resource, or null if the resource is not found.
The mapping between the resource name and the URL is managed by the class' class loader.

@see ClassLoader"
      end

      operation 314011 "getResourceAsStream"
	public return_type class_ref 131867 // InputStream
	nparams 1
	  param inout name "resourceName" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a read-only stream for the contents of the given resource, or null if the resource
is not found.
The mapping between the resource name and the stream is managed by the class' class loader.

@see ClassLoader"
      end

      operation 314139 "getSigners"
	public return_type class_ref 3401484 // Object
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns null. (On Android, a {@code ClassLoader} can load classes from multiple dex files.
All classes from any given dex file will have the same signers, but different dex
files may have different signers. This does not fit well with the original
{@code ClassLoader}-based model of {@code getSigners}.)"
      end

      operation 314267 "getSuperclass"
	public return_type class_ref 3421708 // Class
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type}<? super T> ${name}${(}${)}${throws};
"
	
	
	
	comment "Returns the {@code Class} object which represents the superclass of the
class represented by this {@code Class}. If this {@code Class} represents
the {@code Object} class, a primitive type, an interface or void then the
method returns {@code null}. If this {@code Class} represents an array
class then the {@code Object} class is returned."
      end

      operation 314395 "getTypeParameters"
	public return_type class_ref 149531 // TypeVariable
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Class<T>>[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Returns an array containing {@code TypeVariable} objects for type
variables declared by the generic class represented by this {@code
Class}. Returns an empty array if the class is not generic."
      end

      operation 314523 "isAnnotation"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests whether this {@code Class} represents an annotation class."
      end

      operation 314651 "isAnnotationPresent"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "annotationType" type class_ref 3421708 // Class
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends Annotation> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 314779 "isAnonymousClass"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
	comment "Tests whether the class represented by this {@code Class} is
anonymous."
      end

      operation 314907 "isArray"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests whether the class represented by this {@code Class} is an array class."
      end

      operation 315035 "isAssignableFrom"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "c" type class_ref 3421708 // Class
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0}<?> ${p0}${)}${throws};
"
	
	
	
	comment "Tests whether the given class type can be converted to the class
represented by this {@code Class}. Conversion may be done via an identity
conversion or a widening reference conversion (if either the receiver or
the argument represent primitive types, only the identity conversion
applies).

@throws NullPointerException
            if {@code c} is {@code null}."
      end

      operation 315163 "isEnum"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests whether the class represented by this {@code Class} is an
{@code enum}."
      end

      operation 315291 "isInstance"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "object" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
	comment "Tests whether the given object can be cast to the class
represented by this {@code Class}. This is the runtime version of the
{@code instanceof} operator.

@return {@code true} if {@code object} can be cast to the type
        represented by this {@code Class}; {@code false} if {@code
        object} is {@code null} or cannot be cast."
      end

      operation 315419 "isInterface"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
	comment "Tests whether this {@code Class} represents an interface."
      end

      operation 315547 "isLocalClass"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests whether the class represented by this {@code Class} is defined
locally."
      end

      operation 315675 "isMemberClass"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests whether the class represented by this {@code Class} is a member
class."
      end

      operation 315803 "isPrimitive"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
	comment "Tests whether this {@code Class} represents a primitive type."
      end

      operation 315931 "isSynthetic"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests whether this {@code Class} represents a synthetic type."
      end

      operation 316059 "newInstance"
	public explicit_return_type "T"
	nparams 0
	nexceptions 2
	  exception class_ref 150299 // InstantiationException
	  exception class_ref 150427 // IllegalAccessException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new instance of the class represented by this {@code Class},
created by invoking the default (that is, zero-argument) constructor. If
there is no such constructor, or if the creation fails (either because of
a lack of available memory or because an exception is thrown by the
constructor), an {@code InstantiationException} is thrown. If the default
constructor exists but is not accessible from the context where this
method is invoked, an {@code IllegalAccessException} is thrown.

@throws IllegalAccessException
            if the default constructor is not visible.
@throws InstantiationException
            if the instance can not be created."
      end

      operation 316187 "newInstanceImpl"
	private explicit_return_type "T"
	nparams 0
	nexceptions 2
	  exception class_ref 150427 // IllegalAccessException
	  exception class_ref 150299 // InstantiationException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
      end

      operation 316315 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 316443 "getPackage"
	public return_type class_ref 150555 // Package
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code Package} of which the class represented by this
{@code Class} is a member. Returns {@code null} if no {@code Package}
object was created by the class loader of the class."
      end

      operation 316571 "desiredAssertionStatus"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
	comment "Returns the assertion status for the class represented by this {@code
Class}. Assertion is enabled / disabled based on the class loader,
package or class default at runtime."
      end

      operation 316699 "asSubclass"
	public return_type class_ref 3421708 // Class
	nparams 1
	  param inout name "c" type class_ref 3421708 // Class
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<U> ${type}<? extends U> ${name}${(}${t0}<U> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Casts this {@code Class} to represent a subclass of the given class.
If successful, this {@code Class} is returned; otherwise a {@code
ClassCastException} is thrown.

@throws ClassCastException
            if this {@code Class} cannot be cast to the given type."
      end

      operation 316827 "cast"
	public explicit_return_type "T"
	nparams 1
	  param inout name "obj" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Casts the given object to the type represented by this {@code Class}.
If the object is {@code null} then the result is also {@code null}.

@throws ClassCastException
            if the object cannot be cast to the given type."
      end

      operation 316955 "arraycopy"
	class_operation private explicit_return_type "T"
	nparams 3
	  param inout name "result" explicit_type "T"
	  param inout name "head" explicit_type "T"
	  param inout name "tail" explicit_type "T"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends Object> ${type}[] ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copies two arrays into one. Assumes that the destination array is large
enough.

@param result the destination array
@param head the first source array
@param tail the second source array
@return the destination array, that is, result"
      end
    end

    class 128283 "IllegalArgumentException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Thrown when a method is invoked with an argument which it can not reasonably
deal with."
      classrelation 194075 // <generalisation>
	relation 194075 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 194075 // <generalisation>
	  b parent class_ref 806284 // RuntimeException
      end

      attribute 179355 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -5365630128856068164L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 339867 "IllegalArgumentException"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code IllegalArgumentException} that includes the
current stack trace."
      end

      operation 339995 "IllegalArgumentException"
	public explicit_return_type ""
	nparams 1
	  param inout name "detailMessage" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code IllegalArgumentException} with the current stack
trace and the specified detail message.

@param detailMessage
           the detail message for this exception."
      end

      operation 340123 "IllegalArgumentException"
	public explicit_return_type ""
	nparams 2
	  param inout name "message" type class_ref 3399692 // String
	  param inout name "cause" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code IllegalArgumentException} with the current stack
trace, the specified detail message and the specified cause.

@param message
           the detail message for this exception.
@param cause
           the cause of this exception, may be {@code null}.
@since 1.5"
      end

      operation 340251 "IllegalArgumentException"
	public explicit_return_type ""
	nparams 1
	  param inout name "cause" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code IllegalArgumentException} with the current stack
trace and the specified cause.

@param cause
           the cause of this exception, may be {@code null}.
@since 1.5"
      end
    end

    class 128795 "ClassNotFoundException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Thrown when a class loader is unable to find a class."
      classrelation 189467 // <generalisation>
	relation 189467 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 189467 // <generalisation>
	  b parent class_ref 132251 // Exception
      end

      attribute 171291 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 9176873029745254542L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 189595 // ex (<unidirectional association>)
	relation 189595 --->
	  a role_name "ex" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 189595 // ex (<unidirectional association>)
	  b parent class_ref 134683 // Throwable
      end

      operation 323867 "ClassNotFoundException"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code ClassNotFoundException} that includes the current
stack trace."
      end

      operation 323995 "ClassNotFoundException"
	public explicit_return_type ""
	nparams 1
	  param inout name "detailMessage" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code ClassNotFoundException} with the current stack
trace and the specified detail message.

@param detailMessage
           the detail message for this exception."
      end

      operation 324123 "ClassNotFoundException"
	public explicit_return_type ""
	nparams 2
	  param inout name "detailMessage" type class_ref 3399692 // String
	  param inout name "exception" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code ClassNotFoundException} with the current stack
trace, the specified detail message and the exception that occurred when
loading the class.

@param detailMessage
           the detail message for this exception.
@param exception
           the exception which occurred while loading the class."
      end

      operation 324251 "getException"
	public return_type class_ref 134683 // Throwable
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the exception which occurred when loading the class.

@return Throwable the exception which occurred while loading the class."
      end

      operation 324379 "getCause"
	public return_type class_ref 134683 // Throwable
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns the cause of this Throwable, or {@code null} if there is no
cause.

@return Throwable the receiver's cause."
      end
    end

    class 129435 "Cloneable"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This (empty) interface must be implemented by all classes that wish to
support cloning. The implementation of {@code clone()} in {@code Object}
checks if the object being cloned implements this interface and throws
{@code CloneNotSupportedException} if it does not.

@see Object#clone
@see CloneNotSupportedException"
    end

    class 129947 "Float"
      visibility public 
      nactuals 1
      actual class class_ref 139675 // Comparable
        rank 0 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The wrapper for the primitive type {@code float}.

@see java.lang.Number
@since 1.0"
      classrelation 192667 // <generalisation>
	relation 192667 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 192667 // <generalisation>
	  b parent class_ref 148379 // Number
      end

      classrelation 192795 // <realization>
	relation 192795 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 192795 // <realization>
	  b parent class_ref 139675 // Comparable
      end

      attribute 174875 "EXPONENT_BIAS"
	class_attribute const_attribute package explicit_type "int"
	init_value " 127"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 175003 "EXPONENT_BITS"
	class_attribute const_attribute package explicit_type "int"
	init_value " 9"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 175131 "MANTISSA_BITS"
	class_attribute const_attribute package explicit_type "int"
	init_value " 23"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 175259 "NON_MANTISSA_BITS"
	class_attribute const_attribute package explicit_type "int"
	init_value " 9"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 175387 "SIGN_MASK"
	class_attribute const_attribute package explicit_type "int"
	init_value " 0x80000000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 175515 "EXPONENT_MASK"
	class_attribute const_attribute package explicit_type "int"
	init_value " 0x7f800000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 175643 "MANTISSA_MASK"
	class_attribute const_attribute package explicit_type "int"
	init_value " 0x007fffff"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 175771 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -2671257302660747028L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 175899 "value"
	const_attribute private explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The value which the receiver represents.
"
      end

      attribute 176027 "MAX_VALUE"
	class_attribute const_attribute public explicit_type "float"
	init_value " 3.40282346638528860e+38f"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Constant for the maximum {@code float} value, (2 - 2<sup>-23</sup>) * 2<sup>127</sup>.
"
      end

      attribute 176155 "MIN_VALUE"
	class_attribute const_attribute public explicit_type "float"
	init_value " 1.40129846432481707e-45f"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Constant for the minimum {@code float} value, 2<sup>-149</sup>.
"
      end

      attribute 176283 "NaN"
	class_attribute const_attribute public explicit_type "float"
	init_value " 0.0f / 0.0f"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Constant for the Not-a-Number (NaN) value of the {@code float} type.
"
      end

      attribute 176411 "POSITIVE_INFINITY"
	class_attribute const_attribute public explicit_type "float"
	init_value " 1.0f / 0.0f"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Constant for the positive infinity value of the {@code float} type.
"
      end

      attribute 176539 "NEGATIVE_INFINITY"
	class_attribute const_attribute public explicit_type "float"
	init_value " -1.0f / 0.0f"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Constant for the negative infinity value of the {@code float} type.
"
      end

      attribute 176667 "MIN_NORMAL"
	class_attribute const_attribute public explicit_type "float"
	init_value " 1.1754943508222875E-38f"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Constant for the smallest positive normal value of the {@code float} type.

@since 1.6
"
      end

      attribute 176795 "MAX_EXPONENT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 127"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Maximum base-2 exponent that a finite value of the {@code float} type may have.
Equal to {@code Math.getExponent(Float.MAX_VALUE)}.

@since 1.6
"
      end

      attribute 176923 "MIN_EXPONENT"
	class_attribute const_attribute public explicit_type "int"
	init_value " -126"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Minimum base-2 exponent that a normal value of the {@code float} type may have.
Equal to {@code Math.getExponent(Float.MIN_NORMAL)}.

@since 1.6
"
      end

      classrelation 192923 // TYPE (<unidirectional association>)
	relation 192923 --->
	  a role_name "TYPE" init_value " (Class<Float>) float[].class.getComponentType()" class_relation const_relation public
	    comment "
The {@link Class} object that represents the primitive type {@code
float}.

@since 1.1

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Float> ${name}${value};
"
	    java_annotation "@SuppressWarnings(\"unchecked\")
"
	    classrelation_ref 192923 // TYPE (<unidirectional association>)
	  b parent class_ref 3421708 // Class
      end

      attribute 177051 "SIZE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 32"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Note: Float.TYPE can't be set to \"float.class\", since *that* is
 defined to be \"java.lang.Float.TYPE\";

Constant for the number of bits needed to represent a {@code float} in
two's complement form.

@since 1.5
"
      end

      operation 333723 "Float"
	public explicit_return_type ""
	nparams 1
	  param in name "value" explicit_type "float"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code Float} with the specified primitive float value.

@param value
           the primitive float value to store in the new instance."
      end

      operation 333851 "Float"
	public explicit_return_type ""
	nparams 1
	  param in name "value" explicit_type "double"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code Float} with the specified primitive double value.

@param value
           the primitive double value to store in the new instance."
      end

      operation 333979 "Float"
	public explicit_return_type ""
	nparams 1
	  param inout name "string" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 148507 // NumberFormatException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code Float} from the specified string.

@param string
           the string representation of a float value.
@throws NumberFormatException
            if {@code string} can not be parsed as a float value.
@see #parseFloat(String)"
      end

      operation 334107 "compareTo"
	public explicit_return_type "int"
	nparams 1
	  param inout name "object" type class_ref 129947 // Float
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares this object to the specified float object to determine their
relative order. There are two special cases:
<ul>
<li>{@code Float.NaN} is equal to {@code Float.NaN} and it is greater
than any other float value, including {@code Float.POSITIVE_INFINITY};</li>
<li>+0.0f is greater than -0.0f</li>
</ul>

@param object
           the float object to compare this object to.
@return a negative value if the value of this float is less than the
        value of {@code object}; 0 if the value of this float and the
        value of {@code object} are equal; a positive value if the value
        of this float is greater than the value of {@code object}.
@see java.lang.Comparable
@since 1.2"
      end

      operation 334235 "byteValue"
	public explicit_return_type "byte"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 334363 "doubleValue"
	public explicit_return_type "double"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 334491 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "object" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Tests this double for equality with {@code object}.
To be equal, {@code object} must be an instance of {@code Float} and
{@code floatToIntBits} must give the same value for both objects.

<p>Note that, unlike {@code ==}, {@code -0.0} and {@code +0.0} compare
unequal, and {@code NaN}s compare equal by this method.

@param object
           the object to compare this float with.
@return {@code true} if the specified object is equal to this
        {@code Float}; {@code false} otherwise."
      end

      operation 334619 "floatToIntBits"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "value" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
	comment "Returns an integer corresponding to the bits of the given
<a href=\"http://en.wikipedia.org/wiki/IEEE_754-1985\">IEEE 754</a> single precision
float {@code value}. All <em>Not-a-Number (NaN)</em> values are converted to a single NaN
representation ({@code 0x7fc00000}) (compare to {@link #floatToRawIntBits})."
      end

      operation 334747 "floatToRawIntBits"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "value" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
	comment "Returns an integer corresponding to the bits of the given
<a href=\"http://en.wikipedia.org/wiki/IEEE_754-1985\">IEEE 754</a> single precision
float {@code value}. <em>Not-a-Number (NaN)</em> values are preserved (compare
to {@link #floatToIntBits})."
      end

      operation 334875 "floatValue"
	public explicit_return_type "float"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Gets the primitive value of this float.

@return this object's primitive value."
      end

      operation 335003 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 335131 "intBitsToFloat"
	class_operation public explicit_return_type "float"
	nparams 1
	  param in name "bits" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
	comment "Returns the <a href=\"http://en.wikipedia.org/wiki/IEEE_754-1985\">IEEE 754</a>
single precision float corresponding to the given {@code bits}."
      end

      operation 335259 "intValue"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 335387 "isInfinite"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether this object represents an infinite value.

@return {@code true} if the value of this float is positive or negative
        infinity; {@code false} otherwise."
      end

      operation 335515 "isInfinite"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "f" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether the specified float represents an infinite value.

@param f
           the float to check.
@return {@code true} if the value of {@code f} is positive or negative
        infinity; {@code false} otherwise."
      end

      operation 335643 "isNaN"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether this object is a <em>Not-a-Number (NaN)</em> value.

@return {@code true} if this float is <em>Not-a-Number</em>;
        {@code false} if it is a (potentially infinite) float number."
      end

      operation 335771 "isNaN"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "f" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether the specified float is a <em>Not-a-Number (NaN)</em>
value.

@param f
           the float value to check.
@return {@code true} if {@code f} is <em>Not-a-Number</em>;
        {@code false} if it is a (potentially infinite) float number."
      end

      operation 335899 "longValue"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 336027 "parseFloat"
	class_operation public explicit_return_type "float"
	nparams 1
	  param inout name "string" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 148507 // NumberFormatException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses the specified string as a float value.

@param string
           the string representation of a float value.
@return the primitive float value represented by {@code string}.
@throws NumberFormatException
            if {@code string} can not be parsed as a float value.
@see #valueOf(String)
@since 1.2"
      end

      operation 336155 "shortValue"
	public explicit_return_type "short"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 336283 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 336411 "toString"
	class_operation public return_type class_ref 3399692 // String
	nparams 1
	  param in name "f" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string containing a concise, human-readable description of the
specified float value.

@param f
            the float to convert to a string.
@return a printable representation of {@code f}."
      end

      operation 336539 "valueOf"
	class_operation public return_type class_ref 129947 // Float
	nparams 1
	  param inout name "string" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 148507 // NumberFormatException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses the specified string as a float value.

@param string
           the string representation of a float value.
@return a {@code Float} instance containing the float value represented
        by {@code string}.
@throws NumberFormatException
            if {@code string} can not be parsed as a float value.
@see #parseFloat(String)"
      end

      operation 336667 "compare"
	class_operation public explicit_return_type "int"
	nparams 2
	  param in name "float1" explicit_type "float"
	  param in name "float2" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares the two specified float values. There are two special cases:
<ul>
<li>{@code Float.NaN} is equal to {@code Float.NaN} and it is greater
than any other float value, including {@code Float.POSITIVE_INFINITY};</li>
<li>+0.0f is greater than -0.0f</li>
</ul>

@param float1
           the first value to compare.
@param float2
           the second value to compare.
@return a negative value if {@code float1} is less than {@code float2};
        0 if {@code float1} and {@code float2} are equal; a positive
        value if {@code float1} is greater than {@code float2}.
@since 1.4"
      end

      operation 336795 "valueOf"
	class_operation public return_type class_ref 129947 // Float
	nparams 1
	  param in name "f" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@code Float} instance for the specified float value.

@param f
           the float value to store in the instance.
@return a {@code Float} instance containing {@code f}.
@since 1.5"
      end

      operation 336923 "toHexString"
	class_operation public return_type class_ref 3399692 // String
	nparams 1
	  param in name "f" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts the specified float into its hexadecimal string representation.

@param f
           the float to convert.
@return the hexadecimal string representation of {@code f}.
@since 1.5"
      end
    end

    class 130075 "Integer"
      visibility public 
      nactuals 1
      actual class class_ref 139675 // Comparable
        rank 0 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@FindBugsSuppressWarnings(\"DM_NUMBER_CTOR\")
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The wrapper for the primitive type {@code int}.
<p>
Implementation note: The \"bit twiddling\" methods in this class use techniques
described in <a href=\"http://www.hackersdelight.org/\">Henry S. Warren,
Jr.'s Hacker's Delight, (Addison Wesley, 2002)</a> and <a href=
\"http://graphics.stanford.edu/~seander/bithacks.html\">Sean Anderson's
Bit Twiddling Hacks.</a>

@see java.lang.Long
@since 1.0"
      classrelation 195483 // <generalisation>
	relation 195483 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 195483 // <generalisation>
	  b parent class_ref 148379 // Number
      end

      classrelation 195611 // <realization>
	relation 195611 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 195611 // <realization>
	  b parent class_ref 139675 // Comparable
      end

      attribute 181019 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 1360826667806852920L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 181147 "value"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The int value represented by this Integer
"
      end

      attribute 181275 "MAX_VALUE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x7FFFFFFF"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Constant for the maximum {@code int} value, 2<sup>31</sup>-1.
"
      end

      attribute 181403 "MIN_VALUE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x80000000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Constant for the minimum {@code int} value, -2<sup>31</sup>.
"
      end

      attribute 181531 "SIZE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 32"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Constant for the number of bits needed to represent an {@code int} in
two's complement form.

@since 1.5
"
      end

      attribute 181659 "NTZ_TABLE"
	class_attribute const_attribute private explicit_type "byte"
	multiplicity "[]"
	init_value " {
        32,  0,  1, 12,  2,  6, -1, 13,   3, -1,  7, -1, -1, -1, -1, 14,
        10,  4, -1, -1,  8, -1, -1, 25,  -1, -1, -1, -1, -1, 21, 27, 15,
        31, 11,  5, -1, -1, -1, -1, -1,   9, -1, -1, 24, -1, -1, 20, 26,
        30, -1, -1, -1, -1, 23, -1, 19,  29, -1, 22, 18, 28, 17, 16, -1
    }"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Table for Seal's algorithm for Number of Trailing Zeros. Hacker's Delight
online, Figure 5-18 (http://www.hackersdelight.org/revisions.pdf)
The entries whose value is -1 are never referenced.
"
      end

      classrelation 195739 // TYPE (<unidirectional association>)
	relation 195739 --->
	  a role_name "TYPE" init_value " (Class<Integer>) int[].class.getComponentType()" class_relation const_relation public
	    comment "
The {@link Class} object that represents the primitive type {@code int}.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Integer> ${name}${value};
"
	    java_annotation "@SuppressWarnings(\"unchecked\")
"
	    classrelation_ref 195739 // TYPE (<unidirectional association>)
	  b parent class_ref 3421708 // Class
      end

      operation 344987 "Integer"
	public explicit_return_type ""
	nparams 1
	  param in name "value" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Note: Integer.TYPE can't be set to \"int.class\", since *that* is
 defined to be \"java.lang.Integer.TYPE\";

Constructs a new {@code Integer} with the specified primitive integer
value.

@param value
           the primitive integer value to store in the new instance."
      end

      operation 345115 "Integer"
	public explicit_return_type ""
	nparams 1
	  param inout name "string" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 148507 // NumberFormatException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code Integer} from the specified string.

@param string
           the string representation of an integer value.
@throws NumberFormatException
            if {@code string} cannot be parsed as an integer value.
@see #parseInt(String)"
      end

      operation 345243 "byteValue"
	public explicit_return_type "byte"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 345371 "compareTo"
	public explicit_return_type "int"
	nparams 1
	  param inout name "object" type class_ref 130075 // Integer
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares this object to the specified integer object to determine their
relative order.

@param object
           the integer object to compare this object to.
@return a negative value if the value of this integer is less than the
        value of {@code object}; 0 if the value of this integer and the
        value of {@code object} are equal; a positive value if the value
        of this integer is greater than the value of {@code object}.
@see java.lang.Comparable
@since 1.2"
      end

      operation 345499 "compare"
	class_operation public explicit_return_type "int"
	nparams 2
	  param in name "lhs" explicit_type "int"
	  param in name "rhs" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares two {@code int} values.
@return 0 if lhs = rhs, less than 0 if lhs &lt; rhs, and greater than 0 if lhs &gt; rhs.
@since 1.7
@hide 1.7"
      end

      operation 345627 "invalidInt"
	class_operation private return_type class_ref 148507 // NumberFormatException
	nparams 1
	  param inout name "s" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 345755 "decode"
	class_operation public return_type class_ref 130075 // Integer
	nparams 1
	  param inout name "string" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 148507 // NumberFormatException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses the specified string and returns a {@code Integer} instance if the
string can be decoded into an integer value. The string may be an
optional minus sign \"-\" followed by a hexadecimal (\"0x...\" or \"#...\"),
octal (\"0...\"), or decimal (\"...\") representation of an integer.

@param string
           a string representation of an integer value.
@return an {@code Integer} containing the value represented by
        {@code string}.
@throws NumberFormatException
            if {@code string} cannot be parsed as an integer value."
      end

      operation 345883 "doubleValue"
	public explicit_return_type "double"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 346011 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Compares this instance with the specified object and indicates if they
are equal. In order to be equal, {@code o} must be an instance of
{@code Integer} and have the same integer value as this object.

@param o
           the object to compare this integer with.
@return {@code true} if the specified object is equal to this
        {@code Integer}; {@code false} otherwise."
      end

      operation 346139 "floatValue"
	public explicit_return_type "float"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 346267 "getInteger"
	class_operation public return_type class_ref 130075 // Integer
	nparams 1
	  param inout name "string" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code Integer} value of the system property identified by
{@code string}. Returns {@code null} if {@code string} is {@code null}
or empty, if the property can not be found or if its value can not be
parsed as an integer.

@param string
           the name of the requested system property.
@return the requested property's value as an {@code Integer} or
        {@code null}."
      end

      operation 346395 "getInteger"
	class_operation public return_type class_ref 130075 // Integer
	nparams 2
	  param inout name "string" type class_ref 3399692 // String
	  param in name "defaultValue" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code Integer} value of the system property identified by
{@code string}. Returns the specified default value if {@code string} is
{@code null} or empty, if the property can not be found or if its value
can not be parsed as an integer.

@param string
           the name of the requested system property.
@param defaultValue
           the default value that is returned if there is no integer
           system property with the requested name.
@return the requested property's value as an {@code Integer} or the
        default value."
      end

      operation 346523 "getInteger"
	class_operation public return_type class_ref 130075 // Integer
	nparams 2
	  param inout name "string" type class_ref 3399692 // String
	  param inout name "defaultValue" type class_ref 130075 // Integer
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code Integer} value of the system property identified by
{@code string}. Returns the specified default value if {@code string} is
{@code null} or empty, if the property can not be found or if its value
can not be parsed as an integer.

@param string
           the name of the requested system property.
@param defaultValue
           the default value that is returned if there is no integer
           system property with the requested name.
@return the requested property's value as an {@code Integer} or the
        default value."
      end

      operation 346651 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 346779 "intValue"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Gets the primitive value of this int.

@return this object's primitive value."
      end

      operation 346907 "longValue"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 347035 "parseInt"
	class_operation public explicit_return_type "int"
	nparams 1
	  param inout name "string" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 148507 // NumberFormatException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses the specified string as a signed decimal integer value. The ASCII
character \\u002d ('-') is recognized as the minus sign.

@param string
           the string representation of an integer value.
@return the primitive integer value represented by {@code string}.
@throws NumberFormatException
            if {@code string} cannot be parsed as an integer value."
      end

      operation 347163 "parseInt"
	class_operation public explicit_return_type "int"
	nparams 2
	  param inout name "string" type class_ref 3399692 // String
	  param in name "radix" explicit_type "int"
	nexceptions 1
	  exception class_ref 148507 // NumberFormatException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses the specified string as a signed integer value using the specified
radix. The ASCII character \\u002d ('-') is recognized as the minus sign.

@param string
           the string representation of an integer value.
@param radix
           the radix to use when parsing.
@return the primitive integer value represented by {@code string} using
        {@code radix}.
@throws NumberFormatException
            if {@code string} cannot be parsed as an integer value,
            or {@code radix < Character.MIN_RADIX ||
            radix > Character.MAX_RADIX}."
      end

      operation 347291 "parse"
	class_operation private explicit_return_type "int"
	nparams 4
	  param inout name "string" type class_ref 3399692 // String
	  param in name "offset" explicit_type "int"
	  param in name "radix" explicit_type "int"
	  param inout name "negative" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 148507 // NumberFormatException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 347419 "shortValue"
	public explicit_return_type "short"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 347547 "toBinaryString"
	class_operation public return_type class_ref 3399692 // String
	nparams 1
	  param in name "i" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts the specified integer into its binary string representation. The
returned string is a concatenation of '0' and '1' characters.

@param i
           the integer to convert.
@return the binary string representation of {@code i}."
      end

      operation 347675 "toHexString"
	class_operation public return_type class_ref 3399692 // String
	nparams 1
	  param in name "i" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts the specified integer into its hexadecimal string
representation. The returned string is a concatenation of characters from
'0' to '9' and 'a' to 'f'.

@param i
           the integer to convert.
@return the hexadecimal string representation of {@code i}."
      end

      operation 347803 "toOctalString"
	class_operation public return_type class_ref 3399692 // String
	nparams 1
	  param in name "i" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts the specified integer into its octal string representation. The
returned string is a concatenation of characters from '0' to '7'.

@param i
           the integer to convert.
@return the octal string representation of {@code i}."
      end

      operation 347931 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 348059 "toString"
	class_operation public return_type class_ref 3399692 // String
	nparams 1
	  param in name "i" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts the specified integer into its decimal string representation.
The returned string is a concatenation of a minus sign if the number is
negative and characters from '0' to '9'.

@param i
           the integer to convert.
@return the decimal string representation of {@code i}."
      end

      operation 348187 "toString"
	class_operation public return_type class_ref 3399692 // String
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "radix" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts the specified signed integer into a string representation based on the
specified radix. The returned string is a concatenation of a minus sign
if the number is negative and characters from '0' to '9' and 'a' to 'z',
depending on the radix. If {@code radix} is not in the interval defined
by {@code Character.MIN_RADIX} and {@code Character.MAX_RADIX} then 10 is
used as the base for the conversion.

<p>This method treats its argument as signed. If you want to convert an
unsigned value to one of the common non-decimal bases, you may find
{@link #toBinaryString}, {@code #toHexString}, or {@link #toOctalString}
more convenient.

@param i
           the signed integer to convert.
@param radix
           the base to use for the conversion.
@return the string representation of {@code i}."
      end

      operation 348315 "valueOf"
	class_operation public return_type class_ref 130075 // Integer
	nparams 1
	  param inout name "string" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 148507 // NumberFormatException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses the specified string as a signed decimal integer value.

@param string
           the string representation of an integer value.
@return an {@code Integer} instance containing the integer value
        represented by {@code string}.
@throws NumberFormatException
            if {@code string} cannot be parsed as an integer value.
@see #parseInt(String)"
      end

      operation 348443 "valueOf"
	class_operation public return_type class_ref 130075 // Integer
	nparams 2
	  param inout name "string" type class_ref 3399692 // String
	  param in name "radix" explicit_type "int"
	nexceptions 1
	  exception class_ref 148507 // NumberFormatException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses the specified string as a signed integer value using the specified
radix.

@param string
           the string representation of an integer value.
@param radix
           the radix to use when parsing.
@return an {@code Integer} instance containing the integer value
        represented by {@code string} using {@code radix}.
@throws NumberFormatException
            if {@code string} cannot be parsed as an integer value, or
            {@code radix < Character.MIN_RADIX ||
            radix > Character.MAX_RADIX}.
@see #parseInt(String, int)"
      end

      operation 348571 "highestOneBit"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "i" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines the highest (leftmost) bit of the specified integer that is 1
and returns the bit mask value for that bit. This is also referred to as
the Most Significant 1 Bit. Returns zero if the specified integer is
zero.

@param i
           the integer to examine.
@return the bit mask indicating the highest 1 bit in {@code i}.
@since 1.5"
      end

      operation 348699 "lowestOneBit"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "i" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines the lowest (rightmost) bit of the specified integer that is 1
and returns the bit mask value for that bit. This is also referred
to as the Least Significant 1 Bit. Returns zero if the specified integer
is zero.

@param i
           the integer to examine.
@return the bit mask indicating the lowest 1 bit in {@code i}.
@since 1.5"
      end

      operation 348827 "numberOfLeadingZeros"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "i" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines the number of leading zeros in the specified integer prior to
the {@link #highestOneBit(int) highest one bit}.

@param i
           the integer to examine.
@return the number of leading zeros in {@code i}.
@since 1.5"
      end

      operation 348955 "numberOfTrailingZeros"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "i" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines the number of trailing zeros in the specified integer after
the {@link #lowestOneBit(int) lowest one bit}.

@param i
           the integer to examine.
@return the number of trailing zeros in {@code i}.
@since 1.5"
      end

      operation 349083 "bitCount"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "i" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Counts the number of 1 bits in the specified integer; this is also
referred to as population count.

@param i
           the integer to examine.
@return the number of 1 bits in {@code i}.
@since 1.5"
      end

      operation 349211 "rotateLeft"
	class_operation public explicit_return_type "int"
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "distance" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Rotates the bits of the specified integer to the left by the specified
number of bits.

@param i
           the integer value to rotate left.
@param distance
           the number of bits to rotate.
@return the rotated value.
@since 1.5"
      end

      operation 349339 "rotateRight"
	class_operation public explicit_return_type "int"
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "distance" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Rotates the bits of the specified integer to the right by the specified
number of bits.

@param i
           the integer value to rotate right.
@param distance
           the number of bits to rotate.
@return the rotated value.
@since 1.5"
      end

      operation 349467 "reverseBytes"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "i" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reverses the order of the bytes of the specified integer.

@param i
           the integer value for which to reverse the byte order.
@return the reversed value.
@since 1.5"
      end

      operation 349595 "reverse"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "i" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reverses the order of the bits of the specified integer.

@param i
           the integer value for which to reverse the bit order.
@return the reversed value.
@since 1.5"
      end

      operation 349723 "signum"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "i" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of the {@code signum} function for the specified
integer.

@param i
           the integer value to check.
@return -1 if {@code i} is negative, 1 if {@code i} is positive, 0 if
        {@code i} is zero.
@since 1.5"
      end

      operation 349851 "valueOf"
	class_operation public return_type class_ref 130075 // Integer
	nparams 1
	  param in name "i" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@code Integer} instance for the specified integer value.
<p>
If it is not necessary to get a new {@code Integer} instance, it is
recommended to use this method instead of the constructor, since it
maintains a cache of instances which may result in better performance.

@param i
           the integer value to store in the instance.
@return a {@code Integer} instance containing {@code i}.
@since 1.5"
      end

      classrelation 195867 // SMALL_VALUES (<unidirectional association>)
	relation 195867 --->
	  a role_name "SMALL_VALUES" multiplicity "[]" init_value " new Integer[256]" class_relation const_relation private
	    comment "
A cache of instances used by {@link Integer#valueOf(int)} and auto-boxing

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 195867 // SMALL_VALUES (<unidirectional association>)
	  b parent class_ref 130075 // Integer
      end

      extra_member 128923 "initialization"
	
	cpp "" ""
	java "  static {
        for (int i = -128; i < 128; i++) {
            SMALL_VALUES[i + 128] = new Integer(i);
        }
    }"
	php ""
	python ""
	idl ""
      end
    end

    class 130203 "Boolean"
      visibility public 
      nactuals 1
      actual class class_ref 139675 // Comparable
        rank 0 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The wrapper for the primitive type {@code boolean}.

@since 1.0"
      classrelation 169115 // <realization>
	relation 169115 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 169115 // <realization>
	  b parent class_ref 128155 // Serializable
      end

      classrelation 169243 // <realization>
	relation 169243 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 169243 // <realization>
	  b parent class_ref 139675 // Comparable
      end

      attribute 160539 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -3665804199014368530L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 160667 "value"
	const_attribute private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The boolean value of the receiver.
"
      end

      classrelation 169371 // TYPE (<unidirectional association>)
	relation 169371 --->
	  a role_name "TYPE" init_value " (Class<Boolean>) boolean[].class.getComponentType()" class_relation const_relation public
	    comment "
The {@link Class} object that represents the primitive type {@code
boolean}.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Boolean> ${name}${value};
"
	    java_annotation "@SuppressWarnings(\"unchecked\")
"
	    classrelation_ref 169371 // TYPE (<unidirectional association>)
	  b parent class_ref 3421708 // Class
      end

      classrelation 169499 // TRUE (<unidirectional association>)
	relation 169499 --->
	  a role_name "TRUE" init_value " new Boolean(true)" class_relation const_relation public
	    comment " Note: Boolean.TYPE can't be set to \"boolean.class\", since *that* is
 defined to be \"java.lang.Boolean.TYPE\";

The {@code Boolean} object that represents the primitive value
{@code true}.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 169499 // TRUE (<unidirectional association>)
	  b parent class_ref 130203 // Boolean
      end

      classrelation 169627 // FALSE (<unidirectional association>)
	relation 169627 --->
	  a role_name "FALSE" init_value " new Boolean(false)" class_relation const_relation public
	    comment "
The {@code Boolean} object that represents the primitive value
{@code false}.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 169627 // FALSE (<unidirectional association>)
	  b parent class_ref 130203 // Boolean
      end

      operation 284827 "Boolean"
	public explicit_return_type ""
	nparams 1
	  param inout name "string" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code Boolean} with its boolean value specified by
{@code string}. If {@code string} is not {@code null} and is equal to
\"true\" using a non-case sensitive comparison, the result will be a
Boolean representing the primitive value {@code true}, otherwise it will
be a Boolean representing the primitive value {@code false}.

@param string
           the string representing a boolean value."
      end

      operation 284955 "Boolean"
	public explicit_return_type ""
	nparams 1
	  param inout name "value" explicit_type "boolean"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code Boolean} with the specified primitive boolean
value.

@param value
           the primitive boolean value, {@code true} or {@code false}."
      end

      operation 285083 "booleanValue"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the primitive value of this boolean, either {@code true} or
{@code false}.

@return this object's primitive value, {@code true} or {@code false}."
      end

      operation 285211 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
    @FindBugsSuppressWarnings(\"RC_REF_COMPARISON_BAD_PRACTICE_BOOLEAN\")
"
	
	
	
	comment "Compares this instance with the specified object and indicates if they
are equal. In order to be equal, {@code o} must be an instance of
{@code Boolean} and have the same boolean value as this object.

@param o
           the object to compare this boolean with.
@return {@code true} if the specified object is equal to this
        {@code Boolean}; {@code false} otherwise."
      end

      operation 285339 "compareTo"
	public explicit_return_type "int"
	nparams 1
	  param inout name "that" type class_ref 130203 // Boolean
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares this object to the specified boolean object to determine their
relative order.

@param that
           the boolean object to compare this object to.
@return 0 if the value of this boolean and the value of {@code that} are
        equal; a positive value if the value of this boolean is
        {@code true} and the value of {@code that} is {@code false}; a
        negative value if the value if this boolean is {@code false} and
        the value of {@code that} is {@code true}.
@see java.lang.Comparable
@since 1.5"
      end

      operation 285467 "compare"
	class_operation public explicit_return_type "int"
	nparams 2
	  param inout name "lhs" explicit_type "boolean"
	  param inout name "rhs" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares two {@code boolean} values.
@return 0 if lhs = rhs, less than 0 if lhs &lt; rhs, and greater than 0 if lhs &gt; rhs.
        (Where true &gt; false.)
@since 1.7
@hide 1.7"
      end

      operation 285595 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns an integer hash code for this boolean.

@return this boolean's hash code, which is {@code 1231} for {@code true}
        values and {@code 1237} for {@code false} values."
      end

      operation 285723 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns a string containing a concise, human-readable description of this
boolean.

@return \"true\" if the value of this boolean is {@code true}, \"false\"
        otherwise."
      end

      operation 285851 "getBoolean"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "string" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code boolean} value of the system property identified by
{@code string}.

@param string
           the name of the requested system property.
@return {@code true} if the system property named by {@code string}
        exists and it is equal to \"true\" using case insensitive
        comparison, {@code false} otherwise.
@see System#getProperty(String)"
      end

      operation 285979 "parseBoolean"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "s" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses the specified string as a {@code boolean}.

@param s
           the string representation of a boolean value.
@return {@code true} if {@code s} is not {@code null} and is equal to
        {@code \"true\"} using case insensitive comparison, {@code false}
        otherwise.
@since 1.5"
      end

      operation 286107 "toString"
	class_operation public return_type class_ref 3399692 // String
	nparams 1
	  param inout name "value" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts the specified boolean to its string representation.

@param value
           the boolean to convert.
@return \"true\" if {@code value} is {@code true}, \"false\" otherwise."
      end

      operation 286235 "valueOf"
	class_operation public return_type class_ref 130203 // Boolean
	nparams 1
	  param inout name "string" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses the specified string as a boolean value.

@param string
           the string representation of a boolean value.
@return {@code Boolean.TRUE} if {@code string} is equal to \"true\" using
        case insensitive comparison, {@code Boolean.FALSE} otherwise.
@see #parseBoolean(String)"
      end

      operation 286363 "valueOf"
	class_operation public return_type class_ref 130203 // Boolean
	nparams 1
	  param inout name "b" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@code Boolean} instance for the specified boolean value.
<p>
If it is not necessary to get a new {@code Boolean} instance, it is
recommended to use this method instead of the constructor, since it
returns its static instances, which results in better performance.

@param b
           the boolean to convert to a {@code Boolean}.
@return {@code Boolean.TRUE} if {@code b} is equal to {@code true},
        {@code Boolean.FALSE} otherwise."
      end
    end

    class 132123 "AutoCloseable"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Defines an interface for classes that can (or need to) be closed once they
are not used any longer. Calling the {@code close} method releases resources
that the object holds.

<p>A common pattern for using an {@code AutoCloseable} resource: <pre>   {@code
  Closable foo = new Foo();
  try {
     ...;
  } finally {
     foo.close();
  }
}</pre>

@since 1.7
@hide 1.7"
      operation 138651 "close"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 132251 // Exception
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Closes the object and release any system resources it holds.

<p>Unless the implementing class specifies otherwise, it is an error to
call {@link #close} more than once."
      end
    end

    class 132251 "Exception"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "{@code Exception} is the superclass of all classes that represent recoverable
exceptions. When exceptions are thrown, they may be caught by application
code.

@see Throwable
@see Error
@see RuntimeException"
      classrelation 143515 // <generalisation>
	relation 143515 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 143515 // <generalisation>
	  b parent class_ref 134683 // Throwable
      end

      attribute 138907 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -3387516993124229948L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 162459 "Exception"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code Exception} that includes the current stack trace."
      end

      operation 162587 "Exception"
	public explicit_return_type ""
	nparams 1
	  param inout name "detailMessage" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code Exception} with the current stack trace and the
specified detail message.

@param detailMessage
           the detail message for this exception."
      end

      operation 162715 "Exception"
	public explicit_return_type ""
	nparams 2
	  param inout name "detailMessage" type class_ref 3399692 // String
	  param inout name "throwable" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code Exception} with the current stack trace, the
specified detail message and the specified cause.

@param detailMessage
           the detail message for this exception.
@param throwable
           the cause of this exception."
      end

      operation 162843 "Exception"
	public explicit_return_type ""
	nparams 1
	  param inout name "throwable" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code Exception} with the current stack trace and the
specified cause.

@param throwable
           the cause of this exception."
      end
    end

    class 133147 "Readable"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Represents a sequence of characters that can be incrementally read (copied)
into a {@link CharBuffer}."
      operation 145563 "read"
	public explicit_return_type "int"
	nparams 1
	  param inout name "cb" type class_ref 133275 // CharBuffer
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads characters into the specified {@code CharBuffer}. The maximum
number of characters read is {@code CharBuffer.remaining()}.

@param cb
           the buffer to be filled with characters read.
@return the number of characters actually read, or -1 if this
        {@code Readable} reaches its end
@throws IOException
            if an I/O error occurs."
      end
    end

    class 133659 "Appendable"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Declares methods to append characters or character sequences. Any class that
implements this interface can receive data formatted by a
{@link java.util.Formatter}. The appended character or character sequence
should be valid according to the rules described in
{@link Character Unicode Character Representation}.
<p>
{@code Appendable} itself does not guarantee thread safety. This
responsibility is up to the implementing class.
<p>
Implementing classes can choose different exception handling mechanism. They
can choose to throw exceptions other than {@code IOException} or they do not
throw any exceptions at all and use error codes instead."
      operation 149147 "append"
	public return_type class_ref 133659 // Appendable
	nparams 1
	  param in name "c" explicit_type "char"
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Appends the specified character.

@param c
           the character to append.
@return this {@code Appendable}.
@throws IOException
            if an I/O error occurs."
      end

      operation 149275 "append"
	public return_type class_ref 133659 // Appendable
	nparams 1
	  param inout name "csq" type class_ref 133787 // CharSequence
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Appends the character sequence {@code csq}. Implementation classes may
not append the whole sequence, for example if the target is a buffer with
limited size.
<p>
If {@code csq} is {@code null}, the characters \"null\" are appended.

@param csq
           the character sequence to append.
@return this {@code Appendable}.
@throws IOException
            if an I/O error occurs."
      end

      operation 149403 "append"
	public return_type class_ref 133659 // Appendable
	nparams 3
	  param inout name "csq" type class_ref 133787 // CharSequence
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Appends a subsequence of {@code csq}.
<p>
If {@code csq} is not {@code null} then calling this method is equivalent
to calling {@code append(csq.subSequence(start, end))}.
<p>
If {@code csq} is {@code null}, the characters \"null\" are appended.

@param csq
           the character sequence to append.
@param start
           the first index of the subsequence of {@code csq} that is
           appended.
@param end
           the last index of the subsequence of {@code csq} that is
           appended.
@return this {@code Appendable}.
@throws IndexOutOfBoundsException
            if {@code start < 0}, {@code end < 0}, {@code start > end}
            or {@code end} is greater than the length of {@code csq}.
@throws IOException
            if an I/O error occurs."
      end
    end

    class 133787 "CharSequence"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This interface represents an ordered set of characters and defines the
methods to probe them."
      operation 305563 "length"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of characters in this sequence.

@return the number of characters."
      end

      operation 305691 "charAt"
	public explicit_return_type "char"
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the character at the specified index, with the first character
having index zero.

@param index
           the index of the character to return.
@return the requested character.
@throws IndexOutOfBoundsException
            if {@code index < 0} or {@code index} is greater than the
            length of this sequence."
      end

      operation 305819 "subSequence"
	public return_type class_ref 133787 // CharSequence
	nparams 2
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@code CharSequence} from the {@code start} index (inclusive)
to the {@code end} index (exclusive) of this sequence.

@param start
           the start offset of the sub-sequence. It is inclusive, that
           is, the index of the first character that is included in the
           sub-sequence.
@param end
           the end offset of the sub-sequence. It is exclusive, that is,
           the index of the first character after those that are included
           in the sub-sequence
@return the requested sub-sequence.
@throws IndexOutOfBoundsException
            if {@code start < 0}, {@code end < 0}, {@code start > end},
            or if {@code start} or {@code end} are greater than the
            length of this sequence."
      end

      operation 305947 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string with the same characters in the same order as in this
sequence.

@return a string based on this sequence."
      end
    end

    class 134683 "Throwable"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The superclass of all classes which can be thrown by the VM. The
two direct subclasses are recoverable exceptions ({@code Exception}) and
unrecoverable errors ({@code Error}). This class provides common methods for
accessing a string message which provides extra information about the
circumstances in which the {@code Throwable} was created (basically an error
message in most cases), and for saving a stack trace (that is, a record of
the call stack at a particular point in time) which can be printed later.
<p>
A {@code Throwable} can also include a cause, which is a nested {@code
Throwable} that represents the original problem that led to this {@code
Throwable}. It is often used for wrapping various types of errors into a
common {@code Throwable} without losing the detailed original error
information. When printing the stack trace, the trace of the cause is
included.

@see Error
@see Exception
@see RuntimeException"
      classrelation 142747 // <realization>
	relation 142747 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 142747 // <realization>
	  b parent class_ref 128155 // Serializable
      end

      attribute 138779 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -3042686055658047285L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 142875 // detailMessage (<unidirectional association>)
	relation 142875 --->
	  a role_name "detailMessage" private
	    comment "
The message provided when the exception was created.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 142875 // detailMessage (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 143003 // cause (<unidirectional association>)
	relation 143003 --->
	  a role_name "cause" init_value " this" private
	    comment "
The cause of this Throwable. Null when there is no cause.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 143003 // cause (<unidirectional association>)
	  b parent class_ref 134683 // Throwable
      end

      classrelation 143131 // suppressedExceptions (<unidirectional association>)
	relation 143131 --->
	  a role_name "suppressedExceptions" init_value " Collections.emptyList()" private
	    comment "
Throwables suppressed by this throwable. Null when suppressed exceptions
are disabled.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Throwable> ${name}${value};
"
	    classrelation_ref 143131 // suppressedExceptions (<unidirectional association>)
	  b parent class_ref 131483 // List
      end

      classrelation 143259 // stackState (<unidirectional association>)
	relation 143259 --->
	  a role_name "stackState" volatile private
	    comment "
An intermediate representation of the stack trace.  This field may
be accessed by the VM; do not rename.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 143259 // stackState (<unidirectional association>)
	  b parent class_ref 3401484 // Object
      end

      classrelation 143387 // stackTrace (<unidirectional association>)
	relation 143387 --->
	  a role_name "stackTrace" multiplicity "[]" private
	    comment "
A fully-expanded representation of the stack trace.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 143387 // stackTrace (<unidirectional association>)
	  b parent class_ref 134811 // StackTraceElement
      end

      operation 159259 "Throwable"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code Throwable} that includes the current stack trace."
      end

      operation 159387 "Throwable"
	public explicit_return_type ""
	nparams 1
	  param inout name "detailMessage" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code Throwable} with the current stack trace and the
specified detail message.

@param detailMessage
           the detail message for this {@code Throwable}."
      end

      operation 159515 "Throwable"
	public explicit_return_type ""
	nparams 2
	  param inout name "detailMessage" type class_ref 3399692 // String
	  param inout name "throwable" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code Throwable} with the current stack trace, the
specified detail message and the specified cause.

@param detailMessage
           the detail message for this {@code Throwable}.
@param throwable
           the cause of this {@code Throwable}."
      end

      operation 159643 "Throwable"
	public explicit_return_type ""
	nparams 1
	  param inout name "throwable" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code Throwable} with the current stack trace and the
specified cause.

@param throwable
           the cause of this {@code Throwable}."
      end

      operation 159771 "Throwable"
	protected explicit_return_type ""
	nparams 3
	  param inout name "detailMessage" type class_ref 3399692 // String
	  param inout name "throwable" type class_ref 134683 // Throwable
	  param inout name "enableSuppression" explicit_type "boolean"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code Throwable} with the current stack trace, the
specified detail message and the specified cause.

@param enableSuppression if false, throwables passed to {@link
    #addSuppressed(Throwable)} will be silently discarded.
@since 1.7
@hide 1.7"
      end

      operation 159899 "fillInStackTrace"
	public return_type class_ref 134683 // Throwable
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Records the stack trace from the point where this method has been called
to this {@code Throwable}. This method is invoked by the {@code Throwable} constructors.

<p>This method is public so that code (such as an RPC system) which catches
a {@code Throwable} and then re-throws it can replace the construction-time stack trace
with a stack trace from the location where the exception was re-thrown, by <i>calling</i>
{@code fillInStackTrace}.

<p>This method is non-final so that non-Java language implementations can disable VM stack
traces for their language. Filling in the stack trace is relatively expensive.
<i>Overriding</i> this method in the root of a language's exception hierarchy allows the
language to avoid paying for something it doesn't need.

@return this {@code Throwable} instance."
      end

      operation 160027 "getMessage"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the extra information message which was provided when this
{@code Throwable} was created. Returns {@code null} if no message was
provided at creation time.

@return this {@code Throwable}'s detail message."
      end

      operation 160155 "getLocalizedMessage"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the extra information message which was provided when this
{@code Throwable} was created. Returns {@code null} if no message was
provided at creation time. Subclasses may override this method to return
localized text for the message. Android returns the regular detail message.

@return this {@code Throwable}'s localized detail message."
      end

      operation 160283 "getStackTrace"
	public return_type class_ref 134811 // StackTraceElement
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the array of stack trace elements of this {@code Throwable}. Each
{@code StackTraceElement} represents an entry in the call stack. The
element at position 0 is the top of the stack, that is, the stack frame
where this {@code Throwable} is thrown.

@return a copy of the array of {@code StackTraceElement}s representing
        the call stack. Changes in the array obtained from this call will
        not change the call stack stored in this {@code Throwable}.
@see #printStackTrace()"
      end

      operation 160411 "setStackTrace"
	public explicit_return_type "void"
	nparams 1
	  param inout name "trace" type class_ref 134811 // StackTraceElement
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the array of stack trace elements. Each {@code StackTraceElement}
represents an entry in the call stack. A copy of the specified array is
stored in this {@code Throwable}. will be returned by {@code
getStackTrace()} and printed by {@code printStackTrace()}.

@param trace
           the new array of {@code StackTraceElement}s. A copy of the
           array is stored in this {@code Throwable}, so subsequent
           changes to {@code trace} will not change the call stack stored
           in this {@code Throwable}.
@throws NullPointerException
            if any element in {@code trace} is {@code null}.
@see #printStackTrace()"
      end

      operation 160539 "printStackTrace"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes a printable representation of this {@code Throwable}'s stack trace
to the {@code System.err} stream.
"
      end

      operation 160667 "countDuplicates"
	class_operation private explicit_return_type "int"
	nparams 2
	  param inout name "currentStack" type class_ref 134811 // StackTraceElement
	  param inout name "parentStack" type class_ref 134811 // StackTraceElement
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Counts the number of duplicate stack frames, starting from the
end of the stack.

@param currentStack a stack to compare
@param parentStack a stack to compare

@return the number of duplicate stack frames."
      end

      operation 160795 "getInternalStackTrace"
	private return_type class_ref 134811 // StackTraceElement
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of StackTraceElement. Each StackTraceElement
represents a entry on the stack.

@return an array of StackTraceElement representing the stack"
      end

      operation 160923 "printStackTrace"
	public explicit_return_type "void"
	nparams 1
	  param inout name "err" type class_ref 134939 // PrintStream
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes a printable representation of this {@code Throwable}'s stack trace
to the specified print stream. If the {@code Throwable} contains a
{@link #getCause() cause}, the method will be invoked recursively for
the nested {@code Throwable}.

@param err
           the stream to write the stack trace on."
      end

      operation 161051 "printStackTrace"
	public explicit_return_type "void"
	nparams 1
	  param inout name "err" type class_ref 135067 // PrintWriter
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes a printable representation of this {@code Throwable}'s stack trace
to the specified print writer. If the {@code Throwable} contains a
{@link #getCause() cause}, the method will be invoked recursively for the
nested {@code Throwable}.

@param err
           the writer to write the stack trace on."
      end

      operation 161179 "printStackTrace"
	private explicit_return_type "void"
	nparams 3
	  param inout name "err" type class_ref 133659 // Appendable
	  param inout name "indent" type class_ref 3399692 // String
	  param inout name "parentStack" type class_ref 134811 // StackTraceElement
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@param indent additional indentation on each line of the stack trace.
    This is the empty string for all but suppressed throwables.
@param parentStack the parent stack trace to suppress duplicates from, or
    null if this stack trace has no parent."
      end

      operation 161307 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 161435 "initCause"
	public return_type class_ref 134683 // Throwable
	nparams 1
	  param inout name "throwable" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes the cause of this {@code Throwable}. The cause can only be
initialized once.

@param throwable
           the cause of this {@code Throwable}.
@return this {@code Throwable} instance.
@throws IllegalArgumentException
            if {@code Throwable} is this object.
@throws IllegalStateException
            if the cause has already been initialized."
      end

      operation 161563 "getCause"
	public return_type class_ref 134683 // Throwable
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the cause of this {@code Throwable}, or {@code null} if there is
no cause.

@return Throwable this {@code Throwable}'s cause."
      end

      operation 161691 "addSuppressed"
	public explicit_return_type "void"
	nparams 1
	  param inout name "throwable" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds {@code throwable} to the list of throwables suppressed by this. The
throwable will included when this exception's stack trace is printed.

@throws IllegalArgumentException if {@code throwable == this}.
@throws NullPointerException if {@code throwable == null}.
@since 1.7
@hide 1.7"
      end

      operation 161819 "getSuppressed"
	public return_type class_ref 134683 // Throwable
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the throwables suppressed by this.

@since 1.7
@hide 1.7"
      end

      operation 161947 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "out" type class_ref 128411 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 162075 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "in" type class_ref 128667 // ObjectInputStream
	nexceptions 2
	  exception class_ref 128539 // IOException
	  exception class_ref 128795 // ClassNotFoundException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 162203 "nativeFillInStackTrace"
	class_operation private return_type class_ref 3401484 // Object
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
	comment "Creates a compact, VM-specific collection of goodies, suitable for
storing in the \"stackState\" field, based on the current thread's
call stack."
      end

      operation 162331 "nativeGetStackTrace"
	class_operation private return_type class_ref 134811 // StackTraceElement
	nparams 1
	  param inout name "stackState" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type}[] ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
	comment "Creates an array of StackTraceElement objects from the data held
in \"stackState\"."
      end
    end

    class 134811 "StackTraceElement"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A representation of a single stack frame. Arrays of {@code StackTraceElement}
are stored in {@link Throwable} objects to represent the whole state of the
call stack at the time a {@code Throwable} gets thrown.

@see Throwable#getStackTrace()"
      classrelation 204315 // <realization>
	relation 204315 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 204315 // <realization>
	  b parent class_ref 128155 // Serializable
      end

      attribute 187419 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 6992337162326171013L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 187547 "NATIVE_LINE_NUMBER"
	class_attribute const_attribute private explicit_type "int"
	init_value " -2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 204443 // declaringClass (<unidirectional association>)
	relation 204443 --->
	  a role_name "declaringClass" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 204443 // declaringClass (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 204571 // methodName (<unidirectional association>)
	relation 204571 --->
	  a role_name "methodName" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 204571 // methodName (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 204699 // fileName (<unidirectional association>)
	relation 204699 --->
	  a role_name "fileName" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 204699 // fileName (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      attribute 187675 "lineNumber"
	package explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 392475 "StackTraceElement"
	public explicit_return_type ""
	nparams 4
	  param inout name "cls" type class_ref 3399692 // String
	  param inout name "method" type class_ref 3399692 // String
	  param inout name "file" type class_ref 3399692 // String
	  param in name "line" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code StackTraceElement} for a specified execution
point.

@param cls
           the fully qualified name of the class where execution is at.
@param method
           the name of the method where execution is at.
@param file
           The name of the file where execution is at or {@code null}.
@param line
           the line of the file where execution is at, a negative number
           if unknown or {@code -2} if the execution is in a native
           method.
@throws NullPointerException
            if {@code cls} or {@code method} is {@code null}."
      end

      operation 392603 "StackTraceElement"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>
Private, nullary constructor for VM use only.
</p>"
      end

      operation 392731 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Compares this instance with the specified object and indicates if they
are equal. In order to be equal, the following conditions must be
fulfilled:
<ul>
<li>{@code obj} must be a stack trace element,</li>
<li>the method names of this stack trace element and of {@code obj} must
not be {@code null},</li>
<li>the class, method and file names as well as the line number of this
stack trace element and of {@code obj} must be equal.</li>
</ul>

@param obj
           the object to compare this instance with.
@return {@code true} if the specified object is equal to this
        {@code StackTraceElement}; {@code false} otherwise.
@see #hashCode"
      end

      operation 392859 "getClassName"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the fully qualified name of the class belonging to this
{@code StackTraceElement}.

@return the fully qualified type name of the class"
      end

      operation 392987 "getFileName"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the Java source file containing class belonging to
this {@code StackTraceElement}.

@return the name of the file, or {@code null} if this information is not
        available."
      end

      operation 393115 "getLineNumber"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the line number in the source for the class belonging to this
{@code StackTraceElement}.

@return the line number, or a negative number if this information is not
        available."
      end

      operation 393243 "getMethodName"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the method belonging to this {@code
StackTraceElement}.

@return the name of the method, or \"<unknown method>\" if this information
        is not available."
      end

      operation 393371 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 393499 "isNativeMethod"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates if the method name returned by {@link #getMethodName()} is
implemented as a native method.

@return {@code true} if the method in which this stack trace element is
        executing is a native method; {@code false} otherwise."
      end

      operation 393627 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 138523 "ClassLoader"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Loads classes and resources from a repository. One or more class loaders are
installed at runtime. These are consulted whenever the runtime system needs a
specific class that is not yet available in-memory. Typically, class loaders
are grouped into a tree where child class loaders delegate all requests to
parent class loaders. Only if the parent class loader cannot satisfy the
request, the child class loader itself tries to handle it.
<p>
{@code ClassLoader} is an abstract class that implements the common
infrastructure required by all class loaders. Android provides several
concrete implementations of the class, with
{@link dalvik.system.PathClassLoader} being the one typically used. Other
applications may implement subclasses of {@code ClassLoader} to provide
special ways for loading classes.
</p>
@see Class"
      class 151067 "SystemClassLoader"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 188443 // loader (<unidirectional association>)
	  relation 188443 --->
	    a role_name "loader" init_value " ClassLoader.createSystemClassLoader()" class_relation public
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 188443 // loader (<unidirectional association>)
	    b parent class_ref 138523 // ClassLoader
	end
      end

      classrelation 188571 // parent (<unidirectional association>)
	relation 188571 --->
	  a role_name "parent" private
	    comment "
The parent ClassLoader.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 188571 // parent (<unidirectional association>)
	  b parent class_ref 138523 // ClassLoader
      end

      classrelation 188699 // packages (<unidirectional association>)
	relation 188699 --->
	  a role_name "packages" init_value " new HashMap<String, Package>()" private
	    comment "
The packages known to the class loader.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, Package> ${name}${value};
"
	    classrelation_ref 188699 // packages (<unidirectional association>)
	  b parent class_ref 129819 // Map
      end

      operation 317851 "createSystemClassLoader"
	class_operation private return_type class_ref 138523 // ClassLoader
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create the system class loader. Note this is NOT the bootstrap class
loader (which is managed by the VM). We use a null value for the parent
to indicate that the bootstrap loader is our parent."
      end

      operation 317979 "getSystemClassLoader"
	class_operation public return_type class_ref 138523 // ClassLoader
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the system class loader. This is the parent for new
{@code ClassLoader} instances and is typically the class loader used to
start the application."
      end

      operation 318107 "getSystemResource"
	class_operation public return_type class_ref 140443 // URL
	nparams 1
	  param inout name "resName" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finds the URL of the resource with the specified name. The system class
loader's resource lookup algorithm is used to find the resource.

@return the {@code URL} object for the requested resource or {@code null}
        if the resource can not be found.
@param resName
           the name of the resource to find.
@see Class#getResource"
      end

      operation 318235 "getSystemResources"
	class_operation public return_type class_ref 145947 // Enumeration
	nparams 1
	  param inout name "resName" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<URL> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an enumeration of URLs for the resource with the specified name.
The system class loader's resource lookup algorithm is used to find the
resource.

@return an enumeration of {@code URL} objects containing the requested
        resources.
@param resName
           the name of the resource to find.
@throws IOException
            if an I/O error occurs."
      end

      operation 318363 "getSystemResourceAsStream"
	class_operation public return_type class_ref 131867 // InputStream
	nparams 1
	  param inout name "resName" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a stream for the resource with the specified name. The system
class loader's resource lookup algorithm is used to find the resource.
Basically, the contents of the java.class.path are searched in order,
looking for a path which matches the specified resource.

@return a stream for the resource or {@code null}.
@param resName
           the name of the resource to find.
@see Class#getResourceAsStream"
      end

      operation 318491 "ClassLoader"
	protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of this class with the system class loader as
its parent."
      end

      operation 318619 "ClassLoader"
	protected explicit_return_type ""
	nparams 1
	  param inout name "parentLoader" type class_ref 138523 // ClassLoader
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of this class with the specified class loader
as its parent.

@param parentLoader
           The {@code ClassLoader} to use as the new class loader's
           parent."
      end

      operation 318747 "ClassLoader"
	package explicit_return_type ""
	nparams 2
	  param inout name "parentLoader" type class_ref 138523 // ClassLoader
	  param inout name "nullAllowed" explicit_type "boolean"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "constructor for the BootClassLoader which needs parent to be null."
      end

      operation 318875 "defineClass"
	protected return_type class_ref 3421708 // Class
	nparams 3
	  param inout name "classRep" explicit_type "byte"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  exception class_ref 150939 // ClassFormatError
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Constructs a new class from an array of bytes containing a class
definition in class file format.

@param classRep
           the memory image of a class file.
@param offset
           the offset into {@code classRep}.
@param length
           the length of the class file.
@return the {@code Class} object created from the specified subset of
        data in {@code classRep}.
@throws ClassFormatError
            if {@code classRep} does not contain a valid class.
@throws IndexOutOfBoundsException
            if {@code offset < 0}, {@code length < 0} or if
            {@code offset + length} is greater than the length of
            {@code classRep}.
@deprecated Use {@link #defineClass(String, byte[], int, int)}"
      end

      operation 319003 "defineClass"
	protected return_type class_ref 3421708 // Class
	nparams 4
	  param inout name "className" type class_ref 3399692 // String
	  param inout name "classRep" explicit_type "byte"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  exception class_ref 150939 // ClassFormatError
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new class from an array of bytes containing a class
definition in class file format.

@param className
           the expected name of the new class, may be {@code null} if not
           known.
@param classRep
           the memory image of a class file.
@param offset
           the offset into {@code classRep}.
@param length
           the length of the class file.
@return the {@code Class} object created from the specified subset of
        data in {@code classRep}.
@throws ClassFormatError
            if {@code classRep} does not contain a valid class.
@throws IndexOutOfBoundsException
            if {@code offset < 0}, {@code length < 0} or if
            {@code offset + length} is greater than the length of
            {@code classRep}."
      end

      operation 319131 "defineClass"
	protected return_type class_ref 3421708 // Class
	nparams 5
	  param inout name "className" type class_ref 3399692 // String
	  param inout name "classRep" explicit_type "byte"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	  param inout name "protectionDomain" type class_ref 150171 // ProtectionDomain
	nexceptions 1
	  exception class_ref 150939 // ClassFormatError
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new class from an array of bytes containing a class
definition in class file format and assigns the specified protection
domain to the new class. If the provided protection domain is
{@code null} then a default protection domain is assigned to the class.

@param className
           the expected name of the new class, may be {@code null} if not
           known.
@param classRep
           the memory image of a class file.
@param offset
           the offset into {@code classRep}.
@param length
           the length of the class file.
@param protectionDomain
           the protection domain to assign to the loaded class, may be
           {@code null}.
@return the {@code Class} object created from the specified subset of
        data in {@code classRep}.
@throws ClassFormatError
            if {@code classRep} does not contain a valid class.
@throws IndexOutOfBoundsException
            if {@code offset < 0}, {@code length < 0} or if
            {@code offset + length} is greater than the length of
            {@code classRep}.
@throws NoClassDefFoundError
            if {@code className} is not equal to the name of the class
            contained in {@code classRep}."
      end

      operation 319259 "defineClass"
	protected return_type class_ref 3421708 // Class
	nparams 3
	  param inout name "name" type class_ref 3399692 // String
	  param inout name "b" type class_ref 142363 // ByteBuffer
	  param inout name "protectionDomain" type class_ref 150171 // ProtectionDomain
	nexceptions 1
	  exception class_ref 150939 // ClassFormatError
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Defines a new class with the specified name, byte code from the byte
buffer and the optional protection domain. If the provided protection
domain is {@code null} then a default protection domain is assigned to
the class.

@param name
           the expected name of the new class, may be {@code null} if not
           known.
@param b
           the byte buffer containing the byte code of the new class.
@param protectionDomain
           the protection domain to assign to the loaded class, may be
           {@code null}.
@return the {@code Class} object created from the data in {@code b}.
@throws ClassFormatError
            if {@code b} does not contain a valid class.
@throws NoClassDefFoundError
            if {@code className} is not equal to the name of the class
            contained in {@code b}."
      end

      operation 319387 "findClass"
	protected return_type class_ref 3421708 // Class
	nparams 1
	  param inout name "className" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 128795 // ClassNotFoundException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Overridden by subclasses, throws a {@code ClassNotFoundException} by
default. This method is called by {@code loadClass} after the parent
{@code ClassLoader} has failed to find a loaded class of the same name.

@param className
           the name of the class to look for.
@return the {@code Class} object that is found.
@throws ClassNotFoundException
            if the class cannot be found."
      end

      operation 319515 "findLoadedClass"
	protected return_type class_ref 3421708 // Class
	nparams 1
	  param inout name "className" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the class with the specified name if it has already been loaded
by the VM or {@code null} if it has not yet been loaded.

@param className
           the name of the class to look for.
@return the {@code Class} object or {@code null} if the requested class
        has not been loaded."
      end

      operation 319643 "findSystemClass"
	protected return_type class_ref 3421708 // Class
	nparams 1
	  param inout name "className" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 128795 // ClassNotFoundException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finds the class with the specified name, loading it using the system
class loader if necessary.

@param className
           the name of the class to look for.
@return the {@code Class} object with the requested {@code className}.
@throws ClassNotFoundException
            if the class can not be found."
      end

      operation 319771 "getParent"
	public return_type class_ref 138523 // ClassLoader
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns this class loader's parent.

@return this class loader's parent or {@code null}."
      end

      operation 319899 "getResource"
	public return_type class_ref 140443 // URL
	nparams 1
	  param inout name "resName" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the URL of the resource with the specified name. This
implementation first tries to use the parent class loader to find the
resource; if this fails then {@link #findResource(String)} is called to
find the requested resource.

@param resName
           the name of the resource to find.
@return the {@code URL} object for the requested resource or {@code null}
        if the resource can not be found
@see Class#getResource"
      end

      operation 320027 "getResources"
	public return_type class_ref 145947 // Enumeration
	nparams 1
	  param inout name "resName" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<URL> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Returns an enumeration of URLs for the resource with the specified name.
This implementation first uses this class loader's parent to find the
resource, then it calls {@link #findResources(String)} to get additional
URLs. The returned enumeration contains the {@code URL} objects of both
find operations.

@return an enumeration of {@code URL} objects for the requested resource.
@param resName
           the name of the resource to find.
@throws IOException
            if an I/O error occurs."
      end

      operation 320155 "getResourceAsStream"
	public return_type class_ref 131867 // InputStream
	nparams 1
	  param inout name "resName" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a stream for the resource with the specified name. See
{@link #getResource(String)} for a description of the lookup algorithm
used to find the resource.

@return a stream for the resource or {@code null} if the resource can not be found
@param resName
           the name of the resource to find.
@see Class#getResourceAsStream"
      end

      operation 320283 "loadClass"
	public return_type class_ref 3421708 // Class
	nparams 1
	  param inout name "className" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 128795 // ClassNotFoundException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Loads the class with the specified name. Invoking this method is
equivalent to calling {@code loadClass(className, false)}.
<p>
<strong>Note:</strong> In the Android reference implementation, the
second parameter of {@link #loadClass(String, boolean)} is ignored
anyway.
</p>

@return the {@code Class} object.
@param className
           the name of the class to look for.
@throws ClassNotFoundException
            if the class can not be found."
      end

      operation 320411 "loadClass"
	protected return_type class_ref 3421708 // Class
	nparams 2
	  param inout name "className" type class_ref 3399692 // String
	  param inout name "resolve" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 128795 // ClassNotFoundException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Loads the class with the specified name, optionally linking it after
loading. The following steps are performed:
<ol>
<li> Call {@link #findLoadedClass(String)} to determine if the requested
class has already been loaded.</li>
<li>If the class has not yet been loaded: Invoke this method on the
parent class loader.</li>
<li>If the class has still not been loaded: Call
{@link #findClass(String)} to find the class.</li>
</ol>
<p>
<strong>Note:</strong> In the Android reference implementation, the
{@code resolve} parameter is ignored; classes are never linked.
</p>

@return the {@code Class} object.
@param className
           the name of the class to look for.
@param resolve
           Indicates if the class should be resolved after loading. This
           parameter is ignored on the Android reference implementation;
           classes are not resolved.
@throws ClassNotFoundException
            if the class can not be found."
      end

      operation 320539 "resolveClass"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "clazz" type class_ref 3421708 // Class
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Forces a class to be linked (initialized). If the class has already been
linked this operation has no effect.
<p>
<strong>Note:</strong> In the Android reference implementation, this
method has no effect.
</p>

@param clazz
           the class to link."
      end

      operation 320667 "findResource"
	protected return_type class_ref 140443 // URL
	nparams 1
	  param inout name "resName" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finds the URL of the resource with the specified name. This
implementation just returns {@code null}; it should be overridden in
subclasses.

@param resName
           the name of the resource to find.
@return the {@code URL} object for the requested resource."
      end

      operation 320795 "findResources"
	protected return_type class_ref 145947 // Enumeration
	nparams 1
	  param inout name "resName" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<URL> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings( {
            \"unchecked\", \"unused\"
    })
"
	
	
	
	comment "Finds an enumeration of URLs for the resource with the specified name.
This implementation just returns an empty {@code Enumeration}; it should
be overridden in subclasses.

@param resName
           the name of the resource to find.
@return an enumeration of {@code URL} objects for the requested resource.
@throws IOException
            if an I/O error occurs."
      end

      operation 320923 "findLibrary"
	protected return_type class_ref 3399692 // String
	nparams 1
	  param inout name "libName" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the absolute path of the native library with the specified name,
or {@code null}. If this method returns {@code null} then the virtual
machine searches the directories specified by the system property
\"java.library.path\".
<p>
This implementation always returns {@code null}.
</p>

@param libName
           the name of the library to find.
@return the absolute path of the library."
      end

      operation 321051 "getPackage"
	protected return_type class_ref 150555 // Package
	nparams 1
	  param inout name "name" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the package with the specified name. Package information is
searched in this class loader.

@param name
           the name of the package to find.
@return the package with the requested name; {@code null} if the package
        can not be found."
      end

      operation 321179 "getPackages"
	protected return_type class_ref 150555 // Package
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns all the packages known to this class loader.

@return an array with all packages known to this class loader."
      end

      operation 321307 "definePackage"
	protected return_type class_ref 150555 // Package
	nparams 8
	  param inout name "name" type class_ref 3399692 // String
	  param inout name "specTitle" type class_ref 3399692 // String
	  param inout name "specVersion" type class_ref 3399692 // String
	  param inout name "specVendor" type class_ref 3399692 // String
	  param inout name "implTitle" type class_ref 3399692 // String
	  param inout name "implVersion" type class_ref 3399692 // String
	  param inout name "implVendor" type class_ref 3399692 // String
	  param inout name "sealBase" type class_ref 140443 // URL
	nexceptions 1
	  exception class_ref 128283 // IllegalArgumentException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Defines and returns a new {@code Package} using the specified
information. If {@code sealBase} is {@code null}, the package is left
unsealed. Otherwise, the package is sealed using this URL.

@param name
           the name of the package.
@param specTitle
           the title of the specification.
@param specVersion
           the version of the specification.
@param specVendor
           the vendor of the specification.
@param implTitle
           the implementation title.
@param implVersion
           the implementation version.
@param implVendor
           the specification vendor.
@param sealBase
           the URL used to seal this package or {@code null} to leave the
           package unsealed.
@return the {@code Package} object that has been created.
@throws IllegalArgumentException
            if a package with the specified name already exists."
      end

      operation 321435 "setSigners"
	protected explicit_return_type "void"
	nparams 2
	  param inout name "c" type class_ref 3421708 // Class
	  param inout name "signers" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the signers of the specified class. This implementation does
nothing.

@param c
           the {@code Class} object for which to set the signers.
@param signers
           the signers for {@code c}."
      end

      operation 321563 "setClassAssertionStatus"
	public explicit_return_type "void"
	nparams 2
	  param inout name "cname" type class_ref 3399692 // String
	  param inout name "enable" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the assertion status of the class with the specified name.
<p>
<strong>Note: </strong>This method does nothing in the Android reference
implementation.
</p>

@param cname
           the name of the class for which to set the assertion status.
@param enable
           the new assertion status."
      end

      operation 321691 "setPackageAssertionStatus"
	public explicit_return_type "void"
	nparams 2
	  param inout name "pname" type class_ref 3399692 // String
	  param inout name "enable" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the assertion status of the package with the specified name.
<p>
<strong>Note: </strong>This method does nothing in the Android reference
implementation.
</p>

@param pname
           the name of the package for which to set the assertion status.
@param enable
           the new assertion status."
      end

      operation 321819 "setDefaultAssertionStatus"
	public explicit_return_type "void"
	nparams 1
	  param inout name "enable" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the default assertion status for this class loader.
<p>
<strong>Note: </strong>This method does nothing in the Android reference
implementation.
</p>

@param enable
           the new assertion status."
      end

      operation 321947 "clearAssertionStatus"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the default assertion status for this class loader to {@code false}
and removes any package default and class assertion status settings.
<p>
<strong>Note:</strong> This method does nothing in the Android reference
implementation.
</p>"
      end
    end

    class 139675 "Comparable"
      visibility public stereotype "interface"
      nformals 1
      formal name "T" type "" explicit_default_value ""
        explicit_extends ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This interface should be implemented by all classes that wish to define a
<em>natural order</em> of their instances.
{@link java.util.Collections#sort} and {@code java.util.Arrays#sort} can then
be used to automatically sort lists of classes that implement this interface.
<p>
The order rule must be both transitive (if {@code x.compareTo(y) < 0} and
{@code y.compareTo(z) < 0}, then {@code x.compareTo(z) < 0} must hold) and
invertible (the sign of the result of x.compareTo(y) must be equal to the
negation of the sign of the result of y.compareTo(x) for all combinations of
x and y).
<p>
In addition, it is recommended (but not required) that if and only if the
result of x.compareTo(y) is zero, then the result of x.equals(y) should be
{@code true}."
      operation 208795 "compareTo"
	public explicit_return_type "int"
	nparams 1
	  param inout name "another" explicit_type "T"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares this object to the specified object to determine their relative
order.

@param another
           the object to compare to this instance.
@return a negative integer if this instance is less than {@code another};
        a positive integer if this instance is greater than
        {@code another}; 0 if this instance has the same order as
        {@code another}.
@throws ClassCastException
            if {@code another} cannot be converted into something
            comparable to {@code this} instance."
      end
    end

    class 141723 "SecurityException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Thrown when a security manager check fails."
      classrelation 203547 // <generalisation>
	relation 203547 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 203547 // <generalisation>
	  b parent class_ref 806284 // RuntimeException
      end

      attribute 186395 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 6878364983674394167L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 383643 "SecurityException"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code SecurityException} that includes the current
stack trace."
      end

      operation 383771 "SecurityException"
	public explicit_return_type ""
	nparams 1
	  param inout name "detailMessage" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code SecurityException} with the current stack trace
and the specified detail message.

@param detailMessage
           the detail message for this exception."
      end

      operation 383899 "SecurityException"
	public explicit_return_type ""
	nparams 2
	  param inout name "message" type class_ref 3399692 // String
	  param inout name "cause" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code SecurityException} with the current stack trace,
the specified detail message and the specified cause.

@param message
           the detail message for this exception.
@param cause
           the optional cause of this exception, may be {@code null}.
@since 1.5"
      end

      operation 384027 "SecurityException"
	public explicit_return_type ""
	nparams 1
	  param inout name "cause" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code SecurityException} with the current stack trace
and the specified cause.

@param cause
           the optional cause of this exception, may be {@code null}.
@since 1.5"
      end
    end

    class 143643 "Error"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "{@code Error} is the superclass of all classes that represent unrecoverable
errors. When errors are thrown, they should not be caught by application
code.

@see Throwable
@see Exception
@see RuntimeException"
      classrelation 157467 // <generalisation>
	relation 157467 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 157467 // <generalisation>
	  b parent class_ref 134683 // Throwable
      end

      attribute 147355 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 4980196508277280342L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 230427 "Error"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code Error} that includes the current stack trace."
      end

      operation 230555 "Error"
	public explicit_return_type ""
	nparams 1
	  param inout name "detailMessage" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code Error} with the current stack trace and the
specified detail message.

@param detailMessage
           the detail message for this error."
      end

      operation 230683 "Error"
	public explicit_return_type ""
	nparams 2
	  param inout name "detailMessage" type class_ref 3399692 // String
	  param inout name "throwable" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code Error} with the current stack trace, the
specified detail message and the specified cause.

@param detailMessage
           the detail message for this error.
@param throwable
           the cause of this error."
      end

      operation 230811 "Error"
	public explicit_return_type ""
	nparams 1
	  param inout name "throwable" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code Error} with the current stack trace and the
specified cause.

@param throwable
           the cause of this error."
      end
    end

    class 144539 "ThreadLocal"
      visibility public 
      nformals 1
      formal name "T" type "" explicit_default_value ""
        explicit_extends ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Implements a thread-local storage, that is, a variable for which each thread
has its own value. All threads share the same {@code ThreadLocal} object,
but each sees a different value when accessing it, and changes made by one
thread do not affect the other threads. The implementation supports
{@code null} values.

@see java.lang.Thread
@author Bob Lee"
      operation 341403 "ThreadLocal"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Thanks to Josh Bloch and Doug Lea for code reviews and impl advice. 

Creates a new thread-local variable."
      end

      operation 341531 "get"
	public explicit_return_type "T"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Returns the value of this variable for the current thread. If an entry
doesn't yet exist for this variable on this thread, this method will
create an entry, populating the value with the result of
{@link #initialValue()}.

@return the current value of the variable for the calling thread."
      end

      operation 341659 "initialValue"
	protected explicit_return_type "T"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Provides the initial value of this variable for the current thread.
The default implementation returns {@code null}.

@return the initial value of the variable."
      end

      operation 341787 "set"
	public explicit_return_type "void"
	nparams 1
	  param inout name "value" explicit_type "T"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the value of this variable for the current thread. If set to
{@code null}, the value will be set to null and the underlying entry will
still be present.

@param value the new value of the variable for the caller thread."
      end

      operation 341915 "remove"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the entry for this variable in the current thread. If this call
is followed by a {@link #get()} before a {@link #set},
{@code #get()} will call {@link #initialValue()} and create a new
entry with the resulting value.

@since 1.5"
      end

      class 154651 "Values"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 179995 "INITIAL_SIZE"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 16"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "Size must always be a power of 2.
"
	end

	classrelation 194843 // TOMBSTONE (<unidirectional association>)
	  relation 194843 --->
	    a role_name "TOMBSTONE" init_value " new Object()" class_relation const_relation private
	      comment "
Placeholder for deleted entries.

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 194843 // TOMBSTONE (<unidirectional association>)
	    b parent class_ref 3401484 // Object
	end

	classrelation 194971 // table (<unidirectional association>)
	  relation 194971 --->
	    a role_name "table" multiplicity "[]" private
	      comment "
Map entries. Contains alternating keys (ThreadLocal) and values.
The length is always a power of 2.

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 194971 // table (<unidirectional association>)
	    b parent class_ref 3401484 // Object
	end

	attribute 180123 "mask"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Used to turn hashes into indices. "
	end

	attribute 180251 "size"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Number of live entries. "
	end

	attribute 180379 "tombstones"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Number of tombstones. "
	end

	attribute 180507 "maximumLoad"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Maximum number of live entries and tombstones. "
	end

	attribute 180635 "clean"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Points to the next cell to clean up. "
	end

	operation 342299 "Values"
	  package explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Constructs a new, empty instance."
	end

	operation 342427 "Values"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "fromParent" type class_ref 154651 // Values
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Used for InheritableThreadLocals."
	end

	operation 342555 "inheritValues"
	  private explicit_return_type "void"
	  nparams 1
	    param inout name "fromParent" type class_ref 154651 // Values
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@SuppressWarnings({\"unchecked\"})
"
	  
	  
	  
	  comment "Inherits values from a parent thread."
	end

	operation 342683 "initializeTable"
	  private explicit_return_type "void"
	  nparams 1
	    param in name "capacity" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Creates a new, empty table with the given capacity."
	end

	operation 342811 "cleanUp"
	  private explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Cleans up after garbage-collected thread locals."
	end

	operation 342939 "rehash"
	  private explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Rehashes the table, expanding or contracting it as necessary.
Gets rid of tombstones. Returns true if a rehash occurred.
We must rehash every time we fill a null slot; we depend on the
presence of null slots to end searches (otherwise, we'll infinitely
loop)."
	end

	operation 343067 "add"
	  package explicit_return_type "void"
	  nparams 2
	    param inout name "key" type class_ref 144539 // ThreadLocal
	    param inout name "value" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Adds an entry during rehashing. Compared to put(), this method
doesn't have to clean up, check for existing entries, account for
tombstones, etc."
	end

	operation 343195 "put"
	  package explicit_return_type "void"
	  nparams 2
	    param inout name "key" type class_ref 144539 // ThreadLocal
	    param inout name "value" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets entry for given ThreadLocal to given value, creating an
entry if necessary."
	end

	operation 343323 "getAfterMiss"
	  package return_type class_ref 3401484 // Object
	  nparams 1
	    param inout name "key" type class_ref 144539 // ThreadLocal
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets value for given ThreadLocal after not finding it in the first
slot."
	end

	operation 343451 "remove"
	  package explicit_return_type "void"
	  nparams 1
	    param inout name "key" type class_ref 144539 // ThreadLocal
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Removes entry for the given ThreadLocal."
	end

	operation 343579 "next"
	  private explicit_return_type "int"
	  nparams 1
	    param in name "index" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the next index. If we're at the end of the table, we wrap back
around to 0."
	end
      end

      operation 342043 "initializeValues"
	package return_type class_ref 154651 // Values
	nparams 1
	  param inout name "current" type class_ref 1201420 // Thread
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates Values instance for this thread and variable type."
      end

      operation 342171 "values"
	package return_type class_ref 154651 // Values
	nparams 1
	  param inout name "current" type class_ref 1201420 // Thread
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets Values instance for this thread and variable type."
      end

      classrelation 194587 // reference (<unidirectional association>)
	relation 194587 --->
	  a role_name "reference" init_value " new WeakReference<ThreadLocal<T>>(this)" const_relation private
	    comment " Weak reference to this thread local instance. 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<ThreadLocal<T>> ${name}${value};
"
	    classrelation_ref 194587 // reference (<unidirectional association>)
	  b parent class_ref 152219 // Reference
      end

      classrelation 194715 // hashCounter (<unidirectional association>)
	relation 194715 --->
	  a role_name "hashCounter" init_value " new AtomicInteger(0)" class_relation private
	    comment " Hash counter. 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 194715 // hashCounter (<unidirectional association>)
	  b parent class_ref 154779 // AtomicInteger
      end

      attribute 179867 "hash"
	const_attribute private explicit_type "int"
	init_value " hashCounter.getAndAdd(0x61c88647 * 2)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Internal hash. We deliberately don't bother with #hashCode().
Hashes must be even. This ensures that the result of
(hash & (table.length - 1)) points to a key and not a value.

We increment by Doug Lea's Magic Number(TM) (*2 since keys are in
every other bucket) to help prevent clustering.
"
      end
    end

    class 146715 "StringBuffer"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A modifiable {@link CharSequence sequence of characters} for use in creating
strings, where all accesses are synchronized. This class has mostly been replaced
by {@link StringBuilder} because this synchronization is rarely useful. This
class is mainly used to interact with legacy APIs that expose it.

<p>For particularly complex string-building needs, consider {@link java.util.Formatter}.

<p>The majority of the modification methods on this class return {@code
this} so that method calls can be chained together. For example:
{@code new StringBuffer(\"a\").append(\"b\").append(\"c\").toString()}.

@see CharSequence
@see Appendable
@see StringBuilder
@see String
@see String#format
@since 1.0"
      classrelation 205595 // <generalisation>
	relation 205595 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 205595 // <generalisation>
	  b parent class_ref 147355 // AbstractStringBuilder
      end

      classrelation 205723 // <realization>
	relation 205723 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 205723 // <realization>
	  b parent class_ref 133659 // Appendable
      end

      classrelation 205851 // <realization>
	relation 205851 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 205851 // <realization>
	  b parent class_ref 128155 // Serializable
      end

      classrelation 205979 // <realization>
	relation 205979 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 205979 // <realization>
	  b parent class_ref 133787 // CharSequence
      end

      attribute 189083 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 3388685877147921107L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 206107 // serialPersistentFields (<unidirectional association>)
	relation 206107 --->
	  a role_name "serialPersistentFields" multiplicity "[]" init_value " {
        new ObjectStreamField(\"count\", int.class),
        new ObjectStreamField(\"shared\", boolean.class),
        new ObjectStreamField(\"value\", char[].class),
    }" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 206107 // serialPersistentFields (<unidirectional association>)
	  b parent class_ref 131355 // ObjectStreamField
      end

      operation 413595 "StringBuffer"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new StringBuffer using the default capacity which is 16."
      end

      operation 413723 "StringBuffer"
	public explicit_return_type ""
	nparams 1
	  param in name "capacity" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new StringBuffer using the specified capacity.

@param capacity
           the initial capacity."
      end

      operation 413851 "StringBuffer"
	public explicit_return_type ""
	nparams 1
	  param inout name "string" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new StringBuffer containing the characters in the specified
string. The capacity of the new buffer will be the length of the
{@code String} plus the default capacity.

@param string
           the string content with which to initialize the new instance.
@throws NullPointerException
           if {@code string} is {@code null}."
      end

      operation 413979 "StringBuffer"
	public explicit_return_type ""
	nparams 1
	  param inout name "cs" type class_ref 133787 // CharSequence
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a StringBuffer and initializes it with the content from the
specified {@code CharSequence}. The capacity of the new buffer will be
the length of the {@code CharSequence} plus the default capacity.

@param cs
           the content to initialize the instance.
@throws NullPointerException
           if {@code cs} is {@code null}.
@since 1.5"
      end

      operation 414107 "append"
	public return_type class_ref 146715 // StringBuffer
	nparams 1
	  param inout name "b" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the string representation of the specified boolean to the end of
this StringBuffer.
<p>
If the argument is {@code true} the string {@code \"true\"} is appended,
otherwise the string {@code \"false\"} is appended.

@param b
           the boolean to append.
@return this StringBuffer.
@see String#valueOf(boolean)"
      end

      operation 414235 "append"
	public return_type class_ref 146715 // StringBuffer
	nparams 1
	  param in name "ch" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified character to the end of this buffer.

@param ch
           the character to append.
@return this StringBuffer.
@see String#valueOf(char)"
      end

      operation 414363 "append"
	public return_type class_ref 146715 // StringBuffer
	nparams 1
	  param in name "d" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the string representation of the specified double to the end of this
StringBuffer.

@param d
           the double to append.
@return this StringBuffer.
@see String#valueOf(double)"
      end

      operation 414491 "append"
	public return_type class_ref 146715 // StringBuffer
	nparams 1
	  param in name "f" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the string representation of the specified float to the end of this
StringBuffer.

@param f
           the float to append.
@return this StringBuffer.
@see String#valueOf(float)"
      end

      operation 414619 "append"
	public return_type class_ref 146715 // StringBuffer
	nparams 1
	  param in name "i" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the string representation of the specified integer to the end of
this StringBuffer.

@param i
           the integer to append.
@return this StringBuffer.
@see String#valueOf(int)"
      end

      operation 414747 "append"
	public return_type class_ref 146715 // StringBuffer
	nparams 1
	  param in name "l" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the string representation of the specified long to the end of this
StringBuffer.

@param l
           the long to append.
@return this StringBuffer.
@see String#valueOf(long)"
      end

      operation 414875 "append"
	public return_type class_ref 146715 // StringBuffer
	nparams 1
	  param inout name "obj" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the string representation of the specified object to the end of this
StringBuffer.
<p>
If the specified object is {@code null} the string {@code \"null\"} is
appended, otherwise the objects {@code toString} is used to get its
string representation.

@param obj
           the object to append (may be null).
@return this StringBuffer.
@see String#valueOf(Object)"
      end

      operation 415003 "append"
	public return_type class_ref 146715 // StringBuffer
	nparams 1
	  param inout name "string" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified string to the end of this buffer.
<p>
If the specified string is {@code null} the string {@code \"null\"} is
appended, otherwise the contents of the specified string is appended.

@param string
           the string to append (may be null).
@return this StringBuffer."
      end

      operation 415131 "append"
	public return_type class_ref 146715 // StringBuffer
	nparams 1
	  param inout name "sb" type class_ref 146715 // StringBuffer
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified StringBuffer to the end of this buffer.
<p>
If the specified StringBuffer is {@code null} the string {@code \"null\"}
is appended, otherwise the contents of the specified StringBuffer is
appended.

@param sb
           the StringBuffer to append (may be null).
@return this StringBuffer.

@since 1.4"
      end

      operation 415259 "append"
	public return_type class_ref 146715 // StringBuffer
	nparams 1
	  param inout name "chars" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the character array to the end of this buffer.

@param chars
           the character array to append.
@return this StringBuffer.
@throws NullPointerException
           if {@code chars} is {@code null}."
      end

      operation 415387 "append"
	public return_type class_ref 146715 // StringBuffer
	nparams 3
	  param inout name "chars" explicit_type "char"
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified sequence of characters to the end of this buffer.

@param chars
           the character array to append.
@param start
           the starting offset.
@param length
           the number of characters.
@return this StringBuffer.
@throws ArrayIndexOutOfBoundsException
            if {@code length < 0} , {@code start < 0} or {@code start +
            length > chars.length}.
@throws NullPointerException
           if {@code chars} is {@code null}."
      end

      operation 415515 "append"
	public return_type class_ref 146715 // StringBuffer
	nparams 1
	  param inout name "s" type class_ref 133787 // CharSequence
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Appends the specified CharSequence to this buffer.
<p>
If the specified CharSequence is {@code null} the string {@code \"null\"}
is appended, otherwise the contents of the specified CharSequence is
appended.

@param s
           the CharSequence to append.
@return this StringBuffer.
@since 1.5"
      end

      operation 415643 "append"
	public return_type class_ref 146715 // StringBuffer
	nparams 3
	  param inout name "s" type class_ref 133787 // CharSequence
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Appends the specified subsequence of the CharSequence to this buffer.
<p>
If the specified CharSequence is {@code null}, then the string {@code
\"null\"} is used to extract a subsequence.

@param s
           the CharSequence to append.
@param start
           the inclusive start index.
@param end
           the exclusive end index.
@return this StringBuffer.
@throws IndexOutOfBoundsException
            if {@code start} or {@code end} are negative, {@code start}
            is greater than {@code end} or {@code end} is greater than
            the length of {@code s}.
@since 1.5"
      end

      operation 415771 "appendCodePoint"
	public return_type class_ref 146715 // StringBuffer
	nparams 1
	  param in name "codePoint" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Appends the string representation of the specified Unicode code point to
the end of this buffer.
<p>
The code point is converted to a {@code char[]} as defined by
{@link Character#toChars(int)}.

@param codePoint
           the Unicode code point to encode and append.
@return this StringBuffer.
@see Character#toChars(int)
@since 1.5"
      end

      operation 415899 "charAt"
	public explicit_return_type "char"
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 416027 "codePointAt"
	public explicit_return_type "int"
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 416155 "codePointBefore"
	public explicit_return_type "int"
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 416283 "codePointCount"
	public explicit_return_type "int"
	nparams 2
	  param in name "beginIndex" explicit_type "int"
	  param in name "endIndex" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 416411 "delete"
	public return_type class_ref 146715 // StringBuffer
	nparams 2
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Deletes a range of characters.

@param start
           the offset of the first character.
@param end
           the offset one past the last character.
@return this StringBuffer.
@throws StringIndexOutOfBoundsException
            if {@code start < 0}, {@code start > end} or {@code end >
            length()}."
      end

      operation 416539 "deleteCharAt"
	public return_type class_ref 146715 // StringBuffer
	nparams 1
	  param in name "location" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Deletes the character at the specified offset.

@param location
           the offset of the character to delete.
@return this StringBuffer.
@throws StringIndexOutOfBoundsException
            if {@code location < 0} or {@code location >= length()}"
      end

      operation 416667 "ensureCapacity"
	public explicit_return_type "void"
	nparams 1
	  param in name "min" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 416795 "getChars"
	public explicit_return_type "void"
	nparams 4
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	  param inout name "buffer" explicit_type "char"
	  param in name "idx" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Copies the requested sequence of characters to the {@code char[]} passed
starting at {@code idx}.

@param start
           the starting offset of characters to copy.
@param end
           the ending offset of characters to copy.
@param buffer
           the destination character array.
@param idx
           the starting offset in the character array.
@throws IndexOutOfBoundsException
            if {@code start < 0}, {@code end > length()}, {@code start >
            end}, {@code index < 0}, {@code end - start > buffer.length -
            index}"
      end

      operation 416923 "indexOf"
	public explicit_return_type "int"
	nparams 2
	  param inout name "subString" type class_ref 3399692 // String
	  param in name "start" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 417051 "insert"
	public return_type class_ref 146715 // StringBuffer
	nparams 2
	  param in name "index" explicit_type "int"
	  param in name "ch" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the character into this buffer at the specified offset.

@param index
           the index at which to insert.
@param ch
           the character to insert.
@return this buffer.
@throws ArrayIndexOutOfBoundsException
            if {@code index < 0} or {@code index > length()}."
      end

      operation 417179 "insert"
	public return_type class_ref 146715 // StringBuffer
	nparams 2
	  param in name "index" explicit_type "int"
	  param inout name "b" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the string representation of the specified boolean into this
buffer at the specified offset.

@param index
           the index at which to insert.
@param b
           the boolean to insert.
@return this buffer.
@throws StringIndexOutOfBoundsException
            if {@code index < 0} or {@code index > length()}."
      end

      operation 417307 "insert"
	public return_type class_ref 146715 // StringBuffer
	nparams 2
	  param in name "index" explicit_type "int"
	  param in name "i" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the string representation of the specified integer into this
buffer at the specified offset.

@param index
           the index at which to insert.
@param i
           the integer to insert.
@return this buffer.
@throws StringIndexOutOfBoundsException
            if {@code index < 0} or {@code index > length()}."
      end

      operation 417435 "insert"
	public return_type class_ref 146715 // StringBuffer
	nparams 2
	  param in name "index" explicit_type "int"
	  param in name "l" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the string representation of the specified long into this buffer
at the specified offset.

@param index
           the index at which to insert.
@param l
           the long to insert.
@return this buffer.
@throws StringIndexOutOfBoundsException
            if {@code index < 0} or {@code index > length()}."
      end

      operation 417563 "insert"
	public return_type class_ref 146715 // StringBuffer
	nparams 2
	  param in name "index" explicit_type "int"
	  param in name "d" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the string representation of the specified into this buffer
double at the specified offset.

@param index
           the index at which to insert.
@param d
           the double to insert.
@return this buffer.
@throws StringIndexOutOfBoundsException
            if {@code index < 0} or {@code index > length()}."
      end

      operation 417691 "insert"
	public return_type class_ref 146715 // StringBuffer
	nparams 2
	  param in name "index" explicit_type "int"
	  param in name "f" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the string representation of the specified float into this buffer
at the specified offset.

@param index
           the index at which to insert.
@param f
           the float to insert.
@return this buffer.
@throws StringIndexOutOfBoundsException
            if {@code index < 0} or {@code index > length()}."
      end

      operation 417819 "insert"
	public return_type class_ref 146715 // StringBuffer
	nparams 2
	  param in name "index" explicit_type "int"
	  param inout name "obj" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the string representation of the specified object into this
buffer at the specified offset.
<p>
If the specified object is {@code null}, the string {@code \"null\"} is
inserted, otherwise the objects {@code toString} method is used to get
its string representation.

@param index
           the index at which to insert.
@param obj
           the object to insert (may be null).
@return this buffer.
@throws StringIndexOutOfBoundsException
            if {@code index < 0} or {@code index > length()}."
      end

      operation 417947 "insert"
	public return_type class_ref 146715 // StringBuffer
	nparams 2
	  param in name "index" explicit_type "int"
	  param inout name "string" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the string into this buffer at the specified offset.
<p>
If the specified string is {@code null}, the string {@code \"null\"} is
inserted, otherwise the contents of the string is inserted.

@param index
           the index at which to insert.
@param string
           the string to insert (may be null).
@return this buffer.
@throws StringIndexOutOfBoundsException
            if {@code index < 0} or {@code index > length()}."
      end

      operation 418075 "insert"
	public return_type class_ref 146715 // StringBuffer
	nparams 2
	  param in name "index" explicit_type "int"
	  param inout name "chars" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the character array into this buffer at the specified offset.

@param index
           the index at which to insert.
@param chars
           the character array to insert.
@return this buffer.
@throws StringIndexOutOfBoundsException
            if {@code index < 0} or {@code index > length()}.
@throws NullPointerException
           if {@code chars} is {@code null}."
      end

      operation 418203 "insert"
	public return_type class_ref 146715 // StringBuffer
	nparams 4
	  param in name "index" explicit_type "int"
	  param inout name "chars" explicit_type "char"
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the specified subsequence of characters into this buffer at the
specified index.

@param index
           the index at which to insert.
@param chars
           the character array to insert.
@param start
           the starting offset.
@param length
           the number of characters.
@return this buffer.
@throws NullPointerException
            if {@code chars} is {@code null}.
@throws StringIndexOutOfBoundsException
            if {@code length < 0}, {@code start < 0}, {@code start +
            length > chars.length}, {@code index < 0} or {@code index >
            length()}"
      end

      operation 418331 "insert"
	public return_type class_ref 146715 // StringBuffer
	nparams 2
	  param in name "index" explicit_type "int"
	  param inout name "s" type class_ref 133787 // CharSequence
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the specified CharSequence into this buffer at the specified
index.
<p>
If the specified CharSequence is {@code null}, the string {@code \"null\"}
is inserted, otherwise the contents of the CharSequence.

@param index
           The index at which to insert.
@param s
           The char sequence to insert.
@return this buffer.
@throws IndexOutOfBoundsException
            if {@code index < 0} or {@code index > length()}.
@since 1.5"
      end

      operation 418459 "insert"
	public return_type class_ref 146715 // StringBuffer
	nparams 4
	  param in name "index" explicit_type "int"
	  param inout name "s" type class_ref 133787 // CharSequence
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the specified subsequence into this buffer at the specified
index.
<p>
If the specified CharSequence is {@code null}, the string {@code \"null\"}
is inserted, otherwise the contents of the CharSequence.

@param index
           The index at which to insert.
@param s
           The char sequence to insert.
@param start
           The inclusive start index in the char sequence.
@param end
           The exclusive end index in the char sequence.
@return this buffer.
@throws IndexOutOfBoundsException
            if {@code index} is negative or greater than the current
            length, {@code start} or {@code end} are negative, {@code
            start} is greater than {@code end} or {@code end} is greater
            than the length of {@code s}.
@since 1.5"
      end

      operation 418587 "lastIndexOf"
	public explicit_return_type "int"
	nparams 2
	  param inout name "subString" type class_ref 3399692 // String
	  param in name "start" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 418715 "offsetByCodePoints"
	public explicit_return_type "int"
	nparams 2
	  param in name "index" explicit_type "int"
	  param in name "codePointOffset" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 418843 "replace"
	public return_type class_ref 146715 // StringBuffer
	nparams 3
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	  param inout name "string" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Replaces the characters in the specified range with the contents of the
specified string.

@param start
           the inclusive begin index.
@param end
           the exclusive end index.
@param string
           the string that will replace the contents in the range.
@return this buffer.
@throws StringIndexOutOfBoundsException
            if {@code start} or {@code end} are negative, {@code start}
            is greater than {@code end} or {@code end} is greater than
            the length of {@code s}."
      end

      operation 418971 "reverse"
	public return_type class_ref 146715 // StringBuffer
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reverses the order of characters in this buffer.

@return this buffer."
      end

      operation 419099 "setCharAt"
	public explicit_return_type "void"
	nparams 2
	  param in name "index" explicit_type "int"
	  param in name "ch" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 419227 "setLength"
	public explicit_return_type "void"
	nparams 1
	  param in name "length" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 419355 "subSequence"
	public return_type class_ref 133787 // CharSequence
	nparams 2
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 419483 "substring"
	public return_type class_ref 3399692 // String
	nparams 1
	  param in name "start" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 419611 "substring"
	public return_type class_ref 3399692 // String
	nparams 2
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 419739 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 419867 "trimToSize"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 419995 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "out" type class_ref 128411 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 420123 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "in" type class_ref 128667 // ObjectInputStream
	nexceptions 2
	  exception class_ref 128539 // IOException
	  exception class_ref 128795 // ClassNotFoundException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 146971 "AbstractMethodError"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Thrown by the VM when an abstract method is called.
<p>
Note that this can only occur when inconsistent class files have been loaded,
since invoking an abstract method is a compile time error."
      classrelation 168219 // <generalisation>
	relation 168219 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 168219 // <generalisation>
	  b parent class_ref 147099 // IncompatibleClassChangeError
      end

      attribute 159131 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -1654391082989018462L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 275739 "AbstractMethodError"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code AbstractMethodError} that includes the current
stack trace."
      end

      operation 275867 "AbstractMethodError"
	public explicit_return_type ""
	nparams 1
	  param inout name "detailMessage" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code AbstractMethodError} with the current stack trace
and the specified detail message.

@param detailMessage
           the detail message for this error."
      end
    end

    class 147099 "IncompatibleClassChangeError"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "{@code IncompatibleClassChangeError} is the superclass of all classes which
represent errors that occur when inconsistent class files are loaded into
the same running image.

@see Error"
      classrelation 168091 // <generalisation>
	relation 168091 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 168091 // <generalisation>
	  b parent class_ref 147227 // LinkageError
      end

      attribute 159003 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -4914975503642802119L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 275483 "IncompatibleClassChangeError"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code IncompatibleClassChangeError} that includes the
current stack trace."
      end

      operation 275611 "IncompatibleClassChangeError"
	public explicit_return_type ""
	nparams 1
	  param inout name "detailMessage" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code IncompatibleClassChangeError} with the current
stack trace and the specified detail message.

@param detailMessage
           the detail message for this error."
      end
    end

    class 147227 "LinkageError"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "{@code LinkageError} is the superclass of all error classes that occur when
loading and linking class files.

@see Error"
      classrelation 167963 // <generalisation>
	relation 167963 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 167963 // <generalisation>
	  b parent class_ref 143643 // Error
      end

      attribute 158875 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 3579600108157160122L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 275099 "LinkageError"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code LinkageError} that includes the current stack
trace."
      end

      operation 275227 "LinkageError"
	public explicit_return_type ""
	nparams 1
	  param inout name "detailMessage" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code LinkageError} with the current stack trace and
the specified detail message.

@param detailMessage
           the detail message for this error."
      end

      operation 275355 "LinkageError"
	public explicit_return_type ""
	nparams 2
	  param inout name "detailMessage" type class_ref 3399692 // String
	  param inout name "cause" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code LinkageError} with the given detail message and cause.
@since 1.7
@hide 1.7"
      end
    end

    class 147355 "AbstractStringBuilder"
      abstract visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A modifiable {@link CharSequence sequence of characters} for use in creating
and modifying Strings. This class is intended as a base class for
{@link StringBuffer} and {@link StringBuilder}.

@see StringBuffer
@see StringBuilder
@since 1.5"
      attribute 159259 "INITIAL_CAPACITY"
	class_attribute const_attribute package explicit_type "int"
	init_value " 16"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 159387 "value"
	private explicit_type "char"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 159515 "count"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 159643 "shared"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 275995 "getValue"
	package explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the character array."
      end

      operation 276123 "shareValue"
	package explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the underlying buffer and sets the shared flag."
      end

      operation 276251 "set"
	package explicit_return_type "void"
	nparams 2
	  param inout name "val" explicit_type "char"
	  param in name "len" explicit_type "int"
	nexceptions 1
	  exception class_ref 129563 // InvalidObjectException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Restores internal state after deserialization."
      end

      operation 276379 "AbstractStringBuilder"
	package explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 276507 "AbstractStringBuilder"
	package explicit_return_type ""
	nparams 1
	  param in name "capacity" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 276635 "AbstractStringBuilder"
	package explicit_return_type ""
	nparams 1
	  param inout name "string" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 276763 "enlargeBuffer"
	private explicit_return_type "void"
	nparams 1
	  param in name "min" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 276891 "appendNull"
	package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 277019 "append0"
	package explicit_return_type "void"
	nparams 1
	  param inout name "chars" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 277147 "append0"
	package explicit_return_type "void"
	nparams 3
	  param inout name "chars" explicit_type "char"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 277275 "append0"
	package explicit_return_type "void"
	nparams 1
	  param in name "ch" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 277403 "append0"
	package explicit_return_type "void"
	nparams 1
	  param inout name "string" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 277531 "append0"
	package explicit_return_type "void"
	nparams 3
	  param inout name "s" type class_ref 133787 // CharSequence
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 277659 "capacity"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of characters that can be held without growing.

@return the capacity
@see #ensureCapacity
@see #length"
      end

      operation 277787 "charAt"
	public explicit_return_type "char"
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the character at the {@code index}.

@param index
           the index of the character to retrieve.
@return the char value.
@throws IndexOutOfBoundsException
            if {@code index} is negative or greater than or equal to the
            current {@link #length()}."
      end

      operation 277915 "indexAndLength"
	private return_type class_ref 147483 // StringIndexOutOfBoundsException
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 278043 "startEndAndLength"
	private return_type class_ref 147483 // StringIndexOutOfBoundsException
	nparams 2
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 278171 "delete0"
	package explicit_return_type "void"
	nparams 2
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 278299 "deleteCharAt0"
	package explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 278427 "ensureCapacity"
	public explicit_return_type "void"
	nparams 1
	  param in name "min" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Ensures that this object has a minimum capacity available before
requiring the internal buffer to be enlarged. The general policy of this
method is that if the {@code minimumCapacity} is larger than the current
{@link #capacity()}, then the capacity will be increased to the largest
value of either the {@code minimumCapacity} or the current capacity
multiplied by two plus two. Although this is the general policy, there is
no guarantee that the capacity will change.

@param min
           the new minimum capacity to set."
      end

      operation 278555 "getChars"
	public explicit_return_type "void"
	nparams 4
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	  param inout name "dst" explicit_type "char"
	  param in name "dstStart" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copies the requested sequence of characters into {@code dst} passed
starting at {@code dst}.

@param start
           the inclusive start index of the characters to copy.
@param end
           the exclusive end index of the characters to copy.
@param dst
           the {@code char[]} to copy the characters to.
@param dstStart
           the inclusive start index of {@code dst} to begin copying to.
@throws IndexOutOfBoundsException
            if the {@code start} is negative, the {@code dstStart} is
            negative, the {@code start} is greater than {@code end}, the
            {@code end} is greater than the current {@link #length()} or
            {@code dstStart + end - begin} is greater than
            {@code dst.length}."
      end

      operation 278683 "insert0"
	package explicit_return_type "void"
	nparams 2
	  param in name "index" explicit_type "int"
	  param inout name "chars" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 278811 "insert0"
	package explicit_return_type "void"
	nparams 4
	  param in name "index" explicit_type "int"
	  param inout name "chars" explicit_type "char"
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 278939 "insert0"
	package explicit_return_type "void"
	nparams 2
	  param in name "index" explicit_type "int"
	  param in name "ch" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 279067 "insert0"
	package explicit_return_type "void"
	nparams 2
	  param in name "index" explicit_type "int"
	  param inout name "string" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 279195 "insert0"
	package explicit_return_type "void"
	nparams 4
	  param in name "index" explicit_type "int"
	  param inout name "s" type class_ref 133787 // CharSequence
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 279323 "length"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The current length.

@return the number of characters contained in this instance."
      end

      operation 279451 "move"
	private explicit_return_type "void"
	nparams 2
	  param in name "size" explicit_type "int"
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 279579 "replace0"
	package explicit_return_type "void"
	nparams 3
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	  param inout name "string" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 279707 "reverse0"
	package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 279835 "setCharAt"
	public explicit_return_type "void"
	nparams 2
	  param in name "index" explicit_type "int"
	  param in name "ch" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the character at the {@code index}.

@param index
           the zero-based index of the character to replace.
@param ch
           the character to set.
@throws IndexOutOfBoundsException
            if {@code index} is negative or greater than or equal to the
            current {@link #length()}."
      end

      operation 279963 "setLength"
	public explicit_return_type "void"
	nparams 1
	  param in name "length" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the current length to a new value. If the new length is larger than
the current length, then the new characters at the end of this object
will contain the {@code char} value of {@code \\u0000}.

@param length
           the new length of this StringBuffer.
@exception IndexOutOfBoundsException
               if {@code length < 0}.
@see #length"
      end

      operation 280091 "substring"
	public return_type class_ref 3399692 // String
	nparams 1
	  param in name "start" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the String value of the subsequence from the {@code start} index
to the current end.

@param start
           the inclusive start index to begin the subsequence.
@return a String containing the subsequence.
@throws StringIndexOutOfBoundsException
            if {@code start} is negative or greater than the current
            {@link #length()}."
      end

      operation 280219 "substring"
	public return_type class_ref 3399692 // String
	nparams 2
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the String value of the subsequence from the {@code start} index
to the {@code end} index.

@param start
           the inclusive start index to begin the subsequence.
@param end
           the exclusive end index to end the subsequence.
@return a String containing the subsequence.
@throws StringIndexOutOfBoundsException
            if {@code start} is negative, greater than {@code end} or if
            {@code end} is greater than the current {@link #length()}."
      end

      operation 280347 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns the current String representation.

@return a String containing the characters in this instance."
      end

      operation 280475 "subSequence"
	public return_type class_ref 133787 // CharSequence
	nparams 2
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@code CharSequence} of the subsequence from the {@code start}
index to the {@code end} index.

@param start
           the inclusive start index to begin the subsequence.
@param end
           the exclusive end index to end the subsequence.
@return a CharSequence containing the subsequence.
@throws IndexOutOfBoundsException
            if {@code start} is negative, greater than {@code end} or if
            {@code end} is greater than the current {@link #length()}.
@since 1.4"
      end

      operation 280603 "indexOf"
	public explicit_return_type "int"
	nparams 1
	  param inout name "string" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Searches for the first index of the specified character. The search for
the character starts at the beginning and moves towards the end.

@param string
           the string to find.
@return the index of the specified character, -1 if the character isn't
        found.
@see #lastIndexOf(String)
@since 1.4"
      end

      operation 280731 "indexOf"
	public explicit_return_type "int"
	nparams 2
	  param inout name "subString" type class_ref 3399692 // String
	  param in name "start" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Searches for the index of the specified character. The search for the
character starts at the specified offset and moves towards the end.

@param subString
           the string to find.
@param start
           the starting offset.
@return the index of the specified character, -1 if the character isn't
        found
@see #lastIndexOf(String,int)
@since 1.4"
      end

      operation 280859 "lastIndexOf"
	public explicit_return_type "int"
	nparams 1
	  param inout name "string" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Searches for the last index of the specified character. The search for
the character starts at the end and moves towards the beginning.

@param string
           the string to find.
@return the index of the specified character, -1 if the character isn't
        found.
@throws NullPointerException
            if {@code string} is {@code null}.
@see String#lastIndexOf(java.lang.String)
@since 1.4"
      end

      operation 280987 "lastIndexOf"
	public explicit_return_type "int"
	nparams 2
	  param inout name "subString" type class_ref 3399692 // String
	  param in name "start" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Searches for the index of the specified character. The search for the
character starts at the specified offset and moves towards the beginning.

@param subString
           the string to find.
@param start
           the starting offset.
@return the index of the specified character, -1 if the character isn't
        found.
@throws NullPointerException
            if {@code subString} is {@code null}.
@see String#lastIndexOf(String,int)
@since 1.4"
      end

      operation 281115 "trimToSize"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Trims off any extra capacity beyond the current length. Note, this method
is NOT guaranteed to change the capacity of this object.

@since 1.5"
      end

      operation 281243 "codePointAt"
	public explicit_return_type "int"
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the Unicode code point value at the {@code index}.

@param index
           the index to the {@code char} code unit.
@return the Unicode code point value.
@throws IndexOutOfBoundsException
            if {@code index} is negative or greater than or equal to
            {@link #length()}.
@see Character
@see Character#codePointAt(char[], int, int)
@since 1.5"
      end

      operation 281371 "codePointBefore"
	public explicit_return_type "int"
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the Unicode code point value that precedes the {@code index}.

@param index
           the index to the {@code char} code unit within this object.
@return the Unicode code point value.
@throws IndexOutOfBoundsException
            if {@code index} is less than 1 or greater than
            {@link #length()}.
@see Character
@see Character#codePointBefore(char[], int, int)
@since 1.5"
      end

      operation 281499 "codePointCount"
	public explicit_return_type "int"
	nparams 2
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Calculates the number of Unicode code points between {@code start}
and {@code end}.

@param start
           the inclusive beginning index of the subsequence.
@param end
           the exclusive end index of the subsequence.
@return the number of Unicode code points in the subsequence.
@throws IndexOutOfBoundsException
            if {@code start} is negative or greater than
            {@code end} or {@code end} is greater than
            {@link #length()}.
@see Character
@see Character#codePointCount(char[], int, int)
@since 1.5"
      end

      operation 281627 "offsetByCodePoints"
	public explicit_return_type "int"
	nparams 2
	  param in name "index" explicit_type "int"
	  param in name "codePointOffset" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index that is offset {@code codePointOffset} code points from
{@code index}.

@param index
           the index to calculate the offset from.
@param codePointOffset
           the number of code points to count.
@return the index that is {@code codePointOffset} code points away from
        index.
@throws IndexOutOfBoundsException
            if {@code index} is negative or greater than
            {@link #length()} or if there aren't enough code points
            before or after {@code index} to match
            {@code codePointOffset}.
@see Character
@see Character#offsetByCodePoints(char[], int, int, int, int)
@since 1.5"
      end
    end

    class 147483 "StringIndexOutOfBoundsException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Thrown when the a string is indexed with a value less than zero, or greater
than or equal to the size of the array."
      classrelation 206747 // <generalisation>
	relation 206747 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 206747 // <generalisation>
	  b parent class_ref 147867 // IndexOutOfBoundsException
      end

      attribute 189339 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -6762910422159637258L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 424987 "StringIndexOutOfBoundsException"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code StringIndexOutOfBoundsException} that includes
the current stack trace."
      end

      operation 425115 "StringIndexOutOfBoundsException"
	public explicit_return_type ""
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code StringIndexOutOfBoundsException} with the current
stack trace and a detail message that is based on the specified invalid
{@code index}.

@param index
           the index which is out of bounds."
      end

      operation 425243 "StringIndexOutOfBoundsException"
	public explicit_return_type ""
	nparams 1
	  param inout name "detailMessage" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code StringIndexOutOfBoundsException} with the current
stack trace and the specified detail message.

@param detailMessage
           the detail message for this exception."
      end

      operation 425371 "StringIndexOutOfBoundsException"
	public explicit_return_type ""
	nparams 2
	  param inout name "s" type class_ref 3399692 // String
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Used internally for consistent high-quality error reporting.
@hide"
      end

      operation 425499 "StringIndexOutOfBoundsException"
	public explicit_return_type ""
	nparams 2
	  param in name "sourceLength" explicit_type "int"
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Used internally for consistent high-quality error reporting.
@hide"
      end

      operation 425627 "StringIndexOutOfBoundsException"
	public explicit_return_type ""
	nparams 3
	  param inout name "s" type class_ref 3399692 // String
	  param in name "offset" explicit_type "int"
	  param in name "count" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Used internally for consistent high-quality error reporting.
@hide"
      end

      operation 425755 "StringIndexOutOfBoundsException"
	public explicit_return_type ""
	nparams 3
	  param in name "sourceLength" explicit_type "int"
	  param in name "offset" explicit_type "int"
	  param in name "count" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Used internally for consistent high-quality error reporting.
@hide"
      end
    end

    class 147611 "ArithmeticException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Thrown when the an invalid arithmetic operation is attempted."
      classrelation 168475 // <generalisation>
	relation 168475 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 168475 // <generalisation>
	  b parent class_ref 806284 // RuntimeException
      end

      attribute 159899 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 2256477558314496007L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 282267 "ArithmeticException"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code ArithmeticException} that includes the current
stack trace."
      end

      operation 282395 "ArithmeticException"
	public explicit_return_type ""
	nparams 1
	  param inout name "detailMessage" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code ArithmeticException} with the current stack trace
and the specified detail message.

@param detailMessage
           the detail message for this exception."
      end
    end

    class 147739 "ArrayIndexOutOfBoundsException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Thrown when the an array is indexed with a value less than zero, or greater
than or equal to the size of the array."
      classrelation 168731 // <generalisation>
	relation 168731 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 168731 // <generalisation>
	  b parent class_ref 147867 // IndexOutOfBoundsException
      end

      attribute 160155 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -5116101128118950844L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 282779 "ArrayIndexOutOfBoundsException"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code ArrayIndexOutOfBoundsException} that includes the
current stack trace."
      end

      operation 282907 "ArrayIndexOutOfBoundsException"
	public explicit_return_type ""
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code ArrayIndexOutOfBoundsException} with the current
stack trace and a detail message that is based on the specified invalid
{@code index}.

@param index
           the invalid index."
      end

      operation 283035 "ArrayIndexOutOfBoundsException"
	public explicit_return_type ""
	nparams 1
	  param inout name "detailMessage" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code ArrayIndexOutOfBoundsException} with the current
stack trace and the specified detail message.

@param detailMessage
           the detail message for this exception."
      end

      operation 283163 "ArrayIndexOutOfBoundsException"
	public explicit_return_type ""
	nparams 2
	  param in name "sourceLength" explicit_type "int"
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Used internally for consistent high-quality error reporting.
@hide"
      end

      operation 283291 "ArrayIndexOutOfBoundsException"
	public explicit_return_type ""
	nparams 3
	  param in name "sourceLength" explicit_type "int"
	  param in name "offset" explicit_type "int"
	  param in name "count" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Used internally for consistent high-quality error reporting.
@hide"
      end
    end

    class 147867 "IndexOutOfBoundsException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Thrown when a program attempts to access a value in an indexable collection
using a value which is outside of the range of valid indices."
      classrelation 168603 // <generalisation>
	relation 168603 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 168603 // <generalisation>
	  b parent class_ref 806284 // RuntimeException
      end

      attribute 160027 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 234122996006267687L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 282523 "IndexOutOfBoundsException"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code IndexOutOfBoundsException} that includes the
current stack trace."
      end

      operation 282651 "IndexOutOfBoundsException"
	public explicit_return_type ""
	nparams 1
	  param inout name "detailMessage" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code IndexOutOfBoundsException} with the current stack
trace and the specified detail message.

@param detailMessage
           the detail message for this exception."
      end
    end

    class 147995 "ArrayStoreException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Thrown when a program attempts to store an element of an incompatible type in
an array."
      classrelation 168859 // <generalisation>
	relation 168859 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 168859 // <generalisation>
	  b parent class_ref 806284 // RuntimeException
      end

      attribute 160283 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -4522193890499838241L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 283419 "ArrayStoreException"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code ArrayStoreException} that includes the current
stack trace."
      end

      operation 283547 "ArrayStoreException"
	public explicit_return_type ""
	nparams 1
	  param inout name "detailMessage" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code ArrayStoreException} with the current stack trace
and the specified detail message.

@param detailMessage
           the detail message for this exception."
      end
    end

    class 148123 "AssertionError"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Thrown when an assertion has failed.

@since 1.4"
      classrelation 168987 // <generalisation>
	relation 168987 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 168987 // <generalisation>
	  b parent class_ref 143643 // Error
      end

      attribute 160411 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -5013299493970297370L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 283675 "AssertionError"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code AssertionError} with no message."
      end

      operation 283803 "AssertionError"
	public explicit_return_type ""
	nparams 2
	  param inout name "detailMessage" type class_ref 3399692 // String
	  param inout name "cause" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code AssertionError} with the given detail message and cause.
@since 1.7
@hide 1.7"
      end

      operation 283931 "AssertionError"
	public explicit_return_type ""
	nparams 1
	  param inout name "detailMessage" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code AssertionError} with a message based on calling
{@link String#valueOf(Object)} with the specified object. If the object
is an instance of {@link Throwable}, then it also becomes the cause of
this error.

@param detailMessage
           the object to be converted into the detail message and
           optionally the cause."
      end

      operation 284059 "AssertionError"
	public explicit_return_type ""
	nparams 1
	  param inout name "detailMessage" explicit_type "boolean"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code AssertionError} with a message based on calling
{@link String#valueOf(boolean)} with the specified boolean value.

@param detailMessage
           the value to be converted into the message."
      end

      operation 284187 "AssertionError"
	public explicit_return_type ""
	nparams 1
	  param in name "detailMessage" explicit_type "char"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code AssertionError} with a message based on calling
{@link String#valueOf(char)} with the specified character value.

@param detailMessage
           the value to be converted into the message."
      end

      operation 284315 "AssertionError"
	public explicit_return_type ""
	nparams 1
	  param in name "detailMessage" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code AssertionError} with a message based on calling
{@link String#valueOf(int)} with the specified integer value.

@param detailMessage
           the value to be converted into the message."
      end

      operation 284443 "AssertionError"
	public explicit_return_type ""
	nparams 1
	  param in name "detailMessage" explicit_type "long"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code AssertionError} with a message based on calling
{@link String#valueOf(long)} with the specified long value.

@param detailMessage
           the value to be converted into the message."
      end

      operation 284571 "AssertionError"
	public explicit_return_type ""
	nparams 1
	  param in name "detailMessage" explicit_type "float"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code AssertionError} with a message based on calling
{@link String#valueOf(float)} with the specified float value.

@param detailMessage
           the value to be converted into the message."
      end

      operation 284699 "AssertionError"
	public explicit_return_type ""
	nparams 1
	  param in name "detailMessage" explicit_type "double"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code AssertionError} with a message based on calling
{@link String#valueOf(double)} with the specified double value.

@param detailMessage
           the value to be converted into the message."
      end
    end

    class 148251 "Byte"
      visibility public 
      nactuals 1
      actual class class_ref 139675 // Comparable
        rank 0 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@FindBugsSuppressWarnings(\"DM_NUMBER_CTOR\")
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The wrapper for the primitive type {@code byte}.

@since 1.1"
      classrelation 169883 // <generalisation>
	relation 169883 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 169883 // <generalisation>
	  b parent class_ref 148379 // Number
      end

      classrelation 170011 // <realization>
	relation 170011 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 170011 // <realization>
	  b parent class_ref 139675 // Comparable
      end

      attribute 160923 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -7183698231559129828L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 161051 "value"
	const_attribute private explicit_type "byte"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The value which the receiver represents.
"
      end

      attribute 161179 "MAX_VALUE"
	class_attribute const_attribute public explicit_type "byte"
	init_value " (byte) 0x7F"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The maximum {@code Byte} value, 2<sup>7</sup>-1.
"
      end

      attribute 161307 "MIN_VALUE"
	class_attribute const_attribute public explicit_type "byte"
	init_value " (byte) 0x80"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The minimum {@code Byte} value, -2<sup>7</sup>.
"
      end

      attribute 161435 "SIZE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 8"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The number of bits needed to represent a {@code Byte} value in two's
complement form.

@since 1.5
"
      end

      classrelation 170139 // TYPE (<unidirectional association>)
	relation 170139 --->
	  a role_name "TYPE" init_value " (Class<Byte>) byte[].class.getComponentType()" class_relation const_relation public
	    comment "
The {@link Class} object that represents the primitive type {@code byte}.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Byte> ${name}${value};
"
	    java_annotation "@SuppressWarnings(\"unchecked\")
"
	    classrelation_ref 170139 // TYPE (<unidirectional association>)
	  b parent class_ref 3421708 // Class
      end

      operation 287387 "Byte"
	public explicit_return_type ""
	nparams 1
	  param in name "value" explicit_type "byte"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Note: Byte.TYPE can't be set to \"byte.class\", since *that* is
 defined to be \"java.lang.Byte.TYPE\";

Constructs a new {@code Byte} with the specified primitive byte value.

@param value
           the primitive byte value to store in the new instance."
      end

      operation 287515 "Byte"
	public explicit_return_type ""
	nparams 1
	  param inout name "string" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 148507 // NumberFormatException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code Byte} from the specified string.

@param string
           the string representation of a single byte value.
@throws NumberFormatException
            if {@code string} cannot be parsed as a byte value.
@see #parseByte(String)"
      end

      operation 287643 "byteValue"
	public explicit_return_type "byte"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Gets the primitive value of this byte.

@return this object's primitive value."
      end

      operation 287771 "compareTo"
	public explicit_return_type "int"
	nparams 1
	  param inout name "object" type class_ref 148251 // Byte
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares this object to the specified byte object to determine their
relative order.

@param object
           the byte object to compare this object to.
@return a negative value if the value of this byte is less than the value
        of {@code object}; 0 if the value of this byte and the value of
        {@code object} are equal; a positive value if the value of this
        byte is greater than the value of {@code object}.
@see java.lang.Comparable
@since 1.2"
      end

      operation 287899 "compare"
	class_operation public explicit_return_type "int"
	nparams 2
	  param in name "lhs" explicit_type "byte"
	  param in name "rhs" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares two {@code byte} values.
@return 0 if lhs = rhs, less than 0 if lhs &lt; rhs, and greater than 0 if lhs &gt; rhs.
@since 1.7
@hide 1.7"
      end

      operation 288027 "decode"
	class_operation public return_type class_ref 148251 // Byte
	nparams 1
	  param inout name "string" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 148507 // NumberFormatException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses the specified string and returns a {@code Byte} instance if the
string can be decoded into a single byte value. The string may be an
optional minus sign \"-\" followed by a hexadecimal (\"0x...\" or \"#...\"),
octal (\"0...\"), or decimal (\"...\") representation of a byte.

@param string
           a string representation of a single byte value.
@return a {@code Byte} containing the value represented by {@code string}.
@throws NumberFormatException
            if {@code string} cannot be parsed as a byte value."
      end

      operation 288155 "doubleValue"
	public explicit_return_type "double"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 288283 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "object" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
    @FindBugsSuppressWarnings(\"RC_REF_COMPARISON\")
"
	
	
	
	comment "Compares this object with the specified object and indicates if they are
equal. In order to be equal, {@code object} must be an instance of
{@code Byte} and have the same byte value as this object.

@param object
           the object to compare this byte with.
@return {@code true} if the specified object is equal to this
        {@code Byte}; {@code false} otherwise."
      end

      operation 288411 "floatValue"
	public explicit_return_type "float"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 288539 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 288667 "intValue"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 288795 "longValue"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 288923 "parseByte"
	class_operation public explicit_return_type "byte"
	nparams 1
	  param inout name "string" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 148507 // NumberFormatException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses the specified string as a signed decimal byte value. The ASCII
character \\u002d ('-') is recognized as the minus sign.

@param string
           the string representation of a single byte value.
@return the primitive byte value represented by {@code string}.
@throws NumberFormatException
            if {@code string} can not be parsed as a byte value."
      end

      operation 289051 "parseByte"
	class_operation public explicit_return_type "byte"
	nparams 2
	  param inout name "string" type class_ref 3399692 // String
	  param in name "radix" explicit_type "int"
	nexceptions 1
	  exception class_ref 148507 // NumberFormatException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses the specified string as a signed byte value using the specified
radix. The ASCII character \\u002d ('-') is recognized as the minus sign.

@param string
           the string representation of a single byte value.
@param radix
           the radix to use when parsing.
@return the primitive byte value represented by {@code string} using
        {@code radix}.
@throws NumberFormatException
            if {@code string} can not be parsed as a byte value, or
            {@code radix < Character.MIN_RADIX ||
            radix > Character.MAX_RADIX}."
      end

      operation 289179 "shortValue"
	public explicit_return_type "short"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 289307 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 289435 "toHexString"
	class_operation public return_type class_ref 3399692 // String
	nparams 2
	  param in name "b" explicit_type "byte"
	  param inout name "upperCase" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a two-digit hex string. That is, -1 becomes \"ff\" or \"FF\" and 2 becomes \"02\".
@hide internal use only"
      end

      operation 289563 "toString"
	class_operation public return_type class_ref 3399692 // String
	nparams 1
	  param in name "value" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string containing a concise, human-readable description of the
specified byte value.

@param value
           the byte to convert to a string.
@return a printable representation of {@code value}."
      end

      operation 289691 "valueOf"
	class_operation public return_type class_ref 148251 // Byte
	nparams 1
	  param inout name "string" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 148507 // NumberFormatException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses the specified string as a signed decimal byte value.

@param string
           the string representation of a single byte value.
@return a {@code Byte} instance containing the byte value represented by
        {@code string}.
@throws NumberFormatException
            if {@code string} can not be parsed as a byte value.
@see #parseByte(String)"
      end

      operation 289819 "valueOf"
	class_operation public return_type class_ref 148251 // Byte
	nparams 2
	  param inout name "string" type class_ref 3399692 // String
	  param in name "radix" explicit_type "int"
	nexceptions 1
	  exception class_ref 148507 // NumberFormatException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses the specified string as a signed byte value using the specified
radix.

@param string
           the string representation of a single byte value.
@param radix
           the radix to use when parsing.
@return a {@code Byte} instance containing the byte value represented by
        {@code string} using {@code radix}.
@throws NumberFormatException
            if {@code string} can not be parsed as a byte value, or
            {@code radix < Character.MIN_RADIX ||
            radix > Character.MAX_RADIX}.
@see #parseByte(String, int)"
      end

      operation 289947 "valueOf"
	class_operation public return_type class_ref 148251 // Byte
	nparams 1
	  param in name "b" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@code Byte} instance for the specified byte value.
<p>
If it is not necessary to get a new {@code Byte} instance, it is
recommended to use this method instead of the constructor, since it
maintains a cache of instances which may result in better performance.

@param b
           the byte value to store in the instance.
@return a {@code Byte} instance containing {@code b}.
@since 1.5"
      end

      classrelation 170267 // VALUES (<unidirectional association>)
	relation 170267 --->
	  a role_name "VALUES" multiplicity "[]" init_value " new Byte[256]" class_relation const_relation private
	    comment "
A cache of instances used by {@link Byte#valueOf(byte)} and auto-boxing

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 170267 // VALUES (<unidirectional association>)
	  b parent class_ref 148251 // Byte
      end

      extra_member 128667 "initialization"
	
	cpp "" ""
	java "  static {
        for (int i = -128; i < 128; i++) {
            VALUES[i + 128] = new Byte((byte) i);
        }
    }"
	php ""
	python ""
	idl ""
      end
    end

    class 148379 "Number"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The abstract superclass of the classes which represent numeric base types
(that is {@link Byte}, {@link Short}, {@link Integer}, {@link Long},
{@link Float}, and {@link Double}."
      classrelation 169755 // <realization>
	relation 169755 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 169755 // <realization>
	  b parent class_ref 128155 // Serializable
      end

      attribute 160795 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -8742448824652078965L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 286491 "Number"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Empty default constructor."
      end

      operation 286619 "byteValue"
	public explicit_return_type "byte"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns this object's value as a byte. Might involve rounding and/or
truncating the value, so it fits into a byte.

@return the primitive byte value of this object."
      end

      operation 286747 "doubleValue"
	abstract public explicit_return_type "double"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns this object's value as a double. Might involve rounding.

@return the primitive double value of this object."
      end

      operation 286875 "floatValue"
	abstract public explicit_return_type "float"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns this object's value as a float. Might involve rounding.

@return the primitive float value of this object."
      end

      operation 287003 "intValue"
	abstract public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns this object's value as an int. Might involve rounding and/or
truncating the value, so it fits into an int.

@return the primitive int value of this object."
      end

      operation 287131 "longValue"
	abstract public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns this object's value as a long. Might involve rounding and/or
truncating the value, so it fits into a long.

@return the primitive long value of this object."
      end

      operation 287259 "shortValue"
	public explicit_return_type "short"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns this object's value as a short. Might involve rounding and/or
truncating the value, so it fits into a short.

@return the primitive short value of this object."
      end
    end

    class 148507 "NumberFormatException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Thrown when an invalid value is passed to a string-to-number conversion
method."
      classrelation 198299 // <generalisation>
	relation 198299 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 198299 // <generalisation>
	  b parent class_ref 128283 // IllegalArgumentException
      end

      attribute 184603 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -2848938806368998894L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 367643 "NumberFormatException"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code NumberFormatException} that includes the current
stack trace."
      end

      operation 367771 "NumberFormatException"
	public explicit_return_type ""
	nparams 1
	  param inout name "detailMessage" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code NumberFormatException} with the current stack
trace and the specified detail message.

@param detailMessage
           the detail message for this exception."
      end
    end

    class 148635 "CaseMapper"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Performs case operations as described by http://unicode.org/reports/tr21/tr21-5.html."
      attribute 161563 "upperValues"
	class_attribute const_attribute private explicit_type "char"
	multiplicity "[]"
	init_value " \"SS\\u0000\\u02bcN\\u0000J\\u030c\\u0000\\u0399\\u0308\\u0301\\u03a5\\u0308\\u0301\\u0535\\u0552\\u0000H\\u0331\\u0000T\\u0308\\u0000W\\u030a\\u0000Y\\u030a\\u0000A\\u02be\\u0000\\u03a5\\u0313\\u0000\\u03a5\\u0313\\u0300\\u03a5\\u0313\\u0301\\u03a5\\u0313\\u0342\\u1f08\\u0399\\u0000\\u1f09\\u0399\\u0000\\u1f0a\\u0399\\u0000\\u1f0b\\u0399\\u0000\\u1f0c\\u0399\\u0000\\u1f0d\\u0399\\u0000\\u1f0e\\u0399\\u0000\\u1f0f\\u0399\\u0000\\u1f08\\u0399\\u0000\\u1f09\\u0399\\u0000\\u1f0a\\u0399\\u0000\\u1f0b\\u0399\\u0000\\u1f0c\\u0399\\u0000\\u1f0d\\u0399\\u0000\\u1f0e\\u0399\\u0000\\u1f0f\\u0399\\u0000\\u1f28\\u0399\\u0000\\u1f29\\u0399\\u0000\\u1f2a\\u0399\\u0000\\u1f2b\\u0399\\u0000\\u1f2c\\u0399\\u0000\\u1f2d\\u0399\\u0000\\u1f2e\\u0399\\u0000\\u1f2f\\u0399\\u0000\\u1f28\\u0399\\u0000\\u1f29\\u0399\\u0000\\u1f2a\\u0399\\u0000\\u1f2b\\u0399\\u0000\\u1f2c\\u0399\\u0000\\u1f2d\\u0399\\u0000\\u1f2e\\u0399\\u0000\\u1f2f\\u0399\\u0000\\u1f68\\u0399\\u0000\\u1f69\\u0399\\u0000\\u1f6a\\u0399\\u0000\\u1f6b\\u0399\\u0000\\u1f6c\\u0399\\u0000\\u1f6d\\u0399\\u0000\\u1f6e\\u0399\\u0000\\u1f6f\\u0399\\u0000\\u1f68\\u0399\\u0000\\u1f69\\u0399\\u0000\\u1f6a\\u0399\\u0000\\u1f6b\\u0399\\u0000\\u1f6c\\u0399\\u0000\\u1f6d\\u0399\\u0000\\u1f6e\\u0399\\u0000\\u1f6f\\u0399\\u0000\\u1fba\\u0399\\u0000\\u0391\\u0399\\u0000\\u0386\\u0399\\u0000\\u0391\\u0342\\u0000\\u0391\\u0342\\u0399\\u0391\\u0399\\u0000\\u1fca\\u0399\\u0000\\u0397\\u0399\\u0000\\u0389\\u0399\\u0000\\u0397\\u0342\\u0000\\u0397\\u0342\\u0399\\u0397\\u0399\\u0000\\u0399\\u0308\\u0300\\u0399\\u0308\\u0301\\u0399\\u0342\\u0000\\u0399\\u0308\\u0342\\u03a5\\u0308\\u0300\\u03a5\\u0308\\u0301\\u03a1\\u0313\\u0000\\u03a5\\u0342\\u0000\\u03a5\\u0308\\u0342\\u1ffa\\u0399\\u0000\\u03a9\\u0399\\u0000\\u038f\\u0399\\u0000\\u03a9\\u0342\\u0000\\u03a9\\u0342\\u0399\\u03a9\\u0399\\u0000FF\\u0000FI\\u0000FL\\u0000FFIFFLST\\u0000ST\\u0000\\u0544\\u0546\\u0000\\u0544\\u0535\\u0000\\u0544\\u053b\\u0000\\u054e\\u0546\\u0000\\u0544\\u053d\\u0000\".toCharArray()"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 161691 "upperValues2"
	class_attribute const_attribute private explicit_type "char"
	multiplicity "[]"
	init_value " \"\\u000b\\u0000\\f\\u0000\\r\\u0000\\u000e\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>\\u0000\\u0000?@A\\u0000BC\\u0000\\u0000\\u0000\\u0000D\\u0000\\u0000\\u0000\\u0000\\u0000EFG\\u0000HI\\u0000\\u0000\\u0000\\u0000J\\u0000\\u0000\\u0000\\u0000\\u0000KL\\u0000\\u0000MN\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000OPQ\\u0000RS\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000\\u0000TUV\\u0000WX\\u0000\\u0000\\u0000\\u0000Y\".toCharArray()"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 161819 "LATIN_CAPITAL_I_WITH_DOT"
	class_attribute const_attribute private explicit_type "char"
	init_value " '\\u0130'"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 161947 "GREEK_CAPITAL_SIGMA"
	class_attribute const_attribute private explicit_type "char"
	init_value " '\\u03a3'"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 162075 "GREEK_SMALL_FINAL_SIGMA"
	class_attribute const_attribute private explicit_type "char"
	init_value " '\\u03c2'"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 290075 "CaseMapper"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Our current GC makes short-lived objects more expensive than we'd like. When that's fixed,
this class should be changed so that you instantiate it with the String and its value,
offset, and count fields."
      end

      operation 290203 "toLowerCase"
	class_operation public return_type class_ref 3399692 // String
	nparams 5
	  param inout name "locale" type class_ref 135835 // Locale
	  param inout name "s" type class_ref 3399692 // String
	  param inout name "value" explicit_type "char"
	  param in name "offset" explicit_type "int"
	  param in name "count" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Implements String.toLowerCase. We need 's' so that we can return the original String instance
if nothing changes. We need 'value', 'offset', and 'count' because they're not otherwise
accessible."
      end

      operation 290331 "isFinalSigma"
	class_operation private explicit_return_type "boolean"
	nparams 4
	  param inout name "value" explicit_type "char"
	  param in name "offset" explicit_type "int"
	  param in name "count" explicit_type "int"
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "True if 'index' is preceded by a sequence consisting of a cased letter and a case-ignorable
sequence, and 'index' is not followed by a sequence consisting of an ignorable sequence and
then a cased letter."
      end

      operation 290459 "upperIndex"
	class_operation private explicit_return_type "int"
	nparams 1
	  param in name "ch" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the index of the specified character into the upperValues table.
The upperValues table contains three entries at each position. These
three characters are the upper case conversion. If only two characters
are used, the third character in the table is \\u0000.
@return the index into the upperValues table, or -1"
      end

      operation 290587 "toUpperCase"
	class_operation public return_type class_ref 3399692 // String
	nparams 5
	  param inout name "locale" type class_ref 135835 // Locale
	  param inout name "s" type class_ref 3399692 // String
	  param inout name "value" explicit_type "char"
	  param in name "offset" explicit_type "int"
	  param in name "count" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 148763 "Character"
      visibility public 
      nactuals 1
      actual class class_ref 139675 // Comparable
        rank 0 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@FindBugsSuppressWarnings(\"DM_NUMBER_CTOR\")
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The wrapper for the primitive type {@code char}. This class also provides a
number of utility methods for working with characters.

<p>Character data is kept up to date as Unicode evolves.
See the <a href=\"../util/Locale.html#locale_data\">Locale data</a> section of
the {@code Locale} documentation for details of the Unicode versions implemented by current
and historical Android releases.

<p>The Unicode specification, character tables, and other information are available at
<a href=\"http://www.unicode.org/\">http://www.unicode.org/</a>.

<p>Unicode characters are referred to as <i>code points</i>. The range of valid
code points is U+0000 to U+10FFFF. The <i>Basic Multilingual Plane (BMP)</i>
is the code point range U+0000 to U+FFFF. Characters above the BMP are
referred to as <i>Supplementary Characters</i>. On the Java platform, UTF-16
encoding and {@code char} pairs are used to represent code points in the
supplementary range. A pair of {@code char} values that represent a
supplementary character are made up of a <i>high surrogate</i> with a value
range of 0xD800 to 0xDBFF and a <i>low surrogate</i> with a value range of
0xDC00 to 0xDFFF.
<p>
On the Java platform a {@code char} value represents either a single BMP code
point or a UTF-16 unit that's part of a surrogate pair. The {@code int} type
is used to represent all Unicode code points.

<a name=\"unicode_categories\"><h3>Unicode categories</h3></a>
<p>Here's a list of the Unicode character categories and the corresponding Java constant,
grouped semantically to provide a convenient overview. This table is also useful in
conjunction with {@code \\p} and {@code \\P} in {@link java.util.regex.Pattern regular expressions}.
<span class=\"datatable\">
<style type=\"text/css\">
.datatable td { padding-right: 20px; }
</style>
<p><table>
<tr> <td> Cn </td> <td> Unassigned </td>  <td>{@link #UNASSIGNED}</td> </tr>
<tr> <td> Cc </td> <td> Control </td>     <td>{@link #CONTROL}</td> </tr>
<tr> <td> Cf </td> <td> Format </td>      <td>{@link #FORMAT}</td> </tr>
<tr> <td> Co </td> <td> Private use </td> <td>{@link #PRIVATE_USE}</td> </tr>
<tr> <td> Cs </td> <td> Surrogate </td>   <td>{@link #SURROGATE}</td> </tr>
<tr> <td><br></td> </tr>
<tr> <td> Lu </td> <td> Uppercase letter </td> <td>{@link #UPPERCASE_LETTER}</td> </tr>
<tr> <td> Ll </td> <td> Lowercase letter </td> <td>{@link #LOWERCASE_LETTER}</td> </tr>
<tr> <td> Lt </td> <td> Titlecase letter </td> <td>{@link #TITLECASE_LETTER}</td> </tr>
<tr> <td> Lm </td> <td> Modifier letter </td>  <td>{@link #MODIFIER_LETTER}</td> </tr>
<tr> <td> Lo </td> <td> Other letter </td>     <td>{@link #OTHER_LETTER}</td> </tr>
<tr> <td><br></td> </tr>
<tr> <td> Mn </td> <td> Non-spacing mark </td>       <td>{@link #NON_SPACING_MARK}</td> </tr>
<tr> <td> Me </td> <td> Enclosing mark </td>         <td>{@link #ENCLOSING_MARK}</td> </tr>
<tr> <td> Mc </td> <td> Combining spacing mark </td> <td>{@link #COMBINING_SPACING_MARK}</td> </tr>
<tr> <td><br></td> </tr>
<tr> <td> Nd </td> <td> Decimal digit number </td> <td>{@link #DECIMAL_DIGIT_NUMBER}</td> </tr>
<tr> <td> Nl </td> <td> Letter number </td>        <td>{@link #LETTER_NUMBER}</td> </tr>
<tr> <td> No </td> <td> Other number </td>         <td>{@link #OTHER_NUMBER}</td> </tr>
<tr> <td><br></td> </tr>
<tr> <td> Pd </td> <td> Dash punctuation </td>          <td>{@link #DASH_PUNCTUATION}</td> </tr>
<tr> <td> Ps </td> <td> Start punctuation </td>         <td>{@link #START_PUNCTUATION}</td> </tr>
<tr> <td> Pe </td> <td> End punctuation </td>           <td>{@link #END_PUNCTUATION}</td> </tr>
<tr> <td> Pc </td> <td> Connector punctuation </td>     <td>{@link #CONNECTOR_PUNCTUATION}</td> </tr>
<tr> <td> Pi </td> <td> Initial quote punctuation </td> <td>{@link #INITIAL_QUOTE_PUNCTUATION}</td> </tr>
<tr> <td> Pf </td> <td> Final quote punctuation </td>   <td>{@link #FINAL_QUOTE_PUNCTUATION}</td> </tr>
<tr> <td> Po </td> <td> Other punctuation </td>         <td>{@link #OTHER_PUNCTUATION}</td> </tr>
<tr> <td><br></td> </tr>
<tr> <td> Sm </td> <td> Math symbol </td>     <td>{@link #MATH_SYMBOL}</td> </tr>
<tr> <td> Sc </td> <td> Currency symbol </td> <td>{@link #CURRENCY_SYMBOL}</td> </tr>
<tr> <td> Sk </td> <td> Modifier symbol </td> <td>{@link #MODIFIER_SYMBOL}</td> </tr>
<tr> <td> So </td> <td> Other symbol </td>    <td>{@link #OTHER_SYMBOL}</td> </tr>
<tr> <td><br></td> </tr>
<tr> <td> Zs </td> <td> Space separator </td>     <td>{@link #SPACE_SEPARATOR}</td> </tr>
<tr> <td> Zl </td> <td> Line separator </td>      <td>{@link #LINE_SEPARATOR}</td> </tr>
<tr> <td> Zp </td> <td> Paragraph separator </td> <td>{@link #PARAGRAPH_SEPARATOR}</td> </tr>
</table>
</span>

@since 1.0"
      classrelation 170395 // <realization>
	relation 170395 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 170395 // <realization>
	  b parent class_ref 128155 // Serializable
      end

      classrelation 170523 // <realization>
	relation 170523 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 170523 // <realization>
	  b parent class_ref 139675 // Comparable
      end

      attribute 162203 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 3786198910865385080L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 162331 "value"
	const_attribute private explicit_type "char"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 162459 "MIN_VALUE"
	class_attribute const_attribute public explicit_type "char"
	init_value " '\\u0000'"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The minimum {@code Character} value.
"
      end

      attribute 162587 "MAX_VALUE"
	class_attribute const_attribute public explicit_type "char"
	init_value " '\\uffff'"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The maximum {@code Character} value.
"
      end

      attribute 162715 "MIN_RADIX"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The minimum radix used for conversions between characters and integers.
"
      end

      attribute 162843 "MAX_RADIX"
	class_attribute const_attribute public explicit_type "int"
	init_value " 36"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The maximum radix used for conversions between characters and integers.
"
      end

      classrelation 170651 // TYPE (<unidirectional association>)
	relation 170651 --->
	  a role_name "TYPE" init_value " (Class<Character>) char[].class.getComponentType()" class_relation const_relation public
	    comment "
The {@link Class} object that represents the primitive type {@code char}.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Character> ${name}${value};
"
	    java_annotation "@SuppressWarnings(\"unchecked\")
"
	    classrelation_ref 170651 // TYPE (<unidirectional association>)
	  b parent class_ref 3421708 // Class
      end

      attribute 162971 "UNASSIGNED"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Note: Character.TYPE can't be set to \"char.class\", since *that* is
 defined to be \"java.lang.Character.TYPE\";

Unicode category constant Cn.
"
      end

      attribute 163099 "UPPERCASE_LETTER"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Unicode category constant Lu.
"
      end

      attribute 163227 "LOWERCASE_LETTER"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Unicode category constant Ll.
"
      end

      attribute 163355 "TITLECASE_LETTER"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Unicode category constant Lt.
"
      end

      attribute 163483 "MODIFIER_LETTER"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Unicode category constant Lm.
"
      end

      attribute 163611 "OTHER_LETTER"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 5"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Unicode category constant Lo.
"
      end

      attribute 163739 "NON_SPACING_MARK"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 6"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Unicode category constant Mn.
"
      end

      attribute 163867 "ENCLOSING_MARK"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 7"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Unicode category constant Me.
"
      end

      attribute 163995 "COMBINING_SPACING_MARK"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 8"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Unicode category constant Mc.
"
      end

      attribute 164123 "DECIMAL_DIGIT_NUMBER"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 9"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Unicode category constant Nd.
"
      end

      attribute 164251 "LETTER_NUMBER"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 10"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Unicode category constant Nl.
"
      end

      attribute 164379 "OTHER_NUMBER"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 11"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Unicode category constant No.
"
      end

      attribute 164507 "SPACE_SEPARATOR"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 12"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Unicode category constant Zs.
"
      end

      attribute 164635 "LINE_SEPARATOR"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 13"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Unicode category constant Zl.
"
      end

      attribute 164763 "PARAGRAPH_SEPARATOR"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 14"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Unicode category constant Zp.
"
      end

      attribute 164891 "CONTROL"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 15"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Unicode category constant Cc.
"
      end

      attribute 165019 "FORMAT"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 16"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Unicode category constant Cf.
"
      end

      attribute 165147 "PRIVATE_USE"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 18"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Unicode category constant Co.
"
      end

      attribute 165275 "SURROGATE"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 19"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Unicode category constant Cs.
"
      end

      attribute 165403 "DASH_PUNCTUATION"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 20"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Unicode category constant Pd.
"
      end

      attribute 165531 "START_PUNCTUATION"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 21"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Unicode category constant Ps.
"
      end

      attribute 165659 "END_PUNCTUATION"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 22"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Unicode category constant Pe.
"
      end

      attribute 165787 "CONNECTOR_PUNCTUATION"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 23"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Unicode category constant Pc.
"
      end

      attribute 165915 "OTHER_PUNCTUATION"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 24"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Unicode category constant Po.
"
      end

      attribute 166043 "MATH_SYMBOL"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 25"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Unicode category constant Sm.
"
      end

      attribute 166171 "CURRENCY_SYMBOL"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 26"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Unicode category constant Sc.
"
      end

      attribute 166299 "MODIFIER_SYMBOL"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 27"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Unicode category constant Sk.
"
      end

      attribute 166427 "OTHER_SYMBOL"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 28"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Unicode category constant So.
"
      end

      attribute 166555 "INITIAL_QUOTE_PUNCTUATION"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 29"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Unicode category constant Pi.

@since 1.4
"
      end

      attribute 166683 "FINAL_QUOTE_PUNCTUATION"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 30"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Unicode category constant Pf.

@since 1.4
"
      end

      attribute 166811 "DIRECTIONALITY_UNDEFINED"
	class_attribute const_attribute public explicit_type "byte"
	init_value " -1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Unicode bidirectional constant.

@since 1.4
"
      end

      attribute 166939 "DIRECTIONALITY_LEFT_TO_RIGHT"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Unicode bidirectional constant L.

@since 1.4
"
      end

      attribute 167067 "DIRECTIONALITY_RIGHT_TO_LEFT"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Unicode bidirectional constant R.

@since 1.4
"
      end

      attribute 167195 "DIRECTIONALITY_RIGHT_TO_LEFT_ARABIC"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Unicode bidirectional constant AL.

@since 1.4
"
      end

      attribute 167323 "DIRECTIONALITY_EUROPEAN_NUMBER"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Unicode bidirectional constant EN.

@since 1.4
"
      end

      attribute 167451 "DIRECTIONALITY_EUROPEAN_NUMBER_SEPARATOR"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Unicode bidirectional constant ES.

@since 1.4
"
      end

      attribute 167579 "DIRECTIONALITY_EUROPEAN_NUMBER_TERMINATOR"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 5"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Unicode bidirectional constant ET.

@since 1.4
"
      end

      attribute 167707 "DIRECTIONALITY_ARABIC_NUMBER"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 6"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Unicode bidirectional constant AN.

@since 1.4
"
      end

      attribute 167835 "DIRECTIONALITY_COMMON_NUMBER_SEPARATOR"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 7"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Unicode bidirectional constant CS.

@since 1.4
"
      end

      attribute 167963 "DIRECTIONALITY_NONSPACING_MARK"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 8"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Unicode bidirectional constant NSM.

@since 1.4
"
      end

      attribute 168091 "DIRECTIONALITY_BOUNDARY_NEUTRAL"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 9"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Unicode bidirectional constant BN.

@since 1.4
"
      end

      attribute 168219 "DIRECTIONALITY_PARAGRAPH_SEPARATOR"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 10"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Unicode bidirectional constant B.

@since 1.4
"
      end

      attribute 168347 "DIRECTIONALITY_SEGMENT_SEPARATOR"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 11"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Unicode bidirectional constant S.

@since 1.4
"
      end

      attribute 168475 "DIRECTIONALITY_WHITESPACE"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 12"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Unicode bidirectional constant WS.

@since 1.4
"
      end

      attribute 168603 "DIRECTIONALITY_OTHER_NEUTRALS"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 13"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Unicode bidirectional constant ON.

@since 1.4
"
      end

      attribute 168731 "DIRECTIONALITY_LEFT_TO_RIGHT_EMBEDDING"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 14"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Unicode bidirectional constant LRE.

@since 1.4
"
      end

      attribute 168859 "DIRECTIONALITY_LEFT_TO_RIGHT_OVERRIDE"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 15"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Unicode bidirectional constant LRO.

@since 1.4
"
      end

      attribute 168987 "DIRECTIONALITY_RIGHT_TO_LEFT_EMBEDDING"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 16"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Unicode bidirectional constant RLE.

@since 1.4
"
      end

      attribute 169115 "DIRECTIONALITY_RIGHT_TO_LEFT_OVERRIDE"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 17"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Unicode bidirectional constant RLO.

@since 1.4
"
      end

      attribute 169243 "DIRECTIONALITY_POP_DIRECTIONAL_FORMAT"
	class_attribute const_attribute public explicit_type "byte"
	init_value " 18"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Unicode bidirectional constant PDF.

@since 1.4
"
      end

      attribute 169371 "MIN_HIGH_SURROGATE"
	class_attribute const_attribute public explicit_type "char"
	init_value " '\\uD800'"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The minimum value of a high surrogate or leading surrogate unit in UTF-16
encoding, {@code '\\uD800'}.

@since 1.5
"
      end

      attribute 169499 "MAX_HIGH_SURROGATE"
	class_attribute const_attribute public explicit_type "char"
	init_value " '\\uDBFF'"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The maximum value of a high surrogate or leading surrogate unit in UTF-16
encoding, {@code '\\uDBFF'}.

@since 1.5
"
      end

      attribute 169627 "MIN_LOW_SURROGATE"
	class_attribute const_attribute public explicit_type "char"
	init_value " '\\uDC00'"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The minimum value of a low surrogate or trailing surrogate unit in UTF-16
encoding, {@code '\\uDC00'}.

@since 1.5
"
      end

      attribute 169755 "MAX_LOW_SURROGATE"
	class_attribute const_attribute public explicit_type "char"
	init_value " '\\uDFFF'"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The maximum value of a low surrogate or trailing surrogate unit in UTF-16
encoding, {@code '\\uDFFF'}.

@since 1.5
"
      end

      attribute 169883 "MIN_SURROGATE"
	class_attribute const_attribute public explicit_type "char"
	init_value " '\\uD800'"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The minimum value of a surrogate unit in UTF-16 encoding, {@code '\\uD800'}.

@since 1.5
"
      end

      attribute 170011 "MAX_SURROGATE"
	class_attribute const_attribute public explicit_type "char"
	init_value " '\\uDFFF'"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The maximum value of a surrogate unit in UTF-16 encoding, {@code '\\uDFFF'}.

@since 1.5
"
      end

      attribute 170139 "MIN_SUPPLEMENTARY_CODE_POINT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x10000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The minimum value of a supplementary code point, {@code U+010000}.

@since 1.5
"
      end

      attribute 170267 "MIN_CODE_POINT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x000000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The minimum code point value, {@code U+0000}.

@since 1.5
"
      end

      attribute 170395 "MAX_CODE_POINT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x10FFFF"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The maximum code point value, {@code U+10FFFF}.

@since 1.5
"
      end

      attribute 170523 "SIZE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 16"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The number of bits required to represent a {@code Character} value
unsigned form.

@since 1.5
"
      end

      attribute 170651 "DIRECTIONALITY"
	class_attribute const_attribute private explicit_type "byte"
	multiplicity "[]"
	init_value " new byte[] {
            DIRECTIONALITY_LEFT_TO_RIGHT, DIRECTIONALITY_RIGHT_TO_LEFT,
            DIRECTIONALITY_EUROPEAN_NUMBER,
            DIRECTIONALITY_EUROPEAN_NUMBER_SEPARATOR,
            DIRECTIONALITY_EUROPEAN_NUMBER_TERMINATOR,
            DIRECTIONALITY_ARABIC_NUMBER,
            DIRECTIONALITY_COMMON_NUMBER_SEPARATOR,
            DIRECTIONALITY_PARAGRAPH_SEPARATOR,
            DIRECTIONALITY_SEGMENT_SEPARATOR, DIRECTIONALITY_WHITESPACE,
            DIRECTIONALITY_OTHER_NEUTRALS,
            DIRECTIONALITY_LEFT_TO_RIGHT_EMBEDDING,
            DIRECTIONALITY_LEFT_TO_RIGHT_OVERRIDE,
            DIRECTIONALITY_RIGHT_TO_LEFT_ARABIC,
            DIRECTIONALITY_RIGHT_TO_LEFT_EMBEDDING,
            DIRECTIONALITY_RIGHT_TO_LEFT_OVERRIDE,
            DIRECTIONALITY_POP_DIRECTIONAL_FORMAT,
            DIRECTIONALITY_NONSPACING_MARK, DIRECTIONALITY_BOUNDARY_NEUTRAL }"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      class 148891 "Subset"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 170779 // name (<unidirectional association>)
	  relation 170779 --->
	    a role_name "name" package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 170779 // name (<unidirectional association>)
	    b parent class_ref 3399692 // String
	end

	operation 290715 "Subset"
	  protected explicit_return_type ""
	  nparams 1
	    param inout name "string" type class_ref 3399692 // String
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Constructs a new {@code Subset}.

@param string
           this subset's name."
	end

	operation 290843 "equals"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "object" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment "Compares this character subset with the specified object. Uses
{@link java.lang.Object#equals(Object)} to do the comparison.

@param object
           the object to compare this character subset with.
@return {@code true} if {@code object} is this subset, that is, if
        {@code object == this}; {@code false} otherwise."
	end

	operation 290971 "hashCode"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment "Returns the integer hash code for this character subset.

@return this subset's hash code, which is the hash code computed by
        {@link java.lang.Object#hashCode()}."
	end

	operation 291099 "toString"
	  public return_type class_ref 3399692 // String
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment "Returns the string representation of this subset.

@return this subset's name."
	end
      end

      class 149019 "UnicodeBlock"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 170907 // <generalisation>
	  relation 170907 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 170907 // <generalisation>
	    b parent class_ref 148891 // Subset
	end

	classrelation 171035 // SURROGATES_AREA (<unidirectional association>)
	  relation 171035 --->
	    a role_name "SURROGATES_AREA" init_value " new UnicodeBlock(\"SURROGATES_AREA\", 0x0, 0x0)" class_relation const_relation public
	      comment "
The &quot;Surrogates Area&quot; Unicode Block.

@deprecated As of Java 5, this block has been replaced by
            {@link #HIGH_SURROGATES},
            {@link #HIGH_PRIVATE_USE_SURROGATES} and
            {@link #LOW_SURROGATES}.

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      java_annotation "@Deprecated
"
	      classrelation_ref 171035 // SURROGATES_AREA (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 171163 // BASIC_LATIN (<unidirectional association>)
	  relation 171163 --->
	    a role_name "BASIC_LATIN" init_value " new UnicodeBlock(\"BASIC_LATIN\", 0x0, 0x7f)" class_relation const_relation public
	      comment "
The &quot;Basic Latin&quot; Unicode Block.

@since 1.2

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 171163 // BASIC_LATIN (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 171291 // LATIN_1_SUPPLEMENT (<unidirectional association>)
	  relation 171291 --->
	    a role_name "LATIN_1_SUPPLEMENT" init_value " new UnicodeBlock(\"LATIN_1_SUPPLEMENT\", 0x80, 0xff)" class_relation const_relation public
	      comment "
The &quot;Latin-1 Supplement&quot; Unicode Block.

@since 1.2

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 171291 // LATIN_1_SUPPLEMENT (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 171419 // LATIN_EXTENDED_A (<unidirectional association>)
	  relation 171419 --->
	    a role_name "LATIN_EXTENDED_A" init_value " new UnicodeBlock(\"LATIN_EXTENDED_A\", 0x100, 0x17f)" class_relation const_relation public
	      comment "
The &quot;Latin Extended-A&quot; Unicode Block.

@since 1.2

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 171419 // LATIN_EXTENDED_A (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 171547 // LATIN_EXTENDED_B (<unidirectional association>)
	  relation 171547 --->
	    a role_name "LATIN_EXTENDED_B" init_value " new UnicodeBlock(\"LATIN_EXTENDED_B\", 0x180, 0x24f)" class_relation const_relation public
	      comment "
The &quot;Latin Extended-B&quot; Unicode Block.

@since 1.2

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 171547 // LATIN_EXTENDED_B (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 171675 // IPA_EXTENSIONS (<unidirectional association>)
	  relation 171675 --->
	    a role_name "IPA_EXTENSIONS" init_value " new UnicodeBlock(\"IPA_EXTENSIONS\", 0x250, 0x2af)" class_relation const_relation public
	      comment "
The &quot;IPA Extensions&quot; Unicode Block.

@since 1.2

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 171675 // IPA_EXTENSIONS (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 171803 // SPACING_MODIFIER_LETTERS (<unidirectional association>)
	  relation 171803 --->
	    a role_name "SPACING_MODIFIER_LETTERS" init_value " new UnicodeBlock(\"SPACING_MODIFIER_LETTERS\", 0x2b0, 0x2ff)" class_relation const_relation public
	      comment "
The &quot;Spacing Modifier Letters&quot; Unicode Block.

@since 1.2

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 171803 // SPACING_MODIFIER_LETTERS (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 171931 // COMBINING_DIACRITICAL_MARKS (<unidirectional association>)
	  relation 171931 --->
	    a role_name "COMBINING_DIACRITICAL_MARKS" init_value " new UnicodeBlock(\"COMBINING_DIACRITICAL_MARKS\", 0x300, 0x36f)" class_relation const_relation public
	      comment "
The &quot;Combining Diacritical Marks&quot; Unicode Block.

@since 1.2

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 171931 // COMBINING_DIACRITICAL_MARKS (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 172059 // GREEK (<unidirectional association>)
	  relation 172059 --->
	    a role_name "GREEK" init_value " new UnicodeBlock(\"GREEK\", 0x370, 0x3ff)" class_relation const_relation public
	      comment "
The &quot;Greek and Coptic&quot; Unicode Block. Previously referred
to as &quot;Greek&quot;.

@since 1.2

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 172059 // GREEK (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 172187 // CYRILLIC (<unidirectional association>)
	  relation 172187 --->
	    a role_name "CYRILLIC" init_value " new UnicodeBlock(\"CYRILLIC\", 0x400, 0x4ff)" class_relation const_relation public
	      comment "
The &quot;Cyrillic&quot; Unicode Block.

@since 1.2

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 172187 // CYRILLIC (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 172315 // CYRILLIC_SUPPLEMENTARY (<unidirectional association>)
	  relation 172315 --->
	    a role_name "CYRILLIC_SUPPLEMENTARY" init_value " new UnicodeBlock(\"CYRILLIC_SUPPLEMENTARY\", 0x500, 0x52f)" class_relation const_relation public
	      comment "
The &quot;Cyrillic Supplement&quot; Unicode Block. Previously
referred to as &quot;Cyrillic Supplementary&quot;.

@since 1.5

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 172315 // CYRILLIC_SUPPLEMENTARY (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 172443 // ARMENIAN (<unidirectional association>)
	  relation 172443 --->
	    a role_name "ARMENIAN" init_value " new UnicodeBlock(\"ARMENIAN\", 0x530, 0x58f)" class_relation const_relation public
	      comment "
The &quot;Armenian&quot; Unicode Block.

@since 1.2

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 172443 // ARMENIAN (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 172571 // HEBREW (<unidirectional association>)
	  relation 172571 --->
	    a role_name "HEBREW" init_value " new UnicodeBlock(\"HEBREW\", 0x590, 0x5ff)" class_relation const_relation public
	      comment "
The &quot;Hebrew&quot; Unicode Block.

@since 1.2

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 172571 // HEBREW (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 172699 // ARABIC (<unidirectional association>)
	  relation 172699 --->
	    a role_name "ARABIC" init_value " new UnicodeBlock(\"ARABIC\", 0x600, 0x6ff)" class_relation const_relation public
	      comment "
The &quot;Arabic&quot; Unicode Block.

@since 1.2

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 172699 // ARABIC (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 172827 // SYRIAC (<unidirectional association>)
	  relation 172827 --->
	    a role_name "SYRIAC" init_value " new UnicodeBlock(\"SYRIAC\", 0x700, 0x74f)" class_relation const_relation public
	      comment "
The &quot;Syriac&quot; Unicode Block.

@since 1.4

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 172827 // SYRIAC (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 172955 // THAANA (<unidirectional association>)
	  relation 172955 --->
	    a role_name "THAANA" init_value " new UnicodeBlock(\"THAANA\", 0x780, 0x7bf)" class_relation const_relation public
	      comment "
The &quot;Thaana&quot; Unicode Block.

@since 1.4

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 172955 // THAANA (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 173083 // DEVANAGARI (<unidirectional association>)
	  relation 173083 --->
	    a role_name "DEVANAGARI" init_value " new UnicodeBlock(\"DEVANAGARI\", 0x900, 0x97f)" class_relation const_relation public
	      comment "
The &quot;Devanagari&quot; Unicode Block.

@since 1.2

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 173083 // DEVANAGARI (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 173211 // BENGALI (<unidirectional association>)
	  relation 173211 --->
	    a role_name "BENGALI" init_value " new UnicodeBlock(\"BENGALI\", 0x980, 0x9ff)" class_relation const_relation public
	      comment "
The &quot;Bengali&quot; Unicode Block.

@since 1.2

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 173211 // BENGALI (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 173339 // GURMUKHI (<unidirectional association>)
	  relation 173339 --->
	    a role_name "GURMUKHI" init_value " new UnicodeBlock(\"GURMUKHI\", 0xa00, 0xa7f)" class_relation const_relation public
	      comment "
The &quot;Gurmukhi&quot; Unicode Block.

@since 1.2

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 173339 // GURMUKHI (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 173467 // GUJARATI (<unidirectional association>)
	  relation 173467 --->
	    a role_name "GUJARATI" init_value " new UnicodeBlock(\"GUJARATI\", 0xa80, 0xaff)" class_relation const_relation public
	      comment "
The &quot;Gujarati&quot; Unicode Block.

@since 1.2

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 173467 // GUJARATI (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 173595 // ORIYA (<unidirectional association>)
	  relation 173595 --->
	    a role_name "ORIYA" init_value " new UnicodeBlock(\"ORIYA\", 0xb00, 0xb7f)" class_relation const_relation public
	      comment "
The &quot;Oriya&quot; Unicode Block.

@since 1.2

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 173595 // ORIYA (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 173723 // TAMIL (<unidirectional association>)
	  relation 173723 --->
	    a role_name "TAMIL" init_value " new UnicodeBlock(\"TAMIL\", 0xb80, 0xbff)" class_relation const_relation public
	      comment "
The &quot;Tamil&quot; Unicode Block.

@since 1.2

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 173723 // TAMIL (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 173851 // TELUGU (<unidirectional association>)
	  relation 173851 --->
	    a role_name "TELUGU" init_value " new UnicodeBlock(\"TELUGU\", 0xc00, 0xc7f)" class_relation const_relation public
	      comment "
The &quot;Telugu&quot; Unicode Block.

@since 1.2

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 173851 // TELUGU (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 173979 // KANNADA (<unidirectional association>)
	  relation 173979 --->
	    a role_name "KANNADA" init_value " new UnicodeBlock(\"KANNADA\", 0xc80, 0xcff)" class_relation const_relation public
	      comment "
The &quot;Kannada&quot; Unicode Block.

@since 1.2

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 173979 // KANNADA (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 174107 // MALAYALAM (<unidirectional association>)
	  relation 174107 --->
	    a role_name "MALAYALAM" init_value " new UnicodeBlock(\"MALAYALAM\", 0xd00, 0xd7f)" class_relation const_relation public
	      comment "
The &quot;Malayalam&quot; Unicode Block.

@since 1.2

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 174107 // MALAYALAM (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 174235 // SINHALA (<unidirectional association>)
	  relation 174235 --->
	    a role_name "SINHALA" init_value " new UnicodeBlock(\"SINHALA\", 0xd80, 0xdff)" class_relation const_relation public
	      comment "
The &quot;Sinhala&quot; Unicode Block.

@since 1.4

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 174235 // SINHALA (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 174363 // THAI (<unidirectional association>)
	  relation 174363 --->
	    a role_name "THAI" init_value " new UnicodeBlock(\"THAI\", 0xe00, 0xe7f)" class_relation const_relation public
	      comment "
The &quot;Thai&quot; Unicode Block.

@since 1.2

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 174363 // THAI (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 174491 // LAO (<unidirectional association>)
	  relation 174491 --->
	    a role_name "LAO" init_value " new UnicodeBlock(\"LAO\", 0xe80, 0xeff)" class_relation const_relation public
	      comment "
The &quot;Lao&quot; Unicode Block.

@since 1.2

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 174491 // LAO (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 174619 // TIBETAN (<unidirectional association>)
	  relation 174619 --->
	    a role_name "TIBETAN" init_value " new UnicodeBlock(\"TIBETAN\", 0xf00, 0xfff)" class_relation const_relation public
	      comment "
The &quot;Tibetan&quot; Unicode Block.

@since 1.2

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 174619 // TIBETAN (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 174747 // MYANMAR (<unidirectional association>)
	  relation 174747 --->
	    a role_name "MYANMAR" init_value " new UnicodeBlock(\"MYANMAR\", 0x1000, 0x109f)" class_relation const_relation public
	      comment "
The &quot;Myanmar&quot; Unicode Block.

@since 1.4

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 174747 // MYANMAR (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 174875 // GEORGIAN (<unidirectional association>)
	  relation 174875 --->
	    a role_name "GEORGIAN" init_value " new UnicodeBlock(\"GEORGIAN\", 0x10a0, 0x10ff)" class_relation const_relation public
	      comment "
The &quot;Georgian&quot; Unicode Block.

@since 1.2

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 174875 // GEORGIAN (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 175003 // HANGUL_JAMO (<unidirectional association>)
	  relation 175003 --->
	    a role_name "HANGUL_JAMO" init_value " new UnicodeBlock(\"HANGUL_JAMO\", 0x1100, 0x11ff)" class_relation const_relation public
	      comment "
The &quot;Hangul Jamo&quot; Unicode Block.

@since 1.2

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 175003 // HANGUL_JAMO (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 175131 // ETHIOPIC (<unidirectional association>)
	  relation 175131 --->
	    a role_name "ETHIOPIC" init_value " new UnicodeBlock(\"ETHIOPIC\", 0x1200, 0x137f)" class_relation const_relation public
	      comment "
The &quot;Ethiopic&quot; Unicode Block.

@since 1.4

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 175131 // ETHIOPIC (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 175259 // CHEROKEE (<unidirectional association>)
	  relation 175259 --->
	    a role_name "CHEROKEE" init_value " new UnicodeBlock(\"CHEROKEE\", 0x13a0, 0x13ff)" class_relation const_relation public
	      comment "
The &quot;Cherokee&quot; Unicode Block.

@since 1.4

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 175259 // CHEROKEE (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 175387 // UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS (<unidirectional association>)
	  relation 175387 --->
	    a role_name "UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS" init_value " new UnicodeBlock(\"UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS\", 0x1400, 0x167f)" class_relation const_relation public
	      comment "
The &quot;Unified Canadian Aboriginal Syllabics&quot; Unicode Block.

@since 1.4

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 175387 // UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 175515 // OGHAM (<unidirectional association>)
	  relation 175515 --->
	    a role_name "OGHAM" init_value " new UnicodeBlock(\"OGHAM\", 0x1680, 0x169f)" class_relation const_relation public
	      comment "
The &quot;Ogham&quot; Unicode Block.

@since 1.4

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 175515 // OGHAM (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 175643 // RUNIC (<unidirectional association>)
	  relation 175643 --->
	    a role_name "RUNIC" init_value " new UnicodeBlock(\"RUNIC\", 0x16a0, 0x16ff)" class_relation const_relation public
	      comment "
The &quot;Runic&quot; Unicode Block.

@since 1.4

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 175643 // RUNIC (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 175771 // TAGALOG (<unidirectional association>)
	  relation 175771 --->
	    a role_name "TAGALOG" init_value " new UnicodeBlock(\"TAGALOG\", 0x1700, 0x171f)" class_relation const_relation public
	      comment "
The &quot;Tagalog&quot; Unicode Block.

@since 1.5

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 175771 // TAGALOG (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 175899 // HANUNOO (<unidirectional association>)
	  relation 175899 --->
	    a role_name "HANUNOO" init_value " new UnicodeBlock(\"HANUNOO\", 0x1720, 0x173f)" class_relation const_relation public
	      comment "
The &quot;Hanunoo&quot; Unicode Block.

@since 1.5

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 175899 // HANUNOO (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 176027 // BUHID (<unidirectional association>)
	  relation 176027 --->
	    a role_name "BUHID" init_value " new UnicodeBlock(\"BUHID\", 0x1740, 0x175f)" class_relation const_relation public
	      comment "
The &quot;Buhid&quot; Unicode Block.

@since 1.5

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 176027 // BUHID (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 176155 // TAGBANWA (<unidirectional association>)
	  relation 176155 --->
	    a role_name "TAGBANWA" init_value " new UnicodeBlock(\"TAGBANWA\", 0x1760, 0x177f)" class_relation const_relation public
	      comment "
The &quot;Tagbanwa&quot; Unicode Block.

@since 1.5

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 176155 // TAGBANWA (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 176283 // KHMER (<unidirectional association>)
	  relation 176283 --->
	    a role_name "KHMER" init_value " new UnicodeBlock(\"KHMER\", 0x1780, 0x17ff)" class_relation const_relation public
	      comment "
The &quot;Khmer&quot; Unicode Block.

@since 1.4

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 176283 // KHMER (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 176411 // MONGOLIAN (<unidirectional association>)
	  relation 176411 --->
	    a role_name "MONGOLIAN" init_value " new UnicodeBlock(\"MONGOLIAN\", 0x1800, 0x18af)" class_relation const_relation public
	      comment "
The &quot;Mongolian&quot; Unicode Block.

@since 1.4

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 176411 // MONGOLIAN (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 176539 // LIMBU (<unidirectional association>)
	  relation 176539 --->
	    a role_name "LIMBU" init_value " new UnicodeBlock(\"LIMBU\", 0x1900, 0x194f)" class_relation const_relation public
	      comment "
The &quot;Limbu&quot; Unicode Block.

@since 1.5

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 176539 // LIMBU (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 176667 // TAI_LE (<unidirectional association>)
	  relation 176667 --->
	    a role_name "TAI_LE" init_value " new UnicodeBlock(\"TAI_LE\", 0x1950, 0x197f)" class_relation const_relation public
	      comment "
The &quot;Tai Le&quot; Unicode Block.

@since 1.5

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 176667 // TAI_LE (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 176795 // KHMER_SYMBOLS (<unidirectional association>)
	  relation 176795 --->
	    a role_name "KHMER_SYMBOLS" init_value " new UnicodeBlock(\"KHMER_SYMBOLS\", 0x19e0, 0x19ff)" class_relation const_relation public
	      comment "
The &quot;Khmer Symbols&quot; Unicode Block.

@since 1.5

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 176795 // KHMER_SYMBOLS (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 176923 // PHONETIC_EXTENSIONS (<unidirectional association>)
	  relation 176923 --->
	    a role_name "PHONETIC_EXTENSIONS" init_value " new UnicodeBlock(\"PHONETIC_EXTENSIONS\", 0x1d00, 0x1d7f)" class_relation const_relation public
	      comment "
The &quot;Phonetic Extensions&quot; Unicode Block.

@since 1.5

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 176923 // PHONETIC_EXTENSIONS (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 177051 // LATIN_EXTENDED_ADDITIONAL (<unidirectional association>)
	  relation 177051 --->
	    a role_name "LATIN_EXTENDED_ADDITIONAL" init_value " new UnicodeBlock(\"LATIN_EXTENDED_ADDITIONAL\", 0x1e00, 0x1eff)" class_relation const_relation public
	      comment "
The &quot;Latin Extended Additional&quot; Unicode Block.

@since 1.2

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 177051 // LATIN_EXTENDED_ADDITIONAL (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 177179 // GREEK_EXTENDED (<unidirectional association>)
	  relation 177179 --->
	    a role_name "GREEK_EXTENDED" init_value " new UnicodeBlock(\"GREEK_EXTENDED\", 0x1f00, 0x1fff)" class_relation const_relation public
	      comment "
The &quot;Greek Extended&quot; Unicode Block.

@since 1.2

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 177179 // GREEK_EXTENDED (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 177307 // GENERAL_PUNCTUATION (<unidirectional association>)
	  relation 177307 --->
	    a role_name "GENERAL_PUNCTUATION" init_value " new UnicodeBlock(\"GENERAL_PUNCTUATION\", 0x2000, 0x206f)" class_relation const_relation public
	      comment "
The &quot;General Punctuation&quot; Unicode Block.

@since 1.2

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 177307 // GENERAL_PUNCTUATION (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 177435 // SUPERSCRIPTS_AND_SUBSCRIPTS (<unidirectional association>)
	  relation 177435 --->
	    a role_name "SUPERSCRIPTS_AND_SUBSCRIPTS" init_value " new UnicodeBlock(\"SUPERSCRIPTS_AND_SUBSCRIPTS\", 0x2070, 0x209f)" class_relation const_relation public
	      comment "
The &quot;Superscripts and Subscripts&quot; Unicode Block.

@since 1.2

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 177435 // SUPERSCRIPTS_AND_SUBSCRIPTS (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 177563 // CURRENCY_SYMBOLS (<unidirectional association>)
	  relation 177563 --->
	    a role_name "CURRENCY_SYMBOLS" init_value " new UnicodeBlock(\"CURRENCY_SYMBOLS\", 0x20a0, 0x20cf)" class_relation const_relation public
	      comment "
The &quot;Currency Symbols&quot; Unicode Block.

@since 1.2

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 177563 // CURRENCY_SYMBOLS (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 177691 // COMBINING_MARKS_FOR_SYMBOLS (<unidirectional association>)
	  relation 177691 --->
	    a role_name "COMBINING_MARKS_FOR_SYMBOLS" init_value " new UnicodeBlock(\"COMBINING_MARKS_FOR_SYMBOLS\", 0x20d0, 0x20ff)" class_relation const_relation public
	      comment "
The &quot;Combining Diacritical Marks for Symbols&quot; Unicode
Block. Previously referred to as &quot;Combining Marks for
Symbols&quot;.

@since 1.2

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 177691 // COMBINING_MARKS_FOR_SYMBOLS (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 177819 // LETTERLIKE_SYMBOLS (<unidirectional association>)
	  relation 177819 --->
	    a role_name "LETTERLIKE_SYMBOLS" init_value " new UnicodeBlock(\"LETTERLIKE_SYMBOLS\", 0x2100, 0x214f)" class_relation const_relation public
	      comment "
The &quot;Letterlike Symbols&quot; Unicode Block.

@since 1.2

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 177819 // LETTERLIKE_SYMBOLS (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 177947 // NUMBER_FORMS (<unidirectional association>)
	  relation 177947 --->
	    a role_name "NUMBER_FORMS" init_value " new UnicodeBlock(\"NUMBER_FORMS\", 0x2150, 0x218f)" class_relation const_relation public
	      comment "
The &quot;Number Forms&quot; Unicode Block.

@since 1.2

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 177947 // NUMBER_FORMS (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 178075 // ARROWS (<unidirectional association>)
	  relation 178075 --->
	    a role_name "ARROWS" init_value " new UnicodeBlock(\"ARROWS\", 0x2190, 0x21ff)" class_relation const_relation public
	      comment "
The &quot;Arrows&quot; Unicode Block.

@since 1.2

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 178075 // ARROWS (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 178203 // MATHEMATICAL_OPERATORS (<unidirectional association>)
	  relation 178203 --->
	    a role_name "MATHEMATICAL_OPERATORS" init_value " new UnicodeBlock(\"MATHEMATICAL_OPERATORS\", 0x2200, 0x22ff)" class_relation const_relation public
	      comment "
The &quot;Mathematical Operators&quot; Unicode Block.

@since 1.2

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 178203 // MATHEMATICAL_OPERATORS (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 178331 // MISCELLANEOUS_TECHNICAL (<unidirectional association>)
	  relation 178331 --->
	    a role_name "MISCELLANEOUS_TECHNICAL" init_value " new UnicodeBlock(\"MISCELLANEOUS_TECHNICAL\", 0x2300, 0x23ff)" class_relation const_relation public
	      comment "
The &quot;Miscellaneous Technical&quot; Unicode Block.

@since 1.2

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 178331 // MISCELLANEOUS_TECHNICAL (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 178459 // CONTROL_PICTURES (<unidirectional association>)
	  relation 178459 --->
	    a role_name "CONTROL_PICTURES" init_value " new UnicodeBlock(\"CONTROL_PICTURES\", 0x2400, 0x243f)" class_relation const_relation public
	      comment "
The &quot;Control Pictures&quot; Unicode Block.

@since 1.2

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 178459 // CONTROL_PICTURES (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 178587 // OPTICAL_CHARACTER_RECOGNITION (<unidirectional association>)
	  relation 178587 --->
	    a role_name "OPTICAL_CHARACTER_RECOGNITION" init_value " new UnicodeBlock(\"OPTICAL_CHARACTER_RECOGNITION\", 0x2440, 0x245f)" class_relation const_relation public
	      comment "
The &quot;Optical Character Recognition&quot; Unicode Block.

@since 1.2

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 178587 // OPTICAL_CHARACTER_RECOGNITION (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 178715 // ENCLOSED_ALPHANUMERICS (<unidirectional association>)
	  relation 178715 --->
	    a role_name "ENCLOSED_ALPHANUMERICS" init_value " new UnicodeBlock(\"ENCLOSED_ALPHANUMERICS\", 0x2460, 0x24ff)" class_relation const_relation public
	      comment "
The &quot;Enclosed Alphanumerics&quot; Unicode Block.

@since 1.2

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 178715 // ENCLOSED_ALPHANUMERICS (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 178843 // BOX_DRAWING (<unidirectional association>)
	  relation 178843 --->
	    a role_name "BOX_DRAWING" init_value " new UnicodeBlock(\"BOX_DRAWING\", 0x2500, 0x257f)" class_relation const_relation public
	      comment "
The &quot;Box Drawing&quot; Unicode Block.

@since 1.2

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 178843 // BOX_DRAWING (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 178971 // BLOCK_ELEMENTS (<unidirectional association>)
	  relation 178971 --->
	    a role_name "BLOCK_ELEMENTS" init_value " new UnicodeBlock(\"BLOCK_ELEMENTS\", 0x2580, 0x259f)" class_relation const_relation public
	      comment "
The &quot;Block Elements&quot; Unicode Block.

@since 1.2

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 178971 // BLOCK_ELEMENTS (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 179099 // GEOMETRIC_SHAPES (<unidirectional association>)
	  relation 179099 --->
	    a role_name "GEOMETRIC_SHAPES" init_value " new UnicodeBlock(\"GEOMETRIC_SHAPES\", 0x25a0, 0x25ff)" class_relation const_relation public
	      comment "
The &quot;Geometric Shapes&quot; Unicode Block.

@since 1.2

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 179099 // GEOMETRIC_SHAPES (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 179227 // MISCELLANEOUS_SYMBOLS (<unidirectional association>)
	  relation 179227 --->
	    a role_name "MISCELLANEOUS_SYMBOLS" init_value " new UnicodeBlock(\"MISCELLANEOUS_SYMBOLS\", 0x2600, 0x26ff)" class_relation const_relation public
	      comment "
The &quot;Miscellaneous Symbols&quot; Unicode Block.

@since 1.2

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 179227 // MISCELLANEOUS_SYMBOLS (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 179355 // DINGBATS (<unidirectional association>)
	  relation 179355 --->
	    a role_name "DINGBATS" init_value " new UnicodeBlock(\"DINGBATS\", 0x2700, 0x27bf)" class_relation const_relation public
	      comment "
The &quot;Dingbats&quot; Unicode Block.

@since 1.2

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 179355 // DINGBATS (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 179483 // MISCELLANEOUS_MATHEMATICAL_SYMBOLS_A (<unidirectional association>)
	  relation 179483 --->
	    a role_name "MISCELLANEOUS_MATHEMATICAL_SYMBOLS_A" init_value " new UnicodeBlock(\"MISCELLANEOUS_MATHEMATICAL_SYMBOLS_A\", 0x27c0, 0x27ef)" class_relation const_relation public
	      comment "
The &quot;Miscellaneous Mathematical Symbols-A&quot; Unicode Block.

@since 1.5

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 179483 // MISCELLANEOUS_MATHEMATICAL_SYMBOLS_A (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 179611 // SUPPLEMENTAL_ARROWS_A (<unidirectional association>)
	  relation 179611 --->
	    a role_name "SUPPLEMENTAL_ARROWS_A" init_value " new UnicodeBlock(\"SUPPLEMENTAL_ARROWS_A\", 0x27f0, 0x27ff)" class_relation const_relation public
	      comment "
The &quot;Supplemental Arrows-A&quot; Unicode Block.

@since 1.5

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 179611 // SUPPLEMENTAL_ARROWS_A (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 179739 // BRAILLE_PATTERNS (<unidirectional association>)
	  relation 179739 --->
	    a role_name "BRAILLE_PATTERNS" init_value " new UnicodeBlock(\"BRAILLE_PATTERNS\", 0x2800, 0x28ff)" class_relation const_relation public
	      comment "
The &quot;Braille Patterns&quot; Unicode Block.

@since 1.4

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 179739 // BRAILLE_PATTERNS (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 179867 // SUPPLEMENTAL_ARROWS_B (<unidirectional association>)
	  relation 179867 --->
	    a role_name "SUPPLEMENTAL_ARROWS_B" init_value " new UnicodeBlock(\"SUPPLEMENTAL_ARROWS_B\", 0x2900, 0x297f)" class_relation const_relation public
	      comment "
The &quot;Supplemental Arrows-B&quot; Unicode Block.

@since 1.5

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 179867 // SUPPLEMENTAL_ARROWS_B (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 179995 // MISCELLANEOUS_MATHEMATICAL_SYMBOLS_B (<unidirectional association>)
	  relation 179995 --->
	    a role_name "MISCELLANEOUS_MATHEMATICAL_SYMBOLS_B" init_value " new UnicodeBlock(\"MISCELLANEOUS_MATHEMATICAL_SYMBOLS_B\", 0x2980, 0x29ff)" class_relation const_relation public
	      comment "
The &quot;Miscellaneous Mathematical Symbols-B&quot; Unicode Block.

@since 1.5

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 179995 // MISCELLANEOUS_MATHEMATICAL_SYMBOLS_B (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 180123 // SUPPLEMENTAL_MATHEMATICAL_OPERATORS (<unidirectional association>)
	  relation 180123 --->
	    a role_name "SUPPLEMENTAL_MATHEMATICAL_OPERATORS" init_value " new UnicodeBlock(\"SUPPLEMENTAL_MATHEMATICAL_OPERATORS\", 0x2a00, 0x2aff)" class_relation const_relation public
	      comment "
The &quot;Supplemental Mathematical Operators&quot; Unicode Block.

@since 1.5

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 180123 // SUPPLEMENTAL_MATHEMATICAL_OPERATORS (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 180251 // MISCELLANEOUS_SYMBOLS_AND_ARROWS (<unidirectional association>)
	  relation 180251 --->
	    a role_name "MISCELLANEOUS_SYMBOLS_AND_ARROWS" init_value " new UnicodeBlock(\"MISCELLANEOUS_SYMBOLS_AND_ARROWS\", 0x2b00, 0x2bff)" class_relation const_relation public
	      comment "
The &quot;Miscellaneous Symbols and Arrows&quot; Unicode Block.

@since 1.2

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 180251 // MISCELLANEOUS_SYMBOLS_AND_ARROWS (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 180379 // CJK_RADICALS_SUPPLEMENT (<unidirectional association>)
	  relation 180379 --->
	    a role_name "CJK_RADICALS_SUPPLEMENT" init_value " new UnicodeBlock(\"CJK_RADICALS_SUPPLEMENT\", 0x2e80, 0x2eff)" class_relation const_relation public
	      comment "
The &quot;CJK Radicals Supplement&quot; Unicode Block.

@since 1.4

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 180379 // CJK_RADICALS_SUPPLEMENT (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 180507 // KANGXI_RADICALS (<unidirectional association>)
	  relation 180507 --->
	    a role_name "KANGXI_RADICALS" init_value " new UnicodeBlock(\"KANGXI_RADICALS\", 0x2f00, 0x2fdf)" class_relation const_relation public
	      comment "
The &quot;Kangxi Radicals&quot; Unicode Block.

@since 1.4

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 180507 // KANGXI_RADICALS (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 180635 // IDEOGRAPHIC_DESCRIPTION_CHARACTERS (<unidirectional association>)
	  relation 180635 --->
	    a role_name "IDEOGRAPHIC_DESCRIPTION_CHARACTERS" init_value " new UnicodeBlock(\"IDEOGRAPHIC_DESCRIPTION_CHARACTERS\", 0x2ff0, 0x2fff)" class_relation const_relation public
	      comment "
The &quot;Ideographic Description Characters&quot; Unicode Block.

@since 1.4

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 180635 // IDEOGRAPHIC_DESCRIPTION_CHARACTERS (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 180763 // CJK_SYMBOLS_AND_PUNCTUATION (<unidirectional association>)
	  relation 180763 --->
	    a role_name "CJK_SYMBOLS_AND_PUNCTUATION" init_value " new UnicodeBlock(\"CJK_SYMBOLS_AND_PUNCTUATION\", 0x3000, 0x303f)" class_relation const_relation public
	      comment "
The &quot;CJK Symbols and Punctuation&quot; Unicode Block.

@since 1.2

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 180763 // CJK_SYMBOLS_AND_PUNCTUATION (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 180891 // HIRAGANA (<unidirectional association>)
	  relation 180891 --->
	    a role_name "HIRAGANA" init_value " new UnicodeBlock(\"HIRAGANA\", 0x3040, 0x309f)" class_relation const_relation public
	      comment "
The &quot;Hiragana&quot; Unicode Block.

@since 1.2

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 180891 // HIRAGANA (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 181019 // KATAKANA (<unidirectional association>)
	  relation 181019 --->
	    a role_name "KATAKANA" init_value " new UnicodeBlock(\"KATAKANA\", 0x30a0, 0x30ff)" class_relation const_relation public
	      comment "
The &quot;Katakana&quot; Unicode Block.

@since 1.2

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 181019 // KATAKANA (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 181147 // BOPOMOFO (<unidirectional association>)
	  relation 181147 --->
	    a role_name "BOPOMOFO" init_value " new UnicodeBlock(\"BOPOMOFO\", 0x3100, 0x312f)" class_relation const_relation public
	      comment "
The &quot;Bopomofo&quot; Unicode Block.

@since 1.2

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 181147 // BOPOMOFO (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 181275 // HANGUL_COMPATIBILITY_JAMO (<unidirectional association>)
	  relation 181275 --->
	    a role_name "HANGUL_COMPATIBILITY_JAMO" init_value " new UnicodeBlock(\"HANGUL_COMPATIBILITY_JAMO\", 0x3130, 0x318f)" class_relation const_relation public
	      comment "
The &quot;Hangul Compatibility Jamo&quot; Unicode Block.

@since 1.2

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 181275 // HANGUL_COMPATIBILITY_JAMO (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 181403 // KANBUN (<unidirectional association>)
	  relation 181403 --->
	    a role_name "KANBUN" init_value " new UnicodeBlock(\"KANBUN\", 0x3190, 0x319f)" class_relation const_relation public
	      comment "
The &quot;Kanbun&quot; Unicode Block.

@since 1.2

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 181403 // KANBUN (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 181531 // BOPOMOFO_EXTENDED (<unidirectional association>)
	  relation 181531 --->
	    a role_name "BOPOMOFO_EXTENDED" init_value " new UnicodeBlock(\"BOPOMOFO_EXTENDED\", 0x31a0, 0x31bf)" class_relation const_relation public
	      comment "
The &quot;Bopomofo Extended&quot; Unicode Block.

@since 1.4

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 181531 // BOPOMOFO_EXTENDED (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 181659 // KATAKANA_PHONETIC_EXTENSIONS (<unidirectional association>)
	  relation 181659 --->
	    a role_name "KATAKANA_PHONETIC_EXTENSIONS" init_value " new UnicodeBlock(\"KATAKANA_PHONETIC_EXTENSIONS\", 0x31f0, 0x31ff)" class_relation const_relation public
	      comment "
The &quot;Katakana Phonetic Extensions&quot; Unicode Block.

@since 1.5

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 181659 // KATAKANA_PHONETIC_EXTENSIONS (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 181787 // ENCLOSED_CJK_LETTERS_AND_MONTHS (<unidirectional association>)
	  relation 181787 --->
	    a role_name "ENCLOSED_CJK_LETTERS_AND_MONTHS" init_value " new UnicodeBlock(\"ENCLOSED_CJK_LETTERS_AND_MONTHS\", 0x3200, 0x32ff)" class_relation const_relation public
	      comment "
The &quot;Enclosed CJK Letters and Months&quot; Unicode Block.

@since 1.2

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 181787 // ENCLOSED_CJK_LETTERS_AND_MONTHS (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 181915 // CJK_COMPATIBILITY (<unidirectional association>)
	  relation 181915 --->
	    a role_name "CJK_COMPATIBILITY" init_value " new UnicodeBlock(\"CJK_COMPATIBILITY\", 0x3300, 0x33ff)" class_relation const_relation public
	      comment "
The &quot;CJK Compatibility&quot; Unicode Block.

@since 1.2

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 181915 // CJK_COMPATIBILITY (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 182043 // CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A (<unidirectional association>)
	  relation 182043 --->
	    a role_name "CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A" init_value " new UnicodeBlock(\"CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A\", 0x3400, 0x4dbf)" class_relation const_relation public
	      comment "
The &quot;CJK Unified Ideographs Extension A&quot; Unicode Block.

@since 1.4

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 182043 // CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 182171 // YIJING_HEXAGRAM_SYMBOLS (<unidirectional association>)
	  relation 182171 --->
	    a role_name "YIJING_HEXAGRAM_SYMBOLS" init_value " new UnicodeBlock(\"YIJING_HEXAGRAM_SYMBOLS\", 0x4dc0, 0x4dff)" class_relation const_relation public
	      comment "
The &quot;Yijing Hexagram Symbols&quot; Unicode Block.

@since 1.5

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 182171 // YIJING_HEXAGRAM_SYMBOLS (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 182299 // CJK_UNIFIED_IDEOGRAPHS (<unidirectional association>)
	  relation 182299 --->
	    a role_name "CJK_UNIFIED_IDEOGRAPHS" init_value " new UnicodeBlock(\"CJK_UNIFIED_IDEOGRAPHS\", 0x4e00, 0x9fff)" class_relation const_relation public
	      comment "
The &quot;CJK Unified Ideographs&quot; Unicode Block.

@since 1.2

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 182299 // CJK_UNIFIED_IDEOGRAPHS (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 182427 // YI_SYLLABLES (<unidirectional association>)
	  relation 182427 --->
	    a role_name "YI_SYLLABLES" init_value " new UnicodeBlock(\"YI_SYLLABLES\", 0xa000, 0xa48f)" class_relation const_relation public
	      comment "
The &quot;Yi Syllables&quot; Unicode Block.

@since 1.4

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 182427 // YI_SYLLABLES (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 182555 // YI_RADICALS (<unidirectional association>)
	  relation 182555 --->
	    a role_name "YI_RADICALS" init_value " new UnicodeBlock(\"YI_RADICALS\", 0xa490, 0xa4cf)" class_relation const_relation public
	      comment "
The &quot;Yi Radicals&quot; Unicode Block.

@since 1.4

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 182555 // YI_RADICALS (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 182683 // HANGUL_SYLLABLES (<unidirectional association>)
	  relation 182683 --->
	    a role_name "HANGUL_SYLLABLES" init_value " new UnicodeBlock(\"HANGUL_SYLLABLES\", 0xac00, 0xd7af)" class_relation const_relation public
	      comment "
The &quot;Hangul Syllables&quot; Unicode Block.

@since 1.2

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 182683 // HANGUL_SYLLABLES (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 182811 // HIGH_SURROGATES (<unidirectional association>)
	  relation 182811 --->
	    a role_name "HIGH_SURROGATES" init_value " new UnicodeBlock(\"HIGH_SURROGATES\", 0xd800, 0xdb7f)" class_relation const_relation public
	      comment "
The &quot;High Surrogates&quot; Unicode Block. This block represents
code point values in the high surrogate range 0xD800 to 0xDB7F

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 182811 // HIGH_SURROGATES (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 182939 // HIGH_PRIVATE_USE_SURROGATES (<unidirectional association>)
	  relation 182939 --->
	    a role_name "HIGH_PRIVATE_USE_SURROGATES" init_value " new UnicodeBlock(\"HIGH_PRIVATE_USE_SURROGATES\", 0xdb80, 0xdbff)" class_relation const_relation public
	      comment "
The &quot;High Private Use Surrogates&quot; Unicode Block. This block
represents code point values in the high surrogate range 0xDB80 to
0xDBFF

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 182939 // HIGH_PRIVATE_USE_SURROGATES (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 183067 // LOW_SURROGATES (<unidirectional association>)
	  relation 183067 --->
	    a role_name "LOW_SURROGATES" init_value " new UnicodeBlock(\"LOW_SURROGATES\", 0xdc00, 0xdfff)" class_relation const_relation public
	      comment "
The &quot;Low Surrogates&quot; Unicode Block. This block represents
code point values in the low surrogate range 0xDC00 to 0xDFFF

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 183067 // LOW_SURROGATES (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 183195 // PRIVATE_USE_AREA (<unidirectional association>)
	  relation 183195 --->
	    a role_name "PRIVATE_USE_AREA" init_value " new UnicodeBlock(\"PRIVATE_USE_AREA\", 0xe000, 0xf8ff)" class_relation const_relation public
	      comment "
The &quot;Private Use Area&quot; Unicode Block.

@since 1.2

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 183195 // PRIVATE_USE_AREA (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 183323 // CJK_COMPATIBILITY_IDEOGRAPHS (<unidirectional association>)
	  relation 183323 --->
	    a role_name "CJK_COMPATIBILITY_IDEOGRAPHS" init_value " new UnicodeBlock(\"CJK_COMPATIBILITY_IDEOGRAPHS\", 0xf900, 0xfaff)" class_relation const_relation public
	      comment "
The &quot;CJK Compatibility Ideographs&quot; Unicode Block.

@since 1.2

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 183323 // CJK_COMPATIBILITY_IDEOGRAPHS (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 183451 // ALPHABETIC_PRESENTATION_FORMS (<unidirectional association>)
	  relation 183451 --->
	    a role_name "ALPHABETIC_PRESENTATION_FORMS" init_value " new UnicodeBlock(\"ALPHABETIC_PRESENTATION_FORMS\", 0xfb00, 0xfb4f)" class_relation const_relation public
	      comment "
The &quot;Alphabetic Presentation Forms&quot; Unicode Block.

@since 1.2

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 183451 // ALPHABETIC_PRESENTATION_FORMS (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 183579 // ARABIC_PRESENTATION_FORMS_A (<unidirectional association>)
	  relation 183579 --->
	    a role_name "ARABIC_PRESENTATION_FORMS_A" init_value " new UnicodeBlock(\"ARABIC_PRESENTATION_FORMS_A\", 0xfb50, 0xfdff)" class_relation const_relation public
	      comment "
The &quot;Arabic Presentation Forms-A&quot; Unicode Block.

@since 1.2

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 183579 // ARABIC_PRESENTATION_FORMS_A (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 183707 // VARIATION_SELECTORS (<unidirectional association>)
	  relation 183707 --->
	    a role_name "VARIATION_SELECTORS" init_value " new UnicodeBlock(\"VARIATION_SELECTORS\", 0xfe00, 0xfe0f)" class_relation const_relation public
	      comment "
The &quot;Variation Selectors&quot; Unicode Block.

@since 1.5

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 183707 // VARIATION_SELECTORS (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 183835 // COMBINING_HALF_MARKS (<unidirectional association>)
	  relation 183835 --->
	    a role_name "COMBINING_HALF_MARKS" init_value " new UnicodeBlock(\"COMBINING_HALF_MARKS\", 0xfe20, 0xfe2f)" class_relation const_relation public
	      comment "
The &quot;Combining Half Marks&quot; Unicode Block.

@since 1.2

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 183835 // COMBINING_HALF_MARKS (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 183963 // CJK_COMPATIBILITY_FORMS (<unidirectional association>)
	  relation 183963 --->
	    a role_name "CJK_COMPATIBILITY_FORMS" init_value " new UnicodeBlock(\"CJK_COMPATIBILITY_FORMS\", 0xfe30, 0xfe4f)" class_relation const_relation public
	      comment "
The &quot;CJK Compatibility Forms&quot; Unicode Block.

@since 1.2

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 183963 // CJK_COMPATIBILITY_FORMS (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 184091 // SMALL_FORM_VARIANTS (<unidirectional association>)
	  relation 184091 --->
	    a role_name "SMALL_FORM_VARIANTS" init_value " new UnicodeBlock(\"SMALL_FORM_VARIANTS\", 0xfe50, 0xfe6f)" class_relation const_relation public
	      comment "
The &quot;Small Form Variants&quot; Unicode Block.

@since 1.2

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 184091 // SMALL_FORM_VARIANTS (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 184219 // ARABIC_PRESENTATION_FORMS_B (<unidirectional association>)
	  relation 184219 --->
	    a role_name "ARABIC_PRESENTATION_FORMS_B" init_value " new UnicodeBlock(\"ARABIC_PRESENTATION_FORMS_B\", 0xfe70, 0xfeff)" class_relation const_relation public
	      comment "
The &quot;Arabic Presentation Forms-B&quot; Unicode Block.

@since 1.2

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 184219 // ARABIC_PRESENTATION_FORMS_B (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 184347 // HALFWIDTH_AND_FULLWIDTH_FORMS (<unidirectional association>)
	  relation 184347 --->
	    a role_name "HALFWIDTH_AND_FULLWIDTH_FORMS" init_value " new UnicodeBlock(\"HALFWIDTH_AND_FULLWIDTH_FORMS\", 0xff00, 0xffef)" class_relation const_relation public
	      comment "
The &quot;Halfwidth and Fullwidth Forms&quot; Unicode Block.

@since 1.2

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 184347 // HALFWIDTH_AND_FULLWIDTH_FORMS (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 184475 // SPECIALS (<unidirectional association>)
	  relation 184475 --->
	    a role_name "SPECIALS" init_value " new UnicodeBlock(\"SPECIALS\", 0xfff0, 0xffff)" class_relation const_relation public
	      comment "
The &quot;Specials&quot; Unicode Block.

@since 1.2

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 184475 // SPECIALS (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 184603 // LINEAR_B_SYLLABARY (<unidirectional association>)
	  relation 184603 --->
	    a role_name "LINEAR_B_SYLLABARY" init_value " new UnicodeBlock(\"LINEAR_B_SYLLABARY\", 0x10000, 0x1007f)" class_relation const_relation public
	      comment "
The &quot;Linear B Syllabary&quot; Unicode Block.

@since 1.2

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 184603 // LINEAR_B_SYLLABARY (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 184731 // LINEAR_B_IDEOGRAMS (<unidirectional association>)
	  relation 184731 --->
	    a role_name "LINEAR_B_IDEOGRAMS" init_value " new UnicodeBlock(\"LINEAR_B_IDEOGRAMS\", 0x10080, 0x100ff)" class_relation const_relation public
	      comment "
The &quot;Linear B Ideograms&quot; Unicode Block.

@since 1.5

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 184731 // LINEAR_B_IDEOGRAMS (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 184859 // AEGEAN_NUMBERS (<unidirectional association>)
	  relation 184859 --->
	    a role_name "AEGEAN_NUMBERS" init_value " new UnicodeBlock(\"AEGEAN_NUMBERS\", 0x10100, 0x1013f)" class_relation const_relation public
	      comment "
The &quot;Aegean Numbers&quot; Unicode Block.

@since 1.5

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 184859 // AEGEAN_NUMBERS (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 184987 // OLD_ITALIC (<unidirectional association>)
	  relation 184987 --->
	    a role_name "OLD_ITALIC" init_value " new UnicodeBlock(\"OLD_ITALIC\", 0x10300, 0x1032f)" class_relation const_relation public
	      comment "
The &quot;Old Italic&quot; Unicode Block.

@since 1.5

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 184987 // OLD_ITALIC (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 185115 // GOTHIC (<unidirectional association>)
	  relation 185115 --->
	    a role_name "GOTHIC" init_value " new UnicodeBlock(\"GOTHIC\", 0x10330, 0x1034f)" class_relation const_relation public
	      comment "
The &quot;Gothic&quot; Unicode Block.

@since 1.5

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 185115 // GOTHIC (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 185243 // UGARITIC (<unidirectional association>)
	  relation 185243 --->
	    a role_name "UGARITIC" init_value " new UnicodeBlock(\"UGARITIC\", 0x10380, 0x1039f)" class_relation const_relation public
	      comment "
The &quot;Ugaritic&quot; Unicode Block.

@since 1.5

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 185243 // UGARITIC (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 185371 // DESERET (<unidirectional association>)
	  relation 185371 --->
	    a role_name "DESERET" init_value " new UnicodeBlock(\"DESERET\", 0x10400, 0x1044f)" class_relation const_relation public
	      comment "
The &quot;Deseret&quot; Unicode Block.

@since 1.5

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 185371 // DESERET (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 185499 // SHAVIAN (<unidirectional association>)
	  relation 185499 --->
	    a role_name "SHAVIAN" init_value " new UnicodeBlock(\"SHAVIAN\", 0x10450, 0x1047f)" class_relation const_relation public
	      comment "
The &quot;Shavian&quot; Unicode Block.

@since 1.5

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 185499 // SHAVIAN (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 185627 // OSMANYA (<unidirectional association>)
	  relation 185627 --->
	    a role_name "OSMANYA" init_value " new UnicodeBlock(\"OSMANYA\", 0x10480, 0x104af)" class_relation const_relation public
	      comment "
The &quot;Osmanya&quot; Unicode Block.

@since 1.5

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 185627 // OSMANYA (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 185755 // CYPRIOT_SYLLABARY (<unidirectional association>)
	  relation 185755 --->
	    a role_name "CYPRIOT_SYLLABARY" init_value " new UnicodeBlock(\"CYPRIOT_SYLLABARY\", 0x10800, 0x1083f)" class_relation const_relation public
	      comment "
The &quot;Cypriot Syllabary&quot; Unicode Block.

@since 1.5

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 185755 // CYPRIOT_SYLLABARY (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 185883 // BYZANTINE_MUSICAL_SYMBOLS (<unidirectional association>)
	  relation 185883 --->
	    a role_name "BYZANTINE_MUSICAL_SYMBOLS" init_value " new UnicodeBlock(\"BYZANTINE_MUSICAL_SYMBOLS\", 0x1d000, 0x1d0ff)" class_relation const_relation public
	      comment "
The &quot;Byzantine Musical Symbols&quot; Unicode Block.

@since 1.5

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 185883 // BYZANTINE_MUSICAL_SYMBOLS (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 186011 // MUSICAL_SYMBOLS (<unidirectional association>)
	  relation 186011 --->
	    a role_name "MUSICAL_SYMBOLS" init_value " new UnicodeBlock(\"MUSICAL_SYMBOLS\", 0x1d100, 0x1d1ff)" class_relation const_relation public
	      comment "
The &quot;Musical Symbols&quot; Unicode Block.

@since 1.5

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 186011 // MUSICAL_SYMBOLS (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 186139 // TAI_XUAN_JING_SYMBOLS (<unidirectional association>)
	  relation 186139 --->
	    a role_name "TAI_XUAN_JING_SYMBOLS" init_value " new UnicodeBlock(\"TAI_XUAN_JING_SYMBOLS\", 0x1d300, 0x1d35f)" class_relation const_relation public
	      comment "
The &quot;Tai Xuan Jing Symbols&quot; Unicode Block.

@since 1.5

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 186139 // TAI_XUAN_JING_SYMBOLS (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 186267 // MATHEMATICAL_ALPHANUMERIC_SYMBOLS (<unidirectional association>)
	  relation 186267 --->
	    a role_name "MATHEMATICAL_ALPHANUMERIC_SYMBOLS" init_value " new UnicodeBlock(\"MATHEMATICAL_ALPHANUMERIC_SYMBOLS\", 0x1d400, 0x1d7ff)" class_relation const_relation public
	      comment "
The &quot;Mathematical Alphanumeric Symbols&quot; Unicode Block.

@since 1.5

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 186267 // MATHEMATICAL_ALPHANUMERIC_SYMBOLS (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 186395 // CJK_UNIFIED_IDEOGRAPHS_EXTENSION_B (<unidirectional association>)
	  relation 186395 --->
	    a role_name "CJK_UNIFIED_IDEOGRAPHS_EXTENSION_B" init_value " new UnicodeBlock(\"CJK_UNIFIED_IDEOGRAPHS_EXTENSION_B\", 0x20000, 0x2a6df)" class_relation const_relation public
	      comment "
The &quot;CJK Unified Ideographs Extension B&quot; Unicode Block.

@since 1.5

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 186395 // CJK_UNIFIED_IDEOGRAPHS_EXTENSION_B (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 186523 // CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENT (<unidirectional association>)
	  relation 186523 --->
	    a role_name "CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENT" init_value " new UnicodeBlock(\"CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENT\", 0x2f800, 0x2fa1f)" class_relation const_relation public
	      comment "
The &quot;CJK Compatibility Ideographs Supplement&quot; Unicode Block.

@since 1.5

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 186523 // CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENT (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 186651 // TAGS (<unidirectional association>)
	  relation 186651 --->
	    a role_name "TAGS" init_value " new UnicodeBlock(\"TAGS\", 0xe0000, 0xe007f)" class_relation const_relation public
	      comment "
The &quot;Tags&quot; Unicode Block.

@since 1.5

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 186651 // TAGS (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 186779 // VARIATION_SELECTORS_SUPPLEMENT (<unidirectional association>)
	  relation 186779 --->
	    a role_name "VARIATION_SELECTORS_SUPPLEMENT" init_value " new UnicodeBlock(\"VARIATION_SELECTORS_SUPPLEMENT\", 0xe0100, 0xe01ef)" class_relation const_relation public
	      comment "
The &quot;Variation Selectors Supplement&quot; Unicode Block.

@since 1.5

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 186779 // VARIATION_SELECTORS_SUPPLEMENT (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 186907 // SUPPLEMENTARY_PRIVATE_USE_AREA_A (<unidirectional association>)
	  relation 186907 --->
	    a role_name "SUPPLEMENTARY_PRIVATE_USE_AREA_A" init_value " new UnicodeBlock(\"SUPPLEMENTARY_PRIVATE_USE_AREA_A\", 0xf0000, 0xfffff)" class_relation const_relation public
	      comment "
The &quot;Supplementary Private Use Area-A&quot; Unicode Block.

@since 1.5

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 186907 // SUPPLEMENTARY_PRIVATE_USE_AREA_A (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 187035 // SUPPLEMENTARY_PRIVATE_USE_AREA_B (<unidirectional association>)
	  relation 187035 --->
	    a role_name "SUPPLEMENTARY_PRIVATE_USE_AREA_B" init_value " new UnicodeBlock(\"SUPPLEMENTARY_PRIVATE_USE_AREA_B\", 0x100000, 0x10ffff)" class_relation const_relation public
	      comment "
The &quot;Supplementary Private Use Area-B&quot; Unicode Block.

@since 1.5

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 187035 // SUPPLEMENTARY_PRIVATE_USE_AREA_B (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	classrelation 187163 // BLOCKS (<unidirectional association>)
	  relation 187163 --->
	    a role_name "BLOCKS" multiplicity "[]" init_value " new UnicodeBlock[] {
            null,
            UnicodeBlock.BASIC_LATIN,
            UnicodeBlock.LATIN_1_SUPPLEMENT,
            UnicodeBlock.LATIN_EXTENDED_A,
            UnicodeBlock.LATIN_EXTENDED_B,
            UnicodeBlock.IPA_EXTENSIONS,
            UnicodeBlock.SPACING_MODIFIER_LETTERS,
            UnicodeBlock.COMBINING_DIACRITICAL_MARKS,
            UnicodeBlock.GREEK,
            UnicodeBlock.CYRILLIC,
            UnicodeBlock.ARMENIAN,
            UnicodeBlock.HEBREW,
            UnicodeBlock.ARABIC,
            UnicodeBlock.SYRIAC,
            UnicodeBlock.THAANA,
            UnicodeBlock.DEVANAGARI,
            UnicodeBlock.BENGALI,
            UnicodeBlock.GURMUKHI,
            UnicodeBlock.GUJARATI,
            UnicodeBlock.ORIYA,
            UnicodeBlock.TAMIL,
            UnicodeBlock.TELUGU,
            UnicodeBlock.KANNADA,
            UnicodeBlock.MALAYALAM,
            UnicodeBlock.SINHALA,
            UnicodeBlock.THAI,
            UnicodeBlock.LAO,
            UnicodeBlock.TIBETAN,
            UnicodeBlock.MYANMAR,
            UnicodeBlock.GEORGIAN,
            UnicodeBlock.HANGUL_JAMO,
            UnicodeBlock.ETHIOPIC,
            UnicodeBlock.CHEROKEE,
            UnicodeBlock.UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS,
            UnicodeBlock.OGHAM,
            UnicodeBlock.RUNIC,
            UnicodeBlock.KHMER,
            UnicodeBlock.MONGOLIAN,
            UnicodeBlock.LATIN_EXTENDED_ADDITIONAL,
            UnicodeBlock.GREEK_EXTENDED,
            UnicodeBlock.GENERAL_PUNCTUATION,
            UnicodeBlock.SUPERSCRIPTS_AND_SUBSCRIPTS,
            UnicodeBlock.CURRENCY_SYMBOLS,
            UnicodeBlock.COMBINING_MARKS_FOR_SYMBOLS,
            UnicodeBlock.LETTERLIKE_SYMBOLS,
            UnicodeBlock.NUMBER_FORMS,
            UnicodeBlock.ARROWS,
            UnicodeBlock.MATHEMATICAL_OPERATORS,
            UnicodeBlock.MISCELLANEOUS_TECHNICAL,
            UnicodeBlock.CONTROL_PICTURES,
            UnicodeBlock.OPTICAL_CHARACTER_RECOGNITION,
            UnicodeBlock.ENCLOSED_ALPHANUMERICS,
            UnicodeBlock.BOX_DRAWING,
            UnicodeBlock.BLOCK_ELEMENTS,
            UnicodeBlock.GEOMETRIC_SHAPES,
            UnicodeBlock.MISCELLANEOUS_SYMBOLS,
            UnicodeBlock.DINGBATS,
            UnicodeBlock.BRAILLE_PATTERNS,
            UnicodeBlock.CJK_RADICALS_SUPPLEMENT,
            UnicodeBlock.KANGXI_RADICALS,
            UnicodeBlock.IDEOGRAPHIC_DESCRIPTION_CHARACTERS,
            UnicodeBlock.CJK_SYMBOLS_AND_PUNCTUATION,
            UnicodeBlock.HIRAGANA,
            UnicodeBlock.KATAKANA,
            UnicodeBlock.BOPOMOFO,
            UnicodeBlock.HANGUL_COMPATIBILITY_JAMO,
            UnicodeBlock.KANBUN,
            UnicodeBlock.BOPOMOFO_EXTENDED,
            UnicodeBlock.ENCLOSED_CJK_LETTERS_AND_MONTHS,
            UnicodeBlock.CJK_COMPATIBILITY,
            UnicodeBlock.CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A,
            UnicodeBlock.CJK_UNIFIED_IDEOGRAPHS,
            UnicodeBlock.YI_SYLLABLES,
            UnicodeBlock.YI_RADICALS,
            UnicodeBlock.HANGUL_SYLLABLES,
            UnicodeBlock.HIGH_SURROGATES,
            UnicodeBlock.HIGH_PRIVATE_USE_SURROGATES,
            UnicodeBlock.LOW_SURROGATES,
            UnicodeBlock.PRIVATE_USE_AREA,
            UnicodeBlock.CJK_COMPATIBILITY_IDEOGRAPHS,
            UnicodeBlock.ALPHABETIC_PRESENTATION_FORMS,
            UnicodeBlock.ARABIC_PRESENTATION_FORMS_A,
            UnicodeBlock.COMBINING_HALF_MARKS,
            UnicodeBlock.CJK_COMPATIBILITY_FORMS,
            UnicodeBlock.SMALL_FORM_VARIANTS,
            UnicodeBlock.ARABIC_PRESENTATION_FORMS_B,
            UnicodeBlock.SPECIALS,
            UnicodeBlock.HALFWIDTH_AND_FULLWIDTH_FORMS,
            UnicodeBlock.OLD_ITALIC,
            UnicodeBlock.GOTHIC,
            UnicodeBlock.DESERET,
            UnicodeBlock.BYZANTINE_MUSICAL_SYMBOLS,
            UnicodeBlock.MUSICAL_SYMBOLS,
            UnicodeBlock.MATHEMATICAL_ALPHANUMERIC_SYMBOLS,
            UnicodeBlock.CJK_UNIFIED_IDEOGRAPHS_EXTENSION_B,
            UnicodeBlock.CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENT,
            UnicodeBlock.TAGS,
            UnicodeBlock.CYRILLIC_SUPPLEMENTARY,
            UnicodeBlock.TAGALOG,
            UnicodeBlock.HANUNOO,
            UnicodeBlock.BUHID,
            UnicodeBlock.TAGBANWA,
            UnicodeBlock.MISCELLANEOUS_MATHEMATICAL_SYMBOLS_A,
            UnicodeBlock.SUPPLEMENTAL_ARROWS_A,
            UnicodeBlock.SUPPLEMENTAL_ARROWS_B,
            UnicodeBlock.MISCELLANEOUS_MATHEMATICAL_SYMBOLS_B,
            UnicodeBlock.SUPPLEMENTAL_MATHEMATICAL_OPERATORS,
            UnicodeBlock.KATAKANA_PHONETIC_EXTENSIONS,
            UnicodeBlock.VARIATION_SELECTORS,
            UnicodeBlock.SUPPLEMENTARY_PRIVATE_USE_AREA_A,
            UnicodeBlock.SUPPLEMENTARY_PRIVATE_USE_AREA_B,
            UnicodeBlock.LIMBU,
            UnicodeBlock.TAI_LE,
            UnicodeBlock.KHMER_SYMBOLS,
            UnicodeBlock.PHONETIC_EXTENSIONS,
            UnicodeBlock.MISCELLANEOUS_SYMBOLS_AND_ARROWS,
            UnicodeBlock.YIJING_HEXAGRAM_SYMBOLS,
            UnicodeBlock.LINEAR_B_SYLLABARY,
            UnicodeBlock.LINEAR_B_IDEOGRAMS,
            UnicodeBlock.AEGEAN_NUMBERS,
            UnicodeBlock.UGARITIC,
            UnicodeBlock.SHAVIAN,
            UnicodeBlock.OSMANYA,
            UnicodeBlock.CYPRIOT_SYLLABARY,
            UnicodeBlock.TAI_XUAN_JING_SYMBOLS,
            UnicodeBlock.VARIATION_SELECTORS_SUPPLEMENT
        }" class_relation private
	      comment "
All of the UnicodeBlocks with valid ranges in ascending order.

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 187163 // BLOCKS (<unidirectional association>)
	    b parent class_ref 149019 // UnicodeBlock
	end

	operation 291227 "forName"
	  class_operation public return_type class_ref 149019 // UnicodeBlock
	  nparams 1
	    param inout name "blockName" type class_ref 3399692 // String
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Retrieves the constant that corresponds to the specified block name.
The block names are defined by the Unicode 4.0.1 specification in the
{@code Blocks-4.0.1.txt} file.
<p>
Block names may be one of the following:
<ul>
<li>Canonical block name, as defined by the Unicode specification;
case-insensitive.</li>
<li>Canonical block name without any spaces, as defined by the
Unicode specification; case-insensitive.</li>
<li>{@code UnicodeBlock} constant identifier. This is determined by
uppercasing the canonical name and replacing all spaces and hyphens
with underscores.</li>
</ul>

@param blockName
           the name of the block to retrieve.
@return the UnicodeBlock constant corresponding to {@code blockName}.
@throws NullPointerException
            if {@code blockName} is {@code null}.
@throws IllegalArgumentException
            if {@code blockName} is not a valid block name.
@since 1.5"
	end

	operation 291355 "of"
	  class_operation public return_type class_ref 149019 // UnicodeBlock
	  nparams 1
	    param in name "c" explicit_type "char"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the constant for the Unicode block that contains the specified
character.

@param c
           the character for which to get the {@code UnicodeBlock}
           constant.
@return the {@code UnicodeBlock} constant for the block that contains
        {@code c}, or {@code null} if {@code c} does not belong to
        any defined block."
	end

	operation 291483 "of"
	  class_operation public return_type class_ref 149019 // UnicodeBlock
	  nparams 1
	    param in name "codePoint" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the constant for the Unicode block that contains the specified
Unicode code point.

@param codePoint
           the Unicode code point for which to get the
           {@code UnicodeBlock} constant.
@return the {@code UnicodeBlock} constant for the block that contains
        {@code codePoint}, or {@code null} if {@code codePoint} does
        not belong to any defined block.
@throws IllegalArgumentException if {@code codePoint} is not a valid code point.
@since 1.5"
	end

	operation 291611 "UnicodeBlock"
	  private explicit_return_type ""
	  nparams 3
	    param inout name "blockName" type class_ref 3399692 // String
	    param in name "start" explicit_type "int"
	    param in name "end" explicit_type "int"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 291739 "forNameImpl"
	class_operation private explicit_return_type "int"
	nparams 1
	  param inout name "blockName" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 291867 "ofImpl"
	class_operation private explicit_return_type "int"
	nparams 1
	  param in name "codePoint" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 291995 "Character"
	public explicit_return_type ""
	nparams 1
	  param in name "value" explicit_type "char"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code Character} with the specified primitive char
value.

@param value
           the primitive char value to store in the new instance."
      end

      operation 292123 "charValue"
	public explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the primitive value of this character.

@return this object's primitive value."
      end

      operation 292251 "checkValidCodePoint"
	class_operation private explicit_return_type "void"
	nparams 1
	  param in name "codePoint" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 292379 "compareTo"
	public explicit_return_type "int"
	nparams 1
	  param inout name "c" type class_ref 148763 // Character
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares this object to the specified character object to determine their
relative order.

@param c
           the character object to compare this object to.
@return {@code 0} if the value of this character and the value of
        {@code c} are equal; a positive value if the value of this
        character is greater than the value of {@code c}; a negative
        value if the value of this character is less than the value of
        {@code c}.
@see java.lang.Comparable
@since 1.2"
      end

      operation 292507 "compare"
	class_operation public explicit_return_type "int"
	nparams 2
	  param in name "lhs" explicit_type "char"
	  param in name "rhs" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares two {@code char} values.
@return 0 if lhs = rhs, less than 0 if lhs &lt; rhs, and greater than 0 if lhs &gt; rhs.
@since 1.7
@hide 1.7"
      end

      operation 292635 "valueOf"
	class_operation public return_type class_ref 148763 // Character
	nparams 1
	  param in name "c" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@code Character} instance for the {@code char} value passed.
<p>
If it is not necessary to get a new {@code Character} instance, it is
recommended to use this method instead of the constructor, since it
maintains a cache of instances which may result in better performance.

@param c
           the char value for which to get a {@code Character} instance.
@return the {@code Character} instance for {@code c}.
@since 1.5"
      end

      classrelation 187291 // SMALL_VALUES (<unidirectional association>)
	relation 187291 --->
	  a role_name "SMALL_VALUES" multiplicity "[]" init_value " new Character[128]" class_relation const_relation private
	    comment "
A cache of instances used by {@link #valueOf(char)} and auto-boxing

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 187291 // SMALL_VALUES (<unidirectional association>)
	  b parent class_ref 148763 // Character
      end

      extra_member 128795 "initialization"
	
	cpp "" ""
	java "  static {
        for (int i = 0; i < 128; i++) {
            SMALL_VALUES[i] = new Character((char) i);
        }
    }"
	php ""
	python ""
	idl ""
      end

      operation 292763 "isValidCodePoint"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "codePoint" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether {@code codePoint} is a valid Unicode code point.

@param codePoint
           the code point to test.
@return {@code true} if {@code codePoint} is a valid Unicode code point;
        {@code false} otherwise.
@since 1.5"
      end

      operation 292891 "isSupplementaryCodePoint"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "codePoint" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether {@code codePoint} is within the supplementary code
point range.

@param codePoint
           the code point to test.
@return {@code true} if {@code codePoint} is within the supplementary
        code point range; {@code false} otherwise.
@since 1.5"
      end

      operation 293019 "isHighSurrogate"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether {@code ch} is a high- (or leading-) surrogate code unit
that is used for representing supplementary characters in UTF-16
encoding.

@param ch
           the character to test.
@return {@code true} if {@code ch} is a high-surrogate code unit;
        {@code false} otherwise.
@see #isLowSurrogate(char)
@since 1.5"
      end

      operation 293147 "isLowSurrogate"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether {@code ch} is a low- (or trailing-) surrogate code unit
that is used for representing supplementary characters in UTF-16
encoding.

@param ch
           the character to test.
@return {@code true} if {@code ch} is a low-surrogate code unit;
        {@code false} otherwise.
@see #isHighSurrogate(char)
@since 1.5"
      end

      operation 293275 "isSurrogate"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "ch" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests whether the given character is a high or low surrogate.
@since 1.7
@hide 1.7"
      end

      operation 293403 "isSurrogatePair"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param in name "high" explicit_type "char"
	  param in name "low" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether the specified character pair is a valid surrogate pair.

@param high
           the high surrogate unit to test.
@param low
           the low surrogate unit to test.
@return {@code true} if {@code high} is a high-surrogate code unit and
        {@code low} is a low-surrogate code unit; {@code false}
        otherwise.
@see #isHighSurrogate(char)
@see #isLowSurrogate(char)
@since 1.5"
      end

      operation 293531 "charCount"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "codePoint" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Calculates the number of {@code char} values required to represent the
specified Unicode code point. This method checks if the {@code codePoint}
is greater than or equal to {@code 0x10000}, in which case {@code 2} is
returned, otherwise {@code 1}. To test if the code point is valid, use
the {@link #isValidCodePoint(int)} method.

@param codePoint
           the code point for which to calculate the number of required
           chars.
@return {@code 2} if {@code codePoint >= 0x10000}; {@code 1} otherwise.
@see #isValidCodePoint(int)
@see #isSupplementaryCodePoint(int)
@since 1.5"
      end

      operation 293659 "toCodePoint"
	class_operation public explicit_return_type "int"
	nparams 2
	  param in name "high" explicit_type "char"
	  param in name "low" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts a surrogate pair into a Unicode code point. This method assumes
that the pair are valid surrogates. If the pair are <i>not</i> valid
surrogates, then the result is indeterminate. The
{@link #isSurrogatePair(char, char)} method should be used prior to this
method to validate the pair.

@param high
           the high surrogate unit.
@param low
           the low surrogate unit.
@return the Unicode code point corresponding to the surrogate unit pair.
@see #isSurrogatePair(char, char)
@since 1.5"
      end

      operation 293787 "codePointAt"
	class_operation public explicit_return_type "int"
	nparams 2
	  param inout name "seq" type class_ref 133787 // CharSequence
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the code point at {@code index} in the specified sequence of
character units. If the unit at {@code index} is a high-surrogate unit,
{@code index + 1} is less than the length of the sequence and the unit at
{@code index + 1} is a low-surrogate unit, then the supplementary code
point represented by the pair is returned; otherwise the {@code char}
value at {@code index} is returned.

@param seq
           the source sequence of {@code char} units.
@param index
           the position in {@code seq} from which to retrieve the code
           point.
@return the Unicode code point or {@code char} value at {@code index} in
        {@code seq}.
@throws NullPointerException
            if {@code seq} is {@code null}.
@throws IndexOutOfBoundsException
            if the {@code index} is negative or greater than or equal to
            the length of {@code seq}.
@since 1.5"
      end

      operation 293915 "codePointAt"
	class_operation public explicit_return_type "int"
	nparams 2
	  param inout name "seq" explicit_type "char"
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the code point at {@code index} in the specified array of
character units. If the unit at {@code index} is a high-surrogate unit,
{@code index + 1} is less than the length of the array and the unit at
{@code index + 1} is a low-surrogate unit, then the supplementary code
point represented by the pair is returned; otherwise the {@code char}
value at {@code index} is returned.

@param seq
           the source array of {@code char} units.
@param index
           the position in {@code seq} from which to retrieve the code
           point.
@return the Unicode code point or {@code char} value at {@code index} in
        {@code seq}.
@throws NullPointerException
            if {@code seq} is {@code null}.
@throws IndexOutOfBoundsException
            if the {@code index} is negative or greater than or equal to
            the length of {@code seq}.
@since 1.5"
      end

      operation 294043 "codePointAt"
	class_operation public explicit_return_type "int"
	nparams 3
	  param inout name "seq" explicit_type "char"
	  param in name "index" explicit_type "int"
	  param in name "limit" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the code point at {@code index} in the specified array of
character units, where {@code index} has to be less than {@code limit}.
If the unit at {@code index} is a high-surrogate unit, {@code index + 1}
is less than {@code limit} and the unit at {@code index + 1} is a
low-surrogate unit, then the supplementary code point represented by the
pair is returned; otherwise the {@code char} value at {@code index} is
returned.

@param seq
           the source array of {@code char} units.
@param index
           the position in {@code seq} from which to get the code point.
@param limit
           the index after the last unit in {@code seq} that can be used.
@return the Unicode code point or {@code char} value at {@code index} in
        {@code seq}.
@throws NullPointerException
            if {@code seq} is {@code null}.
@throws IndexOutOfBoundsException
            if {@code index < 0}, {@code index >= limit},
            {@code limit < 0} or if {@code limit} is greater than the
            length of {@code seq}.
@since 1.5"
      end

      operation 294171 "codePointBefore"
	class_operation public explicit_return_type "int"
	nparams 2
	  param inout name "seq" type class_ref 133787 // CharSequence
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the code point that precedes {@code index} in the specified
sequence of character units. If the unit at {@code index - 1} is a
low-surrogate unit, {@code index - 2} is not negative and the unit at
{@code index - 2} is a high-surrogate unit, then the supplementary code
point represented by the pair is returned; otherwise the {@code char}
value at {@code index - 1} is returned.

@param seq
           the source sequence of {@code char} units.
@param index
           the position in {@code seq} following the code
           point that should be returned.
@return the Unicode code point or {@code char} value before {@code index}
        in {@code seq}.
@throws NullPointerException
            if {@code seq} is {@code null}.
@throws IndexOutOfBoundsException
            if the {@code index} is less than 1 or greater than the
            length of {@code seq}.
@since 1.5"
      end

      operation 294299 "codePointBefore"
	class_operation public explicit_return_type "int"
	nparams 2
	  param inout name "seq" explicit_type "char"
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the code point that precedes {@code index} in the specified
array of character units. If the unit at {@code index - 1} is a
low-surrogate unit, {@code index - 2} is not negative and the unit at
{@code index - 2} is a high-surrogate unit, then the supplementary code
point represented by the pair is returned; otherwise the {@code char}
value at {@code index - 1} is returned.

@param seq
           the source array of {@code char} units.
@param index
           the position in {@code seq} following the code
           point that should be returned.
@return the Unicode code point or {@code char} value before {@code index}
        in {@code seq}.
@throws NullPointerException
            if {@code seq} is {@code null}.
@throws IndexOutOfBoundsException
            if the {@code index} is less than 1 or greater than the
            length of {@code seq}.
@since 1.5"
      end

      operation 294427 "codePointBefore"
	class_operation public explicit_return_type "int"
	nparams 3
	  param inout name "seq" explicit_type "char"
	  param in name "index" explicit_type "int"
	  param in name "start" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the code point that precedes the {@code index} in the specified
array of character units and is not less than {@code start}. If the unit
at {@code index - 1} is a low-surrogate unit, {@code index - 2} is not
less than {@code start} and the unit at {@code index - 2} is a
high-surrogate unit, then the supplementary code point represented by the
pair is returned; otherwise the {@code char} value at {@code index - 1}
is returned.

@param seq
           the source array of {@code char} units.
@param index
           the position in {@code seq} following the code point that
           should be returned.
@param start
           the index of the first element in {@code seq}.
@return the Unicode code point or {@code char} value before {@code index}
        in {@code seq}.
@throws NullPointerException
            if {@code seq} is {@code null}.
@throws IndexOutOfBoundsException
            if the {@code index <= start}, {@code start < 0},
            {@code index} is greater than the length of {@code seq}, or
            if {@code start} is equal or greater than the length of
            {@code seq}.
@since 1.5"
      end

      operation 294555 "toChars"
	class_operation public explicit_return_type "int"
	nparams 3
	  param in name "codePoint" explicit_type "int"
	  param inout name "dst" explicit_type "char"
	  param in name "dstIndex" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts the specified Unicode code point into a UTF-16 encoded sequence
and copies the value(s) into the char array {@code dst}, starting at
index {@code dstIndex}.

@param codePoint
           the Unicode code point to encode.
@param dst
           the destination array to copy the encoded value into.
@param dstIndex
           the index in {@code dst} from where to start copying.
@return the number of {@code char} value units copied into {@code dst}.
@throws IllegalArgumentException if {@code codePoint} is not a valid code point.
@throws NullPointerException
            if {@code dst} is {@code null}.
@throws IndexOutOfBoundsException
            if {@code dstIndex} is negative, greater than or equal to
            {@code dst.length} or equals {@code dst.length - 1} when
            {@code codePoint} is a
            {@link #isSupplementaryCodePoint(int) supplementary code point}.
@since 1.5"
      end

      operation 294683 "toChars"
	class_operation public explicit_return_type "char"
	nparams 1
	  param in name "codePoint" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts the specified Unicode code point into a UTF-16 encoded sequence
and returns it as a char array.

@param codePoint
           the Unicode code point to encode.
@return the UTF-16 encoded char sequence. If {@code codePoint} is a
        {@link #isSupplementaryCodePoint(int) supplementary code point},
        then the returned array contains two characters, otherwise it
        contains just one character.
@throws IllegalArgumentException if {@code codePoint} is not a valid code point.
@since 1.5"
      end

      operation 294811 "codePointCount"
	class_operation public explicit_return_type "int"
	nparams 3
	  param inout name "seq" type class_ref 133787 // CharSequence
	  param in name "beginIndex" explicit_type "int"
	  param in name "endIndex" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Counts the number of Unicode code points in the subsequence of the
specified character sequence, as delineated by {@code beginIndex} and
{@code endIndex}. Any surrogate values with missing pair values will be
counted as one code point.

@param seq
           the {@code CharSequence} to look through.
@param beginIndex
           the inclusive index to begin counting at.
@param endIndex
           the exclusive index to stop counting at.
@return the number of Unicode code points.
@throws NullPointerException
            if {@code seq} is {@code null}.
@throws IndexOutOfBoundsException
            if {@code beginIndex < 0}, {@code beginIndex > endIndex} or
            if {@code endIndex} is greater than the length of {@code seq}.
@since 1.5"
      end

      operation 294939 "codePointCount"
	class_operation public explicit_return_type "int"
	nparams 3
	  param inout name "seq" explicit_type "char"
	  param in name "offset" explicit_type "int"
	  param in name "count" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Counts the number of Unicode code points in the subsequence of the
specified char array, as delineated by {@code offset} and {@code count}.
Any surrogate values with missing pair values will be counted as one code
point.

@param seq
           the char array to look through
@param offset
           the inclusive index to begin counting at.
@param count
           the number of {@code char} values to look through in
           {@code seq}.
@return the number of Unicode code points.
@throws NullPointerException
            if {@code seq} is {@code null}.
@throws IndexOutOfBoundsException
            if {@code offset < 0}, {@code count < 0} or if
            {@code offset + count} is greater than the length of
            {@code seq}.
@since 1.5"
      end

      operation 295067 "offsetByCodePoints"
	class_operation public explicit_return_type "int"
	nparams 3
	  param inout name "seq" type class_ref 133787 // CharSequence
	  param in name "index" explicit_type "int"
	  param in name "codePointOffset" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines the index in the specified character sequence that is offset
{@code codePointOffset} code points from {@code index}.

@param seq
           the character sequence to find the index in.
@param index
           the start index in {@code seq}.
@param codePointOffset
           the number of code points to look backwards or forwards; may
           be a negative or positive value.
@return the index in {@code seq} that is {@code codePointOffset} code
        points away from {@code index}.
@throws NullPointerException
            if {@code seq} is {@code null}.
@throws IndexOutOfBoundsException
            if {@code index < 0}, {@code index} is greater than the
            length of {@code seq}, or if there are not enough values in
            {@code seq} to skip {@code codePointOffset} code points
            forwards or backwards (if {@code codePointOffset} is
            negative) from {@code index}.
@since 1.5"
      end

      operation 295195 "offsetByCodePoints"
	class_operation public explicit_return_type "int"
	nparams 5
	  param inout name "seq" explicit_type "char"
	  param in name "start" explicit_type "int"
	  param in name "count" explicit_type "int"
	  param in name "index" explicit_type "int"
	  param in name "codePointOffset" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines the index in a subsequence of the specified character array
that is offset {@code codePointOffset} code points from {@code index}.
The subsequence is delineated by {@code start} and {@code count}.

@param seq
           the character array to find the index in.
@param start
           the inclusive index that marks the beginning of the
           subsequence.
@param count
           the number of {@code char} values to include within the
           subsequence.
@param index
           the start index in the subsequence of the char array.
@param codePointOffset
           the number of code points to look backwards or forwards; may
           be a negative or positive value.
@return the index in {@code seq} that is {@code codePointOffset} code
        points away from {@code index}.
@throws NullPointerException
            if {@code seq} is {@code null}.
@throws IndexOutOfBoundsException
            if {@code start < 0}, {@code count < 0},
            {@code index < start}, {@code index > start + count},
            {@code start + count} is greater than the length of
            {@code seq}, or if there are not enough values in
            {@code seq} to skip {@code codePointOffset} code points
            forward or backward (if {@code codePointOffset} is
            negative) from {@code index}.
@since 1.5"
      end

      operation 295323 "digit"
	class_operation public explicit_return_type "int"
	nparams 2
	  param in name "c" explicit_type "char"
	  param in name "radix" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience method to determine the value of the specified character
{@code c} in the supplied radix. The value of {@code radix} must be
between MIN_RADIX and MAX_RADIX.

@param c
           the character to determine the value of.
@param radix
           the radix.
@return the value of {@code c} in {@code radix} if {@code radix} lies
        between {@link #MIN_RADIX} and {@link #MAX_RADIX}; -1 otherwise."
      end

      operation 295451 "digit"
	class_operation public explicit_return_type "int"
	nparams 2
	  param in name "codePoint" explicit_type "int"
	  param in name "radix" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience method to determine the value of the character
{@code codePoint} in the supplied radix. The value of {@code radix} must
be between MIN_RADIX and MAX_RADIX.

@param codePoint
           the character, including supplementary characters.
@param radix
           the radix.
@return if {@code radix} lies between {@link #MIN_RADIX} and
        {@link #MAX_RADIX} then the value of the character in the radix;
        -1 otherwise."
      end

      operation 295579 "digitImpl"
	class_operation private explicit_return_type "int"
	nparams 2
	  param in name "codePoint" explicit_type "int"
	  param in name "radix" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
      end

      operation 295707 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "object" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Compares this object with the specified object and indicates if they are
equal. In order to be equal, {@code object} must be an instance of
{@code Character} and have the same char value as this object.

@param object
           the object to compare this double with.
@return {@code true} if the specified object is equal to this
        {@code Character}; {@code false} otherwise."
      end

      operation 295835 "forDigit"
	class_operation public explicit_return_type "char"
	nparams 2
	  param in name "digit" explicit_type "int"
	  param in name "radix" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the character which represents the specified digit in the
specified radix. The {@code radix} must be between {@code MIN_RADIX} and
{@code MAX_RADIX} inclusive; {@code digit} must not be negative and
smaller than {@code radix}. If any of these conditions does not hold, 0
is returned.

@param digit
           the integer value.
@param radix
           the radix.
@return the character which represents the {@code digit} in the
        {@code radix}."
      end

      operation 295963 "getName"
	class_operation public return_type class_ref 3399692 // String
	nparams 1
	  param in name "codePoint" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the given code point, or null if the code point is unassigned.

<p>As a fallback mechanism this method returns strings consisting of the Unicode
block name (with underscores replaced by spaces), a single space, and the uppercase
hex value of the code point, using as few digits as necessary.

<p>Examples:
<ul>
<li>{@code Character.getName(0)} returns \"NULL\".
<li>{@code Character.getName('e')} returns \"LATIN SMALL LETTER E\".
<li>{@code Character.getName('\\u0666')} returns \"ARABIC-INDIC DIGIT SIX\".
<li>{@code Character.getName(0xe000)} returns \"PRIVATE USE AREA E000\".
</ul>

@throws IllegalArgumentException if {@code codePoint} is not a valid code point.
@since 1.7
@hide 1.7"
      end

      operation 296091 "getNameImpl"
	class_operation private return_type class_ref 3399692 // String
	nparams 1
	  param in name "codePoint" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 296219 "getNumericValue"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "c" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the numeric value of the specified Unicode character.
See {@link #getNumericValue(int)}.

@param c the character
@return a non-negative numeric integer value if a numeric value for
        {@code c} exists, -1 if there is no numeric value for {@code c},
        -2 if the numeric value can not be represented as an integer."
      end

      operation 296347 "getNumericValue"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "codePoint" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the numeric value of the specified Unicode code point. For example,
the code point '\\u216B' stands for the Roman number XII, which has the
numeric value 12.

<p>There are two points of divergence between this method and the Unicode
specification. This method treats the letters a-z (in both upper and lower
cases, and their full-width variants) as numbers from 10 to 35. The
Unicode specification also supports the idea of code points with non-integer
numeric values; this method does not (except to the extent of returning -2
for such code points).

@param codePoint the code point
@return a non-negative numeric integer value if a numeric value for
        {@code codePoint} exists, -1 if there is no numeric value for
        {@code codePoint}, -2 if the numeric value can not be
        represented with an integer."
      end

      operation 296475 "getNumericValueImpl"
	class_operation private explicit_return_type "int"
	nparams 1
	  param in name "codePoint" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 296603 "getType"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "c" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the general Unicode category of the specified character.

@param c
           the character to get the category of.
@return the Unicode category of {@code c}."
      end

      operation 296731 "getType"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "codePoint" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the general Unicode category of the specified code point.

@param codePoint
           the Unicode code point to get the category of.
@return the Unicode category of {@code codePoint}."
      end

      operation 296859 "getTypeImpl"
	class_operation private explicit_return_type "int"
	nparams 1
	  param in name "codePoint" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 296987 "getDirectionality"
	class_operation public explicit_return_type "byte"
	nparams 1
	  param in name "c" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the Unicode directionality of the specified character.

@param c
           the character to get the directionality of.
@return the Unicode directionality of {@code c}."
      end

      operation 297115 "getDirectionality"
	class_operation public explicit_return_type "byte"
	nparams 1
	  param in name "codePoint" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the Unicode directionality of the specified character.

@param codePoint
           the Unicode code point to get the directionality of.
@return the Unicode directionality of {@code codePoint}."
      end

      operation 297243 "getDirectionalityImpl"
	class_operation private explicit_return_type "byte"
	nparams 1
	  param in name "codePoint" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 297371 "isMirrored"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "c" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether the specified character is mirrored.

@param c
           the character to check.
@return {@code true} if {@code c} is mirrored; {@code false}
        otherwise."
      end

      operation 297499 "isMirrored"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "codePoint" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether the specified code point is mirrored.

@param codePoint
           the code point to check.
@return {@code true} if {@code codePoint} is mirrored, {@code false}
        otherwise."
      end

      operation 297627 "isMirroredImpl"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param in name "codePoint" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 297755 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 297883 "highSurrogate"
	class_operation public explicit_return_type "char"
	nparams 1
	  param in name "codePoint" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the high surrogate for the given code point. The result is meaningless if
the given code point is not a supplementary character.
@since 1.7
@hide 1.7"
      end

      operation 298011 "lowSurrogate"
	class_operation public explicit_return_type "char"
	nparams 1
	  param in name "codePoint" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the low surrogate for the given code point. The result is meaningless if
the given code point is not a supplementary character.
@since 1.7
@hide 1.7"
      end

      operation 298139 "isBmpCodePoint"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "codePoint" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Tests whether the given code point is in the Basic Multilingual Plane (BMP).
Such code points can be represented by a single {@code char}.
@since 1.7
@hide 1.7"
      end

      operation 298267 "isDefined"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "c" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether the specified character is defined in the Unicode
specification.

@param c
           the character to check.
@return {@code true} if the general Unicode category of the character is
        not {@code UNASSIGNED}; {@code false} otherwise."
      end

      operation 298395 "isDefined"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "codePoint" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether the specified code point is defined in the Unicode
specification.

@param codePoint
           the code point to check.
@return {@code true} if the general Unicode category of the code point is
        not {@code UNASSIGNED}; {@code false} otherwise."
      end

      operation 298523 "isDefinedImpl"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param in name "codePoint" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 298651 "isDigit"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "c" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether the specified character is a digit.

@param c
           the character to check.
@return {@code true} if {@code c} is a digit; {@code false}
        otherwise."
      end

      operation 298779 "isDigit"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "codePoint" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether the specified code point is a digit.

@param codePoint
           the code point to check.
@return {@code true} if {@code codePoint} is a digit; {@code false}
        otherwise."
      end

      operation 298907 "isDigitImpl"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param in name "codePoint" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 299035 "isIdentifierIgnorable"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "c" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether the specified character is ignorable in a Java or
Unicode identifier.

@param c
           the character to check.
@return {@code true} if {@code c} is ignorable; {@code false} otherwise."
      end

      operation 299163 "isIdentifierIgnorable"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "codePoint" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether the specified code point is ignorable in a Java or
Unicode identifier.

@param codePoint
           the code point to check.
@return {@code true} if {@code codePoint} is ignorable; {@code false}
        otherwise."
      end

      operation 299291 "isIdentifierIgnorableImpl"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param in name "codePoint" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 299419 "isISOControl"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "c" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether the specified character is an ISO control character.

@param c
           the character to check.
@return {@code true} if {@code c} is an ISO control character;
        {@code false} otherwise."
      end

      operation 299547 "isISOControl"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "c" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether the specified code point is an ISO control character.

@param c
           the code point to check.
@return {@code true} if {@code c} is an ISO control character;
        {@code false} otherwise."
      end

      operation 299675 "isJavaIdentifierPart"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "c" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether the specified character is a valid part of a Java
identifier other than the first character.

@param c
           the character to check.
@return {@code true} if {@code c} is valid as part of a Java identifier;
        {@code false} otherwise."
      end

      operation 299803 "isJavaIdentifierPart"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "codePoint" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether the specified code point is a valid part of a Java
identifier other than the first character.

@param codePoint
           the code point to check.
@return {@code true} if {@code c} is valid as part of a Java identifier;
        {@code false} otherwise."
      end

      operation 299931 "isJavaIdentifierStart"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "c" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether the specified character is a valid first character for
a Java identifier.

@param c
           the character to check.
@return {@code true} if {@code c} is a valid first character of a Java
        identifier; {@code false} otherwise."
      end

      operation 300059 "isJavaIdentifierStart"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "codePoint" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether the specified code point is a valid first character for
a Java identifier.

@param codePoint
           the code point to check.
@return {@code true} if {@code codePoint} is a valid start of a Java
        identifier; {@code false} otherwise."
      end

      operation 300187 "isJavaLetter"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "c" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Indicates whether the specified character is a Java letter.

@param c
           the character to check.
@return {@code true} if {@code c} is a Java letter; {@code false}
        otherwise.
@deprecated Use {@link #isJavaIdentifierStart(char)}"
      end

      operation 300315 "isJavaLetterOrDigit"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "c" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Indicates whether the specified character is a Java letter or digit
character.

@param c
           the character to check.
@return {@code true} if {@code c} is a Java letter or digit;
        {@code false} otherwise.
@deprecated Use {@link #isJavaIdentifierPart(char)}"
      end

      operation 300443 "isLetter"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "c" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether the specified character is a letter.

@param c
           the character to check.
@return {@code true} if {@code c} is a letter; {@code false} otherwise."
      end

      operation 300571 "isLetter"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "codePoint" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether the specified code point is a letter.

@param codePoint
           the code point to check.
@return {@code true} if {@code codePoint} is a letter; {@code false}
        otherwise."
      end

      operation 300699 "isLetterImpl"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param in name "codePoint" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 300827 "isLetterOrDigit"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "c" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether the specified character is a letter or a digit.

@param c
           the character to check.
@return {@code true} if {@code c} is a letter or a digit; {@code false}
        otherwise."
      end

      operation 300955 "isLetterOrDigit"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "codePoint" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether the specified code point is a letter or a digit.

@param codePoint
           the code point to check.
@return {@code true} if {@code codePoint} is a letter or a digit;
        {@code false} otherwise."
      end

      operation 301083 "isLetterOrDigitImpl"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param in name "codePoint" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 301211 "isLowerCase"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "c" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether the specified character is a lower case letter.

@param c
           the character to check.
@return {@code true} if {@code c} is a lower case letter; {@code false}
        otherwise."
      end

      operation 301339 "isLowerCase"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "codePoint" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether the specified code point is a lower case letter.

@param codePoint
           the code point to check.
@return {@code true} if {@code codePoint} is a lower case letter;
        {@code false} otherwise."
      end

      operation 301467 "isLowerCaseImpl"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param in name "codePoint" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 301595 "isSpace"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "c" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Indicates whether the specified character is a Java space.

@param c
           the character to check.
@return {@code true} if {@code c} is a Java space; {@code false}
        otherwise.
@deprecated Use {@link #isWhitespace(char)}"
      end

      operation 301723 "isSpaceChar"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "c" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether the specified character is a Unicode space character.
That is, if it is a member of one of the Unicode categories Space
Separator, Line Separator, or Paragraph Separator.

@param c
           the character to check.
@return {@code true} if {@code c} is a Unicode space character,
        {@code false} otherwise."
      end

      operation 301851 "isSpaceChar"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "codePoint" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether the specified code point is a Unicode space character.
That is, if it is a member of one of the Unicode categories Space
Separator, Line Separator, or Paragraph Separator.

@param codePoint
           the code point to check.
@return {@code true} if {@code codePoint} is a Unicode space character,
        {@code false} otherwise."
      end

      operation 301979 "isSpaceCharImpl"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param in name "codePoint" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 302107 "isTitleCase"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "c" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether the specified character is a titlecase character.

@param c
           the character to check.
@return {@code true} if {@code c} is a titlecase character, {@code false}
        otherwise."
      end

      operation 302235 "isTitleCase"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "codePoint" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether the specified code point is a titlecase character.

@param codePoint
           the code point to check.
@return {@code true} if {@code codePoint} is a titlecase character,
        {@code false} otherwise."
      end

      operation 302363 "isTitleCaseImpl"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param in name "codePoint" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 302491 "isUnicodeIdentifierPart"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "c" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether the specified character is valid as part of a Unicode
identifier other than the first character.

@param c
           the character to check.
@return {@code true} if {@code c} is valid as part of a Unicode
        identifier; {@code false} otherwise."
      end

      operation 302619 "isUnicodeIdentifierPart"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "codePoint" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether the specified code point is valid as part of a Unicode
identifier other than the first character.

@param codePoint
           the code point to check.
@return {@code true} if {@code codePoint} is valid as part of a Unicode
        identifier; {@code false} otherwise."
      end

      operation 302747 "isUnicodeIdentifierPartImpl"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param in name "codePoint" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 302875 "isUnicodeIdentifierStart"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "c" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether the specified character is a valid initial character
for a Unicode identifier.

@param c
           the character to check.
@return {@code true} if {@code c} is a valid first character for a
        Unicode identifier; {@code false} otherwise."
      end

      operation 303003 "isUnicodeIdentifierStart"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "codePoint" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether the specified code point is a valid initial character
for a Unicode identifier.

@param codePoint
           the code point to check.
@return {@code true} if {@code codePoint} is a valid first character for
        a Unicode identifier; {@code false} otherwise."
      end

      operation 303131 "isUnicodeIdentifierStartImpl"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param in name "codePoint" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 303259 "isUpperCase"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "c" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether the specified character is an upper case letter.

@param c
           the character to check.
@return {@code true} if {@code c} is a upper case letter; {@code false}
        otherwise."
      end

      operation 303387 "isUpperCase"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "codePoint" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether the specified code point is an upper case letter.

@param codePoint
           the code point to check.
@return {@code true} if {@code codePoint} is a upper case letter;
        {@code false} otherwise."
      end

      operation 303515 "isUpperCaseImpl"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param in name "codePoint" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 303643 "isWhitespace"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "c" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether the specified character is a whitespace character in
Java.

@param c
           the character to check.
@return {@code true} if the supplied {@code c} is a whitespace character
        in Java; {@code false} otherwise."
      end

      operation 303771 "isWhitespace"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "codePoint" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether the specified code point is a whitespace character in
Java.

@param codePoint
           the code point to check.
@return {@code true} if the supplied {@code c} is a whitespace character
        in Java; {@code false} otherwise."
      end

      operation 303899 "isWhitespaceImpl"
	class_operation private explicit_return_type "boolean"
	nparams 1
	  param in name "codePoint" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 304027 "reverseBytes"
	class_operation public explicit_return_type "char"
	nparams 1
	  param in name "c" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reverses the order of the first and second byte in the specified
character.

@param c
           the character to reverse.
@return the character with reordered bytes."
      end

      operation 304155 "toLowerCase"
	class_operation public explicit_return_type "char"
	nparams 1
	  param in name "c" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the lower case equivalent for the specified character if the
character is an upper case letter. Otherwise, the specified character is
returned unchanged.

@param c
           the character
@return if {@code c} is an upper case character then its lower case
        counterpart, otherwise just {@code c}."
      end

      operation 304283 "toLowerCase"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "codePoint" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the lower case equivalent for the specified code point if it is
an upper case letter. Otherwise, the specified code point is returned
unchanged.

@param codePoint
           the code point to check.
@return if {@code codePoint} is an upper case character then its lower
        case counterpart, otherwise just {@code codePoint}."
      end

      operation 304411 "toLowerCaseImpl"
	class_operation private explicit_return_type "int"
	nparams 1
	  param in name "codePoint" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 304539 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 304667 "toString"
	class_operation public return_type class_ref 3399692 // String
	nparams 1
	  param in name "value" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts the specified character to its string representation.

@param value
           the character to convert.
@return the character converted to a string."
      end

      operation 304795 "toTitleCase"
	class_operation public explicit_return_type "char"
	nparams 1
	  param in name "c" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the title case equivalent for the specified character if it
exists. Otherwise, the specified character is returned unchanged.

@param c
           the character to convert.
@return the title case equivalent of {@code c} if it exists, otherwise
        {@code c}."
      end

      operation 304923 "toTitleCase"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "codePoint" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the title case equivalent for the specified code point if it
exists. Otherwise, the specified code point is returned unchanged.

@param codePoint
           the code point to convert.
@return the title case equivalent of {@code codePoint} if it exists,
        otherwise {@code codePoint}."
      end

      operation 305051 "toTitleCaseImpl"
	class_operation private explicit_return_type "int"
	nparams 1
	  param in name "codePoint" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 305179 "toUpperCase"
	class_operation public explicit_return_type "char"
	nparams 1
	  param in name "c" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the upper case equivalent for the specified character if the
character is a lower case letter. Otherwise, the specified character is
returned unchanged.

@param c
           the character to convert.
@return if {@code c} is a lower case character then its upper case
        counterpart, otherwise just {@code c}."
      end

      operation 305307 "toUpperCase"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "codePoint" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the upper case equivalent for the specified code point if the
code point is a lower case letter. Otherwise, the specified code point is
returned unchanged.

@param codePoint
           the code point to convert.
@return if {@code codePoint} is a lower case character then its upper
        case counterpart, otherwise just {@code codePoint}."
      end

      operation 305435 "toUpperCaseImpl"
	class_operation private explicit_return_type "int"
	nparams 1
	  param in name "codePoint" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end
    end

    class 149787 "NoSuchMethodException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Thrown when the VM notices that a program tries to reference,
on a class or object, a method that does not exist."
      classrelation 198043 // <generalisation>
	relation 198043 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 198043 // <generalisation>
	  b parent class_ref 132251 // Exception
      end

      attribute 184347 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 5034388446362600923L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 367131 "NoSuchMethodException"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code NoSuchMethodException} that includes the current
stack trace."
      end

      operation 367259 "NoSuchMethodException"
	public explicit_return_type ""
	nparams 1
	  param inout name "detailMessage" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code NoSuchMethodException} with the current stack
trace and the specified detail message.

@param detailMessage
           the detail message for this exception."
      end
    end

    class 150043 "NoSuchFieldException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Thrown when the VM notices that a program tries to reference,
on a class or object, a field that does not exist."
      classrelation 197787 // <generalisation>
	relation 197787 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 197787 // <generalisation>
	  b parent class_ref 132251 // Exception
      end

      attribute 184091 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -6143714805279938260L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 366619 "NoSuchFieldException"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code NoSuchFieldException} that includes the current
stack trace."
      end

      operation 366747 "NoSuchFieldException"
	public explicit_return_type ""
	nparams 1
	  param inout name "detailMessage" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code NoSuchFieldException} with the current stack
trace and the specified detail message.

@param detailMessage
           the detail message for this exception."
      end
    end

    class 150299 "InstantiationException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Thrown when a program attempts to access a constructor which is not
accessible from the location where the reference is made."
      classrelation 195355 // <generalisation>
	relation 195355 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 195355 // <generalisation>
	  b parent class_ref 132251 // Exception
      end

      attribute 180891 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -8441929162975509110L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 344603 "InstantiationException"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code InstantiationException} that includes the current
stack trace."
      end

      operation 344731 "InstantiationException"
	public explicit_return_type ""
	nparams 1
	  param inout name "detailMessage" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code InstantiationException} with the current stack
trace and the specified detail message.

@param detailMessage
           the detail message for this exception."
      end

      operation 344859 "InstantiationException"
	package explicit_return_type ""
	nparams 1
	  param inout name "clazz" type class_ref 3421708 // Class
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code InstantiationException} with the current stack
trace and the class that caused this exception.

@param clazz
           the class that can not be instantiated."
      end
    end

    class 150427 "IllegalAccessException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Thrown when a program attempts to access a field or method which is not
accessible from the location where the reference is made."
      classrelation 193947 // <generalisation>
	relation 193947 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 193947 // <generalisation>
	  b parent class_ref 132251 // Exception
      end

      attribute 179227 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 6616958222490762034L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 339611 "IllegalAccessException"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code IllegalAccessException} that includes the current
stack trace."
      end

      operation 339739 "IllegalAccessException"
	public explicit_return_type ""
	nparams 1
	  param inout name "detailMessage" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code IllegalAccessException} with the current stack
trace and the specified detail message.

@param detailMessage
           the detail message for this exception."
      end
    end

    class 150555 "Package"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Contains information about a Java package. This includes implementation and
specification versions. Typically this information is retrieved from the
manifest.
<p>
Packages are managed by class loaders. All classes loaded by the same loader
from the same package share a {@code Package} instance.
</p>

@see java.lang.ClassLoader"
      classrelation 198555 // <realization>
	relation 198555 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 198555 // <realization>
	  b parent class_ref 149147 // AnnotatedElement
      end

      classrelation 198683 // NO_ANNOTATIONS (<unidirectional association>)
	relation 198683 --->
	  a role_name "NO_ANNOTATIONS" multiplicity "[]" init_value " new Annotation[0]" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 198683 // NO_ANNOTATIONS (<unidirectional association>)
	  b parent class_ref 149275 // Annotation
      end

      classrelation 198811 // name (<unidirectional association>)
	relation 198811 --->
	  a role_name "name" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 198811 // name (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 198939 // specTitle (<unidirectional association>)
	relation 198939 --->
	  a role_name "specTitle" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 198939 // specTitle (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 199067 // specVersion (<unidirectional association>)
	relation 199067 --->
	  a role_name "specVersion" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 199067 // specVersion (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 199195 // specVendor (<unidirectional association>)
	relation 199195 --->
	  a role_name "specVendor" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 199195 // specVendor (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 199323 // implTitle (<unidirectional association>)
	relation 199323 --->
	  a role_name "implTitle" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 199323 // implTitle (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 199451 // implVersion (<unidirectional association>)
	relation 199451 --->
	  a role_name "implVersion" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 199451 // implVersion (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 199579 // implVendor (<unidirectional association>)
	relation 199579 --->
	  a role_name "implVendor" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 199579 // implVendor (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 199707 // sealBase (<unidirectional association>)
	relation 199707 --->
	  a role_name "sealBase" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 199707 // sealBase (<unidirectional association>)
	  b parent class_ref 140443 // URL
      end

      operation 368155 "Package"
	package explicit_return_type ""
	nparams 8
	  param inout name "name" type class_ref 3399692 // String
	  param inout name "specTitle" type class_ref 3399692 // String
	  param inout name "specVersion" type class_ref 3399692 // String
	  param inout name "specVendor" type class_ref 3399692 // String
	  param inout name "implTitle" type class_ref 3399692 // String
	  param inout name "implVersion" type class_ref 3399692 // String
	  param inout name "implVendor" type class_ref 3399692 // String
	  param inout name "sealBase" type class_ref 140443 // URL
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 368283 "getAnnotation"
	public explicit_return_type "A"
	nparams 1
	  param inout name "annotationType" type class_ref 3421708 // Class
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<A extends Annotation> ${type} ${name}${(}${t0}<A> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Returns the annotation associated with the specified annotation type and
this package, if present.

@param annotationType
           the annotation type to look for.
@return an instance of {@link Annotation} or {@code null}.
@see java.lang.reflect.AnnotatedElement#getAnnotation(java.lang.Class)"
      end

      operation 368411 "getAnnotations"
	public return_type class_ref 149275 // Annotation
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of this package's annotations."
      end

      operation 368539 "getDeclaredAnnotations"
	public return_type class_ref 149275 // Annotation
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of this package's declared annotations. Package annotations aren't
inherited, so this is equivalent to {@link #getAnnotations}."
      end

      operation 368667 "isAnnotationPresent"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "annotationType" type class_ref 3421708 // Class
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends Annotation> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether the specified annotation is present.

@param annotationType
           the annotation type to look for.
@return {@code true} if the annotation is present; {@code false}
        otherwise.
@see java.lang.reflect.AnnotatedElement#isAnnotationPresent(java.lang.Class)"
      end

      operation 368795 "getImplementationTitle"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the title of the implementation of this package, or {@code null}
if this is unknown. The format of this string is unspecified.

@return the implementation title, may be {@code null}."
      end

      operation 368923 "getImplementationVendor"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the vendor or organization that provides this
implementation of the package, or {@code null} if this is unknown. The
format of this string is unspecified.

@return the implementation vendor name, may be {@code null}."
      end

      operation 369051 "getImplementationVersion"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the version of the implementation of this package, or {@code
null} if this is unknown. The format of this string is unspecified.

@return the implementation version, may be {@code null}."
      end

      operation 369179 "getName"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of this package in the standard dot notation; for
example: \"java.lang\".

@return the name of this package."
      end

      operation 369307 "getPackage"
	class_operation public return_type class_ref 150555 // Package
	nparams 1
	  param inout name "packageName" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Attempts to locate the requested package in the caller's class loader. If
no package information can be located, {@code null} is returned.

@param packageName
           the name of the package to find.
@return the requested package, or {@code null}.
@see ClassLoader#getPackage(java.lang.String)"
      end

      operation 369435 "getPackages"
	class_operation public return_type class_ref 150555 // Package
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns all the packages known to the caller's class loader.

@return all the packages known to the caller's class loader.
@see ClassLoader#getPackages"
      end

      operation 369563 "getSpecificationTitle"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the title of the specification this package implements, or
{@code null} if this is unknown.

@return the specification title, may be {@code null}."
      end

      operation 369691 "getSpecificationVendor"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the vendor or organization that owns and maintains
the specification this package implements, or {@code null} if this is
unknown.

@return the specification vendor name, may be {@code null}."
      end

      operation 369819 "getSpecificationVersion"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the version of the specification this package implements, or
{@code null} if this is unknown. The version string is a sequence of
non-negative integers separated by dots; for example: \"1.2.3\".

@return the specification version string, may be {@code null}."
      end

      operation 369947 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 370075 "isCompatibleWith"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "version" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 148507 // NumberFormatException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether this package's specification version is compatible with
the specified version string. Version strings are compared by comparing
each dot separated part of the version as an integer.

@param version
           the version string to compare against.
@return {@code true} if the package versions are compatible; {@code
        false} otherwise.
@throws NumberFormatException
            if this package's version string or the one provided are not
            in the correct format."
      end

      operation 370203 "isSealed"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether this package is sealed.

@return {@code true} if this package is sealed; {@code false} otherwise."
      end

      operation 370331 "isSealed"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "url" type class_ref 140443 // URL
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether this package is sealed with respect to the specified
URL.

@param url
           the URL to check.
@return {@code true} if this package is sealed with {@code url}; {@code
        false} otherwise"
      end

      operation 370459 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 150683 "ClassCastException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Thrown when a program attempts to cast a an object to a type with which it is
not compatible."
      classrelation 188059 // <generalisation>
	relation 188059 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 188059 // <generalisation>
	  b parent class_ref 806284 // RuntimeException
      end

      attribute 170907 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -9223365651070458532L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 317083 "ClassCastException"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code ClassCastException} that includes the current
stack trace."
      end

      operation 317211 "ClassCastException"
	public explicit_return_type ""
	nparams 1
	  param inout name "detailMessage" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code ClassCastException} with the current stack trace
and the specified detail message.

@param detailMessage
           the detail message for this exception."
      end
    end

    class 150811 "ClassCircularityError"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Thrown when the VM notices that an attempt is made to load a
class which would directly or indirectly inherit from one of its subclasses.
<p>
Note that this error can only occur when inconsistent class files are loaded,
since it would normally be detected at compile time."
      classrelation 188187 // <generalisation>
	relation 188187 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 188187 // <generalisation>
	  b parent class_ref 147227 // LinkageError
      end

      attribute 171035 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 1054362542914539689L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 317339 "ClassCircularityError"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code ClassCircularityError} that include the current
stack trace."
      end

      operation 317467 "ClassCircularityError"
	public explicit_return_type ""
	nparams 1
	  param inout name "detailMessage" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code ClassCircularityError} with the current stack
trace and the specified detail message.

@param detailMessage
           the detail message for this error."
      end
    end

    class 150939 "ClassFormatError"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Thrown by a class loader when a class file has an illegal format or if the
data that it contains can not be interpreted as a class."
      classrelation 188315 // <generalisation>
	relation 188315 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 188315 // <generalisation>
	  b parent class_ref 147227 // LinkageError
      end

      attribute 171163 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -8420114879011949195L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 317595 "ClassFormatError"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code ClassFormatError} that includes the current stack
trace."
      end

      operation 317723 "ClassFormatError"
	public explicit_return_type ""
	nparams 1
	  param inout name "detailMessage" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code ClassFormatError} with the current stack trace
and the specified detail message.

@param detailMessage
           the detail message for this error."
      end
    end

    class 151195 "TwoEnumerationsInOne"
      visibility package 
      nactuals 1
      actual class class_ref 145947 // Enumeration
        rank 0 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Provides a helper class that combines two existing URL enumerations into one.
It is required for the getResources() methods. Items are fetched from the
first enumeration until it's empty, then from the second one."
      classrelation 188827 // <realization>
	relation 188827 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 188827 // <realization>
	  b parent class_ref 145947 // Enumeration
      end

      classrelation 188955 // first (<unidirectional association>)
	relation 188955 --->
	  a role_name "first" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<URL> ${name}${value};
"
	    classrelation_ref 188955 // first (<unidirectional association>)
	  b parent class_ref 145947 // Enumeration
      end

      classrelation 189083 // second (<unidirectional association>)
	relation 189083 --->
	  a role_name "second" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<URL> ${name}${value};
"
	    classrelation_ref 189083 // second (<unidirectional association>)
	  b parent class_ref 145947 // Enumeration
      end

      operation 322331 "TwoEnumerationsInOne"
	public explicit_return_type ""
	nparams 2
	  param inout name "first" type class_ref 145947 // Enumeration
	  param inout name "second" type class_ref 145947 // Enumeration
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<URL> ${p0}, ${t1}<URL> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 322459 "hasMoreElements"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 322587 "nextElement"
	public return_type class_ref 140443 // URL
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 151323 "BootClassLoader"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Provides an explicit representation of the boot class loader. It sits at the
head of the class loader chain and delegates requests to the VM's internal
class loading mechanism."
      classrelation 189211 // <generalisation>
	relation 189211 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 189211 // <generalisation>
	  b parent class_ref 138523 // ClassLoader
      end

      classrelation 189339 // instance (<unidirectional association>)
	relation 189339 --->
	  a role_name "instance" class_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 189339 // instance (<unidirectional association>)
	  b parent class_ref 151323 // BootClassLoader
      end

      operation 322715 "getInstance"
	class_operation public return_type class_ref 151323 // BootClassLoader
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@FindBugsSuppressWarnings(\"DP_CREATE_CLASSLOADER_INSIDE_DO_PRIVILEGED\")
"
	
	
	
      end

      operation 322843 "BootClassLoader"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 322971 "findClass"
	protected return_type class_ref 3421708 // Class
	nparams 1
	  param inout name "name" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 128795 // ClassNotFoundException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 323099 "findResource"
	protected return_type class_ref 140443 // URL
	nparams 1
	  param inout name "name" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 323227 "findResources"
	protected return_type class_ref 145947 // Enumeration
	nparams 1
	  param inout name "resName" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<URL> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unused\")
    @Override
"
	
	
	
      end

      operation 323355 "getPackage"
	protected return_type class_ref 150555 // Package
	nparams 1
	  param inout name "name" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns package information for the given package. Unfortunately, the
Android BootClassLoader doesn't really have this information, and as a
non-secure ClassLoader, it isn't even required to, according to the spec.
Yet, we want to provide it, in order to make all those hopeful callers of
{@code myClass.getPackage().getName()} happy. Thus we construct a Package
object the first time it is being requested and fill most of the fields
with dummy values. The Package object is then put into the ClassLoader's
Package cache, so we see the same one next time. We don't create Package
objects for null arguments or for the default package.
<p>
There a limited chance that we end up with multiple Package objects
representing the same package: It can happen when when a package is
scattered across different JAR files being loaded by different
ClassLoaders. Rather unlikely, and given that this whole thing is more or
less a workaround, probably not worth the effort."
      end

      operation 323483 "getResource"
	public return_type class_ref 140443 // URL
	nparams 1
	  param inout name "resName" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 323611 "loadClass"
	protected return_type class_ref 3421708 // Class
	nparams 2
	  param inout name "className" type class_ref 3399692 // String
	  param inout name "resolve" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 128795 // ClassNotFoundException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 323739 "getResources"
	public return_type class_ref 145947 // Enumeration
	nparams 1
	  param inout name "resName" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<URL> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 151451 "CloneNotSupportedException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Thrown when a program attempts to clone an object which does not support the
{@link Cloneable} interface.

@see Cloneable"
      classrelation 189723 // <generalisation>
	relation 189723 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 189723 // <generalisation>
	  b parent class_ref 132251 // Exception
      end

      attribute 171419 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 5195511250079656443L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 324507 "CloneNotSupportedException"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code CloneNotSupportedException} that includes the
current stack trace."
      end

      operation 324635 "CloneNotSupportedException"
	public explicit_return_type ""
	nparams 1
	  param inout name "detailMessage" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code CloneNotSupportedException} with the current
stack trace and the specified detail message.

@param detailMessage
           the detail message for this exception."
      end
    end

    class 151579 "Compiler"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Does nothing on Android."
      operation 324763 "Compiler"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prevent this class from being instantiated."
      end

      operation 324891 "command"
	class_operation public return_type class_ref 3401484 // Object
	nparams 1
	  param inout name "cmd" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Executes an operation according to the specified command object. This
method is the low-level interface to the JIT compiler. It may return any
object or {@code null} if no JIT compiler is available. Returns null
on Android, whether or not the system has a JIT.

@param cmd
           the command object for the JIT compiler.
@return the result of executing command or {@code null}."
      end

      operation 325019 "compileClass"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "classToCompile" type class_ref 3421708 // Class
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compiles the specified class using the JIT compiler and indicates if
compilation has been successful. Does nothing and returns false on
Android.

@param classToCompile
           java.lang.Class the class to JIT compile
@return {@code true} if the compilation has been successful;
        {@code false} if it has failed or if there is no JIT compiler
        available."
      end

      operation 325147 "compileClasses"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param inout name "nameRoot" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compiles all classes whose name matches the specified name using the JIT
compiler and indicates if compilation has been successful. Does nothing
and returns false on Android.

@param nameRoot
           the string to match class names with.
@return {@code true} if the compilation has been successful;
        {@code false} if it has failed or if there is no JIT compiler
        available."
      end

      operation 325275 "disable"
	class_operation public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Disables the JIT compiler. Does nothing on Android."
      end

      operation 325403 "enable"
	class_operation public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enables the JIT compiler. Does nothing on Android."
      end
    end

    class 151707 "Daemons"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Calls Object.finalize() on objects in the finalizer reference queue. The VM
will abort if any finalize() call takes more than the maximum finalize time
to complete.

@hide"
      attribute 171547 "NANOS_PER_MILLI"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1000 * 1000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 171675 "NANOS_PER_SECOND"
	class_attribute const_attribute private explicit_type "int"
	init_value " NANOS_PER_MILLI * 1000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 171803 "MAX_FINALIZE_NANOS"
	class_attribute const_attribute private explicit_type "long"
	init_value " 10L * NANOS_PER_SECOND"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 325531 "start"
	class_operation public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 325659 "stop"
	class_operation public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 151835 "Daemon"
	abstract visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 189851 // <realization>
	  relation 189851 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 189851 // <realization>
	    b parent class_ref 151963 // Runnable
	end

	classrelation 189979 // thread (<unidirectional association>)
	  relation 189979 --->
	    a role_name "thread" private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 189979 // thread (<unidirectional association>)
	    b parent class_ref 1201420 // Thread
	end

	operation 325915 "start"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 326043 "run"
	  abstract public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 326171 "isRunning"
	  protected explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns true while the current thread should continue to run; false
when it should return."
	end

	operation 326299 "interrupt"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 326427 "stop"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Waits for the runtime thread to stop. This interrupts the thread
currently running the runnable and then waits for it to exit."
	end

	operation 326555 "getStackTrace"
	  public return_type class_ref 134811 // StackTraceElement
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns the current stack trace of the thread, or an empty stack trace
if the thread is not currently running."
	end
      end

      class 152091 "ReferenceQueueDaemon"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 190107 // <generalisation>
	  relation 190107 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 190107 // <generalisation>
	    b parent class_ref 151835 // Daemon
	end

	classrelation 190235 // INSTANCE (<directional composition>)
	  relation 190235 *-->
	    a role_name "INSTANCE" init_value " new ReferenceQueueDaemon()" class_relation const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 190235 // INSTANCE (<directional composition>)
	    b parent class_ref 152091 // ReferenceQueueDaemon
	end

	operation 326683 "run"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 326811 "enqueue"
	  private explicit_return_type "void"
	  nparams 1
	    param inout name "list" type class_ref 152219 // Reference
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      class 152347 "FinalizerDaemon"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 190363 // <generalisation>
	  relation 190363 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 190363 // <generalisation>
	    b parent class_ref 151835 // Daemon
	end

	classrelation 190491 // INSTANCE (<directional composition>)
	  relation 190491 *-->
	    a role_name "INSTANCE" init_value " new FinalizerDaemon()" class_relation const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 190491 // INSTANCE (<directional composition>)
	    b parent class_ref 152347 // FinalizerDaemon
	end

	classrelation 190619 // queue (<unidirectional association>)
	  relation 190619 --->
	    a role_name "queue" init_value " FinalizerReference.queue" const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Object> ${name}${value};
"
	      classrelation_ref 190619 // queue (<unidirectional association>)
	    b parent class_ref 152475 // ReferenceQueue
	end

	classrelation 190747 // finalizingObject (<unidirectional association>)
	  relation 190747 --->
	    a role_name "finalizingObject" volatile private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 190747 // finalizingObject (<unidirectional association>)
	    b parent class_ref 3401484 // Object
	end

	attribute 171931 "finalizingStartedNanos"
	  volatile private explicit_type "long"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 326939 "run"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 327067 "doFinalize"
	  private explicit_return_type "void"
	  nparams 1
	    param inout name "reference" type class_ref 152603 // FinalizerReference
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@FindBugsSuppressWarnings(\"FI_EXPLICIT_INVOCATION\")
"
	  
	  
	  
	end
      end

      class 152731 "FinalizerWatchdogDaemon"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 190875 // <generalisation>
	  relation 190875 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 190875 // <generalisation>
	    b parent class_ref 151835 // Daemon
	end

	classrelation 191003 // INSTANCE (<directional composition>)
	  relation 191003 *-->
	    a role_name "INSTANCE" init_value " new FinalizerWatchdogDaemon()" class_relation const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 191003 // INSTANCE (<directional composition>)
	    b parent class_ref 152731 // FinalizerWatchdogDaemon
	end

	operation 327195 "run"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 327323 "waitForObject"
	  private return_type class_ref 3401484 // Object
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 327451 "sleepFor"
	  private explicit_return_type "void"
	  nparams 2
	    param in name "startNanos" explicit_type "long"
	    param in name "durationNanos" explicit_type "long"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 327579 "waitForFinalization"
	  private explicit_return_type "boolean"
	  nparams 1
	    param inout name "object" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 327707 "finalizerTimedOut"
	  class_operation private explicit_return_type "void"
	  nparams 1
	    param inout name "object" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end
    end

    class 151963 "Runnable"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Represents a command that can be executed. Often used to run code in a
different {@link Thread}."
      operation 325787 "run"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Starts executing the active part of the class' code. This method is
called when a thread is started that has been created with a class which
implements {@code Runnable}."
      end
    end

    class 152859 "Deprecated"
      visibility public stereotype "@interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}@interface ${name}${extends} {
${members}}
"
      java_annotation "@Documented
@Retention(RetentionPolicy.RUNTIME)
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Annotation type used to mark program elements that should no longer be used
by programmers. Compilers produce a warning if a deprecated program element
is used.

@since 1.5"
    end

    class 152987 "Double"
      visibility public 
      nactuals 1
      actual class class_ref 139675 // Comparable
        rank 0 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The wrapper for the primitive type {@code double}.

@see java.lang.Number
@since 1.0"
      classrelation 191131 // <generalisation>
	relation 191131 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 191131 // <generalisation>
	  b parent class_ref 148379 // Number
      end

      classrelation 191259 // <realization>
	relation 191259 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 191259 // <realization>
	  b parent class_ref 139675 // Comparable
      end

      attribute 172059 "EXPONENT_BIAS"
	class_attribute const_attribute package explicit_type "int"
	init_value " 1023"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 172187 "EXPONENT_BITS"
	class_attribute const_attribute package explicit_type "int"
	init_value " 12"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 172315 "MANTISSA_BITS"
	class_attribute const_attribute package explicit_type "int"
	init_value " 52"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 172443 "NON_MANTISSA_BITS"
	class_attribute const_attribute package explicit_type "int"
	init_value " 12"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 172571 "SIGN_MASK"
	class_attribute const_attribute package explicit_type "long"
	init_value " 0x8000000000000000L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 172699 "EXPONENT_MASK"
	class_attribute const_attribute package explicit_type "long"
	init_value " 0x7ff0000000000000L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 172827 "MANTISSA_MASK"
	class_attribute const_attribute package explicit_type "long"
	init_value " 0x000fffffffffffffL"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 172955 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -9172774392245257468L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 173083 "value"
	const_attribute private explicit_type "double"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The value which the receiver represents.
"
      end

      attribute 173211 "MAX_VALUE"
	class_attribute const_attribute public explicit_type "double"
	init_value " 1.79769313486231570e+308"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Constant for the maximum {@code double} value, (2 - 2<sup>-52</sup>) *
2<sup>1023</sup>.
"
      end

      attribute 173339 "MIN_VALUE"
	class_attribute const_attribute public explicit_type "double"
	init_value " 5e-324"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Constant for the minimum {@code double} value, 2<sup>-1074</sup>.
"
      end

      attribute 173467 "NaN"
	class_attribute const_attribute public explicit_type "double"
	init_value " 0.0 / 0.0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " 4.94065645841246544e-324 gets rounded to 9.88131e-324 

Constant for the Not-a-Number (NaN) value of the {@code double} type.
"
      end

      attribute 173595 "POSITIVE_INFINITY"
	class_attribute const_attribute public explicit_type "double"
	init_value " 1.0 / 0.0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Constant for the positive infinity value of the {@code double} type.
"
      end

      attribute 173723 "NEGATIVE_INFINITY"
	class_attribute const_attribute public explicit_type "double"
	init_value " -1.0 / 0.0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Constant for the negative infinity value of the {@code double} type.
"
      end

      attribute 173851 "MIN_NORMAL"
	class_attribute const_attribute public explicit_type "double"
	init_value " 2.2250738585072014E-308"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Constant for the smallest positive normal value of the {@code double} type.

@since 1.6
"
      end

      attribute 173979 "MAX_EXPONENT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1023"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Maximum base-2 exponent that a finite value of the {@code double} type may have.
Equal to {@code Math.getExponent(Double.MAX_VALUE)}.

@since 1.6
"
      end

      attribute 174107 "MIN_EXPONENT"
	class_attribute const_attribute public explicit_type "int"
	init_value " -1022"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Minimum base-2 exponent that a normal value of the {@code double} type may have.
Equal to {@code Math.getExponent(Double.MIN_NORMAL)}.

@since 1.6
"
      end

      classrelation 191387 // TYPE (<unidirectional association>)
	relation 191387 --->
	  a role_name "TYPE" init_value " (Class<Double>) double[].class.getComponentType()" class_relation const_relation public
	    comment "
The {@link Class} object that represents the primitive type {@code
double}.

@since 1.1

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Double> ${name}${value};
"
	    java_annotation "@SuppressWarnings(\"unchecked\")
"
	    classrelation_ref 191387 // TYPE (<unidirectional association>)
	  b parent class_ref 3421708 // Class
      end

      attribute 174235 "SIZE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 64"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Note: Double.TYPE can't be set to \"double.class\", since *that* is
 defined to be \"java.lang.Double.TYPE\";

Constant for the number of bits needed to represent a {@code double} in
two's complement form.

@since 1.5
"
      end

      operation 327835 "Double"
	public explicit_return_type ""
	nparams 1
	  param in name "value" explicit_type "double"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code Double} with the specified primitive double
value.

@param value
           the primitive double value to store in the new instance."
      end

      operation 327963 "Double"
	public explicit_return_type ""
	nparams 1
	  param inout name "string" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 148507 // NumberFormatException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code Double} from the specified string.

@param string
           the string representation of a double value.
@throws NumberFormatException
            if {@code string} cannot be parsed as a double value.
@see #parseDouble(String)"
      end

      operation 328091 "compareTo"
	public explicit_return_type "int"
	nparams 1
	  param inout name "object" type class_ref 152987 // Double
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares this object to the specified double object to determine their
relative order. There are two special cases:
<ul>
<li>{@code Double.NaN} is equal to {@code Double.NaN} and it is greater
than any other double value, including {@code Double.POSITIVE_INFINITY};</li>
<li>+0.0d is greater than -0.0d</li>
</ul>

@param object
           the double object to compare this object to.
@return a negative value if the value of this double is less than the
        value of {@code object}; 0 if the value of this double and the
        value of {@code object} are equal; a positive value if the value
        of this double is greater than the value of {@code object}.
@throws NullPointerException
            if {@code object} is {@code null}.
@see java.lang.Comparable
@since 1.2"
      end

      operation 328219 "byteValue"
	public explicit_return_type "byte"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 328347 "doubleToLongBits"
	class_operation public explicit_return_type "long"
	nparams 1
	  param in name "value" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
	comment "Returns an integer corresponding to the bits of the given
<a href=\"http://en.wikipedia.org/wiki/IEEE_754-1985\">IEEE 754</a> double precision
{@code value}. All <em>Not-a-Number (NaN)</em> values are converted to a single NaN
representation ({@code 0x7ff8000000000000L}) (compare to {@link #doubleToRawLongBits})."
      end

      operation 328475 "doubleToRawLongBits"
	class_operation public explicit_return_type "long"
	nparams 1
	  param in name "value" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
	comment "Returns an integer corresponding to the bits of the given
<a href=\"http://en.wikipedia.org/wiki/IEEE_754-1985\">IEEE 754</a> double precision
{@code value}. <em>Not-a-Number (NaN)</em> values are preserved (compare
to {@link #doubleToLongBits})."
      end

      operation 328603 "doubleValue"
	public explicit_return_type "double"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Gets the primitive value of this double.

@return this object's primitive value."
      end

      operation 328731 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "object" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Tests this double for equality with {@code object}.
To be equal, {@code object} must be an instance of {@code Double} and
{@code doubleToLongBits} must give the same value for both objects.

<p>Note that, unlike {@code ==}, {@code -0.0} and {@code +0.0} compare
unequal, and {@code NaN}s compare equal by this method.

@param object
           the object to compare this double with.
@return {@code true} if the specified object is equal to this
        {@code Double}; {@code false} otherwise."
      end

      operation 328859 "floatValue"
	public explicit_return_type "float"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 328987 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 329115 "intValue"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 329243 "isInfinite"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether this object represents an infinite value.

@return {@code true} if the value of this double is positive or negative
        infinity; {@code false} otherwise."
      end

      operation 329371 "isInfinite"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "d" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether the specified double represents an infinite value.

@param d
           the double to check.
@return {@code true} if the value of {@code d} is positive or negative
        infinity; {@code false} otherwise."
      end

      operation 329499 "isNaN"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether this object is a <em>Not-a-Number (NaN)</em> value.

@return {@code true} if this double is <em>Not-a-Number</em>;
        {@code false} if it is a (potentially infinite) double number."
      end

      operation 329627 "isNaN"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "d" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether the specified double is a <em>Not-a-Number (NaN)</em>
value.

@param d
           the double value to check.
@return {@code true} if {@code d} is <em>Not-a-Number</em>;
        {@code false} if it is a (potentially infinite) double number."
      end

      operation 329755 "longBitsToDouble"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "bits" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
	comment "Returns the <a href=\"http://en.wikipedia.org/wiki/IEEE_754-1985\">IEEE 754</a>
double precision float corresponding to the given {@code bits}."
      end

      operation 329883 "longValue"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 330011 "parseDouble"
	class_operation public explicit_return_type "double"
	nparams 1
	  param inout name "string" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 148507 // NumberFormatException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses the specified string as a double value.

@param string
           the string representation of a double value.
@return the primitive double value represented by {@code string}.
@throws NumberFormatException
            if {@code string} cannot be parsed as a double value."
      end

      operation 330139 "shortValue"
	public explicit_return_type "short"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 330267 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 330395 "toString"
	class_operation public return_type class_ref 3399692 // String
	nparams 1
	  param in name "d" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string containing a concise, human-readable description of the
specified double value.

@param d
            the double to convert to a string.
@return a printable representation of {@code d}."
      end

      operation 330523 "valueOf"
	class_operation public return_type class_ref 152987 // Double
	nparams 1
	  param inout name "string" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 148507 // NumberFormatException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses the specified string as a double value.

@param string
           the string representation of a double value.
@return a {@code Double} instance containing the double value represented
        by {@code string}.
@throws NumberFormatException
            if {@code string} cannot be parsed as a double value.
@see #parseDouble(String)"
      end

      operation 330651 "compare"
	class_operation public explicit_return_type "int"
	nparams 2
	  param in name "double1" explicit_type "double"
	  param in name "double2" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares the two specified double values. There are two special cases:
<ul>
<li>{@code Double.NaN} is equal to {@code Double.NaN} and it is greater
than any other double value, including {@code Double.POSITIVE_INFINITY};</li>
<li>+0.0d is greater than -0.0d</li>
</ul>

@param double1
           the first value to compare.
@param double2
           the second value to compare.
@return a negative value if {@code double1} is less than {@code double2};
        0 if {@code double1} and {@code double2} are equal; a positive
        value if {@code double1} is greater than {@code double2}."
      end

      operation 330779 "valueOf"
	class_operation public return_type class_ref 152987 // Double
	nparams 1
	  param in name "d" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@code Double} instance for the specified double value.

@param d
           the double value to store in the instance.
@return a {@code Double} instance containing {@code d}.
@since 1.5"
      end

      operation 330907 "toHexString"
	class_operation public return_type class_ref 3399692 // String
	nparams 1
	  param in name "d" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts the specified double into its hexadecimal string representation.

@param d
           the double to convert.
@return the hexadecimal string representation of {@code d}.
@since 1.5"
      end
    end

    class 153115 "Enum"
      abstract visibility public 
      nformals 1
      formal name "E" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 1
      actual class class_ref 139675 // Comparable
        rank 0 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The superclass of all enumerated types. Actual enumeration types inherit from
this class, but extending this class does not make a class an enumeration
type, since the compiler needs to generate special information for it."
      classrelation 191515 // <realization>
	relation 191515 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 191515 // <realization>
	  b parent class_ref 128155 // Serializable
      end

      classrelation 191643 // <realization>
	relation 191643 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 191643 // <realization>
	  b parent class_ref 139675 // Comparable
      end

      attribute 174363 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -4300926546619394005L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 191771 // sharedConstantsCache (<unidirectional association>)
	relation 191771 --->
	  a role_name "sharedConstantsCache" init_value " new BasicLruCache<Class<? extends Enum>, Object[]>(64) {
        @Override protected Object[] create(Class<? extends Enum> enumType) {
            if (!enumType.isEnum()) {
                return null;
            }
            Method method = (Method) Class.getDeclaredConstructorOrMethod(
                    enumType, \"values\", EmptyArray.CLASS);
            try {
                return (Object[]) method.invoke((Object[]) null);
            } catch (IllegalAccessException impossible) {
                throw new AssertionError();
            } catch (InvocationTargetException impossible) {
                throw new AssertionError();
            }
        }
    }" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Class<? extends Enum>, Object[]> ${name}${value};
"
	    classrelation_ref 191771 // sharedConstantsCache (<unidirectional association>)
	  b parent class_ref 153243 // BasicLruCache
      end

      classrelation 191899 // name (<unidirectional association>)
	relation 191899 --->
	  a role_name "name" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 191899 // name (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      attribute 174491 "ordinal"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 331035 "Enum"
	protected explicit_return_type ""
	nparams 2
	  param inout name "name" type class_ref 3399692 // String
	  param in name "ordinal" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor for constants of enum subtypes.

@param name
           the enum constant's declared name.
@param ordinal
           the enum constant's ordinal, which corresponds to its position
           in the enum declaration, starting at zero."
      end

      operation 331163 "name"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of this enum constant. The name is the field as it
appears in the {@code enum} declaration.

@return the name of this enum constant.
@see #toString()"
      end

      operation 331291 "ordinal"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the position of the enum constant in the declaration. The first
constant has an ordinal value of zero.

@return the ordinal value of this enum constant."
      end

      operation 331419 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns a string containing a concise, human-readable description of this
object. In this case, the enum constant's name is returned.

@return a printable representation of this object."
      end

      operation 331547 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "other" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Compares this object with the specified object and indicates if they are
equal. In order to be equal, {@code object} must be identical to this
enum constant.

@param other
           the object to compare this enum constant with.
@return {@code true} if the specified object is equal to this
        {@code Enum}; {@code false} otherwise."
      end

      operation 331675 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 331803 "clone"
	protected return_type class_ref 3401484 // Object
	nparams 0
	nexceptions 1
	  exception class_ref 151451 // CloneNotSupportedException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "{@code Enum} objects are singletons, they may not be cloned. This method
always throws a {@code CloneNotSupportedException}.

@return does not return.
@throws CloneNotSupportedException
            is always thrown."
      end

      operation 331931 "compareTo"
	public explicit_return_type "int"
	nparams 1
	  param inout name "o" explicit_type "E"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares this object to the specified enum object to determine their
relative order. This method compares the object's ordinal values, that
is, their position in the enum declaration.

@param o
           the enum object to compare this object to.
@return a negative value if the ordinal value of this enum constant is
        less than the ordinal value of {@code o}; 0 if the ordinal
        values of this enum constant and {@code o} are equal; a positive
        value if the ordinal value of this enum constant is greater than
        the ordinal value of {@code o}.
@see java.lang.Comparable"
      end

      operation 332059 "getDeclaringClass"
	public return_type class_ref 3421708 // Class
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<E> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Returns the enum constant's declaring class.

@return the class object representing the constant's enum type."
      end

      operation 332187 "valueOf"
	class_operation public explicit_return_type "T"
	nparams 2
	  param inout name "enumType" type class_ref 3421708 // Class
	  param inout name "name" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends Enum<T>> ${type} ${name}${(}${t0}<T> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the constant with the specified name of the specified enum type.

@param enumType
           the class of the enumerated type to search for the constant
           value.
@param name
           the name of the constant value to find.
@return the enum constant.
@throws NullPointerException
            if either {@code enumType} or {@code name} are {@code null}.
@throws IllegalArgumentException
            if {@code enumType} is not an enumerated type or does not
            have a constant value called {@code name}."
      end

      operation 332315 "getSharedConstants"
	class_operation public explicit_return_type "T"
	nparams 1
	  param inout name "enumType" type class_ref 3421708 // Class
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends Enum<T>> ${type}[] ${name}${(}${t0}<T> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Returns a shared, mutable array containing the constants of this enum. It
is an error to modify the returned array.

@hide

 the cache always returns the type matching enumType"
      end

      operation 332443 "finalize"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
    @SuppressWarnings(\"FinalizeDoesntCallSuperFinalize\")
"
	
	
	
	comment "Enum types may not have finalizers.

@since 1.6"
      end
    end

    class 153371 "EnumConstantNotPresentException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Thrown if an {@code enum} constant does not exist for a particular name.

@since 1.5"
      classrelation 192027 // <generalisation>
	relation 192027 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 192027 // <generalisation>
	  b parent class_ref 806284 // RuntimeException
      end

      attribute 174619 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -6046998521960521108L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 192155 // enumType (<unidirectional association>)
	relation 192155 --->
	  a role_name "enumType" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<? extends Enum> ${name}${value};
"
	    java_annotation "@SuppressWarnings(\"unchecked\")
"
	    classrelation_ref 192155 // enumType (<unidirectional association>)
	  b parent class_ref 3421708 // Class
      end

      classrelation 192283 // constantName (<unidirectional association>)
	relation 192283 --->
	  a role_name "constantName" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 192283 // constantName (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      operation 332571 "EnumConstantNotPresentException"
	public explicit_return_type ""
	nparams 2
	  param inout name "enumType" type class_ref 3421708 // Class
	  param inout name "constantName" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<? extends Enum> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Constructs a new {@code EnumConstantNotPresentException} with the current
stack trace and a detail message based on the specified enum type and
missing constant name.

@param enumType
           the enum type.
@param constantName
           the missing constant name."
      end

      operation 332699 "enumType"
	public return_type class_ref 3421708 // Class
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<? extends Enum> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment "Gets the enum type for which the constant name is missing.

@return the enum type for which a constant name has not been found."
      end

      operation 332827 "constantName"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the name of the missing constant.

@return the name of the constant that has not been found in the enum
        type."
      end
    end

    class 153499 "ExceptionInInitializerError"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Thrown when an exception occurs during class initialization."
      classrelation 192411 // <generalisation>
	relation 192411 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 192411 // <generalisation>
	  b parent class_ref 147227 // LinkageError
      end

      attribute 174747 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 1521711792217232256L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 192539 // exception (<unidirectional association>)
	relation 192539 --->
	  a role_name "exception" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 192539 // exception (<unidirectional association>)
	  b parent class_ref 134683 // Throwable
      end

      operation 332955 "ExceptionInInitializerError"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code ExceptionInInitializerError} that includes the
current stack trace."
      end

      operation 333083 "ExceptionInInitializerError"
	public explicit_return_type ""
	nparams 1
	  param inout name "detailMessage" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code ExceptionInInitializerError} with the current
stack trace and the specified detail message.

@param detailMessage
           the detail message for this error."
      end

      operation 333211 "ExceptionInInitializerError"
	public explicit_return_type ""
	nparams 1
	  param inout name "exception" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code ExceptionInInitializerError} with the current
stack trace and the specified cause. The exception should be the one
which originally occurred in the class initialization code.

@param exception
           the exception that caused this error."
      end

      operation 333339 "getException"
	public return_type class_ref 134683 // Throwable
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the exception that is the cause of this error.

@return the exception that caused this error."
      end

      operation 333467 "getCause"
	public return_type class_ref 134683 // Throwable
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns the cause of this error, or {@code null} if there is no cause.

@return the exception that caused this error."
      end
    end

    class 153627 "FindBugsSuppressWarnings"
      visibility public stereotype "@interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}@interface ${name}${extends} {
${members}}
"
      java_annotation "@Target({TYPE, FIELD, METHOD, PARAMETER, CONSTRUCTOR, LOCAL_VARIABLE})
@Retention(CLASS)
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Suppress FindBugs warnings on the annotated element. FindBugs will recognize
any annotation that has class retention and whose name ends with
\"SuppressWarnings\".

@hide"
      operation 333595 "value"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The <a href=\"http://findbugs.sourceforge.net/bugDescriptions.html\">FindBugs
Patterns</a> to suppress, such as {@code SE_TRANSIENT_FIELD_NOT_RESTORED}
or {@code Se}. Full, upper case names are preferred."
      end
    end

    class 153755 "HexStringParser"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Parses hex string to a single or double precision floating point number.

TODO: rewrite this!

@hide"
      attribute 177179 "DOUBLE_EXPONENT_WIDTH"
	class_attribute const_attribute private explicit_type "int"
	init_value " 11"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 177307 "DOUBLE_MANTISSA_WIDTH"
	class_attribute const_attribute private explicit_type "int"
	init_value " 52"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 177435 "FLOAT_EXPONENT_WIDTH"
	class_attribute const_attribute private explicit_type "int"
	init_value " 8"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 177563 "FLOAT_MANTISSA_WIDTH"
	class_attribute const_attribute private explicit_type "int"
	init_value " 23"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 177691 "HEX_RADIX"
	class_attribute const_attribute private explicit_type "int"
	init_value " 16"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 177819 "MAX_SIGNIFICANT_LENGTH"
	class_attribute const_attribute private explicit_type "int"
	init_value " 15"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 193051 // HEX_SIGNIFICANT (<unidirectional association>)
	relation 193051 --->
	  a role_name "HEX_SIGNIFICANT" init_value " \"0[xX](\\\\p{XDigit}+\\\\.?|\\\\p{XDigit}*\\\\.\\\\p{XDigit}+)\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 193051 // HEX_SIGNIFICANT (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 193179 // BINARY_EXPONENT (<unidirectional association>)
	relation 193179 --->
	  a role_name "BINARY_EXPONENT" init_value " \"[pP]([+-]?\\\\d+)\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 193179 // BINARY_EXPONENT (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 193307 // FLOAT_TYPE_SUFFIX (<unidirectional association>)
	relation 193307 --->
	  a role_name "FLOAT_TYPE_SUFFIX" init_value " \"[fFdD]?\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 193307 // FLOAT_TYPE_SUFFIX (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 193435 // HEX_PATTERN (<unidirectional association>)
	relation 193435 --->
	  a role_name "HEX_PATTERN" init_value " \"[\\\\x00-\\\\x20]*([+-]?)\" + HEX_SIGNIFICANT
            + BINARY_EXPONENT + FLOAT_TYPE_SUFFIX + \"[\\\\x00-\\\\x20]*\"" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 193435 // HEX_PATTERN (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 193563 // PATTERN (<unidirectional association>)
	relation 193563 --->
	  a role_name "PATTERN" init_value " Pattern.compile(HEX_PATTERN)" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 193563 // PATTERN (<unidirectional association>)
	  b parent class_ref 153883 // Pattern
      end

      attribute 177947 "EXPONENT_WIDTH"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 178075 "MANTISSA_WIDTH"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 178203 "EXPONENT_BASE"
	const_attribute private explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 178331 "MAX_EXPONENT"
	const_attribute private explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 178459 "MIN_EXPONENT"
	const_attribute private explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 178587 "MANTISSA_MASK"
	const_attribute private explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 178715 "sign"
	private explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 178843 "exponent"
	private explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 178971 "mantissa"
	private explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 193691 // abandonedNumber (<unidirectional association>)
	relation 193691 --->
	  a role_name "abandonedNumber" init_value "\"\"" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 193691 // abandonedNumber (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      operation 337051 "HexStringParser"
	public explicit_return_type ""
	nparams 2
	  param in name "exponentWidth" explicit_type "int"
	  param in name "mantissaWidth" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 337179 "parseDouble"
	class_operation public explicit_return_type "double"
	nparams 1
	  param inout name "hexString" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses the hex string to a double number."
      end

      operation 337307 "parseFloat"
	class_operation public explicit_return_type "float"
	nparams 1
	  param inout name "hexString" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses the hex string to a float number."
      end

      operation 337435 "parse"
	private explicit_return_type "long"
	nparams 2
	  param inout name "hexString" type class_ref 3399692 // String
	  param inout name "isDouble" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 337563 "parseHexSign"
	private explicit_return_type "void"
	nparams 1
	  param inout name "signStr" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses the sign field."
      end

      operation 337691 "parseExponent"
	private explicit_return_type "void"
	nparams 1
	  param inout name "exponentStr" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses the exponent field."
      end

      operation 337819 "parseMantissa"
	private explicit_return_type "void"
	nparams 1
	  param inout name "significantStr" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses the mantissa field."
      end

      operation 337947 "setInfinite"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 338075 "setZero"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 338203 "checkedAddExponent"
	private explicit_return_type "void"
	nparams 1
	  param in name "offset" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the exponent variable to Long.MAX_VALUE or -Long.MAX_VALUE if
overflow or underflow happens."
      end

      operation 338331 "processNormalNumber"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 338459 "processSubNormalNumber"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 338587 "fitMantissaInDesiredWidth"
	private explicit_return_type "void"
	nparams 1
	  param in name "desiredWidth" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adjusts the mantissa to desired width for further analysis."
      end

      operation 338715 "discardTrailingBits"
	private explicit_return_type "void"
	nparams 1
	  param in name "num" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Stores the discarded bits to abandonedNumber."
      end

      operation 338843 "round"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The value is rounded up or down to the nearest infinitely precise result.
If the value is exactly halfway between two infinitely precise results,
then it should be rounded up to the nearest infinitely precise even."
      end

      operation 338971 "getNormalizedSignificand"
	private return_type class_ref 3399692 // String
	nparams 2
	  param inout name "strIntegerPart" type class_ref 3399692 // String
	  param inout name "strDecimalPart" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the normalized significand after removing the leading zeros."
      end

      operation 339099 "getOffset"
	private explicit_return_type "int"
	nparams 2
	  param inout name "strIntegerPart" type class_ref 3399692 // String
	  param inout name "strDecimalPart" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Calculates the offset between the normalized number and unnormalized
number. In a normalized representation, significand is represented by the
characters \"0x1.\" followed by a lowercase hexadecimal representation of
the rest of the significand as a fraction."
      end

      operation 339227 "countBitsLength"
	private explicit_return_type "int"
	nparams 1
	  param in name "value" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 154011 "IllegalAccessError"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Thrown when the VM notices that a program tries access a field
which is not accessible from where it is referenced.
<p>
Note that this can only occur when inconsistent class files have been loaded."
      classrelation 193819 // <generalisation>
	relation 193819 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 193819 // <generalisation>
	  b parent class_ref 147099 // IncompatibleClassChangeError
      end

      attribute 179099 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -8988904074992417891L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 339355 "IllegalAccessError"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code IllegalAccessError} that includes the current
stack trace."
      end

      operation 339483 "IllegalAccessError"
	public explicit_return_type ""
	nparams 1
	  param inout name "detailMessage" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code IllegalAccessError} with the current stack trace
and the specified detail message.

@param detailMessage
           the detail message for this error."
      end
    end

    class 154139 "IllegalMonitorStateException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Thrown when a monitor operation is attempted when the monitor is not in the
correct state, for example when a thread attempts to exit a monitor which it
does not own."
      classrelation 194203 // <generalisation>
	relation 194203 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 194203 // <generalisation>
	  b parent class_ref 806284 // RuntimeException
      end

      attribute 179483 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 3713306369498869069L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 340379 "IllegalMonitorStateException"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code IllegalMonitorStateException} that includes the
current stack trace."
      end

      operation 340507 "IllegalMonitorStateException"
	public explicit_return_type ""
	nparams 1
	  param inout name "detailMessage" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code IllegalArgumentException} with the current stack
trace and the specified detail message.

@param detailMessage
           the detail message for this exception."
      end
    end

    class 154267 "IllegalStateException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Thrown when an action is attempted at a time when the VM is not
in the correct state."
      classrelation 194331 // <generalisation>
	relation 194331 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 194331 // <generalisation>
	  b parent class_ref 806284 // RuntimeException
      end

      attribute 179611 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -1848914673093119416L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 340635 "IllegalStateException"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code IllegalStateException} that includes the current
stack trace."
      end

      operation 340763 "IllegalStateException"
	public explicit_return_type ""
	nparams 1
	  param inout name "detailMessage" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code IllegalStateException} with the current stack
trace and the specified detail message.

@param detailMessage
           the detail message for this exception."
      end

      operation 340891 "IllegalStateException"
	public explicit_return_type ""
	nparams 2
	  param inout name "message" type class_ref 3399692 // String
	  param inout name "cause" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code IllegalStateException} with the current stack
trace, the specified detail message and the specified cause.

@param message
           the detail message for this exception.
@param cause
           the cause of this exception.
@since 1.5"
      end

      operation 341019 "IllegalStateException"
	public explicit_return_type ""
	nparams 1
	  param inout name "cause" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code IllegalStateException} with the current stack
trace and the specified cause.

@param cause
           the cause of this exception, may be {@code null}.
@since 1.5"
      end
    end

    class 154395 "IllegalThreadStateException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Thrown when an operation is attempted which is not possible given the state
that the executing thread is in."
      classrelation 194459 // <generalisation>
	relation 194459 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 194459 // <generalisation>
	  b parent class_ref 128283 // IllegalArgumentException
      end

      attribute 179739 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -7626246362397460174L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 341147 "IllegalThreadStateException"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code IllegalThreadStateException} that includes the
current stack trace."
      end

      operation 341275 "IllegalThreadStateException"
	public explicit_return_type ""
	nparams 1
	  param inout name "detailMessage" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code IllegalThreadStateException} with the current
stack trace and the specified detail message.

@param detailMessage
           the detail message for this exception."
      end
    end

    class 154523 "InheritableThreadLocal"
      visibility public 
      nformals 1
      formal name "T" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 1
      actual class class_ref 144539 // ThreadLocal
        rank 0 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A thread-local variable whose value is passed from parent to child thread. By
default, the value of an inheritable thread-local variable of a child thread
is initialized with the value of the parent thread's variable at thread
creation time. However, subclasses may override {code #childValue(Object)}
to provide an arbitrary function for passing the value of a parent's
thread-local variable to the child's thread-local variable.

@see java.lang.Thread
@see java.lang.ThreadLocal"
      classrelation 195099 // <realization>
	relation 195099 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 195099 // <realization>
	  b parent class_ref 144539 // ThreadLocal
      end

      operation 343707 "InheritableThreadLocal"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new inheritable thread-local variable."
      end

      operation 343835 "childValue"
	protected explicit_return_type "T"
	nparams 1
	  param inout name "parentValue" explicit_type "T"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Computes the initial value of this thread-local variable for the child
thread given the parent thread's value. Called from the parent thread when
creating a child thread. The default implementation returns the parent
thread's value.

@param parentValue the value of the variable in the parent thread.
@return the initial value of the variable for the child thread."
      end

      operation 343963 "values"
	package return_type class_ref 154651 // Values
	nparams 1
	  param inout name "current" type class_ref 1201420 // Thread
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 344091 "initializeValues"
	package return_type class_ref 154651 // Values
	nparams 1
	  param inout name "current" type class_ref 1201420 // Thread
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 154907 "InstantiationError"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Thrown when the VM notices that a program tries to create a new
instance of a class which has no visible constructors from the location where
{@code new} is invoked.
<p>
Note that this can only occur when inconsistent class files are being loaded."
      classrelation 195227 // <generalisation>
	relation 195227 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 195227 // <generalisation>
	  b parent class_ref 147099 // IncompatibleClassChangeError
      end

      attribute 180763 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -4885810657349421204L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 344219 "InstantiationError"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code InstantiationError} that includes the current
stack trace."
      end

      operation 344347 "InstantiationError"
	public explicit_return_type ""
	nparams 1
	  param inout name "detailMessage" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code InstantiationError} with the current stack trace
and the specified detail message.

@param detailMessage
           the detail message for this error."
      end

      operation 344475 "InstantiationError"
	package explicit_return_type ""
	nparams 1
	  param inout name "clazz" type class_ref 3421708 // Class
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code InstantiationError} with the current stack trace
and the class that caused this error.

@param clazz
           the class that can not be instantiated."
      end
    end

    class 155035 "IntegralToString"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Converts integral types to strings. This class is public but hidden so that it can also be
used by java.util.Formatter to speed up %d. This class is in java.lang so that it can take
advantage of the package-private String constructor.

The most important methods are appendInt/appendLong and intToString(int)/longToString(int).
The former are used in the implementation of StringBuilder, StringBuffer, and Formatter, while
the latter are used by Integer.toString and Long.toString.

The append methods take AbstractStringBuilder rather than Appendable because the latter requires
CharSequences, while we only have raw char[]s. Since much of the savings come from not creating
any garbage, we can't afford temporary CharSequence instances.

One day the performance advantage of the binary/hex/octal specializations will be small enough
that we can lose the duplication, but until then this class offers the full set.

@hide"
      classrelation 195995 // BUFFER (<unidirectional association>)
	relation 195995 --->
	  a role_name "BUFFER" init_value " new ThreadLocal<char[]>() {
        @Override protected char[] initialValue() {
            return new char[20]; // Maximum length of a base-10 long.
        }
    }" class_relation const_relation private
	    comment "
When appending to an AbstractStringBuilder, this thread-local char[] lets us avoid
allocation of a temporary array. (We can't write straight into the AbstractStringBuilder
because it's almost as expensive to work out the exact length of the result as it is to
do the formatting. We could try being conservative and \"delete\"-ing the unused space
afterwards, but then we'd need to duplicate convertInt and convertLong rather than share
the code.)

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<char[]> ${name}${value};
"
	    classrelation_ref 195995 // BUFFER (<unidirectional association>)
	  b parent class_ref 144539 // ThreadLocal
      end

      classrelation 196123 // SMALL_NONNEGATIVE_VALUES (<unidirectional association>)
	relation 196123 --->
	  a role_name "SMALL_NONNEGATIVE_VALUES" multiplicity "[]" init_value " new String[100]" class_relation const_relation private
	    comment "
These tables are used to special-case toString computation for
small values.  This serves three purposes: it reduces memory usage;
it increases performance for small values; and it decreases the
number of comparisons required to do the length computation.
Elements of this table are lazily initialized on first use.
No locking is necessary, i.e., we use the non-volatile, racy
single-check idiom.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 196123 // SMALL_NONNEGATIVE_VALUES (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 196251 // SMALL_NEGATIVE_VALUES (<unidirectional association>)
	relation 196251 --->
	  a role_name "SMALL_NEGATIVE_VALUES" multiplicity "[]" init_value " new String[100]" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 196251 // SMALL_NEGATIVE_VALUES (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      attribute 181787 "TENS"
	class_attribute const_attribute private explicit_type "char"
	multiplicity "[]"
	init_value " {
        '0', '0', '0', '0', '0', '0', '0', '0', '0', '0',
        '1', '1', '1', '1', '1', '1', '1', '1', '1', '1',
        '2', '2', '2', '2', '2', '2', '2', '2', '2', '2',
        '3', '3', '3', '3', '3', '3', '3', '3', '3', '3',
        '4', '4', '4', '4', '4', '4', '4', '4', '4', '4',
        '5', '5', '5', '5', '5', '5', '5', '5', '5', '5',
        '6', '6', '6', '6', '6', '6', '6', '6', '6', '6',
        '7', '7', '7', '7', '7', '7', '7', '7', '7', '7',
        '8', '8', '8', '8', '8', '8', '8', '8', '8', '8',
        '9', '9', '9', '9', '9', '9', '9', '9', '9', '9'
    }"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " TENS[i] contains the tens digit of the number i, 0 <= i <= 99. "
      end

      attribute 181915 "ONES"
	class_attribute const_attribute private explicit_type "char"
	multiplicity "[]"
	init_value " {
        '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',
        '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',
        '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',
        '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',
        '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',
        '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',
        '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',
        '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',
        '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',
        '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',
    }"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Ones [i] contains the tens digit of the number i, 0 <= i <= 99. "
      end

      attribute 182043 "MOD_10_TABLE"
	class_attribute const_attribute private explicit_type "char"
	multiplicity "[]"
	init_value " {
        0, 1, 2, 2, 3, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 0
    }"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Table for MOD / DIV 10 computation described in Section 10-21
of Hank Warren's \"Hacker's Delight\" online addendum.
http://www.hackersdelight.org/divcMore.pdf
"
      end

      attribute 182171 "DIGITS"
	class_attribute const_attribute private explicit_type "char"
	multiplicity "[]"
	init_value " {
        '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',
        'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j',
        'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',
        'u', 'v', 'w', 'x', 'y', 'z'
    }"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The digits for every supported radix.
"
      end

      attribute 182299 "UPPER_CASE_DIGITS"
	class_attribute const_attribute private explicit_type "char"
	multiplicity "[]"
	init_value " {
        '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',
        'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J',
        'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T',
        'U', 'V', 'W', 'X', 'Y', 'Z'
    }"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 349979 "IntegralToString"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 350107 "intToString"
	class_operation public return_type class_ref 3399692 // String
	nparams 2
	  param in name "i" explicit_type "int"
	  param in name "radix" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Equivalent to Integer.toString(i, radix)."
      end

      operation 350235 "intToString"
	class_operation public return_type class_ref 3399692 // String
	nparams 1
	  param in name "i" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Equivalent to Integer.toString(i)."
      end

      operation 350363 "appendInt"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "sb" type class_ref 147355 // AbstractStringBuilder
	  param in name "i" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Equivalent to sb.append(Integer.toString(i))."
      end

      operation 350491 "convertInt"
	class_operation private return_type class_ref 3399692 // String
	nparams 2
	  param inout name "sb" type class_ref 147355 // AbstractStringBuilder
	  param in name "i" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the string representation of i and leaves sb alone if sb is null.
Returns null and appends the string representation of i to sb if sb is non-null."
      end

      operation 350619 "longToString"
	class_operation public return_type class_ref 3399692 // String
	nparams 2
	  param in name "v" explicit_type "long"
	  param in name "radix" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Equivalent to Long.toString(v, radix)."
      end

      operation 350747 "longToString"
	class_operation public return_type class_ref 3399692 // String
	nparams 1
	  param in name "l" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Equivalent to Long.toString(l)."
      end

      operation 350875 "appendLong"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "sb" type class_ref 147355 // AbstractStringBuilder
	  param in name "l" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Equivalent to sb.append(Long.toString(l))."
      end

      operation 351003 "convertLong"
	class_operation private return_type class_ref 3399692 // String
	nparams 2
	  param inout name "sb" type class_ref 147355 // AbstractStringBuilder
	  param in name "n" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the string representation of n and leaves sb alone if sb is null.
Returns null and appends the string representation of n to sb if sb is non-null."
      end

      operation 351131 "intIntoCharArray"
	class_operation private explicit_return_type "int"
	nparams 3
	  param inout name "buf" explicit_type "char"
	  param in name "cursor" explicit_type "int"
	  param in name "n" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the unsigned decimal integer represented by n into the specified
character array starting at position cursor.  Returns the index after
the last character inserted (i.e., the value to pass in as cursor the
next time this method is called). Note that n is interpreted as a large
positive integer (not a negative integer) if its sign bit is set."
      end

      operation 351259 "intToBinaryString"
	class_operation public return_type class_ref 3399692 // String
	nparams 1
	  param in name "i" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 351387 "longToBinaryString"
	class_operation public return_type class_ref 3399692 // String
	nparams 1
	  param in name "v" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 351515 "appendByteAsHex"
	class_operation public return_type class_ref 155163 // StringBuilder
	nparams 3
	  param inout name "sb" type class_ref 155163 // StringBuilder
	  param in name "b" explicit_type "byte"
	  param inout name "upperCase" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 351643 "byteToHexString"
	class_operation public return_type class_ref 3399692 // String
	nparams 2
	  param in name "b" explicit_type "byte"
	  param inout name "upperCase" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 351771 "bytesToHexString"
	class_operation public return_type class_ref 3399692 // String
	nparams 2
	  param inout name "bytes" explicit_type "byte"
	  param inout name "upperCase" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 351899 "intToHexString"
	class_operation public return_type class_ref 3399692 // String
	nparams 3
	  param in name "i" explicit_type "int"
	  param inout name "upperCase" explicit_type "boolean"
	  param in name "minWidth" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 352027 "longToHexString"
	class_operation public return_type class_ref 3399692 // String
	nparams 1
	  param in name "v" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 352155 "intToOctalString"
	class_operation public return_type class_ref 3399692 // String
	nparams 1
	  param in name "i" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 352283 "longToOctalString"
	class_operation public return_type class_ref 3399692 // String
	nparams 1
	  param in name "v" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 352411 "stringOf"
	class_operation private return_type class_ref 3399692 // String
	nparams 1
	  param inout name "" explicit_type "char...args"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string composed of the specified characters. Note that the
autoboxing does *not* result in an extra copy of the char array: we are
using a package-private string constructor that incorporates the
\"autoboxing array\" into the new string."
      end
    end

    class 155163 "StringBuilder"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A modifiable {@link CharSequence sequence of characters} for use in creating
strings. This class is intended as a direct replacement of
{@link StringBuffer} for non-concurrent use; unlike {@code StringBuffer} this
class is not synchronized.

<p>For particularly complex string-building needs, consider {@link java.util.Formatter}.

<p>The majority of the modification methods on this class return {@code
this} so that method calls can be chained together. For example:
{@code new StringBuilder(\"a\").append(\"b\").append(\"c\").toString()}.

@see CharSequence
@see Appendable
@see StringBuffer
@see String
@see String#format
@since 1.5"
      classrelation 206235 // <generalisation>
	relation 206235 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 206235 // <generalisation>
	  b parent class_ref 147355 // AbstractStringBuilder
      end

      classrelation 206363 // <realization>
	relation 206363 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 206363 // <realization>
	  b parent class_ref 133659 // Appendable
      end

      classrelation 206491 // <realization>
	relation 206491 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 206491 // <realization>
	  b parent class_ref 133787 // CharSequence
      end

      classrelation 206619 // <realization>
	relation 206619 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 206619 // <realization>
	  b parent class_ref 128155 // Serializable
      end

      attribute 189211 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 4383685877147921099L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 420251 "StringBuilder"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance with an initial capacity of {@code 16}.

@see #capacity()"
      end

      operation 420379 "StringBuilder"
	public explicit_return_type ""
	nparams 1
	  param in name "capacity" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance with the specified capacity.

@param capacity
           the initial capacity to use.
@throws NegativeArraySizeException
            if the specified {@code capacity} is negative.
@see #capacity()"
      end

      operation 420507 "StringBuilder"
	public explicit_return_type ""
	nparams 1
	  param inout name "seq" type class_ref 133787 // CharSequence
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance that's initialized with the contents of the
specified {@code CharSequence}. The capacity of the new builder will be
the length of the {@code CharSequence} plus 16.

@param seq
           the {@code CharSequence} to copy into the builder.
@throws NullPointerException
           if {@code seq} is {@code null}."
      end

      operation 420635 "StringBuilder"
	public explicit_return_type ""
	nparams 1
	  param inout name "str" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance that's initialized with the contents of the
specified {@code String}. The capacity of the new builder will be the
length of the {@code String} plus 16.

@param str
           the {@code String} to copy into the builder.
@throws NullPointerException
           if {@code str} is {@code null}."
      end

      operation 420763 "append"
	public return_type class_ref 155163 // StringBuilder
	nparams 1
	  param inout name "b" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Appends the string representation of the specified {@code boolean} value.
The {@code boolean} value is converted to a String according to the rule
defined by {@link String#valueOf(boolean)}.

@param b
           the {@code boolean} value to append.
@return this builder.
@see String#valueOf(boolean)"
      end

      operation 420891 "append"
	public return_type class_ref 155163 // StringBuilder
	nparams 1
	  param in name "c" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Appends the string representation of the specified {@code char} value.
The {@code char} value is converted to a string according to the rule
defined by {@link String#valueOf(char)}.

@param c
           the {@code char} value to append.
@return this builder.
@see String#valueOf(char)"
      end

      operation 421019 "append"
	public return_type class_ref 155163 // StringBuilder
	nparams 1
	  param in name "i" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Appends the string representation of the specified {@code int} value. The
{@code int} value is converted to a string according to the rule defined
by {@link String#valueOf(int)}.

@param i
           the {@code int} value to append.
@return this builder.
@see String#valueOf(int)"
      end

      operation 421147 "append"
	public return_type class_ref 155163 // StringBuilder
	nparams 1
	  param in name "l" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Appends the string representation of the specified {@code long} value.
The {@code long} value is converted to a string according to the rule
defined by {@link String#valueOf(long)}.

@param l
           the {@code long} value.
@return this builder.
@see String#valueOf(long)"
      end

      operation 421275 "append"
	public return_type class_ref 155163 // StringBuilder
	nparams 1
	  param in name "f" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Appends the string representation of the specified {@code float} value.
The {@code float} value is converted to a string according to the rule
defined by {@link String#valueOf(float)}.

@param f
           the {@code float} value to append.
@return this builder.
@see String#valueOf(float)"
      end

      operation 421403 "append"
	public return_type class_ref 155163 // StringBuilder
	nparams 1
	  param in name "d" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Appends the string representation of the specified {@code double} value.
The {@code double} value is converted to a string according to the rule
defined by {@link String#valueOf(double)}.

@param d
           the {@code double} value to append.
@return this builder.
@see String#valueOf(double)"
      end

      operation 421531 "append"
	public return_type class_ref 155163 // StringBuilder
	nparams 1
	  param inout name "obj" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Appends the string representation of the specified {@code Object}.
The {@code Object} value is converted to a string according to the rule
defined by {@link String#valueOf(Object)}.

@param obj
           the {@code Object} to append.
@return this builder.
@see String#valueOf(Object)"
      end

      operation 421659 "append"
	public return_type class_ref 155163 // StringBuilder
	nparams 1
	  param inout name "str" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Appends the contents of the specified string. If the string is {@code
null}, then the string {@code \"null\"} is appended.

@param str
           the string to append.
@return this builder."
      end

      operation 421787 "append"
	public return_type class_ref 155163 // StringBuilder
	nparams 1
	  param inout name "sb" type class_ref 146715 // StringBuffer
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Appends the contents of the specified {@code StringBuffer}. If the
StringBuffer is {@code null}, then the string {@code \"null\"} is
appended.

@param sb
           the {@code StringBuffer} to append.
@return this builder."
      end

      operation 421915 "append"
	public return_type class_ref 155163 // StringBuilder
	nparams 1
	  param inout name "chars" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Appends the string representation of the specified {@code char[]}.
The {@code char[]} is converted to a string according to the rule
defined by {@link String#valueOf(char[])}.

@param chars
           the {@code char[]} to append..
@return this builder.
@see String#valueOf(char[])"
      end

      operation 422043 "append"
	public return_type class_ref 155163 // StringBuilder
	nparams 3
	  param inout name "str" explicit_type "char"
	  param in name "offset" explicit_type "int"
	  param in name "len" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Appends the string representation of the specified subset of the {@code
char[]}. The {@code char[]} value is converted to a String according to
the rule defined by {@link String#valueOf(char[],int,int)}.

@param str
           the {@code char[]} to append.
@param offset
           the inclusive offset index.
@param len
           the number of characters.
@return this builder.
@throws ArrayIndexOutOfBoundsException
            if {@code offset} and {@code len} do not specify a valid
            subsequence.
@see String#valueOf(char[],int,int)"
      end

      operation 422171 "append"
	public return_type class_ref 155163 // StringBuilder
	nparams 1
	  param inout name "csq" type class_ref 133787 // CharSequence
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Appends the string representation of the specified {@code CharSequence}.
If the {@code CharSequence} is {@code null}, then the string {@code
\"null\"} is appended.

@param csq
           the {@code CharSequence} to append.
@return this builder."
      end

      operation 422299 "append"
	public return_type class_ref 155163 // StringBuilder
	nparams 3
	  param inout name "csq" type class_ref 133787 // CharSequence
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Appends the string representation of the specified subsequence of the
{@code CharSequence}. If the {@code CharSequence} is {@code null}, then
the string {@code \"null\"} is used to extract the subsequence from.

@param csq
           the {@code CharSequence} to append.
@param start
           the beginning index.
@param end
           the ending index.
@return this builder.
@throws IndexOutOfBoundsException
            if {@code start} or {@code end} are negative, {@code start}
            is greater than {@code end} or {@code end} is greater than
            the length of {@code csq}."
      end

      operation 422427 "appendCodePoint"
	public return_type class_ref 155163 // StringBuilder
	nparams 1
	  param in name "codePoint" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Appends the encoded Unicode code point. The code point is converted to a
{@code char[]} as defined by {@link Character#toChars(int)}.

@param codePoint
           the Unicode code point to encode and append.
@return this builder.
@see Character#toChars(int)"
      end

      operation 422555 "delete"
	public return_type class_ref 155163 // StringBuilder
	nparams 2
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Deletes a sequence of characters specified by {@code start} and {@code
end}. Shifts any remaining characters to the left.

@param start
           the inclusive start index.
@param end
           the exclusive end index.
@return this builder.
@throws StringIndexOutOfBoundsException
            if {@code start} is less than zero, greater than the current
            length or greater than {@code end}."
      end

      operation 422683 "deleteCharAt"
	public return_type class_ref 155163 // StringBuilder
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Deletes the character at the specified index. shifts any remaining
characters to the left.

@param index
           the index of the character to delete.
@return this builder.
@throws StringIndexOutOfBoundsException
            if {@code index} is less than zero or is greater than or
            equal to the current length."
      end

      operation 422811 "insert"
	public return_type class_ref 155163 // StringBuilder
	nparams 2
	  param in name "offset" explicit_type "int"
	  param inout name "b" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the string representation of the specified {@code boolean} value
at the specified {@code offset}. The {@code boolean} value is converted
to a string according to the rule defined by
{@link String#valueOf(boolean)}.

@param offset
           the index to insert at.
@param b
           the {@code boolean} value to insert.
@return this builder.
@throws StringIndexOutOfBoundsException
            if {@code offset} is negative or greater than the current
            {@code length}.
@see String#valueOf(boolean)"
      end

      operation 422939 "insert"
	public return_type class_ref 155163 // StringBuilder
	nparams 2
	  param in name "offset" explicit_type "int"
	  param in name "c" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the string representation of the specified {@code char} value at
the specified {@code offset}. The {@code char} value is converted to a
string according to the rule defined by {@link String#valueOf(char)}.

@param offset
           the index to insert at.
@param c
           the {@code char} value to insert.
@return this builder.
@throws IndexOutOfBoundsException
            if {@code offset} is negative or greater than the current
            {@code length()}.
@see String#valueOf(char)"
      end

      operation 423067 "insert"
	public return_type class_ref 155163 // StringBuilder
	nparams 2
	  param in name "offset" explicit_type "int"
	  param in name "i" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the string representation of the specified {@code int} value at
the specified {@code offset}. The {@code int} value is converted to a
String according to the rule defined by {@link String#valueOf(int)}.

@param offset
           the index to insert at.
@param i
           the {@code int} value to insert.
@return this builder.
@throws StringIndexOutOfBoundsException
            if {@code offset} is negative or greater than the current
            {@code length()}.
@see String#valueOf(int)"
      end

      operation 423195 "insert"
	public return_type class_ref 155163 // StringBuilder
	nparams 2
	  param in name "offset" explicit_type "int"
	  param in name "l" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the string representation of the specified {@code long} value at
the specified {@code offset}. The {@code long} value is converted to a
String according to the rule defined by {@link String#valueOf(long)}.

@param offset
           the index to insert at.
@param l
           the {@code long} value to insert.
@return this builder.
@throws StringIndexOutOfBoundsException
            if {@code offset} is negative or greater than the current
            {code length()}.
@see String#valueOf(long)"
      end

      operation 423323 "insert"
	public return_type class_ref 155163 // StringBuilder
	nparams 2
	  param in name "offset" explicit_type "int"
	  param in name "f" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the string representation of the specified {@code float} value at
the specified {@code offset}. The {@code float} value is converted to a
string according to the rule defined by {@link String#valueOf(float)}.

@param offset
           the index to insert at.
@param f
           the {@code float} value to insert.
@return this builder.
@throws StringIndexOutOfBoundsException
            if {@code offset} is negative or greater than the current
            {@code length()}.
@see String#valueOf(float)"
      end

      operation 423451 "insert"
	public return_type class_ref 155163 // StringBuilder
	nparams 2
	  param in name "offset" explicit_type "int"
	  param in name "d" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the string representation of the specified {@code double} value
at the specified {@code offset}. The {@code double} value is converted
to a String according to the rule defined by
{@link String#valueOf(double)}.

@param offset
           the index to insert at.
@param d
           the {@code double} value to insert.
@return this builder.
@throws StringIndexOutOfBoundsException
            if {@code offset} is negative or greater than the current
            {@code length()}.
@see String#valueOf(double)"
      end

      operation 423579 "insert"
	public return_type class_ref 155163 // StringBuilder
	nparams 2
	  param in name "offset" explicit_type "int"
	  param inout name "obj" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the string representation of the specified {@code Object} at the
specified {@code offset}. The {@code Object} value is converted to a
String according to the rule defined by {@link String#valueOf(Object)}.

@param offset
           the index to insert at.
@param obj
           the {@code Object} to insert.
@return this builder.
@throws StringIndexOutOfBoundsException
            if {@code offset} is negative or greater than the current
            {@code length()}.
@see String#valueOf(Object)"
      end

      operation 423707 "insert"
	public return_type class_ref 155163 // StringBuilder
	nparams 2
	  param in name "offset" explicit_type "int"
	  param inout name "str" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the specified string at the specified {@code offset}. If the
specified string is null, then the String {@code \"null\"} is inserted.

@param offset
           the index to insert at.
@param str
           the {@code String} to insert.
@return this builder.
@throws StringIndexOutOfBoundsException
            if {@code offset} is negative or greater than the current
            {@code length()}."
      end

      operation 423835 "insert"
	public return_type class_ref 155163 // StringBuilder
	nparams 2
	  param in name "offset" explicit_type "int"
	  param inout name "ch" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the string representation of the specified {@code char[]} at the
specified {@code offset}. The {@code char[]} value is converted to a
String according to the rule defined by {@link String#valueOf(char[])}.

@param offset
           the index to insert at.
@param ch
           the {@code char[]} to insert.
@return this builder.
@throws StringIndexOutOfBoundsException
            if {@code offset} is negative or greater than the current
            {@code length()}.
@see String#valueOf(char[])"
      end

      operation 423963 "insert"
	public return_type class_ref 155163 // StringBuilder
	nparams 4
	  param in name "offset" explicit_type "int"
	  param inout name "str" explicit_type "char"
	  param in name "strOffset" explicit_type "int"
	  param in name "strLen" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the string representation of the specified subsequence of the
{@code char[]} at the specified {@code offset}. The {@code char[]} value
is converted to a String according to the rule defined by
{@link String#valueOf(char[],int,int)}.

@param offset
           the index to insert at.
@param str
           the {@code char[]} to insert.
@param strOffset
           the inclusive index.
@param strLen
           the number of characters.
@return this builder.
@throws StringIndexOutOfBoundsException
            if {@code offset} is negative or greater than the current
            {@code length()}, or {@code strOffset} and {@code strLen} do
            not specify a valid subsequence.
@see String#valueOf(char[],int,int)"
      end

      operation 424091 "insert"
	public return_type class_ref 155163 // StringBuilder
	nparams 2
	  param in name "offset" explicit_type "int"
	  param inout name "s" type class_ref 133787 // CharSequence
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the string representation of the specified {@code CharSequence}
at the specified {@code offset}. The {@code CharSequence} is converted
to a String as defined by {@link CharSequence#toString()}. If {@code s}
is {@code null}, then the String {@code \"null\"} is inserted.

@param offset
           the index to insert at.
@param s
           the {@code CharSequence} to insert.
@return this builder.
@throws IndexOutOfBoundsException
            if {@code offset} is negative or greater than the current
            {@code length()}.
@see CharSequence#toString()"
      end

      operation 424219 "insert"
	public return_type class_ref 155163 // StringBuilder
	nparams 4
	  param in name "offset" explicit_type "int"
	  param inout name "s" type class_ref 133787 // CharSequence
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts the string representation of the specified subsequence of the
{@code CharSequence} at the specified {@code offset}. The {@code
CharSequence} is converted to a String as defined by
{@link CharSequence#subSequence(int, int)}. If the {@code CharSequence}
is {@code null}, then the string {@code \"null\"} is used to determine the
subsequence.

@param offset
           the index to insert at.
@param s
           the {@code CharSequence} to insert.
@param start
           the start of the subsequence of the character sequence.
@param end
           the end of the subsequence of the character sequence.
@return this builder.
@throws IndexOutOfBoundsException
            if {@code offset} is negative or greater than the current
            {@code length()}, or {@code start} and {@code end} do not
            specify a valid subsequence.
@see CharSequence#subSequence(int, int)"
      end

      operation 424347 "replace"
	public return_type class_ref 155163 // StringBuilder
	nparams 3
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	  param inout name "string" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Replaces the specified subsequence in this builder with the specified
string.

@param start
           the inclusive begin index.
@param end
           the exclusive end index.
@param string
           the replacement string.
@return this builder.
@throws StringIndexOutOfBoundsException
            if {@code start} is negative, greater than the current
            {@code length()} or greater than {@code end}.
@throws NullPointerException
           if {@code str} is {@code null}."
      end

      operation 424475 "reverse"
	public return_type class_ref 155163 // StringBuilder
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reverses the order of characters in this builder.

@return this buffer."
      end

      operation 424603 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns the contents of this builder.

@return the string representation of the data in this builder."
      end

      operation 424731 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "in" type class_ref 128667 // ObjectInputStream
	nexceptions 2
	  exception class_ref 128539 // IOException
	  exception class_ref 128795 // ClassNotFoundException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reads the state of a {@code StringBuilder} from the passed stream and
restores it to this instance.

@param in
           the stream to read the state from.
@throws IOException
            if the stream throws it during the read.
@throws ClassNotFoundException
            if the stream throws it during the read."
      end

      operation 424859 "writeObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "out" type class_ref 128411 // ObjectOutputStream
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Writes the state of this object to the stream passed.

@param out
           the stream to write the state to.
@throws IOException
            if the stream throws it during the write.
@serialData {@code int} - the length of this object. {@code char[]} - the
            buffer from this object, which may be larger than the length
            field."
      end
    end

    class 155291 "InternalError"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Thrown when the VM notices that it has gotten into an undefined state."
      classrelation 196507 // <generalisation>
	relation 196507 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 196507 // <generalisation>
	  b parent class_ref 155419 // VirtualMachineError
      end

      attribute 182555 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -9062593416125562365L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 352795 "InternalError"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code InternalError} that includes the current stack
trace."
      end

      operation 352923 "InternalError"
	public explicit_return_type ""
	nparams 1
	  param inout name "detailMessage" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code InternalError} with the current stack trace and
the specified detail message.

@param detailMessage
           the detail message for this error."
      end
    end

    class 155419 "VirtualMachineError"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "{@code VirtualMachineError} is the superclass of all error classes that occur
during the operation of the VM.

@see Error"
      classrelation 196379 // <generalisation>
	relation 196379 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 196379 // <generalisation>
	  b parent class_ref 143643 // Error
      end

      attribute 182427 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 4161983926571568670L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 352539 "VirtualMachineError"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code VirtualMachineError} that includes the current
stack trace."
      end

      operation 352667 "VirtualMachineError"
	public explicit_return_type ""
	nparams 1
	  param inout name "detailMessage" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code VirtualMachineError} with the current stack trace
and the specified detail message.

@param detailMessage
           the detail message for this exception."
      end
    end

    class 155547 "InterruptedException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Thrown when a waiting thread is activated before the condition it was waiting
for has been satisfied."
      classrelation 196635 // <generalisation>
	relation 196635 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 196635 // <generalisation>
	  b parent class_ref 132251 // Exception
      end

      attribute 182683 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 6700697376100628473L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 353051 "InterruptedException"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code InterruptedException} that includes the current
stack trace."
      end

      operation 353179 "InterruptedException"
	public explicit_return_type ""
	nparams 1
	  param inout name "detailMessage" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code InterruptedException} with the current stack
trace and the specified detail message.

@param detailMessage
           the detail message for this exception."
      end
    end

    class 155675 "Iterable"
      visibility public stereotype "interface"
      nformals 1
      formal name "T" type "" explicit_default_value ""
        explicit_extends ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Instances of classes that implement this interface can be used with
the enhanced for loop.

@since 1.5"
      operation 353307 "iterator"
	public return_type class_ref 155803 // Iterator
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<T> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an {@link Iterator} for the elements in this object.

@return An {@code Iterator} instance."
      end
    end

    class 155931 "Long"
      visibility public 
      nactuals 1
      actual class class_ref 139675 // Comparable
        rank 0 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@FindBugsSuppressWarnings(\"DM_NUMBER_CTOR\")
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The wrapper for the primitive type {@code long}.
<p>
Implementation note: The \"bit twiddling\" methods in this class use techniques
described in <a href=\"http://www.hackersdelight.org/\">Henry S. Warren,
Jr.'s Hacker's Delight, (Addison Wesley, 2002)</a> and <a href=
\"http://graphics.stanford.edu/~seander/bithacks.html\">Sean Anderson's
Bit Twiddling Hacks.</a>

@see java.lang.Integer
@since 1.0"
      classrelation 196763 // <generalisation>
	relation 196763 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 196763 // <generalisation>
	  b parent class_ref 148379 // Number
      end

      classrelation 196891 // <realization>
	relation 196891 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 196891 // <realization>
	  b parent class_ref 139675 // Comparable
      end

      attribute 182811 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 4290774380558885855L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 182939 "value"
	const_attribute private explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The value which the receiver represents.
"
      end

      attribute 183067 "MAX_VALUE"
	class_attribute const_attribute public explicit_type "long"
	init_value " 0x7FFFFFFFFFFFFFFFL"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Constant for the maximum {@code long} value, 2<sup>63</sup>-1.
"
      end

      attribute 183195 "MIN_VALUE"
	class_attribute const_attribute public explicit_type "long"
	init_value " 0x8000000000000000L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Constant for the minimum {@code long} value, -2<sup>63</sup>.
"
      end

      classrelation 197019 // TYPE (<unidirectional association>)
	relation 197019 --->
	  a role_name "TYPE" init_value " (Class<Long>) long[].class.getComponentType()" class_relation const_relation public
	    comment "
The {@link Class} object that represents the primitive type {@code long}.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Long> ${name}${value};
"
	    java_annotation "@SuppressWarnings(\"unchecked\")
"
	    classrelation_ref 197019 // TYPE (<unidirectional association>)
	  b parent class_ref 3421708 // Class
      end

      attribute 183323 "SIZE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 64"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Note: Long.TYPE can't be set to \"long.class\", since *that* is
 defined to be \"java.lang.Long.TYPE\";

Constant for the number of bits needed to represent a {@code long} in
two's complement form.

@since 1.5
"
      end

      operation 353435 "Long"
	public explicit_return_type ""
	nparams 1
	  param in name "value" explicit_type "long"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code Long} with the specified primitive long value.

@param value
           the primitive long value to store in the new instance."
      end

      operation 353563 "Long"
	public explicit_return_type ""
	nparams 1
	  param inout name "string" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 148507 // NumberFormatException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code Long} from the specified string.

@param string
           the string representation of a long value.
@throws NumberFormatException
            if {@code string} cannot be parsed as a long value.
@see #parseLong(String)"
      end

      operation 353691 "byteValue"
	public explicit_return_type "byte"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 353819 "compareTo"
	public explicit_return_type "int"
	nparams 1
	  param inout name "object" type class_ref 155931 // Long
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares this object to the specified long object to determine their
relative order.

@param object
           the long object to compare this object to.
@return a negative value if the value of this long is less than the value
        of {@code object}; 0 if the value of this long and the value of
        {@code object} are equal; a positive value if the value of this
        long is greater than the value of {@code object}.
@see java.lang.Comparable
@since 1.2"
      end

      operation 353947 "compare"
	class_operation public explicit_return_type "int"
	nparams 2
	  param in name "lhs" explicit_type "long"
	  param in name "rhs" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares two {@code long} values.
@return 0 if lhs = rhs, less than 0 if lhs &lt; rhs, and greater than 0 if lhs &gt; rhs.
@since 1.7
@hide 1.7"
      end

      operation 354075 "invalidLong"
	class_operation private return_type class_ref 148507 // NumberFormatException
	nparams 1
	  param inout name "s" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 354203 "decode"
	class_operation public return_type class_ref 155931 // Long
	nparams 1
	  param inout name "string" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 148507 // NumberFormatException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses the specified string and returns a {@code Long} instance if the
string can be decoded into a long value. The string may be an optional
minus sign \"-\" followed by a hexadecimal (\"0x...\" or \"#...\"), octal
(\"0...\"), or decimal (\"...\") representation of a long.

@param string
           a string representation of a long value.
@return a {@code Long} containing the value represented by {@code string}.
@throws NumberFormatException
            if {@code string} cannot be parsed as a long value."
      end

      operation 354331 "doubleValue"
	public explicit_return_type "double"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 354459 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Compares this instance with the specified object and indicates if they
are equal. In order to be equal, {@code o} must be an instance of
{@code Long} and have the same long value as this object.

@param o
           the object to compare this long with.
@return {@code true} if the specified object is equal to this
        {@code Long}; {@code false} otherwise."
      end

      operation 354587 "floatValue"
	public explicit_return_type "float"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 354715 "getLong"
	class_operation public return_type class_ref 155931 // Long
	nparams 1
	  param inout name "string" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code Long} value of the system property identified by
{@code string}. Returns {@code null} if {@code string} is {@code null}
or empty, if the property can not be found or if its value can not be
parsed as a long.

@param string
           the name of the requested system property.
@return the requested property's value as a {@code Long} or {@code null}."
      end

      operation 354843 "getLong"
	class_operation public return_type class_ref 155931 // Long
	nparams 2
	  param inout name "string" type class_ref 3399692 // String
	  param in name "defaultValue" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code Long} value of the system property identified by
{@code string}. Returns the specified default value if {@code string} is
{@code null} or empty, if the property can not be found or if its value
can not be parsed as a long.

@param string
           the name of the requested system property.
@param defaultValue
           the default value that is returned if there is no long system
           property with the requested name.
@return the requested property's value as a {@code Long} or the default
        value."
      end

      operation 354971 "getLong"
	class_operation public return_type class_ref 155931 // Long
	nparams 2
	  param inout name "string" type class_ref 3399692 // String
	  param inout name "defaultValue" type class_ref 155931 // Long
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code Long} value of the system property identified by
{@code string}. Returns the specified default value if {@code string} is
{@code null} or empty, if the property can not be found or if its value
can not be parsed as a long.

@param string
           the name of the requested system property.
@param defaultValue
           the default value that is returned if there is no long system
           property with the requested name.
@return the requested property's value as a {@code Long} or the default
        value."
      end

      operation 355099 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 355227 "intValue"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 355355 "longValue"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Gets the primitive value of this long.

@return this object's primitive value."
      end

      operation 355483 "parseLong"
	class_operation public explicit_return_type "long"
	nparams 1
	  param inout name "string" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 148507 // NumberFormatException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses the specified string as a signed decimal long value. The ASCII
character \\u002d ('-') is recognized as the minus sign.

@param string
           the string representation of a long value.
@return the primitive long value represented by {@code string}.
@throws NumberFormatException
            if {@code string} cannot be parsed as a long value."
      end

      operation 355611 "parseLong"
	class_operation public explicit_return_type "long"
	nparams 2
	  param inout name "string" type class_ref 3399692 // String
	  param in name "radix" explicit_type "int"
	nexceptions 1
	  exception class_ref 148507 // NumberFormatException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses the specified string as a signed long value using the specified
radix. The ASCII character \\u002d ('-') is recognized as the minus sign.

@param string
           the string representation of a long value.
@param radix
           the radix to use when parsing.
@return the primitive long value represented by {@code string} using
        {@code radix}.
@throws NumberFormatException
            if {@code string} cannot be parsed as a long value, or
            {@code radix < Character.MIN_RADIX ||
            radix > Character.MAX_RADIX}."
      end

      operation 355739 "parse"
	class_operation private explicit_return_type "long"
	nparams 4
	  param inout name "string" type class_ref 3399692 // String
	  param in name "offset" explicit_type "int"
	  param in name "radix" explicit_type "int"
	  param inout name "negative" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 355867 "shortValue"
	public explicit_return_type "short"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 355995 "toBinaryString"
	class_operation public return_type class_ref 3399692 // String
	nparams 1
	  param in name "v" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts the specified long value into its binary string representation.
The returned string is a concatenation of '0' and '1' characters.

@param v
           the long value to convert.
@return the binary string representation of {@code v}."
      end

      operation 356123 "toHexString"
	class_operation public return_type class_ref 3399692 // String
	nparams 1
	  param in name "v" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts the specified long value into its hexadecimal string
representation. The returned string is a concatenation of characters from
'0' to '9' and 'a' to 'f'.

@param v
           the long value to convert.
@return the hexadecimal string representation of {@code l}."
      end

      operation 356251 "toOctalString"
	class_operation public return_type class_ref 3399692 // String
	nparams 1
	  param in name "v" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts the specified long value into its octal string representation.
The returned string is a concatenation of characters from '0' to '7'.

@param v
           the long value to convert.
@return the octal string representation of {@code l}."
      end

      operation 356379 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 356507 "toString"
	class_operation public return_type class_ref 3399692 // String
	nparams 1
	  param in name "n" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts the specified long value into its decimal string representation.
The returned string is a concatenation of a minus sign if the number is
negative and characters from '0' to '9'.

@param n
           the long to convert.
@return the decimal string representation of {@code l}."
      end

      operation 356635 "toString"
	class_operation public return_type class_ref 3399692 // String
	nparams 2
	  param in name "v" explicit_type "long"
	  param in name "radix" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts the specified signed long value into a string representation based on
the specified radix. The returned string is a concatenation of a minus
sign if the number is negative and characters from '0' to '9' and 'a' to
'z', depending on the radix. If {@code radix} is not in the interval
defined by {@code Character.MIN_RADIX} and {@code Character.MAX_RADIX}
then 10 is used as the base for the conversion.

<p>This method treats its argument as signed. If you want to convert an
unsigned value to one of the common non-decimal bases, you may find
{@link #toBinaryString}, {@code #toHexString}, or {@link #toOctalString}
more convenient.

@param v
           the signed long to convert.
@param radix
           the base to use for the conversion.
@return the string representation of {@code v}."
      end

      operation 356763 "valueOf"
	class_operation public return_type class_ref 155931 // Long
	nparams 1
	  param inout name "string" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 148507 // NumberFormatException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses the specified string as a signed decimal long value.

@param string
           the string representation of a long value.
@return a {@code Long} instance containing the long value represented by
        {@code string}.
@throws NumberFormatException
            if {@code string} cannot be parsed as a long value.
@see #parseLong(String)"
      end

      operation 356891 "valueOf"
	class_operation public return_type class_ref 155931 // Long
	nparams 2
	  param inout name "string" type class_ref 3399692 // String
	  param in name "radix" explicit_type "int"
	nexceptions 1
	  exception class_ref 148507 // NumberFormatException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses the specified string as a signed long value using the specified
radix.

@param string
           the string representation of a long value.
@param radix
           the radix to use when parsing.
@return a {@code Long} instance containing the long value represented by
        {@code string} using {@code radix}.
@throws NumberFormatException
            if {@code string} cannot be parsed as a long value, or
            {@code radix < Character.MIN_RADIX ||
            radix > Character.MAX_RADIX}.
@see #parseLong(String, int)"
      end

      operation 357019 "highestOneBit"
	class_operation public explicit_return_type "long"
	nparams 1
	  param in name "v" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines the highest (leftmost) bit of the specified long value that is
1 and returns the bit mask value for that bit. This is also referred to
as the Most Significant 1 Bit. Returns zero if the specified long is
zero.

@param v
           the long to examine.
@return the bit mask indicating the highest 1 bit in {@code v}.
@since 1.5"
      end

      operation 357147 "lowestOneBit"
	class_operation public explicit_return_type "long"
	nparams 1
	  param in name "v" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines the lowest (rightmost) bit of the specified long value that is
1 and returns the bit mask value for that bit. This is also referred to
as the Least Significant 1 Bit. Returns zero if the specified long is
zero.

@param v
           the long to examine.
@return the bit mask indicating the lowest 1 bit in {@code v}.
@since 1.5"
      end

      operation 357275 "numberOfLeadingZeros"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "v" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines the number of leading zeros in the specified long value prior
to the {@link #highestOneBit(long) highest one bit}.

@param v
           the long to examine.
@return the number of leading zeros in {@code v}.
@since 1.5"
      end

      operation 357403 "numberOfTrailingZeros"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "v" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determines the number of trailing zeros in the specified long value after
the {@link #lowestOneBit(long) lowest one bit}.

@param v
           the long to examine.
@return the number of trailing zeros in {@code v}.
@since 1.5"
      end

      operation 357531 "bitCount"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "v" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Counts the number of 1 bits in the specified long value; this is also
referred to as population count.

@param v
           the long to examine.
@return the number of 1 bits in {@code v}.
@since 1.5"
      end

      operation 357659 "rotateLeft"
	class_operation public explicit_return_type "long"
	nparams 2
	  param in name "v" explicit_type "long"
	  param in name "distance" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "On a modern 64-bit processor with a fast hardware multiply, this is
much faster (assuming you're running a 64-bit VM):

// http://chessprogramming.wikispaces.com/Population+Count
int bitCount (long x) {
    x -=  (x >>> 1) & 0x5555555555555555L;
    x = (x & 0x3333333333333333L) + ((x >>> 2) & 0x3333333333333333L);
    x = (x + (x >>> 4)) & 0x0f0f0f0f0f0f0f0fL;
    x = (x * 0x0101010101010101L) >>> 56;
    return (int) x;
}

Really modern processors (e.g., Nehalem, K-10) have hardware popcount
instructions.


Rotates the bits of the specified long value to the left by the specified
number of bits.

@param v
           the long value to rotate left.
@param distance
           the number of bits to rotate.
@return the rotated value.
@since 1.5"
      end

      operation 357787 "rotateRight"
	class_operation public explicit_return_type "long"
	nparams 2
	  param in name "v" explicit_type "long"
	  param in name "distance" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Rotates the bits of the specified long value to the right by the
specified number of bits.

@param v
           the long value to rotate right.
@param distance
           the number of bits to rotate.
@return the rotated value.
@since 1.5"
      end

      operation 357915 "reverseBytes"
	class_operation public explicit_return_type "long"
	nparams 1
	  param in name "v" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reverses the order of the bytes of the specified long value.

@param v
           the long value for which to reverse the byte order.
@return the reversed value.
@since 1.5"
      end

      operation 358043 "reverse"
	class_operation public explicit_return_type "long"
	nparams 1
	  param in name "v" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reverses the order of the bits of the specified long value.

@param v
           the long value for which to reverse the bit order.
@return the reversed value.
@since 1.5"
      end

      operation 358171 "signum"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "v" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of the {@code signum} function for the specified long
value.

@param v
           the long value to check.
@return -1 if {@code v} is negative, 1 if {@code v} is positive, 0 if
        {@code v} is zero.
@since 1.5"
      end

      operation 358299 "valueOf"
	class_operation public return_type class_ref 155931 // Long
	nparams 1
	  param in name "v" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@code Long} instance for the specified long value.
<p>
If it is not necessary to get a new {@code Long} instance, it is
recommended to use this method instead of the constructor, since it
maintains a cache of instances which may result in better performance.

@param v
           the long value to store in the instance.
@return a {@code Long} instance containing {@code v}.
@since 1.5"
      end

      classrelation 197147 // SMALL_VALUES (<unidirectional association>)
	relation 197147 --->
	  a role_name "SMALL_VALUES" multiplicity "[]" init_value " new Long[256]" class_relation const_relation private
	    comment "
A cache of instances used by {@link Long#valueOf(long)} and auto-boxing.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 197147 // SMALL_VALUES (<unidirectional association>)
	  b parent class_ref 155931 // Long
      end

      extra_member 129051 "initialization"
	
	cpp "" ""
	java "  static {
        for (int i = -128; i < 128; i++) {
            SMALL_VALUES[i + 128] = new Long(i);
        }
    }"
	php ""
	python ""
	idl ""
      end
    end

    class 156059 "Math"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Class Math provides basic math constants and operations such as trigonometric
functions, hyperbolic functions, exponential, logarithms, etc."
      attribute 183451 "E"
	class_attribute const_attribute public explicit_type "double"
	init_value " 2.718281828459045"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The double value closest to e, the base of the natural logarithm.
"
      end

      attribute 183579 "PI"
	class_attribute const_attribute public explicit_type "double"
	init_value " 3.141592653589793"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The double value closest to pi, the ratio of a circle's circumference to
its diameter.
"
      end

      classrelation 197275 // random (<unidirectional association>)
	relation 197275 --->
	  a role_name "random" class_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 197275 // random (<unidirectional association>)
	  b parent class_ref 139803 // Random
      end

      operation 358427 "Math"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prevents this class from being instantiated."
      end

      operation 358555 "abs"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "d" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
	comment "Returns the absolute value of the argument.
<p>
Special cases:
<ul>
<li>{@code abs(-0.0) = +0.0}</li>
<li>{@code abs(+infinity) = +infinity}</li>
<li>{@code abs(-infinity) = +infinity}</li>
<li>{@code abs(NaN) = NaN}</li>
</ul>"
      end

      operation 358683 "abs"
	class_operation public explicit_return_type "float"
	nparams 1
	  param in name "f" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
	comment "Returns the absolute value of the argument.
<p>
Special cases:
<ul>
<li>{@code abs(-0.0) = +0.0}</li>
<li>{@code abs(+infinity) = +infinity}</li>
<li>{@code abs(-infinity) = +infinity}</li>
<li>{@code abs(NaN) = NaN}</li>
</ul>"
      end

      operation 358811 "abs"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "i" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
	comment "Returns the absolute value of the argument.
<p>
If the argument is {@code Integer.MIN_VALUE}, {@code Integer.MIN_VALUE}
is returned."
      end

      operation 358939 "abs"
	class_operation public explicit_return_type "long"
	nparams 1
	  param in name "l" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
	comment "Returns the absolute value of the argument. If the argument is {@code
Long.MIN_VALUE}, {@code Long.MIN_VALUE} is returned."
      end

      operation 359067 "acos"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "d" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
	comment "Returns the closest double approximation of the arc cosine of the
argument within the range {@code [0..pi]}. The returned result is within
1 ulp (unit in the last place) of the real result.
<p>
Special cases:
<ul>
<li>{@code acos((anything > 1) = NaN}</li>
<li>{@code acos((anything < -1) = NaN}</li>
<li>{@code acos(NaN) = NaN}</li>
</ul>

@param d
           the value to compute arc cosine of.
@return the arc cosine of the argument."
      end

      operation 359195 "asin"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "d" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
	comment "Returns the closest double approximation of the arc sine of the argument
within the range {@code [-pi/2..pi/2]}. The returned result is within 1
ulp (unit in the last place) of the real result.
<p>
Special cases:
<ul>
<li>{@code asin((anything > 1)) = NaN}</li>
<li>{@code asin((anything < -1)) = NaN}</li>
<li>{@code asin(NaN) = NaN}</li>
</ul>

@param d
           the value whose arc sine has to be computed.
@return the arc sine of the argument."
      end

      operation 359323 "atan"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "d" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
	comment "Returns the closest double approximation of the arc tangent of the
argument within the range {@code [-pi/2..pi/2]}. The returned result is
within 1 ulp (unit in the last place) of the real result.
<p>
Special cases:
<ul>
<li>{@code atan(+0.0) = +0.0}</li>
<li>{@code atan(-0.0) = -0.0}</li>
<li>{@code atan(+infinity) = +pi/2}</li>
<li>{@code atan(-infinity) = -pi/2}</li>
<li>{@code atan(NaN) = NaN}</li>
</ul>

@param d
           the value whose arc tangent has to be computed.
@return the arc tangent of the argument."
      end

      operation 359451 "atan2"
	class_operation public explicit_return_type "double"
	nparams 2
	  param in name "y" explicit_type "double"
	  param in name "x" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
	comment "Returns the closest double approximation of the arc tangent of {@code
y/x} within the range {@code [-pi..pi]}. This is the angle of the polar
representation of the rectangular coordinates (x,y). The returned result
is within 2 ulps (units in the last place) of the real result.
<p>
Special cases:
<ul>
<li>{@code atan2((anything), NaN ) = NaN;}</li>
<li>{@code atan2(NaN , (anything) ) = NaN;}</li>
<li>{@code atan2(+0.0, +(anything but NaN)) = +0.0}</li>
<li>{@code atan2(-0.0, +(anything but NaN)) = -0.0}</li>
<li>{@code atan2(+0.0, -(anything but NaN)) = +pi}</li>
<li>{@code atan2(-0.0, -(anything but NaN)) = -pi}</li>
<li>{@code atan2(+(anything but 0 and NaN), 0) = +pi/2}</li>
<li>{@code atan2(-(anything but 0 and NaN), 0) = -pi/2}</li>
<li>{@code atan2(+(anything but infinity and NaN), +infinity)} {@code =}
{@code +0.0}</li>
<li>{@code atan2(-(anything but infinity and NaN), +infinity)} {@code =}
{@code -0.0}</li>
<li>{@code atan2(+(anything but infinity and NaN), -infinity) = +pi}</li>
<li>{@code atan2(-(anything but infinity and NaN), -infinity) = -pi}</li>
<li>{@code atan2(+infinity, +infinity ) = +pi/4}</li>
<li>{@code atan2(-infinity, +infinity ) = -pi/4}</li>
<li>{@code atan2(+infinity, -infinity ) = +3pi/4}</li>
<li>{@code atan2(-infinity, -infinity ) = -3pi/4}</li>
<li>{@code atan2(+infinity, (anything but,0, NaN, and infinity))} {@code
=} {@code +pi/2}</li>
<li>{@code atan2(-infinity, (anything but,0, NaN, and infinity))} {@code
=} {@code -pi/2}</li>
</ul>

@param y
           the numerator of the value whose atan has to be computed.
@param x
           the denominator of the value whose atan has to be computed.
@return the arc tangent of {@code y/x}."
      end

      operation 359579 "cbrt"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "d" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
	comment "Returns the closest double approximation of the cube root of the
argument.
<p>
Special cases:
<ul>
<li>{@code cbrt(+0.0) = +0.0}</li>
<li>{@code cbrt(-0.0) = -0.0}</li>
<li>{@code cbrt(+infinity) = +infinity}</li>
<li>{@code cbrt(-infinity) = -infinity}</li>
<li>{@code cbrt(NaN) = NaN}</li>
</ul>

@param d
           the value whose cube root has to be computed.
@return the cube root of the argument."
      end

      operation 359707 "ceil"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "d" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
	comment "Returns the double conversion of the most negative (closest to negative
infinity) integer value greater than or equal to the argument.
<p>
Special cases:
<ul>
<li>{@code ceil(+0.0) = +0.0}</li>
<li>{@code ceil(-0.0) = -0.0}</li>
<li>{@code ceil((anything in range (-1,0)) = -0.0}</li>
<li>{@code ceil(+infinity) = +infinity}</li>
<li>{@code ceil(-infinity) = -infinity}</li>
<li>{@code ceil(NaN) = NaN}</li>
</ul>"
      end

      operation 359835 "cos"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "d" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
	comment "Returns the closest double approximation of the cosine of the argument.
The returned result is within 1 ulp (unit in the last place) of the real
result.
<p>
Special cases:
<ul>
<li>{@code cos(+infinity) = NaN}</li>
<li>{@code cos(-infinity) = NaN}</li>
<li>{@code cos(NaN) = NaN}</li>
</ul>

@param d
           the angle whose cosine has to be computed, in radians.
@return the cosine of the argument."
      end

      operation 359963 "cosh"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "d" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
	comment "Returns the closest double approximation of the hyperbolic cosine of the
argument. The returned result is within 2.5 ulps (units in the last
place) of the real result.
<p>
Special cases:
<ul>
<li>{@code cosh(+infinity) = +infinity}</li>
<li>{@code cosh(-infinity) = +infinity}</li>
<li>{@code cosh(NaN) = NaN}</li>
</ul>

@param d
           the value whose hyperbolic cosine has to be computed.
@return the hyperbolic cosine of the argument."
      end

      operation 360091 "exp"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "d" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
	comment "Returns the closest double approximation of the raising \"e\" to the power
of the argument. The returned result is within 1 ulp (unit in the last
place) of the real result.
<p>
Special cases:
<ul>
<li>{@code exp(+infinity) = +infinity}</li>
<li>{@code exp(-infinity) = +0.0}</li>
<li>{@code exp(NaN) = NaN}</li>
</ul>

@param d
           the value whose exponential has to be computed.
@return the exponential of the argument."
      end

      operation 360219 "expm1"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "d" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
	comment "Returns the closest double approximation of <i>{@code e}</i><sup> {@code
d}</sup>{@code - 1}. If the argument is very close to 0, it is much more
accurate to use {@code expm1(d)+1} than {@code exp(d)} (due to
cancellation of significant digits). The returned result is within 1 ulp
(unit in the last place) of the real result.
<p>
For any finite input, the result is not less than -1.0. If the real
result is within 0.5 ulp of -1, -1.0 is returned.
<p>
Special cases:
<ul>
<li>{@code expm1(+0.0) = +0.0}</li>
<li>{@code expm1(-0.0) = -0.0}</li>
<li>{@code expm1(+infinity) = +infinity}</li>
<li>{@code expm1(-infinity) = -1.0}</li>
<li>{@code expm1(NaN) = NaN}</li>
</ul>

@param d
           the value to compute the <i>{@code e}</i><sup>{@code d} </sup>
           {@code - 1} of.
@return the <i>{@code e}</i><sup>{@code d}</sup>{@code - 1} value of the
        argument."
      end

      operation 360347 "floor"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "d" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
	comment "Returns the double conversion of the most positive (closest to positive
infinity) integer value less than or equal to the argument.
<p>
Special cases:
<ul>
<li>{@code floor(+0.0) = +0.0}</li>
<li>{@code floor(-0.0) = -0.0}</li>
<li>{@code floor(+infinity) = +infinity}</li>
<li>{@code floor(-infinity) = -infinity}</li>
<li>{@code floor(NaN) = NaN}</li>
</ul>"
      end

      operation 360475 "hypot"
	class_operation public explicit_return_type "double"
	nparams 2
	  param in name "x" explicit_type "double"
	  param in name "y" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
	comment "Returns {@code sqrt(}<i>{@code x}</i><sup>{@code 2}</sup>{@code +} <i>
{@code y}</i><sup>{@code 2}</sup>{@code )}. The final result is without
medium underflow or overflow. The returned result is within 1 ulp (unit
in the last place) of the real result. If one parameter remains constant,
the result should be semi-monotonic.
<p>
Special cases:
<ul>
<li>{@code hypot(+infinity, (anything including NaN)) = +infinity}</li>
<li>{@code hypot(-infinity, (anything including NaN)) = +infinity}</li>
<li>{@code hypot((anything including NaN), +infinity) = +infinity}</li>
<li>{@code hypot((anything including NaN), -infinity) = +infinity}</li>
<li>{@code hypot(NaN, NaN) = NaN}</li>
</ul>

@param x
           a double number.
@param y
           a double number.
@return the {@code sqrt(}<i>{@code x}</i><sup>{@code 2}</sup>{@code +}
        <i> {@code y}</i><sup>{@code 2}</sup>{@code )} value of the
        arguments."
      end

      operation 360603 "IEEEremainder"
	class_operation public explicit_return_type "double"
	nparams 2
	  param in name "x" explicit_type "double"
	  param in name "y" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
	comment "Returns the remainder of dividing {@code x} by {@code y} using the IEEE
754 rules. The result is {@code x-round(x/p)*p} where {@code round(x/p)}
is the nearest integer (rounded to even), but without numerical
cancellation problems.
<p>
Special cases:
<ul>
<li>{@code IEEEremainder((anything), 0) = NaN}</li>
<li>{@code IEEEremainder(+infinity, (anything)) = NaN}</li>
<li>{@code IEEEremainder(-infinity, (anything)) = NaN}</li>
<li>{@code IEEEremainder(NaN, (anything)) = NaN}</li>
<li>{@code IEEEremainder((anything), NaN) = NaN}</li>
<li>{@code IEEEremainder(x, +infinity) = x } where x is anything but
+/-infinity</li>
<li>{@code IEEEremainder(x, -infinity) = x } where x is anything but
+/-infinity</li>
</ul>

@param x
           the numerator of the operation.
@param y
           the denominator of the operation.
@return the IEEE754 floating point reminder of of {@code x/y}."
      end

      operation 360731 "log"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "d" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
	comment "Returns the closest double approximation of the natural logarithm of the
argument. The returned result is within 1 ulp (unit in the last place) of
the real result.
<p>
Special cases:
<ul>
<li>{@code log(+0.0) = -infinity}</li>
<li>{@code log(-0.0) = -infinity}</li>
<li>{@code log((anything < 0) = NaN}</li>
<li>{@code log(+infinity) = +infinity}</li>
<li>{@code log(-infinity) = NaN}</li>
<li>{@code log(NaN) = NaN}</li>
</ul>

@param d
           the value whose log has to be computed.
@return the natural logarithm of the argument."
      end

      operation 360859 "log10"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "d" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
	comment "Returns the closest double approximation of the base 10 logarithm of the
argument. The returned result is within 1 ulp (unit in the last place) of
the real result.
<p>
Special cases:
<ul>
<li>{@code log10(+0.0) = -infinity}</li>
<li>{@code log10(-0.0) = -infinity}</li>
<li>{@code log10((anything < 0) = NaN}</li>
<li>{@code log10(+infinity) = +infinity}</li>
<li>{@code log10(-infinity) = NaN}</li>
<li>{@code log10(NaN) = NaN}</li>
</ul>

@param d
           the value whose base 10 log has to be computed.
@return the natural logarithm of the argument."
      end

      operation 360987 "log1p"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "d" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
	comment "Returns the closest double approximation of the natural logarithm of the
sum of the argument and 1. If the argument is very close to 0, it is much
more accurate to use {@code log1p(d)} than {@code log(1.0+d)} (due to
numerical cancellation). The returned result is within 1 ulp (unit in the
last place) of the real result and is semi-monotonic.
<p>
Special cases:
<ul>
<li>{@code log1p(+0.0) = +0.0}</li>
<li>{@code log1p(-0.0) = -0.0}</li>
<li>{@code log1p((anything < 1)) = NaN}</li>
<li>{@code log1p(-1.0) = -infinity}</li>
<li>{@code log1p(+infinity) = +infinity}</li>
<li>{@code log1p(-infinity) = NaN}</li>
<li>{@code log1p(NaN) = NaN}</li>
</ul>

@param d
           the value to compute the {@code ln(1+d)} of.
@return the natural logarithm of the sum of the argument and 1."
      end

      operation 361115 "max"
	class_operation public explicit_return_type "double"
	nparams 2
	  param in name "d1" explicit_type "double"
	  param in name "d2" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the most positive (closest to positive infinity) of the two
arguments.
<p>
Special cases:
<ul>
<li>{@code max(NaN, (anything)) = NaN}</li>
<li>{@code max((anything), NaN) = NaN}</li>
<li>{@code max(+0.0, -0.0) = +0.0}</li>
<li>{@code max(-0.0, +0.0) = +0.0}</li>
</ul>"
      end

      operation 361243 "max"
	class_operation public explicit_return_type "float"
	nparams 2
	  param in name "f1" explicit_type "float"
	  param in name "f2" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the most positive (closest to positive infinity) of the two
arguments.
<p>
Special cases:
<ul>
<li>{@code max(NaN, (anything)) = NaN}</li>
<li>{@code max((anything), NaN) = NaN}</li>
<li>{@code max(+0.0, -0.0) = +0.0}</li>
<li>{@code max(-0.0, +0.0) = +0.0}</li>
</ul>"
      end

      operation 361371 "max"
	class_operation public explicit_return_type "int"
	nparams 2
	  param in name "i1" explicit_type "int"
	  param in name "i2" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
	comment "Returns the most positive (closest to positive infinity) of the two
arguments."
      end

      operation 361499 "max"
	class_operation public explicit_return_type "long"
	nparams 2
	  param in name "l1" explicit_type "long"
	  param in name "l2" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the most positive (closest to positive infinity) of the two
arguments."
      end

      operation 361627 "min"
	class_operation public explicit_return_type "double"
	nparams 2
	  param in name "d1" explicit_type "double"
	  param in name "d2" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the most negative (closest to negative infinity) of the two
arguments.
<p>
Special cases:
<ul>
<li>{@code min(NaN, (anything)) = NaN}</li>
<li>{@code min((anything), NaN) = NaN}</li>
<li>{@code min(+0.0, -0.0) = -0.0}</li>
<li>{@code min(-0.0, +0.0) = -0.0}</li>
</ul>"
      end

      operation 361755 "min"
	class_operation public explicit_return_type "float"
	nparams 2
	  param in name "f1" explicit_type "float"
	  param in name "f2" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the most negative (closest to negative infinity) of the two
arguments.
<p>
Special cases:
<ul>
<li>{@code min(NaN, (anything)) = NaN}</li>
<li>{@code min((anything), NaN) = NaN}</li>
<li>{@code min(+0.0, -0.0) = -0.0}</li>
<li>{@code min(-0.0, +0.0) = -0.0}</li>
</ul>"
      end

      operation 361883 "min"
	class_operation public explicit_return_type "int"
	nparams 2
	  param in name "i1" explicit_type "int"
	  param in name "i2" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
	comment "Returns the most negative (closest to negative infinity) of the two
arguments."
      end

      operation 362011 "min"
	class_operation public explicit_return_type "long"
	nparams 2
	  param in name "l1" explicit_type "long"
	  param in name "l2" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the most negative (closest to negative infinity) of the two
arguments."
      end

      operation 362139 "pow"
	class_operation public explicit_return_type "double"
	nparams 2
	  param in name "x" explicit_type "double"
	  param in name "y" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
	comment "Returns the closest double approximation of the result of raising {@code
x} to the power of {@code y}.
<p>
Special cases:
<ul>
<li>{@code pow((anything), +0.0) = 1.0}</li>
<li>{@code pow((anything), -0.0) = 1.0}</li>
<li>{@code pow(x, 1.0) = x}</li>
<li>{@code pow((anything), NaN) = NaN}</li>
<li>{@code pow(NaN, (anything except 0)) = NaN}</li>
<li>{@code pow(+/-(|x| > 1), +infinity) = +infinity}</li>
<li>{@code pow(+/-(|x| > 1), -infinity) = +0.0}</li>
<li>{@code pow(+/-(|x| < 1), +infinity) = +0.0}</li>
<li>{@code pow(+/-(|x| < 1), -infinity) = +infinity}</li>
<li>{@code pow(+/-1.0 , +infinity) = NaN}</li>
<li>{@code pow(+/-1.0 , -infinity) = NaN}</li>
<li>{@code pow(+0.0, (+anything except 0, NaN)) = +0.0}</li>
<li>{@code pow(-0.0, (+anything except 0, NaN, odd integer)) = +0.0}</li>
<li>{@code pow(+0.0, (-anything except 0, NaN)) = +infinity}</li>
<li>{@code pow(-0.0, (-anything except 0, NAN, odd integer))} {@code =}
{@code +infinity}</li>
<li>{@code pow(-0.0, (odd integer)) = -pow( +0 , (odd integer) )}</li>
<li>{@code pow(+infinity, (+anything except 0, NaN)) = +infinity}</li>
<li>{@code pow(+infinity, (-anything except 0, NaN)) = +0.0}</li>
<li>{@code pow(-infinity, (anything)) = -pow(0, (-anything))}</li>
<li>{@code pow((-anything), (integer))} {@code =} {@code
pow(-1,(integer))*pow(+anything,integer) }</li>
<li>{@code pow((-anything except 0 and inf), (non-integer)) = NAN}</li>
</ul>

@param x
           the base of the operation.
@param y
           the exponent of the operation.
@return {@code x} to the power of {@code y}."
      end

      operation 362267 "rint"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "d" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
	comment "Returns the double conversion of the result of rounding the argument to
an integer. Tie breaks are rounded towards even.
<p>
Special cases:
<ul>
<li>{@code rint(+0.0) = +0.0}</li>
<li>{@code rint(-0.0) = -0.0}</li>
<li>{@code rint(+infinity) = +infinity}</li>
<li>{@code rint(-infinity) = -infinity}</li>
<li>{@code rint(NaN) = NaN}</li>
</ul>

@param d
           the value to be rounded.
@return the closest integer to the argument (as a double)."
      end

      operation 362395 "round"
	class_operation public explicit_return_type "long"
	nparams 1
	  param in name "d" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the result of rounding the argument to an integer. The result is
equivalent to {@code (long) Math.floor(d+0.5)}.
<p>
Special cases:
<ul>
<li>{@code round(+0.0) = +0.0}</li>
<li>{@code round(-0.0) = +0.0}</li>
<li>{@code round((anything > Long.MAX_VALUE) = Long.MAX_VALUE}</li>
<li>{@code round((anything < Long.MIN_VALUE) = Long.MIN_VALUE}</li>
<li>{@code round(+infinity) = Long.MAX_VALUE}</li>
<li>{@code round(-infinity) = Long.MIN_VALUE}</li>
<li>{@code round(NaN) = +0.0}</li>
</ul>

@param d
           the value to be rounded.
@return the closest integer to the argument."
      end

      operation 362523 "round"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "f" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the result of rounding the argument to an integer. The result is
equivalent to {@code (int) Math.floor(f+0.5)}.
<p>
Special cases:
<ul>
<li>{@code round(+0.0) = +0.0}</li>
<li>{@code round(-0.0) = +0.0}</li>
<li>{@code round((anything > Integer.MAX_VALUE) = Integer.MAX_VALUE}</li>
<li>{@code round((anything < Integer.MIN_VALUE) = Integer.MIN_VALUE}</li>
<li>{@code round(+infinity) = Integer.MAX_VALUE}</li>
<li>{@code round(-infinity) = Integer.MIN_VALUE}</li>
<li>{@code round(NaN) = +0.0}</li>
</ul>

@param f
           the value to be rounded.
@return the closest integer to the argument."
      end

      operation 362651 "signum"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "d" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the signum function of the argument. If the argument is less than
zero, it returns -1.0. If the argument is greater than zero, 1.0 is
returned. If the argument is either positive or negative zero, the
argument is returned as result.
<p>
Special cases:
<ul>
<li>{@code signum(+0.0) = +0.0}</li>
<li>{@code signum(-0.0) = -0.0}</li>
<li>{@code signum(+infinity) = +1.0}</li>
<li>{@code signum(-infinity) = -1.0}</li>
<li>{@code signum(NaN) = NaN}</li>
</ul>

@param d
           the value whose signum has to be computed.
@return the value of the signum function."
      end

      operation 362779 "signum"
	class_operation public explicit_return_type "float"
	nparams 1
	  param in name "f" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the signum function of the argument. If the argument is less than
zero, it returns -1.0. If the argument is greater than zero, 1.0 is
returned. If the argument is either positive or negative zero, the
argument is returned as result.
<p>
Special cases:
<ul>
<li>{@code signum(+0.0) = +0.0}</li>
<li>{@code signum(-0.0) = -0.0}</li>
<li>{@code signum(+infinity) = +1.0}</li>
<li>{@code signum(-infinity) = -1.0}</li>
<li>{@code signum(NaN) = NaN}</li>
</ul>

@param f
           the value whose signum has to be computed.
@return the value of the signum function."
      end

      operation 362907 "sin"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "d" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
	comment "Returns the closest double approximation of the sine of the argument. The
returned result is within 1 ulp (unit in the last place) of the real
result.
<p>
Special cases:
<ul>
<li>{@code sin(+0.0) = +0.0}</li>
<li>{@code sin(-0.0) = -0.0}</li>
<li>{@code sin(+infinity) = NaN}</li>
<li>{@code sin(-infinity) = NaN}</li>
<li>{@code sin(NaN) = NaN}</li>
</ul>

@param d
           the angle whose sin has to be computed, in radians.
@return the sine of the argument."
      end

      operation 363035 "sinh"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "d" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
	comment "Returns the closest double approximation of the hyperbolic sine of the
argument. The returned result is within 2.5 ulps (units in the last
place) of the real result.
<p>
Special cases:
<ul>
<li>{@code sinh(+0.0) = +0.0}</li>
<li>{@code sinh(-0.0) = -0.0}</li>
<li>{@code sinh(+infinity) = +infinity}</li>
<li>{@code sinh(-infinity) = -infinity}</li>
<li>{@code sinh(NaN) = NaN}</li>
</ul>

@param d
           the value whose hyperbolic sine has to be computed.
@return the hyperbolic sine of the argument."
      end

      operation 363163 "sqrt"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "d" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
	comment "Returns the closest double approximation of the square root of the
argument.
<p>
Special cases:
<ul>
<li>{@code sqrt(+0.0) = +0.0}</li>
<li>{@code sqrt(-0.0) = -0.0}</li>
<li>{@code sqrt( (anything < 0) ) = NaN}</li>
<li>{@code sqrt(+infinity) = +infinity}</li>
<li>{@code sqrt(NaN) = NaN}</li>
</ul>"
      end

      operation 363291 "tan"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "d" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
	comment "Returns the closest double approximation of the tangent of the argument.
The returned result is within 1 ulp (unit in the last place) of the real
result.
<p>
Special cases:
<ul>
<li>{@code tan(+0.0) = +0.0}</li>
<li>{@code tan(-0.0) = -0.0}</li>
<li>{@code tan(+infinity) = NaN}</li>
<li>{@code tan(-infinity) = NaN}</li>
<li>{@code tan(NaN) = NaN}</li>
</ul>

@param d
           the angle whose tangent has to be computed, in radians.
@return the tangent of the argument."
      end

      operation 363419 "tanh"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "d" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
	comment "Returns the closest double approximation of the hyperbolic tangent of the
argument. The absolute value is always less than 1. The returned result
is within 2.5 ulps (units in the last place) of the real result. If the
real result is within 0.5ulp of 1 or -1, it should return exactly +1 or
-1.
<p>
Special cases:
<ul>
<li>{@code tanh(+0.0) = +0.0}</li>
<li>{@code tanh(-0.0) = -0.0}</li>
<li>{@code tanh(+infinity) = +1.0}</li>
<li>{@code tanh(-infinity) = -1.0}</li>
<li>{@code tanh(NaN) = NaN}</li>
</ul>

@param d
           the value whose hyperbolic tangent has to be computed.
@return the hyperbolic tangent of the argument."
      end

      operation 363547 "random"
	class_operation public explicit_return_type "double"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a pseudo-random double {@code n}, where {@code n >= 0.0 && n < 1.0}.
This method reuses a single instance of {@link java.util.Random}.
This method is thread-safe because access to the {@code Random} is synchronized,
but this harms scalability. Applications may find a performance benefit from
allocating a {@code Random} for each of their threads.

@return a pseudo-random number."
      end

      operation 363675 "toRadians"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "angdeg" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the measure in radians of the supplied degree angle. The result
is {@code angdeg / 180 * pi}.
<p>
Special cases:
<ul>
<li>{@code toRadians(+0.0) = +0.0}</li>
<li>{@code toRadians(-0.0) = -0.0}</li>
<li>{@code toRadians(+infinity) = +infinity}</li>
<li>{@code toRadians(-infinity) = -infinity}</li>
<li>{@code toRadians(NaN) = NaN}</li>
</ul>

@param angdeg
           an angle in degrees.
@return the radian measure of the angle."
      end

      operation 363803 "toDegrees"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "angrad" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the measure in degrees of the supplied radian angle. The result
is {@code angrad * 180 / pi}.
<p>
Special cases:
<ul>
<li>{@code toDegrees(+0.0) = +0.0}</li>
<li>{@code toDegrees(-0.0) = -0.0}</li>
<li>{@code toDegrees(+infinity) = +infinity}</li>
<li>{@code toDegrees(-infinity) = -infinity}</li>
<li>{@code toDegrees(NaN) = NaN}</li>
</ul>

@param angrad
           an angle in radians.
@return the degree measure of the angle."
      end

      operation 363931 "ulp"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "d" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the argument's ulp (unit in the last place). The size of a ulp of
a double value is the positive distance between this value and the double
value next larger in magnitude. For non-NaN {@code x}, {@code ulp(-x) ==
ulp(x)}.
<p>
Special cases:
<ul>
<li>{@code ulp(+0.0) = Double.MIN_VALUE}</li>
<li>{@code ulp(-0.0) = Double.MIN_VALUE}</li>
<li>{@code ulp(+infinity) = infinity}</li>
<li>{@code ulp(-infinity) = infinity}</li>
<li>{@code ulp(NaN) = NaN}</li>
</ul>

@param d
           the floating-point value to compute ulp of.
@return the size of a ulp of the argument."
      end

      operation 364059 "nextafter"
	class_operation private explicit_return_type "double"
	nparams 2
	  param in name "x" explicit_type "double"
	  param in name "y" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
      end

      operation 364187 "ulp"
	class_operation public explicit_return_type "float"
	nparams 1
	  param in name "f" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the argument's ulp (unit in the last place). The size of a ulp of
a float value is the positive distance between this value and the float
value next larger in magnitude. For non-NaN {@code x}, {@code ulp(-x) ==
ulp(x)}.
<p>
Special cases:
<ul>
<li>{@code ulp(+0.0) = Float.MIN_VALUE}</li>
<li>{@code ulp(-0.0) = Float.MIN_VALUE}</li>
<li>{@code ulp(+infinity) = infinity}</li>
<li>{@code ulp(-infinity) = infinity}</li>
<li>{@code ulp(NaN) = NaN}</li>
</ul>

@param f
           the floating-point value to compute ulp of.
@return the size of a ulp of the argument."
      end

      operation 364315 "copySign"
	class_operation public explicit_return_type "double"
	nparams 2
	  param in name "magnitude" explicit_type "double"
	  param in name "sign" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a double with the given magnitude and the sign of {@code sign}.
If {@code sign} is NaN, the sign of the result is arbitrary.
If you need a determinate sign in such cases, use {@code StrictMath.copySign}.
@since 1.6"
      end

      operation 364443 "copySign"
	class_operation public explicit_return_type "float"
	nparams 2
	  param in name "magnitude" explicit_type "float"
	  param in name "sign" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a float with the given magnitude and the sign of {@code sign}.
If {@code sign} is NaN, the sign of the result is arbitrary.
If you need a determinate sign in such cases, use {@code StrictMath.copySign}.
@since 1.6"
      end

      operation 364571 "getExponent"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "f" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the unbiased base-2 exponent of float {@code f}.
@since 1.6"
      end

      operation 364699 "getExponent"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "d" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the unbiased base-2 exponent of double {@code d}.
@since 1.6"
      end

      operation 364827 "nextAfter"
	class_operation public explicit_return_type "double"
	nparams 2
	  param in name "start" explicit_type "double"
	  param in name "direction" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the next double after {@code start} in the given {@code direction}.
@since 1.6"
      end

      operation 364955 "nextAfter"
	class_operation public explicit_return_type "float"
	nparams 2
	  param in name "start" explicit_type "float"
	  param in name "direction" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the next float after {@code start} in the given {@code direction}.
@since 1.6"
      end

      operation 365083 "nextUp"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "d" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the next double larger than {@code d}.
@since 1.6"
      end

      operation 365211 "nextUp"
	class_operation public explicit_return_type "float"
	nparams 1
	  param in name "f" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the next float larger than {@code f}.
@since 1.6"
      end

      operation 365339 "scalb"
	class_operation public explicit_return_type "double"
	nparams 2
	  param in name "d" explicit_type "double"
	  param in name "scaleFactor" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns {@code d} * 2^{@code scaleFactor}. The result may be rounded.
@since 1.6"
      end

      operation 365467 "scalb"
	class_operation public explicit_return_type "float"
	nparams 2
	  param in name "d" explicit_type "float"
	  param in name "scaleFactor" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns {@code d} * 2^{@code scaleFactor}. The result may be rounded.
@since 1.6"
      end

      operation 365595 "shiftIntBits"
	class_operation private explicit_return_type "int"
	nparams 2
	  param in name "bits" explicit_type "int"
	  param in name "digits" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Shifts integer bits as float, if the digits is positive, left-shift; if
 not, shift to right and calculate its carry."
      end

      operation 365723 "shiftLongBits"
	class_operation private explicit_return_type "long"
	nparams 2
	  param in name "bits" explicit_type "long"
	  param in name "digits" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Shifts long bits as double, if the digits is positive, left-shift; if
 not, shift to right and calculate its carry."
      end
    end

    class 156187 "NegativeArraySizeException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Thrown when an attempt is made to create an array with a size of less than
zero."
      classrelation 197403 // <generalisation>
	relation 197403 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 197403 // <generalisation>
	  b parent class_ref 806284 // RuntimeException
      end

      attribute 183707 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -8960118058596991861L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 365851 "NegativeArraySizeException"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code NegativeArraySizeException} that includes the
current stack trace."
      end

      operation 365979 "NegativeArraySizeException"
	public explicit_return_type ""
	nparams 1
	  param inout name "detailMessage" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code NegativeArraySizeException} with the current
stack trace and the specified detail message.

@param detailMessage
           the detail message for this exception."
      end
    end

    class 156315 "NoClassDefFoundError"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Thrown when the VM is unable to locate a class which it has been
asked to load."
      classrelation 197531 // <generalisation>
	relation 197531 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 197531 // <generalisation>
	  b parent class_ref 147227 // LinkageError
      end

      attribute 183835 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 9095859863287012458L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 366107 "NoClassDefFoundError"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code NoClassDefFoundError} that includes the current
stack trace."
      end

      operation 366235 "NoClassDefFoundError"
	public explicit_return_type ""
	nparams 1
	  param inout name "detailMessage" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code NoClassDefFoundError} with the current stack
trace and the specified detail message.

@param detailMessage
           the detail message for this error."
      end
    end

    class 156443 "NoSuchFieldError"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Thrown when the VM notices that a program tries to reference,
on a class or object, a field that does not exist.
<p>
Note that this can only occur when inconsistent class files are being loaded."
      classrelation 197659 // <generalisation>
	relation 197659 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 197659 // <generalisation>
	  b parent class_ref 147099 // IncompatibleClassChangeError
      end

      attribute 183963 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -3456430195886129035L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 366363 "NoSuchFieldError"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code NoSuchFieldError} that includes the current stack
trace."
      end

      operation 366491 "NoSuchFieldError"
	public explicit_return_type ""
	nparams 1
	  param inout name "detailMessage" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code NoSuchFieldError} with the current stack trace
and the specified detail message.

@param detailMessage
           the detail message for this error."
      end
    end

    class 156571 "NoSuchMethodError"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Thrown when the VM notices that a program tries to reference,
on a class or object, a method that does not exist."
      classrelation 197915 // <generalisation>
	relation 197915 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 197915 // <generalisation>
	  b parent class_ref 147099 // IncompatibleClassChangeError
      end

      attribute 184219 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -3765521442372831335L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 366875 "NoSuchMethodError"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code NoSuchMethodError} that includes the current
stack trace."
      end

      operation 367003 "NoSuchMethodError"
	public explicit_return_type ""
	nparams 1
	  param inout name "detailMessage" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code NoSuchMethodError} with the current stack trace
and the specified detail message.

@param detailMessage
           the detail message for this exception."
      end
    end

    class 156699 "NullPointerException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Thrown when a program tries to access a field or method of an object or an
element of an array when there is no instance or array to use, that is if the
object or array points to {@code null}. It also occurs in some other, less
obvious circumstances, like a {@code throw e} statement where the {@link
Throwable} reference is {@code null}."
      classrelation 198171 // <generalisation>
	relation 198171 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 198171 // <generalisation>
	  b parent class_ref 806284 // RuntimeException
      end

      attribute 184475 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 5162710183389028792L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 367387 "NullPointerException"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code NullPointerException} that includes the current
stack trace."
      end

      operation 367515 "NullPointerException"
	public explicit_return_type ""
	nparams 1
	  param inout name "detailMessage" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code NullPointerException} with the current stack
trace and the specified detail message.

@param detailMessage
           the detail message for this exception."
      end
    end

    class 156827 "OutOfMemoryError"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Thrown when a request for memory is made that can not be satisfied using the
available platform resources. Such a request may be made by both the running
application or by an internal function of the VM."
      classrelation 198427 // <generalisation>
	relation 198427 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 198427 // <generalisation>
	  b parent class_ref 155419 // VirtualMachineError
      end

      attribute 184731 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 8228564086184010517L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 367899 "OutOfMemoryError"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code OutOfMemoryError} that includes the current stack
trace."
      end

      operation 368027 "OutOfMemoryError"
	public explicit_return_type ""
	nparams 1
	  param inout name "detailMessage" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code OutOfMemoryError} with the current stack trace
and the specified detail message.

@param detailMessage
           the detail message for this error."
      end
    end

    class 156955 "Override"
      visibility public stereotype "@interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}@interface ${name}${extends} {
${members}}
"
      java_annotation "@Target(ElementType.METHOD)
@Retention(RetentionPolicy.SOURCE)
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Annotation type used to mark methods that override a method declaration in a
superclass. Compilers produce an error if a method annotated with @Override
does not actually override a method in a superclass.

@since 1.5"
    end

    class 157083 "Process"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Represents an external process. Enables writing to, reading from, destroying,
and waiting for the external process, as well as querying its exit value. Use
{@link ProcessBuilder} to create processes.

<p>The child process writes its output to two streams, {@code out} and
{@code err}. These streams should be read by the parent process using {@link
#getInputStream()} and {@link #getErrorStream()} respectively. If these
streams are not read, the target process may block while it awaits buffer
space. It isn't sufficient to read the streams in sequence; to avoid blocking
each of the two streams must have its own reader thread. If you are not
interested in differentiating the out and err streams, use {@link
ProcessBuilder#redirectErrorStream(boolean) redirectErrorStream(true)} to
merge the two streams. This simplifies your reading code and makes it easier
to avoid blocking the target process.

<p>Running processes hold resources. When a process is no longer used, the
process should be closed by calling {@link #destroy}. This will kill the
process and release the resources that it holds.

<p>For example, to run {@code /system/bin/ping} to ping {@code android.com}:
<pre>   {@code
  Process process = new ProcessBuilder()
      .command(\"/system/bin/ping\", \"android.com\")
      .redirectErrorStream(true)
      .start();
  try {
    InputStream in = process.getInputStream();
    OutputStream out = process.getOutputStream();

    readStream(in);

  } finally {
    process.destroy();
  }
}</pre>"
      operation 370587 "destroy"
	abstract public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Terminates this process and closes any associated streams."
      end

      operation 370715 "exitValue"
	abstract public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the exit value of the native process represented by this object.
It is available only when the native process has terminated.

@return the exit value of this process.
@throws IllegalThreadStateException
            if this process has not terminated."
      end

      operation 370843 "getErrorStream"
	abstract public return_type class_ref 131867 // InputStream
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an input stream that is connected to the error stream
<em>(stderr)</em> of the native process represented by this object.

@return the input stream to read from the error stream associated with
        the native process."
      end

      operation 370971 "getInputStream"
	abstract public return_type class_ref 131867 // InputStream
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an input stream that is connected to the standard output stream
<em>(stdout)</em> of the native process represented by this object.

@return the input stream to read from the output stream associated with
        the native process."
      end

      operation 371099 "getOutputStream"
	abstract public return_type class_ref 132635 // OutputStream
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an output stream that is connected to the standard input stream
<em>(stdin)</em> of the native process represented by this object.

@return the output stream to write to the input stream associated with
        the native process."
      end

      operation 371227 "waitFor"
	abstract public explicit_return_type "int"
	nparams 0
	nexceptions 1
	  exception class_ref 155547 // InterruptedException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Causes the calling thread to wait for the native process associated with
this object to finish executing.

@return the exit value of the native process being waited on.
@throws InterruptedException
            if the calling thread is interrupted."
      end
    end

    class 157211 "ProcessBuilder"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Creates operating system processes. See {@link Process} for documentation and
example usage."
      classrelation 199835 // command (<unidirectional association>)
	relation 199835 --->
	  a role_name "command" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String> ${name}${value};
"
	    classrelation_ref 199835 // command (<unidirectional association>)
	  b parent class_ref 131483 // List
      end

      classrelation 199963 // directory (<unidirectional association>)
	relation 199963 --->
	  a role_name "directory" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 199963 // directory (<unidirectional association>)
	  b parent class_ref 135579 // File
      end

      classrelation 200091 // environment (<unidirectional association>)
	relation 200091 --->
	  a role_name "environment" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, String> ${name}${value};
"
	    classrelation_ref 200091 // environment (<unidirectional association>)
	  b parent class_ref 129819 // Map
      end

      attribute 184859 "redirectErrorStream"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 371355 "ProcessBuilder"
	public explicit_return_type ""
	nparams 1
	  param inout name "" explicit_type "String...command"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code ProcessBuilder} instance with the specified
operating system program and its arguments.

@param command
           the requested operating system program and its arguments."
      end

      operation 371483 "ProcessBuilder"
	public explicit_return_type ""
	nparams 1
	  param inout name "command" type class_ref 131483 // List
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<String> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code ProcessBuilder} instance with the specified
operating system program and its arguments. Note that the list passed to
this constructor is not copied, so any subsequent updates to it are
reflected in this instance's state.

@param command
           the requested operating system program and its arguments.
@throws NullPointerException
            if {@code command} is {@code null}."
      end

      operation 371611 "command"
	public return_type class_ref 131483 // List
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns this process builder's current program and arguments. Note that
the returned list is not a copy and modifications to it will change the
state of this instance.

@return this process builder's program and arguments."
      end

      operation 371739 "command"
	public return_type class_ref 157211 // ProcessBuilder
	nparams 1
	  param inout name "" explicit_type "String...command"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Changes the program and arguments of this process builder.

@param command
           the new operating system program and its arguments.
@return this process builder instance."
      end

      operation 371867 "command"
	public return_type class_ref 157211 // ProcessBuilder
	nparams 1
	  param inout name "command" type class_ref 131483 // List
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<String> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Changes the program and arguments of this process builder. Note that the
list passed to this method is not copied, so any subsequent updates to it
are reflected in this instance's state.

@param command
           the new operating system program and its arguments.
@return this process builder instance.
@throws NullPointerException
            if {@code command} is {@code null}."
      end

      operation 371995 "directory"
	public return_type class_ref 135579 // File
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the working directory of this process builder. If {@code null} is
returned, then the working directory of the Java process is used when a
process is started.

@return the current working directory, may be {@code null}."
      end

      operation 372123 "directory"
	public return_type class_ref 157211 // ProcessBuilder
	nparams 1
	  param inout name "directory" type class_ref 135579 // File
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Changes the working directory of this process builder. If the specified
directory is {@code null}, then the working directory of the Java
process is used when a process is started.

@param directory
           the new working directory for this process builder.
@return this process builder instance."
      end

      operation 372251 "environment"
	public return_type class_ref 129819 // Map
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String, String> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns this process builder's current environment. When a process
builder instance is created, the environment is populated with a copy of
the environment, as returned by {@link System#getenv()}. Note that the
map returned by this method is not a copy and any changes made to it are
reflected in this instance's state.

@return the map containing this process builder's environment variables."
      end

      operation 372379 "redirectErrorStream"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether the standard error should be redirected to standard
output. If redirected, the {@link Process#getErrorStream()} will always
return end of stream and standard error is written to
{@link Process#getInputStream()}.

@return {@code true} if the standard error is redirected; {@code false}
        otherwise."
      end

      operation 372507 "redirectErrorStream"
	public return_type class_ref 157211 // ProcessBuilder
	nparams 1
	  param inout name "redirectErrorStream" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Changes the state of whether or not standard error is redirected to
standard output.

@param redirectErrorStream
           {@code true} to redirect standard error, {@code false}
           otherwise.
@return this process builder instance."
      end

      operation 372635 "start"
	public return_type class_ref 157083 // Process
	nparams 0
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Starts a new process based on the current state of this process builder.

@return the new {@code Process} instance.
@throws NullPointerException
            if any of the elements of {@link #command()} is {@code null}.
@throws IndexOutOfBoundsException
            if {@link #command()} is empty.
@throws IOException
            if an I/O error happens."
      end
    end

    class 157339 "ProcessManager"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Manages child processes."
      classrelation 200219 // processReferences (<unidirectional association>)
	relation 200219 --->
	  a role_name "processReferences" init_value " new HashMap<Integer, ProcessReference>()" const_relation private
	    comment "
Map from pid to Process. We keep weak references to the Process objects
and clean up the entries when no more external references are left. The
process objects themselves don't require much memory, but file
descriptors (associated with stdin/stdout/stderr in this case) can be
a scarce resource.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Integer, ProcessReference> ${name}${value};
"
	    classrelation_ref 200219 // processReferences (<unidirectional association>)
	  b parent class_ref 129819 // Map
      end

      class 157467 "ProcessReferenceQueue"
	visibility package 
	nactuals 1
	actual class class_ref 152475 // ReferenceQueue
	  rank 0 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 202139 // <realization>
	  relation 202139 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 202139 // <realization>
	    b parent class_ref 152475 // ReferenceQueue
	end

	operation 376859 "poll"
	  public return_type class_ref 157723 // ProcessReference
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      classrelation 200347 // referenceQueue (<unidirectional association>)
	relation 200347 --->
	  a role_name "referenceQueue" init_value " new ProcessReferenceQueue()" const_relation private
	    comment " Keeps track of garbage-collected Processes. 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 200347 // referenceQueue (<unidirectional association>)
	  b parent class_ref 157467 // ProcessReferenceQueue
      end

      operation 372763 "ProcessManager"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 372891 "cleanUp"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cleans up after garbage collected processes. Requires the lock on the
map."
      end

      operation 373019 "watchChildren"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Loops indefinitely and calls ProcessManager.onExit() when children exit."
      end

      operation 373147 "onExit"
	private explicit_return_type "void"
	nparams 2
	  param in name "pid" explicit_type "int"
	  param in name "exitValue" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called by {@link #watchChildren()} when a child process exits.

@param pid ID of process that exited
@param exitValue value the process returned upon exit"
      end

      operation 373275 "waitForMoreChildren"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 373403 "exec"
	class_operation private explicit_return_type "int"
	nparams 7
	  param inout name "command" type class_ref 3399692 // String
	  param inout name "environment" type class_ref 3399692 // String
	  param inout name "workingDirectory" type class_ref 3399692 // String
	  param inout name "in" type class_ref 140699 // FileDescriptor
	  param inout name "out" type class_ref 140699 // FileDescriptor
	  param inout name "err" type class_ref 140699 // FileDescriptor
	  param inout name "redirectErrorStream" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws};
"
	
	
	
	comment "Executes a native process. Fills in in, out, and err and returns the
new process ID upon success."
      end

      operation 373531 "exec"
	public return_type class_ref 157083 // Process
	nparams 4
	  param inout name "taintedCommand" type class_ref 3399692 // String
	  param inout name "taintedEnvironment" type class_ref 3399692 // String
	  param inout name "workingDirectory" type class_ref 135579 // File
	  param inout name "redirectErrorStream" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Executes a process and returns an object representing it."
      end

      class 157595 "ProcessImpl"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 200475 // <generalisation>
	  relation 200475 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 200475 // <generalisation>
	    b parent class_ref 157083 // Process
	end

	attribute 184987 "pid"
	  const_attribute private explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 200603 // errorStream (<unidirectional association>)
	  relation 200603 --->
	    a role_name "errorStream" const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 200603 // errorStream (<unidirectional association>)
	    b parent class_ref 131867 // InputStream
	end

	classrelation 200731 // inputStream (<unidirectional association>)
	  relation 200731 --->
	    a role_name "inputStream" const_relation private
	      comment " Reads output from process. 
"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 200731 // inputStream (<unidirectional association>)
	    b parent class_ref 131867 // InputStream
	end

	classrelation 200859 // outputStream (<unidirectional association>)
	  relation 200859 --->
	    a role_name "outputStream" const_relation private
	      comment " Sends output to process. 
"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 200859 // outputStream (<unidirectional association>)
	    b parent class_ref 132635 // OutputStream
	end

	classrelation 200987 // exitValue (<unidirectional association>)
	  relation 200987 --->
	    a role_name "exitValue" init_value " null" private
	      comment " The process's exit value. 
"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 200987 // exitValue (<unidirectional association>)
	    b parent class_ref 130075 // Integer
	end

	classrelation 201115 // exitValueMutex (<unidirectional association>)
	  relation 201115 --->
	    a role_name "exitValueMutex" init_value " new Object()" const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 201115 // exitValueMutex (<unidirectional association>)
	    b parent class_ref 3401484 // Object
	end

	operation 373659 "ProcessImpl"
	  package explicit_return_type ""
	  nparams 4
	    param in name "pid" explicit_type "int"
	    param inout name "in" type class_ref 140699 // FileDescriptor
	    param inout name "out" type class_ref 140699 // FileDescriptor
	    param inout name "err" type class_ref 140699 // FileDescriptor
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 373787 "destroy"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 373915 "exitValue"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 374043 "getErrorStream"
	  public return_type class_ref 131867 // InputStream
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 374171 "getInputStream"
	  public return_type class_ref 131867 // InputStream
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 374299 "getOutputStream"
	  public return_type class_ref 132635 // OutputStream
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 374427 "waitFor"
	  public explicit_return_type "int"
	  nparams 0
	  nexceptions 1
	    exception class_ref 155547 // InterruptedException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 374555 "setExitValue"
	  package explicit_return_type "void"
	  nparams 1
	    param in name "exitValue" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 374683 "toString"
	  public return_type class_ref 3399692 // String
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      class 157723 "ProcessReference"
	visibility package 
	nactuals 1
	actual class class_ref 157851 // WeakReference
	  rank 0 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 201755 // <realization>
	  relation 201755 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 201755 // <realization>
	    b parent class_ref 157851 // WeakReference
	end

	attribute 185243 "processId"
	  const_attribute package explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 375963 "ProcessReference"
	  public explicit_return_type ""
	  nparams 2
	    param inout name "referent" type class_ref 157595 // ProcessImpl
	    param inout name "referenceQueue" type class_ref 157467 // ProcessReferenceQueue
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 202267 // instance (<unidirectional association>)
	relation 202267 --->
	  a role_name "instance" init_value " new ProcessManager()" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 202267 // instance (<unidirectional association>)
	  b parent class_ref 157339 // ProcessManager
      end

      operation 376987 "getInstance"
	class_operation public return_type class_ref 157339 // ProcessManager
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Gets the process manager. "
      end

      class 157979 "ProcessInputStream"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 202395 // <generalisation>
	  relation 202395 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 202395 // <generalisation>
	    b parent class_ref 140955 // FileInputStream
	end

	classrelation 202523 // fd (<unidirectional association>)
	  relation 202523 --->
	    a role_name "fd" private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 202523 // fd (<unidirectional association>)
	    b parent class_ref 140699 // FileDescriptor
	end

	operation 377115 "ProcessInputStream"
	  private explicit_return_type ""
	  nparams 1
	    param inout name "fd" type class_ref 140699 // FileDescriptor
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 377243 "close"
	  public explicit_return_type "void"
	  nparams 0
	  nexceptions 1
	    exception class_ref 128539 // IOException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      class 158107 "ProcessOutputStream"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 202651 // <generalisation>
	  relation 202651 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 202651 // <generalisation>
	    b parent class_ref 141211 // FileOutputStream
	end

	classrelation 202779 // fd (<unidirectional association>)
	  relation 202779 --->
	    a role_name "fd" private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 202779 // fd (<unidirectional association>)
	    b parent class_ref 140699 // FileDescriptor
	end

	operation 377371 "ProcessOutputStream"
	  private explicit_return_type ""
	  nparams 1
	    param inout name "fd" type class_ref 140699 // FileDescriptor
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 377499 "close"
	  public explicit_return_type "void"
	  nparams 0
	  nexceptions 1
	    exception class_ref 128539 // IOException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end
    end

    class 158235 "RealToString"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 202907 // INSTANCE (<unidirectional association>)
	relation 202907 --->
	  a role_name "INSTANCE" init_value " new ThreadLocal<RealToString>() {
        @Override protected RealToString initialValue() {
            return new RealToString();
        }
    }" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<RealToString> ${name}${value};
"
	    classrelation_ref 202907 // INSTANCE (<unidirectional association>)
	  b parent class_ref 144539 // ThreadLocal
      end

      attribute 185499 "invLogOfTenBaseTwo"
	class_attribute const_attribute private explicit_type "double"
	init_value " Math.log(2.0) / Math.log(10.0)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 185627 "firstK"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 185755 "digits"
	const_attribute private explicit_type "int"
	multiplicity "[]"
	init_value " new int[64]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "An array of decimal digits, filled by longDigitGenerator or bigIntDigitGenerator.
"
      end

      attribute 185883 "digitCount"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Number of valid entries in 'digits'.
"
      end

      operation 377627 "RealToString"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 377755 "getInstance"
	class_operation public return_type class_ref 158235 // RealToString
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 377883 "resultOrSideEffect"
	class_operation private return_type class_ref 3399692 // String
	nparams 2
	  param inout name "sb" type class_ref 147355 // AbstractStringBuilder
	  param inout name "s" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 378011 "doubleToString"
	public return_type class_ref 3399692 // String
	nparams 1
	  param in name "d" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 378139 "appendDouble"
	public explicit_return_type "void"
	nparams 2
	  param inout name "sb" type class_ref 147355 // AbstractStringBuilder
	  param in name "d" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 378267 "convertDouble"
	private return_type class_ref 3399692 // String
	nparams 2
	  param inout name "sb" type class_ref 147355 // AbstractStringBuilder
	  param in name "inputNumber" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 378395 "floatToString"
	public return_type class_ref 3399692 // String
	nparams 1
	  param in name "f" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 378523 "appendFloat"
	public explicit_return_type "void"
	nparams 2
	  param inout name "sb" type class_ref 147355 // AbstractStringBuilder
	  param in name "f" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 378651 "convertFloat"
	public return_type class_ref 3399692 // String
	nparams 2
	  param inout name "sb" type class_ref 147355 // AbstractStringBuilder
	  param in name "inputNumber" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 378779 "freeFormatExponential"
	private explicit_return_type "void"
	nparams 2
	  param inout name "sb" type class_ref 147355 // AbstractStringBuilder
	  param inout name "positive" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 378907 "freeFormat"
	private explicit_return_type "void"
	nparams 2
	  param inout name "sb" type class_ref 147355 // AbstractStringBuilder
	  param inout name "positive" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 379035 "bigIntDigitGenerator"
	private explicit_return_type "void"
	nparams 4
	  param in name "f" explicit_type "long"
	  param in name "e" explicit_type "int"
	  param inout name "isDenormalized" explicit_type "boolean"
	  param in name "p" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws};
"
	
	
	
      end

      operation 379163 "longDigitGenerator"
	private explicit_return_type "void"
	nparams 5
	  param in name "f" explicit_type "long"
	  param in name "e" explicit_type "int"
	  param inout name "isDenormalized" explicit_type "boolean"
	  param inout name "mantissaIsZero" explicit_type "boolean"
	  param in name "p" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 158363 "Runtime"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Allows Java applications to interface with the environment in which they are
running. Applications can not create an instance of this class, but they can
get a singleton instance by invoking {@link #getRuntime()}.

@see System"
      classrelation 203035 // mRuntime (<unidirectional association>)
	relation 203035 --->
	  a role_name "mRuntime" init_value " new Runtime()" class_relation const_relation private
	    comment "
Holds the Singleton global instance of Runtime.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 203035 // mRuntime (<unidirectional association>)
	  b parent class_ref 158363 // Runtime
      end

      classrelation 203163 // mLibPaths (<unidirectional association>)
	relation 203163 --->
	  a role_name "mLibPaths" multiplicity "[]" const_relation private
	    comment "
Holds the library paths, used for native library lookup.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 203163 // mLibPaths (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 203291 // shutdownHooks (<unidirectional association>)
	relation 203291 --->
	  a role_name "shutdownHooks" init_value " new ArrayList<Thread>()" private
	    comment "
Holds the list of threads to run when the VM terminates

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Thread> ${name}${value};
"
	    classrelation_ref 203291 // shutdownHooks (<unidirectional association>)
	  b parent class_ref 131483 // List
      end

      attribute 186011 "finalizeOnExit"
	class_attribute private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Reflects whether finalization should be run for all objects
when the VM terminates.
"
      end

      attribute 186139 "shuttingDown"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Reflects whether we are already shutting down the VM.
"
      end

      attribute 186267 "tracingMethods"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Reflects whether we are tracing method calls.
"
      end

      operation 379291 "Runtime"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prevent this class from being instantiated."
      end

      operation 379419 "exec"
	public return_type class_ref 157083 // Process
	nparams 1
	  param inout name "progArray" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Executes the specified command and its arguments in a separate native
process. The new process inherits the environment of the caller. Calling
this method is equivalent to calling {@code exec(progArray, null, null)}.

@param progArray
           the array containing the program to execute as well as any
           arguments to the program.
@return the new {@code Process} object that represents the native
        process.
@throws IOException
            if the requested program can not be executed."
      end

      operation 379547 "exec"
	public return_type class_ref 157083 // Process
	nparams 2
	  param inout name "progArray" type class_ref 3399692 // String
	  param inout name "envp" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Executes the specified command and its arguments in a separate native
process. The new process uses the environment provided in {@code envp}.
Calling this method is equivalent to calling
{@code exec(progArray, envp, null)}.

@param progArray
           the array containing the program to execute as well as any
           arguments to the program.
@param envp
           the array containing the environment to start the new process
           in.
@return the new {@code Process} object that represents the native
        process.
@throws IOException
            if the requested program can not be executed."
      end

      operation 379675 "exec"
	public return_type class_ref 157083 // Process
	nparams 3
	  param inout name "progArray" type class_ref 3399692 // String
	  param inout name "envp" type class_ref 3399692 // String
	  param inout name "directory" type class_ref 135579 // File
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Executes the specified command and its arguments in a separate native
process. The new process uses the environment provided in {@code envp}
and the working directory specified by {@code directory}.

@param progArray
           the array containing the program to execute as well as any
           arguments to the program.
@param envp
           the array containing the environment to start the new process
           in.
@param directory
           the directory in which to execute the program. If {@code null},
           execute if in the same directory as the parent process.
@return the new {@code Process} object that represents the native
        process.
@throws IOException
            if the requested program can not be executed."
      end

      operation 379803 "exec"
	public return_type class_ref 157083 // Process
	nparams 1
	  param inout name "prog" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Executes the specified program in a separate native process. The new
process inherits the environment of the caller. Calling this method is
equivalent to calling {@code exec(prog, null, null)}.

@param prog
           the name of the program to execute.
@return the new {@code Process} object that represents the native
        process.
@throws IOException
            if the requested program can not be executed."
      end

      operation 379931 "exec"
	public return_type class_ref 157083 // Process
	nparams 2
	  param inout name "prog" type class_ref 3399692 // String
	  param inout name "envp" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Executes the specified program in a separate native process. The new
process uses the environment provided in {@code envp}. Calling this
method is equivalent to calling {@code exec(prog, envp, null)}.

@param prog
           the name of the program to execute.
@param envp
           the array containing the environment to start the new process
           in.
@return the new {@code Process} object that represents the native
        process.
@throws IOException
            if the requested program can not be executed."
      end

      operation 380059 "exec"
	public return_type class_ref 157083 // Process
	nparams 3
	  param inout name "prog" type class_ref 3399692 // String
	  param inout name "envp" type class_ref 3399692 // String
	  param inout name "directory" type class_ref 135579 // File
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Executes the specified program in a separate native process. The new
process uses the environment provided in {@code envp} and the working
directory specified by {@code directory}.

@param prog
           the name of the program to execute.
@param envp
           the array containing the environment to start the new process
           in.
@param directory
           the directory in which to execute the program. If {@code null},
           execute if in the same directory as the parent process.
@return the new {@code Process} object that represents the native
        process.
@throws IOException
            if the requested program can not be executed."
      end

      operation 380187 "exit"
	public explicit_return_type "void"
	nparams 1
	  param in name "code" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Causes the VM to stop running and the program to exit.
If {@link #runFinalizersOnExit(boolean)} has been previously invoked with a
{@code true} argument, then all objects will be properly
garbage-collected and finalized first.
Use 0 to signal success to the calling process and 1 to signal failure.
This method is unlikely to be useful to an Android application."
      end

      operation 380315 "gc"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
	comment "Indicates to the VM that it would be a good time to run the
garbage collector. Note that this is a hint only. There is no guarantee
that the garbage collector will actually be run."
      end

      operation 380443 "getRuntime"
	class_operation public return_type class_ref 158363 // Runtime
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the single {@code Runtime} instance for the current application."
      end

      operation 380571 "load"
	public explicit_return_type "void"
	nparams 1
	  param inout name "pathName" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Loads and links the dynamic library that is identified through the
specified path. This method is similar to {@link #loadLibrary(String)},
but it accepts a full path specification whereas {@code loadLibrary} just
accepts the name of the library to load.

@param pathName
           the absolute (platform dependent) path to the library to load.
@throws UnsatisfiedLinkError
            if the library can not be loaded."
      end

      operation 380699 "load"
	package explicit_return_type "void"
	nparams 2
	  param inout name "pathName" type class_ref 3399692 // String
	  param inout name "loader" type class_ref 138523 // ClassLoader
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Loads and links the given library without security checks."
      end

      operation 380827 "loadLibrary"
	public explicit_return_type "void"
	nparams 1
	  param inout name "libName" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Loads and links the library with the specified name. The mapping of the
specified library name to the full path for loading the library is
implementation-dependent.

@param libName
           the name of the library to load.
@throws UnsatisfiedLinkError
            if the library can not be loaded."
      end

      operation 380955 "loadLibrary"
	package explicit_return_type "void"
	nparams 2
	  param inout name "libraryName" type class_ref 3399692 // String
	  param inout name "loader" type class_ref 138523 // ClassLoader
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Searches for a library, then loads and links it without security checks."
      end

      operation 381083 "nativeExit"
	class_operation private explicit_return_type "void"
	nparams 1
	  param in name "code" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 381211 "doLoad"
	private return_type class_ref 3399692 // String
	nparams 2
	  param inout name "name" type class_ref 3399692 // String
	  param inout name "loader" type class_ref 138523 // ClassLoader
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 381339 "nativeLoad"
	class_operation private return_type class_ref 3399692 // String
	nparams 3
	  param inout name "filename" type class_ref 3399692 // String
	  param inout name "loader" type class_ref 138523 // ClassLoader
	  param inout name "ldLibraryPath" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws};
"
	
	
	
	comment " TODO: should be synchronized, but dalvik doesn't support synchronized internal natives."
      end

      operation 381467 "runFinalization"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Provides a hint to the VM that it would be useful to attempt
to perform any outstanding object finalization."
      end

      operation 381595 "runFinalizersOnExit"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "run" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Sets the flag that indicates whether all objects are finalized when the
VM is about to exit. Note that all finalization which occurs
when the system is exiting is performed after all running threads have
been terminated.

@param run
           {@code true} to enable finalization on exit, {@code false} to
           disable it.
@deprecated This method is unsafe."
      end

      operation 381723 "traceInstructions"
	public explicit_return_type "void"
	nparams 1
	  param inout name "enable" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Switches the output of debug information for instructions on or off.
On Android, this method does nothing."
      end

      operation 381851 "traceMethodCalls"
	public explicit_return_type "void"
	nparams 1
	  param inout name "enable" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Switches the output of debug information for methods on or off."
      end

      operation 381979 "getLocalizedInputStream"
	public return_type class_ref 131867 // InputStream
	nparams 1
	  param inout name "stream" type class_ref 131867 // InputStream
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Returns the localized version of the specified input stream. The input
stream that is returned automatically converts all characters from the
local character set to Unicode after reading them from the underlying
stream.

@param stream
           the input stream to localize.
@return the localized input stream.
@deprecated Use {@link InputStreamReader}."
      end

      operation 382107 "getLocalizedOutputStream"
	public return_type class_ref 132635 // OutputStream
	nparams 1
	  param inout name "stream" type class_ref 132635 // OutputStream
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Returns the localized version of the specified output stream. The output
stream that is returned automatically converts all characters from
Unicode to the local character set before writing them to the underlying
stream.

@param stream
           the output stream to localize.
@return the localized output stream.
@deprecated Use {@link OutputStreamWriter}."
      end

      operation 382235 "addShutdownHook"
	public explicit_return_type "void"
	nparams 1
	  param inout name "hook" type class_ref 1201420 // Thread
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Registers a VM shutdown hook. A shutdown hook is a
{@code Thread} that is ready to run, but has not yet been started. All
registered shutdown hooks will be executed when the VM
terminates normally (typically when the {@link #exit(int)} method is called).

<p><i>Note that on Android, the application lifecycle does not include VM termination,
so calling this method will not ensure that your code is run</i>. Instead, you should
use the most appropriate lifecycle notification ({@code Activity.onPause}, say).

<p>Shutdown hooks are run concurrently and in an unspecified order. Hooks
failing due to an unhandled exception are not a problem, but the stack
trace might be printed to the console. Once initiated, the whole shutdown
process can only be terminated by calling {@code halt()}.

<p>If {@link #runFinalizersOnExit(boolean)} has been called with a {@code
true} argument, garbage collection and finalization will take place after
all hooks are either finished or have failed. Then the VM
terminates.

<p>It is recommended that shutdown hooks do not do any time-consuming
activities, in order to not hold up the shutdown process longer than
necessary.

@param hook
           the shutdown hook to register.
@throws IllegalArgumentException
            if the hook has already been started or if it has already
            been registered.
@throws IllegalStateException
            if the VM is already shutting down."
      end

      operation 382363 "removeShutdownHook"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "hook" type class_ref 1201420 // Thread
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unregisters a previously registered VM shutdown hook.

@param hook
           the shutdown hook to remove.
@return {@code true} if the hook has been removed successfully; {@code
        false} otherwise.
@throws IllegalStateException
            if the VM is already shutting down."
      end

      operation 382491 "halt"
	public explicit_return_type "void"
	nparams 1
	  param in name "code" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Causes the VM to stop running, and the program to exit with the given return code.
Use 0 to signal success to the calling process and 1 to signal failure.
Neither shutdown hooks nor finalizers are run before exiting.
This method is unlikely to be useful to an Android application."
      end

      operation 382619 "availableProcessors"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of processor cores available to the VM, at least 1.
Traditionally this returned the number currently online,
but many mobile devices are able to take unused cores offline to
save power, so releases newer than Android 4.2 (Jelly Bean) return the maximum number of
cores that could be made available if there were no power or heat
constraints."
      end

      operation 382747 "freeMemory"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
	comment "Returns the number of bytes currently available on the heap without expanding the heap. See
{@link #totalMemory} for the heap's current size. When these bytes are exhausted, the heap
may expand. See {@link #maxMemory} for that limit."
      end

      operation 382875 "totalMemory"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
	comment "Returns the number of bytes taken by the heap at its current size. The heap may expand or
contract over time, as the number of live objects increases or decreases. See
{@link #maxMemory} for the maximum heap size, and {@link #freeMemory} for an idea of how much
the heap could currently contract."
      end

      operation 383003 "maxMemory"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
	comment "Returns the maximum number of bytes the heap can expand to. See {@link #totalMemory} for the
current number of bytes taken by the heap, and {@link #freeMemory} for the current number of
those bytes actually used by live objects."
      end
    end

    class 158491 "RuntimePermission"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Legacy security code; do not use."
      classrelation 203419 // <generalisation>
	relation 203419 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 203419 // <generalisation>
	  b parent class_ref 146075 // BasicPermission
      end

      operation 383131 "RuntimePermission"
	public explicit_return_type ""
	nparams 1
	  param inout name "permissionName" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 383259 "RuntimePermission"
	public explicit_return_type ""
	nparams 2
	  param inout name "name" type class_ref 3399692 // String
	  param inout name "actions" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 383387 "getActions"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 383515 "implies"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "permission" type class_ref 141467 // Permission
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 158619 "SecurityManager"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Legacy security code; do not use.

<p>Security managers do <strong>not</strong> provide a
secure environment for executing untrusted code. Untrusted code cannot be
safely isolated within the Dalvik VM."
      attribute 186523 "inCheck"
	protected explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@deprecated Use {@link #checkPermission}
"
      end

      operation 384155 "SecurityManager"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 384283 "checkAccept"
	public explicit_return_type "void"
	nparams 2
	  param inout name "host" type class_ref 3399692 // String
	  param in name "port" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 384411 "checkAccess"
	public explicit_return_type "void"
	nparams 1
	  param inout name "thread" type class_ref 1201420 // Thread
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 384539 "checkAccess"
	public explicit_return_type "void"
	nparams 1
	  param inout name "group" type class_ref 158747 // ThreadGroup
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 384667 "checkConnect"
	public explicit_return_type "void"
	nparams 2
	  param inout name "host" type class_ref 3399692 // String
	  param in name "port" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 384795 "checkConnect"
	public explicit_return_type "void"
	nparams 3
	  param inout name "host" type class_ref 3399692 // String
	  param in name "port" explicit_type "int"
	  param inout name "context" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 384923 "checkCreateClassLoader"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 385051 "checkDelete"
	public explicit_return_type "void"
	nparams 1
	  param inout name "file" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 385179 "checkExec"
	public explicit_return_type "void"
	nparams 1
	  param inout name "cmd" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 385307 "checkExit"
	public explicit_return_type "void"
	nparams 1
	  param in name "status" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 385435 "checkLink"
	public explicit_return_type "void"
	nparams 1
	  param inout name "libName" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 385563 "checkListen"
	public explicit_return_type "void"
	nparams 1
	  param in name "port" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 385691 "checkMemberAccess"
	public explicit_return_type "void"
	nparams 2
	  param inout name "cls" type class_ref 3421708 // Class
	  param in name "type" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 385819 "checkMulticast"
	public explicit_return_type "void"
	nparams 1
	  param inout name "maddr" type class_ref 158875 // InetAddress
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 385947 "checkMulticast"
	public explicit_return_type "void"
	nparams 2
	  param inout name "maddr" type class_ref 158875 // InetAddress
	  param in name "ttl" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated use {@link #checkMulticast(java.net.InetAddress)}"
      end

      operation 386075 "checkPackageAccess"
	public explicit_return_type "void"
	nparams 1
	  param inout name "packageName" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 386203 "checkPackageDefinition"
	public explicit_return_type "void"
	nparams 1
	  param inout name "packageName" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 386331 "checkPropertiesAccess"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 386459 "checkPropertyAccess"
	public explicit_return_type "void"
	nparams 1
	  param inout name "key" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 386587 "checkRead"
	public explicit_return_type "void"
	nparams 1
	  param inout name "fd" type class_ref 140699 // FileDescriptor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 386715 "checkRead"
	public explicit_return_type "void"
	nparams 1
	  param inout name "file" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 386843 "checkRead"
	public explicit_return_type "void"
	nparams 2
	  param inout name "file" type class_ref 3399692 // String
	  param inout name "context" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 386971 "checkSecurityAccess"
	public explicit_return_type "void"
	nparams 1
	  param inout name "target" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 387099 "checkSetFactory"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 387227 "checkTopLevelWindow"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "window" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 387355 "checkSystemClipboardAccess"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 387483 "checkAwtEventQueueAccess"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 387611 "checkPrintJobAccess"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 387739 "checkWrite"
	public explicit_return_type "void"
	nparams 1
	  param inout name "fd" type class_ref 140699 // FileDescriptor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 387867 "checkWrite"
	public explicit_return_type "void"
	nparams 1
	  param inout name "file" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 387995 "getInCheck"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated Use {@link #checkPermission}."
      end

      operation 388123 "getClassContext"
	protected return_type class_ref 3421708 // Class
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 388251 "currentClassLoader"
	protected return_type class_ref 138523 // ClassLoader
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated Use {@link #checkPermission}."
      end

      operation 388379 "classLoaderDepth"
	protected explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated Use {@link #checkPermission}."
      end

      operation 388507 "currentLoadedClass"
	protected return_type class_ref 3421708 // Class
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated Use {@link #checkPermission}."
      end

      operation 388635 "classDepth"
	protected explicit_return_type "int"
	nparams 1
	  param inout name "name" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated Use {@link #checkPermission}."
      end

      operation 388763 "inClass"
	protected explicit_return_type "boolean"
	nparams 1
	  param inout name "name" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated Use {@link #checkPermission}."
      end

      operation 388891 "inClassLoader"
	protected explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated Use {@link #checkPermission}"
      end

      operation 389019 "getThreadGroup"
	public return_type class_ref 158747 // ThreadGroup
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current thread's thread group."
      end

      operation 389147 "getSecurityContext"
	public return_type class_ref 3401484 // Object
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 389275 "checkPermission"
	public explicit_return_type "void"
	nparams 1
	  param inout name "permission" type class_ref 141467 // Permission
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 389403 "checkPermission"
	public explicit_return_type "void"
	nparams 2
	  param inout name "permission" type class_ref 141467 // Permission
	  param inout name "context" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 158747 "ThreadGroup"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "{@code ThreadGroup} is a means of organizing threads into a hierarchical structure.
This class is obsolete. See <i>Effective Java</i> Item 73, \"Avoid thread groups\" for details.
@see Thread"
      classrelation 210459 // <realization>
	relation 210459 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 210459 // <realization>
	  b parent class_ref 161435 // UncaughtExceptionHandler
      end

      classrelation 210587 // name (<unidirectional association>)
	relation 210587 --->
	  a role_name "name" private
	    comment " Name of this ThreadGroup
 VM needs this field name for debugging.
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 210587 // name (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      attribute 193435 "maxPriority"
	private explicit_type "int"
	init_value " Thread.MAX_PRIORITY"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Maximum priority for Threads inside this ThreadGroup"
      end

      classrelation 210715 // parent (<unidirectional association>)
	relation 210715 --->
	  a role_name "parent" const_relation package
	    comment " The ThreadGroup to which this ThreadGroup belongs
 VM needs this field name for debugging.
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 210715 // parent (<unidirectional association>)
	  b parent class_ref 158747 // ThreadGroup
      end

      classrelation 210843 // threadRefs (<unidirectional association>)
	relation 210843 --->
	  a role_name "threadRefs" init_value " new ArrayList<WeakReference<Thread>>(5)" const_relation private
	    comment "
Weak references to the threads in this group.
Access is guarded by synchronizing on this field.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<WeakReference<Thread>> ${name}${value};
"
	    classrelation_ref 210843 // threadRefs (<unidirectional association>)
	  b parent class_ref 131483 // List
      end

      classrelation 210971 // threads (<unidirectional association>)
	relation 210971 --->
	  a role_name "threads" init_value " CollectionUtils.dereferenceIterable(threadRefs, true)" const_relation private
	    comment "
View of the threads.
Access is guarded by synchronizing on threadRefs.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Thread> ${name}${value};
"
	    classrelation_ref 210971 // threads (<unidirectional association>)
	  b parent class_ref 155675 // Iterable
      end

      classrelation 211099 // groups (<unidirectional association>)
	relation 211099 --->
	  a role_name "groups" init_value " new ArrayList<ThreadGroup>(3)" const_relation private
	    comment "
Thread groups. Access is guarded by synchronizing on this field.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<ThreadGroup> ${name}${value};
"
	    classrelation_ref 211099 // groups (<unidirectional association>)
	  b parent class_ref 131483 // List
      end

      attribute 193563 "isDaemon"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Whether this ThreadGroup is a daemon ThreadGroup or not"
      end

      attribute 193691 "isDestroyed"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Whether this ThreadGroup has already been destroyed or not"
      end

      classrelation 211227 // mSystem (<unidirectional association>)
	relation 211227 --->
	  a role_name "mSystem" init_value " new ThreadGroup()" class_relation const_relation package
	    comment " the VM uses these directly; do not rename 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 211227 // mSystem (<unidirectional association>)
	  b parent class_ref 158747 // ThreadGroup
      end

      classrelation 211355 // mMain (<unidirectional association>)
	relation 211355 --->
	  a role_name "mMain" init_value " new ThreadGroup(mSystem, \"main\")" class_relation const_relation package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 211355 // mMain (<unidirectional association>)
	  b parent class_ref 158747 // ThreadGroup
      end

      operation 447387 "ThreadGroup"
	public explicit_return_type ""
	nparams 1
	  param inout name "name" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code ThreadGroup} with the given name. The new {@code ThreadGroup}
will be child of the {@code ThreadGroup} to which the calling thread belongs.

@param name the name
@see Thread#currentThread"
      end

      operation 447515 "ThreadGroup"
	public explicit_return_type ""
	nparams 2
	  param inout name "parent" type class_ref 158747 // ThreadGroup
	  param inout name "name" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code ThreadGroup} with the given name, as a child of the
given {@code ThreadGroup}.

@param parent the parent
@param name the name
@throws NullPointerException if {@code parent == null}
@throws IllegalThreadStateException if {@code parent} has been
        destroyed already"
      end

      operation 447643 "ThreadGroup"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initialize the special \"system\" ThreadGroup. Was \"main\" in Harmony,
but we have an additional group above that in Android."
      end

      operation 447771 "activeCount"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of running {@code Thread}s which are children of this thread group,
directly or indirectly.

@return the number of children"
      end

      operation 447899 "activeGroupCount"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of {@code ThreadGroup}s which are children of this group,
directly or indirectly.

@return the number of children"
      end

      operation 448027 "add"
	private explicit_return_type "void"
	nparams 1
	  param inout name "g" type class_ref 158747 // ThreadGroup
	nexceptions 1
	  exception class_ref 154395 // IllegalThreadStateException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a {@code ThreadGroup} to this thread group.

@param g ThreadGroup to add
@throws IllegalThreadStateException if this group has been destroyed already"
      end

      operation 448155 "allowThreadSuspension"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "b" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Does nothing. The definition of this method depends on the deprecated
method {@link #suspend()}. The exact behavior of this call was never
specified.

@param b Used to control low memory implicit suspension
@return {@code true} (always)

@deprecated Required deprecated method suspend()."
      end

      operation 448283 "checkAccess"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Does nothing."
      end

      operation 448411 "destroy"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Destroys this thread group and recursively all its subgroups. It is only legal
to destroy a {@code ThreadGroup} that has no threads in it. Any daemon
{@code ThreadGroup} is destroyed automatically when it becomes empty (no threads
or thread groups in it).

@throws IllegalThreadStateException if this thread group or any of its
        subgroups has been destroyed already or if it still contains
        threads."
      end

      operation 448539 "destroyIfEmptyDaemon"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Auxiliary method that destroys this thread group and recursively all its
subgroups if this is a daemon ThreadGroup.

@see #destroy
@see #setDaemon
@see #isDaemon"
      end

      operation 448667 "enumerate"
	public explicit_return_type "int"
	nparams 1
	  param inout name "threads" type class_ref 1201420 // Thread
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Iterates over all active threads in this group (and its sub-groups) and
stores the threads in the given array. Returns when the array is full or
no more threads remain, whichever happens first.

<p>Note that this method will silently ignore any threads that don't fit in the
supplied array.

@param threads the array into which the {@code Thread}s will be copied
@return the number of {@code Thread}s that were copied"
      end

      operation 448795 "enumerate"
	public explicit_return_type "int"
	nparams 2
	  param inout name "threads" type class_ref 1201420 // Thread
	  param inout name "recurse" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Iterates over all active threads in this group (and, optionally, its
sub-groups) and stores the threads in the given array. Returns when the
array is full or no more threads remain, whichever happens first.

<p>Note that this method will silently ignore any threads that don't fit in the
supplied array.

@param threads the array into which the {@code Thread}s will be copied
@param recurse indicates whether {@code Thread}s in subgroups should be
       recursively copied as well
@return the number of {@code Thread}s that were copied"
      end

      operation 448923 "enumerate"
	public explicit_return_type "int"
	nparams 1
	  param inout name "groups" type class_ref 158747 // ThreadGroup
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Iterates over all thread groups in this group (and its sub-groups) and
and stores the groups in the given array. Returns when the array is full
or no more groups remain, whichever happens first.

<p>Note that this method will silently ignore any thread groups that don't fit in the
supplied array.

@param groups the array into which the {@code ThreadGroup}s will be copied
@return the number of {@code ThreadGroup}s that were copied"
      end

      operation 449051 "enumerate"
	public explicit_return_type "int"
	nparams 2
	  param inout name "groups" type class_ref 158747 // ThreadGroup
	  param inout name "recurse" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Iterates over all thread groups in this group (and, optionally, its
sub-groups) and stores the groups in the given array. Returns when
the array is full or no more groups remain, whichever happens first.

<p>Note that this method will silently ignore any thread groups that don't fit in the
supplied array.

@param groups the array into which the {@code ThreadGroup}s will be copied
@param recurse indicates whether {@code ThreadGroup}s in subgroups should be
       recursively copied as well or not
@return the number of {@code ThreadGroup}s that were copied"
      end

      operation 449179 "enumerateGeneric"
	private explicit_return_type "int"
	nparams 4
	  param inout name "enumeration" type class_ref 3401484 // Object
	  param inout name "recurse" explicit_type "boolean"
	  param in name "enumerationIndex" explicit_type "int"
	  param inout name "enumeratingThreads" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copies into <param>enumeration</param> starting at
<param>enumerationIndex</param> all Threads or ThreadGroups in the
receiver. If <param>recurse</param> is true, recursively enumerate the
elements in subgroups.

If the array passed as parameter is too small no exception is thrown -
the extra elements are simply not copied.

@param enumeration array into which the elements will be copied
@param recurse Indicates whether subgroups should be enumerated or not
@param enumerationIndex Indicates in which position of the enumeration
       array we are
@param enumeratingThreads Indicates whether we are enumerating Threads or
       ThreadGroups
@return How many elements were enumerated/copied over"
      end

      operation 449307 "getMaxPriority"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the maximum allowed priority for a {@code Thread} in this thread group.

@return the maximum priority

@see #setMaxPriority"
      end

      operation 449435 "getName"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of this thread group.

@return the group's name"
      end

      operation 449563 "getParent"
	public return_type class_ref 158747 // ThreadGroup
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns this thread group's parent {@code ThreadGroup}. It can be null if this
is the the root ThreadGroup.

@return the parent"
      end

      operation 449691 "interrupt"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Interrupts every {@code Thread} in this group and recursively in all its
subgroups.

@see Thread#interrupt"
      end

      operation 449819 "isDaemon"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks whether this thread group is a daemon {@code ThreadGroup}.

@return true if this thread group is a daemon {@code ThreadGroup}

@see #setDaemon
@see #destroy"
      end

      operation 449947 "isDestroyed"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks whether this thread group has already been destroyed.

@return true if this thread group has already been destroyed
@see #destroy"
      end

      operation 450075 "list"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Outputs to {@code System.out} a text representation of the
hierarchy of {@code Thread}s and {@code ThreadGroup}s in this thread group (and recursively).
Proper indentation is used to show the nesting of groups inside groups
and threads inside groups."
      end

      operation 450203 "list"
	private explicit_return_type "void"
	nparams 1
	  param in name "levels" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Outputs to {@code System.out}a text representation of the
hierarchy of Threads and ThreadGroups in this thread group (and recursively).
The indentation will be four spaces per level of nesting.

@param levels How many levels of nesting, so that proper indentation can
be output."
      end

      operation 450331 "indent"
	private explicit_return_type "void"
	nparams 1
	  param in name "levels" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 450459 "parentOf"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "g" type class_ref 158747 // ThreadGroup
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks whether this thread group is a direct or indirect parent group of a
given {@code ThreadGroup}.

@param g the potential child {@code ThreadGroup}
@return true if this thread group is parent of {@code g}"
      end

      operation 450587 "remove"
	private explicit_return_type "void"
	nparams 1
	  param inout name "g" type class_ref 158747 // ThreadGroup
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes an immediate subgroup.

@param g ThreadGroup to remove

@see #add(Thread)
@see #add(ThreadGroup)"
      end

      operation 450715 "resume"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"deprecation\")
    @Deprecated
"
	
	
	
	comment "Resumes every thread in this group and recursively in all its
subgroups.

@see Thread#resume
@see #suspend

@deprecated Requires deprecated method Thread.resume()."
      end

      operation 450843 "setDaemon"
	public explicit_return_type "void"
	nparams 1
	  param inout name "isDaemon" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether this is a daemon {@code ThreadGroup} or not. Daemon
thread groups are automatically destroyed when they become empty.

@param isDaemon the new value
@see #isDaemon
@see #destroy"
      end

      operation 450971 "setMaxPriority"
	public explicit_return_type "void"
	nparams 1
	  param in name "newMax" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Configures the maximum allowed priority for a {@code Thread} in this group and
recursively in all its subgroups.

<p>A caller can never increase the maximum priority of a thread group.
Such an attempt will not result in an exception, it will
simply leave the thread group with its current maximum priority.

@param newMax the new maximum priority to be set

@throws IllegalArgumentException if the new priority is greater than
        Thread.MAX_PRIORITY or less than Thread.MIN_PRIORITY

@see #getMaxPriority"
      end

      operation 451099 "stop"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"deprecation\")
    @Deprecated
"
	
	
	
	comment "Stops every thread in this group and recursively in all its subgroups.

@see Thread#stop()
@see Thread#stop(Throwable)
@see ThreadDeath

@deprecated Requires deprecated method Thread.stop()."
      end

      operation 451227 "stopHelper"
	private explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"deprecation\")
"
	
	
	
      end

      operation 451355 "suspend"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"deprecation\")
    @Deprecated
"
	
	
	
	comment "Suspends every thread in this group and recursively in all its
subgroups.

@see Thread#suspend
@see #resume

@deprecated Requires deprecated method Thread.suspend()."
      end

      operation 451483 "suspendHelper"
	private explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"deprecation\")
"
	
	
	
      end

      operation 451611 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 451739 "uncaughtException"
	public explicit_return_type "void"
	nparams 2
	  param inout name "t" type class_ref 1201420 // Thread
	  param inout name "e" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Handles uncaught exceptions. Any uncaught exception in any {@code Thread}
is forwarded to the thread's {@code ThreadGroup} by invoking this
method.

<p>New code should use {@link Thread#setUncaughtExceptionHandler} instead of thread groups.

@param t the Thread that terminated with an uncaught exception
@param e the uncaught exception itself"
      end

      operation 451867 "addThread"
	package explicit_return_type "void"
	nparams 1
	  param inout name "thread" type class_ref 1201420 // Thread
	nexceptions 1
	  exception class_ref 154395 // IllegalThreadStateException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called by the Thread constructor."
      end

      operation 451995 "removeThread"
	package explicit_return_type "void"
	nparams 1
	  param inout name "thread" type class_ref 1201420 // Thread
	nexceptions 1
	  exception class_ref 154395 // IllegalThreadStateException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called by the VM when a Thread dies."
      end
    end

    class 159003 "Short"
      visibility public 
      nactuals 1
      actual class class_ref 139675 // Comparable
        rank 0 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      java_annotation "@FindBugsSuppressWarnings(\"DM_NUMBER_CTOR\")
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The wrapper for the primitive type {@code short}.

@see java.lang.Number
@since 1.1"
      classrelation 203675 // <generalisation>
	relation 203675 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 203675 // <generalisation>
	  b parent class_ref 148379 // Number
      end

      classrelation 203803 // <realization>
	relation 203803 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 203803 // <realization>
	  b parent class_ref 139675 // Comparable
      end

      attribute 186651 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 7515723908773894738L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 186779 "value"
	const_attribute private explicit_type "short"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The value which the receiver represents.
"
      end

      attribute 186907 "MAX_VALUE"
	class_attribute const_attribute public explicit_type "short"
	init_value " (short) 0x7FFF"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Constant for the maximum {@code short} value, 2<sup>15</sup>-1.
"
      end

      attribute 187035 "MIN_VALUE"
	class_attribute const_attribute public explicit_type "short"
	init_value " (short) 0x8000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Constant for the minimum {@code short} value, -2<sup>15</sup>.
"
      end

      attribute 187163 "SIZE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 16"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Constant for the number of bits needed to represent a {@code short} in
two's complement form.

@since 1.5
"
      end

      classrelation 203931 // TYPE (<unidirectional association>)
	relation 203931 --->
	  a role_name "TYPE" init_value " (Class<Short>) short[].class.getComponentType()" class_relation const_relation public
	    comment "
The {@link Class} object that represents the primitive type {@code
short}.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Short> ${name}${value};
"
	    java_annotation "@SuppressWarnings(\"unchecked\")
"
	    classrelation_ref 203931 // TYPE (<unidirectional association>)
	  b parent class_ref 3421708 // Class
      end

      operation 389531 "Short"
	public explicit_return_type ""
	nparams 1
	  param inout name "string" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 148507 // NumberFormatException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Note: Short.TYPE can't be set to \"short.class\", since *that* is
 defined to be \"java.lang.Short.TYPE\";

Constructs a new {@code Short} from the specified string.

@param string
           the string representation of a short value.
@throws NumberFormatException
            if {@code string} cannot be parsed as a short value.
@see #parseShort(String)"
      end

      operation 389659 "Short"
	public explicit_return_type ""
	nparams 1
	  param in name "value" explicit_type "short"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code Short} with the specified primitive short value.

@param value
           the primitive short value to store in the new instance."
      end

      operation 389787 "byteValue"
	public explicit_return_type "byte"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 389915 "compareTo"
	public explicit_return_type "int"
	nparams 1
	  param inout name "object" type class_ref 159003 // Short
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares this object to the specified short object to determine their
relative order.

@param object
           the short object to compare this object to.
@return a negative value if the value of this short is less than the
        value of {@code object}; 0 if the value of this short and the
        value of {@code object} are equal; a positive value if the value
        of this short is greater than the value of {@code object}.
@throws NullPointerException
            if {@code object} is null.
@see java.lang.Comparable
@since 1.2"
      end

      operation 390043 "compare"
	class_operation public explicit_return_type "int"
	nparams 2
	  param in name "lhs" explicit_type "long"
	  param in name "rhs" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares two {@code short} values.
@return 0 if lhs = rhs, less than 0 if lhs &lt; rhs, and greater than 0 if lhs &gt; rhs.
@since 1.7
@hide 1.7"
      end

      operation 390171 "decode"
	class_operation public return_type class_ref 159003 // Short
	nparams 1
	  param inout name "string" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 148507 // NumberFormatException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses the specified string and returns a {@code Short} instance if the
string can be decoded into a short value. The string may be an optional
minus sign \"-\" followed by a hexadecimal (\"0x...\" or \"#...\"), octal
(\"0...\"), or decimal (\"...\") representation of a short.

@param string
           a string representation of a short value.
@return a {@code Short} containing the value represented by
        {@code string}.
@throws NumberFormatException
            if {@code string} cannot be parsed as a short value."
      end

      operation 390299 "doubleValue"
	public explicit_return_type "double"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 390427 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "object" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Compares this instance with the specified object and indicates if they
are equal. In order to be equal, {@code object} must be an instance of
{@code Short} and have the same short value as this object.

@param object
           the object to compare this short with.
@return {@code true} if the specified object is equal to this
        {@code Short}; {@code false} otherwise."
      end

      operation 390555 "floatValue"
	public explicit_return_type "float"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 390683 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 390811 "intValue"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 390939 "longValue"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 391067 "parseShort"
	class_operation public explicit_return_type "short"
	nparams 1
	  param inout name "string" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 148507 // NumberFormatException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses the specified string as a signed decimal short value. The ASCII
character \\u002d ('-') is recognized as the minus sign.

@param string
           the string representation of a short value.
@return the primitive short value represented by {@code string}.
@throws NumberFormatException
            if {@code string} cannot be parsed as a short value."
      end

      operation 391195 "parseShort"
	class_operation public explicit_return_type "short"
	nparams 2
	  param inout name "string" type class_ref 3399692 // String
	  param in name "radix" explicit_type "int"
	nexceptions 1
	  exception class_ref 148507 // NumberFormatException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses the specified string as a signed short value using the specified
radix. The ASCII character \\u002d ('-') is recognized as the minus sign.

@param string
           the string representation of a short value.
@param radix
           the radix to use when parsing.
@return the primitive short value represented by {@code string} using
        {@code radix}.
@throws NumberFormatException
            if {@code string} cannot be parsed as a short value, or
            {@code radix < Character.MIN_RADIX ||
            radix > Character.MAX_RADIX}."
      end

      operation 391323 "shortValue"
	public explicit_return_type "short"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Gets the primitive value of this short.

@return this object's primitive value."
      end

      operation 391451 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 391579 "toString"
	class_operation public return_type class_ref 3399692 // String
	nparams 1
	  param in name "value" explicit_type "short"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string containing a concise, human-readable description of the
specified short value with radix 10.

@param value
            the short to convert to a string.
@return a printable representation of {@code value}."
      end

      operation 391707 "valueOf"
	class_operation public return_type class_ref 159003 // Short
	nparams 1
	  param inout name "string" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 148507 // NumberFormatException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses the specified string as a signed decimal short value.

@param string
           the string representation of a short value.
@return a {@code Short} instance containing the short value represented
        by {@code string}.
@throws NumberFormatException
            if {@code string} cannot be parsed as a short value.
@see #parseShort(String)"
      end

      operation 391835 "valueOf"
	class_operation public return_type class_ref 159003 // Short
	nparams 2
	  param inout name "string" type class_ref 3399692 // String
	  param in name "radix" explicit_type "int"
	nexceptions 1
	  exception class_ref 148507 // NumberFormatException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses the specified string as a signed short value using the specified
radix.

@param string
           the string representation of a short value.
@param radix
           the radix to use when parsing.
@return a {@code Short} instance containing the short value represented
        by {@code string} using {@code radix}.
@throws NumberFormatException
            if {@code string} cannot be parsed as a short value, or
            {@code radix < Character.MIN_RADIX ||
            radix > Character.MAX_RADIX}.
@see #parseShort(String, int)"
      end

      operation 391963 "reverseBytes"
	class_operation public explicit_return_type "short"
	nparams 1
	  param in name "s" explicit_type "short"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reverses the bytes of the specified short.

@param s
           the short value for which to reverse bytes.
@return the reversed value.
@since 1.5"
      end

      operation 392091 "valueOf"
	class_operation public return_type class_ref 159003 // Short
	nparams 1
	  param in name "s" explicit_type "short"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@code Short} instance for the specified short value.
<p>
If it is not necessary to get a new {@code Short} instance, it is
recommended to use this method instead of the constructor, since it
maintains a cache of instances which may result in better performance.

@param s
           the short value to store in the instance.
@return a {@code Short} instance containing {@code s}.
@since 1.5"
      end

      classrelation 204059 // SMALL_VALUES (<unidirectional association>)
	relation 204059 --->
	  a role_name "SMALL_VALUES" multiplicity "[]" init_value " new Short[256]" class_relation const_relation private
	    comment "
A cache of instances used by {@link Short#valueOf(short)} and auto-boxing.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 204059 // SMALL_VALUES (<unidirectional association>)
	  b parent class_ref 159003 // Short
      end

      extra_member 129179 "initialization"
	
	cpp "" ""
	java "  static {
        for (int i = -128; i < 128; i++) {
            SMALL_VALUES[i + 128] = new Short((short) i);
        }
    }"
	php ""
	python ""
	idl ""
      end
    end

    class 159131 "StackOverflowError"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Thrown when the depth of the stack of the running program exceeds some
platform or VM specific limit. Typically, this will occur only
when a program becomes infinitely recursive, but it can also occur in
correctly written (but deeply recursive) programs."
      classrelation 204187 // <generalisation>
	relation 204187 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 204187 // <generalisation>
	  b parent class_ref 155419 // VirtualMachineError
      end

      attribute 187291 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 8609175038441759607L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 392219 "StackOverflowError"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code StackOverflowError} that includes the current
stack trace."
      end

      operation 392347 "StackOverflowError"
	public explicit_return_type ""
	nparams 1
	  param inout name "detailMessage" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code StackOverflowError} with the current stack trace
and the specified detail message.

@param detailMessage
           the detail message for this exception."
      end
    end

    class 159259 "StrictMath"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Class StrictMath provides basic math constants and operations such as
trigonometric functions, hyperbolic functions, exponential, logarithms, etc.
<p>
In contrast to class {@link Math}, the methods in this class return exactly
the same results on all platforms. Algorithms based on these methods thus
behave the same (e.g. regarding numerical convergence) on all platforms,
complying with the slogan \"write once, run everywhere\". On the other side,
the implementation of class StrictMath may be less efficient than that of
class Math, as class StrictMath cannot utilize platform specific features
such as an extended precision math co-processors.
<p>
The methods in this class are specified using the \"Freely Distributable Math
Library\" (fdlibm), version 5.3.
<p>
<a href=\"http://www.netlib.org/fdlibm/\">http://www.netlib.org/fdlibm/</a>"
      attribute 187803 "E"
	class_attribute const_attribute public explicit_type "double"
	init_value " Math.E"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The double value closest to e, the base of the natural logarithm.
"
      end

      attribute 187931 "PI"
	class_attribute const_attribute public explicit_type "double"
	init_value " Math.PI"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The double value closest to pi, the ratio of a circle's circumference to
its diameter.
"
      end

      operation 393755 "StrictMath"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prevents this class from being instantiated."
      end

      operation 393883 "abs"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "d" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the absolute value of the argument.
<p>
Special cases:
<ul>
<li>{@code abs(-0.0) = +0.0}</li>
<li>{@code abs(+infinity) = +infinity}</li>
<li>{@code abs(-infinity) = +infinity}</li>
<li>{@code abs(NaN) = NaN}</li>
</ul>"
      end

      operation 394011 "abs"
	class_operation public explicit_return_type "float"
	nparams 1
	  param in name "f" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the absolute value of the argument.
<p>
Special cases:
<ul>
<li>{@code abs(-0.0) = +0.0}</li>
<li>{@code abs(+infinity) = +infinity}</li>
<li>{@code abs(-infinity) = +infinity}</li>
<li>{@code abs(NaN) = NaN}</li>
</ul>"
      end

      operation 394139 "abs"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "i" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the absolute value of the argument.
<p>
If the argument is {@code Integer.MIN_VALUE}, {@code Integer.MIN_VALUE}
is returned."
      end

      operation 394267 "abs"
	class_operation public explicit_return_type "long"
	nparams 1
	  param in name "l" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the absolute value of the argument.
<p>
If the argument is {@code Long.MIN_VALUE}, {@code Long.MIN_VALUE} is
returned."
      end

      operation 394395 "acos"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "d" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
	comment "Returns the closest double approximation of the arc cosine of the
argument within the range {@code [0..pi]}.
<p>
Special cases:
<ul>
<li>{@code acos((anything > 1) = NaN}</li>
<li>{@code acos((anything < -1) = NaN}</li>
<li>{@code acos(NaN) = NaN}</li>
</ul>

@param d
           the value to compute arc cosine of.
@return the arc cosine of the argument."
      end

      operation 394523 "asin"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "d" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
	comment "Returns the closest double approximation of the arc sine of the argument
within the range {@code [-pi/2..pi/2]}.
<p>
Special cases:
<ul>
<li>{@code asin((anything > 1)) = NaN}</li>
<li>{@code asin((anything < -1)) = NaN}</li>
<li>{@code asin(NaN) = NaN}</li>
</ul>

@param d
           the value whose arc sine has to be computed.
@return the arc sine of the argument."
      end

      operation 394651 "atan"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "d" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
	comment "Returns the closest double approximation of the arc tangent of the
argument within the range {@code [-pi/2..pi/2]}.
<p>
Special cases:
<ul>
<li>{@code atan(+0.0) = +0.0}</li>
<li>{@code atan(-0.0) = -0.0}</li>
<li>{@code atan(+infinity) = +pi/2}</li>
<li>{@code atan(-infinity) = -pi/2}</li>
<li>{@code atan(NaN) = NaN}</li>
</ul>

@param d
           the value whose arc tangent has to be computed.
@return the arc tangent of the argument."
      end

      operation 394779 "atan2"
	class_operation public explicit_return_type "double"
	nparams 2
	  param in name "y" explicit_type "double"
	  param in name "x" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
	comment "Returns the closest double approximation of the arc tangent of
{@code y/x} within the range {@code [-pi..pi]}. This is the angle of the
polar representation of the rectangular coordinates (x,y).
<p>
Special cases:
<ul>
<li>{@code atan2((anything), NaN ) = NaN;}</li>
<li>{@code atan2(NaN , (anything) ) = NaN;}</li>
<li>{@code atan2(+0.0, +(anything but NaN)) = +0.0}</li>
<li>{@code atan2(-0.0, +(anything but NaN)) = -0.0}</li>
<li>{@code atan2(+0.0, -(anything but NaN)) = +pi}</li>
<li>{@code atan2(-0.0, -(anything but NaN)) = -pi}</li>
<li>{@code atan2(+(anything but 0 and NaN), 0) = +pi/2}</li>
<li>{@code atan2(-(anything but 0 and NaN), 0) = -pi/2}</li>
<li>{@code atan2(+(anything but infinity and NaN), +infinity)} {@code =}
{@code +0.0}</li>
<li>{@code atan2(-(anything but infinity and NaN), +infinity)} {@code =}
{@code -0.0}</li>
<li>{@code atan2(+(anything but infinity and NaN), -infinity) = +pi}</li>
<li>{@code atan2(-(anything but infinity and NaN), -infinity) = -pi}</li>
<li>{@code atan2(+infinity, +infinity ) = +pi/4}</li>
<li>{@code atan2(-infinity, +infinity ) = -pi/4}</li>
<li>{@code atan2(+infinity, -infinity ) = +3pi/4}</li>
<li>{@code atan2(-infinity, -infinity ) = -3pi/4}</li>
<li>{@code atan2(+infinity, (anything but,0, NaN, and infinity))}
{@code =} {@code +pi/2}</li>
<li>{@code atan2(-infinity, (anything but,0, NaN, and infinity))}
{@code =} {@code -pi/2}</li>
</ul>

@param y
           the numerator of the value whose atan has to be computed.
@param x
           the denominator of the value whose atan has to be computed.
@return the arc tangent of {@code y/x}."
      end

      operation 394907 "cbrt"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "d" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
	comment "Returns the closest double approximation of the cube root of the
argument.
<p>
Special cases:
<ul>
<li>{@code cbrt(+0.0) = +0.0}</li>
<li>{@code cbrt(-0.0) = -0.0}</li>
<li>{@code cbrt(+infinity) = +infinity}</li>
<li>{@code cbrt(-infinity) = -infinity}</li>
<li>{@code cbrt(NaN) = NaN}</li>
</ul>

@param d
           the value whose cube root has to be computed.
@return the cube root of the argument."
      end

      operation 395035 "ceil"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "d" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
	comment "Returns the double conversion of the most negative (closest to negative
infinity) integer value greater than or equal to the argument.
<p>
Special cases:
<ul>
<li>{@code ceil(+0.0) = +0.0}</li>
<li>{@code ceil(-0.0) = -0.0}</li>
<li>{@code ceil((anything in range (-1,0)) = -0.0}</li>
<li>{@code ceil(+infinity) = +infinity}</li>
<li>{@code ceil(-infinity) = -infinity}</li>
<li>{@code ceil(NaN) = NaN}</li>
</ul>"
      end

      operation 395163 "cosh"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "d" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
	comment "Returns the closest double approximation of the hyperbolic cosine of the
argument.
<p>
Special cases:
<ul>
<li>{@code cosh(+infinity) = +infinity}</li>
<li>{@code cosh(-infinity) = +infinity}</li>
<li>{@code cosh(NaN) = NaN}</li>
</ul>

@param d
           the value whose hyperbolic cosine has to be computed.
@return the hyperbolic cosine of the argument."
      end

      operation 395291 "cos"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "d" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
	comment "Returns the closest double approximation of the cosine of the argument.
<p>
Special cases:
<ul>
<li>{@code cos(+infinity) = NaN}</li>
<li>{@code cos(-infinity) = NaN}</li>
<li>{@code cos(NaN) = NaN}</li>
</ul>

@param d
           the angle whose cosine has to be computed, in radians.
@return the cosine of the argument."
      end

      operation 395419 "exp"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "d" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
	comment "Returns the closest double approximation of the raising \"e\" to the power
of the argument.
<p>
Special cases:
<ul>
<li>{@code exp(+infinity) = +infinity}</li>
<li>{@code exp(-infinity) = +0.0}</li>
<li>{@code exp(NaN) = NaN}</li>
</ul>

@param d
           the value whose exponential has to be computed.
@return the exponential of the argument."
      end

      operation 395547 "expm1"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "d" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
	comment "Returns the closest double approximation of <i>{@code e}</i><sup>
{@code d}</sup>{@code - 1}. If the argument is very close to 0, it is
much more accurate to use {@code expm1(d)+1} than {@code exp(d)} (due to
cancellation of significant digits).
<p>
Special cases:
<ul>
<li>{@code expm1(+0.0) = +0.0}</li>
<li>{@code expm1(-0.0) = -0.0}</li>
<li>{@code expm1(+infinity) = +infinity}</li>
<li>{@code expm1(-infinity) = -1.0}</li>
<li>{@code expm1(NaN) = NaN}</li>
</ul>

@param d
           the value to compute the <i>{@code e}</i><sup>{@code d}</sup>
           {@code - 1} of.
@return the <i>{@code e}</i><sup>{@code d}</sup>{@code - 1} value
        of the argument."
      end

      operation 395675 "floor"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "d" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
	comment "Returns the double conversion of the most positive (closest to
positive infinity) integer less than or equal to the argument.
<p>
Special cases:
<ul>
<li>{@code floor(+0.0) = +0.0}</li>
<li>{@code floor(-0.0) = -0.0}</li>
<li>{@code floor(+infinity) = +infinity}</li>
<li>{@code floor(-infinity) = -infinity}</li>
<li>{@code floor(NaN) = NaN}</li>
</ul>"
      end

      operation 395803 "hypot"
	class_operation public explicit_return_type "double"
	nparams 2
	  param in name "x" explicit_type "double"
	  param in name "y" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
	comment "Returns {@code sqrt(}<i>{@code x}</i><sup>{@code 2}</sup>{@code +}
<i> {@code y}</i><sup>{@code 2}</sup>{@code )}. The final result is
without medium underflow or overflow.
<p>
Special cases:
<ul>
<li>{@code hypot(+infinity, (anything including NaN)) = +infinity}</li>
<li>{@code hypot(-infinity, (anything including NaN)) = +infinity}</li>
<li>{@code hypot((anything including NaN), +infinity) = +infinity}</li>
<li>{@code hypot((anything including NaN), -infinity) = +infinity}</li>
<li>{@code hypot(NaN, NaN) = NaN}</li>
</ul>

@param x
           a double number.
@param y
           a double number.
@return the {@code sqrt(}<i>{@code x}</i><sup>{@code 2}</sup>{@code +}
        <i> {@code y}</i><sup>{@code 2}</sup>{@code )} value of the
        arguments."
      end

      operation 395931 "IEEEremainder"
	class_operation public explicit_return_type "double"
	nparams 2
	  param in name "x" explicit_type "double"
	  param in name "y" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
	comment "Returns the remainder of dividing {@code x} by {@code y} using the IEEE
754 rules. The result is {@code x-round(x/p)*p} where {@code round(x/p)}
is the nearest integer (rounded to even), but without numerical
cancellation problems.
<p>
Special cases:
<ul>
<li>{@code IEEEremainder((anything), 0) = NaN}</li>
<li>{@code IEEEremainder(+infinity, (anything)) = NaN}</li>
<li>{@code IEEEremainder(-infinity, (anything)) = NaN}</li>
<li>{@code IEEEremainder(NaN, (anything)) = NaN}</li>
<li>{@code IEEEremainder((anything), NaN) = NaN}</li>
<li>{@code IEEEremainder(x, +infinity) = x } where x is anything but
+/-infinity</li>
<li>{@code IEEEremainder(x, -infinity) = x } where x is anything but
+/-infinity</li>
</ul>

@param x
           the numerator of the operation.
@param y
           the denominator of the operation.
@return the IEEE754 floating point reminder of of {@code x/y}."
      end

      operation 396059 "log"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "d" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
	comment "Returns the closest double approximation of the natural logarithm of the
argument.
<p>
Special cases:
<ul>
<li>{@code log(+0.0) = -infinity}</li>
<li>{@code log(-0.0) = -infinity}</li>
<li>{@code log((anything < 0) = NaN}</li>
<li>{@code log(+infinity) = +infinity}</li>
<li>{@code log(-infinity) = NaN}</li>
<li>{@code log(NaN) = NaN}</li>
</ul>

@param d
           the value whose log has to be computed.
@return the natural logarithm of the argument."
      end

      operation 396187 "log10"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "d" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
	comment "Returns the closest double approximation of the base 10 logarithm of the
argument.
<p>
Special cases:
<ul>
<li>{@code log10(+0.0) = -infinity}</li>
<li>{@code log10(-0.0) = -infinity}</li>
<li>{@code log10((anything < 0) = NaN}</li>
<li>{@code log10(+infinity) = +infinity}</li>
<li>{@code log10(-infinity) = NaN}</li>
<li>{@code log10(NaN) = NaN}</li>
</ul>

@param d
           the value whose base 10 log has to be computed.
@return the natural logarithm of the argument."
      end

      operation 396315 "log1p"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "d" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
	comment "Returns the closest double approximation of the natural logarithm of the
sum of the argument and 1. If the argument is very close to 0, it is much
more accurate to use {@code log1p(d)} than {@code log(1.0+d)} (due to
numerical cancellation).
<p>
Special cases:
<ul>
<li>{@code log1p(+0.0) = +0.0}</li>
<li>{@code log1p(-0.0) = -0.0}</li>
<li>{@code log1p((anything < 1)) = NaN}</li>
<li>{@code log1p(-1.0) = -infinity}</li>
<li>{@code log1p(+infinity) = +infinity}</li>
<li>{@code log1p(-infinity) = NaN}</li>
<li>{@code log1p(NaN) = NaN}</li>
</ul>

@param d
           the value to compute the {@code ln(1+d)} of.
@return the natural logarithm of the sum of the argument and 1."
      end

      operation 396443 "max"
	class_operation public explicit_return_type "double"
	nparams 2
	  param in name "d1" explicit_type "double"
	  param in name "d2" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the most positive (closest to positive infinity) of the two
arguments.
<p>
Special cases:
<ul>
<li>{@code max(NaN, (anything)) = NaN}</li>
<li>{@code max((anything), NaN) = NaN}</li>
<li>{@code max(+0.0, -0.0) = +0.0}</li>
<li>{@code max(-0.0, +0.0) = +0.0}</li>
</ul>"
      end

      operation 396571 "max"
	class_operation public explicit_return_type "float"
	nparams 2
	  param in name "f1" explicit_type "float"
	  param in name "f2" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the most positive (closest to positive infinity) of the two
arguments.
<p>
Special cases:
<ul>
<li>{@code max(NaN, (anything)) = NaN}</li>
<li>{@code max((anything), NaN) = NaN}</li>
<li>{@code max(+0.0, -0.0) = +0.0}</li>
<li>{@code max(-0.0, +0.0) = +0.0}</li>
</ul>"
      end

      operation 396699 "max"
	class_operation public explicit_return_type "int"
	nparams 2
	  param in name "i1" explicit_type "int"
	  param in name "i2" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the most positive (closest to positive infinity) of the two
arguments."
      end

      operation 396827 "max"
	class_operation public explicit_return_type "long"
	nparams 2
	  param in name "l1" explicit_type "long"
	  param in name "l2" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the most positive (closest to positive infinity) of the two
arguments."
      end

      operation 396955 "min"
	class_operation public explicit_return_type "double"
	nparams 2
	  param in name "d1" explicit_type "double"
	  param in name "d2" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the most negative (closest to negative infinity) of the two
arguments.
<p>
Special cases:
<ul>
<li>{@code min(NaN, (anything)) = NaN}</li>
<li>{@code min((anything), NaN) = NaN}</li>
<li>{@code min(+0.0, -0.0) = -0.0}</li>
<li>{@code min(-0.0, +0.0) = -0.0}</li>
</ul>"
      end

      operation 397083 "min"
	class_operation public explicit_return_type "float"
	nparams 2
	  param in name "f1" explicit_type "float"
	  param in name "f2" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the most negative (closest to negative infinity) of the two
arguments.
<p>
Special cases:
<ul>
<li>{@code min(NaN, (anything)) = NaN}</li>
<li>{@code min((anything), NaN) = NaN}</li>
<li>{@code min(+0.0, -0.0) = -0.0}</li>
<li>{@code min(-0.0, +0.0) = -0.0}</li>
</ul>"
      end

      operation 397211 "min"
	class_operation public explicit_return_type "int"
	nparams 2
	  param in name "i1" explicit_type "int"
	  param in name "i2" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the most negative (closest to negative infinity) of the two
arguments."
      end

      operation 397339 "min"
	class_operation public explicit_return_type "long"
	nparams 2
	  param in name "l1" explicit_type "long"
	  param in name "l2" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the most negative (closest to negative infinity) of the two
arguments."
      end

      operation 397467 "pow"
	class_operation public explicit_return_type "double"
	nparams 2
	  param in name "x" explicit_type "double"
	  param in name "y" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
	comment "Returns the closest double approximation of the result of raising
{@code x} to the power of {@code y}.
<p>
Special cases:
<ul>
<li>{@code pow((anything), +0.0) = 1.0}</li>
<li>{@code pow((anything), -0.0) = 1.0}</li>
<li>{@code pow(x, 1.0) = x}</li>
<li>{@code pow((anything), NaN) = NaN}</li>
<li>{@code pow(NaN, (anything except 0)) = NaN}</li>
<li>{@code pow(+/-(|x| > 1), +infinity) = +infinity}</li>
<li>{@code pow(+/-(|x| > 1), -infinity) = +0.0}</li>
<li>{@code pow(+/-(|x| < 1), +infinity) = +0.0}</li>
<li>{@code pow(+/-(|x| < 1), -infinity) = +infinity}</li>
<li>{@code pow(+/-1.0 , +infinity) = NaN}</li>
<li>{@code pow(+/-1.0 , -infinity) = NaN}</li>
<li>{@code pow(+0.0, (+anything except 0, NaN)) = +0.0}</li>
<li>{@code pow(-0.0, (+anything except 0, NaN, odd integer)) = +0.0}</li>
<li>{@code pow(+0.0, (-anything except 0, NaN)) = +infinity}</li>
<li>{@code pow(-0.0, (-anything except 0, NAN, odd integer))} {@code =}
{@code +infinity}</li>
<li>{@code pow(-0.0, (odd integer)) = -pow( +0 , (odd integer) )}</li>
<li>{@code pow(+infinity, (+anything except 0, NaN)) = +infinity}</li>
<li>{@code pow(+infinity, (-anything except 0, NaN)) = +0.0}</li>
<li>{@code pow(-infinity, (anything)) = -pow(0, (-anything))}</li>
<li>{@code pow((-anything), (integer))} {@code =}
{@code pow(-1,(integer))*pow(+anything,integer)}</li>
<li>{@code pow((-anything except 0 and infinity), (non-integer))}
{@code =} {@code NAN}</li>
</ul>

@param x
           the base of the operation.
@param y
           the exponent of the operation.
@return {@code x} to the power of {@code y}."
      end

      operation 397595 "random"
	class_operation public explicit_return_type "double"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a pseudo-random number between 0.0 (inclusive) and 1.0
(exclusive).

@return a pseudo-random number."
      end

      operation 397723 "rint"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "d" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
	comment "Returns the double conversion of the result of rounding the argument to
an integer. Tie breaks are rounded towards even.
<p>
Special cases:
<ul>
<li>{@code rint(+0.0) = +0.0}</li>
<li>{@code rint(-0.0) = -0.0}</li>
<li>{@code rint(+infinity) = +infinity}</li>
<li>{@code rint(-infinity) = -infinity}</li>
<li>{@code rint(NaN) = NaN}</li>
</ul>

@param d
           the value to be rounded.
@return the closest integer to the argument (as a double)."
      end

      operation 397851 "round"
	class_operation public explicit_return_type "long"
	nparams 1
	  param in name "d" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the result of rounding the argument to an integer. The result is
equivalent to {@code (long) Math.floor(d+0.5)}.
<p>
Special cases:
<ul>
<li>{@code round(+0.0) = +0.0}</li>
<li>{@code round(-0.0) = +0.0}</li>
<li>{@code round((anything > Long.MAX_VALUE) = Long.MAX_VALUE}</li>
<li>{@code round((anything < Long.MIN_VALUE) = Long.MIN_VALUE}</li>
<li>{@code round(+infinity) = Long.MAX_VALUE}</li>
<li>{@code round(-infinity) = Long.MIN_VALUE}</li>
<li>{@code round(NaN) = +0.0}</li>
</ul>

@param d
           the value to be rounded.
@return the closest integer to the argument."
      end

      operation 397979 "round"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "f" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the result of rounding the argument to an integer. The result is
equivalent to {@code (int) Math.floor(f+0.5)}.
<p>
Special cases:
<ul>
<li>{@code round(+0.0) = +0.0}</li>
<li>{@code round(-0.0) = +0.0}</li>
<li>{@code round((anything > Integer.MAX_VALUE) = Integer.MAX_VALUE}</li>
<li>{@code round((anything < Integer.MIN_VALUE) = Integer.MIN_VALUE}</li>
<li>{@code round(+infinity) = Integer.MAX_VALUE}</li>
<li>{@code round(-infinity) = Integer.MIN_VALUE}</li>
<li>{@code round(NaN) = +0.0}</li>
</ul>

@param f
           the value to be rounded.
@return the closest integer to the argument."
      end

      operation 398107 "signum"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "d" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the signum function of the argument. If the argument is less than
zero, it returns -1.0. If the argument is greater than zero, 1.0 is
returned. If the argument is either positive or negative zero, the
argument is returned as result.
<p>
Special cases:
<ul>
<li>{@code signum(+0.0) = +0.0}</li>
<li>{@code signum(-0.0) = -0.0}</li>
<li>{@code signum(+infinity) = +1.0}</li>
<li>{@code signum(-infinity) = -1.0}</li>
<li>{@code signum(NaN) = NaN}</li>
</ul>

@param d
           the value whose signum has to be computed.
@return the value of the signum function."
      end

      operation 398235 "signum"
	class_operation public explicit_return_type "float"
	nparams 1
	  param in name "f" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the signum function of the argument. If the argument is less than
zero, it returns -1.0. If the argument is greater than zero, 1.0 is
returned. If the argument is either positive or negative zero, the
argument is returned as result.
<p>
Special cases:
<ul>
<li>{@code signum(+0.0) = +0.0}</li>
<li>{@code signum(-0.0) = -0.0}</li>
<li>{@code signum(+infinity) = +1.0}</li>
<li>{@code signum(-infinity) = -1.0}</li>
<li>{@code signum(NaN) = NaN}</li>
</ul>

@param f
           the value whose signum has to be computed.
@return the value of the signum function."
      end

      operation 398363 "sinh"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "d" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
	comment "Returns the closest double approximation of the hyperbolic sine of the
argument.
<p>
Special cases:
<ul>
<li>{@code sinh(+0.0) = +0.0}</li>
<li>{@code sinh(-0.0) = -0.0}</li>
<li>{@code sinh(+infinity) = +infinity}</li>
<li>{@code sinh(-infinity) = -infinity}</li>
<li>{@code sinh(NaN) = NaN}</li>
</ul>

@param d
           the value whose hyperbolic sine has to be computed.
@return the hyperbolic sine of the argument."
      end

      operation 398491 "sin"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "d" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
	comment "Returns the closest double approximation of the sine of the argument.
<p>
Special cases:
<ul>
<li>{@code sin(+0.0) = +0.0}</li>
<li>{@code sin(-0.0) = -0.0}</li>
<li>{@code sin(+infinity) = NaN}</li>
<li>{@code sin(-infinity) = NaN}</li>
<li>{@code sin(NaN) = NaN}</li>
</ul>

@param d
           the angle whose sin has to be computed, in radians.
@return the sine of the argument."
      end

      operation 398619 "sqrt"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "d" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
	comment "Returns the closest double approximation of the square root of the
argument.
<p>
Special cases:
<ul>
<li>{@code sqrt(+0.0) = +0.0}</li>
<li>{@code sqrt(-0.0) = -0.0}</li>
<li>{@code sqrt( (anything < 0) ) = NaN}</li>
<li>{@code sqrt(+infinity) = +infinity}</li>
<li>{@code sqrt(NaN) = NaN}</li>
</ul>"
      end

      operation 398747 "tan"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "d" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
	comment "Returns the closest double approximation of the tangent of the argument.
<p>
Special cases:
<ul>
<li>{@code tan(+0.0) = +0.0}</li>
<li>{@code tan(-0.0) = -0.0}</li>
<li>{@code tan(+infinity) = NaN}</li>
<li>{@code tan(-infinity) = NaN}</li>
<li>{@code tan(NaN) = NaN}</li>
</ul>

@param d
           the angle whose tangent has to be computed, in radians.
@return the tangent of the argument."
      end

      operation 398875 "tanh"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "d" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
	comment "Returns the closest double approximation of the hyperbolic tangent of the
argument. The absolute value is always less than 1.
<p>
Special cases:
<ul>
<li>{@code tanh(+0.0) = +0.0}</li>
<li>{@code tanh(-0.0) = -0.0}</li>
<li>{@code tanh(+infinity) = +1.0}</li>
<li>{@code tanh(-infinity) = -1.0}</li>
<li>{@code tanh(NaN) = NaN}</li>
</ul>

@param d
           the value whose hyperbolic tangent has to be computed.
@return the hyperbolic tangent of the argument"
      end

      operation 399003 "toDegrees"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "angrad" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the measure in degrees of the supplied radian angle. The result
is {@code angrad * 180 / pi}.
<p>
Special cases:
<ul>
<li>{@code toDegrees(+0.0) = +0.0}</li>
<li>{@code toDegrees(-0.0) = -0.0}</li>
<li>{@code toDegrees(+infinity) = +infinity}</li>
<li>{@code toDegrees(-infinity) = -infinity}</li>
<li>{@code toDegrees(NaN) = NaN}</li>
</ul>

@param angrad
           an angle in radians.
@return the degree measure of the angle."
      end

      operation 399131 "toRadians"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "angdeg" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the measure in radians of the supplied degree angle. The result
is {@code angdeg / 180 * pi}.
<p>
Special cases:
<ul>
<li>{@code toRadians(+0.0) = +0.0}</li>
<li>{@code toRadians(-0.0) = -0.0}</li>
<li>{@code toRadians(+infinity) = +infinity}</li>
<li>{@code toRadians(-infinity) = -infinity}</li>
<li>{@code toRadians(NaN) = NaN}</li>
</ul>

@param angdeg
           an angle in degrees.
@return the radian measure of the angle."
      end

      operation 399259 "ulp"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "d" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the argument's ulp (unit in the last place). The size of a ulp of
a double value is the positive distance between this value and the double
value next larger in magnitude. For non-NaN {@code x},
{@code ulp(-x) == ulp(x)}.
<p>
Special cases:
<ul>
<li>{@code ulp(+0.0) = Double.MIN_VALUE}</li>
<li>{@code ulp(-0.0) = Double.MIN_VALUE}</li>
<li>{@code ulp(+infinity) = infinity}</li>
<li>{@code ulp(-infinity) = infinity}</li>
<li>{@code ulp(NaN) = NaN}</li>
</ul>

@param d
           the floating-point value to compute ulp of.
@return the size of a ulp of the argument."
      end

      operation 399387 "ulp"
	class_operation public explicit_return_type "float"
	nparams 1
	  param in name "f" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the argument's ulp (unit in the last place). The size of a ulp of
a float value is the positive distance between this value and the float
value next larger in magnitude. For non-NaN {@code x},
{@code ulp(-x) == ulp(x)}.
<p>
Special cases:
<ul>
<li>{@code ulp(+0.0) = Float.MIN_VALUE}</li>
<li>{@code ulp(-0.0) = Float.MIN_VALUE}</li>
<li>{@code ulp(+infinity) = infinity}</li>
<li>{@code ulp(-infinity) = infinity}</li>
<li>{@code ulp(NaN) = NaN}</li>
</ul>

@param f
           the floating-point value to compute ulp of.
@return the size of a ulp of the argument."
      end

      operation 399515 "nextafter"
	class_operation private explicit_return_type "double"
	nparams 2
	  param in name "x" explicit_type "double"
	  param in name "y" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
      end

      operation 399643 "copySign"
	class_operation public explicit_return_type "double"
	nparams 2
	  param in name "magnitude" explicit_type "double"
	  param in name "sign" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a double with the given magnitude and the sign of {@code sign}.
If {@code sign} is NaN, the sign of the result is positive.
@since 1.6"
      end

      operation 399771 "copySign"
	class_operation public explicit_return_type "float"
	nparams 2
	  param in name "magnitude" explicit_type "float"
	  param in name "sign" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a float with the given magnitude and the sign of {@code sign}.
If {@code sign} is NaN, the sign of the result is positive.
@since 1.6"
      end

      operation 399899 "getExponent"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "f" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the exponent of float {@code f}.
@since 1.6"
      end

      operation 400027 "getExponent"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "d" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the exponent of double {@code d}.
@since 1.6"
      end

      operation 400155 "nextAfter"
	class_operation public explicit_return_type "double"
	nparams 2
	  param in name "start" explicit_type "double"
	  param in name "direction" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the next double after {@code start} in the given {@code direction}.
@since 1.6"
      end

      operation 400283 "nextAfter"
	class_operation public explicit_return_type "float"
	nparams 2
	  param in name "start" explicit_type "float"
	  param in name "direction" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the next float after {@code start} in the given {@code direction}.
@since 1.6"
      end

      operation 400411 "nextUp"
	class_operation public explicit_return_type "double"
	nparams 1
	  param in name "d" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the next double larger than {@code d}.
@since 1.6"
      end

      operation 400539 "nextUp"
	class_operation public explicit_return_type "float"
	nparams 1
	  param in name "f" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the next float larger than {@code f}.
@since 1.6"
      end

      operation 400667 "scalb"
	class_operation public explicit_return_type "double"
	nparams 2
	  param in name "d" explicit_type "double"
	  param in name "scaleFactor" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns {@code d} * 2^{@code scaleFactor}. The result may be rounded.
@since 1.6"
      end

      operation 400795 "scalb"
	class_operation public explicit_return_type "float"
	nparams 2
	  param in name "d" explicit_type "float"
	  param in name "scaleFactor" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns {@code d} * 2^{@code scaleFactor}. The result may be rounded.
@since 1.6"
      end

      operation 400923 "shiftIntBits"
	class_operation private explicit_return_type "int"
	nparams 2
	  param in name "bits" explicit_type "int"
	  param in name "digits" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Shifts integer bits as float, if the digits is positive, left-shift; if
 not, shift to right and calculate its carry."
      end

      operation 401051 "shiftLongBits"
	class_operation private explicit_return_type "long"
	nparams 2
	  param in name "bits" explicit_type "long"
	  param in name "digits" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Shifts long bits as double, if the digits is positive, left-shift; if
 not, shift to right and calculate its carry."
      end
    end

    class 159515 "StringToReal"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Used to parse a string and return either a single or double precision
floating point number.
@hide"
      class 159643 "StringExponentPair"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 206875 // s (<unidirectional association>)
	  relation 206875 --->
	    a role_name "s" package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 206875 // s (<unidirectional association>)
	    b parent class_ref 3399692 // String
	end

	attribute 189467 "e"
	  package explicit_type "long"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 189595 "negative"
	  package explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 189723 "infinity"
	  package explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Flags for two special non-error failure cases."
	end

	attribute 189851 "zero"
	  package explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 425883 "specialValue"
	  public explicit_return_type "float"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 426011 "parseDblImpl"
	class_operation private explicit_return_type "double"
	nparams 2
	  param inout name "s" type class_ref 3399692 // String
	  param in name "e" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
	comment "Takes a String and an integer exponent. The String should hold a positive
integer value (or zero). The exponent will be used to calculate the
floating point number by taking the positive integer the String
represents and multiplying by 10 raised to the power of the of the
exponent. Returns the closest double value to the real number, or Double.longBitsToDouble(-1)."
      end

      operation 426139 "parseFltImpl"
	class_operation private explicit_return_type "float"
	nparams 2
	  param inout name "s" type class_ref 3399692 // String
	  param in name "e" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
	comment "Takes a String and an integer exponent. The String should hold a positive
integer value (or zero). The exponent will be used to calculate the
floating point number by taking the positive integer the String
represents and multiplying by 10 raised to the power of the of the
exponent. Returns the closest float value to the real number, or Float.intBitsToFloat(-1)."
      end

      operation 426267 "invalidReal"
	class_operation private return_type class_ref 148507 // NumberFormatException
	nparams 2
	  param inout name "s" type class_ref 3399692 // String
	  param inout name "isDouble" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 426395 "initialParse"
	class_operation private return_type class_ref 159643 // StringExponentPair
	nparams 3
	  param inout name "s" type class_ref 3399692 // String
	  param in name "length" explicit_type "int"
	  param inout name "isDouble" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a StringExponentPair containing a String with no leading or trailing white
space and trailing zeroes eliminated. The exponent of the
StringExponentPair will be used to calculate the floating point number by
taking the positive integer the String represents and multiplying by 10
raised to the power of the of the exponent."
      end

      operation 426523 "parseName"
	class_operation private explicit_return_type "float"
	nparams 2
	  param inout name "name" type class_ref 3399692 // String
	  param inout name "isDouble" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Parses \"+Nan\", \"NaN\", \"-Nan\", \"+Infinity\", \"Infinity\", and \"-Infinity\", case-insensitively."
      end

      operation 426651 "parseDouble"
	class_operation public explicit_return_type "double"
	nparams 1
	  param inout name "s" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the closest double value to the real number in the string.

@param s
           the String that will be parsed to a floating point
@return the double closest to the real number

@exception NumberFormatException
               if the String doesn't represent a double"
      end

      operation 426779 "parseFloat"
	class_operation public explicit_return_type "float"
	nparams 1
	  param inout name "s" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the closest float value to the real number in the string.

@param s
           the String that will be parsed to a floating point
@return the float closest to the real number

@exception NumberFormatException
               if the String doesn't represent a float"
      end
    end

    class 159771 "SuppressWarnings"
      visibility public stereotype "@interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}@interface ${name}${extends} {
${members}}
"
      java_annotation "@Target( { ElementType.TYPE, ElementType.FIELD, ElementType.METHOD,
        ElementType.PARAMETER, ElementType.CONSTRUCTOR,
        ElementType.LOCAL_VARIABLE })
@Retention(RetentionPolicy.SOURCE)
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Annotation type used to indicate that the compiler should not issue the
specified warnings for the marked program element. Warnings are not only
suppressed for the annotated element but also for all program elements
contained in that element.
<p>
It is recommended that programmers always use this annotation on the most
deeply nested element where it is actually needed.

@since 1.5"
      operation 426907 "value"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The list of warnings a compiler should not issue."
      end
    end

    class 159899 "System"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Provides access to system-related information and resources including
standard input and output. Enables clients to dynamically load native
libraries. All methods of this class are accessed in a static way and the
class itself can not be instantiated.

@see Runtime"
      classrelation 207003 // in (<unidirectional association>)
	relation 207003 --->
	  a role_name "in" class_relation const_relation public
	    comment "
Default input stream.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 207003 // in (<unidirectional association>)
	  b parent class_ref 131867 // InputStream
      end

      classrelation 207131 // out (<unidirectional association>)
	relation 207131 --->
	  a role_name "out" class_relation const_relation public
	    comment "
Default output stream.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 207131 // out (<unidirectional association>)
	  b parent class_ref 134939 // PrintStream
      end

      classrelation 207259 // err (<unidirectional association>)
	relation 207259 --->
	  a role_name "err" class_relation const_relation public
	    comment "
Default error output stream.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 207259 // err (<unidirectional association>)
	  b parent class_ref 134939 // PrintStream
      end

      classrelation 207387 // lineSeparator (<unidirectional association>)
	relation 207387 --->
	  a role_name "lineSeparator" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 207387 // lineSeparator (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 207515 // systemProperties (<unidirectional association>)
	relation 207515 --->
	  a role_name "systemProperties" class_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 207515 // systemProperties (<unidirectional association>)
	  b parent class_ref 160027 // Properties
      end

      extra_member 129435 "initialization"
	
	cpp "" ""
	java "  static {
        err = new PrintStream(new FileOutputStream(FileDescriptor.err));
        out = new PrintStream(new FileOutputStream(FileDescriptor.out));
        in = new BufferedInputStream(new FileInputStream(FileDescriptor.in));
        lineSeparator = System.getProperty(\"line.separator\");
    }"
	php ""
	python ""
	idl ""
      end

      operation 427035 "setIn"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "newIn" type class_ref 131867 // InputStream
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the standard input stream to the given user defined input stream.

@param newIn
           the user defined input stream to set as the standard input
           stream."
      end

      operation 427163 "setOut"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "newOut" type class_ref 134939 // PrintStream
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the standard output stream to the given user defined output stream.

@param newOut
           the user defined output stream to set as the standard output
           stream."
      end

      operation 427291 "setErr"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "newErr" type class_ref 134939 // PrintStream
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the standard error output stream to the given user defined output
stream.

@param newErr
           the user defined output stream to set as the standard error
           output stream."
      end

      operation 427419 "System"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prevents this class from being instantiated."
      end

      operation 427547 "arraycopy"
	class_operation public explicit_return_type "void"
	nparams 5
	  param inout name "src" type class_ref 3401484 // Object
	  param in name "srcPos" explicit_type "int"
	  param inout name "dst" type class_ref 3401484 // Object
	  param in name "dstPos" explicit_type "int"
	  param in name "length" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws};
"
	
	
	
	comment "Copies {@code length} elements from the array {@code src},
starting at offset {@code srcPos}, into the array {@code dst},
starting at offset {@code dstPos}.

<p>The source and destination arrays can be the same array,
in which case copying is performed as if the source elements
are first copied into a temporary array and then into the
destination array.

@param src
           the source array to copy the content.
@param srcPos
           the starting index of the content in {@code src}.
@param dst
           the destination array to copy the data into.
@param dstPos
           the starting index for the copied content in {@code dst}.
@param length
           the number of elements to be copied."
      end

      operation 427675 "currentTimeMillis"
	class_operation public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
	comment "Returns the current time in milliseconds since January 1, 1970 00:00:00.0 UTC.

<p>This method always returns UTC times, regardless of the system's time zone.
This is often called \"Unix time\" or \"epoch time\".
Use a {@link java.text.DateFormat} instance to format this time for display to a human.

<p>This method shouldn't be used for measuring timeouts or
other elapsed time measurements, as changing the system time can affect
the results. Use {@link #nanoTime} for that."
      end

      operation 427803 "nanoTime"
	class_operation public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
	comment "Returns the current timestamp of the most precise timer available on the
local system, in nanoseconds. Equivalent to Linux's {@code CLOCK_MONOTONIC}.

<p>This timestamp should only be used to measure a duration by comparing it
against another timestamp from the same process on the same device.
Values returned by this method do not have a defined correspondence to
wall clock times; the zero value is typically whenever the device last booted.
Use {@link #currentTimeMillis} if you want to know what time it is."
      end

      operation 427931 "exit"
	class_operation public explicit_return_type "void"
	nparams 1
	  param in name "code" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Causes the VM to stop running and the program to exit. If
{@link #runFinalizersOnExit(boolean)} has been previously invoked with a
{@code true} argument, then all objects will be properly
garbage-collected and finalized first.

@param code
           the return code."
      end

      operation 428059 "gc"
	class_operation public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates to the VM that it would be a good time to run the
garbage collector. Note that this is a hint only. There is no guarantee
that the garbage collector will actually be run."
      end

      operation 428187 "getenv"
	class_operation public return_type class_ref 3399692 // String
	nparams 1
	  param inout name "name" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of the environment variable with the given name {@code
var}.

@param name
           the name of the environment variable.
@return the value of the specified environment variable or {@code null}
        if no variable exists with the given name."
      end

      operation 428315 "getenv"
	class_operation private return_type class_ref 3399692 // String
	nparams 2
	  param inout name "name" type class_ref 3399692 // String
	  param inout name "defaultValue" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 428443 "getenv"
	class_operation public return_type class_ref 129819 // Map
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String, String> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an unmodifiable map of all available environment variables.

@return the map representing all environment variables."
      end

      operation 428571 "inheritedChannel"
	class_operation public return_type class_ref 160155 // Channel
	nparams 0
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the inherited channel from the creator of the current virtual
machine.

@return the inherited {@link Channel} or {@code null} if none exists.
@throws IOException
            if an I/O error occurred.
@see SelectorProvider
@see SelectorProvider#inheritedChannel()"
      end

      operation 428699 "getProperties"
	class_operation public return_type class_ref 160027 // Properties
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the system properties. Note that this is not a copy, so that
changes made to the returned Properties object will be reflected in
subsequent calls to getProperty and getProperties.

@return the system properties."
      end

      operation 428827 "initSystemProperties"
	class_operation private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 428955 "specialProperties"
	class_operation private return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type}[] ${name}${(}${)}${throws};
"
	
	
	
	comment "Returns an array of \"key=value\" strings containing information not otherwise
easily available, such as #defined library versions."
      end

      operation 429083 "parsePropertyAssignments"
	class_operation private explicit_return_type "void"
	nparams 2
	  param inout name "p" type class_ref 160027 // Properties
	  param inout name "assignments" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds each element of 'assignments' to 'p', treating each element as an
assignment in the form \"key=value\"."
      end

      operation 429211 "getProperty"
	class_operation public return_type class_ref 3399692 // String
	nparams 1
	  param inout name "propertyName" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of a particular system property or {@code null} if no
such property exists.

<p>The following properties are always provided by the Dalvik VM:
<p><table BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\">
<tr BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\">
    <td><b>Name</b></td>        <td><b>Meaning</b></td>                    <td><b>Example</b></td></tr>
<tr><td>file.separator</td>     <td>{@link java.io.File#separator}</td>    <td>{@code /}</td></tr>

<tr><td>java.class.path</td>    <td>System class path</td>                 <td>{@code .}</td></tr>
<tr><td>java.class.version</td> <td>(Not useful on Android)</td>           <td>{@code 50.0}</td></tr>
<tr><td>java.compiler</td>      <td>(Not useful on Android)</td>           <td>Empty</td></tr>
<tr><td>java.ext.dirs</td>      <td>(Not useful on Android)</td>           <td>Empty</td></tr>
<tr><td>java.home</td>          <td>Location of the VM on the file system</td> <td>{@code /system}</td></tr>
<tr><td>java.io.tmpdir</td>     <td>See {@link java.io.File#createTempFile}</td> <td>{@code /sdcard}</td></tr>
<tr><td>java.library.path</td>  <td>Search path for JNI libraries</td>     <td>{@code /system/lib}</td></tr>
<tr><td>java.vendor</td>        <td>Human-readable VM vendor</td>          <td>{@code The Android Project}</td></tr>
<tr><td>java.vendor.url</td>    <td>URL for VM vendor's web site</td>      <td>{@code http://www.android.com/}</td></tr>
<tr><td>java.version</td>       <td>(Not useful on Android)</td>           <td>{@code 0}</td></tr>

<tr><td>java.specification.version</td>    <td>VM libraries version</td>        <td>{@code 0.9}</td></tr>
<tr><td>java.specification.vendor</td>     <td>VM libraries vendor</td>         <td>{@code The Android Project}</td></tr>
<tr><td>java.specification.name</td>       <td>VM libraries name</td>           <td>{@code Dalvik Core Library}</td></tr>
<tr><td>java.vm.version</td>               <td>VM implementation version</td>   <td>{@code 1.2.0}</td></tr>
<tr><td>java.vm.vendor</td>                <td>VM implementation vendor</td>    <td>{@code The Android Project}</td></tr>
<tr><td>java.vm.name</td>                  <td>VM implementation name</td>      <td>{@code Dalvik}</td></tr>
<tr><td>java.vm.specification.version</td> <td>VM specification version</td>    <td>{@code 0.9}</td></tr>
<tr><td>java.vm.specification.vendor</td>  <td>VM specification vendor</td>     <td>{@code The Android Project}</td></tr>
<tr><td>java.vm.specification.name</td>    <td>VM specification name</td>       <td>{@code Dalvik Virtual Machine Specification}</td></tr>

<tr><td>line.separator</td>     <td>The system line separator</td>         <td>{@code \\n}</td></tr>

<tr><td>os.arch</td>            <td>OS architecture</td>                   <td>{@code armv7l}</td></tr>
<tr><td>os.name</td>            <td>OS (kernel) name</td>                  <td>{@code Linux}</td></tr>
<tr><td>os.version</td>         <td>OS (kernel) version</td>               <td>{@code 2.6.32.9-g103d848}</td></tr>

<tr><td>path.separator</td>     <td>See {@link java.io.File#pathSeparator}</td> <td>{@code :}</td></tr>

<tr><td>user.dir</td>           <td>Base of non-absolute paths</td>        <td>{@code /}</td></tr>
<tr><td>user.home</td>          <td>(Not useful on Android)</td>           <td>Empty</td></tr>
<tr><td>user.name</td>          <td>(Not useful on Android)</td>           <td>Empty</td></tr>

</table>

<p>It is a mistake to try to override any of these. Doing so will have unpredictable results.

@param propertyName
           the name of the system property to look up.
@return the value of the specified system property or {@code null} if the
        property doesn't exist."
      end

      operation 429339 "getProperty"
	class_operation public return_type class_ref 3399692 // String
	nparams 2
	  param inout name "name" type class_ref 3399692 // String
	  param inout name "defaultValue" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the value of a particular system property. The {@code
defaultValue} will be returned if no such property has been found."
      end

      operation 429467 "setProperty"
	class_operation public return_type class_ref 3399692 // String
	nparams 2
	  param inout name "name" type class_ref 3399692 // String
	  param inout name "value" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the value of a particular system property.

@return the old value of the property or {@code null} if the property
        didn't exist."
      end

      operation 429595 "clearProperty"
	class_operation public return_type class_ref 3399692 // String
	nparams 1
	  param inout name "name" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a specific system property.

@return the property value or {@code null} if the property didn't exist.
@throws NullPointerException
            if the argument is {@code null}.
@throws IllegalArgumentException
            if the argument is empty."
      end

      operation 429723 "checkPropertyName"
	class_operation private explicit_return_type "void"
	nparams 1
	  param inout name "name" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 429851 "console"
	class_operation public return_type class_ref 135195 // Console
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@link java.io.Console} associated with this VM, or null.
Not all VMs will have an associated console. A console is typically only
available for programs run from the command line.
@since 1.6"
      end

      operation 429979 "getSecurityManager"
	class_operation public return_type class_ref 158619 // SecurityManager
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns null. Android does not use {@code SecurityManager}. This method
is only provided for source compatibility.

@return null"
      end

      operation 430107 "identityHashCode"
	class_operation public explicit_return_type "int"
	nparams 1
	  param inout name "anObject" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
	comment "Returns an integer hash code for the parameter. The hash code returned is
the same one that would be returned by the method {@code
java.lang.Object.hashCode()}, whether or not the object's class has
overridden hashCode(). The hash code for {@code null} is {@code 0}.

@param anObject
           the object to calculate the hash code.
@return the hash code for the given object.
@see java.lang.Object#hashCode"
      end

      operation 430235 "lineSeparator"
	class_operation public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the system's line separator. On Android, this is {@code \"\\n\"}. The value
comes from the value of the {@code line.separator} system property when the VM
starts. Later changes to the property will not affect the value returned by this
method.
@since 1.7
@hide 1.7 - fix documentation references to \"line.separator\" in Formatter."
      end

      operation 430363 "load"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "pathName" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Loads and links the dynamic library that is identified through the
specified path. This method is similar to {@link #loadLibrary(String)},
but it accepts a full path specification whereas {@code loadLibrary} just
accepts the name of the library to load.

@param pathName
           the path of the file to be loaded."
      end

      operation 430491 "loadLibrary"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "libName" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Loads and links the library with the specified name. The mapping of the
specified library name to the full path for loading the library is
implementation-dependent.

@param libName
           the name of the library to load.
@throws UnsatisfiedLinkError
            if the library could not be loaded."
      end

      operation 430619 "logE"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "message" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide internal use only"
      end

      operation 430747 "logE"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "message" type class_ref 3399692 // String
	  param inout name "th" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide internal use only"
      end

      operation 430875 "logI"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "message" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide internal use only"
      end

      operation 431003 "logI"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "message" type class_ref 3399692 // String
	  param inout name "th" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide internal use only"
      end

      operation 431131 "logW"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "message" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide internal use only"
      end

      operation 431259 "logW"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "message" type class_ref 3399692 // String
	  param inout name "th" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide internal use only"
      end

      operation 431387 "log"
	class_operation private explicit_return_type "void"
	nparams 3
	  param in name "type" explicit_type "char"
	  param inout name "message" type class_ref 3399692 // String
	  param inout name "th" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws};
"
	
	
	
      end

      operation 431515 "runFinalization"
	class_operation public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Provides a hint to the VM that it would be useful to attempt
to perform any outstanding object finalization."
      end

      operation 431643 "runFinalizersOnExit"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "flag" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"deprecation\")
    @Deprecated
"
	
	
	
	comment "Ensures that, when the VM is about to exit, all objects are
finalized. Note that all finalization which occurs when the system is
exiting is performed after all running threads have been terminated.

@param flag
           the flag determines if finalization on exit is enabled.
@deprecated this method is unsafe."
      end

      operation 431771 "setProperties"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "p" type class_ref 160027 // Properties
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets all system properties. This does not take a copy; the passed-in object is used
directly. Passing null causes the VM to reinitialize the properties to how they were
when the VM was started."
      end

      operation 431899 "setSecurityManager"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "sm" type class_ref 158619 // SecurityManager
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Throws {@code SecurityException}.

<p>Security managers do <i>not</i> provide a secure environment for
executing untrusted code and are unsupported on Android. Untrusted code
cannot be safely isolated within a single VM on Android, so this method
<i>always</i> throws a {@code SecurityException}.

@param sm a security manager
@throws SecurityException always"
      end

      operation 432027 "mapLibraryName"
	class_operation public return_type class_ref 3399692 // String
	nparams 1
	  param inout name "userLibName" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
	comment "Returns the platform specific file name format for the shared library
named by the argument.

@param userLibName
           the name of the library to look up.
@return the platform specific filename for the library."
      end

      operation 432155 "setFieldImpl"
	class_operation private explicit_return_type "void"
	nparams 3
	  param inout name "fieldName" type class_ref 3399692 // String
	  param inout name "signature" type class_ref 3399692 // String
	  param inout name "stream" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws};
"
	
	
	
	comment "Sets the value of the named static field in the receiver to the passed in
argument.

@param fieldName
           the name of the field to set, one of in, out, or err
@param stream
           the new value of the field"
      end

      class 160283 "SystemEnvironment"
	visibility package 
	nactuals 2
	actual class class_ref 160411 // AbstractMap
	  rank 0 explicit_value ""
	actual class class_ref 160411 // AbstractMap
	  rank 1 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 208539 // <realization>
	  relation 208539 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 208539 // <realization>
	    b parent class_ref 160411 // AbstractMap
	end

	classrelation 208667 // map (<unidirectional association>)
	  relation 208667 --->
	    a role_name "map" const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String, String> ${name}${value};
"
	      classrelation_ref 208667 // map (<unidirectional association>)
	    b parent class_ref 129819 // Map
	end

	operation 438939 "SystemEnvironment"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "map" type class_ref 129819 // Map
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<String, String> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 439067 "entrySet"
	  public return_type class_ref 129691 // Set
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Entry<String, String>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 439195 "get"
	  public return_type class_ref 3399692 // String
	  nparams 1
	    param inout name "key" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 439323 "containsKey"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "key" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 439451 "containsValue"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "value" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 439579 "toNonNullString"
	  private return_type class_ref 3399692 // String
	  nparams 1
	    param inout name "o" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end
    end

    class 161307 "VMThread"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 212379 // thread (<unidirectional association>)
	relation 212379 --->
	  a role_name "thread" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 212379 // thread (<unidirectional association>)
	  b parent class_ref 1201420 // Thread
      end

      attribute 194843 "vmData"
	package explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 455963 "VMThread"
	package explicit_return_type ""
	nparams 1
	  param inout name "t" type class_ref 1201420 // Thread
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 456091 "create"
	class_operation package explicit_return_type "void"
	nparams 2
	  param inout name "t" type class_ref 1201420 // Thread
	  param in name "stackSize" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
      end

      operation 456219 "currentThread"
	class_operation package return_type class_ref 1201420 // Thread
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
      end

      operation 456347 "interrupted"
	class_operation package explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
      end

      operation 456475 "sleep"
	class_operation package explicit_return_type "void"
	nparams 2
	  param in name "msec" explicit_type "long"
	  param in name "nsec" explicit_type "int"
	nexceptions 1
	  exception class_ref 155547 // InterruptedException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
      end

      operation 456603 "yield"
	class_operation package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
      end

      operation 456731 "interrupt"
	package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
      end

      operation 456859 "isInterrupted"
	package explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
      end

      operation 456987 "start"
	package explicit_return_type "void"
	nparams 1
	  param in name "stackSize" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Starts the VMThread (and thus the Java Thread) with the given
 stack size."
      end

      operation 457115 "holdsLock"
	package explicit_return_type "boolean"
	nparams 1
	  param inout name "object" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
	comment "Queries whether this Thread holds a monitor lock on the
given object."
      end

      operation 457243 "setPriority"
	package explicit_return_type "void"
	nparams 1
	  param in name "newPriority" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 457371 "getStatus"
	package explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
      end

      classrelation 212507 // STATE_MAP (<unidirectional association>)
	relation 212507 --->
	  a role_name "STATE_MAP" multiplicity "[]" init_value " new Thread.State[] {
        Thread.State.TERMINATED,     // ZOMBIE
        Thread.State.RUNNABLE,       // RUNNING
        Thread.State.TIMED_WAITING,  // TIMED_WAIT
        Thread.State.BLOCKED,        // MONITOR
        Thread.State.WAITING,        // WAIT
        Thread.State.NEW,            // INITIALIZING
        Thread.State.NEW,            // STARTING
        Thread.State.RUNNABLE,       // NATIVE
        Thread.State.WAITING,        // VMWAIT
        Thread.State.RUNNABLE        // SUSPENDED
    }" class_relation const_relation package
	    comment "
Holds a mapping from native Thread statuses to Java one. Required for
translating back the result of getStatus().

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 212507 // STATE_MAP (<unidirectional association>)
	  b parent class_ref 161179 // State
      end

      operation 457499 "nameChanged"
	package explicit_return_type "void"
	nparams 1
	  param inout name "newName" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
	comment "Tell the VM that the thread's name has changed.  This is useful for
DDMS, which would otherwise be oblivious to Thread.setName calls."
      end
    end

    class 161563 "ThreadDeath"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "ThreadDeath is thrown when a thread stops executing. It is used to aid in the
orderly unrolling of the thread's stack (eg. cleanup of monitors)."
      classrelation 210331 // <generalisation>
	relation 210331 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 210331 // <generalisation>
	  b parent class_ref 143643 // Error
      end

      attribute 193307 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -4417128565033088268L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 447259 "ThreadDeath"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of this class. Note that in the case of
ThreadDeath, the stack trace may <em>not</em> be filled in a way which
allows a stack trace to be printed."
      end
    end

    class 161691 "TypeNotPresentException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Thrown when a program tries to access a class, interface, enum or annotation
type through a string that contains the type's name and the type cannot be
found. This exception is an unchecked alternative to
{@link java.lang.ClassNotFoundException}.

@since 1.5"
      classrelation 211483 // <generalisation>
	relation 211483 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 211483 // <generalisation>
	  b parent class_ref 806284 // RuntimeException
      end

      attribute 193819 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -5101214195716534496L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 211611 // typeName (<unidirectional association>)
	relation 211611 --->
	  a role_name "typeName" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 211611 // typeName (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      operation 452123 "TypeNotPresentException"
	public explicit_return_type ""
	nparams 2
	  param inout name "typeName" type class_ref 3399692 // String
	  param inout name "cause" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code TypeNotPresentException} with the current stack
trace, a detail message that includes the name of the type that could not
be found and the {@code Throwable} that caused this exception.

@param typeName
           the fully qualified name of the type that could not be found.
@param cause
           the optional cause of this exception, may be {@code null}."
      end

      operation 452251 "typeName"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the fully qualified name of the type that could not be found.

@return the name of the type that caused this exception."
      end
    end

    class 161819 "UnknownError"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Thrown when the VM must throw an error which does not match any
known exceptional condition."
      classrelation 211739 // <generalisation>
	relation 211739 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 211739 // <generalisation>
	  b parent class_ref 155419 // VirtualMachineError
      end

      attribute 193947 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 2524784860676771849L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 452379 "UnknownError"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code UnknownError} that includes the current stack
trace."
      end

      operation 452507 "UnknownError"
	public explicit_return_type ""
	nparams 1
	  param inout name "detailMessage" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code UnknownError} with the current stack trace and
the specified detail message.

@param detailMessage
           the detail message for this exception."
      end
    end

    class 161947 "UnsafeByteSequence"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A cheaper ByteArrayOutputStream for internal use. This class is unsynchronized,
and returns its internal array if it's the right size. This makes String.getBytes(\"UTF-8\")
10x faster than the baseline non-fast-path implementation instead of 8x faster when using
ByteArrayOutputStream. When GC and uncontended synchronization become cheap, we should be
able to get rid of this class. In the meantime, if you need to add further API, please try
to keep it plug-compatible with ByteArrayOutputStream with an eye to future obsolescence.

@hide"
      attribute 194075 "bytes"
	private explicit_type "byte"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 194203 "count"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 452635 "UnsafeByteSequence"
	public explicit_return_type ""
	nparams 1
	  param in name "initialCapacity" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 452763 "size"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 452891 "rewind"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Moves the write pointer back to the beginning of the sequence,
but without resizing or reallocating the buffer."
      end

      operation 453019 "write"
	public explicit_return_type "void"
	nparams 3
	  param inout name "buffer" explicit_type "byte"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 453147 "write"
	public explicit_return_type "void"
	nparams 1
	  param in name "b" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 453275 "toByteArray"
	public explicit_return_type "byte"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@FindBugsSuppressWarnings(\"EI_EXPOSE_REP\")
"
	
	
	
      end

      operation 453403 "toString"
	public return_type class_ref 3399692 // String
	nparams 1
	  param inout name "cs" type class_ref 142491 // Charset
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 162075 "UnsatisfiedLinkError"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Thrown when an attempt is made to invoke a native for which an implementation
could not be found."
      classrelation 211867 // <generalisation>
	relation 211867 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 211867 // <generalisation>
	  b parent class_ref 147227 // LinkageError
      end

      attribute 194331 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -4019343241616879428L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 453531 "UnsatisfiedLinkError"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code UnsatisfiedLinkError} that includes the current
stack trace."
      end

      operation 453659 "UnsatisfiedLinkError"
	public explicit_return_type ""
	nparams 1
	  param inout name "detailMessage" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code UnsatisfiedLinkError} with the current stack
trace and the specified detail message.

@param detailMessage
           the detail message for this exception."
      end
    end

    class 162203 "UnsupportedClassVersionError"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Thrown when an attempt is made to load a class with a format version that is
not supported by the VM."
      classrelation 211995 // <generalisation>
	relation 211995 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 211995 // <generalisation>
	  b parent class_ref 150939 // ClassFormatError
      end

      attribute 194459 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -7123279212883497373L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 453787 "UnsupportedClassVersionError"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code UnsupportedClassVersionError} that includes the
current stack trace."
      end

      operation 453915 "UnsupportedClassVersionError"
	public explicit_return_type ""
	nparams 1
	  param inout name "detailMessage" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code UnsupportedClassVersionError} with the current
stack trace and the specified detail message.

@param detailMessage
           the detail message for this exception."
      end
    end

    class 162331 "UnsupportedOperationException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Thrown when an unsupported operation is attempted."
      classrelation 212123 // <generalisation>
	relation 212123 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 212123 // <generalisation>
	  b parent class_ref 806284 // RuntimeException
      end

      attribute 194587 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -1242599979055084673L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 454043 "UnsupportedOperationException"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code UnsupportedOperationException} that includes the
current stack trace."
      end

      operation 454171 "UnsupportedOperationException"
	public explicit_return_type ""
	nparams 1
	  param inout name "detailMessage" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code UnsupportedOperationException} with the current
stack trace and the specified detail message.

@param detailMessage
           the detail message for this exception."
      end

      operation 454299 "UnsupportedOperationException"
	public explicit_return_type ""
	nparams 2
	  param inout name "message" type class_ref 3399692 // String
	  param inout name "cause" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code UnsupportedOperationException} with the current
stack trace, the specified detail message and the specified cause.

@param message
           the detail message for this exception.
@param cause
           the optional cause of this exception, may be {@code null}.
@since 1.5"
      end

      operation 454427 "UnsupportedOperationException"
	public explicit_return_type ""
	nparams 1
	  param inout name "cause" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code UnsupportedOperationException} with the current
stack trace and the specified cause.

@param cause
           the optional cause of this exception, may be {@code null}.
@since 1.5"
      end
    end

    class 162459 "VerifyError"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Thrown when the VM notices that an attempt is made to load a
class which does not pass the class verification phase."
      classrelation 212251 // <generalisation>
	relation 212251 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 212251 // <generalisation>
	  b parent class_ref 147227 // LinkageError
      end

      attribute 194715 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 7001962396098498785L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 454555 "VerifyError"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code VerifyError} that includes the current stack
trace."
      end

      operation 454683 "VerifyError"
	public explicit_return_type ""
	nparams 1
	  param inout name "detailMessage" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new {@code VerifyError} with the current stack trace and the
specified detail message.

@param detailMessage
           the detail message for this exception."
      end
    end

    class 162587 "VMClassLoader"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      operation 454811 "getResource"
	class_operation package return_type class_ref 140443 // URL
	nparams 1
	  param inout name "name" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get a resource from a file in the bootstrap class path.

It would be simpler to just walk through the class path elements
ourselves, but that would require reopening Jar files.

We assume that the bootclasspath can't change once the VM has
started.  This assumption seems to be supported by the spec."
      end

      operation 454939 "getResources"
	class_operation package return_type class_ref 131483 // List
	nparams 1
	  param inout name "name" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<URL> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get an enumeration with all matching resources."
      end

      operation 455067 "loadClass"
	class_operation package return_type class_ref 3421708 // Class
	nparams 2
	  param inout name "name" type class_ref 3399692 // String
	  param inout name "resolve" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 128795 // ClassNotFoundException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
	comment "Load class with bootstrap class loader."
      end

      operation 455195 "getPrimitiveClass"
	class_operation package return_type class_ref 3421708 // Class
	nparams 1
	  param in name "type" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}${)}${throws};
"
	
	
	
      end

      operation 455323 "defineClass"
	class_operation package return_type class_ref 3421708 // Class
	nparams 5
	  param inout name "cl" type class_ref 138523 // ClassLoader
	  param inout name "name" type class_ref 3399692 // String
	  param inout name "data" explicit_type "byte"
	  param in name "offset" explicit_type "int"
	  param in name "len" explicit_type "int"
	nexceptions 1
	  exception class_ref 150939 // ClassFormatError
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws};
"
	
	
	
      end

      operation 455451 "defineClass"
	class_operation package return_type class_ref 3421708 // Class
	nparams 4
	  param inout name "cl" type class_ref 138523 // ClassLoader
	  param inout name "data" explicit_type "byte"
	  param in name "offset" explicit_type "int"
	  param in name "len" explicit_type "int"
	nexceptions 1
	  exception class_ref 150939 // ClassFormatError
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws};
"
	
	
	
      end

      operation 455579 "findLoadedClass"
	class_operation package return_type class_ref 3421708 // Class
	nparams 2
	  param inout name "cl" type class_ref 138523 // ClassLoader
	  param inout name "name" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
      end

      operation 455707 "getBootClassPathSize"
	class_operation private explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${)}${throws};
"
	
	
	
	comment "Boot class path manipulation, for getResources()."
      end

      operation 455835 "getBootClassPathResource"
	class_operation private return_type class_ref 3399692 // String
	nparams 2
	  param inout name "name" type class_ref 3399692 // String
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}native ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws};
"
	
	
	
      end
    end

    class 162715 "Void"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Placeholder class for the Java keyword {@code void}.

@since 1.1"
      classrelation 212635 // TYPE (<unidirectional association>)
	relation 212635 --->
	  a role_name "TYPE" init_value " lookupType()" class_relation const_relation public
	    comment "
The {@link Class} object that represents the primitive type {@code void}.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Void> ${name}${value};
"
	    classrelation_ref 212635 // TYPE (<unidirectional association>)
	  b parent class_ref 3421708 // Class
      end

      operation 457627 "lookupType"
	class_operation private return_type class_ref 3421708 // Class
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Void> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
"
	
	
	
	comment " Note: Void.TYPE can't be set to \"void.class\", since *that* is
 defined to be \"java.lang.Void.TYPE\";"
      end

      operation 457755 "Void"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end
  end

  deploymentview 319500 "lang"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 1412492 "Class"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import dalvik.system.VMStack;
import java.io.InputStream;
import java.io.Serializable;
import java.lang.annotation.Annotation;
import java.lang.annotation.Inherited;
import java.lang.reflect.AnnotatedElement;
import java.lang.reflect.Constructor;
import java.lang.reflect.Field;
import java.lang.reflect.GenericDeclaration;
import java.lang.reflect.Member;
import java.lang.reflect.Method;
import java.lang.reflect.Modifier;
import java.lang.reflect.Type;
import java.lang.reflect.TypeVariable;
import java.net.URL;
import java.security.ProtectionDomain;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.HashMap;
import java.util.List;
import libcore.util.CollectionUtils;
import libcore.util.EmptyArray;
import org.apache.harmony.kernel.vm.StringUtils;
import org.apache.harmony.luni.lang.reflect.GenericSignatureParser;
import org.apache.harmony.luni.lang.reflect.Types;
${definition}"
      associated_classes
	class_ref 3421708 // Class
      end
      comment "Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


Copyright (C) 2006-2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1412620 "Object"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3401484 // Object
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1412748 "String"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
import java.io.UnsupportedEncodingException;
import java.nio.ByteBuffer;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import java.nio.charset.Charsets;
import java.util.Arrays;
import java.util.Comparator;
import java.util.Formatter;
import java.util.Locale;
import java.util.regex.Pattern;
import libcore.util.EmptyArray;
${definition}"
      associated_classes
	class_ref 3399692 // String
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 128283 "Cloneable"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 129435 // Cloneable
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 129819 "AutoCloseable"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 132123 // AutoCloseable
      end
      comment "Copyright (C) 2011 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 130971 "Readable"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.nio.CharBuffer;
${definition}"
      associated_classes
	class_ref 133147 // Readable
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 131355 "Appendable"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
${definition}"
      associated_classes
	class_ref 133659 // Appendable
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 132251 "Throwable"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.PrintStream;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import libcore.util.EmptyArray;
${definition}"
      associated_classes
	class_ref 134683 // Throwable
      end
      comment "Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 132379 "Exception"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 132251 // Exception
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 134811 "Comparable"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 139675 // Comparable
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 137627 "Error"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 143643 // Error
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 141595 "LinkageError"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 147227 // LinkageError
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 141723 "IncompatibleClassChangeError"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 147099 // IncompatibleClassChangeError
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 141851 "AbstractMethodError"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 146971 // AbstractMethodError
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 141979 "AbstractStringBuilder"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.InvalidObjectException;
import java.util.Arrays;
import libcore.util.EmptyArray;
${definition}"
      associated_classes
	class_ref 147355 // AbstractStringBuilder
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 142107 "RuntimeException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 806284 // RuntimeException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 142235 "ArithmeticException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 147611 // ArithmeticException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 142363 "IndexOutOfBoundsException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 147867 // IndexOutOfBoundsException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 142491 "ArrayIndexOutOfBoundsException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 147739 // ArrayIndexOutOfBoundsException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 142619 "ArrayStoreException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 147995 // ArrayStoreException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 142747 "AssertionError"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 148123 // AssertionError
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 142875 "Boolean"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
${definition}"
      associated_classes
	class_ref 130203 // Boolean
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 143003 "Number"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 148379 // Number
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 143131 "Byte"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 148251 // Byte
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 143259 "CaseMapper"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.util.Locale;
import libcore.icu.ICU;
${definition}"
      associated_classes
	class_ref 148635 // CaseMapper
      end
      comment "Copyright (C) 2010 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 143387 "Character"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
import java.util.Arrays;
${definition}"
      associated_classes
	class_ref 148763 // Character
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 143515 "CharSequence"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 133787 // CharSequence
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 144027 "ClassCastException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 150683 // ClassCastException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 144155 "ClassCircularityError"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 150811 // ClassCircularityError
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 144283 "ClassFormatError"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 150939 // ClassFormatError
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 144411 "ClassLoader"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import dalvik.system.PathClassLoader;
import dalvik.system.VMStack;
import java.io.IOException;
import java.io.InputStream;
import java.net.URL;
import java.nio.ByteBuffer;
import java.security.ProtectionDomain;
import java.util.Collection;
import java.util.Collections;
import java.util.Enumeration;
import java.util.HashMap;
import java.util.Map;
${definition}"
      associated_classes
	class_ref 138523 // ClassLoader
	class_ref 151195 // TwoEnumerationsInOne
	class_ref 151323 // BootClassLoader
      end
      comment "Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


Copyright (C) 2008 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 144667 "ClassNotFoundException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 128795 // ClassNotFoundException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 144795 "CloneNotSupportedException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 151451 // CloneNotSupportedException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 144923 "Compiler"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 151579 // Compiler
      end
      comment "Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 145051 "Runnable"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 151963 // Runnable
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 145179 "Daemons"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import dalvik.system.VMRuntime;
import java.lang.ref.FinalizerReference;
import java.lang.ref.Reference;
import java.lang.ref.ReferenceQueue;
import java.util.concurrent.TimeoutException;
import libcore.util.EmptyArray;
${definition}"
      associated_classes
	class_ref 151707 // Daemons
      end
      comment "Copyright (C) 2011 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 145307 "Deprecated"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.lang.annotation.Documented;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
${definition}"
      associated_classes
	class_ref 152859 // Deprecated
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 145435 "Double"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 152987 // Double
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 145563 "Enum"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
import libcore.util.BasicLruCache;
import libcore.util.EmptyArray;
${definition}"
      associated_classes
	class_ref 153115 // Enum
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 145691 "EnumConstantNotPresentException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 153371 // EnumConstantNotPresentException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 145819 "ExceptionInInitializerError"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 153499 // ExceptionInInitializerError
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 145947 "FindBugsSuppressWarnings"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.lang.annotation.Retention;
import java.lang.annotation.Target;
import static java.lang.annotation.ElementType.CONSTRUCTOR;
import static java.lang.annotation.ElementType.FIELD;
import static java.lang.annotation.ElementType.LOCAL_VARIABLE;
import static java.lang.annotation.ElementType.METHOD;
import static java.lang.annotation.ElementType.PARAMETER;
import static java.lang.annotation.ElementType.TYPE;
import static java.lang.annotation.RetentionPolicy.CLASS;
${definition}"
      associated_classes
	class_ref 153627 // FindBugsSuppressWarnings
      end
      comment "Copyright (C) 2011 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 146075 "Float"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 129947 // Float
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 146203 "HexStringParser"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.util.regex.Matcher;
import java.util.regex.Pattern;
${definition}"
      associated_classes
	class_ref 153755 // HexStringParser
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 146331 "IllegalAccessError"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 154011 // IllegalAccessError
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 146459 "IllegalAccessException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 150427 // IllegalAccessException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 146587 "IllegalArgumentException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 128283 // IllegalArgumentException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 146715 "IllegalMonitorStateException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 154139 // IllegalMonitorStateException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 146843 "IllegalStateException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 154267 // IllegalStateException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 146971 "IllegalThreadStateException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 154395 // IllegalThreadStateException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 147099 "ThreadLocal"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.lang.ref.Reference;
import java.lang.ref.WeakReference;
import java.util.concurrent.atomic.AtomicInteger;
${definition}"
      associated_classes
	class_ref 144539 // ThreadLocal
      end
      comment "Copyright (C) 2008 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 147227 "InheritableThreadLocal"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 154523 // InheritableThreadLocal
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 147355 "InstantiationError"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 154907 // InstantiationError
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 147483 "InstantiationException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 150299 // InstantiationException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 147611 "Integer"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 130075 // Integer
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 147739 "IntegralToString"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 155035 // IntegralToString
      end
      comment "Copyright (C) 2010 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 147867 "VirtualMachineError"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 155419 // VirtualMachineError
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 147995 "InternalError"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 155291 // InternalError
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 148123 "InterruptedException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 155547 // InterruptedException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 148251 "Iterable"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.util.Iterator;
${definition}"
      associated_classes
	class_ref 155675 // Iterable
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 148379 "Long"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 155931 // Long
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 148507 "Math"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.util.Random;
${definition}"
      associated_classes
	class_ref 156059 // Math
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 148635 "NegativeArraySizeException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 156187 // NegativeArraySizeException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 148763 "NoClassDefFoundError"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 156315 // NoClassDefFoundError
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 148891 "NoSuchFieldError"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 156443 // NoSuchFieldError
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 149019 "NoSuchFieldException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 150043 // NoSuchFieldException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 149147 "NoSuchMethodError"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 156571 // NoSuchMethodError
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 149275 "NoSuchMethodException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 149787 // NoSuchMethodException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 149403 "NullPointerException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 156699 // NullPointerException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 149531 "NumberFormatException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 148507 // NumberFormatException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 149659 "OutOfMemoryError"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 156827 // OutOfMemoryError
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 149787 "Override"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.lang.annotation.ElementType;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;
${definition}"
      associated_classes
	class_ref 156955 // Override
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 149915 "Package"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import dalvik.system.VMStack;
import java.lang.annotation.Annotation;
import java.lang.reflect.AnnotatedElement;
import java.net.URL;
${definition}"
      associated_classes
	class_ref 150555 // Package
      end
      comment "Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


Copyright (C) 2008 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 150043 "Process"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.InputStream;
import java.io.OutputStream;
${definition}"
      associated_classes
	class_ref 157083 // Process
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 150171 "ProcessBuilder"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Hashtable;
import java.util.List;
import java.util.Map;
${definition}"
      associated_classes
	class_ref 157211 // ProcessBuilder
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 150683 "ProcessManager"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.File;
import java.io.FileDescriptor;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.lang.ref.ReferenceQueue;
import java.lang.ref.WeakReference;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import libcore.io.ErrnoException;
import libcore.io.IoUtils;
import libcore.io.Libcore;
import libcore.util.MutableInt;
${definition}"
      associated_classes
	class_ref 157339 // ProcessManager
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 150811 "RealToString"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import libcore.math.MathUtils;
${definition}"
      associated_classes
	class_ref 158235 // RealToString
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 150939 "Runtime"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import dalvik.system.BaseDexClassLoader;
import dalvik.system.VMDebug;
import dalvik.system.VMStack;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.OutputStreamWriter;
import java.lang.ref.FinalizerReference;
import java.util.ArrayList;
import java.util.List;
import java.util.StringTokenizer;
import libcore.io.IoUtils;
import libcore.io.Libcore;
import static libcore.io.OsConstants._SC_NPROCESSORS_CONF;
${definition}"
      associated_classes
	class_ref 158363 // Runtime
      end
      comment "Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


Copyright (C) 2008 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 151067 "RuntimePermission"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.security.BasicPermission;
import java.security.Permission;
${definition}"
      associated_classes
	class_ref 158491 // RuntimePermission
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 151195 "SecurityException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 141723 // SecurityException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 151323 "SecurityManager"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.FileDescriptor;
import java.net.InetAddress;
import java.security.Permission;
${definition}"
      associated_classes
	class_ref 158619 // SecurityManager
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 151451 "Short"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 159003 // Short
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 151579 "StackOverflowError"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 159131 // StackOverflowError
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 151707 "StackTraceElement"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.Serializable;
${definition}"
      associated_classes
	class_ref 134811 // StackTraceElement
      end
      comment "Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 151835 "StrictMath"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 159259 // StrictMath
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 152091 "StringBuffer"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.ObjectStreamField;
import java.io.Serializable;
${definition}"
      associated_classes
	class_ref 146715 // StringBuffer
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 152219 "StringBuilder"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;
${definition}"
      associated_classes
	class_ref 155163 // StringBuilder
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 152347 "StringIndexOutOfBoundsException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 147483 // StringIndexOutOfBoundsException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 152475 "StringToReal"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 159515 // StringToReal
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 152603 "SuppressWarnings"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.lang.annotation.ElementType;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;
${definition}"
      associated_classes
	class_ref 159771 // SuppressWarnings
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 152987 "System"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import dalvik.system.VMRuntime;
import dalvik.system.VMStack;
import java.io.BufferedInputStream;
import java.io.Console;
import java.io.FileDescriptor;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.PrintStream;
import java.nio.channels.Channel;
import java.nio.channels.spi.SelectorProvider;
import java.util.AbstractMap;
import java.util.Collections;
import java.util.HashMap;
import java.util.Map;
import java.util.Properties;
import java.util.Set;
import libcore.icu.ICU;
import libcore.io.Libcore;
import libcore.io.StructUtsname;
import libcore.util.ZoneInfoDB;
${definition}"
      associated_classes
	class_ref 159899 // System
      end
      comment "Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


Copyright (C) 2008 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 153115 "Thread"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import dalvik.system.VMStack;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import libcore.util.EmptyArray;
${definition}"
      associated_classes
	class_ref 1201420 // Thread
      end
      comment "Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


Copyright (C) 2008 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 153243 "ThreadDeath"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 161563 // ThreadDeath
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 153371 "ThreadGroup"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.lang.ref.WeakReference;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import libcore.util.CollectionUtils;
${definition}"
      associated_classes
	class_ref 158747 // ThreadGroup
      end
      comment "Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 153499 "TypeNotPresentException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 161691 // TypeNotPresentException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 153627 "UnknownError"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 161819 // UnknownError
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 153755 "UnsafeByteSequence"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.nio.charset.Charset;
${definition}"
      associated_classes
	class_ref 161947 // UnsafeByteSequence
      end
      comment "Copyright (C) 2010 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 153883 "UnsatisfiedLinkError"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 162075 // UnsatisfiedLinkError
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 154011 "UnsupportedClassVersionError"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 162203 // UnsupportedClassVersionError
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 154139 "UnsupportedOperationException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 162331 // UnsupportedOperationException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 154267 "VerifyError"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 162459 // VerifyError
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 154395 "VMClassLoader"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.net.MalformedURLException;
import java.net.URL;
import java.util.ArrayList;
import java.util.List;
${definition}"
      associated_classes
	class_ref 162587 // VMClassLoader
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 154523 "VMThread"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 161307 // VMThread
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 154651 "Void"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.lang.reflect.Method;
import libcore.util.EmptyArray;
${definition}"
      associated_classes
	class_ref 162715 // Void
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end
  end

  package_ref 129307 // reflect

  package_ref 129435 // ref

  package_ref 129563 // annotation
end
