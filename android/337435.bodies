class ObjectIdentifier
!!!2208667.java!!!	ObjectIdentifier(inout oid : int)

        validateOid(oid);

        this.oid = oid;
!!!2208795.java!!!	ObjectIdentifier(inout oid : int, inout name : String, inout oidGroup : Object)
        this(oid);

        if (oidGroup == null) {
            throw new NullPointerException("oidGroup == null");
        }
        this.group = oidGroup;

        this.name = name;
        toOIDString(); // init soid & sOID
!!!2208923.java!!!	getOid() : int
        return oid;
!!!2209051.java!!!	getName() : String
        return name;
!!!2209179.java!!!	getGroup() : Object
        return group;
!!!2209307.java!!!	equals(inout o : Object) : boolean
        if (this == o) {
            return true;
        }
        if (o == null || this.getClass() != o.getClass()) {
            return false;
        }
        return Arrays.equals(oid, ((ObjectIdentifier) o).oid);
!!!2209435.java!!!	toOIDString() : String
        if (sOID == null) {
            sOID = "OID." + toString();
        }
        return sOID;
!!!2209563.java!!!	toString() : String
        if (soid == null) {
            StringBuilder sb = new StringBuilder(4 * oid.length);

            for (int i = 0; i < oid.length - 1; ++i) {
                sb.append(oid[i]);
                sb.append('.');
            }
            sb.append(oid[oid.length - 1]);
            soid = sb.toString();
        }
        return soid;
!!!2209691.java!!!	hashCode() : int
        if (hash == -1) {
            hash = hashIntArray(oid);
        }
        return hash;
!!!2209819.java!!!	validateOid(inout oid : int) : void

        if (oid == null) {
            throw new NullPointerException("oid == null");
        }

        if (oid.length < 2) {
            throw new IllegalArgumentException("OID MUST have at least 2 subidentifiers");
        }

        if (oid[0] > 2) {
            throw new IllegalArgumentException("Valid values for first subidentifier are 0, 1 and 2");
        } else if (oid[0] != 2 && oid[1] > 39) {
            throw new IllegalArgumentException("If the first subidentifier has 0 or 1 value the second subidentifier value MUST be less than 40");
        }
!!!2209947.java!!!	hashIntArray(inout array : int) : int
        int intHash = 0;
        for (int i = 0; i < array.length && i < 4; i++) {
            intHash += array[i] << (8 * i); //TODO what about to find better one?
        }
        return intHash & 0x7FFFFFFF; // only positive
