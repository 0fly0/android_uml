class FboCache
!!!1066892.cpp!!!	FboCache()
    char property[PROPERTY_VALUE_MAX];
    if (property_get(PROPERTY_FBO_CACHE_SIZE, property, NULL) > 0) {
        INIT_LOGD("  Setting fbo cache size to %s", property);
        mMaxSize = atoi(property);
    } else {
        INIT_LOGD("  Using default fbo cache size of %d", DEFAULT_FBO_CACHE_SIZE);
    }
!!!1067020.cpp!!!	~FboCache()
    clear();
!!!1067148.cpp!!!	get() : GLuint
    GLuint fbo;
    if (mCache.size() > 0) {
        fbo = mCache.itemAt(mCache.size() - 1);
        mCache.removeAt(mCache.size() - 1);
    } else {
        glGenFramebuffers(1, &fbo);
    }
    return fbo;
!!!1067276.cpp!!!	put(in fbo : GLuint) : bool
    if (mCache.size() < mMaxSize) {
        mCache.add(fbo);
        return true;
    }

    glDeleteFramebuffers(1, &fbo);
    return false;
!!!1067404.cpp!!!	clear() : void
    for (size_t i = 0; i < mCache.size(); i++) {
        const GLuint fbo = mCache.itemAt(i);
        glDeleteFramebuffers(1, &fbo);
    }
    mCache.clear();
!!!1067532.cpp!!!	getSize() : uint32_t
    return mCache.size();
!!!1067660.cpp!!!	getMaxSize() : uint32_t
    return mMaxSize;
