class PrintWriter
!!!165787.java!!!	PrintWriter(inout out : OutputStream)
        this(new OutputStreamWriter(out), false);
!!!165915.java!!!	PrintWriter(inout out : OutputStream, inout autoFlush : boolean)
        this(new OutputStreamWriter(out), autoFlush);
!!!166043.java!!!	PrintWriter(inout wr : Writer)
        this(wr, false);
!!!166171.java!!!	PrintWriter(inout wr : Writer, inout autoFlush : boolean)
        super(wr);
        this.autoFlush = autoFlush;
        out = wr;
!!!166299.java!!!	PrintWriter(inout file : File)
        this(new OutputStreamWriter(new BufferedOutputStream(new FileOutputStream(file))), false);
!!!166427.java!!!	PrintWriter(inout file : File, inout csn : String)
        this(new OutputStreamWriter(new BufferedOutputStream(new FileOutputStream(file)), csn),
                false);
!!!166555.java!!!	PrintWriter(inout fileName : String)
        this(new OutputStreamWriter(new BufferedOutputStream(new FileOutputStream(fileName))),
                false);
!!!166683.java!!!	PrintWriter(inout fileName : String, inout csn : String)
        this(new OutputStreamWriter(new BufferedOutputStream(new FileOutputStream(fileName)), csn),
                false);
!!!166811.java!!!	checkError() : boolean
        Writer delegate = out;
        if (delegate == null) {
            return ioError;
        }

        flush();
        return ioError || delegate.checkError();
!!!166939.java!!!	clearError() : void
        synchronized (lock) {
            ioError = false;
        }
!!!167067.java!!!	close() : void
        synchronized (lock) {
            if (out != null) {
                try {
                    out.close();
                } catch (IOException e) {
                    setError();
                }
                out = null;
            }
        }
!!!167195.java!!!	flush() : void
        synchronized (lock) {
            if (out != null) {
                try {
                    out.flush();
                } catch (IOException e) {
                    setError();
                }
            } else {
                setError();
            }
        }
!!!167323.java!!!	format(inout format : String, inout  : Object...args) : PrintWriter
        return format(Locale.getDefault(), format, args);
!!!167451.java!!!	format(inout l : Locale, inout format : String, inout  : Object...args) : PrintWriter
        if (format == null) {
            throw new NullPointerException("format == null");
        }
        new Formatter(this, l).format(format, args);
        if (autoFlush) {
            flush();
        }
        return this;
!!!167579.java!!!	printf(inout format : String, inout  : Object...args) : PrintWriter
        return format(format, args);
!!!167707.java!!!	printf(inout l : Locale, inout format : String, inout  : Object...args) : PrintWriter
        return format(l, format, args);
!!!167835.java!!!	print(inout charArray : char) : void
        print(new String(charArray, 0, charArray.length));
!!!167963.java!!!	print(in ch : char) : void
        print(String.valueOf(ch));
!!!168091.java!!!	print(in dnum : double) : void
        print(String.valueOf(dnum));
!!!168219.java!!!	print(in fnum : float) : void
        print(String.valueOf(fnum));
!!!168347.java!!!	print(in inum : int) : void
        print(String.valueOf(inum));
!!!168475.java!!!	print(in lnum : long) : void
        print(String.valueOf(lnum));
!!!168603.java!!!	print(inout obj : Object) : void
        print(String.valueOf(obj));
!!!168731.java!!!	print(inout str : String) : void
        write(str != null ? str : String.valueOf((Object) null));
!!!168859.java!!!	print(inout bool : boolean) : void
        print(String.valueOf(bool));
!!!168987.java!!!	println() : void
        synchronized (lock) {
            print(System.lineSeparator());
            if (autoFlush) {
                flush();
            }
        }
!!!169115.java!!!	println(inout chars : char) : void
        println(new String(chars, 0, chars.length));
!!!169243.java!!!	println(in c : char) : void
        println(String.valueOf(c));
!!!169371.java!!!	println(in d : double) : void
        println(String.valueOf(d));
!!!169499.java!!!	println(in f : float) : void
        println(String.valueOf(f));
!!!169627.java!!!	println(in i : int) : void
        println(String.valueOf(i));
!!!169755.java!!!	println(in l : long) : void
        println(String.valueOf(l));
!!!169883.java!!!	println(inout obj : Object) : void
        println(String.valueOf(obj));
!!!170011.java!!!	println(inout str : String) : void
        synchronized (lock) {
            print(str);
            println();
        }
!!!170139.java!!!	println(inout b : boolean) : void
        println(String.valueOf(b));
!!!170267.java!!!	setError() : void
        synchronized (lock) {
            ioError = true;
        }
!!!170395.java!!!	write(inout buf : char) : void
        write(buf, 0, buf.length);
!!!170523.java!!!	write(inout buf : char, in offset : int, in count : int) : void
        doWrite(buf, offset, count);
!!!170651.java!!!	write(in oneChar : int) : void
        doWrite(new char[] { (char) oneChar }, 0, 1);
!!!170779.java!!!	doWrite(inout buf : char, in offset : int, in count : int) : void
        synchronized (lock) {
            if (out != null) {
                try {
                    out.write(buf, offset, count);
                } catch (IOException e) {
                    setError();
                }
            } else {
                setError();
            }
        }
!!!170907.java!!!	write(inout str : String) : void
        write(str.toCharArray());
!!!171035.java!!!	write(inout str : String, in offset : int, in count : int) : void
        write(str.substring(offset, offset + count).toCharArray());
!!!171163.java!!!	append(in c : char) : PrintWriter
        write(c);
        return this;
!!!171291.java!!!	append(inout csq : CharSequence) : PrintWriter
        if (csq == null) {
            csq = "null";
        }
        append(csq, 0, csq.length());
        return this;
!!!171419.java!!!	append(inout csq : CharSequence, in start : int, in end : int) : PrintWriter
        if (csq == null) {
            csq = "null";
        }
        String output = csq.subSequence(start, end).toString();
        write(output, 0, output.length());
        return this;
