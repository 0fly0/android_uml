class TetherInterfaceSM
!!!8484620.java!!!	TetherInterfaceSM(in name : String, inout looper : Looper, inout usb : boolean)
            super(name, looper);
            mIfaceName = name;
            mUsb = usb;
            setLastError(ConnectivityManager.TETHER_ERROR_NO_ERROR);

            mInitialState = new InitialState();
            addState(mInitialState);
            mStartingState = new StartingState();
            addState(mStartingState);
            mTetheredState = new TetheredState();
            addState(mTetheredState);
            mUnavailableState = new UnavailableState();
            addState(mUnavailableState);

            setInitialState(mInitialState);
!!!8484748.java!!!	toString() : String
            String res = new String();
            res += mIfaceName + " - ";
            IState current = getCurrentState();
            if (current == mInitialState) res += "InitialState";
            if (current == mStartingState) res += "StartingState";
            if (current == mTetheredState) res += "TetheredState";
            if (current == mUnavailableState) res += "UnavailableState";
            if (mAvailable) res += " - Available";
            if (mTethered) res += " - Tethered";
            res += " - lastError =" + mLastError;
            return res;
!!!8484876.java!!!	getLastError() : int
            synchronized (Tethering.this.mPublicSync) {
                return mLastError;
            }
!!!8485004.java!!!	setLastError(in error : int) : void
            synchronized (Tethering.this.mPublicSync) {
                mLastError = error;

                if (isErrored()) {
                    if (mUsb) {
                        // note everything's been unwound by this point so nothing to do on
                        // further error..
                        Tethering.this.configureUsbIface(false);
                    }
                }
            }
!!!8485132.java!!!	isAvailable() : boolean
            synchronized (Tethering.this.mPublicSync) {
                return mAvailable;
            }
!!!8485260.java!!!	setAvailable(inout available : boolean) : void
            synchronized (Tethering.this.mPublicSync) {
                mAvailable = available;
            }
!!!8485388.java!!!	isTethered() : boolean
            synchronized (Tethering.this.mPublicSync) {
                return mTethered;
            }
!!!8485516.java!!!	setTethered(inout tethered : boolean) : void
            synchronized (Tethering.this.mPublicSync) {
                mTethered = tethered;
            }
!!!8485644.java!!!	isErrored() : boolean
            synchronized (Tethering.this.mPublicSync) {
                return (mLastError != ConnectivityManager.TETHER_ERROR_NO_ERROR);
            }
!!!8486924.java!!!	setLastErrorAndTransitionToInitialState(in error : int) : void
            setLastError(error);
            transitionTo(mInitialState);
