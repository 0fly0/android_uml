class EventHandler
!!!12006924.java!!!	EventHandler(inout observer : AVSettingsObserver, inout looper : Looper)
            super(looper);
            mObserver = observer;
!!!12007052.java!!!	handleMessage(inout msg : Message) : void
            synchronized(syncObject) {
                switch(msg.what) {
                    case VALUE_EVENT: {
                        ValueChangedObserver ob = mValueObservers.get(Integer.valueOf(msg.arg1));
                        if (ob != null && msg.obj != null && msg.obj instanceof Parcel) {
                            Parcel parcel = (Parcel)msg.obj;
                            parcel.setDataPosition(0);
                            String name = parcel.readString();
                            int type = parcel.readInt();
                            String strValue = parcel.readString();
                            SettingValue value = new SettingValue(type, strValue);
                            ob.onValueChanged(mObserver, name, value);
                            parcel.recycle();
                        }
                        return;
                    }
                    case HANDLER_EVENT: {
                        HandlerObserver ob = mHandlerObservers.get(Integer.valueOf(msg.arg1));
                        if (ob == null) {
                            Log.w(TAG, "Handler observer null for handle: " + msg.arg1);
                            return;
                        }
                        if (msg.obj != null && msg.obj instanceof Parcel) {
                            Parcel parcel = (Parcel)msg.obj;
                            parcel.setDataPosition(0);
                            Log.v(TAG, "HANDLER_EVENT ext: " + msg.arg2);
                            ob.onEvent(mObserver, msg.arg2, parcel);
                            parcel.recycle();
                        } else {
                            ob.onEvent(mObserver, msg.arg2, null);
                        }
                        return;
                    }
                    default:
                        return;
                }
            }
