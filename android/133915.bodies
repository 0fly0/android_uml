class ByteArrayInputStream
!!!152603.java!!!	ByteArrayInputStream(inout buf : byte)
        this.mark = 0;
        this.buf = buf;
        this.count = buf.length;
!!!152731.java!!!	ByteArrayInputStream(inout buf : byte, in offset : int, in length : int)
        this.buf = buf;
        pos = offset;
        mark = offset;
        count = offset + length > buf.length ? buf.length : offset + length;
!!!152859.java!!!	available() : int
        return count - pos;
!!!152987.java!!!	close() : void
        // Do nothing on close, this matches JDK behavior.
!!!153115.java!!!	mark(in readlimit : int) : void
        mark = pos;
!!!153243.java!!!	markSupported() : boolean
        return true;
!!!153371.java!!!	read() : int
        return pos < count ? buf[pos++] & 0xFF : -1;
!!!153499.java!!!	read(inout buffer : byte, in offset : int, in length : int) : int
        Arrays.checkOffsetAndCount(buffer.length, offset, length);

        // Are there any bytes available?
        if (this.pos >= this.count) {
            return -1;
        }
        if (length == 0) {
            return 0;
        }

        int copylen = this.count - pos < length ? this.count - pos : length;
        System.arraycopy(this.buf, pos, buffer, offset, copylen);
        pos += copylen;
        return copylen;
!!!153627.java!!!	reset() : void
        pos = mark;
!!!153755.java!!!	skip(in byteCount : long) : long
        if (byteCount <= 0) {
            return 0;
        }
        int temp = pos;
        pos = this.count - pos < byteCount ? this.count : (int) (pos + byteCount);
        return pos - temp;
