class Collator
!!!1114267.java!!!	Collator(inout icuColl : RuleBasedCollatorICU)
        this.icuColl = icuColl;
!!!1114395.java!!!	Collator()
        icuColl = new RuleBasedCollatorICU(Locale.getDefault());
!!!1114523.java!!!	clone() : Object
        try {
            Collator clone = (Collator) super.clone();
            clone.icuColl = (RuleBasedCollatorICU) icuColl.clone();
            return clone;
        } catch (CloneNotSupportedException e) {
            throw new AssertionError(e);
        }
!!!1114651.java!!!	compare(inout object1 : Object, inout object2 : Object) : int
        return compare((String) object1, (String) object2);
!!!1114907.java!!!	equals(inout object : Object) : boolean
        if (!(object instanceof Collator)) {
            return false;
        }
        Collator collator = (Collator) object;
        return icuColl == null ? collator.icuColl == null : icuColl.equals(collator.icuColl);
!!!1115035.java!!!	equals(inout string1 : String, inout string2 : String) : boolean
        return compare(string1, string2) == 0;
!!!1115163.java!!!	getAvailableLocales() : Locale
        return ICU.getAvailableCollatorLocales();
!!!1115419.java!!!	getDecomposition() : int
        return decompositionMode_ICU_Java(icuColl.getDecomposition());
!!!1115547.java!!!	getInstance() : Collator
        return getInstance(Locale.getDefault());
!!!1115675.java!!!	getInstance(inout locale : Locale) : Collator
        if (locale == null) {
            throw new NullPointerException("locale == null");
        }
        return new RuleBasedCollator(new RuleBasedCollatorICU(locale));
!!!1115803.java!!!	getStrength() : int
        return strength_ICU_Java(icuColl.getStrength());
!!!1116059.java!!!	setDecomposition(in value : int) : void
        icuColl.setDecomposition(decompositionMode_Java_ICU(value));
!!!1116187.java!!!	setStrength(in value : int) : void
        icuColl.setStrength(strength_Java_ICU(value));
!!!1116315.java!!!	decompositionMode_Java_ICU(in mode : int) : int
        switch (mode) {
        case Collator.CANONICAL_DECOMPOSITION:
            return RuleBasedCollatorICU.VALUE_ON;
        case Collator.NO_DECOMPOSITION:
            return RuleBasedCollatorICU.VALUE_OFF;
        }
        throw new IllegalArgumentException("Bad mode: " + mode);
!!!1116443.java!!!	decompositionMode_ICU_Java(in mode : int) : int
        int javaMode = mode;
        switch (mode) {
        case RuleBasedCollatorICU.VALUE_OFF:
            javaMode = Collator.NO_DECOMPOSITION;
            break;
        case RuleBasedCollatorICU.VALUE_ON:
            javaMode = Collator.CANONICAL_DECOMPOSITION;
            break;
        }
        return javaMode;
!!!1116571.java!!!	strength_Java_ICU(in value : int) : int
        switch (value) {
        case Collator.PRIMARY:
            return RuleBasedCollatorICU.VALUE_PRIMARY;
        case Collator.SECONDARY:
            return RuleBasedCollatorICU.VALUE_SECONDARY;
        case Collator.TERTIARY:
            return RuleBasedCollatorICU.VALUE_TERTIARY;
        case Collator.IDENTICAL:
            return RuleBasedCollatorICU.VALUE_IDENTICAL;
        }
        throw new IllegalArgumentException("Bad strength: " + value);
!!!1116699.java!!!	strength_ICU_Java(in value : int) : int
        int javaValue = value;
        switch (value) {
        case RuleBasedCollatorICU.VALUE_PRIMARY:
            javaValue = Collator.PRIMARY;
            break;
        case RuleBasedCollatorICU.VALUE_SECONDARY:
            javaValue = Collator.SECONDARY;
            break;
        case RuleBasedCollatorICU.VALUE_TERTIARY:
            javaValue = Collator.TERTIARY;
            break;
        case RuleBasedCollatorICU.VALUE_IDENTICAL:
            javaValue = Collator.IDENTICAL;
            break;
        }
        return javaValue;
