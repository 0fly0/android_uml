format 74
"ssl" // framework::base::opengl::java::javax::net::ssl
  revision 1
  modified_by 27 "shchen"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "/home/shchen/work/android-x86/libcore/luni/src/main/java/javax/net/ssl/"
  java_package "javax.net.ssl"
  classview 130587 "ssl"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 176411 "SSLPeerUnverifiedException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The exception that is thrown when the identity of a peer has not been
verified."
      classrelation 526747 // <generalisation>
	relation 526747 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 526747 // <generalisation>
	  b parent class_ref 295707 // SSLException
      end

      attribute 446619 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -8919512675000600547L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 1839899 "SSLPeerUnverifiedException"
	public explicit_return_type ""
	nparams 1
	  param inout name "reason" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code SSLPeerUnverifiedException} with the specified
message.

@param reason
           the detail message for the exception."
      end
    end

    class 292507 "CertPathTrustManagerParameters"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Certification path parameters to provide to certification path
based {@link TrustManager}.

@since 1.5"
      classrelation 520987 // <realization>
	relation 520987 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 520987 // <realization>
	  b parent class_ref 292635 // ManagerFactoryParameters
      end

      classrelation 521115 // param (<unidirectional association>)
	relation 521115 --->
	  a role_name "param" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 521115 // param (<unidirectional association>)
	  b parent class_ref 211355 // CertPathParameters
      end

      operation 1818395 "CertPathTrustManagerParameters"
	public explicit_return_type ""
	nparams 1
	  param inout name "parameters" type class_ref 211355 // CertPathParameters
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code CertPathTrustManagerParameters} with the specified
certification path parameters.

@param parameters
           the certification path parameters."
      end

      operation 1818523 "getParameters"
	public return_type class_ref 211355 // CertPathParameters
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a copy of the certification path parameters.

@return a copy of the certification path parameters."
      end
    end

    class 292635 "ManagerFactoryParameters"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The marker interface for key manager factory parameters. Its purpose is to
group key manager factory parameters objects.

@since 1.4"
    end

    class 292763 "DefaultHostnameVerifier"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A HostnameVerifier consistent with <a
href=\"http://www.ietf.org/rfc/rfc2818.txt\">RFC 2818</a>.

@hide accessible via HttpsURLConnection.getDefaultHostnameVerifier()"
      classrelation 521243 // <realization>
	relation 521243 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 521243 // <realization>
	  b parent class_ref 292891 // HostnameVerifier
      end

      attribute 443419 "ALT_DNS_NAME"
	class_attribute const_attribute private explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 443547 "ALT_IPA_NAME"
	class_attribute const_attribute private explicit_type "int"
	init_value " 7"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 1818779 "verify"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "host" type class_ref 3399692 // String
	  param inout name "session" type class_ref 293019 // SSLSession
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1818907 "verify"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "host" type class_ref 3399692 // String
	  param inout name "certificate" type class_ref 214299 // X509Certificate
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1819035 "verifyIpAddress"
	private explicit_return_type "boolean"
	nparams 2
	  param inout name "ipAddress" type class_ref 3399692 // String
	  param inout name "certificate" type class_ref 214299 // X509Certificate
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if {@code certificate} matches {@code ipAddress}."
      end

      operation 1819163 "verifyHostName"
	private explicit_return_type "boolean"
	nparams 2
	  param inout name "hostName" type class_ref 3399692 // String
	  param inout name "certificate" type class_ref 214299 // X509Certificate
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if {@code certificate} matches {@code hostName}."
      end

      operation 1819291 "getSubjectAltNames"
	private return_type class_ref 131483 // List
	nparams 2
	  param inout name "certificate" type class_ref 214299 // X509Certificate
	  param in name "type" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1819419 "verifyHostName"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "hostName" type class_ref 3399692 // String
	  param inout name "cn" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if {@code hostName} matches the name or pattern {@code cn}.

@param hostName lowercase host name.
@param cn certificate host name. May include wildcards like
    {@code *.android.com}."
      end
    end

    class 292891 "HostnameVerifier"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The interface to be used to provide hostname verification functionality.
<p>
This is an extended verification option that implementers can provide. It is to be used
during a handshake if the URL's hostname does not match the peer's
identification hostname."
      operation 1818651 "verify"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "hostname" type class_ref 3399692 // String
	  param inout name "session" type class_ref 293019 // SSLSession
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Verifies that the specified hostname is allowed within the specified SSL
session.

@param hostname
           the hostname.
@param session
           the SSL session of the connection.
@return {@code true} if the specified hostname is allowed, otherwise
        {@code false}."
      end
    end

    class 293019 "SSLSession"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The interface representing an SSL session."
      operation 1842971 "getApplicationBufferSize"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the maximum size that an application buffer can be for this
session.

@return the maximum application buffer size."
      end

      operation 1843099 "getCipherSuite"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the cipher suite used in this session.

@return the name of the cipher suite used in this session."
      end

      operation 1843227 "getCreationTime"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the time this session was created, in milliseconds since midnight
January 1st 1970 UTC.

@return the time the session was created."
      end

      operation 1843355 "getId"
	public explicit_return_type "byte"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns this sessions identifier.

@return this sessions identifier."
      end

      operation 1843483 "getLastAccessedTime"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the time this session was last accessed, in milliseconds since
midnight January 1st 1970 UTC.

@return the time this session was last accessed."
      end

      operation 1843611 "getLocalCertificates"
	public return_type class_ref 173595 // Certificate
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the list of certificates that were used to identify the local
side to the peer during the handshake.

@return the list of certificates, ordered from local certificate to
        CA's certificates."
      end

      operation 1843739 "getLocalPrincipal"
	public return_type class_ref 176539 // Principal
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the principal used to identify the local side to the peer during
the handshake.

@return the principal used to identify the local side."
      end

      operation 1843867 "getPacketBufferSize"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the maximum size that a network buffer can be for this session.

@return the maximum network buffer size."
      end

      operation 1843995 "getPeerCertificateChain"
	public return_type class_ref 294043 // X509Certificate
	nparams 0
	nexceptions 1
	  exception class_ref 176411 // SSLPeerUnverifiedException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the list of certificates the peer used to identify itself during
the handshake.
<p>
Note: this method exists for compatility reasons, use
{@link #getPeerCertificates()} instead.

@return the list of certificates, ordered from the identity certificate to
        the CA's certificates
@throws SSLPeerUnverifiedException
            if the identity of the peer is not verified."
      end

      operation 1844123 "getPeerCertificates"
	public return_type class_ref 173595 // Certificate
	nparams 0
	nexceptions 1
	  exception class_ref 176411 // SSLPeerUnverifiedException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the list of certificates the peer used to identify itself during
the handshake.

@return the list of certificates, ordered from the identity certificate to
        the CA's certificates.
@throws SSLPeerUnverifiedException
            if the identity of the peer is not verified."
      end

      operation 1844251 "getPeerHost"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the host name of the peer of this session. The host name is not
authenticated.

@return the host name of the peer of this session, or {@code null} if no
        host name is available."
      end

      operation 1844379 "getPeerPort"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the port number of the peer of this session. The port number is
not authenticated.

@return the port number of the peer, of {@code -1} is no port number is
        available."
      end

      operation 1844507 "getPeerPrincipal"
	public return_type class_ref 176539 // Principal
	nparams 0
	nexceptions 1
	  exception class_ref 176411 // SSLPeerUnverifiedException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the principal identifying the peer during the handshake.

@return the principal identifying the peer.
@throws SSLPeerUnverifiedException
            if the identity of the peer has not been verified."
      end

      operation 1844635 "getProtocol"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the protocol name that is used for all connections in this
session.

@return the protocol name that is used for all connections in this
        session."
      end

      operation 1844763 "getSessionContext"
	public return_type class_ref 295451 // SSLSessionContext
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the context of this session, or null if no context is available."
      end

      operation 1844891 "getValue"
	public return_type class_ref 3401484 // Object
	nparams 1
	  param inout name "name" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the object bound to the specified name in this session's
application layer data.

@param name
           the name of the bound value.
@return the value bound to the specified name, or {@code null} if the
        specified name does not exist or is not accessible in the current
        access control context.
@throws IllegalArgumentException
            if {@code name} is {@code null}."
      end

      operation 1845019 "getValueNames"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the list of the object names bound to this session's application
layer data..
<p>
Depending on the current access control context, the list of object names
may be different.

@return the list of the object names bound to this session's application
        layer data."
      end

      operation 1845147 "invalidate"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invalidates this session.
<p>
No new connections can be created, but any existing connection remains
valid until it is closed."
      end

      operation 1845275 "isValid"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether this session is valid.

@return {@code true} if this session is valid, otherwise {@code false}."
      end

      operation 1845403 "putValue"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 3399692 // String
	  param inout name "value" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Binds the specified object under the specified name in this session's
application layer data.
<p>
For bindings (new or existing) implementing the
{@code SSLSessionBindingListener} interface the object will be notified.

@param name
           the name to bind the object to.
@param value
           the object to bind.
@throws IllegalArgumentException
            if either {@code name} or {@code value} is {@code null}."
      end

      operation 1845531 "removeValue"
	public explicit_return_type "void"
	nparams 1
	  param inout name "name" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the binding for the specified name in this session's application
layer data. If the existing binding implements the
{@code SSLSessionBindingListener} interface the object will be notified.

@param name
           the binding to remove.
@throws IllegalArgumentException
            if {@code name} is {@code null}."
      end
    end

    class 293147 "DefaultSSLServerSocketFactory"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Default inoperative implementation of javax.net.ssl.SSLServerSocketFactory"
      classrelation 521755 // <generalisation>
	relation 521755 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 521755 // <generalisation>
	  b parent class_ref 293275 // SSLServerSocketFactory
      end

      classrelation 521883 // errMessage (<unidirectional association>)
	relation 521883 --->
	  a role_name "errMessage" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 521883 // errMessage (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      operation 1820059 "DefaultSSLServerSocketFactory"
	package explicit_return_type ""
	nparams 1
	  param inout name "mes" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1820187 "getDefaultCipherSuites"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1820315 "getSupportedCipherSuites"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1820443 "createServerSocket"
	public return_type class_ref 176667 // ServerSocket
	nparams 1
	  param in name "port" explicit_type "int"
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1820571 "createServerSocket"
	public return_type class_ref 176667 // ServerSocket
	nparams 2
	  param in name "port" explicit_type "int"
	  param in name "backlog" explicit_type "int"
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1820699 "createServerSocket"
	public return_type class_ref 176667 // ServerSocket
	nparams 3
	  param in name "port" explicit_type "int"
	  param in name "backlog" explicit_type "int"
	  param inout name "iAddress" type class_ref 158875 // InetAddress
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 293275 "SSLServerSocketFactory"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The factory for SSL server sockets."
      classrelation 521371 // <generalisation>
	relation 521371 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 521371 // <generalisation>
	  b parent class_ref 292123 // ServerSocketFactory
      end

      classrelation 521499 // defaultServerSocketFactory (<unidirectional association>)
	relation 521499 --->
	  a role_name "defaultServerSocketFactory" class_relation private
	    comment " TODO EXPORT CONTROL
 The default SSL socket factory
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 521499 // defaultServerSocketFactory (<unidirectional association>)
	  b parent class_ref 292123 // ServerSocketFactory
      end

      classrelation 521627 // defaultName (<unidirectional association>)
	relation 521627 --->
	  a role_name "defaultName" class_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 521627 // defaultName (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      operation 1819547 "getDefault"
	class_operation public return_type class_ref 292123 // ServerSocketFactory
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the default {@code SSLServerSocketFactory} instance. The default
implementation is defined by the security property
\"ssl.ServerSocketFactory.provider\".

@return the default {@code SSLServerSocketFactory} instance."
      end

      operation 1819675 "SSLServerSocketFactory"
	protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code SSLServerSocketFactory} instance."
      end

      operation 1819803 "getDefaultCipherSuites"
	abstract public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the names of the cipher suites that are enabled by default.

@return the names of the cipher suites that are enabled by default"
      end

      operation 1819931 "getSupportedCipherSuites"
	abstract public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the list of supported cipher suites that could be enabled for an
SSL connection created by this factory.

@return the list of supported cipher suites"
      end
    end

    class 293403 "DefaultSSLSocketFactory"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Default inoperative implementation of javax.net.ssl.SSLSocketFactory
"
      classrelation 522395 // <generalisation>
	relation 522395 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 522395 // <generalisation>
	  b parent class_ref 293531 // SSLSocketFactory
      end

      classrelation 522523 // errMessage (<unidirectional association>)
	relation 522523 --->
	  a role_name "errMessage" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 522523 // errMessage (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      operation 1821467 "DefaultSSLSocketFactory"
	package explicit_return_type ""
	nparams 1
	  param inout name "mes" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1821595 "getDefaultCipherSuites"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1821723 "getSupportedCipherSuites"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1821851 "createSocket"
	public return_type class_ref 176923 // Socket
	nparams 4
	  param inout name "s" type class_ref 176923 // Socket
	  param inout name "host" type class_ref 3399692 // String
	  param in name "port" explicit_type "int"
	  param inout name "autoClose" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1821979 "createSocket"
	public return_type class_ref 176923 // Socket
	nparams 2
	  param inout name "host" type class_ref 3399692 // String
	  param in name "port" explicit_type "int"
	nexceptions 2
	  exception class_ref 128539 // IOException
	  exception class_ref 172699 // UnknownHostException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1822107 "createSocket"
	public return_type class_ref 176923 // Socket
	nparams 4
	  param inout name "host" type class_ref 3399692 // String
	  param in name "port" explicit_type "int"
	  param inout name "localHost" type class_ref 158875 // InetAddress
	  param in name "localPort" explicit_type "int"
	nexceptions 2
	  exception class_ref 128539 // IOException
	  exception class_ref 172699 // UnknownHostException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1822235 "createSocket"
	public return_type class_ref 176923 // Socket
	nparams 2
	  param inout name "host" type class_ref 158875 // InetAddress
	  param in name "port" explicit_type "int"
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1822363 "createSocket"
	public return_type class_ref 176923 // Socket
	nparams 4
	  param inout name "address" type class_ref 158875 // InetAddress
	  param in name "port" explicit_type "int"
	  param inout name "localAddress" type class_ref 158875 // InetAddress
	  param in name "localPort" explicit_type "int"
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 293531 "SSLSocketFactory"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The abstract factory implementation to create {@code SSLSocket}s."
      classrelation 522011 // <generalisation>
	relation 522011 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 522011 // <generalisation>
	  b parent class_ref 292379 // SocketFactory
      end

      classrelation 522139 // defaultSocketFactory (<unidirectional association>)
	relation 522139 --->
	  a role_name "defaultSocketFactory" class_relation private
	    comment " FIXME EXPORT CONTROL
 The default SSL socket factory
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 522139 // defaultSocketFactory (<unidirectional association>)
	  b parent class_ref 292379 // SocketFactory
      end

      classrelation 522267 // defaultName (<unidirectional association>)
	relation 522267 --->
	  a role_name "defaultName" class_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 522267 // defaultName (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      operation 1820827 "getDefault"
	class_operation public return_type class_ref 292379 // SocketFactory
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the default {@code SSLSocketFactory} instance. The default is
defined by the security property {@code 'ssl.SocketFactory.provider'}.

@return the default ssl socket factory instance."
      end

      operation 1820955 "SSLSocketFactory"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code SSLSocketFactory}."
      end

      operation 1821083 "getDefaultCipherSuites"
	abstract public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the names of the cipher suites that are enabled by default.

@return the names of the cipher suites that are enabled by default."
      end

      operation 1821211 "getSupportedCipherSuites"
	abstract public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the names of the cipher suites that are supported and could be
enabled for an SSL connection.

@return the names of the cipher suites that are supported."
      end

      operation 1821339 "createSocket"
	abstract public return_type class_ref 176923 // Socket
	nparams 4
	  param inout name "s" type class_ref 176923 // Socket
	  param inout name "host" type class_ref 3399692 // String
	  param in name "port" explicit_type "int"
	  param inout name "autoClose" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an {@code SSLSocket} over the specified socket that is connected
to the specified host at the specified port.

@param s
           the socket.
@param host
           the host.
@param port
           the port number.
@param autoClose
           {@code true} if socket {@code s} should be closed when the
           created socket is closed, {@code false} if the socket
           {@code s} should be left open.
@return the creates ssl socket.
@throws IOException
            if creating the socket fails.
@throws java.net.UnknownHostException
            if the host is unknown."
      end
    end

    class 293659 "DistinguishedNameParser"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A distinguished name (DN) parser. This parser only supports extracting a
string value from a DN. It doesn't support values in the hex-string style.

@hide"
      classrelation 522651 // dn (<unidirectional association>)
	relation 522651 --->
	  a role_name "dn" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 522651 // dn (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      attribute 443675 "length"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 443803 "pos"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 443931 "beg"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 444059 "end"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 444187 "cur"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " tmp vars to store positions of the currently parsed item "
      end

      attribute 444315 "chars"
	private explicit_type "char"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " distinguished name chars "
      end

      operation 1822491 "DistinguishedNameParser"
	public explicit_return_type ""
	nparams 1
	  param inout name "principal" type class_ref 214171 // X500Principal
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1822619 "nextAT"
	private return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " gets next attribute type: (ALPHA 1*keychar) / oid"
      end

      operation 1822747 "quotedAV"
	private return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " gets quoted attribute value: QUOTATION *( quotechar / pair ) QUOTATION"
      end

      operation 1822875 "hexAV"
	private return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " gets hex string attribute value: \"#\" hexstring"
      end

      operation 1823003 "escapedAV"
	private return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " gets string attribute value: *( stringchar / pair )"
      end

      operation 1823131 "getEscaped"
	private explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " returns escaped char"
      end

      operation 1823259 "getUTF8"
	private explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " decodes UTF-8 char
 see http://www.unicode.org for UTF-8 bit distribution table"
      end

      operation 1823387 "getByte"
	private explicit_return_type "int"
	nparams 1
	  param in name "position" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns byte representation of a char pair
 The char pair is composed of DN char in
 specified 'position' and the next char
 According to BNF syntax:
 hexchar    = DIGIT / \"A\" / \"B\" / \"C\" / \"D\" / \"E\" / \"F\"
                    / \"a\" / \"b\" / \"c\" / \"d\" / \"e\" / \"f\""
      end

      operation 1823515 "findMostSpecific"
	public return_type class_ref 3399692 // String
	nparams 1
	  param inout name "attributeType" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses the DN and returns the most significant attribute value
for an attribute type, or null if none found.

@param attributeType attribute type to look for (e.g. \"ca\")"
      end
    end

    class 293787 "HandshakeCompletedEvent"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The event object encapsulating the information about a completed SSL
handshake on a SSL connection."
      classrelation 522779 // <generalisation>
	relation 522779 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 522779 // <generalisation>
	  b parent class_ref 130587 // EventObject
      end

      classrelation 522907 // session (<unidirectional association>)
	relation 522907 --->
	  a role_name "session" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    transient
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 522907 // session (<unidirectional association>)
	  b parent class_ref 293019 // SSLSession
      end

      operation 1823643 "HandshakeCompletedEvent"
	public explicit_return_type ""
	nparams 2
	  param inout name "sock" type class_ref 293915 // SSLSocket
	  param inout name "s" type class_ref 293019 // SSLSession
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code HandshakeCompletedEvent} with the specified SSL
socket and SSL session.

@param sock
           the SSL socket.
@param s
           the SSL session."
      end

      operation 1823771 "getSession"
	public return_type class_ref 293019 // SSLSession
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the SSL session associated with this event.

@return the SSL session associated with this event."
      end

      operation 1823899 "getCipherSuite"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the cipher suite negotiated during this handshake.

@return the name of the cipher suite negotiated during this handshake."
      end

      operation 1824027 "getLocalCertificates"
	public return_type class_ref 173595 // Certificate
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the list of local certificates used during the handshake. These
certificates were sent to the peer.

@return Returns the list of certificates used during the handshake with
        the local identity certificate followed by CAs, or {@code null}
        if no certificates were used during the handshake."
      end

      operation 1824155 "getPeerCertificates"
	public return_type class_ref 173595 // Certificate
	nparams 0
	nexceptions 1
	  exception class_ref 176411 // SSLPeerUnverifiedException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the list of certificates identifying the peer during the
handshake.

@return the list of certificates identifying the peer with the peer's
        identity certificate followed by CAs.
@throws SSLPeerUnverifiedException
            if the identity of the peer has not been verified."
      end

      operation 1824283 "getPeerCertificateChain"
	public return_type class_ref 294043 // X509Certificate
	nparams 0
	nexceptions 1
	  exception class_ref 176411 // SSLPeerUnverifiedException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the list of certificates identifying the peer. The peer's
identity certificate is followed by the validated certificate authority
certificates.
<p>
<b>Replaced by:</b> {@link #getPeerCertificates()}

@return the list of certificates identifying the peer
@throws SSLPeerUnverifiedException
            if the identity of the peer has not been verified."
      end

      operation 1824411 "getPeerPrincipal"
	public return_type class_ref 176539 // Principal
	nparams 0
	nexceptions 1
	  exception class_ref 176411 // SSLPeerUnverifiedException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code Principal} identifying the peer.

@return the {@code Principal} identifying the peer.
@throws SSLPeerUnverifiedException
            if the identity of the peer has not been verified."
      end

      operation 1824539 "getLocalPrincipal"
	public return_type class_ref 176539 // Principal
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code Principal} used to identify during the handshake.

@return the {@code Principal} used to identify during the handshake."
      end

      operation 1824667 "getSocket"
	public return_type class_ref 293915 // SSLSocket
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the SSL socket that produced this event.

@return the SSL socket that produced this event."
      end
    end

    class 293915 "SSLSocket"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The extension of {@code Socket} providing secure protocols like SSL (Secure
Sockets Layer) or TLS (Transport Layer Security)."
      classrelation 527643 // <generalisation>
	relation 527643 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 527643 // <generalisation>
	  b parent class_ref 176923 // Socket
      end

      operation 1847067 "SSLSocket"
	protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Only to be used by subclasses.
<p>
Creates a TCP socket."
      end

      operation 1847195 "SSLSocket"
	protected explicit_return_type ""
	nparams 2
	  param inout name "host" type class_ref 3399692 // String
	  param in name "port" explicit_type "int"
	nexceptions 2
	  exception class_ref 128539 // IOException
	  exception class_ref 172699 // UnknownHostException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Only to be used by subclasses.
<p>
Creates a TCP socket connection to the specified host at the specified
port.

@param host
           the host name to connect to.
@param port
           the port number to connect to.
@throws IOException
            if creating the socket fails.
@throws UnknownHostException
            if the specified host is not known."
      end

      operation 1847323 "SSLSocket"
	protected explicit_return_type ""
	nparams 2
	  param inout name "address" type class_ref 158875 // InetAddress
	  param in name "port" explicit_type "int"
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Only to be used by subclasses.
<p>
Creates a TCP socket connection to the specified address at the specified
port.

@param address
           the address to connect to.
@param port
           the port number to connect to.
@throws IOException
            if creating the socket fails."
      end

      operation 1847451 "SSLSocket"
	protected explicit_return_type ""
	nparams 4
	  param inout name "host" type class_ref 3399692 // String
	  param in name "port" explicit_type "int"
	  param inout name "clientAddress" type class_ref 158875 // InetAddress
	  param in name "clientPort" explicit_type "int"
	nexceptions 2
	  exception class_ref 128539 // IOException
	  exception class_ref 172699 // UnknownHostException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Only to be used by subclasses.
<p>
Creates a TCP socket connection to the specified host at the specified
port with the client side bound to the specified address and port.

@param host
           the host name to connect to.
@param port
           the port number to connect to.
@param clientAddress
           the client address to bind to
@param clientPort
           the client port number to bind to.
@throws IOException
            if creating the socket fails.
@throws UnknownHostException
            if the specified host is not known."
      end

      operation 1847579 "SSLSocket"
	protected explicit_return_type ""
	nparams 4
	  param inout name "address" type class_ref 158875 // InetAddress
	  param in name "port" explicit_type "int"
	  param inout name "clientAddress" type class_ref 158875 // InetAddress
	  param in name "clientPort" explicit_type "int"
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Only to be used by subclasses.
<p>
Creates a TCP socket connection to the specified address at the specified
port with the client side bound to the specified address and port.

@param address
           the address to connect to.
@param port
           the port number to connect to.
@param clientAddress
           the client address to bind to.
@param clientPort
           the client port number to bind to.
@throws IOException
            if creating the socket fails."
      end

      operation 1847707 "shutdownInput"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Unsupported for SSL because reading from an SSL socket may require
writing to the network."
      end

      operation 1847835 "shutdownOutput"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Unsupported for SSL because writing to an SSL socket may require reading
from the network."
      end

      operation 1847963 "getSupportedCipherSuites"
	abstract public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the names of the supported cipher suites."
      end

      operation 1848091 "getEnabledCipherSuites"
	abstract public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the names of the enabled cipher suites."
      end

      operation 1848219 "setEnabledCipherSuites"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "suites" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the names of the cipher suites to be enabled.
Only cipher suites returned by {@link #getSupportedCipherSuites()} are
allowed.

@param suites
           the names of the to be enabled cipher suites.
@throws IllegalArgumentException
            if one of the cipher suite names is not supported."
      end

      operation 1848347 "getSupportedProtocols"
	abstract public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the names of the supported protocols."
      end

      operation 1848475 "getEnabledProtocols"
	abstract public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the names of the enabled protocols."
      end

      operation 1848603 "setEnabledProtocols"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "protocols" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the names of the protocols to be enabled. Only
protocols returned by {@link #getSupportedProtocols()} are allowed.

@param protocols
           the names of the to be enabled protocols.
@throws IllegalArgumentException
            if one of the protocols is not supported."
      end

      operation 1848731 "getSession"
	abstract public return_type class_ref 293019 // SSLSession
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code SSLSession} for this connection. If necessary, a
handshake will be initiated, in which case this method will block until the handshake
has been established. If the handshake fails, an invalid session object
will be returned.

@return the session object."
      end

      operation 1848859 "addHandshakeCompletedListener"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 294171 // HandshakeCompletedListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Registers the specified listener to receive notification on completion of a
handshake on this connection.

@param listener
           the listener to register.
@throws IllegalArgumentException
            if {@code listener} is {@code null}."
      end

      operation 1848987 "removeHandshakeCompletedListener"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 294171 // HandshakeCompletedListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes the specified handshake completion listener.

@param listener
           the listener to remove.
@throws IllegalArgumentException
            if the specified listener is not registered or {@code null}."
      end

      operation 1849115 "startHandshake"
	abstract public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Starts a new SSL handshake on this connection.

@throws IOException
            if an error occurs."
      end

      operation 1849243 "setUseClientMode"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "mode" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether this connection should act in client mode when handshaking.

@param mode
           {@code true} if this connection should act in client mode,
           {@code false} if not."
      end

      operation 1849371 "getUseClientMode"
	abstract public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if this connection will act in client mode when handshaking."
      end

      operation 1849499 "setNeedClientAuth"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "need" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether the server should require client authentication. This
does not apply to sockets in {@link #getUseClientMode() client mode}.
Client authentication is one of the following:
<ul>
<li>authentication required</li>
<li>authentication requested</li>
<li>no authentication needed</li>
</ul>
This method overrides the setting of {@link #setWantClientAuth(boolean)}."
      end

      operation 1849627 "setWantClientAuth"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "want" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether the server should request client authentication. Unlike
{@link #setNeedClientAuth} this won't stop the negotiation if the client
doesn't authenticate. This does not apply to sockets in {@link
#getUseClientMode() client mode}.The client authentication is one of:
<ul>
<li>authentication required</li>
<li>authentication requested</li>
<li>no authentication needed</li>
</ul>
This method overrides the setting of {@link #setNeedClientAuth(boolean)}."
      end

      operation 1849755 "getNeedClientAuth"
	abstract public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the server socket should require client authentication.
This does not apply to sockets in {@link #getUseClientMode() client
mode}."
      end

      operation 1849883 "getWantClientAuth"
	abstract public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the server should request client authentication. This
does not apply to sockets in {@link #getUseClientMode() client mode}."
      end

      operation 1850011 "setEnableSessionCreation"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "flag" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether new SSL sessions may be created by this socket or if
existing sessions must be reused. If {@code flag} is false and there are
no sessions to resume, handshaking will fail.

@param flag {@code true} if new sessions may be created."
      end

      operation 1850139 "getEnableSessionCreation"
	abstract public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether new SSL sessions may be created by this socket or if
existing sessions must be reused.

@return {@code true} if new sessions may be created, otherwise
        {@code false}."
      end

      operation 1850267 "getSSLParameters"
	public return_type class_ref 295579 // SSLParameters
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new SSLParameters based on this SSLSocket's current
cipher suites, protocols, and client authentication settings.

@since 1.6"
      end

      operation 1850395 "setSSLParameters"
	public explicit_return_type "void"
	nparams 1
	  param inout name "p" type class_ref 295579 // SSLParameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets various SSL handshake parameters based on the SSLParameter
argument. Specifically, sets the SSLSocket's enabled cipher
suites if the parameter's cipher suites are non-null. Similarly
sets the enabled protocols. If the parameters specify the want
or need for client authentication, those requirements are set
on the SSLSocket, otherwise both are set to false.
@since 1.6"
      end
    end

    class 294171 "HandshakeCompletedListener"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The listener to be implemented to receive event notifications on completion
of SSL handshake on an SSL connection."
      classrelation 523035 // <generalisation>
	relation 523035 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 523035 // <generalisation>
	  b parent class_ref 130843 // EventListener
      end

      operation 1824795 "handshakeCompleted"
	public explicit_return_type "void"
	nparams 1
	  param inout name "event" type class_ref 293787 // HandshakeCompletedEvent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The callback method that is invoked when a SSL handshake is completed.

@param event
           the information on the completed SSL handshake event."
      end
    end

    class 294299 "HttpsURLConnection"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "An {@link HttpURLConnection} for HTTPS (<a
href=\"http://tools.ietf.org/html/rfc2818\">RFC 2818</a>). A
connected {@code HttpsURLConnection} allows access to the
negotiated cipher suite, the server certificate chain, and the
client certificate chain if any.

<h3>Providing an application specific X509TrustManager</h3>

If an application wants to trust Certificate Authority (CA)
certificates that are not part of the system, it should specify its
own {@code X509TrustManager} via a {@code SSLSocketFactory} set on
the {@code HttpsURLConnection}. The {@code X509TrustManager} can be
created based on a {@code KeyStore} using a {@code
TrustManagerFactory} to supply trusted CA certificates. Note that
self-signed certificates are effectively their own CA and can be
trusted by including them in a {@code KeyStore}.

<p>For example, to trust a set of certificates specified by a {@code KeyStore}:
<pre>   {@code
  KeyStore keyStore = ...;
  String algorithm = TrustManagerFactory.getDefaultAlgorithm();
  TrustManagerFactory tmf = TrustManagerFactory.getInstance(algorithm);
  tmf.init(keyStore);

  SSLContext context = SSLContext.getInstance(\"TLS\");
  context.init(null, tmf.getTrustManagers(), null);

  URL url = new URL(\"https://www.example.com/\");
  HttpsURLConnection urlConnection = (HttpsURLConnection) url.openConnection();
  urlConnection.setSSLSocketFactory(context.getSocketFactory());
  InputStream in = urlConnection.getInputStream();
}</pre>

<p>It is possible to implement {@code X509TrustManager} directly
instead of using one created by a {@code
TrustManagerFactory}. While this is straightforward in the insecure
case of allowing all certificate chains to pass verification,
writing a proper implementation will usually want to take advantage
of {@link java.security.cert.CertPathValidator
CertPathValidator}. In general, it might be better to write a
custom {@code KeyStore} implementation to pass to the {@code
TrustManagerFactory} than to try and write a custom {@code
X509TrustManager}.

<h3>Providing an application specific X509KeyManager</h3>

A custom {@code X509KeyManager} can be used to supply a client
certificate and its associated private key to authenticate a
connection to the server. The {@code X509KeyManager} can be created
based on a {@code KeyStore} using a {@code KeyManagerFactory}.

<p>For example, to supply client certificates from a {@code KeyStore}:
<pre>   {@code
  KeyStore keyStore = ...;
  String algorithm = KeyManagerFactory.getDefaultAlgorithm();
  KeyManagerFactory kmf = KeyManagerFactory.getInstance(algorithm);
  kmf.init(keyStore);

  SSLContext context = SSLContext.getInstance(\"TLS\");
  context.init(kmf.getKeyManagers(), null, null);

  URL url = new URL(\"https://www.example.com/\");
  HttpsURLConnection urlConnection = (HttpsURLConnection) url.openConnection();
  urlConnection.setSSLSocketFactory(context.getSocketFactory());
  InputStream in = urlConnection.getInputStream();
}</pre>

<p>A {@code X509KeyManager} can also be implemented directly. This
can allow an application to return a certificate and private key
from a non-{@code KeyStore} source or to specify its own logic for
selecting a specific credential to use when many may be present in
a single {@code KeyStore}.

<h3>TLS Intolerance Support</h3>

This class attempts to create secure connections using common TLS
extensions and SSL deflate compression. Should that fail, the
connection will be retried with SSLv3 only."
      classrelation 523163 // <generalisation>
	relation 523163 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 523163 // <generalisation>
	  b parent class_ref 171675 // HttpURLConnection
      end

      classrelation 523291 // defaultHostnameVerifier (<unidirectional association>)
	relation 523291 --->
	  a role_name "defaultHostnameVerifier" init_value " new DefaultHostnameVerifier()" class_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 523291 // defaultHostnameVerifier (<unidirectional association>)
	  b parent class_ref 292891 // HostnameVerifier
      end

      classrelation 523419 // defaultSSLSocketFactory (<unidirectional association>)
	relation 523419 --->
	  a role_name "defaultSSLSocketFactory" init_value " (SSLSocketFactory) SSLSocketFactory
            .getDefault()" class_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 523419 // defaultSSLSocketFactory (<unidirectional association>)
	  b parent class_ref 293531 // SSLSocketFactory
      end

      operation 1824923 "setDefaultHostnameVerifier"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "v" type class_ref 292891 // HostnameVerifier
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the default hostname verifier to be used by new instances.

@param v
           the new default hostname verifier
@throws IllegalArgumentException
            if the specified verifier is {@code null}."
      end

      operation 1825051 "getDefaultHostnameVerifier"
	class_operation public return_type class_ref 292891 // HostnameVerifier
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the default hostname verifier.

@return the default hostname verifier."
      end

      operation 1825179 "setDefaultSSLSocketFactory"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "sf" type class_ref 293531 // SSLSocketFactory
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the default SSL socket factory to be used by new instances.

@param sf
           the new default SSL socket factory.
@throws IllegalArgumentException
            if the specified socket factory is {@code null}."
      end

      operation 1825307 "getDefaultSSLSocketFactory"
	class_operation public return_type class_ref 293531 // SSLSocketFactory
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the default SSL socket factory for new instances.

@return the default SSL socket factory for new instances."
      end

      classrelation 523547 // hostnameVerifier (<unidirectional association>)
	relation 523547 --->
	  a role_name "hostnameVerifier" protected
	    comment "
The host name verifier used by this connection. It is initialized from
the default hostname verifier
{@link #setDefaultHostnameVerifier(HostnameVerifier)} or
{@link #getDefaultHostnameVerifier()}.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 523547 // hostnameVerifier (<unidirectional association>)
	  b parent class_ref 292891 // HostnameVerifier
      end

      classrelation 523675 // sslSocketFactory (<unidirectional association>)
	relation 523675 --->
	  a role_name "sslSocketFactory" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 523675 // sslSocketFactory (<unidirectional association>)
	  b parent class_ref 293531 // SSLSocketFactory
      end

      operation 1825435 "HttpsURLConnection"
	protected explicit_return_type ""
	nparams 1
	  param inout name "url" type class_ref 140443 // URL
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code HttpsURLConnection} with the specified {@code URL}.

@param url
           the {@code URL} to connect to."
      end

      operation 1825563 "getCipherSuite"
	abstract public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the cipher suite negotiated during the SSL handshake.

@return the name of the cipher suite negotiated during the SSL handshake.
@throws IllegalStateException
            if no connection has been established yet."
      end

      operation 1825691 "getLocalCertificates"
	abstract public return_type class_ref 173595 // Certificate
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the list of local certificates used during the handshake. These
certificates were sent to the peer.

@return Returns the list of certificates used during the handshake with
        the local identity certificate followed by CAs, or {@code null}
        if no certificates were used during the handshake.
@throws IllegalStateException
            if no connection has been established yet."
      end

      operation 1825819 "getServerCertificates"
	abstract public return_type class_ref 173595 // Certificate
	nparams 0
	nexceptions 1
	  exception class_ref 176411 // SSLPeerUnverifiedException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the list of certificates identifying the peer during the
handshake.

@return the list of certificates identifying the peer with the peer's
        identity certificate followed by CAs.
@throws SSLPeerUnverifiedException
            if the identity of the peer has not been verified..
@throws IllegalStateException
            if no connection has been established yet."
      end

      operation 1825947 "getPeerPrincipal"
	public return_type class_ref 176539 // Principal
	nparams 0
	nexceptions 1
	  exception class_ref 176411 // SSLPeerUnverifiedException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code Principal} identifying the peer.

@return the {@code Principal} identifying the peer.
@throws SSLPeerUnverifiedException
            if the identity of the peer has not been verified.
@throws IllegalStateException
            if no connection has been established yet."
      end

      operation 1826075 "getLocalPrincipal"
	public return_type class_ref 176539 // Principal
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code Principal} used to identify the local host during the handshake.

@return the {@code Principal} used to identify the local host during the handshake, or
        {@code null} if none was used.
@throws IllegalStateException
            if no connection has been established yet."
      end

      operation 1826203 "setHostnameVerifier"
	public explicit_return_type "void"
	nparams 1
	  param inout name "v" type class_ref 292891 // HostnameVerifier
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the hostname verifier for this instance.

@param v
           the hostname verifier for this instance.
@throws IllegalArgumentException
            if the specified verifier is {@code null}."
      end

      operation 1826331 "getHostnameVerifier"
	public return_type class_ref 292891 // HostnameVerifier
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the hostname verifier used by this instance.

@return the hostname verifier used by this instance."
      end

      operation 1826459 "setSSLSocketFactory"
	public explicit_return_type "void"
	nparams 1
	  param inout name "sf" type class_ref 293531 // SSLSocketFactory
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the SSL socket factory for this instance.

@param sf
           the SSL socket factory to be used by this instance.
@throws IllegalArgumentException
            if the specified socket factory is {@code null}."
      end

      operation 1826587 "getSSLSocketFactory"
	public return_type class_ref 293531 // SSLSocketFactory
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the SSL socket factory used by this instance.

@return the SSL socket factory used by this instance."
      end
    end

    class 294427 "KeyManager"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This is the interface to implement in order to mark a class as a JSSE key
managers so that key managers can be easily grouped. The key managers are
responsible for handling the keys used to authenticate the local side to its
peer,"
    end

    class 294555 "KeyManagerFactory"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The public API for {@code KeyManagerFactory} implementations."
      classrelation 523803 // SERVICE (<unidirectional association>)
	relation 523803 --->
	  a role_name "SERVICE" init_value " \"KeyManagerFactory\"" class_relation const_relation private
	    comment " Store KeyManagerFactory service name
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 523803 // SERVICE (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 523931 // ENGINE (<unidirectional association>)
	relation 523931 --->
	  a role_name "ENGINE" init_value " new Engine(SERVICE)" class_relation const_relation private
	    comment " Used to access common engine functionality
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 523931 // ENGINE (<unidirectional association>)
	  b parent class_ref 195355 // Engine
      end

      classrelation 524059 // PROPERTY_NAME (<unidirectional association>)
	relation 524059 --->
	  a role_name "PROPERTY_NAME" init_value " \"ssl.KeyManagerFactory.algorithm\"" class_relation const_relation private
	    comment " Store default property name
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 524059 // PROPERTY_NAME (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 524187 // DEFAULT_PROPERTY (<unidirectional association>)
	relation 524187 --->
	  a role_name "DEFAULT_PROPERTY" init_value " \"PKIX\"" class_relation const_relation private
	    comment " Default value of KeyManagerFactory type.
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 524187 // DEFAULT_PROPERTY (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      operation 1826715 "getDefaultAlgorithm"
	class_operation public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the default key manager factory algorithm name.
<p>
The default algorithm name is specified by the security property:
{@code 'ssl.KeyManagerFactory.algorithm'}.

@return the default algorithm name."
      end

      operation 1826843 "getInstance"
	class_operation public return_type class_ref 294555 // KeyManagerFactory
	nparams 1
	  param inout name "algorithm" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 195867 // NoSuchAlgorithmException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code KeyManagerFactory} instance for the specified key
management algorithm.

@param algorithm
           the name of the requested key management algorithm.
@return a key manager factory for the requested algorithm.
@throws NoSuchAlgorithmException
            if no installed provider can provide the requested algorithm.
@throws NullPointerException
            if {@code algorithm} is {@code null} (instead of
            NoSuchAlgorithmException as in 1.4 release)"
      end

      operation 1826971 "getInstance"
	class_operation public return_type class_ref 294555 // KeyManagerFactory
	nparams 2
	  param inout name "algorithm" type class_ref 3399692 // String
	  param inout name "provider" type class_ref 3399692 // String
	nexceptions 2
	  exception class_ref 195867 // NoSuchAlgorithmException
	  exception class_ref 195995 // NoSuchProviderException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code KeyManagerFactory} instance for the specified key
management algorithm from the specified provider.

@param algorithm
           the name of the requested key management algorithm name.
@param provider
           the name of the provider that provides the requested
           algorithm.
@return a key manager factory for the requested algorithm.
@throws NoSuchAlgorithmException
            if the specified provider cannot provide the requested
            algorithm.
@throws NoSuchProviderException
            if the specified provider does not exist.
@throws NullPointerException
            if {@code algorithm} is {@code null} (instead of
            NoSuchAlgorithmException as in 1.4 release)"
      end

      operation 1827099 "getInstance"
	class_operation public return_type class_ref 294555 // KeyManagerFactory
	nparams 2
	  param inout name "algorithm" type class_ref 3399692 // String
	  param inout name "provider" type class_ref 195611 // Provider
	nexceptions 1
	  exception class_ref 195867 // NoSuchAlgorithmException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code KeyManagerFactory} instance for the specified key
management algorithm from the specified provider.

@param algorithm
           the name of the requested key management algorithm name.
@param provider
           the provider that provides the requested algorithm.
@return a key manager factory for the requested algorithm.
@throws NoSuchAlgorithmException
            if the specified provider cannot provide the requested
            algorithm.
@throws NullPointerException
            if {@code algorithm} is {@code null} (instead of
            NoSuchAlgorithmException as in 1.4 release)"
      end

      classrelation 524315 // provider (<unidirectional association>)
	relation 524315 --->
	  a role_name "provider" const_relation private
	    comment " Store used provider
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 524315 // provider (<unidirectional association>)
	  b parent class_ref 195611 // Provider
      end

      classrelation 524443 // spiImpl (<unidirectional association>)
	relation 524443 --->
	  a role_name "spiImpl" const_relation private
	    comment " Store used KeyManagerFactorySpi implementation
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 524443 // spiImpl (<unidirectional association>)
	  b parent class_ref 294683 // KeyManagerFactorySpi
      end

      classrelation 524571 // algorithm (<unidirectional association>)
	relation 524571 --->
	  a role_name "algorithm" const_relation private
	    comment " Store used algorithm
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 524571 // algorithm (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      operation 1827227 "KeyManagerFactory"
	protected explicit_return_type ""
	nparams 3
	  param inout name "factorySpi" type class_ref 294683 // KeyManagerFactorySpi
	  param inout name "provider" type class_ref 195611 // Provider
	  param inout name "algorithm" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code KeyManagerFactory}.

@param factorySpi
           the implementation delegate.
@param provider
           the provider.
@param algorithm
           the key management algorithm name."
      end

      operation 1827355 "getAlgorithm"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the key management algorithm.

@return the name of the key management algorithm."
      end

      operation 1827483 "getProvider"
	public return_type class_ref 195611 // Provider
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the provider for this {@code KeyManagerFactory} instance.

@return the provider for this {@code KeyManagerFactory} instance."
      end

      operation 1827611 "init"
	public explicit_return_type "void"
	nparams 2
	  param inout name "ks" type class_ref 203547 // KeyStore
	  param inout name "password" explicit_type "char"
	nexceptions 3
	  exception class_ref 203803 // KeyStoreException
	  exception class_ref 195867 // NoSuchAlgorithmException
	  exception class_ref 203931 // UnrecoverableKeyException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes this instance with the specified key store and password.

@param ks
           the key store or {@code null} to use the default key store.
@param password
           the password for the specified key store or {@code null} if no
           key store is provided.
@throws KeyStoreException
            if initializing this key manager factory fails.
@throws NoSuchAlgorithmException
            if a required algorithm is not available.
@throws UnrecoverableKeyException
            if a key cannot be recovered."
      end

      operation 1827739 "init"
	public explicit_return_type "void"
	nparams 1
	  param inout name "spec" type class_ref 292635 // ManagerFactoryParameters
	nexceptions 1
	  exception class_ref 196251 // InvalidAlgorithmParameterException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes this instance with the specified factory parameters.

@param spec
           the factory parameters.
@throws InvalidAlgorithmParameterException
            if an error occurs."
      end

      operation 1827867 "getKeyManagers"
	public return_type class_ref 294427 // KeyManager
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a list of key managers, one instance for each type of key in the
key store.

@return a list of key managers."
      end
    end

    class 294683 "KeyManagerFactorySpi"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The <i>Service Provider Interface</i> (SPI) for the
{@code KeyManagerFactory} class."
      operation 1827995 "KeyManagerFactorySpi"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code KeyManagerFactorySpi} instance."
      end

      operation 1828123 "engineInit"
	abstract protected explicit_return_type "void"
	nparams 2
	  param inout name "ks" type class_ref 203547 // KeyStore
	  param inout name "password" explicit_type "char"
	nexceptions 3
	  exception class_ref 203803 // KeyStoreException
	  exception class_ref 195867 // NoSuchAlgorithmException
	  exception class_ref 203931 // UnrecoverableKeyException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes this instance with the specified key store and password.

@param ks
           the key store or {@code null} to use the default key store.
@param password
           the key store password.
@throws KeyStoreException
            if initializing this instance fails.
@throws NoSuchAlgorithmException
            if a required algorithm is not available.
@throws UnrecoverableKeyException
            if a key cannot be recovered."
      end

      operation 1828251 "engineInit"
	abstract protected explicit_return_type "void"
	nparams 1
	  param inout name "spec" type class_ref 292635 // ManagerFactoryParameters
	nexceptions 1
	  exception class_ref 196251 // InvalidAlgorithmParameterException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes this instance with the specified factory parameters.

@param spec
           the factory parameters.
@throws InvalidAlgorithmParameterException
            if an error occurs."
      end

      operation 1828379 "engineGetKeyManagers"
	abstract protected return_type class_ref 294427 // KeyManager
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a list of key managers, one instance for each type of key in the
key store.

@return a list of key managers."
      end
    end

    class 294811 "KeyStoreBuilderParameters"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The parameters for {@code KeyManager}s. The parameters are a list of
{@code KeyStore.Builder}s.

@since 1.5
@see KeyStore.Builder"
      classrelation 524699 // <realization>
	relation 524699 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 524699 // <realization>
	  b parent class_ref 292635 // ManagerFactoryParameters
      end

      classrelation 524827 // ksbuilders (<unidirectional association>)
	relation 524827 --->
	  a role_name "ksbuilders" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<KeyStore.Builder> ${name}${value};
"
	    classrelation_ref 524827 // ksbuilders (<unidirectional association>)
	  b parent class_ref 131483 // List
      end

      operation 1828507 "KeyStoreBuilderParameters"
	public explicit_return_type ""
	nparams 1
	  param inout name "builder" type class_ref 204699 // Builder
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code KeyStoreBuilderParameters} with the specified key
store builder.

@param builder
           the key store builder."
      end

      operation 1828635 "KeyStoreBuilderParameters"
	public explicit_return_type ""
	nparams 1
	  param inout name "parameters" type class_ref 131483 // List
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<KeyStore.Builder> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code KeyStoreBuilderParameters} with the specified list
of {@code KeyStore.Builder}s.

@param parameters
           the list of key store builders
@throws IllegalArgumentException
            if the specified list is empty."
      end

      operation 1828763 "getParameters"
	public return_type class_ref 131483 // List
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<KeyStore.Builder> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the unmodifiable list of {@code KeyStore.Builder}s associated
with this parameters instance.

@return the unmodifiable list of {@code KeyStore.Builder}s."
      end
    end

    class 294939 "SSLContext"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The public API for secure socket protocol implementations. It acts as factory
for {@code SSLSocketFactory}'s and {@code SSLEngine}s."
      classrelation 524955 // SERVICE (<unidirectional association>)
	relation 524955 --->
	  a role_name "SERVICE" init_value " \"SSLContext\"" class_relation const_relation private
	    comment " StoreSSLContext service name
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 524955 // SERVICE (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 525083 // ENGINE (<unidirectional association>)
	relation 525083 --->
	  a role_name "ENGINE" init_value " new Engine(SERVICE)" class_relation const_relation private
	    comment " Used to access common engine functionality
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 525083 // ENGINE (<unidirectional association>)
	  b parent class_ref 195355 // Engine
      end

      classrelation 525211 // DEFAULT (<unidirectional association>)
	relation 525211 --->
	  a role_name "DEFAULT" class_relation private
	    comment "
Default SSLContext that can be replaced with SSLContext.setDefault()

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 525211 // DEFAULT (<unidirectional association>)
	  b parent class_ref 294939 // SSLContext
      end

      operation 1828891 "getDefault"
	class_operation public return_type class_ref 294939 // SSLContext
	nparams 0
	nexceptions 1
	  exception class_ref 195867 // NoSuchAlgorithmException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the default SSLContext.

The default SSL context can be set with {@link #setDefault}. If
not, one will be created with {@code
SSLContext.getInstance(\"Default\")}, which will already be
initialized.

@throws NoSuchAlgorithmException if there is a problem creating
the default instance.
@since 1.6"
      end

      operation 1829019 "setDefault"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "sslContext" type class_ref 294939 // SSLContext
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the default SSLContext instance as returned by {@link
#getDefault()} to a non-null initialized value.

@throws NullPointerException on a null argument
@since 1.6"
      end

      operation 1829147 "getInstance"
	class_operation public return_type class_ref 294939 // SSLContext
	nparams 1
	  param inout name "protocol" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 195867 // NoSuchAlgorithmException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code SSLContext} instance for the specified protocol.

@param protocol
           the requested protocol to create a context for.
@return the created {@code SSLContext} instance.
@throws NoSuchAlgorithmException
            if no installed provider can provide the requested protocol
@throws NullPointerException
            if {@code protocol} is {@code null} (instead of
            NoSuchAlgorithmException as in 1.4 release)"
      end

      operation 1829275 "getInstance"
	class_operation public return_type class_ref 294939 // SSLContext
	nparams 2
	  param inout name "protocol" type class_ref 3399692 // String
	  param inout name "provider" type class_ref 3399692 // String
	nexceptions 2
	  exception class_ref 195867 // NoSuchAlgorithmException
	  exception class_ref 195995 // NoSuchProviderException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code SSLContext} instance for the specified protocol from
the specified provider.

@param protocol
           the requested protocol to create a context for.
@param provider
           the name of the provider that provides the requested protocol.
@return an {@code SSLContext} for the requested protocol.
@throws NoSuchAlgorithmException
            if the specified provider cannot provider the requested
            protocol.
@throws NoSuchProviderException
            if the specified provider does not exits.
@throws NullPointerException
            if {@code protocol} is {@code null} (instead of
            NoSuchAlgorithmException as in 1.4 release)"
      end

      operation 1829403 "getInstance"
	class_operation public return_type class_ref 294939 // SSLContext
	nparams 2
	  param inout name "protocol" type class_ref 3399692 // String
	  param inout name "provider" type class_ref 195611 // Provider
	nexceptions 1
	  exception class_ref 195867 // NoSuchAlgorithmException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code SSLContext} instance for the specified protocol from
the specified provider.

@param protocol
           the requested protocol to create a context for
@param provider
           the provider that provides the requested protocol.
@return an {@code SSLContext} for the requested protocol.
@throws NoSuchAlgorithmException
            if the specified provider cannot provide the requested
            protocol.
@throws NullPointerException
            if {@code protocol} is {@code null} (instead of
            NoSuchAlgorithmException as in 1.4 release)"
      end

      classrelation 525339 // provider (<unidirectional association>)
	relation 525339 --->
	  a role_name "provider" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 525339 // provider (<unidirectional association>)
	  b parent class_ref 195611 // Provider
      end

      classrelation 525467 // spiImpl (<unidirectional association>)
	relation 525467 --->
	  a role_name "spiImpl" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 525467 // spiImpl (<unidirectional association>)
	  b parent class_ref 295067 // SSLContextSpi
      end

      classrelation 525595 // protocol (<unidirectional association>)
	relation 525595 --->
	  a role_name "protocol" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 525595 // protocol (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      operation 1829531 "SSLContext"
	protected explicit_return_type ""
	nparams 3
	  param inout name "contextSpi" type class_ref 295067 // SSLContextSpi
	  param inout name "provider" type class_ref 195611 // Provider
	  param inout name "protocol" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code SSLContext}.

@param contextSpi
           the implementation delegate.
@param provider
           the provider.
@param protocol
           the protocol name."
      end

      operation 1829659 "getProtocol"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the secure socket protocol of this instance.

@return the name of the secure socket protocol of this instance."
      end

      operation 1829787 "getProvider"
	public return_type class_ref 195611 // Provider
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the provider of this {@code SSLContext} instance.

@return the provider of this {@code SSLContext} instance."
      end

      operation 1829915 "init"
	public explicit_return_type "void"
	nparams 3
	  param inout name "km" type class_ref 294427 // KeyManager
	  param inout name "tm" type class_ref 295195 // TrustManager
	  param inout name "sr" type class_ref 195483 // SecureRandom
	nexceptions 1
	  exception class_ref 201627 // KeyManagementException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes this {@code SSLContext} instance. All of the arguments are
optional, and the security providers will be searched for the required
implementations of the needed algorithms.

@param km
           the key sources or {@code null}.
@param tm
           the trust decision sources or {@code null}.
@param sr
           the randomness source or {@code null.}
@throws KeyManagementException
            if initializing this instance fails."
      end

      operation 1830043 "getSocketFactory"
	public return_type class_ref 293531 // SSLSocketFactory
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a socket factory for this instance.

@return a socket factory for this instance."
      end

      operation 1830171 "getServerSocketFactory"
	public return_type class_ref 293275 // SSLServerSocketFactory
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a server socket factory for this instance.

@return a server socket factory for this instance."
      end

      operation 1830299 "createSSLEngine"
	public return_type class_ref 295323 // SSLEngine
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an {@code SSLEngine} instance from this context.

@return an {@code SSLEngine} instance from this context.
@throws UnsupportedOperationException
            if the provider does not support the operation."
      end

      operation 1830427 "createSSLEngine"
	public return_type class_ref 295323 // SSLEngine
	nparams 2
	  param inout name "peerHost" type class_ref 3399692 // String
	  param in name "peerPort" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an {@code SSLEngine} instance from this context with the
specified hostname and port.

@param peerHost
           the name of the host
@param peerPort
           the port
@return an {@code SSLEngine} instance from this context.
@throws UnsupportedOperationException
            if the provider does not support the operation."
      end

      operation 1830555 "getServerSessionContext"
	public return_type class_ref 295451 // SSLSessionContext
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the SSL session context that encapsulates the set of SSL sessions
that can be used for handshake of server-side SSL sockets.

@return the SSL server session context for this context or {@code null}
        if the underlying provider does not provide an implementation of
        the {@code SSLSessionContext} interface."
      end

      operation 1830683 "getClientSessionContext"
	public return_type class_ref 295451 // SSLSessionContext
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the SSL session context that encapsulates the set of SSL sessions
that can be used for handshake of client-side SSL sockets.

@return the SSL client session context for this context or {@code null}
        if the underlying provider does not provide an implementation of
        the {@code SSLSessionContext} interface."
      end

      operation 1830811 "getDefaultSSLParameters"
	public return_type class_ref 295579 // SSLParameters
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the default SSL handshake parameters for SSLSockets
created by this SSLContext.

@throws UnsupportedOperationException
@since 1.6"
      end

      operation 1830939 "getSupportedSSLParameters"
	public return_type class_ref 295579 // SSLParameters
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns SSL handshake parameters for SSLSockets that includes
all supported cipher suites and protocols.

@throws UnsupportedOperationException
@since 1.6"
      end
    end

    class 295067 "SSLContextSpi"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The <i>Service Provider Interface</i> (SPI) for the {@code SSLContext} class."
      operation 1831067 "SSLContextSpi"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code SSLContextSpi} instance."
      end

      operation 1831195 "engineInit"
	abstract protected explicit_return_type "void"
	nparams 3
	  param inout name "km" type class_ref 294427 // KeyManager
	  param inout name "tm" type class_ref 295195 // TrustManager
	  param inout name "sr" type class_ref 195483 // SecureRandom
	nexceptions 1
	  exception class_ref 201627 // KeyManagementException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes this {@code SSLContext} instance. All of the arguments are
optional, and the security providers will be searched for the required
implementations of the needed algorithms.

@param km
           the key sources or {@code null}.
@param tm
           the trust decision sources or {@code null}.
@param sr
           the randomness source or {@code null.}
@throws KeyManagementException
            if initializing this instance fails."
      end

      operation 1831323 "engineGetSocketFactory"
	abstract protected return_type class_ref 293531 // SSLSocketFactory
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a socket factory for this instance.

@return a socket factory for this instance."
      end

      operation 1831451 "engineGetServerSocketFactory"
	abstract protected return_type class_ref 293275 // SSLServerSocketFactory
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a server socket factory for this instance.

@return a server socket factory for this instance."
      end

      operation 1831579 "engineCreateSSLEngine"
	abstract protected return_type class_ref 295323 // SSLEngine
	nparams 2
	  param inout name "host" type class_ref 3399692 // String
	  param in name "port" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an {@code SSLEngine} instance from this context with the
specified hostname and port.

@param host
           the name of the host
@param port
           the port
@return an {@code SSLEngine} instance from this context.
@throws UnsupportedOperationException
            if the provider does not support the operation."
      end

      operation 1831707 "engineCreateSSLEngine"
	abstract protected return_type class_ref 295323 // SSLEngine
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an {@code SSLEngine} instance from this context.

@return an {@code SSLEngine} instance from this context.
@throws UnsupportedOperationException
            if the provider does not support the operation."
      end

      operation 1831835 "engineGetServerSessionContext"
	abstract protected return_type class_ref 295451 // SSLSessionContext
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the SSL session context that encapsulates the set of SSL sessions
that can be used for the server side of the SSL handshake.

@return the SSL server session context for this context or {@code null}
        if the underlying provider does not provide an implementation of
        the {@code SSLSessionContext} interface."
      end

      operation 1831963 "engineGetClientSessionContext"
	abstract protected return_type class_ref 295451 // SSLSessionContext
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the SSL session context that encapsulates the set of SSL sessions
that can be used for the client side of the SSL handshake.

@return the SSL client session context for this context or {@code null}
        if the underlying provider does not provide an implementation of
        the {@code SSLSessionContext} interface."
      end

      operation 1832091 "engineGetDefaultSSLParameters"
	protected return_type class_ref 295579 // SSLParameters
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new SSLParameters instance that includes the default
SSL handshake parameters values including cipher suites,
protocols, and client authentication.

<p>The default implementation returns an SSLParameters with values
based an SSLSocket created from this instances SocketFactory.

@since 1.6"
      end

      operation 1832219 "engineGetSupportedSSLParameters"
	protected return_type class_ref 295579 // SSLParameters
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new SSLParameters instance that includes all
supported cipher suites and protocols.

<p>The default implementation returns an SSLParameters with values
based an SSLSocket created from this instances SocketFactory.

@since 1.6"
      end

      operation 1832347 "createSSLParameters"
	private return_type class_ref 295579 // SSLParameters
	nparams 1
	  param inout name "supported" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 295195 "TrustManager"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The marker interface for JSSE trust managers. The purpose is to group trust
managers. The responsibility a trust manager is to handle the trust data used to
make trust decisions for deciding whether credentials of a peer should be
accepted,
@see TrustManagerFactory"
    end

    class 295323 "SSLEngine"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The abstract implementation of secure communications using SSL, TLS, or other
protocols. It includes the setup, handshake, and encrypt/decrypt
functionality needed to create a secure connection.

@since 1.5"
      classrelation 525723 // peerHost (<unidirectional association>)
	relation 525723 --->
	  a role_name "peerHost" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 525723 // peerHost (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      attribute 444443 "peerPort"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 1832475 "SSLEngine"
	protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code SSLEngine} instance."
      end

      operation 1832603 "SSLEngine"
	protected explicit_return_type ""
	nparams 2
	  param inout name "host" type class_ref 3399692 // String
	  param in name "port" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code SSLEngine} instance with the specified host and
port.

@param host
           the name of the host.
@param port
           the port of the host."
      end

      operation 1832731 "getPeerHost"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the peer host.

@return the name of the peer host, or {@code null} if none is available."
      end

      operation 1832859 "getPeerPort"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the port number of the peer host.

@return the port number of the peer host, or {@code -1} is none is
        available."
      end

      operation 1832987 "beginHandshake"
	abstract public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 295707 // SSLException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initiates a handshake on this engine.
<p>
Calling this method is not needed for the initial handshake: it will be
called by {@code wrap} or {@code unwrap} if the initial handshake has not
been started yet.

@throws SSLException
            if starting the handshake fails.
@throws IllegalStateException
            if the engine does not have all the needed settings (e.g.
            client/server mode not set)."
      end

      operation 1833115 "closeInbound"
	abstract public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  exception class_ref 295707 // SSLException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies this engine instance that no more inbound network data will be
sent to this engine.

@throws SSLException
            if this engine did not receive a needed protocol specific
            close notification message from the peer."
      end

      operation 1833243 "closeOutbound"
	abstract public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies this engine instance that no more outbound application data will
be sent to this engine."
      end

      operation 1833371 "getDelegatedTask"
	abstract public return_type class_ref 151963 // Runnable
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a delegate task for this engine instance. Some engine operations
may require the results of blocking or long running operations, and the
{@code SSLEngineResult} instances returned by this engine may indicate
that a delegated task result is needed. In this case the
{@link Runnable#run() run} method of the returned {@code Runnable}
delegated task must be called.

@return a delegate task, or {@code null} if none are available."
      end

      operation 1833499 "getEnabledCipherSuites"
	abstract public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the SSL cipher suite names that are enabled in this engine
instance.

@return the SSL cipher suite names that are enabled in this engine
        instance."
      end

      operation 1833627 "getEnabledProtocols"
	abstract public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the protocol version names that are enabled in this engine
instance.

@return the protocol version names that are enabled in this engine
        instance."
      end

      operation 1833755 "getEnableSessionCreation"
	abstract public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether new SSL sessions may be established by this engine.

@return {@code true} if new session may be established, {@code false} if
        existing sessions must be reused."
      end

      operation 1833883 "getHandshakeStatus"
	abstract public return_type class_ref 295963 // HandshakeStatus
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the status of the handshake of this engine instance.

@return the status of the handshake of this engine instance."
      end

      operation 1834011 "getNeedClientAuth"
	abstract public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether this engine instance will require client authentication.

@return {@code true} if this engine will require client authentication,
        {@code false} if no client authentication is needed."
      end

      operation 1834139 "getSession"
	abstract public return_type class_ref 293019 // SSLSession
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the SSL session for this engine instance.

@return the SSL session for this engine instance."
      end

      operation 1834267 "getSupportedCipherSuites"
	abstract public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the SSL cipher suite names that are supported by this engine.
These cipher suites can be enabled using
{@link #setEnabledCipherSuites(String[])}.

@return the SSL cipher suite names that are supported by this engine."
      end

      operation 1834395 "getSupportedProtocols"
	abstract public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the protocol names that are supported by this engine. These
protocols can be enables using {@link #setEnabledProtocols(String[])}.

@return the protocol names that are supported by this engine."
      end

      operation 1834523 "getUseClientMode"
	abstract public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether this engine is set to act in client mode when
handshaking.

@return {@code true} if the engine is set to do handshaking in client
        mode."
      end

      operation 1834651 "getWantClientAuth"
	abstract public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether this engine will request client authentication.

@return {@code true} if client authentication will be requested,
        {@code false} otherwise."
      end

      operation 1834779 "isInboundDone"
	abstract public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether no more inbound data will be accepted by this engine.

@return {@code true} if no more inbound data will be accepted by this
        engine, {@code false} otherwise."
      end

      operation 1834907 "isOutboundDone"
	abstract public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether no more outbound data will be produced by this engine.

@return {@code true} if no more outbound data will be producted by this
        engine, {@code otherwise} false."
      end

      operation 1835035 "setEnabledCipherSuites"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "suites" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the SSL cipher suite names that should be enabled in this engine
instance. Only cipher suites listed by {@code getSupportedCipherSuites()}
are allowed.

@param suites
           the SSL cipher suite names to be enabled.
@throws IllegalArgumentException
            if one of the specified cipher suites is not supported, or if
            {@code suites} is {@code null}."
      end

      operation 1835163 "setEnabledProtocols"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "protocols" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the protocol version names that should be enabled in this engine
instance. Only protocols listed by {@code getSupportedProtocols()} are
allowed.

@param protocols
           the protocol version names to be enabled.
@throws IllegalArgumentException
            if one of the protocol version names is not supported, or if
            {@code protocols} is {@code null}."
      end

      operation 1835291 "setEnableSessionCreation"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "flag" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether new SSL sessions may be established by this engine instance.

@param flag
           {@code true} if new SSL sessions may be established,
           {@code false} if existing SSL sessions must be reused."
      end

      operation 1835419 "setNeedClientAuth"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "need" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether this engine must require client authentication. The client
authentication is one of:
<ul>
<li>authentication required</li>
<li>authentication requested</li>
<li>no authentication needed</li>
</ul>
This method overrides the setting of {@link #setWantClientAuth(boolean)}.

@param need
           {@code true} if client authentication is required,
           {@code false} if no authentication is needed."
      end

      operation 1835547 "setUseClientMode"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "mode" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether this engine should act in client (or server) mode when
handshaking.

@param mode
           {@code true} if this engine should act in client mode,
           {@code false} if not.
@throws IllegalArgumentException
            if this method is called after starting the initial
            handshake."
      end

      operation 1835675 "setWantClientAuth"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "want" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether this engine should request client authentication. The client
authentication is one of the following:
<ul>
<li>authentication required</li>
<li>authentication requested</li>
<li>no authentication needed</li>
</ul>
This method overrides the setting of {@link #setNeedClientAuth(boolean)}.

@param want
           {@code true} if client authentication should be requested,
           {@code false} if no authentication is needed."
      end

      operation 1835803 "unwrap"
	abstract public return_type class_ref 295835 // SSLEngineResult
	nparams 4
	  param inout name "src" type class_ref 142363 // ByteBuffer
	  param inout name "dsts" type class_ref 142363 // ByteBuffer
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  exception class_ref 295707 // SSLException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Decodes the incoming network data buffer into application data buffers.
If a handshake has not been started yet, it will automatically be
started.

@param src
           the buffer with incoming network data
@param dsts
           the array of destination buffers for incoming application
           data.
@param offset
           the offset in the array of destination buffers to which data
           is to be transferred.
@param length
           the maximum number of destination buffers to be used.
@return the result object of this operation.
@throws SSLException
            if a problem occurred while processing the data.
@throws IndexOutOfBoundsException
            if {@code length} is greater than
            {@code dsts.length - offset}.
@throws java.nio.ReadOnlyBufferException
            if one of the destination buffers is read-only.
@throws IllegalArgumentException
            if {@code src}, {@code dsts}, or one of the entries in
            {@code dsts} is {@code null}.
@throws IllegalStateException
            if the engine does not have all the needed settings (e.g.
            client/server mode not set)."
      end

      operation 1835931 "wrap"
	abstract public return_type class_ref 295835 // SSLEngineResult
	nparams 4
	  param inout name "srcs" type class_ref 142363 // ByteBuffer
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	  param inout name "dst" type class_ref 142363 // ByteBuffer
	nexceptions 1
	  exception class_ref 295707 // SSLException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Encodes the outgoing application data buffers into the network data
buffer. If a handshake has not been started yet, it will automatically be
started.

@param srcs
           the array of source buffers of outgoing application data.
@param offset
           the offset in the array of source buffers from which data is
           to be retrieved.
@param length
           the maximum number of source buffers to be used.
@param dst
           the destination buffer for network data.
@return the result object of this operation.
@throws SSLException
            if a problem occurred while processing the data.
@throws IndexOutOfBoundsException
            if {@code length} is greater than
            {@code srcs.length - offset}.
@throws java.nio.ReadOnlyBufferException
            if the destination buffer is readonly.
@throws IllegalArgumentException
            if {@code srcs}, {@code dst}, or one the entries in
            {@code srcs} is {@code null}.
@throws IllegalStateException
            if the engine does not have all the needed settings (e.g.
            client/server mode not set)."
      end

      operation 1836059 "unwrap"
	public return_type class_ref 295835 // SSLEngineResult
	nparams 2
	  param inout name "src" type class_ref 142363 // ByteBuffer
	  param inout name "dst" type class_ref 142363 // ByteBuffer
	nexceptions 1
	  exception class_ref 295707 // SSLException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Decodes the incoming network data buffer into the application data
buffer. If a handshake has not been started yet, it will automatically be
started.

@param src
           the buffer with incoming network data
@param dst
           the destination buffer for incoming application data.
@return the result object of this operation.
@throws SSLException
            if a problem occurred while processing the data.
@throws java.nio.ReadOnlyBufferException
            if one of the destination buffers is read-only.
@throws IllegalArgumentException
            if {@code src} or {@code dst} is {@code null}.
@throws IllegalStateException
            if the engine does not have all the needed settings (e.g.
            client/server mode not set)."
      end

      operation 1836187 "unwrap"
	public return_type class_ref 295835 // SSLEngineResult
	nparams 2
	  param inout name "src" type class_ref 142363 // ByteBuffer
	  param inout name "dsts" type class_ref 142363 // ByteBuffer
	nexceptions 1
	  exception class_ref 295707 // SSLException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Decodes the incoming network data buffer into the application data
buffers. If a handshake has not been started yet, it will automatically
be started.

@param src
           the buffer with incoming network data
@param dsts
           the array of destination buffers for incoming application
           data.
@return the result object of this operation.
@throws SSLException
            if a problem occurred while processing the data.
@throws java.nio.ReadOnlyBufferException
            if one of the destination buffers is read-only.
@throws IllegalArgumentException
            if {@code src} or {@code dsts} is {@code null}.
@throws IllegalStateException
            if the engine does not have all the needed settings (e.g.
            client/server mode not set)."
      end

      operation 1836315 "wrap"
	public return_type class_ref 295835 // SSLEngineResult
	nparams 2
	  param inout name "srcs" type class_ref 142363 // ByteBuffer
	  param inout name "dst" type class_ref 142363 // ByteBuffer
	nexceptions 1
	  exception class_ref 295707 // SSLException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Encodes the outgoing application data buffers into the network data
buffer. If a handshake has not been started yet, it will automatically be
started.

@param srcs
           the array of source buffers of outgoing application data.
@param dst
           the destination buffer for network data.
@return the result object of this operation.
@throws SSLException
            if a problem occurred while processing the data.
@throws java.nio.ReadOnlyBufferException
            if the destination buffer is readonly.
@throws IllegalArgumentException
            if {@code srcs} or {@code dst} is {@code null}.
@throws IllegalStateException
            if the engine does not have all the needed settings (e.g.
            client/server mode not set)."
      end

      operation 1836443 "wrap"
	public return_type class_ref 295835 // SSLEngineResult
	nparams 2
	  param inout name "src" type class_ref 142363 // ByteBuffer
	  param inout name "dst" type class_ref 142363 // ByteBuffer
	nexceptions 1
	  exception class_ref 295707 // SSLException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Encodes the outgoing application data buffer into the network data
buffer. If a handshake has not been started yet, it will automatically be
started.

@param src
           the source buffers of outgoing application data.
@param dst
           the destination buffer for network data.
@return the result object of this operation.
@throws SSLException
            if a problem occurred while processing the data.
@throws java.nio.ReadOnlyBufferException
            if the destination buffer is readonly.
@throws IllegalArgumentException
            if {@code src} or {@code dst} is {@code null}.
@throws IllegalStateException
            if the engine does not have all the needed settings (e.g.
            client/server mode not set)."
      end

      operation 1836571 "getSSLParameters"
	public return_type class_ref 295579 // SSLParameters
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new SSLParameters based on this SSLSocket's current
cipher suites, protocols, and client authentication settings.

@since 1.6"
      end

      operation 1836699 "setSSLParameters"
	public explicit_return_type "void"
	nparams 1
	  param inout name "p" type class_ref 295579 // SSLParameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets various SSL handshake parameters based on the SSLParameter
argument. Specifically, sets the SSLEngine's enabled cipher
suites if the parameter's cipher suites are non-null. Similarly
sets the enabled protocols. If the parameters specify the want
or need for client authentication, those requirements are set
on the SSLEngine, otherwise both are set to false.
@since 1.6"
      end
    end

    class 295451 "SSLSessionContext"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A collection of {@code SSLSession}s."
      operation 1846299 "getIds"
	public return_type class_ref 145947 // Enumeration
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<byte[]> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an iterable of all session identifiers in this session context.

@return an iterable of all session identifiers in this session context."
      end

      operation 1846427 "getSession"
	public return_type class_ref 293019 // SSLSession
	nparams 1
	  param inout name "sessionId" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the session for the specified session identifier.

@param sessionId
           the session identifier of the session to look up.
@return the session for the specified session identifier, or {@code null}
        if the specified session identifier does not refer to a session
        in this context."
      end

      operation 1846555 "getSessionCacheSize"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the size of the session cache for this session context.

@return the size of the session cache for this session context, or
        {@code zero} if unlimited."
      end

      operation 1846683 "getSessionTimeout"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the timeout for sessions in this session context. Sessions
exceeding the timeout are invalidated.

@return the timeout in seconds, or {@code zero} if unlimited."
      end

      operation 1846811 "setSessionCacheSize"
	public explicit_return_type "void"
	nparams 1
	  param in name "size" explicit_type "int"
	nexceptions 1
	  exception class_ref 128283 // IllegalArgumentException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the size of the session cache for this session context.

@param size
           the size of the session cache, or {@code zero} for unlimited
           cache size.
@throws IllegalArgumentException
            if {@code size} is negative."
      end

      operation 1846939 "setSessionTimeout"
	public explicit_return_type "void"
	nparams 1
	  param in name "seconds" explicit_type "int"
	nexceptions 1
	  exception class_ref 128283 // IllegalArgumentException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the timeout for sessions in this context. Sessions exceeding the
timeout are invalidated.

@param seconds
           the timeout in seconds, or {@code zero} if unlimited.
@throws IllegalArgumentException
            if {@code seconds} is negative."
      end
    end

    class 295579 "SSLParameters"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "SSL handshake parameters that include protocols, cipher suites, and
client authentication requirements.
@since 1.6"
      classrelation 526491 // cipherSuites (<unidirectional association>)
	relation 526491 --->
	  a role_name "cipherSuites" multiplicity "[]" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 526491 // cipherSuites (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 526619 // protocols (<unidirectional association>)
	relation 526619 --->
	  a role_name "protocols" multiplicity "[]" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 526619 // protocols (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      attribute 446363 "needClientAuth"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 446491 "wantClientAuth"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 1838491 "SSLParameters"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The default SSLParameters constructor. Cipher suites and
protocols are initialized to null and client authentication
options are initialized to false."
      end

      operation 1838619 "SSLParameters"
	public explicit_return_type ""
	nparams 1
	  param inout name "cipherSuites" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A SSLParameters constructor that allows the values for the
initial cipher suites array to be provided. Other values
default as specified in {@link #SSLParameters()}.

@param cipherSuites An array of cipherSuites that is cloned for
use within the SSLParameters, or null."
      end

      operation 1838747 "SSLParameters"
	public explicit_return_type ""
	nparams 2
	  param inout name "cipherSuites" type class_ref 3399692 // String
	  param inout name "protocols" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A SSLParameters constructor that allows the values for initial
cipher suites and protocols arrays to be provided. Other values
default as specified in {@link #SSLParameters()}.

@param cipherSuites An array of cipher names that is cloned for
use within the SSLParameters, or null.
@param protocols An array of protocol names that is cloned for
use within the SSLParameters, or null."
      end

      operation 1838875 "getCipherSuites"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a copy of the cipher suites, or null if none have been
specified."
      end

      operation 1839003 "setCipherSuites"
	public explicit_return_type "void"
	nparams 1
	  param inout name "cipherSuites" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the cipher suites to a copy of the input, or null"
      end

      operation 1839131 "getProtocols"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a copy of the protocols, or null if none have been
specified."
      end

      operation 1839259 "setProtocols"
	public explicit_return_type "void"
	nparams 1
	  param inout name "protocols" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the protocols to a copy of the input, or null"
      end

      operation 1839387 "getNeedClientAuth"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if a server requires authentication from a client
during handshaking. If this returns true, {@link
#getWantClientAuth} will return false."
      end

      operation 1839515 "setNeedClientAuth"
	public explicit_return_type "void"
	nparams 1
	  param inout name "needClientAuth" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether or not to a server needs client authentication.
After calling this, #getWantClientAuth() will return false."
      end

      operation 1839643 "getWantClientAuth"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if a server optionally wants to authenticate a
client during handshaking. If this returns true, {@link
#getNeedClientAuth} will return false."
      end

      operation 1839771 "setWantClientAuth"
	public explicit_return_type "void"
	nparams 1
	  param inout name "wantClientAuth" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether or not to a server wants client authentication.
After calling this, #getNeedClientAuth() will return false."
      end
    end

    class 295707 "SSLException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The base class for all SSL related exceptions."
      classrelation 526107 // <generalisation>
	relation 526107 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 526107 // <generalisation>
	  b parent class_ref 128539 // IOException
      end

      attribute 445979 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 4511006460650708967L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 1837595 "SSLException"
	public explicit_return_type ""
	nparams 1
	  param inout name "reason" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code SSLException} with the specified reason.

@param reason
           the reason for the exception."
      end

      operation 1837723 "SSLException"
	public explicit_return_type ""
	nparams 2
	  param inout name "message" type class_ref 3399692 // String
	  param inout name "cause" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code SSLException} with the specified message and cause.

@param message
           the detail message for the exception.
@param cause
           the cause."
      end

      operation 1837851 "SSLException"
	public explicit_return_type ""
	nparams 1
	  param inout name "cause" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code SSLException} with the specified cause.

@param cause
           the cause"
      end
    end

    class 295835 "SSLEngineResult"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The result object describing the state of the {@code SSLEngine} produced
by the {@code wrap()} and {@code unwrap()} operations."
      class 295963 "HandshakeStatus"
	visibility public stereotype "enum"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}enum ${name}${implements} {
${items};
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 444571 "NOT_HANDSHAKING"
	  public type class_ref 295963 // HandshakeStatus
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "No handshake in progress.
"
	end

	attribute 444699 "FINISHED"
	  public type class_ref 295963 // HandshakeStatus
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "The handshake is finished.
"
	end

	attribute 444827 "NEED_TASK"
	  public type class_ref 295963 // HandshakeStatus
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "The results of one (or more) delegated tasks are needed to continue
the handshake.
"
	end

	attribute 444955 "NEED_WRAP"
	  public type class_ref 295963 // HandshakeStatus
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "The engine must send data to the remote side to continue the
handshake.
"
	end

	attribute 445083 "NEED_UNWRAP"
	  public type class_ref 295963 // HandshakeStatus
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "The engine needs to receive data from the remote side to continue the
handshake."
	end
      end

      class 296091 "Status"
	visibility public stereotype "enum"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}enum ${name}${implements} {
${items};
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 445211 "BUFFER_OVERFLOW"
	  public type class_ref 296091 // Status
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "The size of the destination buffer is too small to hold the result of
the current operation.
"
	end

	attribute 445339 "BUFFER_UNDERFLOW"
	  public type class_ref 296091 // Status
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "There were not enough bytes available in the source buffer to
complete the current operation.
"
	end

	attribute 445467 "CLOSED"
	  public type class_ref 296091 // Status
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "The operation closed this side of the communication or was already
closed.
"
	end

	attribute 445595 "OK"
	  public type class_ref 296091 // Status
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "The operation completed successfully."
	end
      end

      classrelation 525851 // status (<unidirectional association>)
	relation 525851 --->
	  a role_name "status" const_relation private
	    comment " Store Status object
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 525851 // status (<unidirectional association>)
	  b parent class_ref 296091 // Status
      end

      classrelation 525979 // handshakeStatus (<unidirectional association>)
	relation 525979 --->
	  a role_name "handshakeStatus" const_relation private
	    comment " Store HandshakeStatus object
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 525979 // handshakeStatus (<unidirectional association>)
	  b parent class_ref 295963 // HandshakeStatus
      end

      attribute 445723 "bytesConsumed"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Store bytesConsumed"
      end

      attribute 445851 "bytesProduced"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Store bytesProduced"
      end

      operation 1836827 "SSLEngineResult"
	public explicit_return_type ""
	nparams 4
	  param inout name "status" type class_ref 296091 // Status
	  param inout name "handshakeStatus" type class_ref 295963 // HandshakeStatus
	  param in name "bytesConsumed" explicit_type "int"
	  param in name "bytesProduced" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code SSLEngineResult} instance with the specified state
values.

@param status
           the return value of the {@code SSLEngine} operation.
@param handshakeStatus
           the status of the current handshake
@param bytesConsumed
           the number of bytes retrieved from the source buffer(s).
@param bytesProduced
           the number of bytes transferred to the destination buffer(s).
@throws IllegalArgumentException
            if {@code status} or {@code handshakeStatus} is {@code null},
            or if {@code bytesConsumed} or {@code bytesProduces} are
            negative."
      end

      operation 1836955 "getStatus"
	public return_type class_ref 296091 // Status
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the return value of the {@code SSLEngine} operation.

@return the return value of the {@code SSLEngine} operation."
      end

      operation 1837083 "getHandshakeStatus"
	public return_type class_ref 295963 // HandshakeStatus
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the status of the current handshake.

@return the status of the current handshake."
      end

      operation 1837211 "bytesConsumed"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of bytes retrieved from the source buffer(s).

@return the number of bytes retrieved from the source buffer(s)."
      end

      operation 1837339 "bytesProduced"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of bytes transferred to the destination buffer(s).

@return the number of bytes transferred to the destination buffer(s)."
      end

      operation 1837467 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 296219 "SSLHandshakeException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The exception that is thrown when a handshake could not be completed
successfully."
      classrelation 526235 // <generalisation>
	relation 526235 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 526235 // <generalisation>
	  b parent class_ref 295707 // SSLException
      end

      attribute 446107 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -5045881315018326890L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 1837979 "SSLHandshakeException"
	public explicit_return_type ""
	nparams 1
	  param inout name "reason" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance with the given detail message."
      end

      operation 1838107 "SSLHandshakeException"
	public explicit_return_type ""
	nparams 1
	  param inout name "cause" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance with given cause.
@hide internal use only"
      end

      operation 1838235 "SSLHandshakeException"
	public explicit_return_type ""
	nparams 2
	  param inout name "reason" type class_ref 3399692 // String
	  param inout name "cause" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance with given detail message and cause.
@hide internal use only"
      end
    end

    class 296347 "SSLKeyException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The exception that is thrown when an invalid SSL key is encountered."
      classrelation 526363 // <generalisation>
	relation 526363 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 526363 // <generalisation>
	  b parent class_ref 295707 // SSLException
      end

      attribute 446235 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -8071664081941937874L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 1838363 "SSLKeyException"
	public explicit_return_type ""
	nparams 1
	  param inout name "reason" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code SSLKeyException} with the specified message.

@param reason
           the detail message for the exception."
      end
    end

    class 296475 "SSLPermission"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Legacy security code; do not use."
      classrelation 526875 // <generalisation>
	relation 526875 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 526875 // <generalisation>
	  b parent class_ref 146075 // BasicPermission
      end

      operation 1840027 "SSLPermission"
	public explicit_return_type ""
	nparams 1
	  param inout name "name" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1840155 "SSLPermission"
	public explicit_return_type ""
	nparams 2
	  param inout name "name" type class_ref 3399692 // String
	  param inout name "actions" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1840283 "getActions"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 1840411 "implies"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "permission" type class_ref 141467 // Permission
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 296603 "SSLProtocolException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The exception that is thrown when an error in the operation of the SSL
protocol is encountered."
      classrelation 527003 // <generalisation>
	relation 527003 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 527003 // <generalisation>
	  b parent class_ref 295707 // SSLException
      end

      attribute 446747 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 5445067063799134928L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 1840539 "SSLProtocolException"
	public explicit_return_type ""
	nparams 1
	  param inout name "reason" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code SSLProtocolException} with the specified message.

@param reason
           the detail message for the exception."
      end
    end

    class 296731 "SSLServerSocket"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The extension of {@code ServerSocket} which provides secure server sockets
based on protocols like SSL, TLS, or others."
      classrelation 527131 // <generalisation>
	relation 527131 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 527131 // <generalisation>
	  b parent class_ref 176667 // ServerSocket
      end

      operation 1840667 "SSLServerSocket"
	protected explicit_return_type ""
	nparams 0
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Only to be used by subclasses.
<p>
Creates a TCP server socket with the default authentication context.

@throws IOException
            if creating the socket fails."
      end

      operation 1840795 "SSLServerSocket"
	protected explicit_return_type ""
	nparams 1
	  param in name "port" explicit_type "int"
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Only to be used by subclasses.
<p>
Creates a TCP server socket on the specified port with the default
authentication context. The connection's default backlog size is 50
connections.
@param port
           the port to listen on.
@throws IOException
            if creating the socket fails."
      end

      operation 1840923 "SSLServerSocket"
	protected explicit_return_type ""
	nparams 2
	  param in name "port" explicit_type "int"
	  param in name "backlog" explicit_type "int"
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Only to be used by subclasses.
<p>
Creates a TCP server socket on the specified port using the specified
backlog and the default authentication context.

@param port
           the port to listen on.
@param backlog
           the number of pending connections to queue.
@throws IOException
            if creating the socket fails."
      end

      operation 1841051 "SSLServerSocket"
	protected explicit_return_type ""
	nparams 3
	  param in name "port" explicit_type "int"
	  param in name "backlog" explicit_type "int"
	  param inout name "address" type class_ref 158875 // InetAddress
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Only to be used by subclasses.
<p>
Creates a TCP server socket on the specified port, using the specified
backlog, listening on the specified interface, and using the default
authentication context.

@param port
           the port the listen on.
@param backlog
           the number of pending connections to queue.
@param address
           the address of the interface to accept connections on.
@throws IOException
            if creating the socket fails."
      end

      operation 1841179 "getEnabledCipherSuites"
	abstract public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the names of the enabled cipher suites to be used for new
connections.

@return the names of the enabled cipher suites to be used for new
        connections."
      end

      operation 1841307 "setEnabledCipherSuites"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "suites" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the names of the cipher suites to be enabled for new connections.
Only cipher suites returned by {@link #getSupportedCipherSuites()} are
allowed.

@param suites
           the names of the to be enabled cipher suites.
@throws IllegalArgumentException
            if one of the cipher suite names is not supported."
      end

      operation 1841435 "getSupportedCipherSuites"
	abstract public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the names of the supported cipher suites.

@return the names of the supported cipher suites."
      end

      operation 1841563 "getSupportedProtocols"
	abstract public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the names of the supported protocols.

@return the names of the supported protocols."
      end

      operation 1841691 "getEnabledProtocols"
	abstract public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the names of the enabled protocols to be used for new
connections.

@return the names of the enabled protocols to be used for new
        connections."
      end

      operation 1841819 "setEnabledProtocols"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "protocols" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the names of the protocols to be enabled for new connections. Only
protocols returned by {@link #getSupportedProtocols()} are allowed.

@param protocols
           the names of the to be enabled protocols.
@throws IllegalArgumentException
            if one of the protocols is not supported."
      end

      operation 1841947 "setNeedClientAuth"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "need" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether server-mode connections will be configured to require client
authentication. The client authentication is one of the following:
<ul>
<li>authentication required</li>
<li>authentication requested</li>
<li>no authentication needed</li>
</ul>
This method overrides the setting of {@link #setWantClientAuth(boolean)}.

@param need
           {@code true} if client authentication is required,
           {@code false} if no authentication is needed."
      end

      operation 1842075 "getNeedClientAuth"
	abstract public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether server-mode connections will be configured to require
client authentication.

@return {@code true} if client authentication is required, {@code false}
        if no client authentication is needed."
      end

      operation 1842203 "setWantClientAuth"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "want" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether server-mode connections will be configured to request client
authentication. The client authentication is one of the following:
<ul>
<li>authentication required</li>
<li>authentication requested</li>
<li>no authentication needed</li>
</ul>
This method overrides the setting of {@link #setNeedClientAuth(boolean)}.

@param want
           {@code true} if client authentication should be requested,
           {@code false} if no authentication is needed."
      end

      operation 1842331 "getWantClientAuth"
	abstract public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether server-mode connections will be configured to request
client authentication.

@return {@code true} is client authentication will be requested,
        {@code false} if no client authentication is needed."
      end

      operation 1842459 "setUseClientMode"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "mode" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether new connections should act in client mode when handshaking.

@param mode
           {@code true} if new connections should act in client mode,
           {@code false} if not."
      end

      operation 1842587 "getUseClientMode"
	abstract public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether new connection will act in client mode when handshaking.

@return {@code true} if new connections will act in client mode when
        handshaking, {@code false} if not."
      end

      operation 1842715 "setEnableSessionCreation"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "flag" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether new SSL sessions may be established for new connections.

@param flag
           {@code true} if new SSL sessions may be established,
           {@code false} if existing SSL sessions must be reused."
      end

      operation 1842843 "getEnableSessionCreation"
	abstract public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether new SSL sessions may be established for new connections.

@return {@code true} if new SSL sessions may be established,
        {@code false} if existing SSL sessions must be reused."
      end
    end

    class 296859 "SSLSessionBindingEvent"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The event sent to an {@code SSLSessionBindingListener} when the listener
object is bound ({@link SSLSession#putValue(String, Object)}) or unbound
({@link SSLSession#removeValue(String)}) to an {@code SSLSession}."
      classrelation 527259 // <generalisation>
	relation 527259 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 527259 // <generalisation>
	  b parent class_ref 130587 // EventObject
      end

      classrelation 527387 // name (<unidirectional association>)
	relation 527387 --->
	  a role_name "name" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 527387 // name (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      operation 1845659 "SSLSessionBindingEvent"
	public explicit_return_type ""
	nparams 2
	  param inout name "session" type class_ref 293019 // SSLSession
	  param inout name "name" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code SSLSessionBindingEvent} for the specified session
indicating a binding event for the specified name.

@param session
           the session for which the event occurs.
@param name
           the name of the object being (un)bound."
      end

      operation 1845787 "getName"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the binding being added or removed.

@return the name of the binding."
      end

      operation 1845915 "getSession"
	public return_type class_ref 293019 // SSLSession
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the session to which the binding is added or from which it is
removed.

@return the session to which the binding is added or from which it is
        removed."
      end
    end

    class 296987 "SSLSessionBindingListener"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The interface to be implemented by any object that requires notification when
data objects are bound to (or unbound from) an {@code SSLSession}."
      classrelation 527515 // <generalisation>
	relation 527515 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 527515 // <generalisation>
	  b parent class_ref 130843 // EventListener
      end

      operation 1846043 "valueBound"
	public explicit_return_type "void"
	nparams 1
	  param inout name "event" type class_ref 296859 // SSLSessionBindingEvent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies this listener when a value is bound to an {@code SSLSession}.

@param event
           the event data."
      end

      operation 1846171 "valueUnbound"
	public explicit_return_type "void"
	nparams 1
	  param inout name "event" type class_ref 296859 // SSLSessionBindingEvent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notifies this listener when a value is unbound from an {@code SSLSession}.

@param event
           the event data."
      end
    end

    class 297115 "TrustManagerFactory"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The factory for {@code TrustManager}s based on {@code KeyStore} or provider
specific implementation."
      classrelation 527771 // SERVICE (<unidirectional association>)
	relation 527771 --->
	  a role_name "SERVICE" init_value " \"TrustManagerFactory\"" class_relation const_relation private
	    comment " Store TrustManager service name
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 527771 // SERVICE (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 527899 // ENGINE (<unidirectional association>)
	relation 527899 --->
	  a role_name "ENGINE" init_value " new Engine(SERVICE)" class_relation const_relation private
	    comment " Used to access common engine functionality
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 527899 // ENGINE (<unidirectional association>)
	  b parent class_ref 195355 // Engine
      end

      classrelation 528027 // PROPERTY_NAME (<unidirectional association>)
	relation 528027 --->
	  a role_name "PROPERTY_NAME" init_value " \"ssl.TrustManagerFactory.algorithm\"" class_relation const_relation private
	    comment " Store default property name
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 528027 // PROPERTY_NAME (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 528155 // DEFAULT_PROPERTY (<unidirectional association>)
	relation 528155 --->
	  a role_name "DEFAULT_PROPERTY" init_value " \"PKIX\"" class_relation const_relation private
	    comment " Default value of TrustManagerFactory type.
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 528155 // DEFAULT_PROPERTY (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      operation 1850523 "getDefaultAlgorithm"
	class_operation public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the default algorithm name for the {@code TrustManagerFactory}. The
default algorithm name is specified by the security property
{@code 'ssl.TrustManagerFactory.algorithm'}.

@return the default algorithm name."
      end

      operation 1850651 "getInstance"
	class_operation public return_type class_ref 297115 // TrustManagerFactory
	nparams 1
	  param inout name "algorithm" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 195867 // NoSuchAlgorithmException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code TrustManagerFactory} instance for the specified
trust management algorithm.

@param algorithm
           the name of the requested trust management algorithm.
@return a trust manager factory for the requested algorithm.
@throws NoSuchAlgorithmException
            if no installed provider can provide the requested algorithm.
@throws NullPointerException
            if {@code algorithm} is {@code null} (instead of
            NoSuchAlgorithmException as in 1.4 release)"
      end

      operation 1850779 "getInstance"
	class_operation public return_type class_ref 297115 // TrustManagerFactory
	nparams 2
	  param inout name "algorithm" type class_ref 3399692 // String
	  param inout name "provider" type class_ref 3399692 // String
	nexceptions 2
	  exception class_ref 195867 // NoSuchAlgorithmException
	  exception class_ref 195995 // NoSuchProviderException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code TrustManagerFactory} instance for the specified
trust management algorithm from the specified provider.

@param algorithm
           the name of the requested trust management algorithm name.
@param provider
           the name of the provider that provides the requested
           algorithm.
@return a trust manager factory for the requested algorithm.
@throws NoSuchAlgorithmException
            if the specified provider cannot provide the requested
            algorithm.
@throws NoSuchProviderException
            if the specified provider does not exist.
@throws NullPointerException
            if {@code algorithm} is {@code null} (instead of
            NoSuchAlgorithmException as in 1.4 release)"
      end

      operation 1850907 "getInstance"
	class_operation public return_type class_ref 297115 // TrustManagerFactory
	nparams 2
	  param inout name "algorithm" type class_ref 3399692 // String
	  param inout name "provider" type class_ref 195611 // Provider
	nexceptions 1
	  exception class_ref 195867 // NoSuchAlgorithmException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code TrustManagerFactory} instance for the specified
trust management algorithm from the specified provider.

@param algorithm
           the name of the requested key management algorithm name.
@param provider
           the provider that provides the requested algorithm.
@return a key manager factory for the requested algorithm.
@throws NoSuchAlgorithmException
            if the specified provider cannot provide the requested
            algorithm.
@throws NullPointerException
            if {@code algorithm} is {@code null} (instead of
            NoSuchAlgorithmException as in 1.4 release)"
      end

      classrelation 528283 // provider (<unidirectional association>)
	relation 528283 --->
	  a role_name "provider" const_relation private
	    comment " Store used provider
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 528283 // provider (<unidirectional association>)
	  b parent class_ref 195611 // Provider
      end

      classrelation 528411 // spiImpl (<unidirectional association>)
	relation 528411 --->
	  a role_name "spiImpl" const_relation private
	    comment " Store used TrustManagerFactorySpi implementation
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 528411 // spiImpl (<unidirectional association>)
	  b parent class_ref 297243 // TrustManagerFactorySpi
      end

      classrelation 528539 // algorithm (<unidirectional association>)
	relation 528539 --->
	  a role_name "algorithm" const_relation private
	    comment " Store used algorithm
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 528539 // algorithm (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      operation 1851035 "TrustManagerFactory"
	protected explicit_return_type ""
	nparams 3
	  param inout name "factorySpi" type class_ref 297243 // TrustManagerFactorySpi
	  param inout name "provider" type class_ref 195611 // Provider
	  param inout name "algorithm" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code TrustManagerFactory} instance.

@param factorySpi
           the implementation delegate.
@param provider
           the provider
@param algorithm
           the algorithm name."
      end

      operation 1851163 "getAlgorithm"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of this {@code TrustManagerFactory} algorithm
implementation.

@return the name of this {@code TrustManagerFactory} algorithm
        implementation."
      end

      operation 1851291 "getProvider"
	public return_type class_ref 195611 // Provider
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the provider for this {@code TrustManagerFactory} instance.

@return the provider for this {@code TrustManagerFactory} instance."
      end

      operation 1851419 "init"
	public explicit_return_type "void"
	nparams 1
	  param inout name "ks" type class_ref 203547 // KeyStore
	nexceptions 1
	  exception class_ref 203803 // KeyStoreException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes this factory instance with the specified keystore as source
of certificate authorities and trust material.

@param ks
           the keystore or {@code null}.
@throws KeyStoreException
            if the initialization fails."
      end

      operation 1851547 "init"
	public explicit_return_type "void"
	nparams 1
	  param inout name "spec" type class_ref 292635 // ManagerFactoryParameters
	nexceptions 1
	  exception class_ref 196251 // InvalidAlgorithmParameterException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes this factory instance with the specified provider-specific
parameters for a source of trust material.

@param spec
           the provider-specific parameters.
@throws InvalidAlgorithmParameterException
            if the initialization fails."
      end

      operation 1851675 "getTrustManagers"
	public return_type class_ref 295195 // TrustManager
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the list of {@code TrustManager}s with one entry for each type
of trust material.

@return the list of {@code TrustManager}s"
      end
    end

    class 297243 "TrustManagerFactorySpi"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The <i>Service Provider Interface</i> (SPI) for the
{@code TrustManagerFactory} class."
      operation 1851803 "TrustManagerFactorySpi"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code TrustManagerFactorySpi} instance."
      end

      operation 1851931 "engineInit"
	abstract protected explicit_return_type "void"
	nparams 1
	  param inout name "ks" type class_ref 203547 // KeyStore
	nexceptions 1
	  exception class_ref 203803 // KeyStoreException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes this factory instance with the specified keystore as source
of certificate authorities and trust material.

@param ks
           the keystore or {@code null}.
@throws KeyStoreException
            if the initialization fails."
      end

      operation 1852059 "engineInit"
	abstract protected explicit_return_type "void"
	nparams 1
	  param inout name "spec" type class_ref 292635 // ManagerFactoryParameters
	nexceptions 1
	  exception class_ref 196251 // InvalidAlgorithmParameterException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes this factory instance with the specified provider-specific
parameters for a source of trust material.

@param spec
           the provider-specific parameters.
@throws InvalidAlgorithmParameterException
            if the initialization fails."
      end

      operation 1852187 "engineGetTrustManagers"
	abstract protected return_type class_ref 295195 // TrustManager
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the list of {@code TrustManager}s with one entry for each type
of trust material.

@return the list of {@code TrustManager}s"
      end
    end

    class 297371 "X509ExtendedKeyManager"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The abstract extension for the {@code X509KeyManager} interface."
      classrelation 528795 // <realization>
	relation 528795 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 528795 // <realization>
	  b parent class_ref 297499 // X509KeyManager
      end

      operation 1853083 "X509ExtendedKeyManager"
	protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "To be used by subclasses only.
<p>
Creates a new {@code X509ExtendedKeyManager} instance."
      end

      operation 1853211 "chooseEngineClientAlias"
	public return_type class_ref 3399692 // String
	nparams 3
	  param inout name "keyType" type class_ref 3399692 // String
	  param inout name "issuers" type class_ref 176539 // Principal
	  param inout name "engine" type class_ref 295323 // SSLEngine
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Chooses an alias for the client side of an SSL connection to authenticate
it with the specified public key type and certificate issuers.

@param keyType
           the list of public key algorithm names.
@param issuers
           the list of certificate issuers, or {@code null} if any issuer
           will do.
@param engine
           the {@code SSLEngine} for the connection, or {@code null} if
           no engine is predefined.
@return the alias name of a matching key or {@code null} if there are no
        matches."
      end

      operation 1853339 "chooseEngineServerAlias"
	public return_type class_ref 3399692 // String
	nparams 3
	  param inout name "keyType" type class_ref 3399692 // String
	  param inout name "issuers" type class_ref 176539 // Principal
	  param inout name "engine" type class_ref 295323 // SSLEngine
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Chooses an alias for the server side of an SSL connection to authenticate
it with the specified public key type and certificate issuers.

@param keyType
           the list of public key algorithm names.
@param issuers
           the list of certificate issuers, or {@code null} if any issuer
           will do.
@param engine
           the {@code SSLEngine} for the connection, or {@code null} if
           no engine is predefined.
@return the alias name of a matching key or {@code null} if there are no
        matches."
      end
    end

    class 297499 "X509KeyManager"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A Key Manager for X509 certificate-based key pairs."
      classrelation 528667 // <generalisation>
	relation 528667 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 528667 // <generalisation>
	  b parent class_ref 294427 // KeyManager
      end

      operation 1852315 "chooseClientAlias"
	public return_type class_ref 3399692 // String
	nparams 3
	  param inout name "keyType" type class_ref 3399692 // String
	  param inout name "issuers" type class_ref 176539 // Principal
	  param inout name "socket" type class_ref 176923 // Socket
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Chooses an alias for the client side of an SSL connection to authenticate
it with the specified public key type and certificate issuers.

@param keyType
           the list of public key algorithm names.
@param issuers
           the list of certificate issuers, or {@code null} if any issuer
           will do.
@param socket
           the socket for the connection, or {@code null} if
           the alias selected does not depend on a specific socket.
@return the alias name of a matching key or {@code null} if there are no
        matches."
      end

      operation 1852443 "chooseServerAlias"
	public return_type class_ref 3399692 // String
	nparams 3
	  param inout name "keyType" type class_ref 3399692 // String
	  param inout name "issuers" type class_ref 176539 // Principal
	  param inout name "socket" type class_ref 176923 // Socket
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Chooses an alias for the server side of an SSL connection to authenticate
it with the specified public key type and certificate issuers.

@param keyType
           the list of public key algorithm type names.
@param issuers
           the list of certificate issuers, or {@code null} if any issuer
           will do.
@param socket
           the socket for the connection, or {@code null} if
           the alias selected does not depend on a specific socket.
@return the alias name of a matching key or {@code null} if there are no
        matches."
      end

      operation 1852571 "getCertificateChain"
	public return_type class_ref 214299 // X509Certificate
	nparams 1
	  param inout name "alias" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the certificate chain for the specified alias.

@param alias
           the alias to get the certificate chain for.
@return the certificate chain for the specified alias, or {@code null} if
        the alias cannot be found."
      end

      operation 1852699 "getClientAliases"
	public return_type class_ref 3399692 // String
	nparams 2
	  param inout name "keyType" type class_ref 3399692 // String
	  param inout name "issuers" type class_ref 176539 // Principal
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the client aliases for the specified public key type and list of
certificate issuers.

@param keyType
           the public key algorithm type name.
@param issuers
           the list of certificate issuers, or {@code null} if any issuer
           will do.
@return the client aliases for the specified public key type, or
        {@code null} if there are no matching aliases."
      end

      operation 1852827 "getServerAliases"
	public return_type class_ref 3399692 // String
	nparams 2
	  param inout name "keyType" type class_ref 3399692 // String
	  param inout name "issuers" type class_ref 176539 // Principal
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the server aliases for the specified public key type and list of
certificate issuers.

@param keyType
           the public key algorithm type name.
@param issuers
           the list of certificate issuers, or {@code null} if any issuer
           will do.
@return the client aliases for the specified public key type, or
        {@code null} if there are no matching aliases."
      end

      operation 1852955 "getPrivateKey"
	public return_type class_ref 202651 // PrivateKey
	nparams 1
	  param inout name "alias" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the private key for the specified alias.

@param alias
           the alias to get the private key for.
@return the private key for the specified alias, or {@code null} if the
        alias cannot be found."
      end
    end

    class 297627 "X509TrustManager"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The trust manager for X509 certificates to be used to perform authentication
for secure sockets."
      classrelation 528923 // <generalisation>
	relation 528923 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 528923 // <generalisation>
	  b parent class_ref 295195 // TrustManager
      end

      operation 1853467 "checkClientTrusted"
	public explicit_return_type "void"
	nparams 2
	  param inout name "chain" type class_ref 214299 // X509Certificate
	  param inout name "authType" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 204059 // CertificateException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks whether the specified certificate chain (partial or complete) can
be validated and is trusted for client authentication for the specified
authentication type.

@param chain
           the certificate chain to validate.
@param authType
           the authentication type used.
@throws CertificateException
            if the certificate chain can't be validated or isn't trusted.
@throws IllegalArgumentException
            if the specified certificate chain is empty or {@code null},
            or if the specified authentication type is {@code null} or an
            empty string."
      end

      operation 1853595 "checkServerTrusted"
	public explicit_return_type "void"
	nparams 2
	  param inout name "chain" type class_ref 214299 // X509Certificate
	  param inout name "authType" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 204059 // CertificateException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks whether the specified certificate chain (partial or complete) can
be validated and is trusted for server authentication for the specified
key exchange algorithm.

@param chain
           the certificate chain to validate.
@param authType
           the key exchange algorithm name.
@throws CertificateException
            if the certificate chain can't be validated or isn't trusted.
@throws IllegalArgumentException
            if the specified certificate chain is empty or {@code null},
            or if the specified authentication type is {@code null} or an
            empty string."
      end

      operation 1853723 "getAcceptedIssuers"
	public return_type class_ref 214299 // X509Certificate
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the list of certificate issuer authorities which are trusted for
authentication of peers.

@return the list of certificate issuer authorities which are trusted for
        authentication of peers."
      end
    end
  end

  deploymentview 133019 "ssl"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 247963 "ManagerFactoryParameters"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 292635 // ManagerFactoryParameters
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 248091 "CertPathTrustManagerParameters"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.security.cert.CertPathParameters;
${definition}"
      associated_classes
	class_ref 292507 // CertPathTrustManagerParameters
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 248219 "HostnameVerifier"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 292891 // HostnameVerifier
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 248347 "DefaultHostnameVerifier"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.net.InetAddress;
import java.security.cert.Certificate;
import java.security.cert.CertificateParsingException;
import java.security.cert.X509Certificate;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Collections;
import java.util.List;
import java.util.Locale;
import javax.security.auth.x500.X500Principal;
${definition}"
      associated_classes
	class_ref 292763 // DefaultHostnameVerifier
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 248475 "SSLServerSocketFactory"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.security.NoSuchAlgorithmException;
import java.security.Security;
import javax.net.ServerSocketFactory;
${definition}"
      associated_classes
	class_ref 293275 // SSLServerSocketFactory
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 248603 "DefaultSSLServerSocketFactory"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.net.InetAddress;
import java.net.ServerSocket;
import java.net.SocketException;
import libcore.util.EmptyArray;
${definition}"
      associated_classes
	class_ref 293147 // DefaultSSLServerSocketFactory
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 248731 "SSLSocketFactory"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.net.Socket;
import java.security.NoSuchAlgorithmException;
import java.security.Security;
import javax.net.SocketFactory;
${definition}"
      associated_classes
	class_ref 293531 // SSLSocketFactory
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 248859 "DefaultSSLSocketFactory"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.net.InetAddress;
import java.net.Socket;
import java.net.SocketException;
import java.net.UnknownHostException;
import libcore.util.EmptyArray;
${definition}"
      associated_classes
	class_ref 293403 // DefaultSSLSocketFactory
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 248987 "DistinguishedNameParser"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import javax.security.auth.x500.X500Principal;
${definition}"
      associated_classes
	class_ref 293659 // DistinguishedNameParser
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 249115 "HandshakeCompletedEvent"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.security.Principal;
import java.security.cert.Certificate;
import java.util.EventObject;
import javax.security.cert.X509Certificate;
${definition}"
      associated_classes
	class_ref 293787 // HandshakeCompletedEvent
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 249243 "HandshakeCompletedListener"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.util.EventListener;
${definition}"
      associated_classes
	class_ref 294171 // HandshakeCompletedListener
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 249371 "HttpsURLConnection"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.net.HttpURLConnection;
import java.net.URL;
import java.security.Principal;
import java.security.cert.Certificate;
import java.security.cert.X509Certificate;
${definition}"
      associated_classes
	class_ref 294299 // HttpsURLConnection
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 249499 "KeyManager"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 294427 // KeyManager
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 249627 "KeyManagerFactory"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.security.InvalidAlgorithmParameterException;
import java.security.KeyStore;
import java.security.KeyStoreException;
import java.security.NoSuchAlgorithmException;
import java.security.NoSuchProviderException;
import java.security.Provider;
import java.security.Security;
import java.security.UnrecoverableKeyException;
import org.apache.harmony.security.fortress.Engine;
${definition}"
      associated_classes
	class_ref 294555 // KeyManagerFactory
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 249755 "KeyManagerFactorySpi"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.security.InvalidAlgorithmParameterException;
import java.security.KeyStore;
import java.security.KeyStoreException;
import java.security.NoSuchAlgorithmException;
import java.security.UnrecoverableKeyException;
${definition}"
      associated_classes
	class_ref 294683 // KeyManagerFactorySpi
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 249883 "KeyStoreBuilderParameters"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.security.KeyStore;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
${definition}"
      associated_classes
	class_ref 294811 // KeyStoreBuilderParameters
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 250011 "SSLContext"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.security.KeyManagementException;
import java.security.NoSuchAlgorithmException;
import java.security.NoSuchProviderException;
import java.security.Provider;
import java.security.SecureRandom;
import java.security.Security;
import org.apache.harmony.security.fortress.Engine;
${definition}"
      associated_classes
	class_ref 294939 // SSLContext
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 250139 "SSLContextSpi"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.security.KeyManagementException;
import java.security.SecureRandom;
${definition}"
      associated_classes
	class_ref 295067 // SSLContextSpi
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 250267 "SSLEngine"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.nio.ByteBuffer;
${definition}"
      associated_classes
	class_ref 295323 // SSLEngine
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 250395 "SSLEngineResult"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 295835 // SSLEngineResult
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 250523 "SSLException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
${definition}"
      associated_classes
	class_ref 295707 // SSLException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 250651 "SSLHandshakeException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 296219 // SSLHandshakeException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 250779 "SSLKeyException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 296347 // SSLKeyException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 250907 "SSLParameters"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 295579 // SSLParameters
      end
      comment "Copyright (C) 2010 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 251035 "SSLPeerUnverifiedException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 176411 // SSLPeerUnverifiedException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 251163 "SSLPermission"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.security.BasicPermission;
import java.security.Permission;
${definition}"
      associated_classes
	class_ref 296475 // SSLPermission
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 251291 "SSLProtocolException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 296603 // SSLProtocolException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 251419 "SSLServerSocket"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.net.InetAddress;
import java.net.ServerSocket;
${definition}"
      associated_classes
	class_ref 296731 // SSLServerSocket
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 251547 "SSLSession"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.security.Principal;
import java.security.cert.Certificate;
import javax.security.cert.X509Certificate;
${definition}"
      associated_classes
	class_ref 293019 // SSLSession
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 251675 "SSLSessionBindingEvent"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.util.EventObject;
${definition}"
      associated_classes
	class_ref 296859 // SSLSessionBindingEvent
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 251803 "SSLSessionBindingListener"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.util.EventListener;
${definition}"
      associated_classes
	class_ref 296987 // SSLSessionBindingListener
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 251931 "SSLSessionContext"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.util.Enumeration;
${definition}"
      associated_classes
	class_ref 295451 // SSLSessionContext
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 252059 "SSLSocket"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.net.InetAddress;
import java.net.Socket;
import java.net.UnknownHostException;
${definition}"
      associated_classes
	class_ref 293915 // SSLSocket
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 252187 "TrustManager"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 295195 // TrustManager
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 252315 "TrustManagerFactory"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.security.InvalidAlgorithmParameterException;
import java.security.KeyStore;
import java.security.KeyStoreException;
import java.security.NoSuchAlgorithmException;
import java.security.NoSuchProviderException;
import java.security.Provider;
import java.security.Security;
import org.apache.harmony.security.fortress.Engine;
${definition}"
      associated_classes
	class_ref 297115 // TrustManagerFactory
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 252443 "TrustManagerFactorySpi"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.security.InvalidAlgorithmParameterException;
import java.security.KeyStore;
import java.security.KeyStoreException;
${definition}"
      associated_classes
	class_ref 297243 // TrustManagerFactorySpi
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 252571 "X509KeyManager"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.net.Socket;
import java.security.Principal;
import java.security.PrivateKey;
import java.security.cert.X509Certificate;
${definition}"
      associated_classes
	class_ref 297499 // X509KeyManager
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 252699 "X509ExtendedKeyManager"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.security.Principal;
${definition}"
      associated_classes
	class_ref 297371 // X509ExtendedKeyManager
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 252827 "X509TrustManager"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.security.cert.CertificateException;
import java.security.cert.X509Certificate;
${definition}"
      associated_classes
	class_ref 297627 // X509TrustManager
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end
  end
end
