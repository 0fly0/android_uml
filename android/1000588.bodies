class Chronometer
!!!5176076.java!!!	Chronometer(inout context : Context)
        this(context, null, 0);
!!!5176204.java!!!	Chronometer(inout context : Context, inout attrs : AttributeSet)
        this(context, attrs, 0);
!!!5176332.java!!!	Chronometer(inout context : Context, inout attrs : AttributeSet, in defStyle : int)
        super(context, attrs, defStyle);

        TypedArray a = context.obtainStyledAttributes(
                attrs,
                com.android.internal.R.styleable.Chronometer, defStyle, 0);
        setFormat(a.getString(com.android.internal.R.styleable.Chronometer_format));
        a.recycle();

        init();
!!!5176460.java!!!	init() : void
        mBase = SystemClock.elapsedRealtime();
        updateText(mBase);
!!!5176588.java!!!	setBase(in base : long) : void
        mBase = base;
        dispatchChronometerTick();
        updateText(SystemClock.elapsedRealtime());
!!!5176716.java!!!	getBase() : long
        return mBase;
!!!5176844.java!!!	setFormat(in format : String) : void
        mFormat = format;
        if (format != null && mFormatBuilder == null) {
            mFormatBuilder = new StringBuilder(format.length() * 2);
        }
!!!5176972.java!!!	getFormat() : String
        return mFormat;
!!!5177100.java!!!	setOnChronometerTickListener(inout listener : OnChronometerTickListener) : void
        mOnChronometerTickListener = listener;
!!!5177228.java!!!	getOnChronometerTickListener() : OnChronometerTickListener
        return mOnChronometerTickListener;
!!!5177356.java!!!	start() : void
        mStarted = true;
        updateRunning();
!!!5177484.java!!!	stop() : void
        mStarted = false;
        updateRunning();
!!!5177612.java!!!	setStarted(inout started : boolean) : void
        mStarted = started;
        updateRunning();
!!!5177740.java!!!	onDetachedFromWindow() : void
        super.onDetachedFromWindow();
        mVisible = false;
        updateRunning();
!!!5177868.java!!!	onWindowVisibilityChanged(in visibility : int) : void
        super.onWindowVisibilityChanged(visibility);
        mVisible = visibility == VISIBLE;
        updateRunning();
!!!5177996.java!!!	updateText(in now : long) : void
        long seconds = now - mBase;
        seconds /= 1000;
        String text = DateUtils.formatElapsedTime(mRecycle, seconds);

        if (mFormat != null) {
            Locale loc = Locale.getDefault();
            if (mFormatter == null || !loc.equals(mFormatterLocale)) {
                mFormatterLocale = loc;
                mFormatter = new Formatter(mFormatBuilder, loc);
            }
            mFormatBuilder.setLength(0);
            mFormatterArgs[0] = text;
            try {
                mFormatter.format(mFormat, mFormatterArgs);
                text = mFormatBuilder.toString();
            } catch (IllegalFormatException ex) {
                if (!mLogged) {
                    Log.w(TAG, "Illegal format string: " + mFormat);
                    mLogged = true;
                }
            }
        }
        setText(text);
!!!5178124.java!!!	updateRunning() : void
        boolean running = mVisible && mStarted;
        if (running != mRunning) {
            if (running) {
                updateText(SystemClock.elapsedRealtime());
                dispatchChronometerTick();
                mHandler.sendMessageDelayed(Message.obtain(mHandler, TICK_WHAT), 1000);
            } else {
                mHandler.removeMessages(TICK_WHAT);
            }
            mRunning = running;
        }
!!!5178252.java!!!	dispatchChronometerTick() : void
        if (mOnChronometerTickListener != null) {
            mOnChronometerTickListener.onChronometerTick(this);
        }
!!!5178380.java!!!	onInitializeAccessibilityEvent(inout event : AccessibilityEvent) : void
        super.onInitializeAccessibilityEvent(event);
        event.setClassName(Chronometer.class.getName());
!!!5178508.java!!!	onInitializeAccessibilityNodeInfo(inout info : AccessibilityNodeInfo) : void
        super.onInitializeAccessibilityNodeInfo(info);
        info.setClassName(Chronometer.class.getName());
