class InsetDrawable
!!!6472460.java!!!	InsetDrawable()
        this(null, null);
!!!6472588.java!!!	InsetDrawable(inout drawable : Drawable, in inset : int)
        this(drawable, inset, inset, inset, inset);
!!!6472716.java!!!	InsetDrawable(inout drawable : Drawable, in insetLeft : int, in insetTop : int, in insetRight : int, in insetBottom : int)
        this(null, null);
        
        mInsetState.mDrawable = drawable;
        mInsetState.mInsetLeft = insetLeft;
        mInsetState.mInsetTop = insetTop;
        mInsetState.mInsetRight = insetRight;
        mInsetState.mInsetBottom = insetBottom;
        
        if (drawable != null) {
            drawable.setCallback(this);
        }
!!!6472844.java!!!	inflate(inout r : Resources, inout parser : XmlPullParser, inout attrs : AttributeSet) : void
        int type;
        
        TypedArray a = r.obtainAttributes(attrs,
                com.android.internal.R.styleable.InsetDrawable);

        super.inflateWithAttributes(r, parser, a,
                com.android.internal.R.styleable.InsetDrawable_visible);

        int drawableRes = a.getResourceId(com.android.internal.R.styleable.
                                    InsetDrawable_drawable, 0);

        int inLeft = a.getDimensionPixelOffset(com.android.internal.R.styleable.
                                    InsetDrawable_insetLeft, 0);
        int inTop = a.getDimensionPixelOffset(com.android.internal.R.styleable.
                                    InsetDrawable_insetTop, 0);
        int inRight = a.getDimensionPixelOffset(com.android.internal.R.styleable.
                                    InsetDrawable_insetRight, 0);
        int inBottom = a.getDimensionPixelOffset(com.android.internal.R.styleable.
                                    InsetDrawable_insetBottom, 0);

        a.recycle();

        Drawable dr;
        if (drawableRes != 0) {
            dr = r.getDrawable(drawableRes);
        } else {
            while ((type=parser.next()) == XmlPullParser.TEXT) {
            }
            if (type != XmlPullParser.START_TAG) {
                throw new XmlPullParserException(
                        parser.getPositionDescription()
                        + ": <inset> tag requires a 'drawable' attribute or "
                        + "child tag defining a drawable");
            }
            dr = Drawable.createFromXmlInner(r, parser, attrs);
        }

        if (dr == null) {
            Log.w("drawable", "No drawable specified for <inset>");
        }

        mInsetState.mDrawable = dr;
        mInsetState.mInsetLeft = inLeft;
        mInsetState.mInsetRight = inRight;
        mInsetState.mInsetTop = inTop;
        mInsetState.mInsetBottom = inBottom;

        if (dr != null) {
            dr.setCallback(this);
        }
!!!6472972.java!!!	invalidateDrawable(inout who : Drawable) : void
        final Callback callback = getCallback();
        if (callback != null) {
            callback.invalidateDrawable(this);
        }
!!!6473100.java!!!	scheduleDrawable(inout who : Drawable, inout what : Runnable, in when : long) : void
        final Callback callback = getCallback();
        if (callback != null) {
            callback.scheduleDrawable(this, what, when);
        }
!!!6473228.java!!!	unscheduleDrawable(inout who : Drawable, inout what : Runnable) : void
        final Callback callback = getCallback();
        if (callback != null) {
            callback.unscheduleDrawable(this, what);
        }
!!!6473356.java!!!	draw(inout canvas : Canvas) : void
        mInsetState.mDrawable.draw(canvas);
!!!6473484.java!!!	getChangingConfigurations() : int
        return super.getChangingConfigurations()
                | mInsetState.mChangingConfigurations
                | mInsetState.mDrawable.getChangingConfigurations();
!!!6473612.java!!!	getPadding(inout padding : Rect) : boolean
        boolean pad = mInsetState.mDrawable.getPadding(padding);

        padding.left += mInsetState.mInsetLeft;
        padding.right += mInsetState.mInsetRight;
        padding.top += mInsetState.mInsetTop;
        padding.bottom += mInsetState.mInsetBottom;

        if (pad || (mInsetState.mInsetLeft | mInsetState.mInsetRight | 
                    mInsetState.mInsetTop | mInsetState.mInsetBottom) != 0) {
            return true;
        } else {
            return false;
        }
!!!6473740.java!!!	setVisible(inout visible : boolean, inout restart : boolean) : boolean
        mInsetState.mDrawable.setVisible(visible, restart);
        return super.setVisible(visible, restart);
!!!6473868.java!!!	setAlpha(in alpha : int) : void
        mInsetState.mDrawable.setAlpha(alpha);
!!!6473996.java!!!	setColorFilter(inout cf : ColorFilter) : void
        mInsetState.mDrawable.setColorFilter(cf);
!!!6474124.java!!!	getOpacity() : int
        return mInsetState.mDrawable.getOpacity();
!!!6474252.java!!!	isStateful() : boolean
        return mInsetState.mDrawable.isStateful();
!!!6474380.java!!!	onStateChange(inout state : int) : boolean
        boolean changed = mInsetState.mDrawable.setState(state);
        onBoundsChange(getBounds());
        return changed;
!!!6474508.java!!!	onBoundsChange(inout bounds : Rect) : void
        final Rect r = mTmpRect;
        r.set(bounds);

        r.left += mInsetState.mInsetLeft;
        r.top += mInsetState.mInsetTop;
        r.right -= mInsetState.mInsetRight;
        r.bottom -= mInsetState.mInsetBottom;

        mInsetState.mDrawable.setBounds(r.left, r.top, r.right, r.bottom);
!!!6474636.java!!!	getIntrinsicWidth() : int
        return mInsetState.mDrawable.getIntrinsicWidth();
!!!6474764.java!!!	getIntrinsicHeight() : int
        return mInsetState.mDrawable.getIntrinsicHeight();
!!!6474892.java!!!	getConstantState() : ConstantState
        if (mInsetState.canConstantState()) {
            mInsetState.mChangingConfigurations = getChangingConfigurations();
            return mInsetState;
        }
        return null;
!!!6475020.java!!!	mutate() : Drawable
        if (!mMutated && super.mutate() == this) {
            mInsetState.mDrawable.mutate();
            mMutated = true;
        }
        return this;
!!!6475788.java!!!	InsetDrawable(inout state : InsetState, inout res : Resources)
        mInsetState = new InsetState(state, this, res);
