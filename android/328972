format 74
"BT" // vendor::marvell::generic::frameworks::factory::factory_mode::testcase::BT
  revision 1
  modified_by 12 "shchen"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  cpp_h_dir "/home/shchen/work/jellybean/vendor/marvell/generic/frameworks/factory/factory_mode/testcase/BT/"
  cpp_src_dir "/home/shchen/work/jellybean/vendor/marvell/generic/frameworks/factory/factory_mode/testcase/BT/"
  classview 284044 "BT"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 2957580 "WorkHandler"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 5449484 // <generalisation>
	relation 5449356 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 5449484 // <generalisation>
	  b parent class_ref 2605196 // Handler
      end

      operation 11991180 "handleMessage"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "msg" type class_ref 2605452 // Message
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        int w = msg->what;
        switch(w){
            case MSG_INIT_BT:{
                if(initBluetooth() != 0){
                    printf(\"Init BT failed.\\n\");
                    sendEmptyMessage(MSG_EXIT_MAIN);
                }else{
                    sendEmptyMessageDelayed(MSG_GET_ADDR, 500);
                }
                break;
            }
            case MSG_GET_ADDR:{
                int ret = sBluetoothInterface->get_adapter_property(BT_PROPERTY_BDADDR);
                if(ret != BT_STATUS_SUCCESS){
                    printf(\"get BT address failed.\\n\");
                    sendEmptyMessage(MSG_EXIT_MAIN);
                }
                break;
            }
            case MSG_START_SCANNING:{
                printf(\"Looking for the device...\\n\");
                int ret = sBluetoothInterface->start_discovery();
                if(ret != BT_STATUS_SUCCESS){
                    printf(\"Start scaning failed.\\n\");
                    sendEmptyMessage(MSG_EXIT_MAIN);
                }
                break;
            }
            case MSG_CANCEL_SCANNING:{
                int ret = sBluetoothInterface->cancel_discovery();
                if(ret != BT_STATUS_SUCCESS){
                    printf(\"Cancel scaning failed.\\n\");
                }
                if(!foundAddr){
                    printf(\"Device %2.2X:%2.2X:%2.2X:%2.2X:%2.2X:%2.2X not found, \"
                            \"please make sure BT device turned on and visible.\\n\",
                            addr[0], addr[1], addr[2],addr[3], addr[4], addr[5]);
                    sendEmptyMessage(MSG_EXIT_MAIN);
                }else if(!startPairing){
                    startPairing = true;
                    printf(\"Device found.\\n\");
                    sendEmptyMessageDelayed(MSG_START_PAIRING, 500);
                }
                break;
            }
            case MSG_START_PAIRING:{
                printf(\"Start pairing...\\n\");
                int ret = sBluetoothInterface->create_bond((bt_bdaddr_t *)addr);
                if(ret != BT_STATUS_SUCCESS){
                    printf(\"Start pairing failed.\\n\");
                    sendEmptyMessage(MSG_EXIT_MAIN);
                }else{
                    sendEmptyMessageDelayed(MSG_PAIRING_TIMEOUT, 20000); //For timeout
                }
                break;
            }
            case MSG_PAIRING_TIMEOUT:{
                printf(\"Pairing timeout.\\n\");
                sendEmptyMessage(MSG_EXIT_MAIN);
            }
            case MSG_ADAPTER_PROPERTIES:{
                handleAdapterProperties((bt_status_t)msg->arg1, msg->arg2,
                                        (bt_property_t*)msg->obj);
                break;
            }
            case MSG_DEVICE_FOUND:{
                handleDeviceFoundMessage(msg->arg1, (bt_property_t*)msg->obj);
                break;
            }
            case MSG_BOND_STATE_CHANGED:{
                handleBondStateChangedMessage((bt_status_t)msg->arg1, (bt_bdaddr_t*)msg->obj,
                                              (bt_bond_state_t)msg->arg2);
                break;
            }
            case MSG_EXIT_MAIN:{
                Looper::myLooper()->quit(); // Exit the program.
                break;
            }
        }
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end
  end

  deploymentview 271628 "BT"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 1117580 "WorkHandler"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2957580 // WorkHandler
      end
    end

    artifact 1117708 "main"
      stereotype "source"
      cpp_src "int main(int argc, char *argv[]){
    bool wrongParam = false;
    address_count = 0;
    foundAddr = false;
    startScanning = false;
    startPairing = false;
    getBTAddr = (argc == 1);
    if(argc > 2){
        wrongParam = true;
    }else if(argc == 2){
        if(checkAddrFormat(argv[1])){
            unsigned int chs[6];
            sscanf(argv[1], \"%x:%x:%x:%x:%x:%x\",
                &chs[0], &chs[1], &chs[2], &chs[3], &chs[4], &chs[5]);
            for(int i=0;i<6;i++){
                addr[i] = (uint8_t)chs[i];
            }
        }else{
            wrongParam = true;
        }
    }
    if(wrongParam){
        printf(\"Usage: %s <addr>\\n\", argv[0]);
        printf(\"    Sample: %s 1C:5A:3E:07:33:90\\n\", argv[0]);
        return 0;
    }

    Looper::prepare(); // Add the message loop to the current thread.
    h = new WorkHandler();
    h->sendEmptyMessage(MSG_INIT_BT);
    Looper::loop(); // Start the message loop.
    Looper::onQuit();
    return 0;
}
"
      associated_classes
      end
    end
  end
end
