class PairingActivity
!!!13368844.java!!!	onCreate(inout savedInstanceState : Bundle) : void
        super.onCreate(savedInstanceState);
        setVisible(false);
!!!13368972.java!!!	onStart() : void
        super.onStart();
        displayPairingDialog();
!!!13369100.java!!!	onCreateDialog(in id : int) : Dialog
        if (WAIT_FOR_PAIRING_DIALOG_ID == id) {
            ProgressDialog waitForPairingDialog;
            waitForPairingDialog = new ProgressDialog(this);
            waitForPairingDialog.setMessage(getString(
                    R.string.waiting_for_pairing_message));
            waitForPairingDialog.setCancelable(false);
            return waitForPairingDialog;
        } else {
            return super.onCreateDialog(id);
        }
!!!13369228.java!!!	displayPairingDialog() : void
        showDialog(WAIT_FOR_PAIRING_DIALOG_ID);

        FinishPairingAsyncTask finishPairingTask = new FinishPairingAsyncTask();
        finishPairingTask.execute();
!!!13369612.java!!!	pair(inout paired : boolean) : void
        Uri videoUri = MediaDevicesIntents.getVideoUri(getIntent());
        Device device = MediaDevicesIntents.getDevice(getIntent());
        if (paired) {
            // Send intent to the service.
            Intent pairIntent = MediaDevicesIntents.createPairingResultIntent(device, videoUri,
                    null, true);
            pairIntent.setAction(MediaDevicesConstants.ACTION_PAIR_DEVICE);
            pairIntent.setClass(getApplicationContext(), MdcpService.class);
            startService(pairIntent);
        }

        Intent resultIntent = MediaDevicesIntents.createPairingResultIntent(device, videoUri,
                null, paired);

        setResult(paired ? RESULT_OK : RESULT_CANCELED, resultIntent);
