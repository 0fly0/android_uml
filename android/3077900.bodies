class AudioAndHapticFeedbackManager
!!!12765708.java!!!	AudioAndHapticFeedbackManager(in latinIme : LatinIME, in settingsValues : SettingsValues)
        mSettingsValues = settingsValues;
        mVibratorUtils = VibratorUtils.getInstance(latinIme);
        mAudioManager = (AudioManager) latinIme.getSystemService(Context.AUDIO_SERVICE);
        mSoundOn = reevaluateIfSoundIsOn();
!!!12765836.java!!!	hapticAndAudioFeedback(in primaryCode : int, in viewToPerformHapticFeedbackOn : View) : void
        vibrate(viewToPerformHapticFeedbackOn);
        playKeyClick(primaryCode);
!!!12765964.java!!!	reevaluateIfSoundIsOn() : boolean
        if (!mSettingsValues.mSoundOn || mAudioManager == null) {
            return false;
        } else {
            return mAudioManager.getRingerMode() == AudioManager.RINGER_MODE_NORMAL;
        }
!!!12766092.java!!!	playKeyClick(in primaryCode : int) : void
        // if mAudioManager is null, we can't play a sound anyway, so return
        if (mAudioManager == null) return;
        if (mSoundOn) {
            final int sound;
            switch (primaryCode) {
            case Keyboard.CODE_DELETE:
                sound = AudioManager.FX_KEYPRESS_DELETE;
                break;
            case Keyboard.CODE_ENTER:
                sound = AudioManager.FX_KEYPRESS_RETURN;
                break;
            case Keyboard.CODE_SPACE:
                sound = AudioManager.FX_KEYPRESS_SPACEBAR;
                break;
            default:
                sound = AudioManager.FX_KEYPRESS_STANDARD;
                break;
            }
            mAudioManager.playSoundEffect(sound, mSettingsValues.mFxVolume);
        }
!!!12766220.java!!!	vibrate(in viewToPerformHapticFeedbackOn : View) : void
        if (!mSettingsValues.mVibrateOn) {
            return;
        }
        if (mSettingsValues.mKeypressVibrationDuration < 0) {
            // Go ahead with the system default
            if (viewToPerformHapticFeedbackOn != null) {
                viewToPerformHapticFeedbackOn.performHapticFeedback(
                        HapticFeedbackConstants.KEYBOARD_TAP,
                        HapticFeedbackConstants.FLAG_IGNORE_GLOBAL_SETTING);
            }
        } else if (mVibratorUtils != null) {
            mVibratorUtils.vibrate(mSettingsValues.mKeypressVibrationDuration);
        }
!!!12766348.java!!!	onRingerModeChanged() : void
        mSoundOn = reevaluateIfSoundIsOn();
