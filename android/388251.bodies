class OldDataOutputStreamTest
!!!2651035.java!!!	test_flush() : void
        BufferedOutputStream buf = new BufferedOutputStream(bos);

        os = new DataOutputStream(buf);
        os.writeInt(9087589);
        assertTrue("Test 1: Written data should not be available.",
                bos.toByteArray().length == 0);
        os.flush();
        assertTrue("Test 2: Written data should be available.",
                bos.toByteArray().length > 0);
        os.close();

        openDataInputStream();
        int c = dis.readInt();
        assertEquals("Test 3: Failed to flush correctly;", 9087589, c);
        dis.close();

        os = new DataOutputStream(sos);
        try {
            os.flush();
            fail("Test 4: IOException expected.");
        } catch (IOException e) {
            // Expected.
        }
!!!2651163.java!!!	test_write$BII() : void
        int r;
        os.write(testString.getBytes(), 5, testLength - 7);
        os.close();
        openDataInputStream();
        byte[] rbuf = new byte[testLength];
        r = dis.read(rbuf, 0, testLength);
        assertEquals("Test 1: Incorrect number of bytes read;",
                testLength - 7, r);
        dis.close();
        assertTrue("Test 2: Incorrect bytes written or read.",
                new String(rbuf, 0, r).equals(
                        testString.substring(5, testLength - 2)));
!!!2651291.java!!!	test_write$BII_Exception() : void
        byte[] nullByteArray = null;
        byte[] byteArray = new byte[10];

        try {
            os.write(nullByteArray, 0, 1);
            fail("Test 1: NullPointerException expected.");
        } catch (NullPointerException e) {
            // Expected.
        }

        try {
            os.write(byteArray, -1, 1);
            fail("Test 2: IndexOutOfBoundsException expected.");
        } catch (IndexOutOfBoundsException e) {
            // Expected.
        }

        try {
            os.write(byteArray, 0, -1);
            fail("Test 3: IndexOutOfBoundsException expected.");
        } catch (IndexOutOfBoundsException e) {
            // Expected.
        }

        try {
            os.write(byteArray, 1, 10);
            fail("Test 4: IndexOutOfBoundsException expected.");
        } catch (IndexOutOfBoundsException e) {
            // Expected.
        }
!!!2651419.java!!!	test_writeI() : void
        os.write(42);
        os.close();

        openDataInputStream();
        assertEquals("Test 1: Incorrect int written or read;",
                42, dis.read());
        dis.close();

        os = new DataOutputStream(sos);
        try {
            os.write(42);
            fail("Test 2: IOException expected.");
        } catch (IOException e) {
            // Expected.
        }
!!!2651547.java!!!	test_writeBytesLjava_lang_String() : void
        os.writeBytes(testString);
        os.close();

        openDataInputStream();
        byte[] rbuf = new byte[testLength];
        dis.read(rbuf, 0, testLength);
        dis.close();
        assertTrue("Test 1: Incorrect bytes written or read.",
                new String(rbuf, 0, testLength).equals(testString));

        os = new DataOutputStream(sos);
        try {
            os.writeBytes(testString);
            fail("Test 2: IOException expected.");
        } catch (IOException e) {
            // Expected.
        }
!!!2651675.java!!!	test_writeCharsLjava_lang_String() : void
        os.writeChars(unihw);
        os.close();
        openDataInputStream();
        char[] chars = new char[unihw.length()];
        int i, a = dis.available() / 2;
        for (i = 0; i < a; i++) chars[i] = dis.readChar();
        assertEquals("Test 1: Incorrect chars written or read;",
                unihw, new String(chars, 0, i)
        );
        dis.close();

        os = new DataOutputStream(sos);
        try {
            os.writeChars(unihw);
            fail("Test 2: IOException expected.");
        } catch (IOException e) {
            // Expected.
        }
!!!2651803.java!!!	openDataInputStream() : void
        dis = new DataInputStream(new ByteArrayInputStream(bos.toByteArray()));
!!!2651931.java!!!	setUp() : void
        sos = new Support_OutputStream(true);
        bos = new ByteArrayOutputStream();
        os = new DataOutputStream(bos);
!!!2652059.java!!!	tearDown() : void
        sos.setThrowsException(false);
        try {
            if (os != null)
                os.close();
            if (dis != null)
                dis.close();
        } catch (IOException e) {
        }
