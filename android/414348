format 74
"vm" // dalvik::vm
  revision 2
  modified_by 12 "shchen"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  cpp_h_dir "/home/shchen/work/jellybean/dalvik/vm/"
  cpp_src_dir "/home/shchen/work/jellybean/dalvik/vm/"
  classview 351628 "vm"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 3580172 "AtomicCacheEntry"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " * One entry in the cache.  We store two keys (e.g. the classes that are
 * arguments to \"instanceof\") and one result (e.g. a boolean value).
 *
 * Must be exactly 16 bytes."
      classrelation 6881036 // key1 (<directional composition>)
	relation 6880908 *-->
	  a role_name "key1" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6881036 // key1 (<directional composition>)
	  b parent class_ref 3580300 // u4
      end

      classrelation 6881164 // key2 (<directional composition>)
	relation 6881036 *-->
	  a role_name "key2" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6881164 // key2 (<directional composition>)
	  b parent class_ref 3580300 // u4
      end

      classrelation 6881292 // value (<directional composition>)
	relation 6881164 *-->
	  a role_name "value" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6881292 // value (<directional composition>)
	  b parent class_ref 3580300 // u4
      end

      classrelation 6881420 // version (<directional composition>)
	relation 6881292 *-->
	  a role_name "version" volatile public
	    comment " version and lock flag "
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6881420 // version (<directional composition>)
	  b parent class_ref 3580300 // u4
      end
    end

    class 3580300 "u4"
      visibility package stereotype "typedef" explicit_base_type "uint32_t"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
    end

    class 3580428 "AtomicCache"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " * One cache.
 *
 * Thought: we might be able to save a few cycles by storing the cache
 * struct and \"entries\" separately, avoiding an indirection.  (We already
 * handle \"numEntries\" separately in ATOMIC_CACHE_LOOKUP.)"
      classrelation 6881548 // entries (<unidirectional association>)
	relation 6881420 --->
	  a role_name "entries" public
	    comment " array of entries "
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6881548 // entries (<unidirectional association>)
	  b parent class_ref 3580172 // AtomicCacheEntry
      end

      attribute 12763916 "numEntries"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " #of entries, must be power of 2 "
      end

      attribute 12764044 "entryAlloc"
	public explicit_type "void"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " memory allocated for entries "
      end

      attribute 12764172 "trivial"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " cache access not required "
      end

      attribute 12764300 "fail"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " contention failure "
      end

      attribute 12764428 "hits"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " found entry in cache "
      end

      attribute 12764556 "misses"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " entry was for other keys "
      end

      attribute 12764684 "fills"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " entry was empty "
      end
    end

    class 3580556 "BitVector"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " * Expanding bitmap, used for tracking resources.  Bits are numbered starting
 * from zero.
 *
 * All operations on a BitVector are unsynchronized."
      attribute 12764812 "expandable"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " expand bitmap if we run out? "
      end

      classrelation 6881676 // storageSize (<directional composition>)
	relation 6881548 *-->
	  a role_name "storageSize" public
	    comment " current size, in 32-bit words "
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6881676 // storageSize (<directional composition>)
	  b parent class_ref 3580300 // u4
      end

      classrelation 6881804 // storage (<unidirectional association>)
	relation 6881676 --->
	  a role_name "storage" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6881804 // storage (<unidirectional association>)
	  b parent class_ref 3580300 // u4
      end
    end

    class 3580684 "BitVectorIterator"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " Handy iterator to walk through the bit positions set to 1 "
      classrelation 6881932 // pBits (<unidirectional association>)
	relation 6881804 --->
	  a role_name "pBits" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6881932 // pBits (<unidirectional association>)
	  b parent class_ref 3580556 // BitVector
      end

      classrelation 6882060 // idx (<directional composition>)
	relation 6881932 *-->
	  a role_name "idx" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6882060 // idx (<directional composition>)
	  b parent class_ref 3580300 // u4
      end

      classrelation 6882188 // bitSize (<directional composition>)
	relation 6882060 *-->
	  a role_name "bitSize" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6882188 // bitSize (<directional composition>)
	  b parent class_ref 3580300 // u4
      end
    end

    class 3580812 "u1"
      visibility package stereotype "typedef" explicit_base_type "uint8_t"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " * These match the definitions in the VM specification."
    end

    class 3580940 "u2"
      visibility package stereotype "typedef" explicit_base_type "uint16_t"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
    end

    class 3581068 "u8"
      visibility package stereotype "typedef" explicit_base_type "uint64_t"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
    end

    class 3581196 "s1"
      visibility package stereotype "typedef" explicit_base_type "int8_t"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
    end

    class 3581324 "s2"
      visibility package stereotype "typedef" explicit_base_type "int16_t"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
    end

    class 3581452 "s4"
      visibility package stereotype "typedef" explicit_base_type "int32_t"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
    end

    class 3581580 "s8"
      visibility package stereotype "typedef" explicit_base_type "int64_t"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
    end

    class 3581708 "JValue"
      visibility package stereotype "union"
      cpp_decl "${comment}${template}union ${name} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 6882316 // z (<directional composition>)
	relation 6882188 *-->
	  a role_name "z" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6882316 // z (<directional composition>)
	  b parent class_ref 3580812 // u1
      end

      classrelation 6882444 // b (<directional composition>)
	relation 6882316 *-->
	  a role_name "b" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6882444 // b (<directional composition>)
	  b parent class_ref 3581196 // s1
      end

      classrelation 6882572 // c (<directional composition>)
	relation 6882444 *-->
	  a role_name "c" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6882572 // c (<directional composition>)
	  b parent class_ref 3580940 // u2
      end

      classrelation 6882700 // s (<directional composition>)
	relation 6882572 *-->
	  a role_name "s" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6882700 // s (<directional composition>)
	  b parent class_ref 3581324 // s2
      end

      classrelation 6882828 // i (<directional composition>)
	relation 6882700 *-->
	  a role_name "i" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6882828 // i (<directional composition>)
	  b parent class_ref 3581452 // s4
      end

      classrelation 6882956 // j (<directional composition>)
	relation 6882828 *-->
	  a role_name "j" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6882956 // j (<directional composition>)
	  b parent class_ref 3581580 // s8
      end

      attribute 12764940 "f"
	public explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12765068 "d"
	public explicit_type "double"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 6883084 // l (<unidirectional association>)
	relation 6882956 --->
	  a role_name "l" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6883084 // l (<unidirectional association>)
	  b parent class_ref 3581836 // Object
      end

      classrelation 6883212 // _z (<directional composition>)
	relation 6883084 *-->
	  a role_name "_z" multiplicity "[3]" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6883212 // _z (<directional composition>)
	  b parent class_ref 3580812 // u1
      end

      classrelation 6883340 // <directional composition>
	relation 6883212 *-->
	  a role_name "" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6883340 // <directional composition>
	  b parent class_ref 3580812 // u1
      end
    end

    class 3582092 "AddressSet"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " * Used by StepControl to track a set of addresses associated with
 * a single line."
      classrelation 6883468 // setSize (<directional composition>)
	relation 6883340 *-->
	  a role_name "setSize" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6883468 // setSize (<directional composition>)
	  b parent class_ref 3580300 // u4
      end

      classrelation 6883596 // set (<directional composition>)
	relation 6883468 *-->
	  a role_name "set" multiplicity "[1]" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6883596 // set (<directional composition>)
	  b parent class_ref 3580812 // u1
      end
    end

    class 3582220 "StepControl"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " * Single-step management."
      classrelation 6883724 // size (<directional composition>)
	relation 6883596 *-->
	  a role_name "size" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6883724 // size (<directional composition>)
	  b parent class_ref 3582348 // JdwpStepSize
      end

      classrelation 6883852 // depth (<directional composition>)
	relation 6883724 *-->
	  a role_name "depth" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6883852 // depth (<directional composition>)
	  b parent class_ref 3582476 // JdwpStepDepth
      end

      classrelation 6883980 // thread (<unidirectional association>)
	relation 6883852 --->
	  a role_name "thread" public
	    comment " don't deref; for comparison only "
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6883980 // thread (<unidirectional association>)
	  b parent class_ref 3582604 // Thread
      end

      attribute 12765196 "active"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 6884108 // method (<unidirectional association>)
	relation 6883980 --->
	  a role_name "method" const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6884108 // method (<unidirectional association>)
	  b parent class_ref 3582732 // Method
      end

      attribute 12765324 "line"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " line #; could be -1 "
      end

      classrelation 6884236 // pAddressSet (<unidirectional association>)
	relation 6884108 --->
	  a role_name "pAddressSet" const_relation public
	    comment " if non-null, address set for line "
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6884236 // pAddressSet (<unidirectional association>)
	  b parent class_ref 3582092 // AddressSet
      end

      attribute 12765452 "frameDepth"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3582604 "Thread"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " * Our per-thread data.
 *
 * These are allocated on the system heap."
      classrelation 6909964 // interpSave (<directional composition>)
	relation 6909836 *-->
	  a role_name "interpSave" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6909964 // interpSave (<directional composition>)
	  b parent class_ref 3592716 // InterpSaveState
      end

      classrelation 6910092 // threadId (<directional composition>)
	relation 6909964 *-->
	  a role_name "threadId" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6910092 // threadId (<directional composition>)
	  b parent class_ref 3580300 // u4
      end

      classrelation 6910220 // interpBreak (<directional composition>)
	relation 6910092 *-->
	  a role_name "interpBreak" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6910220 // interpBreak (<directional composition>)
	  b parent class_ref 3592588 // InterpBreak
      end

      attribute 12815116 "suspendCount"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12815244 "dbgSuspendCount"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 6910348 // cardTable (<unidirectional association>)
	relation 6910220 --->
	  a role_name "cardTable" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6910348 // cardTable (<unidirectional association>)
	  b parent class_ref 3580812 // u1
      end

      classrelation 6910476 // interpStackEnd (<unidirectional association>)
	relation 6910348 --->
	  a role_name "interpStackEnd" const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6910476 // interpStackEnd (<unidirectional association>)
	  b parent class_ref 3580812 // u1
      end

      attribute 12815372 "XcurFrame"
	public explicit_type "void"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 6910604 // exception (<unidirectional association>)
	relation 6910476 --->
	  a role_name "exception" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6910604 // exception (<unidirectional association>)
	  b parent class_ref 3581836 // Object
      end

      attribute 12815500 "debugIsMethodEntry"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12815628 "interpStackSize"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12815756 "stackOverflowed"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12815884 "handle"
	public explicit_type "pthread_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12816012 "mainHandlerTable"
	public explicit_type "void"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Table of actual instruction handler"
      end

      attribute 12816140 "altHandlerTable"
	public explicit_type "void"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Table of breakout handlers"
      end

      attribute 12816268 "unused0"
	public explicit_type "void"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Consume space to keep offsets"
      end

      attribute 12816396 "unused1"
	public explicit_type "void"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "   the same between builds with"
      end

      attribute 12816524 "singleStepCount"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 6910732 // jitToInterpEntries (<directional composition>)
	relation 6910604 *-->
	  a role_name "jitToInterpEntries" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}struct ${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6910732 // jitToInterpEntries (<directional composition>)
	  b parent class_ref 3592844 // JitToInterpEntries
      end

      attribute 12816652 "inJitCodeCache"
	public explicit_type "void"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12816780 "pJitProfTable"
	public explicit_type "byte"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12816908 "jitThreshold"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12817036 "jitResumeNPC"
	const_attribute public explicit_type "void"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Translation return point"
      end

      classrelation 6910860 // jitResumeNSP (<unidirectional association>)
	relation 6910732 --->
	  a role_name "jitResumeNSP" const_relation public
	    comment " Native SP at return point"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6910860 // jitResumeNSP (<unidirectional association>)
	  b parent class_ref 3580300 // u4
      end

      classrelation 6910988 // jitResumeDPC (<unidirectional association>)
	relation 6910860 --->
	  a role_name "jitResumeDPC" const_relation public
	    comment " Dalvik inst following single-step"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6910988 // jitResumeDPC (<unidirectional association>)
	  b parent class_ref 3580940 // u2
      end

      classrelation 6911116 // jitState (<directional composition>)
	relation 6910988 *-->
	  a role_name "jitState" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6911116 // jitState (<directional composition>)
	  b parent class_ref 3592972 // JitState
      end

      attribute 12817164 "icRechainCount"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12817292 "pProfileCountdown"
	const_attribute public explicit_type "void"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 6911244 // callsiteClass (<unidirectional association>)
	relation 6911116 --->
	  a role_name "callsiteClass" const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6911244 // callsiteClass (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6911372 // methodToCall (<unidirectional association>)
	relation 6911244 --->
	  a role_name "methodToCall" const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6911372 // methodToCall (<unidirectional association>)
	  b parent class_ref 3582732 // Method
      end

      classrelation 6911500 // jniLocalRefTable (<directional composition>)
	relation 6911372 *-->
	  a role_name "jniLocalRefTable" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6911500 // jniLocalRefTable (<directional composition>)
	  b parent class_ref 3585292 // IndirectRefTable
      end

      classrelation 6911628 // shadowSpace (<unidirectional association>)
	relation 6911500 --->
	  a role_name "shadowSpace" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}struct ${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6911628 // shadowSpace (<unidirectional association>)
	  b parent class_ref 3593100 // ShadowSpace
      end

      attribute 12817420 "currTraceRun"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12817548 "totalTraceLen"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Number of Dalvik insts in trace"
      end

      classrelation 6911756 // currTraceHead (<unidirectional association>)
	relation 6911628 --->
	  a role_name "currTraceHead" const_relation public
	    comment " Start of the trace we're building"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6911756 // currTraceHead (<unidirectional association>)
	  b parent class_ref 3580940 // u2
      end

      classrelation 6911884 // currRunHead (<unidirectional association>)
	relation 6911756 --->
	  a role_name "currRunHead" const_relation public
	    comment " Start of run we're building"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6911884 // currRunHead (<unidirectional association>)
	  b parent class_ref 3580940 // u2
      end

      attribute 12817676 "currRunLen"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Length of run in 16-bit words"
      end

      classrelation 6912012 // lastPC (<unidirectional association>)
	relation 6911884 --->
	  a role_name "lastPC" const_relation public
	    comment " Stage the PC for the threaded interpreter"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6912012 // lastPC (<unidirectional association>)
	  b parent class_ref 3580940 // u2
      end

      classrelation 6912140 // traceMethod (<unidirectional association>)
	relation 6912012 --->
	  a role_name "traceMethod" const_relation public
	    comment " Starting method of current trace"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6912140 // traceMethod (<unidirectional association>)
	  b parent class_ref 3582732 // Method
      end

      attribute 12817804 "threshFilter"
	public explicit_type "intptr_t"
	multiplicity "[JIT_TRACE_THRESH_FILTER_SIZE]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 6912268 // trace (<directional composition>)
	relation 6912140 *-->
	  a role_name "trace" multiplicity "[MAX_JIT_RUN_LEN]" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6912268 // trace (<directional composition>)
	  b parent class_ref 3593228 // JitTraceRun
      end

      classrelation 6912396 // status (<directional composition>)
	relation 6912268 *-->
	  a role_name "status" volatile public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6912396 // status (<directional composition>)
	  b parent class_ref 3592332 // ThreadStatus
      end

      attribute 12817932 "systemTid"
	public explicit_type "pid_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 6912524 // interpStackStart (<unidirectional association>)
	relation 6912396 --->
	  a role_name "interpStackStart" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6912524 // interpStackStart (<unidirectional association>)
	  b parent class_ref 3580812 // u1
      end

      classrelation 6912652 // threadObj (<unidirectional association>)
	relation 6912524 --->
	  a role_name "threadObj" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6912652 // threadObj (<unidirectional association>)
	  b parent class_ref 3581836 // Object
      end

      classrelation 6912780 // internalLocalRefTable (<directional composition>)
	relation 6912652 *-->
	  a role_name "internalLocalRefTable" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6912780 // internalLocalRefTable (<directional composition>)
	  b parent class_ref 3585420 // ReferenceTable
      end

      classrelation 6912908 // jniMonitorRefTable (<directional composition>)
	relation 6912780 *-->
	  a role_name "jniMonitorRefTable" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6912908 // jniMonitorRefTable (<directional composition>)
	  b parent class_ref 3585420 // ReferenceTable
      end

      classrelation 6913036 // classLoaderOverride (<unidirectional association>)
	relation 6912908 --->
	  a role_name "classLoaderOverride" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6913036 // classLoaderOverride (<unidirectional association>)
	  b parent class_ref 3581836 // Object
      end

      attribute 12818188 "waitMutex"
	public explicit_type "pthread_mutex_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 6913164 // waitMonitor (<unidirectional association>)
	relation 6913036 --->
	  a role_name "waitMonitor" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6913164 // waitMonitor (<unidirectional association>)
	  b parent class_ref 3585676 // Monitor
      end

      attribute 12818316 "interrupted"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 6913292 // waitNext (<unidirectional association>)
	relation 6913164 --->
	  a role_name "waitNext" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}struct ${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6913292 // waitNext (<unidirectional association>)
	  b parent class_ref 3582604 // Thread
      end

      attribute 12818444 "waitCond"
	public explicit_type "pthread_cond_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12818572 "throwingOOME"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 6913420 // prev (<unidirectional association>)
	relation 6913292 --->
	  a role_name "prev" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}struct ${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6913420 // prev (<unidirectional association>)
	  b parent class_ref 3582604 // Thread
      end

      classrelation 6913548 // next (<unidirectional association>)
	relation 6913420 --->
	  a role_name "next" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}struct ${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6913548 // next (<unidirectional association>)
	  b parent class_ref 3582604 // Thread
      end

      attribute 12818700 "threadExitCheckCount"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 6913676 // invokeReq (<directional composition>)
	relation 6913548 *-->
	  a role_name "invokeReq" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6913676 // invokeReq (<directional composition>)
	  b parent class_ref 3582860 // DebugInvokeReq
      end

      attribute 12818828 "cpuClockBaseSet"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 6913804 // cpuClockBase (<directional composition>)
	relation 6913676 *-->
	  a role_name "cpuClockBase" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6913804 // cpuClockBase (<directional composition>)
	  b parent class_ref 3581068 // u8
      end

      classrelation 6913932 // allocProf (<directional composition>)
	relation 6913804 *-->
	  a role_name "allocProf" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6913932 // allocProf (<directional composition>)
	  b parent class_ref 3586572 // AllocProfState
      end

      classrelation 6914060 // stackCrc (<directional composition>)
	relation 6913932 *-->
	  a role_name "stackCrc" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6914060 // stackCrc (<directional composition>)
	  b parent class_ref 3580300 // u4
      end

      classrelation 6914188 // currentPc2 (<unidirectional association>)
	relation 6914060 --->
	  a role_name "currentPc2" const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6914188 // currentPc2 (<unidirectional association>)
	  b parent class_ref 3580940 // u2
      end

      attribute 12818956 "callbackMutex"
	public explicit_type "pthread_mutex_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 6914316 // callback (<directional composition>)
	relation 6914188 *-->
	  a role_name "callback" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6914316 // callback (<directional composition>)
	  b parent class_ref 3593356 // SafePointCallback
      end

      attribute 12819084 "callbackArg"
	public explicit_type "void"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 6914444 // spillRegion (<directional composition>)
	relation 6914316 *-->
	  a role_name "spillRegion" multiplicity "[MAX_SPILL_JIT_IA]" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6914444 // spillRegion (<directional composition>)
	  b parent class_ref 3580300 // u4
      end

      classrelation 7001228 // jniEnv (<unidirectional association>)
	relation 7001100 --->
	  a role_name "jniEnv" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7001228 // jniEnv (<unidirectional association>)
	  b parent class_ref 3637644 // _JNIEnv
      end
    end

    class 3582860 "DebugInvokeReq"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " * Invoke-during-breakpoint support."
      attribute 12765580 "ready"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12765708 "invokeNeeded"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 6884364 // obj (<unidirectional association>)
	relation 6884236 --->
	  a role_name "obj" public
	    comment " not used for ClassType.InvokeMethod "
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6884364 // obj (<unidirectional association>)
	  b parent class_ref 3581836 // Object
      end

      classrelation 6884492 // thread (<unidirectional association>)
	relation 6884364 --->
	  a role_name "thread" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6884492 // thread (<unidirectional association>)
	  b parent class_ref 3581836 // Object
      end

      classrelation 6884620 // clazz (<unidirectional association>)
	relation 6884492 --->
	  a role_name "clazz" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6884620 // clazz (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6884748 // method (<unidirectional association>)
	relation 6884620 --->
	  a role_name "method" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6884748 // method (<unidirectional association>)
	  b parent class_ref 3582732 // Method
      end

      classrelation 6884876 // numArgs (<directional composition>)
	relation 6884748 *-->
	  a role_name "numArgs" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6884876 // numArgs (<directional composition>)
	  b parent class_ref 3580300 // u4
      end

      classrelation 6885004 // argArray (<unidirectional association>)
	relation 6884876 --->
	  a role_name "argArray" public
	    comment " will be NULL if numArgs==0 "
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6885004 // argArray (<unidirectional association>)
	  b parent class_ref 3581068 // u8
      end

      classrelation 6885132 // options (<directional composition>)
	relation 6885004 *-->
	  a role_name "options" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6885132 // options (<directional composition>)
	  b parent class_ref 3580300 // u4
      end

      classrelation 6885260 // err (<directional composition>)
	relation 6885132 *-->
	  a role_name "err" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6885260 // err (<directional composition>)
	  b parent class_ref 3583116 // JdwpError
      end

      classrelation 6885388 // resultTag (<directional composition>)
	relation 6885260 *-->
	  a role_name "resultTag" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6885388 // resultTag (<directional composition>)
	  b parent class_ref 3580812 // u1
      end

      classrelation 6885516 // resultValue (<directional composition>)
	relation 6885388 *-->
	  a role_name "resultValue" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6885516 // resultValue (<directional composition>)
	  b parent class_ref 3581708 // JValue
      end

      classrelation 6885644 // exceptObj (<directional composition>)
	relation 6885516 *-->
	  a role_name "exceptObj" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6885644 // exceptObj (<directional composition>)
	  b parent class_ref 3583244 // ObjectId
      end

      attribute 12765836 "lock"
	public explicit_type "pthread_mutex_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12765964 "cv"
	public explicit_type "pthread_cond_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3583372 "anonymous1"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum  {
${items}
};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " for \"eventFlags\" "
      attribute 12766092 "DBG_BREAKPOINT"
	public type class_ref 3583372 // anonymous1
	init_value " 0x01"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12766220 "DBG_SINGLE_STEP"
	public type class_ref 3583372 // anonymous1
	init_value " 0x02"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12766348 "DBG_METHOD_ENTRY"
	public type class_ref 3583372 // anonymous1
	init_value " 0x04"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12766476 "DBG_METHOD_EXIT"
	public type class_ref 3583372 // anonymous1
	init_value " 0x08"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3583500 "DvmDex"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " * Some additional VM data structures that are associated with the DEX file."
      attribute 12766604 "pDexFile"
	public explicit_type "DexFile"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12766732 "pHeader"
	const_attribute public explicit_type "DexHeader"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12766860 "pResStrings"
	public type class_ref 3583628 // StringObject
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}struct ${type} * * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12766988 "pResClasses"
	public type class_ref 3582988 // ClassObject
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}struct ${type} * * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12767116 "pResMethods"
	public type class_ref 3582732 // Method
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}struct ${type} * * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12767244 "pResFields"
	public type class_ref 3583756 // Field
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}struct ${type} * * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 6885772 // pInterfaceCache (<unidirectional association>)
	relation 6885644 --->
	  a role_name "pInterfaceCache" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}struct ${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6885772 // pInterfaceCache (<unidirectional association>)
	  b parent class_ref 3580428 // AtomicCache
      end

      attribute 12767372 "isMappedReadOnly"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12767500 "memMap"
	public explicit_type "MemMapping"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12767628 "modLock"
	public explicit_type "pthread_mutex_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3583884 "AssertionControl"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " * One of these for each -ea/-da/-esa/-dsa on the command line."
      attribute 12767756 "pkgOrClass"
	public explicit_type "char"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " package/class string, or NULL for esa/dsa "
      end

      attribute 12767884 "pkgOrClassLen"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " string length, for quick compare "
      end

      attribute 12768012 "enable"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " enable or disable "
      end

      attribute 12768140 "isPackage"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " string ended with \"...\"? "
      end
    end

    class 3584012 "RegisterMapMode"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}
};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " * Register map generation mode.  Only applicable when generateRegisterMaps
 * is enabled.  (The \"disabled\" state is not folded into this because
 * there are callers like dexopt that want to enable/disable without
 * specifying the configuration details.)
 *
 * \"TypePrecise\" is slower and requires additional storage for the register
 * maps, but allows type-precise GC.  \"LivePrecise\" is even slower and
 * requires additional heap during processing, but allows live-precise GC."
      attribute 12768268 "kRegisterMapModeUnknown"
	public type class_ref 3584012 // RegisterMapMode
	init_value " 0"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12768396 "kRegisterMapModeTypePrecise"
	public type class_ref 3584012 // RegisterMapMode
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12768524 "kRegisterMapModeLivePrecise"
	public type class_ref 3584012 // RegisterMapMode
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3584140 "ProfilerClockSource"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}
};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " * Profiler clock source."
      attribute 12768652 "kProfilerClockSourceThreadCpu"
	public type class_ref 3584140 // ProfilerClockSource
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12768780 "kProfilerClockSourceWall"
	public type class_ref 3584140 // ProfilerClockSource
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12768908 "kProfilerClockSourceDual"
	public type class_ref 3584140 // ProfilerClockSource
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3584268 "DvmGlobals"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " * All fields are initialized to zero.
 *
 * Storage allocated here must be freed by a subsystem shutdown function."
      attribute 12769036 "bootClassPathStr"
	public explicit_type "char"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12769164 "classPathStr"
	public explicit_type "char"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12769292 "heapStartingSize"
	public explicit_type "size_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12769420 "heapMaximumSize"
	public explicit_type "size_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12769548 "heapGrowthLimit"
	public explicit_type "size_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12769676 "heapTargetUtilization"
	public explicit_type "double"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12769804 "heapMinFree"
	public explicit_type "size_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12769932 "heapMaxFree"
	public explicit_type "size_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12770060 "stackSize"
	public explicit_type "size_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12770188 "mainThreadStackSize"
	public explicit_type "size_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12770316 "verboseGc"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12770444 "verboseJni"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12770572 "verboseClass"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12770700 "verboseShutdown"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12770828 "jdwpAllowed"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " debugging allowed for this process?"
      end

      attribute 12770956 "jdwpConfigured"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " has debugging info been provided?"
      end

      classrelation 6885900 // jdwpTransport (<directional composition>)
	relation 6885772 *-->
	  a role_name "jdwpTransport" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6885900 // jdwpTransport (<directional composition>)
	  b parent class_ref 3584396 // JdwpTransportType
      end

      attribute 12771084 "jdwpServer"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12771212 "jdwpHost"
	public explicit_type "char"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12771340 "jdwpPort"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12771468 "jdwpSuspend"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 6886028 // profilerClockSource (<directional composition>)
	relation 6885900 *-->
	  a role_name "profilerClockSource" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6886028 // profilerClockSource (<directional composition>)
	  b parent class_ref 3584140 // ProfilerClockSource
      end

      classrelation 6886156 // lockProfThreshold (<directional composition>)
	relation 6886028 *-->
	  a role_name "lockProfThreshold" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6886156 // lockProfThreshold (<directional composition>)
	  b parent class_ref 3580300 // u4
      end

      attribute 12771596 "vfprintfHook"
	public explicit_type "int (*)(FILE*, const char*, va_list)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
    int         (*${name})(FILE*, const char*, va_list)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12771724 "exitHook"
	public explicit_type "void (*)(int)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}    void        (*${name})(int)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12771852 "abortHook"
	public explicit_type "void (*)(void)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}    void        (*${name})(void)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12771980 "isSensitiveThreadHook"
	public explicit_type "bool (*)(void)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}    bool        (*${name})(void)${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12772108 "jniGrefLimit"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " 0 means no limit"
      end

      attribute 12772236 "jniTrace"
	public explicit_type "char"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12772364 "reduceSignals"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12772492 "noQuitHandler"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12772620 "verifyDexChecksum"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12772748 "stackTraceFile"
	public explicit_type "char"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " for SIGQUIT-inspired output"
      end

      attribute 12772876 "logStdio"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 6886284 // dexOptMode (<directional composition>)
	relation 6886156 *-->
	  a role_name "dexOptMode" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6886284 // dexOptMode (<directional composition>)
	  b parent class_ref 3584524 // DexOptimizerMode
      end

      classrelation 6886412 // classVerifyMode (<directional composition>)
	relation 6886284 *-->
	  a role_name "classVerifyMode" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6886412 // classVerifyMode (<directional composition>)
	  b parent class_ref 3584652 // DexClassVerifyMode
      end

      attribute 12773004 "generateRegisterMaps"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 6886540 // registerMapMode (<directional composition>)
	relation 6886412 *-->
	  a role_name "registerMapMode" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6886540 // registerMapMode (<directional composition>)
	  b parent class_ref 3584012 // RegisterMapMode
      end

      attribute 12773132 "monitorVerification"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12773260 "dexOptForSmp"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12773388 "preciseGc"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12773516 "preVerify"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12773644 "postVerify"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12773772 "concurrentMarkSweep"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12773900 "verifyCardTable"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12774028 "disableExplicitGc"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12774156 "assertionCtrlCount"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 6886668 // assertionCtrl (<unidirectional association>)
	relation 6886540 --->
	  a role_name "assertionCtrl" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6886668 // assertionCtrl (<unidirectional association>)
	  b parent class_ref 3583884 // AssertionControl
      end

      classrelation 6886796 // executionMode (<directional composition>)
	relation 6886668 *-->
	  a role_name "executionMode" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6886796 // executionMode (<directional composition>)
	  b parent class_ref 3584780 // ExecutionMode
      end

      attribute 12774284 "commonInit"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " whether common stubs are generated "
      end

      attribute 12774412 "constInit"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " whether global constants are initialized "
      end

      attribute 12774540 "initializing"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12774668 "optimizing"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12774796 "properties"
	public explicit_type "std::string"
	stereotype "std::vector"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 6886924 // bootClassPath (<unidirectional association>)
	relation 6886796 --->
	  a role_name "bootClassPath" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6886924 // bootClassPath (<unidirectional association>)
	  b parent class_ref 3584908 // ClassPathEntry
      end

      classrelation 6887052 // bootClassPathOptExtra (<unidirectional association>)
	relation 6886924 --->
	  a role_name "bootClassPathOptExtra" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6887052 // bootClassPathOptExtra (<unidirectional association>)
	  b parent class_ref 3583500 // DvmDex
      end

      attribute 12774924 "optimizingBootstrapClass"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 6887180 // loadedClasses (<unidirectional association>)
	relation 6887052 --->
	  a role_name "loadedClasses" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6887180 // loadedClasses (<unidirectional association>)
	  b parent class_ref 3585036 // HashTable
      end

      attribute 12775052 "classSerialNumber"
	volatile public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 6887308 // initiatingLoaderList (<unidirectional association>)
	relation 6887180 --->
	  a role_name "initiatingLoaderList" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6887308 // initiatingLoaderList (<unidirectional association>)
	  b parent class_ref 3585164 // InitiatingLoaderList
      end

      attribute 12775180 "internLock"
	public explicit_type "pthread_mutex_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 6887436 // internedStrings (<unidirectional association>)
	relation 6887308 --->
	  a role_name "internedStrings" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6887436 // internedStrings (<unidirectional association>)
	  b parent class_ref 3585036 // HashTable
      end

      classrelation 6887564 // literalStrings (<unidirectional association>)
	relation 6887436 --->
	  a role_name "literalStrings" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6887564 // literalStrings (<unidirectional association>)
	  b parent class_ref 3585036 // HashTable
      end

      classrelation 6887692 // classJavaLangClass (<unidirectional association>)
	relation 6887564 --->
	  a role_name "classJavaLangClass" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6887692 // classJavaLangClass (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6887820 // typeVoid (<unidirectional association>)
	relation 6887692 --->
	  a role_name "typeVoid" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6887820 // typeVoid (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6887948 // typeBoolean (<unidirectional association>)
	relation 6887820 --->
	  a role_name "typeBoolean" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6887948 // typeBoolean (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6888076 // typeByte (<unidirectional association>)
	relation 6887948 --->
	  a role_name "typeByte" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6888076 // typeByte (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6888204 // typeShort (<unidirectional association>)
	relation 6888076 --->
	  a role_name "typeShort" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6888204 // typeShort (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6888332 // typeChar (<unidirectional association>)
	relation 6888204 --->
	  a role_name "typeChar" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6888332 // typeChar (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6888460 // typeInt (<unidirectional association>)
	relation 6888332 --->
	  a role_name "typeInt" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6888460 // typeInt (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6888588 // typeLong (<unidirectional association>)
	relation 6888460 --->
	  a role_name "typeLong" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6888588 // typeLong (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6888716 // typeFloat (<unidirectional association>)
	relation 6888588 --->
	  a role_name "typeFloat" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6888716 // typeFloat (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6888844 // typeDouble (<unidirectional association>)
	relation 6888716 --->
	  a role_name "typeDouble" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6888844 // typeDouble (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6888972 // classArrayBoolean (<unidirectional association>)
	relation 6888844 --->
	  a role_name "classArrayBoolean" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6888972 // classArrayBoolean (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6889100 // classArrayByte (<unidirectional association>)
	relation 6888972 --->
	  a role_name "classArrayByte" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6889100 // classArrayByte (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6889228 // classArrayShort (<unidirectional association>)
	relation 6889100 --->
	  a role_name "classArrayShort" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6889228 // classArrayShort (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6889356 // classArrayChar (<unidirectional association>)
	relation 6889228 --->
	  a role_name "classArrayChar" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6889356 // classArrayChar (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6889484 // classArrayInt (<unidirectional association>)
	relation 6889356 --->
	  a role_name "classArrayInt" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6889484 // classArrayInt (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6889612 // classArrayLong (<unidirectional association>)
	relation 6889484 --->
	  a role_name "classArrayLong" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6889612 // classArrayLong (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6889740 // classArrayFloat (<unidirectional association>)
	relation 6889612 --->
	  a role_name "classArrayFloat" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6889740 // classArrayFloat (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6889868 // classArrayDouble (<unidirectional association>)
	relation 6889740 --->
	  a role_name "classArrayDouble" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6889868 // classArrayDouble (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6889996 // classJavaLangClassArray (<unidirectional association>)
	relation 6889868 --->
	  a role_name "classJavaLangClassArray" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6889996 // classJavaLangClassArray (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6890124 // classJavaLangClassLoader (<unidirectional association>)
	relation 6889996 --->
	  a role_name "classJavaLangClassLoader" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6890124 // classJavaLangClassLoader (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6890252 // classJavaLangObject (<unidirectional association>)
	relation 6890124 --->
	  a role_name "classJavaLangObject" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6890252 // classJavaLangObject (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6890380 // classJavaLangObjectArray (<unidirectional association>)
	relation 6890252 --->
	  a role_name "classJavaLangObjectArray" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6890380 // classJavaLangObjectArray (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6890508 // classJavaLangString (<unidirectional association>)
	relation 6890380 --->
	  a role_name "classJavaLangString" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6890508 // classJavaLangString (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6890636 // classJavaLangThread (<unidirectional association>)
	relation 6890508 --->
	  a role_name "classJavaLangThread" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6890636 // classJavaLangThread (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6890764 // classJavaLangVMThread (<unidirectional association>)
	relation 6890636 --->
	  a role_name "classJavaLangVMThread" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6890764 // classJavaLangVMThread (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6890892 // classJavaLangThreadGroup (<unidirectional association>)
	relation 6890764 --->
	  a role_name "classJavaLangThreadGroup" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6890892 // classJavaLangThreadGroup (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6891020 // classJavaLangStackTraceElement (<unidirectional association>)
	relation 6890892 --->
	  a role_name "classJavaLangStackTraceElement" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6891020 // classJavaLangStackTraceElement (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6891148 // classJavaLangStackTraceElementArray (<unidirectional association>)
	relation 6891020 --->
	  a role_name "classJavaLangStackTraceElementArray" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6891148 // classJavaLangStackTraceElementArray (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6891276 // classJavaLangAnnotationAnnotationArray (<unidirectional association>)
	relation 6891148 --->
	  a role_name "classJavaLangAnnotationAnnotationArray" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6891276 // classJavaLangAnnotationAnnotationArray (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6891404 // classJavaLangAnnotationAnnotationArrayArray (<unidirectional association>)
	relation 6891276 --->
	  a role_name "classJavaLangAnnotationAnnotationArrayArray" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6891404 // classJavaLangAnnotationAnnotationArrayArray (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6891532 // classJavaLangReflectAccessibleObject (<unidirectional association>)
	relation 6891404 --->
	  a role_name "classJavaLangReflectAccessibleObject" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6891532 // classJavaLangReflectAccessibleObject (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6891660 // classJavaLangReflectConstructor (<unidirectional association>)
	relation 6891532 --->
	  a role_name "classJavaLangReflectConstructor" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6891660 // classJavaLangReflectConstructor (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6891788 // classJavaLangReflectConstructorArray (<unidirectional association>)
	relation 6891660 --->
	  a role_name "classJavaLangReflectConstructorArray" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6891788 // classJavaLangReflectConstructorArray (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6891916 // classJavaLangReflectField (<unidirectional association>)
	relation 6891788 --->
	  a role_name "classJavaLangReflectField" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6891916 // classJavaLangReflectField (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6892044 // classJavaLangReflectFieldArray (<unidirectional association>)
	relation 6891916 --->
	  a role_name "classJavaLangReflectFieldArray" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6892044 // classJavaLangReflectFieldArray (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6892172 // classJavaLangReflectMethod (<unidirectional association>)
	relation 6892044 --->
	  a role_name "classJavaLangReflectMethod" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6892172 // classJavaLangReflectMethod (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6892300 // classJavaLangReflectMethodArray (<unidirectional association>)
	relation 6892172 --->
	  a role_name "classJavaLangReflectMethodArray" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6892300 // classJavaLangReflectMethodArray (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6892428 // classJavaLangReflectProxy (<unidirectional association>)
	relation 6892300 --->
	  a role_name "classJavaLangReflectProxy" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6892428 // classJavaLangReflectProxy (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6892556 // classJavaNioReadWriteDirectByteBuffer (<unidirectional association>)
	relation 6892428 --->
	  a role_name "classJavaNioReadWriteDirectByteBuffer" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6892556 // classJavaNioReadWriteDirectByteBuffer (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6892684 // classOrgApacheHarmonyLangAnnotationAnnotationFactory (<unidirectional association>)
	relation 6892556 --->
	  a role_name "classOrgApacheHarmonyLangAnnotationAnnotationFactory" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6892684 // classOrgApacheHarmonyLangAnnotationAnnotationFactory (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6892812 // classOrgApacheHarmonyLangAnnotationAnnotationMember (<unidirectional association>)
	relation 6892684 --->
	  a role_name "classOrgApacheHarmonyLangAnnotationAnnotationMember" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6892812 // classOrgApacheHarmonyLangAnnotationAnnotationMember (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6892940 // classOrgApacheHarmonyLangAnnotationAnnotationMemberArray (<unidirectional association>)
	relation 6892812 --->
	  a role_name "classOrgApacheHarmonyLangAnnotationAnnotationMemberArray" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6892940 // classOrgApacheHarmonyLangAnnotationAnnotationMemberArray (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6893068 // classOrgApacheHarmonyDalvikDdmcChunk (<unidirectional association>)
	relation 6892940 --->
	  a role_name "classOrgApacheHarmonyDalvikDdmcChunk" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6893068 // classOrgApacheHarmonyDalvikDdmcChunk (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6893196 // classOrgApacheHarmonyDalvikDdmcDdmServer (<unidirectional association>)
	relation 6893068 --->
	  a role_name "classOrgApacheHarmonyDalvikDdmcDdmServer" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6893196 // classOrgApacheHarmonyDalvikDdmcDdmServer (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6893324 // classJavaLangRefFinalizerReference (<unidirectional association>)
	relation 6893196 --->
	  a role_name "classJavaLangRefFinalizerReference" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6893324 // classJavaLangRefFinalizerReference (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6893452 // exAbstractMethodError (<unidirectional association>)
	relation 6893324 --->
	  a role_name "exAbstractMethodError" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6893452 // exAbstractMethodError (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6893580 // exArithmeticException (<unidirectional association>)
	relation 6893452 --->
	  a role_name "exArithmeticException" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6893580 // exArithmeticException (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6893708 // exArrayIndexOutOfBoundsException (<unidirectional association>)
	relation 6893580 --->
	  a role_name "exArrayIndexOutOfBoundsException" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6893708 // exArrayIndexOutOfBoundsException (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6893836 // exArrayStoreException (<unidirectional association>)
	relation 6893708 --->
	  a role_name "exArrayStoreException" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6893836 // exArrayStoreException (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6893964 // exClassCastException (<unidirectional association>)
	relation 6893836 --->
	  a role_name "exClassCastException" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6893964 // exClassCastException (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6894092 // exClassCircularityError (<unidirectional association>)
	relation 6893964 --->
	  a role_name "exClassCircularityError" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6894092 // exClassCircularityError (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6894220 // exClassFormatError (<unidirectional association>)
	relation 6894092 --->
	  a role_name "exClassFormatError" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6894220 // exClassFormatError (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6894348 // exClassNotFoundException (<unidirectional association>)
	relation 6894220 --->
	  a role_name "exClassNotFoundException" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6894348 // exClassNotFoundException (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6894476 // exError (<unidirectional association>)
	relation 6894348 --->
	  a role_name "exError" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6894476 // exError (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6894604 // exExceptionInInitializerError (<unidirectional association>)
	relation 6894476 --->
	  a role_name "exExceptionInInitializerError" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6894604 // exExceptionInInitializerError (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6894732 // exFileNotFoundException (<unidirectional association>)
	relation 6894604 --->
	  a role_name "exFileNotFoundException" public
	    comment " in java.io "
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6894732 // exFileNotFoundException (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6894860 // exIOException (<unidirectional association>)
	relation 6894732 --->
	  a role_name "exIOException" public
	    comment " in java.io "
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6894860 // exIOException (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6894988 // exIllegalAccessError (<unidirectional association>)
	relation 6894860 --->
	  a role_name "exIllegalAccessError" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6894988 // exIllegalAccessError (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6895116 // exIllegalAccessException (<unidirectional association>)
	relation 6894988 --->
	  a role_name "exIllegalAccessException" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6895116 // exIllegalAccessException (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6895244 // exIllegalArgumentException (<unidirectional association>)
	relation 6895116 --->
	  a role_name "exIllegalArgumentException" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6895244 // exIllegalArgumentException (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6895372 // exIllegalMonitorStateException (<unidirectional association>)
	relation 6895244 --->
	  a role_name "exIllegalMonitorStateException" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6895372 // exIllegalMonitorStateException (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6895500 // exIllegalStateException (<unidirectional association>)
	relation 6895372 --->
	  a role_name "exIllegalStateException" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6895500 // exIllegalStateException (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6895628 // exIllegalThreadStateException (<unidirectional association>)
	relation 6895500 --->
	  a role_name "exIllegalThreadStateException" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6895628 // exIllegalThreadStateException (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6895756 // exIncompatibleClassChangeError (<unidirectional association>)
	relation 6895628 --->
	  a role_name "exIncompatibleClassChangeError" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6895756 // exIncompatibleClassChangeError (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6895884 // exInstantiationError (<unidirectional association>)
	relation 6895756 --->
	  a role_name "exInstantiationError" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6895884 // exInstantiationError (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6896012 // exInstantiationException (<unidirectional association>)
	relation 6895884 --->
	  a role_name "exInstantiationException" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6896012 // exInstantiationException (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6896140 // exInternalError (<unidirectional association>)
	relation 6896012 --->
	  a role_name "exInternalError" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6896140 // exInternalError (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6896268 // exInterruptedException (<unidirectional association>)
	relation 6896140 --->
	  a role_name "exInterruptedException" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6896268 // exInterruptedException (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6896396 // exLinkageError (<unidirectional association>)
	relation 6896268 --->
	  a role_name "exLinkageError" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6896396 // exLinkageError (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6896524 // exNegativeArraySizeException (<unidirectional association>)
	relation 6896396 --->
	  a role_name "exNegativeArraySizeException" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6896524 // exNegativeArraySizeException (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6896652 // exNoClassDefFoundError (<unidirectional association>)
	relation 6896524 --->
	  a role_name "exNoClassDefFoundError" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6896652 // exNoClassDefFoundError (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6896780 // exNoSuchFieldError (<unidirectional association>)
	relation 6896652 --->
	  a role_name "exNoSuchFieldError" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6896780 // exNoSuchFieldError (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6896908 // exNoSuchFieldException (<unidirectional association>)
	relation 6896780 --->
	  a role_name "exNoSuchFieldException" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6896908 // exNoSuchFieldException (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6897036 // exNoSuchMethodError (<unidirectional association>)
	relation 6896908 --->
	  a role_name "exNoSuchMethodError" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6897036 // exNoSuchMethodError (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6897164 // exNullPointerException (<unidirectional association>)
	relation 6897036 --->
	  a role_name "exNullPointerException" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6897164 // exNullPointerException (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6897292 // exOutOfMemoryError (<unidirectional association>)
	relation 6897164 --->
	  a role_name "exOutOfMemoryError" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6897292 // exOutOfMemoryError (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6897420 // exRuntimeException (<unidirectional association>)
	relation 6897292 --->
	  a role_name "exRuntimeException" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6897420 // exRuntimeException (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6897548 // exStackOverflowError (<unidirectional association>)
	relation 6897420 --->
	  a role_name "exStackOverflowError" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6897548 // exStackOverflowError (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6897676 // exStaleDexCacheError (<unidirectional association>)
	relation 6897548 --->
	  a role_name "exStaleDexCacheError" public
	    comment " in dalvik.system "
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6897676 // exStaleDexCacheError (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6897804 // exStringIndexOutOfBoundsException (<unidirectional association>)
	relation 6897676 --->
	  a role_name "exStringIndexOutOfBoundsException" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6897804 // exStringIndexOutOfBoundsException (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6897932 // exThrowable (<unidirectional association>)
	relation 6897804 --->
	  a role_name "exThrowable" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6897932 // exThrowable (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6898060 // exTypeNotPresentException (<unidirectional association>)
	relation 6897932 --->
	  a role_name "exTypeNotPresentException" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6898060 // exTypeNotPresentException (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6898188 // exUnsatisfiedLinkError (<unidirectional association>)
	relation 6898060 --->
	  a role_name "exUnsatisfiedLinkError" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6898188 // exUnsatisfiedLinkError (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6898316 // exUnsupportedOperationException (<unidirectional association>)
	relation 6898188 --->
	  a role_name "exUnsupportedOperationException" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6898316 // exUnsupportedOperationException (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6898444 // exVerifyError (<unidirectional association>)
	relation 6898316 --->
	  a role_name "exVerifyError" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6898444 // exVerifyError (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6898572 // exVirtualMachineError (<unidirectional association>)
	relation 6898444 --->
	  a role_name "exVirtualMachineError" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6898572 // exVirtualMachineError (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      attribute 12775308 "voffJavaLangObject_equals"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12775436 "voffJavaLangObject_hashCode"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12775564 "voffJavaLangObject_toString"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12775692 "offJavaLangString_value"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12775820 "offJavaLangString_count"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12775948 "offJavaLangString_offset"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12776076 "offJavaLangString_hashCode"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12776204 "offJavaLangThread_vmThread"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12776332 "offJavaLangThread_group"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12776460 "offJavaLangThread_daemon"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12776588 "offJavaLangThread_name"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12776716 "offJavaLangThread_priority"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12776844 "offJavaLangThread_uncaughtHandler"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12776972 "offJavaLangThread_contextClassLoader"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12777100 "voffJavaLangThread_run"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12777228 "offJavaLangThreadGroup_name"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12777356 "offJavaLangThreadGroup_parent"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12777484 "offJavaLangVMThread_thread"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12777612 "offJavaLangVMThread_vmData"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12777740 "voffJavaLangThreadGroup_removeThread"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12777868 "offJavaLangThrowable_stackState"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12777996 "offJavaLangThrowable_cause"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12778124 "voffJavaLangClassLoader_loadClass"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 6898700 // methJavaLangClassLoader_getSystemClassLoader (<unidirectional association>)
	relation 6898572 --->
	  a role_name "methJavaLangClassLoader_getSystemClassLoader" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6898700 // methJavaLangClassLoader_getSystemClassLoader (<unidirectional association>)
	  b parent class_ref 3582732 // Method
      end

      attribute 12778252 "offJavaLangReflectConstructor_slot"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12778380 "offJavaLangReflectConstructor_declClass"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12778508 "offJavaLangReflectField_slot"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12778636 "offJavaLangReflectField_declClass"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12778764 "offJavaLangReflectMethod_slot"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12778892 "offJavaLangReflectMethod_declClass"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12779020 "offJavaLangRefReference_referent"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12779148 "offJavaLangRefReference_queue"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12779276 "offJavaLangRefReference_queueNext"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12779404 "offJavaLangRefReference_pendingNext"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12779532 "offJavaLangRefFinalizerReference_zombie"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 6898828 // methJavaLangRefReferenceQueueAdd (<unidirectional association>)
	relation 6898700 --->
	  a role_name "methJavaLangRefReferenceQueueAdd" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6898828 // methJavaLangRefReferenceQueueAdd (<unidirectional association>)
	  b parent class_ref 3582732 // Method
      end

      classrelation 6898956 // methJavaLangRefFinalizerReferenceAdd (<unidirectional association>)
	relation 6898828 --->
	  a role_name "methJavaLangRefFinalizerReferenceAdd" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6898956 // methJavaLangRefFinalizerReferenceAdd (<unidirectional association>)
	  b parent class_ref 3582732 // Method
      end

      classrelation 6899084 // methJavaLangStackTraceElement_init (<unidirectional association>)
	relation 6898956 --->
	  a role_name "methJavaLangStackTraceElement_init" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6899084 // methJavaLangStackTraceElement_init (<unidirectional association>)
	  b parent class_ref 3582732 // Method
      end

      classrelation 6899212 // methJavaLangReflectConstructor_init (<unidirectional association>)
	relation 6899084 --->
	  a role_name "methJavaLangReflectConstructor_init" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6899212 // methJavaLangReflectConstructor_init (<unidirectional association>)
	  b parent class_ref 3582732 // Method
      end

      classrelation 6899340 // methJavaLangReflectField_init (<unidirectional association>)
	relation 6899212 --->
	  a role_name "methJavaLangReflectField_init" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6899340 // methJavaLangReflectField_init (<unidirectional association>)
	  b parent class_ref 3582732 // Method
      end

      classrelation 6899468 // methJavaLangReflectMethod_init (<unidirectional association>)
	relation 6899340 --->
	  a role_name "methJavaLangReflectMethod_init" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6899468 // methJavaLangReflectMethod_init (<unidirectional association>)
	  b parent class_ref 3582732 // Method
      end

      classrelation 6899596 // methOrgApacheHarmonyLangAnnotationAnnotationMember_init (<unidirectional association>)
	relation 6899468 --->
	  a role_name "methOrgApacheHarmonyLangAnnotationAnnotationMember_init" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6899596 // methOrgApacheHarmonyLangAnnotationAnnotationMember_init (<unidirectional association>)
	  b parent class_ref 3582732 // Method
      end

      classrelation 6899724 // methOrgApacheHarmonyLangAnnotationAnnotationFactory_createAnnotation (<unidirectional association>)
	relation 6899596 --->
	  a role_name "methOrgApacheHarmonyLangAnnotationAnnotationFactory_createAnnotation" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6899724 // methOrgApacheHarmonyLangAnnotationAnnotationFactory_createAnnotation (<unidirectional association>)
	  b parent class_ref 3582732 // Method
      end

      classrelation 6899852 // methJavaLangReflectProxy_constructorPrototype (<unidirectional association>)
	relation 6899724 --->
	  a role_name "methJavaLangReflectProxy_constructorPrototype" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6899852 // methJavaLangReflectProxy_constructorPrototype (<unidirectional association>)
	  b parent class_ref 3582732 // Method
      end

      attribute 12779660 "offJavaLangReflectProxy_h"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12779788 "offJavaIoFileDescriptor_descriptor"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 6899980 // methDalvikSystemNativeStart_main (<unidirectional association>)
	relation 6899852 --->
	  a role_name "methDalvikSystemNativeStart_main" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6899980 // methDalvikSystemNativeStart_main (<unidirectional association>)
	  b parent class_ref 3582732 // Method
      end

      classrelation 6900108 // methDalvikSystemNativeStart_run (<unidirectional association>)
	relation 6899980 --->
	  a role_name "methDalvikSystemNativeStart_run" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6900108 // methDalvikSystemNativeStart_run (<unidirectional association>)
	  b parent class_ref 3582732 // Method
      end

      classrelation 6900236 // methJavaNioReadWriteDirectByteBuffer_init (<unidirectional association>)
	relation 6900108 --->
	  a role_name "methJavaNioReadWriteDirectByteBuffer_init" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6900236 // methJavaNioReadWriteDirectByteBuffer_init (<unidirectional association>)
	  b parent class_ref 3582732 // Method
      end

      attribute 12779916 "offJavaNioBuffer_capacity"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12780044 "offJavaNioBuffer_effectiveDirectAddress"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 6900364 // methDalvikDdmcServer_dispatch (<unidirectional association>)
	relation 6900236 --->
	  a role_name "methDalvikDdmcServer_dispatch" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6900364 // methDalvikDdmcServer_dispatch (<unidirectional association>)
	  b parent class_ref 3582732 // Method
      end

      classrelation 6900492 // methDalvikDdmcServer_broadcast (<unidirectional association>)
	relation 6900364 --->
	  a role_name "methDalvikDdmcServer_broadcast" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6900492 // methDalvikDdmcServer_broadcast (<unidirectional association>)
	  b parent class_ref 3582732 // Method
      end

      attribute 12780172 "offDalvikDdmcChunk_type"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12780300 "offDalvikDdmcChunk_data"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12780428 "offDalvikDdmcChunk_offset"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12780556 "offDalvikDdmcChunk_length"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 6900620 // threadList (<unidirectional association>)
	relation 6900492 --->
	  a role_name "threadList" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6900620 // threadList (<unidirectional association>)
	  b parent class_ref 3582604 // Thread
      end

      attribute 12780684 "threadListLock"
	public explicit_type "pthread_mutex_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12780812 "threadStartCond"
	public explicit_type "pthread_cond_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12780940 "_threadSuspendLock"
	public explicit_type "pthread_mutex_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12781068 "threadSuspendCountLock"
	public explicit_type "pthread_mutex_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12781196 "threadSuspendCountCond"
	public explicit_type "pthread_cond_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12781324 "sumThreadSuspendCount"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 6900748 // threadIdMap (<unidirectional association>)
	relation 6900620 --->
	  a role_name "threadIdMap" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6900748 // threadIdMap (<unidirectional association>)
	  b parent class_ref 3580556 // BitVector
      end

      attribute 12781452 "nonDaemonThreadCount"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " must hold threadListLock to access "
      end

      attribute 12781580 "vmExitCond"
	public explicit_type "pthread_cond_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 6900876 // userDexFiles (<unidirectional association>)
	relation 6900748 --->
	  a role_name "userDexFiles" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6900876 // userDexFiles (<unidirectional association>)
	  b parent class_ref 3585036 // HashTable
      end

      classrelation 6901004 // jniGlobalRefTable (<directional composition>)
	relation 6900876 *-->
	  a role_name "jniGlobalRefTable" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6901004 // jniGlobalRefTable (<directional composition>)
	  b parent class_ref 3585292 // IndirectRefTable
      end

      classrelation 6901132 // jniWeakGlobalRefTable (<directional composition>)
	relation 6901004 *-->
	  a role_name "jniWeakGlobalRefTable" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6901132 // jniWeakGlobalRefTable (<directional composition>)
	  b parent class_ref 3585292 // IndirectRefTable
      end

      attribute 12781708 "jniGlobalRefLock"
	public explicit_type "pthread_mutex_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12781836 "jniWeakGlobalRefLock"
	public explicit_type "pthread_mutex_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12781964 "jniGlobalRefHiMark"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12782092 "jniGlobalRefLoMark"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 6901260 // jniPinRefTable (<directional composition>)
	relation 6901132 *-->
	  a role_name "jniPinRefTable" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6901260 // jniPinRefTable (<directional composition>)
	  b parent class_ref 3585420 // ReferenceTable
      end

      attribute 12782220 "jniPinRefLock"
	public explicit_type "pthread_mutex_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 6901388 // nativeLibs (<unidirectional association>)
	relation 6901260 --->
	  a role_name "nativeLibs" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6901388 // nativeLibs (<unidirectional association>)
	  b parent class_ref 3585036 // HashTable
      end

      attribute 12782348 "gcHeapLock"
	public explicit_type "pthread_mutex_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12782476 "gcHeapCond"
	public explicit_type "pthread_cond_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 6901516 // gcHeap (<unidirectional association>)
	relation 6901388 --->
	  a role_name "gcHeap" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6901516 // gcHeap (<unidirectional association>)
	  b parent class_ref 3585548 // GcHeap
      end

      classrelation 6901644 // biasedCardTableBase (<unidirectional association>)
	relation 6901516 --->
	  a role_name "biasedCardTableBase" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6901644 // biasedCardTableBase (<unidirectional association>)
	  b parent class_ref 3580812 // u1
      end

      classrelation 6901772 // outOfMemoryObj (<unidirectional association>)
	relation 6901644 --->
	  a role_name "outOfMemoryObj" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6901772 // outOfMemoryObj (<unidirectional association>)
	  b parent class_ref 3581836 // Object
      end

      classrelation 6901900 // internalErrorObj (<unidirectional association>)
	relation 6901772 --->
	  a role_name "internalErrorObj" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6901900 // internalErrorObj (<unidirectional association>)
	  b parent class_ref 3581836 // Object
      end

      classrelation 6902028 // noClassDefFoundErrorObj (<unidirectional association>)
	relation 6901900 --->
	  a role_name "noClassDefFoundErrorObj" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6902028 // noClassDefFoundErrorObj (<unidirectional association>)
	  b parent class_ref 3581836 // Object
      end

      classrelation 6902156 // monitorList (<unidirectional association>)
	relation 6902028 --->
	  a role_name "monitorList" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6902156 // monitorList (<unidirectional association>)
	  b parent class_ref 3585676 // Monitor
      end

      classrelation 6902284 // threadSleepMon (<unidirectional association>)
	relation 6902156 --->
	  a role_name "threadSleepMon" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6902284 // threadSleepMon (<unidirectional association>)
	  b parent class_ref 3585676 // Monitor
      end

      attribute 12782604 "newZygoteHeapAllocated"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12782732 "pthreadKeySelf"
	public explicit_type "pthread_key_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Thread*, for dvmThreadSelf "
      end

      classrelation 6902412 // instanceofCache (<unidirectional association>)
	relation 6902284 --->
	  a role_name "instanceofCache" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6902412 // instanceofCache (<unidirectional association>)
	  b parent class_ref 3580428 // AtomicCache
      end

      classrelation 6902540 // inlineSubs (<unidirectional association>)
	relation 6902412 --->
	  a role_name "inlineSubs" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6902540 // inlineSubs (<unidirectional association>)
	  b parent class_ref 3585804 // InlineSub
      end

      classrelation 6902668 // pBootLoaderAlloc (<unidirectional association>)
	relation 6902540 --->
	  a role_name "pBootLoaderAlloc" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6902668 // pBootLoaderAlloc (<unidirectional association>)
	  b parent class_ref 3585932 // LinearAllocHdr
      end

      attribute 12782860 "numLoadedClasses"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12782988 "numDeclaredMethods"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12783116 "numDeclaredInstFields"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12783244 "numDeclaredStaticFields"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12783372 "nativeDebuggerActive"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12783500 "debuggerConnected"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " debugger or DDMS is connected "
      end

      attribute 12783628 "debuggerActive"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " debugger is making requests "
      end

      classrelation 6902796 // jdwpState (<unidirectional association>)
	relation 6902668 --->
	  a role_name "jdwpState" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6902796 // jdwpState (<unidirectional association>)
	  b parent class_ref 3586060 // JdwpState
      end

      classrelation 6902924 // dbgRegistry (<unidirectional association>)
	relation 6902796 --->
	  a role_name "dbgRegistry" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6902924 // dbgRegistry (<unidirectional association>)
	  b parent class_ref 3585036 // HashTable
      end

      classrelation 6903052 // breakpointSet (<unidirectional association>)
	relation 6902924 --->
	  a role_name "breakpointSet" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6903052 // breakpointSet (<unidirectional association>)
	  b parent class_ref 3586188 // BreakpointSet
      end

      classrelation 6903180 // stepControl (<directional composition>)
	relation 6903052 *-->
	  a role_name "stepControl" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6903180 // stepControl (<directional composition>)
	  b parent class_ref 3582220 // StepControl
      end

      attribute 12783756 "ddmThreadNotification"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12783884 "zygote"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12784012 "allocTrackerLock"
	public explicit_type "pthread_mutex_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 6903308 // allocRecords (<unidirectional association>)
	relation 6903180 --->
	  a role_name "allocRecords" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6903308 // allocRecords (<unidirectional association>)
	  b parent class_ref 3586316 // AllocRecord
      end

      attribute 12784140 "allocRecordHead"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " most-recently-added entry "
      end

      attribute 12784268 "allocRecordCount"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " #of valid entries "
      end

      attribute 12784396 "activeProfilers"
	volatile public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 6903436 // methodTrace (<directional composition>)
	relation 6903308 *-->
	  a role_name "methodTrace" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6903436 // methodTrace (<directional composition>)
	  b parent class_ref 3586444 // MethodTraceState
      end

      classrelation 6903564 // methodTraceGcMethod (<unidirectional association>)
	relation 6903436 --->
	  a role_name "methodTraceGcMethod" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6903564 // methodTraceGcMethod (<unidirectional association>)
	  b parent class_ref 3582732 // Method
      end

      classrelation 6903692 // methodTraceClassPrepMethod (<unidirectional association>)
	relation 6903564 --->
	  a role_name "methodTraceClassPrepMethod" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6903692 // methodTraceClassPrepMethod (<unidirectional association>)
	  b parent class_ref 3582732 // Method
      end

      attribute 12784524 "emulatorTracePage"
	public explicit_type "void"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12784652 "emulatorTraceEnableCount"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 6903820 // allocProf (<directional composition>)
	relation 6903692 *-->
	  a role_name "allocProf" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6903820 // allocProf (<directional composition>)
	  b parent class_ref 3586572 // AllocProfState
      end

      attribute 12784780 "inlinedMethods"
	public type class_ref 3582732 // Method
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12784908 "executedInstrCounts"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12785036 "instructionCountEnableCount"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12785164 "signalCatcherHandle"
	public explicit_type "pthread_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12785292 "haltSignalCatcher"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12785420 "haltStdioConverter"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12785548 "stdioConverterReady"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12785676 "stdioConverterHandle"
	public explicit_type "pthread_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12785804 "stdioConverterLock"
	public explicit_type "pthread_mutex_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12785932 "stdioConverterCond"
	public explicit_type "pthread_cond_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12786060 "stdoutPipe"
	public explicit_type "int"
	multiplicity "[2]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12786188 "stderrPipe"
	public explicit_type "int"
	multiplicity "[2]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12786316 "systemServerPid"
	public explicit_type "pid_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12786444 "kernelGroupScheduling"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 6903948 // preciseMethods (<unidirectional association>)
	relation 6903820 --->
	  a role_name "preciseMethods" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6903948 // preciseMethods (<unidirectional association>)
	  b parent class_ref 3586700 // PointerSet
      end

      attribute 12786572 "registerMapStats"
	public explicit_type "void"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 6904076 // verifierStats (<directional composition>)
	relation 6903948 *-->
	  a role_name "verifierStats" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6904076 // verifierStats (<directional composition>)
	  b parent class_ref 3586828 // VerifierStats
      end

      attribute 12786700 "lastMessage"
	const_attribute public explicit_type "char"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3585036 "HashTable"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " * Expandable hash table.
 *
 * This structure should be considered opaque."
      attribute 12798092 "tableSize"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " must be power of 2 "
      end

      attribute 12798220 "numEntries"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " current #of \"live\" entries "
      end

      attribute 12798348 "numDeadEntries"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " current #of tombstone entries "
      end

      classrelation 6906508 // pEntries (<unidirectional association>)
	relation 6906380 --->
	  a role_name "pEntries" public
	    comment " array on heap "
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6906508 // pEntries (<unidirectional association>)
	  b parent class_ref 3588748 // HashEntry
      end

      classrelation 6906636 // freeFunc (<directional composition>)
	relation 6906508 *-->
	  a role_name "freeFunc" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6906636 // freeFunc (<directional composition>)
	  b parent class_ref 3588364 // HashFreeFunc
      end

      attribute 12798476 "lock"
	public explicit_type "pthread_mutex_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3585292 "IndirectRefTable"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      class 3589772 "iterator"
	visibility package stereotype "typedef" base_type class_ref 3589644 // iref_iterator
	cpp_decl "${comment}typedef ${type} ${name};
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 6907532 // <dependency>
	  relation 6907404 -_->
	    a default
	      cpp default "#include in source"
	      classrelation_ref 6907532 // <dependency>
	    b parent class_ref 3589644 // iref_iterator
	end
      end

      classrelation 6907660 // segmentState (<directional composition>)
	relation 6907532 *-->
	  a role_name "segmentState" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6907660 // segmentState (<directional composition>)
	  b parent class_ref 3589516 // IRTSegmentState
      end

      classrelation 6907788 // table_ (<unidirectional association>)
	relation 6907660 --->
	  a role_name "table_" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6907788 // table_ (<unidirectional association>)
	  b parent class_ref 3589388 // IndirectRefSlot
      end

      classrelation 6907916 // kind_ (<directional composition>)
	relation 6907788 *-->
	  a role_name "kind_" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6907916 // kind_ (<directional composition>)
	  b parent class_ref 3589260 // IndirectRefKind
      end

      attribute 12799756 "alloc_entries_"
	public explicit_type "size_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12799884 "max_entries_"
	public explicit_type "size_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 15478412 "add"
	preserve_cpp_body_indent public return_type class_ref 3589132 // IndirectRef
	nparams 2
	  param in name "cookie" type class_ref 3580300 // u4
	  param inout name "obj" type class_ref 3581836 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " TODO: want hole-filling stats (#of holes filled, total entries scanned)
       for performance evaluation.

     * Add a new entry.  \"obj\" must be a valid non-NULL object reference
     * (though it's okay if it's not fully-formed, e.g. the result from
     * dvmMalloc doesn't have obj->clazz set).
     *
     * Returns NULL if the table is full (max entries reached, or alloc
     * failed during expansion)."
      end

      operation 15478540 "get"
	preserve_cpp_body_indent const public return_type class_ref 3581836 // Object
	nparams 1
	  param in name "iref" type class_ref 3589132 // IndirectRef
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "// * Get the referent of an indirect ref from the table.
// *
// * Returns kInvalidIndirectRefObject if iref is invalid.

${inline}${type} * ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "     * Given an IndirectRef in the table, return the Object it refers to.
     *
     * Returns kInvalidIndirectRefObject if iref is invalid."
      end

      operation 15478668 "contains"
	preserve_cpp_body_indent const public explicit_return_type "bool"
	nparams 1
	  param in name "obj" type class_ref 3581836 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "     * Returns true if the table contains a reference to this object."
      end

      operation 15478796 "remove"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 2
	  param in name "cookie" type class_ref 3580300 // u4
	  param in name "iref" type class_ref 3589132 // IndirectRef
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "// * Remove \"obj\" from \"pRef\".  We extract the table offset bits from \"iref\"
// * and zap the corresponding entry, leaving a hole if it's not at the top.
// *
// * If the entry is not between the current top index and the bottom index
// * specified by the cookie, we don't remove anything.  This is the behavior
// * required by JNI's DeleteLocalRef function.
// *
// * Note this is NOT called when a local frame is popped.  This is only used
// * for explicit single removals.
// *
// * Returns \"false\" if nothing was removed.

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "     * Remove an existing entry.
     *
     * If the entry is not between the current top index and the bottom index
     * specified by the cookie, we don't remove anything.  This is the behavior
     * required by JNI's DeleteLocalRef function.
     *
     * Returns \"false\" if nothing was removed."
      end

      operation 15478924 "init"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 3
	  param in name "initialCount" explicit_type "size_t"
	  param in name "maxCount" explicit_type "size_t"
	  param in name "desiredKind" type class_ref 3589260 // IndirectRefKind
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "     * Initialize an IndirectRefTable.
     *
     * If \"initialCount\" != \"maxCount\", the table will expand as required.
     *
     * \"kind\" should be Local or Global.  The Global table may also hold
     * WeakGlobal refs.
     *
     * Returns \"false\" if table allocation fails."
      end

      operation 15479052 "destroy"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "// * Clears out the contents of a IndirectRefTable, freeing allocated storage.

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "     * Clear out the contents, freeing allocated storage.
     *
     * You must call dvmInitReferenceTable() before you can re-use this table.
     *
     * TODO: this should be a destructor."
      end

      operation 15479180 "dump"
	preserve_cpp_body_indent const public explicit_return_type "void"
	nparams 1
	  param in name "descr" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "     * Dump the contents of a reference table to the log file.
     *
     * The caller should lock any external sync before calling.
     *
     * TODO: we should name the table in a constructor and remove
     * the argument here."
      end

      operation 15479308 "capacity"
	const cpp_inline public explicit_return_type "size_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return segmentState.parts.topIndex;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "     * Return the #of entries in the entire table.  This includes holes, and
     * so may be larger than the actual number of \"live\" entries."
      end

      operation 15479436 "begin"
	cpp_inline public return_type class_ref 3589772 // iterator
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return iterator(table_, 0, capacity());
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15479564 "end"
	cpp_inline public return_type class_ref 3589772 // iterator
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return iterator(table_, capacity(), capacity());
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15479692 "extractIndex"
	class_operation cpp_inline private return_type class_ref 3580300 // u4
	nparams 1
	  param in name "iref" type class_ref 3589132 // IndirectRef
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        u4 uref = (u4) iref;
        return (uref >> 2) & 0xffff;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15479820 "extractSerial"
	class_operation cpp_inline private return_type class_ref 3580300 // u4
	nparams 1
	  param in name "iref" type class_ref 3589132 // IndirectRef
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        u4 uref = (u4) iref;
        return uref >> 20;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15479948 "nextSerial"
	class_operation cpp_inline private return_type class_ref 3580300 // u4
	nparams 1
	  param in name "serial" type class_ref 3580300 // u4
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        return (serial + 1) & 0xfff;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15480076 "toIndirectRef"
	class_operation cpp_inline private return_type class_ref 3589132 // IndirectRef
	nparams 3
	  param in name "index" type class_ref 3580300 // u4
	  param in name "serial" type class_ref 3580300 // u4
	  param in name "kind" type class_ref 3589260 // IndirectRefKind
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract} {
        assert(index < 65536);
        return reinterpret_cast<IndirectRef>((serial << 20) | (index << 2) | kind);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 3585420 "ReferenceTable"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " * Table definition.
 *
 * The expected common operations are adding a new entry and removing a
 * recently-added entry (usually the most-recently-added entry).
 *
 * If \"allocEntries\" is not equal to \"maxEntries\", the table may expand when
 * entries are added, which means the memory may move.  If you want to keep
 * pointers into \"table\" rather than offsets, use a fixed-size table.
 *
 * (This structure is still somewhat transparent; direct access to
 * table/nextEntry is allowed.)"
      attribute 12812428 "nextEntry"
	public type class_ref 3581836 // Object
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " top of the list "
      end

      attribute 12812556 "table"
	public type class_ref 3581836 // Object
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " bottom of the list "
      end

      attribute 12812684 "allocEntries"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " #of entries we have space for "
      end

      attribute 12812812 "maxEntries"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " max #of entries allowed "
      end
    end

    class 3585676 "Monitor"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " * Every Object has a monitor associated with it, but not every Object is
 * actually locked.  Even the ones that are locked do not need a
 * full-fledged monitor until a) there is actual contention or b) wait()
 * is called on the Object.
 *
 * For Dalvik, we have implemented a scheme similar to the one described
 * in Bacon et al.'s \"Thin locks: featherweight synchronization for Java\"
 * (ACM 1998).  Things are even easier for us, though, because we have
 * a full 32 bits to work with.
 *
 * The two states of an Object's lock are referred to as \"thin\" and
 * \"fat\".  A lock may transition from the \"thin\" state to the \"fat\"
 * state and this transition is referred to as inflation.  Once a lock
 * has been inflated it remains in the \"fat\" state indefinitely.
 *
 * The lock value itself is stored in Object.lock.  The LSB of the
 * lock encodes its state.  When cleared, the lock is in the \"thin\"
 * state and its bits are formatted as follows:
 *
 *    [31 ---- 19] [18 ---- 3] [2 ---- 1] [0]
 *     lock count   thread id  hash state  0
 *
 * When set, the lock is in the \"fat\" state and its bits are formatted
 * as follows:
 *
 *    [31 ---- 3] [2 ---- 1] [0]
 *      pointer   hash state  1
 *
 * For an in-depth description of the mechanics of thin-vs-fat locking,
 * read the paper referred to above.
 

 * Monitors provide:
 *  - mutually exclusive access to resources
 *  - a way for multiple threads to wait for notification
 *
 * In effect, they fill the role of both mutexes and condition variables.
 *
 * Only one thread can own the monitor at any time.  There may be several
 * threads waiting on it (the wait call unlocks it).  One or more waiting
 * threads may be getting interrupted or notified at any given time.
 *
 * TODO: the various members of monitor are not SMP-safe."
      classrelation 6967180 // owner (<unidirectional association>)
	relation 6967052 --->
	  a role_name "owner" public
	    comment " which thread currently owns the lock? "
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6967180 // owner (<unidirectional association>)
	  b parent class_ref 3582604 // Thread
      end

      attribute 13050508 "lockCount"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " owner's recursive lock depth "
      end

      classrelation 6967308 // obj (<unidirectional association>)
	relation 6967180 --->
	  a role_name "obj" public
	    comment " what object are we part of [debug only] "
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6967308 // obj (<unidirectional association>)
	  b parent class_ref 3581836 // Object
      end

      classrelation 6967436 // waitSet (<unidirectional association>)
	relation 6967308 --->
	  a role_name "waitSet" public
	    comment " threads currently waiting on this monitor "
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6967436 // waitSet (<unidirectional association>)
	  b parent class_ref 3582604 // Thread
      end

      attribute 13050636 "lock"
	public explicit_type "pthread_mutex_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 6967564 // next (<unidirectional association>)
	relation 6967436 --->
	  a role_name "next" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6967564 // next (<unidirectional association>)
	  b parent class_ref 3585676 // Monitor
      end

      classrelation 6967692 // ownerMethod (<unidirectional association>)
	relation 6967564 --->
	  a role_name "ownerMethod" const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6967692 // ownerMethod (<unidirectional association>)
	  b parent class_ref 3582732 // Method
      end

      classrelation 6967820 // ownerPc (<directional composition>)
	relation 6967692 *-->
	  a role_name "ownerPc" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6967820 // ownerPc (<directional composition>)
	  b parent class_ref 3580300 // u4
      end
    end

    class 3585932 "LinearAllocHdr"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " * Linear allocation state.  We could tuck this into the start of the
 * allocated region, but that would prevent us from sharing the rest of
 * that first page."
      attribute 12806796 "curOffset"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " offset where next data goes "
      end

      attribute 12806924 "lock"
	public explicit_type "pthread_mutex_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " controls updates to this struct "
      end

      attribute 12807052 "mapAddr"
	public explicit_type "char"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " start of mmap()ed region "
      end

      attribute 12807180 "mapLength"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " length of region "
      end

      attribute 12807308 "firstOffset"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " for chasing through "
      end

      attribute 12807436 "writeRefCount"
	public explicit_type "short"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " for ENFORCE_READ_ONLY "
      end
    end

    class 3586316 "AllocRecord"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " * Record the details of an allocation."
      classrelation 6965004 // clazz (<unidirectional association>)
	relation 6964876 --->
	  a role_name "clazz" public
	    comment " class allocated in this block "
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6965004 // clazz (<unidirectional association>)
	  b parent class_ref 3582988 // ClassObject
      end

      classrelation 6965132 // size (<directional composition>)
	relation 6965004 *-->
	  a role_name "size" public
	    comment " total size requested "
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6965132 // size (<directional composition>)
	  b parent class_ref 3580300 // u4
      end

      classrelation 6965260 // threadId (<directional composition>)
	relation 6965132 *-->
	  a role_name "threadId" public
	    comment " simple thread ID; could be recycled "
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6965260 // threadId (<directional composition>)
	  b parent class_ref 3580940 // u2
      end

      attribute 13047052 "stackElem"
	public explicit_type "<complex type>"
	multiplicity "[kMaxAllocRecordStackDepth]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}struct  {
        const Method* method;   /* which method we're executing in */
        int         pc;         /* current execution offset, in 16-bit units */
    } ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3586444 "MethodTraceState"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " * Method trace state.  This is currently global.  In theory we could make
 * most of this per-thread."
      attribute 12809228 "startStopLock"
	public explicit_type "pthread_mutex_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12809356 "threadExitCond"
	public explicit_type "pthread_cond_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12809484 "traceFile"
	public explicit_type "FILE"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12809612 "directToDdms"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12809740 "bufferSize"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12809868 "flags"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12809996 "traceEnabled"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 6909452 // buf (<unidirectional association>)
	relation 6909324 --->
	  a role_name "buf" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6909452 // buf (<unidirectional association>)
	  b parent class_ref 3580812 // u1
      end

      attribute 12810124 "curOffset"
	volatile public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 6909580 // startWhen (<directional composition>)
	relation 6909452 *-->
	  a role_name "startWhen" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6909580 // startWhen (<directional composition>)
	  b parent class_ref 3581068 // u8
      end

      attribute 12810252 "overflow"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12810380 "traceVersion"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12810508 "recordSize"
	public explicit_type "size_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3586572 "AllocProfState"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " * Memory allocation profiler state.  This is used both globally and
 * per-thread.
 *
 * If you add a field here, zero it out in dvmStartAllocCounting()."
      attribute 12810636 "enabled"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " is allocation tracking enabled?"
      end

      attribute 12810764 "allocCount"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " #of objects allocated"
      end

      attribute 12810892 "allocSize"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " cumulative size of objects"
      end

      attribute 12811020 "failedAllocCount"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " #of times an allocation failed"
      end

      attribute 12811148 "failedAllocSize"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " cumulative size of failed allocations"
      end

      attribute 12811276 "freeCount"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " #of objects freed"
      end

      attribute 12811404 "freeSize"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " cumulative size of freed objects"
      end

      attribute 12811532 "gcCount"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " #of times an allocation triggered a GC"
      end

      attribute 12811660 "classInitCount"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " #of initialized classes"
      end

      classrelation 6909708 // classInitTime (<directional composition>)
	relation 6909580 *-->
	  a role_name "classInitTime" public
	    comment " cumulative time spent in class init (nsec)"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6909708 // classInitTime (<directional composition>)
	  b parent class_ref 3581068 // u8
      end
    end

    class 3586700 "PointerSet"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " * Sorted, expanding list of pointers."
      classrelation 6966924 // alloc (<directional composition>)
	relation 6966796 *-->
	  a role_name "alloc" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6966924 // alloc (<directional composition>)
	  b parent class_ref 3580940 // u2
      end

      classrelation 6967052 // count (<directional composition>)
	relation 6966924 *-->
	  a role_name "count" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6967052 // count (<directional composition>)
	  b parent class_ref 3580940 // u2
      end

      attribute 13050124 "list"
	const_attribute public explicit_type "void"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3586956 "TraceProfilingModes"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}
};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " Trace profiling modes.  Ordering matters - off states before on states "
      attribute 12786828 "kTraceProfilingDisabled"
	public type class_ref 3586956 // TraceProfilingModes
	init_value " 0"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12786956 "kTraceProfilingPeriodicOff"
	public type class_ref 3586956 // TraceProfilingModes
	init_value " 1"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12787084 "kTraceProfilingContinuous"
	public type class_ref 3586956 // TraceProfilingModes
	init_value " 2"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12787212 "kTraceProfilingPeriodicOn"
	public type class_ref 3586956 // TraceProfilingModes
	init_value " 3     // Periodic profiling, on phase
"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3587084 "NoChainExits"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}
};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " Not profiling
 Periodic profiling, off phase
 Always profiling
 Periodic profiling, on phase

 * Exiting the compiled code w/o chaining will incur overhead to look up the
 * target in the code cache which is extra work only when JIT is enabled. So
 * we want to monitor it closely to make sure we don't have performance bugs."
      attribute 12787340 "kInlineCacheMiss"
	public type class_ref 3587084 // NoChainExits
	init_value " 0"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12787468 "kCallsiteInterpreted"
	public type class_ref 3587084 // NoChainExits
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12787596 "kSwitchOverflow"
	public type class_ref 3587084 // NoChainExits
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12787724 "kHeavyweightMonitor"
	public type class_ref 3587084 // NoChainExits
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12787852 "kNoChainExitLast"
	public type class_ref 3587084 // NoChainExits
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3587212 "DvmJitGlobals"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " * JIT-specific global state"
      attribute 12787980 "tableLock"
	public explicit_type "pthread_mutex_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 6904204 // pJitEntryTable (<unidirectional association>)
	relation 6904076 --->
	  a role_name "pJitEntryTable" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}struct ${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6904204 // pJitEntryTable (<unidirectional association>)
	  b parent class_ref 3587340 // JitEntry
      end

      attribute 12788108 "pProfTable"
	public explicit_type "byte"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 6904332 // pJitTraceProfCounters (<unidirectional association>)
	relation 6904204 --->
	  a role_name "pJitTraceProfCounters" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}struct ${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6904332 // pJitTraceProfCounters (<unidirectional association>)
	  b parent class_ref 3587468 // JitTraceProfCounters
      end

      attribute 12788236 "pProfTableCopy"
	public explicit_type "byte"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12788364 "jitTableSize"
	public explicit_type "uint"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12788492 "jitTableMask"
	public explicit_type "uint"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12788620 "jitTableEntriesUsed"
	public explicit_type "uint"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12788748 "codeCacheSize"
	public explicit_type "uint"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12788876 "threshold"
	public explicit_type "ushort"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12789004 "haltCompilerThread"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12789132 "blockingMode"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12789260 "methodTraceSupport"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12789388 "genSuspendPoll"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 6904460 // compilerThread (<unidirectional association>)
	relation 6904332 --->
	  a role_name "compilerThread" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6904460 // compilerThread (<unidirectional association>)
	  b parent class_ref 3582604 // Thread
      end

      attribute 12789516 "compilerHandle"
	public explicit_type "pthread_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12789644 "compilerLock"
	public explicit_type "pthread_mutex_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12789772 "compilerICPatchLock"
	public explicit_type "pthread_mutex_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12789900 "compilerQueueActivity"
	public explicit_type "pthread_cond_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12790028 "compilerQueueEmpty"
	public explicit_type "pthread_cond_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12790156 "compilerQueueLength"
	volatile public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12790284 "compilerHighWater"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12790412 "compilerWorkEnqueueIndex"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12790540 "compilerWorkDequeueIndex"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12790668 "compilerICPatchIndex"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12790796 "compilerMaxQueued"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12790924 "translationChains"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12791052 "codeCache"
	public explicit_type "void"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12791180 "inflightBaseAddr"
	public explicit_type "void"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12791308 "cacheVersion"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12791436 "templateSize"
	public explicit_type "uint"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12791564 "codeCacheByteUsed"
	public explicit_type "uint"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12791692 "numCompilations"
	public explicit_type "uint"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12791820 "codeCacheFull"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12791948 "pageSizeMask"
	public explicit_type "uint"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12792076 "codeCacheProtectionLock"
	public explicit_type "pthread_mutex_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12792204 "numCodeCacheReset"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12792332 "numCodeCacheResetDelayed"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12792460 "includeSelectedOp"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12792588 "includeSelectedMethod"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12792716 "includeSelectedOffset"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12792844 "opList"
	public explicit_type "char"
	multiplicity "[(kNumPackedOpcodes+7)/8]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 6904588 // methodTable (<unidirectional association>)
	relation 6904460 --->
	  a role_name "methodTable" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6904588 // methodTable (<unidirectional association>)
	  b parent class_ref 3585036 // HashTable
      end

      classrelation 6904716 // classTable (<unidirectional association>)
	relation 6904588 --->
	  a role_name "classTable" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6904716 // classTable (<unidirectional association>)
	  b parent class_ref 3585036 // HashTable
      end

      attribute 12792972 "pcTable"
	public explicit_type "uint"
	multiplicity "[COMPILER_PC_OFFSET_SIZE]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12793100 "num_entries_pcTable"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12793228 "printMe"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12793356 "printBinary"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12793484 "receivedSIGUSR2"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 6904844 // profileMode (<directional composition>)
	relation 6904716 *-->
	  a role_name "profileMode" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6904844 // profileMode (<directional composition>)
	  b parent class_ref 3586956 // TraceProfilingModes
      end

      attribute 12793612 "profileCountdown"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12793740 "disableOpt"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 6904972 // methodStatsTable (<unidirectional association>)
	relation 6904844 --->
	  a role_name "methodStatsTable" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6904972 // methodStatsTable (<unidirectional association>)
	  b parent class_ref 3585036 // HashTable
      end

      attribute 12793868 "checkCallGraph"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12793996 "hasNewChain"
	volatile public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12794124 "selfVerificationSpin"
	volatile public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12794252 "runningInAndroidFramework"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12794380 "alreadyEnabledViaFramework"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12794508 "disableJit"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 6905100 // signatureBreakpointSize (<directional composition>)
	relation 6904972 *-->
	  a role_name "signatureBreakpointSize" public
	    comment " # of words"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6905100 // signatureBreakpointSize (<directional composition>)
	  b parent class_ref 3580300 // u4
      end

      classrelation 6905228 // signatureBreakpoint (<unidirectional association>)
	relation 6905100 --->
	  a role_name "signatureBreakpoint" public
	    comment " Signature content"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6905228 // signatureBreakpoint (<unidirectional association>)
	  b parent class_ref 3580300 // u4
      end

      attribute 12794636 "addrLookupsFound"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12794764 "addrLookupsNotFound"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12794892 "noChainExit"
	public explicit_type "int"
	multiplicity "[kNoChainExitLast]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12795020 "normalExit"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12795148 "puntExit"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12795276 "invokeMonomorphic"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12795404 "invokePolymorphic"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12795532 "invokeNative"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12795660 "invokeMonoGetterInlined"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12795788 "invokeMonoSetterInlined"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12795916 "invokePolyGetterInlined"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12796044 "invokePolySetterInlined"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12796172 "returnOp"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12796300 "icPatchInit"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12796428 "icPatchLockFree"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12796556 "icPatchQueued"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12796684 "icPatchRejected"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12796812 "icPatchDropped"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12796940 "codeCachePatches"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12797068 "numCompilerThreadBlockGC"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 6905356 // jitTime (<directional composition>)
	relation 6905228 *-->
	  a role_name "jitTime" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6905356 // jitTime (<directional composition>)
	  b parent class_ref 3581068 // u8
      end

      classrelation 6905484 // compilerThreadBlockGCStart (<directional composition>)
	relation 6905356 *-->
	  a role_name "compilerThreadBlockGCStart" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6905484 // compilerThreadBlockGCStart (<directional composition>)
	  b parent class_ref 3581068 // u8
      end

      classrelation 6905612 // compilerThreadBlockGCTime (<directional composition>)
	relation 6905484 *-->
	  a role_name "compilerThreadBlockGCTime" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6905612 // compilerThreadBlockGCTime (<directional composition>)
	  b parent class_ref 3581068 // u8
      end

      classrelation 6905740 // maxCompilerThreadBlockGCTime (<directional composition>)
	relation 6905612 *-->
	  a role_name "maxCompilerThreadBlockGCTime" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6905740 // maxCompilerThreadBlockGCTime (<directional composition>)
	  b parent class_ref 3581068 // u8
      end

      classrelation 6905868 // optLevel (<directional composition>)
	relation 6905740 *-->
	  a role_name "optLevel" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6905868 // optLevel (<directional composition>)
	  b parent class_ref 3587596 // JitOptLevel
      end

      classrelation 6905996 // compilerWorkQueue (<directional composition>)
	relation 6905868 *-->
	  a role_name "compilerWorkQueue" multiplicity "[COMPILER_WORK_QUEUE_SIZE]" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6905996 // compilerWorkQueue (<directional composition>)
	  b parent class_ref 3587724 // CompilerWorkOrder
      end

      classrelation 6906124 // compilerICPatchQueue (<directional composition>)
	relation 6905996 *-->
	  a role_name "compilerICPatchQueue" multiplicity "[COMPILER_IC_PATCH_QUEUE_SIZE]" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6906124 // compilerICPatchQueue (<directional composition>)
	  b parent class_ref 3587852 // ICPatchWorkOrder
      end
    end

    class 3587980 "DvmJniGlobals"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      attribute 12797196 "useCheckJni"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12797324 "warnOnly"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12797452 "forceCopy"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12797580 "workAroundAppJniBugs"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12797708 "logThirdPartyJni"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 7001484 // jniVM (<directional composition>)
	relation 7001356 *-->
	  a role_name "jniVM" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7001484 // jniVM (<directional composition>)
	  b parent class_ref 3637900 // _JavaVM
      end
    end

    class 3588108 "HashCompute"
      visibility package stereotype "typedef" base_type class_ref 3580300 // u4
      cpp_decl "${comment}typedef ${type}(* ${name})(const void* item);
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " compute the hash of an item with a specific type "
      classrelation 6906252 // <dependency>
	relation 6906124 -_->
	  a default
	    cpp default "#include in source"
	    classrelation_ref 6906252 // <dependency>
	  b parent class_ref 3580300 // u4
      end
    end

    class 3588236 "HashCompareFunc"
      visibility package stereotype "typedef" explicit_base_type "int"
      cpp_decl "${comment}typedef ${type}(* ${name})(const void* tableItem, const void* looseItem);
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " * Compare a hash entry with a \"loose\" item after their hash values match.
 * Returns { <0, 0, >0 } depending on ordering of items (same semantics
 * as strcmp())."
    end

    class 3588364 "HashFreeFunc"
      visibility package stereotype "typedef" explicit_base_type "void"
      cpp_decl "${comment}typedef ${type}(* ${name})(void* ptr);
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " * This function will be used to free entries in the table.  This can be
 * NULL if no free is required, free(), or a custom function."
    end

    class 3588492 "HashForeachFunc"
      visibility package stereotype "typedef" explicit_base_type "int"
      cpp_decl "${comment}typedef ${type}(* ${name})(void* data, void* arg);
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " * Used by dvmHashForeach()."
    end

    class 3588620 "HashForeachRemoveFunc"
      visibility package stereotype "typedef" explicit_base_type "int"
      cpp_decl "${comment}typedef ${type}(* ${name})(void* data);
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " * Used by dvmHashForeachRemove()."
    end

    class 3588748 "HashEntry"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " * One entry in the hash table.  \"data\" values are expected to be (or have
 * the same characteristics as) valid pointers.  In particular, a NULL
 * value for \"data\" indicates an empty slot, and HASH_TOMBSTONE indicates
 * a no-longer-used slot that must be stepped over during probing.
 *
 * Attempting to add a NULL or tombstone value is an error.
 *
 * When an entry is released, we will call (HashFreeFunc)(entry->data)."
      classrelation 6906380 // hashValue (<directional composition>)
	relation 6906252 *-->
	  a role_name "hashValue" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6906380 // hashValue (<directional composition>)
	  b parent class_ref 3580300 // u4
      end

      attribute 12797964 "data"
	public explicit_type "void"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3588876 "HashIter"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " * An alternative to dvmHashForeach(), using an iterator.
 *
 * Use like this:
 *   HashIter iter;
 *   for (dvmHashIterBegin(hashTable, &iter); !dvmHashIterDone(&iter);
 *       dvmHashIterNext(&iter))
 *   {
 *       MyData* data = (MyData*)dvmHashIterData(&iter);
 *   }"
      attribute 12798604 "data"
	public explicit_type "void"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 6906764 // pHashTable (<unidirectional association>)
	relation 6906636 --->
	  a role_name "pHashTable" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6906764 // pHashTable (<unidirectional association>)
	  b parent class_ref 3585036 // HashTable
      end

      attribute 12798732 "idx"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3589004 "HashCalcFunc"
      visibility package stereotype "typedef" base_type class_ref 3580300 // u4
      cpp_decl "${comment}typedef ${type}(* ${name})(const void* item);
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " * Evaluate hash table performance by examining the number of times we
 * have to probe for an entry.
 *
 * The caller should lock the table beforehand."
      classrelation 6906892 // <dependency>
	relation 6906764 -_->
	  a default
	    cpp default "#include in source"
	    classrelation_ref 6906892 // <dependency>
	  b parent class_ref 3580300 // u4
      end
    end

    class 3589132 "IndirectRef"
      visibility package stereotype "typedef" explicit_base_type "void"
      cpp_decl "${comment}typedef ${type}*  ${name};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " * Maintain a table of indirect references.  Used for local/global JNI
 * references.
 *
 * The table contains object references that are part of the GC root set.
 * When an object is added we return an IndirectRef that is not a valid
 * pointer but can be used to find the original value in O(1) time.
 * Conversions to and from indirect refs are performed on JNI method calls
 * in and out of the VM, so they need to be very fast.
 *
 * To be efficient for JNI local variable storage, we need to provide
 * operations that allow us to operate on segments of the table, where
 * segments are pushed and popped as if on a stack.  For example, deletion
 * of an entry should only succeed if it appears in the current segment,
 * and we want to be able to strip off the current segment quickly when
 * a method returns.  Additions to the table must be made in the current
 * segment even if space is available in an earlier area.
 *
 * A new segment is created when we call into native code from interpreted
 * code, or when we handle the JNI PushLocalFrame function.
 *
 * The GC must be able to scan the entire table quickly.
 *
 * In summary, these must be very fast:
 *  - adding or removing a segment
 *  - adding references to a new segment
 *  - converting an indirect reference back to an Object
 * These can be a little slower, but must still be pretty quick:
 *  - adding references to a \"mature\" segment
 *  - removing individual references
 *  - scanning the entire table straight through
 *
 * If there's more than one segment, we don't guarantee that the table
 * will fill completely before we fail due to lack of space.  We do ensure
 * that the current segment will pack tightly, which should satisfy JNI
 * requirements (e.g. EnsureLocalCapacity).
 *
 * To make everything fit nicely in 32-bit integers, the maximum size of
 * the table is capped at 64K.
 *
 * None of the table functions are synchronized.
 

 * Indirect reference definition.  This must be interchangeable with JNI's
 * jobject, and it's convenient to let null be null, so we use void*.
 *
 * We need a 16-bit table index and a 2-bit reference type (global, local,
 * weak global).  Real object pointers will have zeroes in the low 2 or 3
 * bits (4- or 8-byte alignment), so it's useful to put the ref type
 * in the low bits and reserve zero as an invalid value.
 *
 * The remaining 14 bits can be used to detect stale indirect references.
 * For example, if objects don't move, we can use a hash of the original
 * Object* to make sure the entry hasn't been re-used.  (If the Object*
 * we find there doesn't match because of heap movement, we could do a
 * secondary check on the preserved hash value; this implies that creating
 * a global/local ref queries the hash value and forces it to be saved.)
 *
 * A more rigorous approach would be to put a serial number in the extra
 * bits, and keep a copy of the serial number in a parallel table.  This is
 * easier when objects can move, but requires 2x the memory and additional
 * memory accesses on add/get.  It will catch additional problems, e.g.:
 * create iref1 for obj, delete iref1, create iref2 for same obj, lookup
 * iref1.  A pattern based on object bits will miss this.
 *
 * For now, we use a serial number."
    end

    class 3589260 "IndirectRefKind"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}
};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " * Indirect reference kind, used as the two low bits of IndirectRef.
 *
 * For convenience these match up with enum jobjectRefType from jni.h."
      attribute 12798860 "kIndirectKindInvalid"
	public type class_ref 3589260 // IndirectRefKind
	init_value " 0"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12798988 "kIndirectKindLocal"
	public type class_ref 3589260 // IndirectRefKind
	init_value " 1"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12799116 "kIndirectKindGlobal"
	public type class_ref 3589260 // IndirectRefKind
	init_value " 2"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12799244 "kIndirectKindWeakGlobal"
	public type class_ref 3589260 // IndirectRefKind
	init_value " 3
"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3589388 "IndirectRefSlot"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " * Information we store for each slot in the reference table."
      classrelation 6907020 // obj (<unidirectional association>)
	relation 6906892 --->
	  a role_name "obj" public
	    comment " object pointer itself, NULL if the slot is unused "
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6907020 // obj (<unidirectional association>)
	  b parent class_ref 3581836 // Object
      end

      classrelation 6907148 // serial (<directional composition>)
	relation 6907020 *-->
	  a role_name "serial" public
	    comment " slot serial number "
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6907148 // serial (<directional composition>)
	  b parent class_ref 3580300 // u4
      end
    end

    class 3589516 "IRTSegmentState"
      visibility package stereotype "union"
      cpp_decl "${comment}${template}union ${name} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " * Table definition.
 *
 * For the global reference table, the expected common operations are
 * adding a new entry and removing a recently-added entry (usually the
 * most-recently-added entry).  For JNI local references, the common
 * operations are adding a new entry and removing an entire table segment.
 *
 * If \"alloc_entries_\" is not equal to \"max_entries_\", the table may expand
 * when entries are added, which means the memory may move.  If you want
 * to keep pointers into \"table\" rather than offsets, you must use a
 * fixed-size table.
 *
 * If we delete entries from the middle of the list, we will be left with
 * \"holes\".  We track the number of holes so that, when adding new elements,
 * we can quickly decide to do a trivial append or go slot-hunting.
 *
 * When the top-most entry is removed, any holes immediately below it are
 * also removed.  Thus, deletion of an entry may reduce \"topIndex\" by more
 * than one.
 *
 * To get the desired behavior for JNI locals, we need to know the bottom
 * and top of the current \"segment\".  The top is managed internally, and
 * the bottom is passed in as a function argument (the VM keeps it in a
 * slot in the interpreted stack frame).  When we call a native method or
 * push a local frame, the current top index gets pushed on, and serves
 * as the new bottom.  When we pop a frame off, the value from the stack
 * becomes the new top index, and the value stored in the previous frame
 * becomes the new bottom.
 *
 * To avoid having to re-scan the table after a pop, we want to push the
 * number of holes in the table onto the stack.  Because of our 64K-entry
 * cap, we can combine the two into a single unsigned 32-bit value.
 * Instead of a \"bottom\" argument we take a \"cookie\", which includes the
 * bottom index and the count of holes below the bottom.
 *
 * We need to minimize method call/return overhead.  If we store the
 * \"cookie\" externally, on the interpreted call stack, the VM can handle
 * pushes and pops with a single 4-byte load and store.  (We could also
 * store it internally in a public structure, but the local JNI refs are
 * logically tied to interpreted stack frames anyway.)
 *
 * Common alternative implementation: make IndirectRef a pointer to the
 * actual reference slot.  Instead of getting a table and doing a lookup,
 * the lookup can be done instantly.  Operations like determining the
 * type and deleting the reference are more expensive because the table
 * must be hunted for (i.e. you have to do a pointer comparison to see
 * which table it's in), you can't move the table when expanding it (so
 * realloc() is out), and tricks like serial number checking to detect
 * stale references aren't possible (though we may be able to get similar
 * benefits with other approaches).
 *
 * TODO: consider a \"lastDeleteIndex\" for quick hole-filling when an
 * add immediately follows a delete; must invalidate after segment pop
 * (which could increase the cost/complexity of method call/return).
 * Might be worth only using it for JNI globals.
 *
 * TODO: may want completely different add/remove algorithms for global
 * and local refs to improve performance.  A large circular buffer might
 * reduce the amortized cost of adding global references.
 *
 * TODO: if we can guarantee that the underlying storage doesn't move,
 * e.g. by using oversized mmap regions to handle expanding tables, we may
 * be able to avoid having to synchronize lookups.  Might make sense to
 * add a \"synchronized lookup\" call that takes the mutex as an argument,
 * and either locks or doesn't lock based on internal details."
      classrelation 6907276 // all (<directional composition>)
	relation 6907148 *-->
	  a role_name "all" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6907276 // all (<directional composition>)
	  b parent class_ref 3580300 // u4
      end

      attribute 12799372 "parts"
	public explicit_type "<complex type>"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}struct  {
        u4      topIndex:16;            /* index of first unused entry */
        u4      numHoles:16;            /* #of holes in entire table */
    } ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3589644 "iref_iterator"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      operation 15477772 "iref_iterator"
	cpp_inline public explicit_return_type ""
	nparams 3
	  param inout name "table" type class_ref 3589388 // IndirectRefSlot
	  param in name "i" explicit_type "size_t"
	  param in name "capacity" explicit_type "size_t"
	cpp_decl "    ${comment}${inline}explicit ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${volatile}${throw} :
            table_(table), i_(i), capacity_(capacity) {
        skipNullsAndTombstones();
    };
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 15477900 "operator ++"
	cpp_inline public return_type class_ref 3589644 // iref_iterator
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        ++i_;
        skipNullsAndTombstones();
        return *this;
    };
"
	
	
	
	
      end

      operation 15478028 "operator *"
	cpp_inline public return_type class_ref 3581836 // Object
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * * ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return &table_[i_].obj;
    };
"
	
	
	
	
      end

      operation 15478156 "equals"
	const cpp_inline public explicit_return_type "bool"
	nparams 1
	  param in name "rhs" type class_ref 3589644 // iref_iterator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        return (i_ == rhs.i_ && table_ == rhs.table_);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15478284 "skipNullsAndTombstones"
	cpp_inline private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        // We skip NULLs and tombstones. Clients don't want to see implementation details.
        while (i_ < capacity_ && (table_[i_].obj == NULL
                || table_[i_].obj == kClearedJniWeakGlobal)) {
            ++i_;
        }
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 6907404 // table_ (<unidirectional association>)
	relation 6907276 --->
	  a role_name "table_" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6907404 // table_ (<unidirectional association>)
	  b parent class_ref 3589388 // IndirectRefSlot
      end

      attribute 12799500 "i_"
	private explicit_type "size_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12799628 "capacity_"
	private explicit_type "size_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3589900 "InlineOp4Func"
      visibility package stereotype "typedef" explicit_base_type "bool"
      cpp_decl "${comment}typedef ${type}(* ${name})(u4 arg0, u4 arg1, u4 arg2, u4 arg3,
    JValue* pResult);
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " * Basic 4-argument inline operation handler."
    end

    class 3590028 "InlineOperation"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " * Table of inline operations.
 *
 * Try to keep this at a power-of-two size, so we don't have to multiply.
 *
 * TODO: might be to our advantage to generate a compact jump table on
 * the heap at runtime (or just declare two static tables, one with full
 * info and one with just function pointers).  Especially useful if we decide
 * to support other method call forms, e.g. /range.  We can also just
 * generate assembly code that knows how many args it needs and has the
 * target address embedded."
      classrelation 6908044 // func (<directional composition>)
	relation 6907916 *-->
	  a role_name "func" public
	    comment " MUST be first entry "
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6908044 // func (<directional composition>)
	  b parent class_ref 3589900 // InlineOp4Func
      end

      attribute 12800012 "classDescriptor"
	const_attribute public explicit_type "char"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12800140 "methodName"
	const_attribute public explicit_type "char"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12800268 "methodSignature"
	const_attribute public explicit_type "char"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3590156 "NativeInlineOps"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}
};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " * Must be kept in sync w/ gDvmInlineOpsTable in InlineNative.cpp
 *
 * You should also add a test to libcore's IntrinsicTest."
      attribute 12800396 "INLINE_EMPTYINLINEMETHOD"
	public type class_ref 3590156 // NativeInlineOps
	init_value " 0"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12800524 "INLINE_STRING_CHARAT"
	public type class_ref 3590156 // NativeInlineOps
	init_value " 1"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12800652 "INLINE_STRING_COMPARETO"
	public type class_ref 3590156 // NativeInlineOps
	init_value " 2"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12800780 "INLINE_STRING_EQUALS"
	public type class_ref 3590156 // NativeInlineOps
	init_value " 3"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12800908 "INLINE_STRING_FASTINDEXOF_II"
	public type class_ref 3590156 // NativeInlineOps
	init_value " 4"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12801036 "INLINE_STRING_IS_EMPTY"
	public type class_ref 3590156 // NativeInlineOps
	init_value " 5"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12801164 "INLINE_STRING_LENGTH"
	public type class_ref 3590156 // NativeInlineOps
	init_value " 6"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12801292 "INLINE_MATH_ABS_INT"
	public type class_ref 3590156 // NativeInlineOps
	init_value " 7"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12801420 "INLINE_MATH_ABS_LONG"
	public type class_ref 3590156 // NativeInlineOps
	init_value " 8"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12801548 "INLINE_MATH_ABS_FLOAT"
	public type class_ref 3590156 // NativeInlineOps
	init_value " 9"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12801676 "INLINE_MATH_ABS_DOUBLE"
	public type class_ref 3590156 // NativeInlineOps
	init_value " 10"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12801804 "INLINE_MATH_MIN_INT"
	public type class_ref 3590156 // NativeInlineOps
	init_value " 11"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12801932 "INLINE_MATH_MAX_INT"
	public type class_ref 3590156 // NativeInlineOps
	init_value " 12"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12802060 "INLINE_MATH_SQRT"
	public type class_ref 3590156 // NativeInlineOps
	init_value " 13"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12802188 "INLINE_MATH_COS"
	public type class_ref 3590156 // NativeInlineOps
	init_value " 14"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12802316 "INLINE_MATH_SIN"
	public type class_ref 3590156 // NativeInlineOps
	init_value " 15"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12802444 "INLINE_FLOAT_TO_INT_BITS"
	public type class_ref 3590156 // NativeInlineOps
	init_value " 16"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12802572 "INLINE_FLOAT_TO_RAW_INT_BITS"
	public type class_ref 3590156 // NativeInlineOps
	init_value " 17"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12802700 "INLINE_INT_BITS_TO_FLOAT"
	public type class_ref 3590156 // NativeInlineOps
	init_value " 18"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12802828 "INLINE_DOUBLE_TO_LONG_BITS"
	public type class_ref 3590156 // NativeInlineOps
	init_value " 19"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12802956 "INLINE_DOUBLE_TO_RAW_LONG_BITS"
	public type class_ref 3590156 // NativeInlineOps
	init_value " 20"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12803084 "INLINE_LONG_BITS_TO_DOUBLE"
	public type class_ref 3590156 // NativeInlineOps
	init_value " 21"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12803212 "INLINE_STRICT_MATH_ABS_INT"
	public type class_ref 3590156 // NativeInlineOps
	init_value " 22"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12803340 "INLINE_STRICT_MATH_ABS_LONG"
	public type class_ref 3590156 // NativeInlineOps
	init_value " 23"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12803468 "INLINE_STRICT_MATH_ABS_FLOAT"
	public type class_ref 3590156 // NativeInlineOps
	init_value " 24"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12803596 "INLINE_STRICT_MATH_ABS_DOUBLE"
	public type class_ref 3590156 // NativeInlineOps
	init_value " 25"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12803724 "INLINE_STRICT_MATH_MIN_INT"
	public type class_ref 3590156 // NativeInlineOps
	init_value " 26"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12803852 "INLINE_STRICT_MATH_MAX_INT"
	public type class_ref 3590156 // NativeInlineOps
	init_value " 27"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12803980 "INLINE_STRICT_MATH_SQRT"
	public type class_ref 3590156 // NativeInlineOps
	init_value " 28"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3590284 "JarFile"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " * This represents an open, scanned Jar file.  (It's actually for any Zip
 * archive that happens to hold a Dex file.)"
      attribute 12804108 "archive"
	public explicit_type "ZipArchive"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12804236 "cacheFileName"
	public explicit_type "char"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 6908172 // pDvmDex (<unidirectional association>)
	relation 6908044 --->
	  a role_name "pDvmDex" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6908172 // pDvmDex (<unidirectional association>)
	  b parent class_ref 3583500 // DvmDex
      end
    end

    class 3590412 "DexCacheStatus"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}
};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      attribute 12804364 "DEX_CACHE_ERROR"
	public type class_ref 3590412 // DexCacheStatus
	init_value " -2"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12804492 "DEX_CACHE_BAD_ARCHIVE"
	public type class_ref 3590412 // DexCacheStatus
	init_value " -1"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12804620 "DEX_CACHE_OK"
	public type class_ref 3590412 // DexCacheStatus
	init_value " 0"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12804748 "DEX_CACHE_STALE"
	public type class_ref 3590412 // DexCacheStatus
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12804876 "DEX_CACHE_STALE_ODEX"
	public type class_ref 3590412 // DexCacheStatus
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3590540 "JNIEnvExt"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      attribute 12805004 "funcTable"
	const_attribute public explicit_type "JNINativeInterface"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}struct ${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " must be first "
      end

      attribute 12805132 "baseFuncTable"
	const_attribute public explicit_type "JNINativeInterface"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}struct ${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 6908428 // self (<unidirectional association>)
	relation 6908300 --->
	  a role_name "self" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6908428 // self (<unidirectional association>)
	  b parent class_ref 3582604 // Thread
      end

      attribute 12805260 "critical"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 6908556 // prev (<unidirectional association>)
	relation 6908428 --->
	  a role_name "prev" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}struct ${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6908556 // prev (<unidirectional association>)
	  b parent class_ref 3590540 // JNIEnvExt
      end

      classrelation 6908684 // next (<unidirectional association>)
	relation 6908556 --->
	  a role_name "next" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}struct ${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6908684 // next (<unidirectional association>)
	  b parent class_ref 3590540 // JNIEnvExt
      end

      attribute 13078924 "envThreadId"
	private explicit_type ""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 7002124 // <generalisation>
	relation 7001996 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 7002124 // <generalisation>
	  b parent class_ref 3637644 // _JNIEnv
      end
    end

    class 3590668 "JavaVMExt"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      attribute 12805388 "funcTable"
	const_attribute public explicit_type "JNIInvokeInterface"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}struct ${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " must be first "
      end

      attribute 12805516 "baseFuncTable"
	const_attribute public explicit_type "JNIInvokeInterface"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}struct ${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 6908812 // envList (<unidirectional association>)
	relation 6908684 --->
	  a role_name "envList" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6908812 // envList (<unidirectional association>)
	  b parent class_ref 3590540 // JNIEnvExt
      end

      attribute 12805644 "envListLock"
	public explicit_type "pthread_mutex_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 7001996 // <generalisation>
	relation 7001868 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 7001996 // <generalisation>
	  b parent class_ref 3637900 // _JavaVM
      end
    end

    class 3590796 "DalvikJniReturnType"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}
};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " * Native function return type; used by dvmPlatformInvoke().
 *
 * This is part of Method.jniArgInfo, and must fit in 3 bits.
 * Note: Assembly code in arch/<arch>/Call<arch>.S relies on
 * the enum values defined here."
      attribute 12805772 "DALVIK_JNI_RETURN_VOID"
	public type class_ref 3590796 // DalvikJniReturnType
	init_value " 0"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12805900 "DALVIK_JNI_RETURN_FLOAT"
	public type class_ref 3590796 // DalvikJniReturnType
	init_value " 1"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12806028 "DALVIK_JNI_RETURN_DOUBLE"
	public type class_ref 3590796 // DalvikJniReturnType
	init_value " 2"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12806156 "DALVIK_JNI_RETURN_S8"
	public type class_ref 3590796 // DalvikJniReturnType
	init_value " 3"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12806284 "DALVIK_JNI_RETURN_S4"
	public type class_ref 3590796 // DalvikJniReturnType
	init_value " 4"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12806412 "DALVIK_JNI_RETURN_S2"
	public type class_ref 3590796 // DalvikJniReturnType
	init_value " 5"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12806540 "DALVIK_JNI_RETURN_U2"
	public type class_ref 3590796 // DalvikJniReturnType
	init_value " 6"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12806668 "DALVIK_JNI_RETURN_S1"
	public type class_ref 3590796 // DalvikJniReturnType
	init_value " 7
"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3590924 "HexDumpMode"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}
};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " * Print a hex dump to the log file.
 *
 * \"local\" mode prints a hex dump starting from offset 0 (roughly equivalent
 * to \"xxd -g1\").
 *
 * \"mem\" mode shows the actual memory address, and will offset the start
 * so that the low nibble of the address is always zero.
 *
 * If \"tag\" is NULL the default tag (\"dalvikvm\") will be used."
      attribute 12807564 "kHexDumpLocal"
	public type class_ref 3590924 // HexDumpMode
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12807692 "kHexDumpMem"
	public type class_ref 3590924 // HexDumpMode
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3591052 "DebugTargetKind"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}
};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      attribute 12807820 "kDebugTargetUnknown"
	public type class_ref 3591052 // DebugTargetKind
	init_value " 0"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12807948 "kDebugTargetLog"
	public type class_ref 3591052 // DebugTargetKind
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12808076 "kDebugTargetFile"
	public type class_ref 3591052 // DebugTargetKind
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3591180 "DebugOutputTarget"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " * We pass one of these around when we want code to be able to write debug
 * info to either the log or to a file (or stdout/stderr)."
      classrelation 6908940 // which (<directional composition>)
	relation 6908812 *-->
	  a role_name "which" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6908940 // which (<directional composition>)
	  b parent class_ref 3591052 // DebugTargetKind
      end

      attribute 12808204 "data"
	public explicit_type "<complex type>"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}union  {
        struct {
            int priority;
            const char* tag;
        } log;
        struct {
            FILE* fp;
        } file;
    } ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3591308 "ProcStatData"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " * Get some per-thread stats from /proc/self/task/N/stat."
      attribute 12808332 "state"
	public explicit_type "char"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " process state, e.g. 'R', 'S', 'D' "
      end

      attribute 12808460 "utime"
	public explicit_type "ulong"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " number of jiffies scheduled in user mode "
      end

      attribute 12808588 "stime"
	public explicit_type "ulong"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " number of jiffies scheduled in kernel mode "
      end

      attribute 12808716 "processor"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " number of CPU that last executed thread "
      end
    end

    class 3591436 "DalvikNativeMethod"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " * Method description; equivalent to a JNI struct."
      attribute 12808844 "name"
	const_attribute public explicit_type "char"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12808972 "signature"
	const_attribute public explicit_type "char"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 6909068 // fnPtr (<directional composition>)
	relation 6908940 *-->
	  a role_name "fnPtr" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6909068 // fnPtr (<directional composition>)
	  b parent class_ref 3591564 // DalvikNativeFunc
      end
    end

    class 3591692 "DalvikNativeClass"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " * All methods for one class.  The last \"methodInfo\" has a NULL \"name\"."
      attribute 12809100 "classDescriptor"
	const_attribute public explicit_type "char"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 6909196 // methodInfo (<unidirectional association>)
	relation 6909068 --->
	  a role_name "methodInfo" const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6909196 // methodInfo (<unidirectional association>)
	  b parent class_ref 3591436 // DalvikNativeMethod
      end

      classrelation 6909324 // classDescriptorHash (<directional composition>)
	relation 6909196 *-->
	  a role_name "classDescriptorHash" public
	    comment " initialized at runtime "
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6909324 // classDescriptorHash (<directional composition>)
	  b parent class_ref 3580300 // u4
      end
    end

    class 3591820 "anonymous2"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum  {
${items}
};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " * Bit flags for dvmMethodTraceStart \"flags\" argument.  These must match
 * the values in android.os.Debug."
      attribute 12811788 "TRACE_ALLOC_COUNTS"
	public type class_ref 3591820 // anonymous2
	init_value " 0x01"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3591948 "anonymous3"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum  {
${items}
};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " * Enumeration for the two \"action\" bits."
      attribute 12811916 "METHOD_TRACE_ENTER"
	public type class_ref 3591948 // anonymous3
	init_value " 0x00"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12812044 "METHOD_TRACE_EXIT"
	public type class_ref 3591948 // anonymous3
	init_value " 0x01"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12812172 "METHOD_TRACE_UNROLL"
	public type class_ref 3591948 // anonymous3
	init_value " 0x02"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3592076 "RawDexFile"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " * Structure representing a \"raw\" DEX file, in its unswapped unoptimized
 * state."
      attribute 12812300 "cacheFileName"
	public explicit_type "char"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 6909836 // pDvmDex (<unidirectional association>)
	relation 6909708 --->
	  a role_name "pDvmDex" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6909836 // pDvmDex (<unidirectional association>)
	  b parent class_ref 3583500 // DvmDex
      end
    end

    class 3592204 "anonymous4"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum  {
${items}
};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      attribute 12812940 "PTHREAD_MUTEX_ERRORCHECK"
	public type class_ref 3592204 // anonymous4
	init_value " PTHREAD_MUTEX_ERRORCHECK_NP "
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3592332 "ThreadStatus"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}
};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " * Current status; these map to JDWP constants, so don't rearrange them.
 * (If you do alter this, update the strings in dvmDumpThread and the
 * conversion table in VMThread.java.)
 *
 * Note that \"suspended\" is orthogonal to these values (so says JDWP)."
      attribute 12813068 "THREAD_UNDEFINED"
	public type class_ref 3592332 // ThreadStatus
	init_value " -1"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12813196 "THREAD_ZOMBIE"
	public type class_ref 3592332 // ThreadStatus
	init_value " 0"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12813324 "THREAD_RUNNING"
	public type class_ref 3592332 // ThreadStatus
	init_value " 1"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12813452 "THREAD_TIMED_WAIT"
	public type class_ref 3592332 // ThreadStatus
	init_value " 2"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12813580 "THREAD_MONITOR"
	public type class_ref 3592332 // ThreadStatus
	init_value " 3"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12813708 "THREAD_WAIT"
	public type class_ref 3592332 // ThreadStatus
	init_value " 4"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12813836 "THREAD_INITIALIZING"
	public type class_ref 3592332 // ThreadStatus
	init_value " 5"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12813964 "THREAD_STARTING"
	public type class_ref 3592332 // ThreadStatus
	init_value " 6"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12814092 "THREAD_NATIVE"
	public type class_ref 3592332 // ThreadStatus
	init_value " 7"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12814220 "THREAD_VMWAIT"
	public type class_ref 3592332 // ThreadStatus
	init_value " 8"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12814348 "THREAD_SUSPENDED"
	public type class_ref 3592332 // ThreadStatus
	init_value " 9"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3592460 "anonymous5"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum  {
${items}
};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " makes enum compatible with int32_t 
 these match up with JDWP values 
 TERMINATED 
 RUNNABLE or running now 
 TIMED_WAITING in Object.wait() 
 BLOCKED on a monitor 
 WAITING in Object.wait() 
 non-JDWP states 
 allocated, not yet running 
 started, not yet on thread list 
 off in a JNI native method 
 waiting on a VM resource 
 suspended, usually by GC or debugger 
 thread priorities, from java.lang.Thread "
      attribute 12814476 "THREAD_MIN_PRIORITY"
	public type class_ref 3592460 // anonymous5
	init_value " 1"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12814604 "THREAD_NORM_PRIORITY"
	public type class_ref 3592460 // anonymous5
	init_value " 5"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12814732 "THREAD_MAX_PRIORITY"
	public type class_ref 3592460 // anonymous5
	init_value " 10"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3592588 "InterpBreak"
      visibility package stereotype "union"
      cpp_decl "${comment}${template}union ${name} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " * Interpreter control struction.  Packed into a long long to enable
 * atomic updates."
      attribute 12814860 "all"
	volatile public explicit_type "int64_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12814988 "ctl"
	public explicit_type "<complex type>"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}struct  {
        uint16_t   subMode;
        uint8_t    breakFlags;
        int8_t     unused;   /* for future expansion */
#ifndef DVM_NO_ASM_INTERP
        void* curHandlerTable;
#else
        int32_t    unused1;
#endif
    } ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3593484 "InternalThreadStart"
      visibility package stereotype "typedef" explicit_base_type "void"
      cpp_decl "${comment}typedef ${type}* (* ${name})(void* arg);
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " start point for an internal thread; mimics pthread args "
    end

    class 3593612 "InternalStartArgs"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " args for internal thread creation "
      classrelation 6914572 // func (<directional composition>)
	relation 6914444 *-->
	  a role_name "func" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6914572 // func (<directional composition>)
	  b parent class_ref 3593484 // InternalThreadStart
      end

      attribute 12819212 "funcArg"
	public explicit_type "void"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12819340 "name"
	public explicit_type "char"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 6914700 // group (<unidirectional association>)
	relation 6914572 --->
	  a role_name "group" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6914700 // group (<unidirectional association>)
	  b parent class_ref 3581836 // Object
      end

      attribute 12819468 "isDaemon"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12819596 "pThread"
	volatile public type class_ref 3582604 // Thread
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12819724 "pCreateStatus"
	volatile public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3593740 "SuspendCause"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}
};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " * Thread suspend/resume, used by the GC and debugger."
      attribute 12819852 "SUSPEND_NOT"
	public type class_ref 3593740 // SuspendCause
	init_value " 0"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12819980 "SUSPEND_FOR_GC"
	public type class_ref 3593740 // SuspendCause
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12820108 "SUSPEND_FOR_DEBUG"
	public type class_ref 3593740 // SuspendCause
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12820236 "SUSPEND_FOR_DEBUG_EVENT"
	public type class_ref 3593740 // SuspendCause
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12820364 "SUSPEND_FOR_STACK_DUMP"
	public type class_ref 3593740 // SuspendCause
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12820492 "SUSPEND_FOR_DEX_OPT"
	public type class_ref 3593740 // SuspendCause
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12820620 "SUSPEND_FOR_VERIFY"
	public type class_ref 3593740 // SuspendCause
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12820748 "SUSPEND_FOR_HPROF"
	public type class_ref 3593740 // SuspendCause
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12820876 "SUSPEND_FOR_TBL_RESIZE"
	public type class_ref 3593740 // SuspendCause
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12821004 "SUSPEND_FOR_IC_PATCH"
	public type class_ref 3593740 // SuspendCause
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12821132 "SUSPEND_FOR_CC_RESET"
	public type class_ref 3593740 // SuspendCause
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12821260 "SUSPEND_FOR_REFRESH"
	public type class_ref 3593740 // SuspendCause
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3625484 "ScopedCheckJniThreadState"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      operation 15485708 "ScopedCheckJniThreadState"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param inout name "env" explicit_type "JNIEnv"
	cpp_decl "    ${comment}${inline}explicit ${name}${(}${t0} * ${p0}${v0}${)}${volatile}${throw} {
        dvmChangeStatus(NULL, THREAD_RUNNING);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 15485836 "~ScopedCheckJniThreadState"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {
        dvmChangeStatus(NULL, THREAD_NATIVE);
    };
"
	
	
	
	
      end

      operation 15485964 "ScopedCheckJniThreadState"
	private explicit_return_type ""
	nparams 1
	  param in name "" type class_ref 3625484 // ScopedCheckJniThreadState
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}const ${t0} & ${p0}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
	comment " Disallow copy and assignment."
      end

      operation 15486092 "operator ="
	private explicit_return_type "void"
	nparams 1
	  param in name "" type class_ref 3625484 // ScopedCheckJniThreadState
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end
    end

    class 3625612 "ScopedCheck"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      operation 15486220 "ScopedCheck"
	cpp_inline public explicit_return_type ""
	nparams 3
	  param inout name "env" explicit_type "JNIEnv"
	  param in name "flags" explicit_type "int"
	  param in name "functionName" explicit_type "char"
	cpp_decl "    ${comment}${inline}explicit ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, const ${t2} * ${p2}${v2}${)}${volatile}${throw} {
        init(env, flags, functionName, true);
        checkThread(flags);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
	comment " For JNIEnv* functions."
      end

      operation 15486348 "ScopedCheck"
	cpp_inline public explicit_return_type ""
	nparams 2
	  param in name "hasMethod" explicit_type "bool"
	  param in name "functionName" explicit_type "char"
	cpp_decl "    ${comment}${inline}explicit ${name}${(}${t0} ${p0}${v0}, const ${t1} * ${p1}${v1}${)}${volatile}${throw} {
        init(NULL, kFlag_Invocation, functionName, hasMethod);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
	comment " For JavaVM* functions."
      end

      operation 15486476 "checkClassName"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "className" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        if (!dexIsValidClassName(className, false)) {
            ALOGW(\"JNI WARNING: illegal class name '%s' (%s)\", className, mFunctionName);
            ALOGW(\"             (should be formed like 'dalvik/system/DexFile')\");
            ALOGW(\"             or '[Ldalvik/system/DexFile;' or '[[B')\");
            abortMaybe();
        }
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "     * In some circumstances the VM will screen class names, but it doesn't
     * for class lookup.  When things get bounced through a class loader, they
     * can actually get normalized a couple of times; as a result, passing in
     * a class name like \"java.lang.Thread\" instead of \"java/lang/Thread\" will
     * work in some circumstances.
     *
     * This is incorrect and could cause strange behavior or compatibility
     * problems, so we want to screen that out here.
     *
     * We expect \"fully-qualified\" class names, like \"java/lang/Thread\" or
     * \"[Ljava/lang/Object;\"."
      end

      operation 15486604 "checkFieldTypeForGet"
	cpp_inline public explicit_return_type "void"
	nparams 3
	  param in name "fid" explicit_type "jfieldID"
	  param in name "expectedSignature" explicit_type "char"
	  param in name "isStatic" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract} {
        if (fid == NULL) {
            ALOGW(\"JNI WARNING: null jfieldID\");
            showLocation();
            abortMaybe();
        }

        bool printWarn = false;
        Field* field = (Field*) fid;
        const char* actualSignature = field->signature;
        if (*expectedSignature == 'L') {
            // 'actualSignature' has the exact type.
            // We just know we're expecting some kind of reference.
            if (*actualSignature != 'L' && *actualSignature != '[') {
                printWarn = true;
            }
        } else if (*actualSignature != *expectedSignature) {
            printWarn = true;
        }

        if (!printWarn && isStatic && !dvmIsStaticField(field)) {
            if (isStatic) {
                ALOGW(\"JNI WARNING: accessing non-static field %s as static\", field->name);
            } else {
                ALOGW(\"JNI WARNING: accessing static field %s as non-static\", field->name);
            }
            printWarn = true;
        }

        if (printWarn) {
            ALOGW(\"JNI WARNING: %s for field '%s' of expected type %s, got %s\",
                    mFunctionName, field->name, expectedSignature, actualSignature);
            showLocation();
            abortMaybe();
        }
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15486732 "checkFieldTypeForSet"
	cpp_inline public explicit_return_type "void"
	nparams 4
	  param in name "jobj" explicit_type "jobject"
	  param in name "fieldID" explicit_type "jfieldID"
	  param in name "prim" explicit_type "PrimitiveType"
	  param in name "isStatic" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract} {
        if (fieldID == NULL) {
            ALOGW(\"JNI WARNING: null jfieldID\");
            showLocation();
            abortMaybe();
        }

        bool printWarn = false;
        Field* field = (Field*) fieldID;
        if ((field->signature[0] == 'L' || field->signature[0] == '[') && jobj != NULL) {
            ScopedCheckJniThreadState ts(mEnv);
            Object* obj = dvmDecodeIndirectRef(self(), jobj);
            /*
             * If jobj is a weak global ref whose referent has been cleared,
             * obj will be NULL.  Otherwise, obj should always be non-NULL
             * and valid.
             */
            if (obj != NULL && !dvmIsHeapAddress(obj)) {
                ALOGW(\"JNI WARNING: field operation on invalid %s reference (%p)\",
                        indirectRefKindName(jobj), jobj);
                printWarn = true;
            } else {
                ClassObject* fieldClass = dvmFindLoadedClass(field->signature);
                ClassObject* objClass = obj->clazz;

                assert(fieldClass != NULL);
                assert(objClass != NULL);

                if (!dvmInstanceof(objClass, fieldClass)) {
                    ALOGW(\"JNI WARNING: set field '%s' expected type %s, got %s\",
                            field->name, field->signature, objClass->descriptor);
                    printWarn = true;
                }
            }
        } else if (dexGetPrimitiveTypeFromDescriptorChar(field->signature[0]) != prim) {
            ALOGW(\"JNI WARNING: %s for field '%s' expected type %s, got %s\",
                    mFunctionName, field->name, field->signature, primitiveTypeToName(prim));
            printWarn = true;
        } else if (isStatic && !dvmIsStaticField(field)) {
            if (isStatic) {
                ALOGW(\"JNI WARNING: accessing non-static field %s as static\", field->name);
            } else {
                ALOGW(\"JNI WARNING: accessing static field %s as non-static\", field->name);
            }
            printWarn = true;
        }

        if (printWarn) {
            showLocation();
            abortMaybe();
        }
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "     * Verify that the field is of the appropriate type.  If the field has an
     * object type, \"jobj\" is the object we're trying to assign into it.
     *
     * Works for both static and instance fields."
      end

      operation 15486860 "checkInstanceFieldID"
	cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "jobj" explicit_type "jobject"
	  param in name "fieldID" explicit_type "jfieldID"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        ScopedCheckJniThreadState ts(mEnv);

        Object* obj = dvmDecodeIndirectRef(self(), jobj);
        if (!dvmIsHeapAddress(obj)) {
            ALOGW(\"JNI ERROR: field operation on invalid reference (%p)\", jobj);
            dvmAbort();
        }

        /*
         * Check this class and all of its superclasses for a matching field.
         * Don't need to scan interfaces.
         */
        ClassObject* clazz = obj->clazz;
        while (clazz != NULL) {
            if ((InstField*) fieldID >= clazz->ifields &&
                    (InstField*) fieldID < clazz->ifields + clazz->ifieldCount) {
                return;
            }

            clazz = clazz->super;
        }

        ALOGW(\"JNI WARNING: instance fieldID %p not valid for class %s\",
                fieldID, obj->clazz->descriptor);
        showLocation();
        abortMaybe();
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "     * Verify that this instance field ID is valid for this object.
     *
     * Assumes \"jobj\" has already been validated."
      end

      operation 15486988 "checkNonNull"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "ptr" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        if (ptr == NULL) {
            ALOGW(\"JNI WARNING: invalid null pointer (%s)\", mFunctionName);
            abortMaybe();
        }
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "     * Verify that the pointer value is non-NULL."
      end

      operation 15487116 "checkSig"
	cpp_inline public explicit_return_type "void"
	nparams 3
	  param in name "methodID" explicit_type "jmethodID"
	  param in name "expectedType" explicit_type "char"
	  param in name "isStatic" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract} {
        const Method* method = (const Method*) methodID;
        bool printWarn = false;

        if (*expectedType != method->shorty[0]) {
            ALOGW(\"JNI WARNING: expected return type '%s'\", expectedType);
            printWarn = true;
        } else if (isStatic && !dvmIsStaticMethod(method)) {
            if (isStatic) {
                ALOGW(\"JNI WARNING: calling non-static method with static call\");
            } else {
                ALOGW(\"JNI WARNING: calling static method with non-static call\");
            }
            printWarn = true;
        }

        if (printWarn) {
            char* desc = dexProtoCopyMethodDescriptor(&method->prototype);
            ALOGW(\"             calling %s.%s %s\", method->clazz->descriptor, method->name, desc);
            free(desc);
            showLocation();
            abortMaybe();
        }
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "     * Verify that the method's return type matches the type of call.
     * 'expectedType' will be \"L\" for all objects, including arrays."
      end

      operation 15487244 "checkStaticFieldID"
	cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "jclazz" explicit_type "jclass"
	  param in name "fieldID" explicit_type "jfieldID"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        ScopedCheckJniThreadState ts(mEnv);
        ClassObject* clazz = (ClassObject*) dvmDecodeIndirectRef(self(), jclazz);
        StaticField* base = &clazz->sfields[0];
        int fieldCount = clazz->sfieldCount;
        if ((StaticField*) fieldID < base || (StaticField*) fieldID >= base + fieldCount) {
            ALOGW(\"JNI WARNING: static fieldID %p not valid for class %s\",
                    fieldID, clazz->descriptor);
            ALOGW(\"             base=%p count=%d\", base, fieldCount);
            showLocation();
            abortMaybe();
        }
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "     * Verify that this static field ID is valid for this class.
     *
     * Assumes \"jclazz\" has already been validated."
      end

      operation 15487372 "checkStaticMethod"
	cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "jclazz" explicit_type "jclass"
	  param in name "methodID" explicit_type "jmethodID"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        ScopedCheckJniThreadState ts(mEnv);

        ClassObject* clazz = (ClassObject*) dvmDecodeIndirectRef(self(), jclazz);
        const Method* method = (const Method*) methodID;

        if (!dvmInstanceof(clazz, method->clazz)) {
            ALOGW(\"JNI WARNING: can't call static %s.%s on class %s\",
                    method->clazz->descriptor, method->name, clazz->descriptor);
            showLocation();
            // no abort?
        }
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "     * Verify that \"methodID\" is appropriate for \"clazz\".
     *
     * A mismatch isn't dangerous, because the jmethodID defines the class.  In
     * fact, jclazz is unused in the implementation.  It's best if we don't
     * allow bad code in the system though.
     *
     * Instances of \"jclazz\" must be instances of the method's declaring class."
      end

      operation 15487500 "checkVirtualMethod"
	cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "jobj" explicit_type "jobject"
	  param in name "methodID" explicit_type "jmethodID"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        ScopedCheckJniThreadState ts(mEnv);

        Object* obj = dvmDecodeIndirectRef(self(), jobj);
        const Method* method = (const Method*) methodID;

        if (!dvmInstanceof(obj->clazz, method->clazz)) {
            ALOGW(\"JNI WARNING: can't call %s.%s on instance of %s\",
                    method->clazz->descriptor, method->name, obj->clazz->descriptor);
            showLocation();
            abortMaybe();
        }
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "     * Verify that \"methodID\" is appropriate for \"jobj\".
     *
     * Make sure the object is an instance of the method's declaring class.
     * (Note the methodID might point to a declaration in an interface; this
     * will be handled automatically by the instanceof check.)"
      end

      operation 15487628 "check"
	cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "entry" explicit_type "bool"
	  param in name "fmt0" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} * ${p1}${v1}, ...${)}${const}${volatile}${throw}${abstract} {
        va_list ap;

        bool shouldTrace = false;
        const Method* method = NULL;
        if ((gDvm.jniTrace || gDvmJni.logThirdPartyJni) && mHasMethod) {
            // We need to guard some of the invocation interface's calls: a bad caller might
            // use DetachCurrentThread or GetEnv on a thread that's not yet attached.
            if ((mFlags & kFlag_Invocation) == 0 || dvmThreadSelf() != NULL) {
                method = dvmGetCurrentJNIMethod();
            }
        }
        if (method != NULL) {
            // If both \"-Xcheck:jni\" and \"-Xjnitrace:\" are enabled, we print trace messages
            // when a native method that matches the Xjnitrace argument calls a JNI function
            // such as NewByteArray.
            if (gDvm.jniTrace && strstr(method->clazz->descriptor, gDvm.jniTrace) != NULL) {
                shouldTrace = true;
            }
            // If -Xjniopts:logThirdPartyJni is on, we want to log any JNI function calls
            // made by a third-party native method.
            if (gDvmJni.logThirdPartyJni) {
                shouldTrace |= method->shouldTrace;
            }
        }

        if (shouldTrace) {
            va_start(ap, fmt0);
            std::string msg;
            for (const char* fmt = fmt0; *fmt;) {
                char ch = *fmt++;
                if (ch == 'B') { // jbyte
                    jbyte b = va_arg(ap, int);
                    if (b >= 0 && b < 10) {
                        StringAppendF(&msg, \"%d\", b);
                    } else {
                        StringAppendF(&msg, \"%#x (%d)\", b, b);
                    }
                } else if (ch == 'C') { // jchar
                    jchar c = va_arg(ap, int);
                    if (c < 0x7f && c >= ' ') {
                        StringAppendF(&msg, \"U+%x ('%c')\", c, c);
                    } else {
                        StringAppendF(&msg, \"U+%x\", c);
                    }
                } else if (ch == 'F' || ch == 'D') { // jfloat, jdouble
                    StringAppendF(&msg, \"%g\", va_arg(ap, double));
                } else if (ch == 'I' || ch == 'S') { // jint, jshort
                    StringAppendF(&msg, \"%d\", va_arg(ap, int));
                } else if (ch == 'J') { // jlong
                    StringAppendF(&msg, \"%lld\", va_arg(ap, jlong));
                } else if (ch == 'Z') { // jboolean
                    StringAppendF(&msg, \"%s\", va_arg(ap, int) ? \"true\" : \"false\");
                } else if (ch == 'V') { // void
                    msg += \"void\";
                } else if (ch == 'v') { // JavaVM*
                    JavaVM* vm = va_arg(ap, JavaVM*);
                    StringAppendF(&msg, \"(JavaVM*)%p\", vm);
                } else if (ch == 'E') { // JNIEnv*
                    JNIEnv* env = va_arg(ap, JNIEnv*);
                    StringAppendF(&msg, \"(JNIEnv*)%p\", env);
                } else if (ch == 'L' || ch == 'a' || ch == 's') { // jobject, jarray, jstring
                    // For logging purposes, these are identical.
                    jobject o = va_arg(ap, jobject);
                    if (o == NULL) {
                        msg += \"NULL\";
                    } else {
                        StringAppendF(&msg, \"%p\", o);
                    }
                } else if (ch == 'b') { // jboolean (JNI-style)
                    jboolean b = va_arg(ap, int);
                    msg += (b ? \"JNI_TRUE\" : \"JNI_FALSE\");
                } else if (ch == 'c') { // jclass
                    jclass jc = va_arg(ap, jclass);
                    Object* c = dvmDecodeIndirectRef(self(), jc);
                    if (c == NULL) {
                        msg += \"NULL\";
                    } else if (c == kInvalidIndirectRefObject || !dvmIsHeapAddress(c)) {
                        StringAppendF(&msg, \"%p(INVALID)\", jc);
                    } else {
                        std::string className(dvmHumanReadableType(c));
                        StringAppendF(&msg, \"%s\", className.c_str());
                        if (!entry) {
                            StringAppendF(&msg, \" (%p)\", jc);
                        }
                    }
                } else if (ch == 'f') { // jfieldID
                    jfieldID fid = va_arg(ap, jfieldID);
                    std::string name(dvmHumanReadableField((Field*) fid));
                    StringAppendF(&msg, \"%s\", name.c_str());
                    if (!entry) {
                        StringAppendF(&msg, \" (%p)\", fid);
                    }
                } else if (ch == 'z') { // non-negative jsize
                    // You might expect jsize to be size_t, but it's not; it's the same as jint.
                    // We only treat this specially so we can do the non-negative check.
                    // TODO: maybe this wasn't worth it?
                    jint i = va_arg(ap, jint);
                    StringAppendF(&msg, \"%d\", i);
                } else if (ch == 'm') { // jmethodID
                    jmethodID mid = va_arg(ap, jmethodID);
                    std::string name(dvmHumanReadableMethod((Method*) mid, true));
                    StringAppendF(&msg, \"%s\", name.c_str());
                    if (!entry) {
                        StringAppendF(&msg, \" (%p)\", mid);
                    }
                } else if (ch == 'p') { // void* (\"pointer\")
                    void* p = va_arg(ap, void*);
                    if (p == NULL) {
                        msg += \"NULL\";
                    } else {
                        StringAppendF(&msg, \"(void*) %p\", p);
                    }
                } else if (ch == 'r') { // jint (release mode)
                    jint releaseMode = va_arg(ap, jint);
                    if (releaseMode == 0) {
                        msg += \"0\";
                    } else if (releaseMode == JNI_ABORT) {
                        msg += \"JNI_ABORT\";
                    } else if (releaseMode == JNI_COMMIT) {
                        msg += \"JNI_COMMIT\";
                    } else {
                        StringAppendF(&msg, \"invalid release mode %d\", releaseMode);
                    }
                } else if (ch == 'u') { // const char* (modified UTF-8)
                    const char* utf = va_arg(ap, const char*);
                    if (utf == NULL) {
                        msg += \"NULL\";
                    } else {
                        StringAppendF(&msg, \"\\\"%s\\\"\", utf);
                    }
                } else if (ch == '.') {
                    msg += \"...\";
                } else {
                    ALOGE(\"unknown trace format specifier %c\", ch);
                    dvmAbort();
                }
                if (*fmt) {
                    StringAppendF(&msg, \", \");
                }
            }
            va_end(ap);

            if (entry) {
                if (mHasMethod) {
                    std::string methodName(dvmHumanReadableMethod(method, false));
                    ALOGI(\"JNI: %s -> %s(%s)\", methodName.c_str(), mFunctionName, msg.c_str());
                    mIndent = methodName.size() + 1;
                } else {
                    ALOGI(\"JNI: -> %s(%s)\", mFunctionName, msg.c_str());
                    mIndent = 0;
                }
            } else {
                ALOGI(\"JNI: %*s<- %s returned %s\", mIndent, \"\", mFunctionName, msg.c_str());
            }
        }

        // We always do the thorough checks on entry, and never on exit...
        if (entry) {
            va_start(ap, fmt0);
            for (const char* fmt = fmt0; *fmt; ++fmt) {
                char ch = *fmt;
                if (ch == 'a') {
                    checkArray(va_arg(ap, jarray));
                } else if (ch == 'c') {
                    checkClass(va_arg(ap, jclass));
                } else if (ch == 'L') {
                    checkObject(va_arg(ap, jobject));
                } else if (ch == 'r') {
                    checkReleaseMode(va_arg(ap, jint));
                } else if (ch == 's') {
                    checkString(va_arg(ap, jstring));
                } else if (ch == 'u') {
                    if ((mFlags & kFlag_Release) != 0) {
                        checkNonNull(va_arg(ap, const char*));
                    } else {
                        bool nullable = ((mFlags & kFlag_NullableUtf) != 0);
                        checkUtfString(va_arg(ap, const char*), nullable);
                    }
                } else if (ch == 'z') {
                    checkLengthPositive(va_arg(ap, jsize));
                } else if (strchr(\"BCISZbfmpEv\", ch) != NULL) {
                    va_arg(ap, int); // Skip this argument.
                } else if (ch == 'D' || ch == 'F') {
                    va_arg(ap, double); // Skip this argument.
                } else if (ch == 'J') {
                    va_arg(ap, long); // Skip this argument.
                } else if (ch == '.') {
                } else {
                    ALOGE(\"unknown check format specifier %c\", ch);
                    dvmAbort();
                }
            }
            va_end(ap);
        }
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "*
     * The format string is a sequence of the following characters,
     * and must be followed by arguments of the corresponding types
     * in the same order.
     *
     * Java primitive types:
     * B - jbyte
     * C - jchar
     * D - jdouble
     * F - jfloat
     * I - jint
     * J - jlong
     * S - jshort
     * Z - jboolean (shown as true and false)
     * V - void
     *
     * Java reference types:
     * L - jobject
     * a - jarray
     * c - jclass
     * s - jstring
     *
     * JNI types:
     * b - jboolean (shown as JNI_TRUE and JNI_FALSE)
     * f - jfieldID
     * m - jmethodID
     * p - void*
     * r - jint (for release mode arguments)
     * u - const char* (modified UTF-8)
     * z - jsize (for lengths; use i if negative values are okay)
     * v - JavaVM*
     * E - JNIEnv*
     * . - no argument; just print \"...\" (used for varargs JNI calls)
     *
     * Use the kFlag_NullableUtf flag where 'u' field(s) are nullable."
      end

      operation 15487756 "self"
	cpp_inline public return_type class_ref 3582604 // Thread
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return ((JNIEnvExt*) mEnv)->self;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Only safe after checkThread returns."
      end

      attribute 13047180 "mEnv"
	private explicit_type "JNIEnv"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13047308 "mFunctionName"
	const_attribute private explicit_type "char"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13047436 "mFlags"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13047564 "mHasMethod"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13047692 "mIndent"
	private explicit_type "size_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 15487884 "init"
	cpp_inline private explicit_return_type "void"
	nparams 4
	  param inout name "env" explicit_type "JNIEnv"
	  param in name "flags" explicit_type "int"
	  param in name "functionName" explicit_type "char"
	  param in name "hasMethod" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, const ${t2} * ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract} {
        mEnv = env;
        mFlags = flags;

        // Use +6 to drop the leading \"Check_\"...
        mFunctionName = functionName + 6;

        // Set \"hasMethod\" to true if we have a valid thread with a method pointer.
        // We won't have one before attaching a thread, after detaching a thread, or
        // after destroying the VM.
        mHasMethod = hasMethod;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15488012 "checkArray"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param in name "jarr" explicit_type "jarray"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        if (jarr == NULL) {
            ALOGW(\"JNI WARNING: received null array\");
            showLocation();
            abortMaybe();
            return;
        }

        ScopedCheckJniThreadState ts(mEnv);
        bool printWarn = false;

        Object* obj = dvmDecodeIndirectRef(self(), jarr);
        if (!dvmIsHeapAddress(obj)) {
            ALOGW(\"JNI WARNING: jarray is an invalid %s reference (%p)\",
            indirectRefKindName(jarr), jarr);
            printWarn = true;
        } else if (obj->clazz->descriptor[0] != '[') {
            ALOGW(\"JNI WARNING: jarray arg has wrong type (expected array, got %s)\",
            obj->clazz->descriptor);
            printWarn = true;
        }

        if (printWarn) {
            showLocation();
            abortMaybe();
        }
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "     * Verify that \"array\" is non-NULL and points to an Array object.
     *
     * Since we're dealing with objects, switch to \"running\" mode."
      end

      operation 15488140 "checkClass"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param in name "c" explicit_type "jclass"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        checkInstance(c, gDvm.classJavaLangClass, \"jclass\");
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15488268 "checkLengthPositive"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param in name "length" explicit_type "jsize"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        if (length < 0) {
            ALOGW(\"JNI WARNING: negative jsize (%s)\", mFunctionName);
            abortMaybe();
        }
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15488396 "checkObject"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param in name "jobj" explicit_type "jobject"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        if (jobj == NULL) {
            return;
        }

        ScopedCheckJniThreadState ts(mEnv);

        bool printWarn = false;
        if (dvmGetJNIRefType(self(), jobj) == JNIInvalidRefType) {
            ALOGW(\"JNI WARNING: %p is not a valid JNI reference\", jobj);
            printWarn = true;
        } else {
            Object* obj = dvmDecodeIndirectRef(self(), jobj);
            if (obj == kInvalidIndirectRefObject) {
                ALOGW(\"JNI WARNING: native code passing in invalid reference %p\", jobj);
                printWarn = true;
            } else if (obj != NULL && !dvmIsHeapAddress(obj)) {
                // TODO: when we remove workAroundAppJniBugs, this should be impossible.
                ALOGW(\"JNI WARNING: native code passing in reference to invalid object %p %p\",
                        jobj, obj);
                printWarn = true;
            }
        }

        if (printWarn) {
            showLocation();
            abortMaybe();
        }
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "     * Verify that \"jobj\" is a valid object, and that it's an object that JNI
     * is allowed to know about.  We allow NULL references.
     *
     * Switches to \"running\" mode before performing checks."
      end

      operation 15488524 "checkReleaseMode"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param in name "mode" explicit_type "jint"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        if (mode != 0 && mode != JNI_COMMIT && mode != JNI_ABORT) {
            ALOGW(\"JNI WARNING: bad value for mode (%d) (%s)\", mode, mFunctionName);
            abortMaybe();
        }
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "     * Verify that the \"mode\" argument passed to a primitive array Release
     * function is one of the valid values."
      end

      operation 15488652 "checkString"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param in name "s" explicit_type "jstring"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        checkInstance(s, gDvm.classJavaLangString, \"jstring\");
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15488780 "checkThread"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        // Get the *correct* JNIEnv by going through our TLS pointer.
        JNIEnvExt* threadEnv = dvmGetJNIEnvForThread();

        /*
         * Verify that the current thread is (a) attached and (b) associated with
         * this particular instance of JNIEnv.
         */
        bool printWarn = false;
        if (threadEnv == NULL) {
            ALOGE(\"JNI ERROR: non-VM thread making JNI calls\");
            // don't set printWarn -- it'll try to call showLocation()
            dvmAbort();
        } else if ((JNIEnvExt*) mEnv != threadEnv) {
            if (dvmThreadSelf()->threadId != threadEnv->envThreadId) {
                ALOGE(\"JNI: threadEnv != thread->env?\");
                dvmAbort();
            }

            ALOGW(\"JNI WARNING: threadid=%d using env from threadid=%d\",
                    threadEnv->envThreadId, ((JNIEnvExt*) mEnv)->envThreadId);
            printWarn = true;

            // If we're keeping broken code limping along, we need to suppress the abort...
            if (gDvmJni.workAroundAppJniBugs) {
                printWarn = false;
            }

            /* this is a bad idea -- need to throw as we exit, or abort func */
            //dvmThrowRuntimeException(\"invalid use of JNI env ptr\");
        } else if (((JNIEnvExt*) mEnv)->self != dvmThreadSelf()) {
            /* correct JNIEnv*; make sure the \"self\" pointer is correct */
            ALOGE(\"JNI ERROR: env->self != thread-self (%p vs. %p)\",
                    ((JNIEnvExt*) mEnv)->self, dvmThreadSelf());
            dvmAbort();
        }

        /*
         * Verify that, if this thread previously made a critical \"get\" call, we
         * do the corresponding \"release\" call before we try anything else.
         */
        switch (flags & kFlag_CritMask) {
        case kFlag_CritOkay:    // okay to call this method
            break;
        case kFlag_CritBad:     // not okay to call
            if (threadEnv->critical) {
                ALOGW(\"JNI WARNING: threadid=%d using JNI after critical get\",
                        threadEnv->envThreadId);
                printWarn = true;
            }
            break;
        case kFlag_CritGet:     // this is a \"get\" call
            /* don't check here; we allow nested gets */
            threadEnv->critical++;
            break;
        case kFlag_CritRelease: // this is a \"release\" call
            threadEnv->critical--;
            if (threadEnv->critical < 0) {
                ALOGW(\"JNI WARNING: threadid=%d called too many crit releases\",
                        threadEnv->envThreadId);
                printWarn = true;
            }
            break;
        default:
            assert(false);
        }

        /*
         * Verify that, if an exception has been raised, the native code doesn't
         * make any JNI calls other than the Exception* methods.
         */
        bool printException = false;
        if ((flags & kFlag_ExcepOkay) == 0 && dvmCheckException(dvmThreadSelf())) {
            ALOGW(\"JNI WARNING: JNI method called with exception pending\");
            printWarn = true;
            printException = true;
        }

        if (printWarn) {
            showLocation();
        }
        if (printException) {
            ALOGW(\"Pending exception is:\");
            dvmLogExceptionStackTrace();
        }
        if (printWarn) {
            abortMaybe();
        }
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15488908 "checkUtfString"
	cpp_inline private explicit_return_type "void"
	nparams 2
	  param in name "bytes" explicit_type "char"
	  param in name "nullable" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        if (bytes == NULL) {
            if (!nullable) {
                ALOGW(\"JNI WARNING: non-nullable const char* was NULL\");
                showLocation();
                abortMaybe();
            }
            return;
        }

        const char* errorKind = NULL;
        u1 utf8 = checkUtfBytes(bytes, &errorKind);
        if (errorKind != NULL) {
            ALOGW(\"JNI WARNING: input is not valid Modified UTF-8: illegal %s byte %#x\", errorKind, utf8);
            ALOGW(\"             string: '%s'\", bytes);
            showLocation();
            abortMaybe();
        }
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "     * Verify that \"bytes\" points to valid \"modified UTF-8\" data."
      end

      operation 15489036 "checkInstance"
	cpp_inline private explicit_return_type "void"
	nparams 3
	  param in name "jobj" explicit_type "jobject"
	  param inout name "expectedClass" type class_ref 3582988 // ClassObject
	  param in name "argName" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}, const ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract} {
        if (jobj == NULL) {
            ALOGW(\"JNI WARNING: received null %s\", argName);
            showLocation();
            abortMaybe();
            return;
        }

        ScopedCheckJniThreadState ts(mEnv);
        bool printWarn = false;

        Object* obj = dvmDecodeIndirectRef(self(), jobj);
        if (!dvmIsHeapAddress(obj)) {
            ALOGW(\"JNI WARNING: %s is an invalid %s reference (%p)\",
                    argName, indirectRefKindName(jobj), jobj);
            printWarn = true;
        } else if (obj->clazz != expectedClass) {
            ALOGW(\"JNI WARNING: %s arg has wrong type (expected %s, got %s)\",
                    argName, expectedClass->descriptor, obj->clazz->descriptor);
            printWarn = true;
        }

        if (printWarn) {
            showLocation();
            abortMaybe();
        }
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "     * Verify that \"jobj\" is a valid non-NULL object reference, and points to
     * an instance of expectedClass.
     *
     * Because we're looking at an object on the GC heap, we have to switch
     * to \"running\" mode before doing the checks."
      end

      operation 15489164 "checkUtfBytes"
	class_operation cpp_inline private return_type class_ref 3580812 // u1
	nparams 2
	  param in name "bytes" explicit_type "char"
	  param in name "errorKind" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, const ${t1} * * ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        while (*bytes != '\\0') {
            u1 utf8 = *(bytes++);
            // Switch on the high four bits.
            switch (utf8 >> 4) {
            case 0x00:
            case 0x01:
            case 0x02:
            case 0x03:
            case 0x04:
            case 0x05:
            case 0x06:
            case 0x07:
                // Bit pattern 0xxx. No need for any extra bytes.
                break;
            case 0x08:
            case 0x09:
            case 0x0a:
            case 0x0b:
            case 0x0f:
                /*
                 * Bit pattern 10xx or 1111, which are illegal start bytes.
                 * Note: 1111 is valid for normal UTF-8, but not the
                 * modified UTF-8 used here.
                 */
                *errorKind = \"start\";
                return utf8;
            case 0x0e:
                // Bit pattern 1110, so there are two additional bytes.
                utf8 = *(bytes++);
                if ((utf8 & 0xc0) != 0x80) {
                    *errorKind = \"continuation\";
                    return utf8;
                }
                // Fall through to take care of the final byte.
            case 0x0c:
            case 0x0d:
                // Bit pattern 110x, so there is one additional byte.
                utf8 = *(bytes++);
                if ((utf8 & 0xc0) != 0x80) {
                    *errorKind = \"continuation\";
                    return utf8;
                }
                break;
            }
        }
        return 0;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15489292 "primitiveTypeToName"
	class_operation cpp_inline private explicit_return_type "char"
	nparams 1
	  param in name "primType" explicit_type "PrimitiveType"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        switch (primType) {
        case PRIM_VOID:    return \"void\";
        case PRIM_BOOLEAN: return \"boolean\";
        case PRIM_BYTE:    return \"byte\";
        case PRIM_SHORT:   return \"short\";
        case PRIM_CHAR:    return \"char\";
        case PRIM_INT:     return \"int\";
        case PRIM_LONG:    return \"long\";
        case PRIM_FLOAT:   return \"float\";
        case PRIM_DOUBLE:  return \"double\";
        case PRIM_NOT:     return \"Object/array\";
        default:           return \"???\";
        }
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "*
     * Returns a human-readable name for the given primitive type."
      end

      operation 15489420 "showLocation"
	cpp_inline private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        const Method* method = dvmGetCurrentJNIMethod();
        char* desc = dexProtoCopyMethodDescriptor(&method->prototype);
        ALOGW(\"             in %s.%s:%s (%s)\", method->clazz->descriptor, method->name, desc, mFunctionName);
        free(desc);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15489548 "ScopedCheck"
	private explicit_return_type ""
	nparams 1
	  param in name "" type class_ref 3625612 // ScopedCheck
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}const ${t0} & ${p0}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
	comment " Disallow copy and assignment."
      end

      operation 15489676 "operator ="
	private explicit_return_type "void"
	nparams 1
	  param in name "" type class_ref 3625612 // ScopedCheck
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end
    end

    class 3625740 "GuardedCopy"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " this gets tucked in at the start of the buffer; struct size must be even "
      classrelation 6965388 // magic (<directional composition>)
	relation 6965260 *-->
	  a role_name "magic" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6965388 // magic (<directional composition>)
	  b parent class_ref 3580300 // u4
      end

      attribute 13047820 "adler"
	public explicit_type "uLong"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13047948 "originalLen"
	public explicit_type "size_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13048076 "originalPtr"
	const_attribute public explicit_type "void"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 15489804 "fromData"
	class_operation cpp_inline public return_type class_ref 3625740 // GuardedCopy
	nparams 1
	  param in name "dataBuf" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        return reinterpret_cast<const GuardedCopy*>(actualBuffer(dataBuf));
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " find the GuardedCopy given the pointer into the \"live\" data "
      end

      operation 15489932 "create"
	class_operation cpp_inline public explicit_return_type "void"
	nparams 3
	  param in name "buf" explicit_type "void"
	  param in name "len" explicit_type "size_t"
	  param in name "modOkay" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract} {
        size_t newLen = actualLength(len);
        u1* newBuf = debugAlloc(newLen);

        /* fill it in with a pattern */
        u2* pat = (u2*) newBuf;
        for (size_t i = 0; i < newLen / 2; i++) {
            *pat++ = kGuardPattern;
        }

        /* copy the data in; note \"len\" could be zero */
        memcpy(newBuf + kGuardLen / 2, buf, len);

        /* if modification is not expected, grab a checksum */
        uLong adler = 0;
        if (!modOkay) {
            adler = adler32(0L, Z_NULL, 0);
            adler = adler32(adler, (const Bytef*)buf, len);
            *(uLong*)newBuf = adler;
        }

        GuardedCopy* pExtra = reinterpret_cast<GuardedCopy*>(newBuf);
        pExtra->magic = kGuardMagic;
        pExtra->adler = adler;
        pExtra->originalPtr = buf;
        pExtra->originalLen = len;

        return newBuf + kGuardLen / 2;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "     * Create an over-sized buffer to hold the contents of \"buf\".  Copy it in,
     * filling in the area around it with guard data.
     *
     * We use a 16-bit pattern to make a rogue memset less likely to elude us."
      end

      operation 15490060 "destroy"
	class_operation cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "dataBuf" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        const GuardedCopy* pExtra = GuardedCopy::fromData(dataBuf);
        void* originalPtr = (void*) pExtra->originalPtr;
        size_t len = pExtra->originalLen;
        debugFree(dataBuf, len);
        return originalPtr;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "     * Free up the guard buffer, scrub it, and return the original pointer."
      end

      operation 15490188 "check"
	class_operation cpp_inline public explicit_return_type "bool"
	nparams 2
	  param in name "dataBuf" explicit_type "void"
	  param in name "modOkay" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        static const u4 kMagicCmp = kGuardMagic;
        const u1* fullBuf = actualBuffer(dataBuf);
        const GuardedCopy* pExtra = GuardedCopy::fromData(dataBuf);

        /*
         * Before we do anything with \"pExtra\", check the magic number.  We
         * do the check with memcmp rather than \"==\" in case the pointer is
         * unaligned.  If it points to completely bogus memory we're going
         * to crash, but there's no easy way around that.
         */
        if (memcmp(&pExtra->magic, &kMagicCmp, 4) != 0) {
            u1 buf[4];
            memcpy(buf, &pExtra->magic, 4);
            ALOGE(\"JNI: guard magic does not match (found 0x%02x%02x%02x%02x) -- incorrect data pointer %p?\",
                    buf[3], buf[2], buf[1], buf[0], dataBuf); /* assume little endian */
            return false;
        }

        size_t len = pExtra->originalLen;

        /* check bottom half of guard; skip over optional checksum storage */
        const u2* pat = (u2*) fullBuf;
        for (size_t i = sizeof(GuardedCopy) / 2; i < (kGuardLen / 2 - sizeof(GuardedCopy)) / 2; i++) {
            if (pat[i] != kGuardPattern) {
                ALOGE(\"JNI: guard pattern(1) disturbed at %p + %d\", fullBuf, i*2);
                return false;
            }
        }

        int offset = kGuardLen / 2 + len;
        if (offset & 0x01) {
            /* odd byte; expected value depends on endian-ness of host */
            const u2 patSample = kGuardPattern;
            if (fullBuf[offset] != ((const u1*) &patSample)[1]) {
                ALOGE(\"JNI: guard pattern disturbed in odd byte after %p (+%d) 0x%02x 0x%02x\",
                        fullBuf, offset, fullBuf[offset], ((const u1*) &patSample)[1]);
                return false;
            }
            offset++;
        }

        /* check top half of guard */
        pat = (u2*) (fullBuf + offset);
        for (size_t i = 0; i < kGuardLen / 4; i++) {
            if (pat[i] != kGuardPattern) {
                ALOGE(\"JNI: guard pattern(2) disturbed at %p + %d\", fullBuf, offset + i*2);
                return false;
            }
        }

        /*
         * If modification is not expected, verify checksum.  Strictly speaking
         * this is wrong: if we told the client that we made a copy, there's no
         * reason they can't alter the buffer.
         */
        if (!modOkay) {
            uLong adler = adler32(0L, Z_NULL, 0);
            adler = adler32(adler, (const Bytef*)dataBuf, len);
            if (pExtra->adler != adler) {
                ALOGE(\"JNI: buffer modified (0x%08lx vs 0x%08lx) at addr %p\",
                        pExtra->adler, adler, dataBuf);
                return false;
            }
        }

        return true;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "     * Verify the guard area and, if \"modOkay\" is false, that the data itself
     * has not been altered.
     *
     * The caller has already checked that \"dataBuf\" is non-NULL."
      end

      operation 15490316 "debugAlloc"
	class_operation cpp_inline private return_type class_ref 3580812 // u1
	nparams 1
	  param in name "len" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        void* result = mmap(NULL, len, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANON, -1, 0);
        if (result == MAP_FAILED) {
            ALOGE(\"GuardedCopy::create mmap(%d) failed: %s\", len, strerror(errno));
            dvmAbort();
        }
        return reinterpret_cast<u1*>(result);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15490444 "debugFree"
	class_operation cpp_inline private explicit_return_type "void"
	nparams 2
	  param inout name "dataBuf" explicit_type "void"
	  param in name "len" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        u1* fullBuf = actualBuffer(dataBuf);
        size_t totalByteCount = actualLength(len);
        // TODO: we could mprotect instead, and keep the allocation around for a while.
        // This would be even more expensive, but it might catch more errors.
        // if (mprotect(fullBuf, totalByteCount, PROT_NONE) != 0) {
        //     ALOGW(\"mprotect(PROT_NONE) failed: %s\", strerror(errno));
        // }
        if (munmap(fullBuf, totalByteCount) != 0) {
            ALOGW(\"munmap failed: %s\", strerror(errno));
            dvmAbort();
        }
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15490572 "actualBuffer"
	class_operation cpp_inline private return_type class_ref 3580812 // u1
	nparams 1
	  param in name "dataBuf" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        return reinterpret_cast<const u1*>(dataBuf) - kGuardLen / 2;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15490700 "actualBuffer"
	class_operation cpp_inline private return_type class_ref 3580812 // u1
	nparams 1
	  param inout name "dataBuf" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        return reinterpret_cast<u1*>(dataBuf) - kGuardLen / 2;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15490828 "actualLength"
	class_operation cpp_inline private explicit_return_type "size_t"
	nparams 1
	  param in name "length" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        return (length + kGuardLen + 1) & ~0x01;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Underlying length of a user allocation of 'length' bytes."
      end
    end

    class 3625868 "RegistryType"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}
};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " keep track of type, in case we need to distinguish them someday "
      attribute 13048204 "kObjectId"
	public type class_ref 3625868 // RegistryType
	init_value " 0xc1"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13048332 "kRefTypeId"
	public type class_ref 3625868 // RegistryType
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3625996 "DebugCallbackContext"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      attribute 13048460 "numItems"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 6965516 // pReply (<unidirectional association>)
	relation 6965388 --->
	  a role_name "pReply" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6965516 // pReply (<unidirectional association>)
	  b parent class_ref 3623564 // ExpandBuf
      end

      attribute 13048588 "withGeneric"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3626124 "AddressSetContext"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " for dvmAddressSetForLine"
      attribute 13048716 "lastAddressValid"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 6965644 // lastAddress (<directional composition>)
	relation 6965516 *-->
	  a role_name "lastAddress" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6965644 // lastAddress (<directional composition>)
	  b parent class_ref 3580300 // u4
      end

      classrelation 6965772 // lineNum (<directional composition>)
	relation 6965644 *-->
	  a role_name "lineNum" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6965772 // lineNum (<directional composition>)
	  b parent class_ref 3580300 // u4
      end

      classrelation 6965900 // pSet (<unidirectional association>)
	relation 6965772 --->
	  a role_name "pSet" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6965900 // pSet (<unidirectional association>)
	  b parent class_ref 3582092 // AddressSet
      end
    end

    class 3626252 "ScopedShutdown"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      operation 15490956 "ScopedShutdown"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} : armed_(true) {
    };
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 15491084 "~ScopedShutdown"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {
        if (armed_) {
            dvmShutdown();
        }
    };
"
	
	
	
	
      end

      operation 15491212 "disarm"
	cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        armed_ = false;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 13048844 "armed_"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3626380 "Convert32"
      visibility package stereotype "union"
      cpp_decl "${comment}${template}union ${name} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " * ===========================================================================
 *      java.lang.Math
 * ==========================================================================="
      classrelation 6966028 // arg (<directional composition>)
	relation 6965900 *-->
	  a role_name "arg" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6966028 // arg (<directional composition>)
	  b parent class_ref 3580300 // u4
      end

      attribute 13048972 "ff"
	public explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3626508 "Convert64"
      visibility package stereotype "union"
      cpp_decl "${comment}${template}union ${name} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 6966156 // arg (<directional composition>)
	relation 6966028 *-->
	  a role_name "arg" multiplicity "[2]" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6966156 // arg (<directional composition>)
	  b parent class_ref 3580300 // u4
      end

      classrelation 6966284 // ll (<directional composition>)
	relation 6966156 *-->
	  a role_name "ll" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6966284 // ll (<directional composition>)
	  b parent class_ref 3581580 // s8
      end

      attribute 13049100 "dd"
	public explicit_type "double"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3626636 "ScopedJniThreadState"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " * ===========================================================================
 *      Utility functions
 * ===========================================================================
 

 * Entry/exit processing for all JNI calls.
 *
 * We skip the (curiously expensive) thread-local storage lookup on our Thread*.
 * If the caller has passed the wrong JNIEnv in, we're going to be accessing unsynchronized
 * structures from more than one thread, and things are going to fail
 * in bizarre ways.  This is only sensible if the native code has been
 * fully exercised with CheckJNI enabled."
      operation 15491340 "ScopedJniThreadState"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param inout name "env" explicit_type "JNIEnv"
	cpp_decl "    ${comment}${inline}explicit ${name}${(}${t0} * ${p0}${v0}${)}${volatile}${throw} {
        mSelf = ((JNIEnvExt*) env)->self;

        if (UNLIKELY(gDvmJni.workAroundAppJniBugs)) {
            // When emulating direct pointers with indirect references, it's critical
            // that we use the correct per-thread indirect reference table.
            Thread* self = gDvmJni.workAroundAppJniBugs ? dvmThreadSelf() : mSelf;
            if (self != mSelf) {
                ALOGE(\"JNI ERROR: env->self != thread-self (%p vs. %p); auto-correcting\", mSelf, self);
                mSelf = self;
            }
        }

        CHECK_STACK_SUM(mSelf);
        dvmChangeStatus(mSelf, THREAD_RUNNING);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 15491468 "~ScopedJniThreadState"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {
        dvmChangeStatus(mSelf, THREAD_NATIVE);
        COMPUTE_STACK_SUM(mSelf);
    };
"
	
	
	
	
      end

      operation 15491596 "self"
	cpp_inline public return_type class_ref 3582604 // Thread
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return mSelf;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 6966412 // mSelf (<unidirectional association>)
	relation 6966284 --->
	  a role_name "mSelf" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6966412 // mSelf (<unidirectional association>)
	  b parent class_ref 3582604 // Thread
      end

      operation 15491724 "ScopedJniThreadState"
	private explicit_return_type ""
	nparams 1
	  param in name "" type class_ref 3626636 // ScopedJniThreadState
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}const ${t0} & ${p0}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
	comment " Disallow copy and assignment."
      end

      operation 15491852 "operator ="
	private explicit_return_type "void"
	nparams 1
	  param in name "" type class_ref 3626636 // ScopedJniThreadState
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end
    end

    class 3626764 "OnLoadState"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}
};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " * ===========================================================================
 *      Native shared library support
 * ===========================================================================
 
 TODO? if a ClassLoader is unloaded, we need to unload all DLLs that
 are associated with it.  (Or not -- can't determine if native code
 is still using parts of it.)"
      attribute 13049228 "kOnLoadPending"
	public type class_ref 3626764 // OnLoadState
	init_value " 0"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13049356 "kOnLoadFailed"
	public type class_ref 3626764 // OnLoadState
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13049484 "kOnLoadOkay"
	public type class_ref 3626764 // OnLoadState
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3626892 "SharedLib"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " initial state, must be zero 

 * We add one of these to the hash table for every library we load.  The
 * hash is on the \"pathName\" field."
      attribute 13049612 "pathName"
	public explicit_type "char"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " absolute path to library "
      end

      attribute 13049740 "handle"
	public explicit_type "void"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " from dlopen "
      end

      classrelation 6966540 // classLoader (<unidirectional association>)
	relation 6966412 --->
	  a role_name "classLoader" public
	    comment " ClassLoader we are associated with "
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6966540 // classLoader (<unidirectional association>)
	  b parent class_ref 3581836 // Object
      end

      attribute 13049868 "onLoadLock"
	public explicit_type "pthread_mutex_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " guards remaining items "
      end

      attribute 13049996 "onLoadCond"
	public explicit_type "pthread_cond_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " wait for JNI_OnLoad in other thread "
      end

      classrelation 6966668 // onLoadThreadId (<directional composition>)
	relation 6966540 *-->
	  a role_name "onLoadThreadId" public
	    comment " recursive invocation guard "
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6966668 // onLoadThreadId (<directional composition>)
	  b parent class_ref 3580300 // u4
      end

      classrelation 6966796 // onLoadResult (<directional composition>)
	relation 6966668 *-->
	  a role_name "onLoadResult" public
	    comment " result of earlier JNI_OnLoad "
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6966796 // onLoadResult (<directional composition>)
	  b parent class_ref 3626764 // OnLoadState
      end
    end

    class 3627020 "OnLoadFunc"
      visibility package stereotype "typedef" explicit_base_type "int"
      cpp_decl "${comment}typedef ${type}(* ${name})(JavaVM*, void*);
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
    end

    class 3627148 "BufferedData"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " * Hold some data."
      attribute 13050252 "buf"
	public explicit_type "char"
	multiplicity "[kMaxLine+1]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13050380 "count"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3627276 "SchedulerStats"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      attribute 13050764 "policy"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13050892 "priority"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13051020 "group"
	public explicit_type "char"
	multiplicity "[32]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end
  end

  deploymentview 337292 "vm"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 1460364 "AtomicCache"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3580172 // AtomicCacheEntry
	class_ref 3580428 // AtomicCache
      end
    end

    artifact 1460492 "BitVector"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3580556 // BitVector
	class_ref 3580684 // BitVectorIterator
      end
    end

    artifact 1460620 "Common"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3580812 // u1
	class_ref 3580940 // u2
	class_ref 3580300 // u4
	class_ref 3581068 // u8
	class_ref 3581196 // s1
	class_ref 3581324 // s2
	class_ref 3581452 // s4
	class_ref 3581580 // s8
	class_ref 3581708 // JValue
      end
    end

    artifact 1460748 "Debugger"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3582092 // AddressSet
	class_ref 3582220 // StepControl
	class_ref 3582860 // DebugInvokeReq
	class_ref 3583372 // anonymous1
      end
    end

    artifact 1460876 "DvmDex"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3583500 // DvmDex
      end
    end

    artifact 1461004 "Globals"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3583884 // AssertionControl
	class_ref 3584012 // RegisterMapMode
	class_ref 3584140 // ProfilerClockSource
	class_ref 3584268 // DvmGlobals
	class_ref 3586956 // TraceProfilingModes
	class_ref 3587084 // NoChainExits
	class_ref 3587212 // DvmJitGlobals
	class_ref 3587980 // DvmJniGlobals
      end
    end

    artifact 1461132 "Hash"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3588108 // HashCompute
	class_ref 3588236 // HashCompareFunc
	class_ref 3588364 // HashFreeFunc
	class_ref 3588492 // HashForeachFunc
	class_ref 3588620 // HashForeachRemoveFunc
	class_ref 3588748 // HashEntry
	class_ref 3585036 // HashTable
	class_ref 3588876 // HashIter
	class_ref 3589004 // HashCalcFunc
      end
    end

    artifact 1461260 "IndirectRefTable"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3589132 // IndirectRef
	class_ref 3589260 // IndirectRefKind
	class_ref 3589388 // IndirectRefSlot
	class_ref 3589516 // IRTSegmentState
	class_ref 3589644 // iref_iterator
	class_ref 3585292 // IndirectRefTable
      end
    end

    artifact 1461388 "InlineNative"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3589900 // InlineOp4Func
	class_ref 3590028 // InlineOperation
	class_ref 3590156 // NativeInlineOps
      end
    end

    artifact 1461516 "JarFile"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3590284 // JarFile
	class_ref 3590412 // DexCacheStatus
      end
    end

    artifact 1461644 "JniInternal"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3590540 // JNIEnvExt
	class_ref 3590668 // JavaVMExt
	class_ref 3590796 // DalvikJniReturnType
      end
    end

    artifact 1461772 "LinearAlloc"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3585932 // LinearAllocHdr
      end
    end

    artifact 1461900 "Misc"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3590924 // HexDumpMode
	class_ref 3591052 // DebugTargetKind
	class_ref 3591180 // DebugOutputTarget
	class_ref 3591308 // ProcStatData
      end
    end

    artifact 1462028 "Native"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3591436 // DalvikNativeMethod
	class_ref 3591692 // DalvikNativeClass
      end
    end

    artifact 1462156 "Profile"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3586444 // MethodTraceState
	class_ref 3586572 // AllocProfState
	class_ref 3591820 // anonymous2
	class_ref 3591948 // anonymous3
      end
    end

    artifact 1462284 "RawDexFile"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3592076 // RawDexFile
      end
    end

    artifact 1462412 "ReferenceTable"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3585420 // ReferenceTable
      end
    end

    artifact 1462540 "Thread"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3592204 // anonymous4
	class_ref 3592332 // ThreadStatus
	class_ref 3592460 // anonymous5
	class_ref 3592588 // InterpBreak
	class_ref 3582604 // Thread
	class_ref 3593484 // InternalThreadStart
	class_ref 3593612 // InternalStartArgs
	class_ref 3593740 // SuspendCause
      end
    end

    artifact 1468300 "AllocRecord"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3586316 // AllocRecord
      end
    end

    artifact 1468428 "ScopedCheckJniThreadState"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3625484 // ScopedCheckJniThreadState
      end
    end

    artifact 1468556 "ScopedCheck"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3625612 // ScopedCheck
      end
    end

    artifact 1468684 "GuardedCopy"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3625740 // GuardedCopy
      end
    end

    artifact 1468812 "RegistryType"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3625868 // RegistryType
      end
    end

    artifact 1468940 "DebugCallbackContext"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3625996 // DebugCallbackContext
      end
    end

    artifact 1469068 "AddressSetContext"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3626124 // AddressSetContext
      end
    end

    artifact 1469196 "ScopedShutdown"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3626252 // ScopedShutdown
      end
    end

    artifact 1469324 "Convert32"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3626380 // Convert32
      end
    end

    artifact 1469452 "Convert64"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3626508 // Convert64
      end
    end

    artifact 1469580 "ScopedJniThreadState"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3626636 // ScopedJniThreadState
      end
    end

    artifact 1469708 "OnLoadState"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3626764 // OnLoadState
      end
    end

    artifact 1469836 "SharedLib"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3626892 // SharedLib
      end
    end

    artifact 1469964 "OnLoadFunc"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3627020 // OnLoadFunc
      end
    end

    artifact 1470092 "PointerSet"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3586700 // PointerSet
      end
    end

    artifact 1470220 "BufferedData"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3627148 // BufferedData
      end
    end

    artifact 1470348 "Monitor"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3585676 // Monitor
      end
    end

    artifact 1470476 "SchedulerStats"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3627276 // SchedulerStats
      end
    end
  end

  package_ref 414476 // oo

  package_ref 414604 // compiler

  package_ref 414988 // jdwp

  package_ref 415116 // analysis

  package_ref 415244 // interp

  package_ref 415372 // alloc

  package_ref 416012 // hprof

  package_ref 416140 // reflect

  package_ref 416268 // native

  package_ref 416396 // test
end
