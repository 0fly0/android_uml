class VideoViewTest
!!!12738956.java!!!	setOnInfoListener(inout listener : OnInfoListener) : void
        try {
            Class cl = mVideoView.getClass();
            Log.i(TAG, "Got class: " + cl);
            Method meth = null;

            try {
                Class paramtypes[] = new Class[1];
                paramtypes[0] = Class.forName(
                    "android.media.MediaPlayer$OnInfoListener");
                meth = cl.getMethod("setOnInfoListener", paramtypes);
            } catch(Throwable e) {
                Log.i(TAG, "getMethod " + e);
            }

            Log.i(TAG, "Got method:" + meth);

            if (meth != null) {
                Object[] args = { listener };
                meth.invoke(mVideoView, args);
            }
        }
        catch (Throwable e) {
            Log.i(TAG, "Error: " + e);
        }
!!!12739084.java!!!	onCreate(inout savedInstanceState : Bundle) : void
        super.onCreate(savedInstanceState);
        setContentView(R.layout.video_activity);

        Window w = getWindow();
        w.setBackgroundDrawable(new ColorDrawable(0));

        mVideoView  = (MyVideoView) findViewById(R.id.video);
        mVideoView.setOnPreparedListener(new PrepareListener());
        setOnInfoListener(new InfoListener());

        MediaController c = new MediaController(this, false);
        mVideoView.setMediaController(c);
        mVideoView.setOwner(this);

        mUpdateHandler = new Handler();
        mUpdateRunnable = new ProgressUpdater();

        String errorString = null;
        Intent intent = getIntent();
        Uri contentUri;
        if (intent == null || (contentUri = intent.getData()) == null ||
          !contentUri.isAbsolute()) {
            errorString = "Invalid intent";
        } else {
            String fileName = contentUri.getLastPathSegment();
            if (fileName != null && fileName.endsWith(".url")) {
                // This is a url file, fetch it then play it
                mDownload = (FileDownloadTask) new FileDownloadTask().execute(contentUri);
            } else {
                HashMap<String, String> headers = new HashMap<String, String>();
                headers.put("X-Gtv-TestHeader", "Some value");
                // This is an undocumented method that will be un-hidden
                // in ICS.  For now if we need customer headers in media
                // requests, we need to call this.
                mVideoView.setVideoURI(contentUri, headers);
                mLooping = intent.getBooleanExtra(LOOPING_EXTRA_NAME, false);
            }
        }
        if (errorString != null) {
            ShowErrorDialog(errorString);
        }
!!!12739212.java!!!	onResume() : void
        super.onResume();
        if (mDownload == null)
            mVideoView.start();
!!!12739340.java!!!	onPause() : void
        mVideoView.stopPlayback();
        mUpdateHandler.removeCallbacks(mUpdateRunnable);
        super.onPause();
!!!12739468.java!!!	onCreateDialog(in id : int) : Dialog
        Dialog retVal;

        switch(id) {
            case DIALOG_SELECT_AUDIO_SUBSTREAM:
                retVal = createAudioSubstreamSelectionDialog();
                break;

            default:
                retVal = null;
                break;
        }

        return retVal;
!!!12739596.java!!!	ShowErrorDialog(in errorMessage : String) : void
        AlertDialog.Builder builder = new AlertDialog.Builder(this);
        builder.setTitle("Playback error");
        builder.setMessage(errorMessage);
        builder.create().show();
!!!12739724.java!!!	createAudioSubstreamSelectionDialog() : Dialog
        return null;
!!!12739852.java!!!	makeBitrate(in bitrate : long) : String
        if (bitrate >= 1000000000)
            return String.format("%.3f Gbps", (float)bitrate / 1000000000.0);

        if (bitrate >= 1000000)
            return String.format("%.3f Mbps", (float)bitrate / 1000000.0);

        if (bitrate >= 1000)
            return String.format("%.3f Kbps", (float)bitrate / 1000.0);

        return String.format("%.3f bps", (float)bitrate);
!!!12740620.java!!!	toggleInfo() : void
        mInfoShowing = !mInfoShowing;
        if (mInfoShowing) {
            mUpdateHandler.postDelayed(mUpdateRunnable, mUpdateInterval);
        } else {
            mUpdateHandler.removeCallbacks(mUpdateRunnable);
        }
!!!12740748.java!!!	openPip() : void
        mSubVideoView = new SubVideoView(this);
        mSubVideoView.setOwner(this);
        mSubVideoView.setX(0);
        mSubVideoView.setY(0);
        mSubVideoView.setLayoutParams(new LayoutParams(720, 480));
        mSubVideoView.setVideoURI(Uri.parse("hdmi://localhost?port=1"));

        RelativeLayout layout = (RelativeLayout) findViewById(R.id.video_player_main);
        layout.addView(mSubVideoView);
        mSubVideoView.start();
        mSubVideoView.requestFocus();
!!!12740876.java!!!	closePip() : void
        RelativeLayout layout = (RelativeLayout) findViewById(R.id.video_player_main);
        layout.removeView(mSubVideoView);
        mSubVideoView = null;
