format 74
"tests" // framework::base::services::input::tests
  revision 1
  modified_by 12 "shchen"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  cpp_h_dir "/home/shchen/work/jellybean/framework/base/services/input/tests/"
  cpp_src_dir "/home/shchen/work/jellybean/framework/base/services/input/tests/"
  cpp_namespace "android"
  classview 157580 "tests"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 651276 "FakeInputDispatcherPolicy"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " --- FakeInputDispatcherPolicy ---"
      classrelation 1357068 // <generalisation>
	relation 1357068 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 1357068 // <generalisation>
	  b parent class_ref 463244 // InputDispatcherPolicyInterface
      end

      classrelation 1357196 // mConfig (<directional composition>)
	relation 1357196 *-->
	  a role_name "mConfig" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 1357196 // mConfig (<directional composition>)
	  b parent class_ref 463116 // InputDispatcherConfiguration
      end

      operation 1998604 "~FakeInputDispatcherPolicy"
	cpp_virtual cpp_inline protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {
    };
"
	
	
	
	
      end

      operation 1998732 "FakeInputDispatcherPolicy"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} {
    };
"
	
	
	
	
      end

      operation 1998860 "notifyConfigurationChanged"
	cpp_virtual cpp_inline private explicit_return_type "void"
	nparams 1
	  param in name "when" type class_ref 140172 // nsecs_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    };
"
	
	
	
	
      end

      operation 1998988 "notifyANR"
	cpp_virtual cpp_inline private return_type class_ref 140172 // nsecs_t
	nparams 2
	  param in name "inputApplicationHandle" explicit_type "sp<InputApplicationHandle>"
	  param in name "inputWindowHandle" explicit_type "sp<InputWindowHandle>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        return 0;
    };
"
	
	
	
	
      end

      operation 1999116 "notifyInputChannelBroken"
	cpp_virtual cpp_inline private explicit_return_type "void"
	nparams 1
	  param in name "inputWindowHandle" explicit_type "sp<InputWindowHandle>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    };
"
	
	
	
	
      end

      operation 1999244 "getDispatcherConfiguration"
	cpp_virtual cpp_inline private explicit_return_type "void"
	nparams 1
	  param inout name "outConfig" type class_ref 463116 // InputDispatcherConfiguration
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        *outConfig = mConfig;
    };
"
	
	
	
	
      end

      operation 1999372 "isKeyRepeatEnabled"
	cpp_virtual cpp_inline private explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return true;
    };
"
	
	
	
	
      end

      operation 1999500 "filterInputEvent"
	cpp_virtual cpp_inline private explicit_return_type "bool"
	nparams 2
	  param in name "inputEvent" type class_ref 409740 // InputEvent
	  param in name "policyFlags" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        return true;
    };
"
	
	
	
	
      end

      operation 1999628 "interceptKeyBeforeQueueing"
	cpp_virtual cpp_inline private explicit_return_type "void"
	nparams 2
	  param in name "keyEvent" type class_ref 409356 // KeyEvent
	  param inout name "policyFlags" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
    };
"
	
	
	
	
      end

      operation 1999756 "interceptMotionBeforeQueueing"
	cpp_virtual cpp_inline private explicit_return_type "void"
	nparams 2
	  param in name "when" type class_ref 140172 // nsecs_t
	  param inout name "policyFlags" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
    };
"
	
	
	
	
      end

      operation 1999884 "interceptKeyBeforeDispatching"
	cpp_virtual cpp_inline private return_type class_ref 140172 // nsecs_t
	nparams 3
	  param in name "inputWindowHandle" explicit_type "sp<InputWindowHandle>"
	  param in name "keyEvent" type class_ref 409356 // KeyEvent
	  param in name "policyFlags" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract} {
        return 0;
    };
"
	
	
	
	
      end

      operation 2000012 "dispatchUnhandledKey"
	cpp_virtual cpp_inline private explicit_return_type "bool"
	nparams 4
	  param in name "inputWindowHandle" explicit_type "sp<InputWindowHandle>"
	  param in name "keyEvent" type class_ref 409356 // KeyEvent
	  param in name "policyFlags" explicit_type "uint32_t"
	  param inout name "outFallbackKeyEvent" type class_ref 409356 // KeyEvent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} * ${p3}${v3}${)}${const}${volatile}${throw}${abstract} {
        return false;
    };
"
	
	
	
	
      end

      operation 2000140 "notifySwitch"
	cpp_virtual cpp_inline private explicit_return_type "void"
	nparams 4
	  param in name "when" type class_ref 140172 // nsecs_t
	  param in name "switchValues" explicit_type "uint32_t"
	  param in name "switchMask" explicit_type "uint32_t"
	  param in name "policyFlags" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract} {
    };
"
	
	
	
	
      end

      operation 2000268 "pokeUserActivity"
	cpp_virtual cpp_inline private explicit_return_type "void"
	nparams 2
	  param in name "eventTime" type class_ref 140172 // nsecs_t
	  param in name "eventType" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
    };
"
	
	
	
	
      end

      operation 2000396 "checkInjectEventsPermissionNonReentrant"
	cpp_virtual cpp_inline private explicit_return_type "bool"
	nparams 2
	  param in name "injectorPid" explicit_type "int32_t"
	  param in name "injectorUid" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        return false;
    };
"
	
	
	
	
      end
    end

    class 651404 "InputDispatcherTest"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " --- InputDispatcherTest ---"
      classrelation 1357324 // <generalisation>
	relation 1357324 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 1357324 // <generalisation>
	  b parent class_ref 651532 // typedef59
      end

      classrelation 1357452 // mFakePolicy (<directional composition>)
	relation 1357452 *-->
	  stereotype "sp"
	  a role_name "mFakePolicy" protected
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 1357452 // mFakePolicy (<directional composition>)
	  b parent class_ref 651276 // FakeInputDispatcherPolicy
      end

      classrelation 1357580 // mDispatcher (<directional composition>)
	relation 1357580 *-->
	  stereotype "sp"
	  a role_name "mDispatcher" protected
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 1357580 // mDispatcher (<directional composition>)
	  b parent class_ref 463628 // InputDispatcher
      end

      operation 2000524 "SetUp"
	cpp_virtual cpp_inline protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        mFakePolicy = new FakeInputDispatcherPolicy();
        mDispatcher = new InputDispatcher(mFakePolicy);
    };
"
	
	
	
	
      end

      operation 2000652 "TearDown"
	cpp_virtual cpp_inline protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        mFakePolicy.clear();
        mDispatcher.clear();
    };
"
	
	
	
	
      end
    end

    class 651532 "typedef59"
      visibility package stereotype "typedef" explicit_base_type "testing::Test"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
    end

    class 651660 "FakePointerController"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " --- FakePointerController ---"
      classrelation 1357708 // <generalisation>
	relation 1357708 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 1357708 // <generalisation>
	  b parent class_ref 472588 // PointerControllerInterface
      end

      attribute 1745036 "mHaveBounds"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1745164 "mButtonState"
	private explicit_type "int32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 2000780 "~FakePointerController"
	cpp_virtual cpp_inline protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} { };
"
	
	
	
	
      end

      operation 2000908 "FakePointerController"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} :
        mHaveBounds(false), mMinX(0), mMinY(0), mMaxX(0), mMaxY(0), mX(0), mY(0),
        mButtonState(0) {
    };
"
	
	
	
	
      end

      operation 2001036 "setBounds"
	cpp_inline public explicit_return_type "void"
	nparams 4
	  param in name "minX" explicit_type "float"
	  param in name "minY" explicit_type "float"
	  param in name "maxX" explicit_type "float"
	  param in name "maxY" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract} {
        mHaveBounds = true;
        mMinX = minX;
        mMinY = minY;
        mMaxX = maxX;
        mMaxY = maxY;
    };
"
	
	
	
	
      end

      operation 2001164 "setPosition"
	cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "x" explicit_type "float"
	  param in name "y" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        mX = x;
        mY = y;
    };
"
	
	
	
	
      end

      operation 2001292 "setButtonState"
	cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "buttonState" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        mButtonState = buttonState;
    };
"
	
	
	
	
      end

      operation 2001420 "getButtonState"
	const cpp_virtual cpp_inline public explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return mButtonState;
    };
"
	
	
	
	
      end

      operation 2001548 "getPosition"
	const cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 2
	  param inout name "outX" explicit_type "float"
	  param inout name "outY" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        *outX = mX;
        *outY = mY;
    };
"
	
	
	
	
      end

      operation 2001676 "getBounds"
	const cpp_virtual cpp_inline private explicit_return_type "bool"
	nparams 4
	  param inout name "outMinX" explicit_type "float"
	  param inout name "outMinY" explicit_type "float"
	  param inout name "outMaxX" explicit_type "float"
	  param inout name "outMaxY" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}, ${t3} * ${p3}${v3}${)}${const}${volatile}${throw}${abstract} {
        *outMinX = mMinX;
        *outMinY = mMinY;
        *outMaxX = mMaxX;
        *outMaxY = mMaxY;
        return mHaveBounds;
    };
"
	
	
	
	
      end

      operation 2001804 "move"
	cpp_virtual cpp_inline private explicit_return_type "void"
	nparams 2
	  param in name "deltaX" explicit_type "float"
	  param in name "deltaY" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        mX += deltaX;
        if (mX < mMinX) mX = mMinX;
        if (mX > mMaxX) mX = mMaxX;
        mY += deltaY;
        if (mY < mMinY) mY = mMinY;
        if (mY > mMaxY) mY = mMaxY;
    };
"
	
	
	
	
      end

      operation 2001932 "fade"
	cpp_virtual cpp_inline private explicit_return_type "void"
	nparams 1
	  param in name "transition" explicit_type "Transition"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    };
"
	
	
	
	
      end

      operation 2002060 "unfade"
	cpp_virtual cpp_inline private explicit_return_type "void"
	nparams 1
	  param in name "transition" explicit_type "Transition"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    };
"
	
	
	
	
      end

      operation 2002188 "setPresentation"
	cpp_virtual cpp_inline private explicit_return_type "void"
	nparams 1
	  param in name "presentation" explicit_type "Presentation"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    };
"
	
	
	
	
      end

      operation 2002316 "setSpots"
	cpp_virtual cpp_inline private explicit_return_type "void"
	nparams 3
	  param in name "spotCoords" type class_ref 415500 // PointerCoords
	  param in name "spotIdToIndex" explicit_type "uint32_t"
	  param in name "spotIdBits" type class_ref 418444 // BitSet32
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, const ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract} {
    };
"
	
	
	
	
      end

      operation 2002444 "clearSpots"
	cpp_virtual cpp_inline private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    };
"
	
	
	
	
      end
    end

    class 651788 "FakeInputReaderPolicy"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " --- FakeInputReaderPolicy ---"
      classrelation 1357836 // <generalisation>
	relation 1357836 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 1357836 // <generalisation>
	  b parent class_ref 469004 // InputReaderPolicyInterface
      end

      classrelation 1357964 // mConfig (<directional composition>)
	relation 1357964 *-->
	  a role_name "mConfig" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 1357964 // mConfig (<directional composition>)
	  b parent class_ref 468748 // InputReaderConfiguration
      end

      attribute 1745292 "mPointerControllers"
	private explicit_type "int32_t, sp<FakePointerController> "
	stereotype "KeyedVector"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1358092 // mInputDevices (<directional composition>)
	relation 1358092 *-->
	  stereotype "Vector"
	  a role_name "mInputDevices" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 1358092 // mInputDevices (<directional composition>)
	  b parent class_ref 416396 // InputDeviceInfo
      end

      operation 2002572 "~FakeInputReaderPolicy"
	cpp_virtual cpp_inline protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} { };
"
	
	
	
	
      end

      operation 2002700 "FakeInputReaderPolicy"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} {
    };
"
	
	
	
	
      end

      operation 2002828 "setDisplayInfo"
	cpp_inline public explicit_return_type "void"
	nparams 4
	  param in name "displayId" explicit_type "int32_t"
	  param in name "width" explicit_type "int32_t"
	  param in name "height" explicit_type "int32_t"
	  param in name "orientation" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract} {
        // Set the size of both the internal and external display at the same time.
        bool isRotated = (orientation == DISPLAY_ORIENTATION_90
                || orientation == DISPLAY_ORIENTATION_270);
        DisplayViewport v;
        v.displayId = displayId;
        v.orientation = orientation;
        v.logicalLeft = 0;
        v.logicalTop = 0;
        v.logicalRight = isRotated ? height : width;
        v.logicalBottom = isRotated ? width : height;
        v.physicalLeft = 0;
        v.physicalTop = 0;
        v.physicalRight = isRotated ? height : width;
        v.physicalBottom = isRotated ? width : height;
        v.deviceWidth = isRotated ? height : width;
        v.deviceHeight = isRotated ? width : height;
        mConfig.setDisplayInfo(false /*external*/, v);
        mConfig.setDisplayInfo(true /*external*/, v);
    };
"
	
	
	
	
      end

      operation 2002956 "addExcludedDeviceName"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "deviceName" type class_ref 131340 // String8
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        mConfig.excludedDeviceNames.push(deviceName);
    };
"
	
	
	
	
      end

      operation 2003084 "setPointerController"
	cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "deviceId" explicit_type "int32_t"
	  param in name "controller" explicit_type "sp<FakePointerController>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        mPointerControllers.add(deviceId, controller);
    };
"
	
	
	
	
      end

      operation 2003212 "getReaderConfiguration"
	const cpp_inline public return_type class_ref 468748 // InputReaderConfiguration
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return &mConfig;
    };
"
	
	
	
	
      end

      operation 2003340 "getInputDevices"
	const cpp_inline public explicit_return_type "Vector<InputDeviceInfo>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return mInputDevices;
    };
"
	
	
	
	
      end

      operation 2003468 "getReaderConfiguration"
	cpp_virtual cpp_inline private explicit_return_type "void"
	nparams 1
	  param inout name "outConfig" type class_ref 468748 // InputReaderConfiguration
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        *outConfig = mConfig;
    };
"
	
	
	
	
      end

      operation 2003596 "obtainPointerController"
	cpp_virtual cpp_inline private explicit_return_type "sp<PointerControllerInterface>"
	nparams 1
	  param in name "deviceId" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        return mPointerControllers.valueFor(deviceId);
    };
"
	
	
	
	
      end

      operation 2003724 "notifyInputDevicesChanged"
	cpp_virtual cpp_inline private explicit_return_type "void"
	nparams 1
	  param in name "inputDevices" explicit_type "Vector<InputDeviceInfo>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        mInputDevices = inputDevices;
    };
"
	
	
	
	
      end

      operation 2003852 "getKeyboardLayoutOverlay"
	cpp_virtual cpp_inline private explicit_return_type "sp<KeyCharacterMap>"
	nparams 1
	  param in name "inputDeviceDescriptor" type class_ref 131340 // String8
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        return NULL;
    };
"
	
	
	
	
      end

      operation 2003980 "getDeviceAlias"
	cpp_virtual cpp_inline private return_type class_ref 131340 // String8
	nparams 1
	  param in name "identifier" type class_ref 416268 // InputDeviceIdentifier
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        return String8::empty();
    };
"
	
	
	
	
      end
    end

    class 651916 "FakeInputListener"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " --- FakeInputListener ---"
      classrelation 1358220 // <generalisation>
	relation 1358220 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 1358220 // <generalisation>
	  b parent class_ref 463500 // InputListenerInterface
      end

      classrelation 1358348 // mNotifyConfigurationChangedArgsQueue (<directional composition>)
	relation 1358348 *-->
	  stereotype "List"
	  a role_name "mNotifyConfigurationChangedArgsQueue" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 1358348 // mNotifyConfigurationChangedArgsQueue (<directional composition>)
	  b parent class_ref 463756 // NotifyConfigurationChangedArgs
      end

      classrelation 1358476 // mNotifyDeviceResetArgsQueue (<directional composition>)
	relation 1358476 *-->
	  stereotype "List"
	  a role_name "mNotifyDeviceResetArgsQueue" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 1358476 // mNotifyDeviceResetArgsQueue (<directional composition>)
	  b parent class_ref 464268 // NotifyDeviceResetArgs
      end

      classrelation 1358604 // mNotifyKeyArgsQueue (<directional composition>)
	relation 1358604 *-->
	  stereotype "List"
	  a role_name "mNotifyKeyArgsQueue" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 1358604 // mNotifyKeyArgsQueue (<directional composition>)
	  b parent class_ref 463884 // NotifyKeyArgs
      end

      classrelation 1358732 // mNotifyMotionArgsQueue (<directional composition>)
	relation 1358732 *-->
	  stereotype "List"
	  a role_name "mNotifyMotionArgsQueue" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 1358732 // mNotifyMotionArgsQueue (<directional composition>)
	  b parent class_ref 464012 // NotifyMotionArgs
      end

      classrelation 1358860 // mNotifySwitchArgsQueue (<directional composition>)
	relation 1358860 *-->
	  stereotype "List"
	  a role_name "mNotifySwitchArgsQueue" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 1358860 // mNotifySwitchArgsQueue (<directional composition>)
	  b parent class_ref 464140 // NotifySwitchArgs
      end

      operation 2004108 "~FakeInputListener"
	cpp_virtual cpp_inline protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} { };
"
	
	
	
	
      end

      operation 2004236 "FakeInputListener"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} {
    };
"
	
	
	
	
      end

      operation 2004364 "assertNotifyConfigurationChangedWasCalled"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "outEventArgs" type class_ref 463756 // NotifyConfigurationChangedArgs
	    defaultvalue "NULL"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        ASSERT_FALSE(mNotifyConfigurationChangedArgsQueue.empty())
                << \"Expected notifyConfigurationChanged() to have been called.\";
        if (outEventArgs) {
            *outEventArgs = *mNotifyConfigurationChangedArgsQueue.begin();
        }
        mNotifyConfigurationChangedArgsQueue.erase(mNotifyConfigurationChangedArgsQueue.begin());
    };
"
	
	
	
	
      end

      operation 2004492 "assertNotifyDeviceResetWasCalled"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "outEventArgs" type class_ref 464268 // NotifyDeviceResetArgs
	    defaultvalue "NULL"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        ASSERT_FALSE(mNotifyDeviceResetArgsQueue.empty())
                << \"Expected notifyDeviceReset() to have been called.\";
        if (outEventArgs) {
            *outEventArgs = *mNotifyDeviceResetArgsQueue.begin();
        }
        mNotifyDeviceResetArgsQueue.erase(mNotifyDeviceResetArgsQueue.begin());
    };
"
	
	
	
	
      end

      operation 2004620 "assertNotifyKeyWasCalled"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "outEventArgs" type class_ref 463884 // NotifyKeyArgs
	    defaultvalue "NULL"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        ASSERT_FALSE(mNotifyKeyArgsQueue.empty())
                << \"Expected notifyKey() to have been called.\";
        if (outEventArgs) {
            *outEventArgs = *mNotifyKeyArgsQueue.begin();
        }
        mNotifyKeyArgsQueue.erase(mNotifyKeyArgsQueue.begin());
    };
"
	
	
	
	
      end

      operation 2004748 "assertNotifyKeyWasNotCalled"
	cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        ASSERT_TRUE(mNotifyKeyArgsQueue.empty())
                << \"Expected notifyKey() to not have been called.\";
    };
"
	
	
	
	
      end

      operation 2004876 "assertNotifyMotionWasCalled"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "outEventArgs" type class_ref 464012 // NotifyMotionArgs
	    defaultvalue "NULL"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        ASSERT_FALSE(mNotifyMotionArgsQueue.empty())
                << \"Expected notifyMotion() to have been called.\";
        if (outEventArgs) {
            *outEventArgs = *mNotifyMotionArgsQueue.begin();
        }
        mNotifyMotionArgsQueue.erase(mNotifyMotionArgsQueue.begin());
    };
"
	
	
	
	
      end

      operation 2005004 "assertNotifyMotionWasNotCalled"
	cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        ASSERT_TRUE(mNotifyMotionArgsQueue.empty())
                << \"Expected notifyMotion() to not have been called.\";
    };
"
	
	
	
	
      end

      operation 2005132 "assertNotifySwitchWasCalled"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "outEventArgs" type class_ref 464140 // NotifySwitchArgs
	    defaultvalue "NULL"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        ASSERT_FALSE(mNotifySwitchArgsQueue.empty())
                << \"Expected notifySwitch() to have been called.\";
        if (outEventArgs) {
            *outEventArgs = *mNotifySwitchArgsQueue.begin();
        }
        mNotifySwitchArgsQueue.erase(mNotifySwitchArgsQueue.begin());
    };
"
	
	
	
	
      end

      operation 2005260 "notifyConfigurationChanged"
	cpp_virtual cpp_inline private explicit_return_type "void"
	nparams 1
	  param in name "args" type class_ref 463756 // NotifyConfigurationChangedArgs
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        mNotifyConfigurationChangedArgsQueue.push_back(*args);
    };
"
	
	
	
	
      end

      operation 2005388 "notifyDeviceReset"
	cpp_virtual cpp_inline private explicit_return_type "void"
	nparams 1
	  param in name "args" type class_ref 464268 // NotifyDeviceResetArgs
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        mNotifyDeviceResetArgsQueue.push_back(*args);
    };
"
	
	
	
	
      end

      operation 2005516 "notifyKey"
	cpp_virtual cpp_inline private explicit_return_type "void"
	nparams 1
	  param in name "args" type class_ref 463884 // NotifyKeyArgs
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        mNotifyKeyArgsQueue.push_back(*args);
    };
"
	
	
	
	
      end

      operation 2005644 "notifyMotion"
	cpp_virtual cpp_inline private explicit_return_type "void"
	nparams 1
	  param in name "args" type class_ref 464012 // NotifyMotionArgs
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        mNotifyMotionArgsQueue.push_back(*args);
    };
"
	
	
	
	
      end

      operation 2005772 "notifySwitch"
	cpp_virtual cpp_inline private explicit_return_type "void"
	nparams 1
	  param in name "args" type class_ref 464140 // NotifySwitchArgs
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        mNotifySwitchArgsQueue.push_back(*args);
    };
"
	
	
	
	
      end
    end

    class 652044 "FakeEventHub"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " --- FakeEventHub ---"
      classrelation 1358988 // <generalisation>
	relation 1358988 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 1358988 // <generalisation>
	  b parent class_ref 461580 // EventHubInterface
      end

      class 652172 "KeyInfo"
	visibility package stereotype "struct"
	cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 1745420 "keyCode"
	  public explicit_type "int32_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1745548 "flags"
	  public explicit_type "uint32_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      class 652300 "Device"
	visibility package stereotype "struct"
	cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1359116 // identifier (<directional composition>)
	  relation 1359116 *-->
	    a role_name "identifier" public
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	      classrelation_ref 1359116 // identifier (<directional composition>)
	    b parent class_ref 416268 // InputDeviceIdentifier
	end

	attribute 1745676 "classes"
	  public explicit_type "uint32_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 1359244 // configuration (<directional composition>)
	  relation 1359244 *-->
	    a role_name "configuration" public
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	      classrelation_ref 1359244 // configuration (<directional composition>)
	    b parent class_ref 419212 // PropertyMap
	end

	classrelation 1359372 // absoluteAxes (<directional composition>)
	  relation 1359372 *-->
	    stereotype "KeyedVector"
	    a role_name "absoluteAxes" public
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<int,${type}> ${name}${value};
"
	      classrelation_ref 1359372 // absoluteAxes (<directional composition>)
	    b parent class_ref 461324 // RawAbsoluteAxisInfo
	end

	attribute 1745804 "relativeAxes"
	  public explicit_type "int, bool"
	  stereotype "KeyedVector"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1745932 "keyCodeStates"
	  public explicit_type "int32_t, int32_t"
	  stereotype "KeyedVector"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1746060 "scanCodeStates"
	  public explicit_type "int32_t, int32_t"
	  stereotype "KeyedVector"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1746188 "switchStates"
	  public explicit_type "int32_t, int32_t"
	  stereotype "KeyedVector"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1746316 "absoluteAxisValue"
	  public explicit_type "int32_t, int32_t"
	  stereotype "KeyedVector"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 1359500 // keysByScanCode (<directional composition>)
	  relation 1359500 *-->
	    stereotype "KeyedVector"
	    a role_name "keysByScanCode" public
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<int32_t,${type}> ${name}${value};
"
	      classrelation_ref 1359500 // keysByScanCode (<directional composition>)
	    b parent class_ref 652172 // KeyInfo
	end

	classrelation 1359628 // keysByUsageCode (<directional composition>)
	  relation 1359628 *-->
	    stereotype "KeyedVector"
	    a role_name "keysByUsageCode" public
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<int32_t,${type}> ${name}${value};
"
	      classrelation_ref 1359628 // keysByUsageCode (<directional composition>)
	    b parent class_ref 652172 // KeyInfo
	end

	attribute 1746444 "leds"
	  public explicit_type "int32_t, bool"
	  stereotype "KeyedVector"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 1359756 // virtualKeys (<directional composition>)
	  relation 1359756 *-->
	    stereotype "Vector"
	    a role_name "virtualKeys" public
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	      classrelation_ref 1359756 // virtualKeys (<directional composition>)
	    b parent class_ref 428428 // VirtualKeyDefinition
	end

	operation 2005900 "Device"
	  cpp_inline public explicit_return_type ""
	  nparams 1
	    param in name "classes" explicit_type "uint32_t"
	  cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}${)}${volatile}${throw} :
                classes(classes) {
        };
"
	  
	  
	  
	  
	end
      end

      classrelation 1359884 // mDevices (<unidirectional association>)
	relation 1359884 --->
	  stereotype "KeyedVector"
	  a role_name "mDevices" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<int32_t,${type}*> ${name}${value};
"
	    classrelation_ref 1359884 // mDevices (<unidirectional association>)
	  b parent class_ref 652300 // Device
      end

      classrelation 1360012 // mExcludedDevices (<directional composition>)
	relation 1360012 *-->
	  stereotype "Vector"
	  a role_name "mExcludedDevices" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 1360012 // mExcludedDevices (<directional composition>)
	  b parent class_ref 131340 // String8
      end

      classrelation 1360140 // mEvents (<directional composition>)
	relation 1360140 *-->
	  stereotype "List"
	  a role_name "mEvents" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 1360140 // mEvents (<directional composition>)
	  b parent class_ref 461196 // RawEvent
      end

      operation 2006028 "~FakeEventHub"
	cpp_virtual cpp_inline protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {
        for (size_t i = 0; i < mDevices.size(); i++) {
            delete mDevices.valueAt(i);
        }
    };
"
	
	
	
	
      end

      operation 2006156 "FakeEventHub"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} { };
"
	
	
	
	
      end

      operation 2006284 "addDevice"
	cpp_inline public explicit_return_type "void"
	nparams 3
	  param in name "deviceId" explicit_type "int32_t"
	  param in name "name" type class_ref 131340 // String8
	  param in name "classes" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract} {
        Device* device = new Device(classes);
        device->identifier.name = name;
        mDevices.add(deviceId, device);

        enqueueEvent(ARBITRARY_TIME, deviceId, EventHubInterface::DEVICE_ADDED, 0, 0);
    };
"
	
	
	
	
      end

      operation 2006412 "removeDevice"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "deviceId" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        delete mDevices.valueFor(deviceId);
        mDevices.removeItem(deviceId);

        enqueueEvent(ARBITRARY_TIME, deviceId, EventHubInterface::DEVICE_REMOVED, 0, 0);
    };
"
	
	
	
	
      end

      operation 2006540 "finishDeviceScan"
	cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        enqueueEvent(ARBITRARY_TIME, 0, EventHubInterface::FINISHED_DEVICE_SCAN, 0, 0);
    };
"
	
	
	
	
      end

      operation 2006668 "addConfigurationProperty"
	cpp_inline public explicit_return_type "void"
	nparams 3
	  param in name "deviceId" explicit_type "int32_t"
	  param in name "key" type class_ref 131340 // String8
	  param in name "value" type class_ref 131340 // String8
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}, const ${t2} & ${p2}${v2}${)}${const}${volatile}${throw}${abstract} {
        Device* device = getDevice(deviceId);
        device->configuration.addProperty(key, value);
    };
"
	
	
	
	
      end

      operation 2006796 "addConfigurationMap"
	cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "deviceId" explicit_type "int32_t"
	  param in name "configuration" type class_ref 419212 // PropertyMap
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        Device* device = getDevice(deviceId);
        device->configuration.addAll(configuration);
    };
"
	
	
	
	
      end

      operation 2006924 "addAbsoluteAxis"
	cpp_inline public explicit_return_type "void"
	nparams 7
	  param in name "deviceId" explicit_type "int32_t"
	  param in name "axis" explicit_type "int"
	  param in name "minValue" explicit_type "int32_t"
	  param in name "maxValue" explicit_type "int32_t"
	  param in name "flat" explicit_type "int"
	  param in name "fuzz" explicit_type "int"
	  param in name "resolution" explicit_type "int"
	    defaultvalue "0"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} ${p5}${v5}, ${t6} ${p6}${v6}${)}${const}${volatile}${throw}${abstract} {
        Device* device = getDevice(deviceId);

        RawAbsoluteAxisInfo info;
        info.valid = true;
        info.minValue = minValue;
        info.maxValue = maxValue;
        info.flat = flat;
        info.fuzz = fuzz;
        info.resolution = resolution;
        device->absoluteAxes.add(axis, info);
    };
"
	
	
	
	
      end

      operation 2007052 "addRelativeAxis"
	cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "deviceId" explicit_type "int32_t"
	  param in name "axis" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        Device* device = getDevice(deviceId);
        device->relativeAxes.add(axis, true);
    };
"
	
	
	
	
      end

      operation 2007180 "setKeyCodeState"
	cpp_inline public explicit_return_type "void"
	nparams 3
	  param in name "deviceId" explicit_type "int32_t"
	  param in name "keyCode" explicit_type "int32_t"
	  param in name "state" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract} {
        Device* device = getDevice(deviceId);
        device->keyCodeStates.replaceValueFor(keyCode, state);
    };
"
	
	
	
	
      end

      operation 2007308 "setScanCodeState"
	cpp_inline public explicit_return_type "void"
	nparams 3
	  param in name "deviceId" explicit_type "int32_t"
	  param in name "scanCode" explicit_type "int32_t"
	  param in name "state" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract} {
        Device* device = getDevice(deviceId);
        device->scanCodeStates.replaceValueFor(scanCode, state);
    };
"
	
	
	
	
      end

      operation 2007436 "setSwitchState"
	cpp_inline public explicit_return_type "void"
	nparams 3
	  param in name "deviceId" explicit_type "int32_t"
	  param in name "switchCode" explicit_type "int32_t"
	  param in name "state" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract} {
        Device* device = getDevice(deviceId);
        device->switchStates.replaceValueFor(switchCode, state);
    };
"
	
	
	
	
      end

      operation 2007564 "setAbsoluteAxisValue"
	cpp_inline public explicit_return_type "void"
	nparams 3
	  param in name "deviceId" explicit_type "int32_t"
	  param in name "axis" explicit_type "int32_t"
	  param in name "value" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract} {
        Device* device = getDevice(deviceId);
        device->absoluteAxisValue.replaceValueFor(axis, value);
    };
"
	
	
	
	
      end

      operation 2007692 "addKey"
	cpp_inline public explicit_return_type "void"
	nparams 5
	  param in name "deviceId" explicit_type "int32_t"
	  param in name "scanCode" explicit_type "int32_t"
	  param in name "usageCode" explicit_type "int32_t"
	  param in name "keyCode" explicit_type "int32_t"
	  param in name "flags" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}${)}${const}${volatile}${throw}${abstract} {
        Device* device = getDevice(deviceId);
        KeyInfo info;
        info.keyCode = keyCode;
        info.flags = flags;
        if (scanCode) {
            device->keysByScanCode.add(scanCode, info);
        }
        if (usageCode) {
            device->keysByUsageCode.add(usageCode, info);
        }
    };
"
	
	
	
	
      end

      operation 2007820 "addLed"
	cpp_inline public explicit_return_type "void"
	nparams 3
	  param in name "deviceId" explicit_type "int32_t"
	  param in name "led" explicit_type "int32_t"
	  param in name "initialState" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract} {
        Device* device = getDevice(deviceId);
        device->leds.add(led, initialState);
    };
"
	
	
	
	
      end

      operation 2007948 "getLedState"
	cpp_inline public explicit_return_type "bool"
	nparams 2
	  param in name "deviceId" explicit_type "int32_t"
	  param in name "led" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        Device* device = getDevice(deviceId);
        return device->leds.valueFor(led);
    };
"
	
	
	
	
      end

      operation 2008076 "getExcludedDevices"
	cpp_inline public explicit_return_type "Vector<String8>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return mExcludedDevices;
    };
"
	
	
	
	
      end

      operation 2008204 "addVirtualKeyDefinition"
	cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "deviceId" explicit_type "int32_t"
	  param in name "definition" type class_ref 428428 // VirtualKeyDefinition
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        Device* device = getDevice(deviceId);
        device->virtualKeys.push(definition);
    };
"
	
	
	
	
      end

      operation 2008332 "enqueueEvent"
	cpp_inline public explicit_return_type "void"
	nparams 5
	  param in name "when" type class_ref 140172 // nsecs_t
	  param in name "deviceId" explicit_type "int32_t"
	  param in name "type" explicit_type "int32_t"
	  param in name "code" explicit_type "int32_t"
	  param in name "value" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}${)}${const}${volatile}${throw}${abstract} {
        RawEvent event;
        event.when = when;
        event.deviceId = deviceId;
        event.type = type;
        event.code = code;
        event.value = value;
        mEvents.push_back(event);

        if (type == EV_ABS) {
            setAbsoluteAxisValue(deviceId, code, value);
        }
    };
"
	
	
	
	
      end

      operation 2008460 "assertQueueIsEmpty"
	cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        ASSERT_EQ(size_t(0), mEvents.size())
                << \"Expected the event queue to be empty (fully consumed).\";
    };
"
	
	
	
	
      end

      operation 2008588 "getDevice"
	const cpp_inline private return_type class_ref 652300 // Device
	nparams 1
	  param in name "deviceId" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        ssize_t index = mDevices.indexOfKey(deviceId);
        return index >= 0 ? mDevices.valueAt(index) : NULL;
    };
"
	
	
	
	
      end

      operation 2008716 "getDeviceClasses"
	const cpp_virtual cpp_inline private explicit_return_type "uint32_t"
	nparams 1
	  param in name "deviceId" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        Device* device = getDevice(deviceId);
        return device ? device->classes : 0;
    };
"
	
	
	
	
      end

      operation 2008844 "getDeviceIdentifier"
	const cpp_virtual cpp_inline private return_type class_ref 416268 // InputDeviceIdentifier
	nparams 1
	  param in name "deviceId" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        Device* device = getDevice(deviceId);
        return device ? device->identifier : InputDeviceIdentifier();
    };
"
	
	
	
	
      end

      operation 2008972 "getConfiguration"
	const cpp_virtual cpp_inline private explicit_return_type "void"
	nparams 2
	  param in name "deviceId" explicit_type "int32_t"
	  param inout name "outConfiguration" type class_ref 419212 // PropertyMap
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        Device* device = getDevice(deviceId);
        if (device) {
            *outConfiguration = device->configuration;
        }
    };
"
	
	
	
	
      end

      operation 2009100 "getAbsoluteAxisInfo"
	const cpp_virtual cpp_inline private return_type class_ref 128268 // status_t
	nparams 3
	  param in name "deviceId" explicit_type "int32_t"
	  param in name "axis" explicit_type "int"
	  param inout name "outAxisInfo" type class_ref 461324 // RawAbsoluteAxisInfo
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract} {
        Device* device = getDevice(deviceId);
        if (device) {
            ssize_t index = device->absoluteAxes.indexOfKey(axis);
            if (index >= 0) {
                *outAxisInfo = device->absoluteAxes.valueAt(index);
                return OK;
            }
        }
        outAxisInfo->clear();
        return -1;
    };
"
	
	
	
	
      end

      operation 2009228 "hasRelativeAxis"
	const cpp_virtual cpp_inline private explicit_return_type "bool"
	nparams 2
	  param in name "deviceId" explicit_type "int32_t"
	  param in name "axis" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        Device* device = getDevice(deviceId);
        if (device) {
            return device->relativeAxes.indexOfKey(axis) >= 0;
        }
        return false;
    };
"
	
	
	
	
      end

      operation 2009356 "hasInputProperty"
	const cpp_virtual cpp_inline private explicit_return_type "bool"
	nparams 2
	  param in name "deviceId" explicit_type "int32_t"
	  param in name "property" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        return false;
    };
"
	
	
	
	
      end

      operation 2009484 "mapKey"
	const cpp_virtual cpp_inline private return_type class_ref 128268 // status_t
	nparams 5
	  param in name "deviceId" explicit_type "int32_t"
	  param in name "scanCode" explicit_type "int32_t"
	  param in name "usageCode" explicit_type "int32_t"
	  param inout name "outKeycode" explicit_type "int32_t"
	  param inout name "outFlags" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} * ${p3}${v3}, ${t4} * ${p4}${v4}${)}${const}${volatile}${throw}${abstract} {
        Device* device = getDevice(deviceId);
        if (device) {
            const KeyInfo* key = getKey(device, scanCode, usageCode);
            if (key) {
                if (outKeycode) {
                    *outKeycode = key->keyCode;
                }
                if (outFlags) {
                    *outFlags = key->flags;
                }
                return OK;
            }
        }
        return NAME_NOT_FOUND;
    };
"
	
	
	
	
      end

      operation 2009612 "getKey"
	const cpp_inline private return_type class_ref 652172 // KeyInfo
	nparams 3
	  param inout name "device" type class_ref 652300 // Device
	  param in name "scanCode" explicit_type "int32_t"
	  param in name "usageCode" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract} {
        if (usageCode) {
            ssize_t index = device->keysByUsageCode.indexOfKey(usageCode);
            if (index >= 0) {
                return &device->keysByUsageCode.valueAt(index);
            }
        }
        if (scanCode) {
            ssize_t index = device->keysByScanCode.indexOfKey(scanCode);
            if (index >= 0) {
                return &device->keysByScanCode.valueAt(index);
            }
        }
        return NULL;
    };
"
	
	
	
	
      end

      operation 2009740 "mapAxis"
	const cpp_virtual cpp_inline private return_type class_ref 128268 // status_t
	nparams 3
	  param in name "deviceId" explicit_type "int32_t"
	  param in name "scanCode" explicit_type "int32_t"
	  param inout name "outAxisInfo" type class_ref 420876 // AxisInfo
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract} {
        return NAME_NOT_FOUND;
    };
"
	
	
	
	
      end

      operation 2009868 "setExcludedDevices"
	cpp_virtual cpp_inline private explicit_return_type "void"
	nparams 1
	  param in name "devices" explicit_type "Vector<String8>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        mExcludedDevices = devices;
    };
"
	
	
	
	
      end

      operation 2009996 "getEvents"
	cpp_virtual cpp_inline private explicit_return_type "size_t"
	nparams 3
	  param in name "timeoutMillis" explicit_type "int"
	  param inout name "buffer" type class_ref 461196 // RawEvent
	  param in name "bufferSize" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract} {
        if (mEvents.empty()) {
            return 0;
        }

        *buffer = *mEvents.begin();
        mEvents.erase(mEvents.begin());
        return 1;
    };
"
	
	
	
	
      end

      operation 2010124 "getScanCodeState"
	const cpp_virtual cpp_inline private explicit_return_type "int32_t"
	nparams 2
	  param in name "deviceId" explicit_type "int32_t"
	  param in name "scanCode" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        Device* device = getDevice(deviceId);
        if (device) {
            ssize_t index = device->scanCodeStates.indexOfKey(scanCode);
            if (index >= 0) {
                return device->scanCodeStates.valueAt(index);
            }
        }
        return AKEY_STATE_UNKNOWN;
    };
"
	
	
	
	
      end

      operation 2010252 "getKeyCodeState"
	const cpp_virtual cpp_inline private explicit_return_type "int32_t"
	nparams 2
	  param in name "deviceId" explicit_type "int32_t"
	  param in name "keyCode" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        Device* device = getDevice(deviceId);
        if (device) {
            ssize_t index = device->keyCodeStates.indexOfKey(keyCode);
            if (index >= 0) {
                return device->keyCodeStates.valueAt(index);
            }
        }
        return AKEY_STATE_UNKNOWN;
    };
"
	
	
	
	
      end

      operation 2010380 "getSwitchState"
	const cpp_virtual cpp_inline private explicit_return_type "int32_t"
	nparams 2
	  param in name "deviceId" explicit_type "int32_t"
	  param in name "sw" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        Device* device = getDevice(deviceId);
        if (device) {
            ssize_t index = device->switchStates.indexOfKey(sw);
            if (index >= 0) {
                return device->switchStates.valueAt(index);
            }
        }
        return AKEY_STATE_UNKNOWN;
    };
"
	
	
	
	
      end

      operation 2010508 "getAbsoluteAxisValue"
	const cpp_virtual cpp_inline private return_type class_ref 128268 // status_t
	nparams 3
	  param in name "deviceId" explicit_type "int32_t"
	  param in name "axis" explicit_type "int32_t"
	  param inout name "outValue" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract} {
        Device* device = getDevice(deviceId);
        if (device) {
            ssize_t index = device->absoluteAxisValue.indexOfKey(axis);
            if (index >= 0) {
                *outValue = device->absoluteAxisValue.valueAt(index);
                return OK;
            }
        }
        *outValue = 0;
        return -1;
    };
"
	
	
	
	
      end

      operation 2010636 "markSupportedKeyCodes"
	const cpp_virtual cpp_inline private explicit_return_type "bool"
	nparams 4
	  param in name "deviceId" explicit_type "int32_t"
	  param in name "numCodes" explicit_type "size_t"
	  param in name "keyCodes" explicit_type "int32_t"
	  param inout name "outFlags" explicit_type "uint8_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, const ${t2} * ${p2}${v2}, ${t3} * ${p3}${v3}${)}${const}${volatile}${throw}${abstract} {
        bool result = false;
        Device* device = getDevice(deviceId);
        if (device) {
            for (size_t i = 0; i < numCodes; i++) {
                for (size_t j = 0; j < device->keysByScanCode.size(); j++) {
                    if (keyCodes[i] == device->keysByScanCode.valueAt(j).keyCode) {
                        outFlags[i] = 1;
                        result = true;
                    }
                }
                for (size_t j = 0; j < device->keysByUsageCode.size(); j++) {
                    if (keyCodes[i] == device->keysByUsageCode.valueAt(j).keyCode) {
                        outFlags[i] = 1;
                        result = true;
                    }
                }
            }
        }
        return result;
    };
"
	
	
	
	
      end

      operation 2010764 "hasScanCode"
	const cpp_virtual cpp_inline private explicit_return_type "bool"
	nparams 2
	  param in name "deviceId" explicit_type "int32_t"
	  param in name "scanCode" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        Device* device = getDevice(deviceId);
        if (device) {
            ssize_t index = device->keysByScanCode.indexOfKey(scanCode);
            return index >= 0;
        }
        return false;
    };
"
	
	
	
	
      end

      operation 2010892 "hasLed"
	const cpp_virtual cpp_inline private explicit_return_type "bool"
	nparams 2
	  param in name "deviceId" explicit_type "int32_t"
	  param in name "led" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        Device* device = getDevice(deviceId);
        return device && device->leds.indexOfKey(led) >= 0;
    };
"
	
	
	
	
      end

      operation 2011020 "setLedState"
	cpp_virtual cpp_inline private explicit_return_type "void"
	nparams 3
	  param in name "deviceId" explicit_type "int32_t"
	  param in name "led" explicit_type "int32_t"
	  param in name "on" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract} {
        Device* device = getDevice(deviceId);
        if (device) {
            ssize_t index = device->leds.indexOfKey(led);
            if (index >= 0) {
                device->leds.replaceValueAt(led, on);
            } else {
                ADD_FAILURE()
                        << \"Attempted to set the state of an LED that the EventHub declared \"
                        \"was not present.  led=\" << led;
            }
        }
    };
"
	
	
	
	
      end

      operation 2011148 "getVirtualKeyDefinitions"
	const cpp_virtual cpp_inline private explicit_return_type "void"
	nparams 2
	  param in name "deviceId" explicit_type "int32_t"
	  param inout name "outVirtualKeys" explicit_type "Vector<VirtualKeyDefinition>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        outVirtualKeys.clear();

        Device* device = getDevice(deviceId);
        if (device) {
            outVirtualKeys.appendVector(device->virtualKeys);
        }
    };
"
	
	
	
	
      end

      operation 2011276 "getKeyCharacterMap"
	const cpp_virtual cpp_inline private explicit_return_type "sp<KeyCharacterMap>"
	nparams 1
	  param in name "deviceId" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        return NULL;
    };
"
	
	
	
	
      end

      operation 2011404 "setKeyboardLayoutOverlay"
	cpp_virtual cpp_inline private explicit_return_type "bool"
	nparams 2
	  param in name "deviceId" explicit_type "int32_t"
	  param in name "map" explicit_type "sp<KeyCharacterMap>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        return false;
    };
"
	
	
	
	
      end

      operation 2011532 "vibrate"
	cpp_virtual cpp_inline private explicit_return_type "void"
	nparams 2
	  param in name "deviceId" explicit_type "int32_t"
	  param in name "duration" type class_ref 140172 // nsecs_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
    };
"
	
	
	
	
      end

      operation 2011660 "cancelVibrate"
	cpp_virtual cpp_inline private explicit_return_type "void"
	nparams 1
	  param in name "deviceId" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    };
"
	
	
	
	
      end

      operation 2011788 "isExternal"
	const cpp_virtual cpp_inline private explicit_return_type "bool"
	nparams 1
	  param in name "deviceId" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        return false;
    };
"
	
	
	
	
      end

      operation 2011916 "dump"
	cpp_virtual cpp_inline private explicit_return_type "void"
	nparams 1
	  param inout name "dump" type class_ref 131340 // String8
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    };
"
	
	
	
	
      end

      operation 2012044 "monitor"
	cpp_virtual cpp_inline private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    };
"
	
	
	
	
      end

      operation 2012172 "requestReopenDevices"
	cpp_virtual cpp_inline private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    };
"
	
	
	
	
      end

      operation 2012300 "wake"
	cpp_virtual cpp_inline private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    };
"
	
	
	
	
      end
    end

    class 652428 "FakeInputReaderContext"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " --- FakeInputReaderContext ---"
      classrelation 1360268 // <generalisation>
	relation 1360268 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 1360268 // <generalisation>
	  b parent class_ref 469132 // InputReaderContext
      end

      classrelation 1360396 // mEventHub (<directional composition>)
	relation 1360396 *-->
	  stereotype "sp"
	  a role_name "mEventHub" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 1360396 // mEventHub (<directional composition>)
	  b parent class_ref 461580 // EventHubInterface
      end

      classrelation 1360524 // mPolicy (<directional composition>)
	relation 1360524 *-->
	  stereotype "sp"
	  a role_name "mPolicy" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 1360524 // mPolicy (<directional composition>)
	  b parent class_ref 469004 // InputReaderPolicyInterface
      end

      classrelation 1360652 // mListener (<directional composition>)
	relation 1360652 *-->
	  stereotype "sp"
	  a role_name "mListener" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 1360652 // mListener (<directional composition>)
	  b parent class_ref 463500 // InputListenerInterface
      end

      attribute 1746572 "mGlobalMetaState"
	private explicit_type "int32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1746700 "mUpdateGlobalMetaStateWasCalled"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1746828 "mGeneration"
	private explicit_type "int32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 2012428 "FakeInputReaderContext"
	cpp_inline public explicit_return_type ""
	nparams 3
	  param in name "eventHub" explicit_type "sp<EventHubInterface>"
	  param in name "policy" explicit_type "sp<InputReaderPolicyInterface>"
	  param in name "listener" explicit_type "sp<InputListenerInterface>"
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, const ${t2} & ${p2}${v2}${)}${volatile}${throw} :
            mEventHub(eventHub), mPolicy(policy), mListener(listener),
            mGlobalMetaState(0) {
    };
"
	
	
	
	
      end

      operation 2012556 "~FakeInputReaderContext"
	cpp_virtual cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} { };
"
	
	
	
	
      end

      operation 2012684 "assertUpdateGlobalMetaStateWasCalled"
	cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        ASSERT_TRUE(mUpdateGlobalMetaStateWasCalled)
                << \"Expected updateGlobalMetaState() to have been called.\";
        mUpdateGlobalMetaStateWasCalled = false;
    };
"
	
	
	
	
      end

      operation 2012812 "setGlobalMetaState"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "state" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        mGlobalMetaState = state;
    };
"
	
	
	
	
      end

      operation 2012940 "updateGlobalMetaState"
	cpp_virtual cpp_inline private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        mUpdateGlobalMetaStateWasCalled = true;
    };
"
	
	
	
	
      end

      operation 2013068 "getGlobalMetaState"
	cpp_virtual cpp_inline private explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return mGlobalMetaState;
    };
"
	
	
	
	
      end

      operation 2013196 "getEventHub"
	cpp_virtual cpp_inline private return_type class_ref 461580 // EventHubInterface
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return mEventHub.get();
    };
"
	
	
	
	
      end

      operation 2013324 "getPolicy"
	cpp_virtual cpp_inline private return_type class_ref 469004 // InputReaderPolicyInterface
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return mPolicy.get();
    };
"
	
	
	
	
      end

      operation 2013452 "getListener"
	cpp_virtual cpp_inline private return_type class_ref 463500 // InputListenerInterface
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return mListener.get();
    };
"
	
	
	
	
      end

      operation 2013580 "disableVirtualKeysUntil"
	cpp_virtual cpp_inline private explicit_return_type "void"
	nparams 1
	  param in name "time" type class_ref 140172 // nsecs_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    };
"
	
	
	
	
      end

      operation 2013708 "shouldDropVirtualKey"
	cpp_virtual cpp_inline private explicit_return_type "bool"
	nparams 4
	  param in name "now" type class_ref 140172 // nsecs_t
	  param inout name "device" type class_ref 469260 // InputDevice
	  param in name "keyCode" explicit_type "int32_t"
	  param in name "scanCode" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract} {
        return false;
    };
"
	
	
	
	
      end

      operation 2013836 "fadePointer"
	cpp_virtual cpp_inline private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    };
"
	
	
	
	
      end

      operation 2013964 "requestTimeoutAtTime"
	cpp_virtual cpp_inline private explicit_return_type "void"
	nparams 1
	  param in name "when" type class_ref 140172 // nsecs_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    };
"
	
	
	
	
      end

      operation 2014092 "bumpGeneration"
	cpp_virtual cpp_inline private explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return ++mGeneration;
    };
"
	
	
	
	
      end
    end

    class 652556 "FakeInputMapper"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " --- FakeInputMapper ---"
      classrelation 1360780 // <generalisation>
	relation 1360780 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 1360780 // <generalisation>
	  b parent class_ref 469772 // InputMapper
      end

      attribute 1746956 "mSources"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1747084 "mKeyboardType"
	private explicit_type "int32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1747212 "mMetaState"
	private explicit_type "int32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1747340 "mKeyCodeStates"
	private explicit_type "int32_t, int32_t"
	stereotype "KeyedVector"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1747468 "mScanCodeStates"
	private explicit_type "int32_t, int32_t"
	stereotype "KeyedVector"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1747596 "mSwitchStates"
	private explicit_type "int32_t, int32_t"
	stereotype "KeyedVector"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1747724 "mSupportedKeyCodes"
	private explicit_type "int32_t"
	stereotype "Vector"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1360908 // mLastEvent (<directional composition>)
	relation 1360908 *-->
	  a role_name "mLastEvent" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 1360908 // mLastEvent (<directional composition>)
	  b parent class_ref 461196 // RawEvent
      end

      attribute 1747852 "mConfigureWasCalled"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1747980 "mResetWasCalled"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1748108 "mProcessWasCalled"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 2014220 "FakeInputMapper"
	cpp_inline public explicit_return_type ""
	nparams 2
	  param inout name "device" type class_ref 469260 // InputDevice
	  param in name "sources" explicit_type "uint32_t"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${volatile}${throw} :
            InputMapper(device),
            mSources(sources), mKeyboardType(AINPUT_KEYBOARD_TYPE_NONE),
            mMetaState(0),
            mConfigureWasCalled(false), mResetWasCalled(false), mProcessWasCalled(false) {
    };
"
	
	
	
	
      end

      operation 2014348 "~FakeInputMapper"
	cpp_virtual cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} { };
"
	
	
	
	
      end

      operation 2014476 "setKeyboardType"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "keyboardType" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        mKeyboardType = keyboardType;
    };
"
	
	
	
	
      end

      operation 2014604 "setMetaState"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "metaState" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        mMetaState = metaState;
    };
"
	
	
	
	
      end

      operation 2014732 "assertConfigureWasCalled"
	cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        ASSERT_TRUE(mConfigureWasCalled)
                << \"Expected configure() to have been called.\";
        mConfigureWasCalled = false;
    };
"
	
	
	
	
      end

      operation 2014860 "assertResetWasCalled"
	cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        ASSERT_TRUE(mResetWasCalled)
                << \"Expected reset() to have been called.\";
        mResetWasCalled = false;
    };
"
	
	
	
	
      end

      operation 2014988 "assertProcessWasCalled"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "outLastEvent" type class_ref 461196 // RawEvent
	    defaultvalue "NULL"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        ASSERT_TRUE(mProcessWasCalled)
                << \"Expected process() to have been called.\";
        if (outLastEvent) {
            *outLastEvent = mLastEvent;
        }
        mProcessWasCalled = false;
    };
"
	
	
	
	
      end

      operation 2015116 "setKeyCodeState"
	cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "keyCode" explicit_type "int32_t"
	  param in name "state" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        mKeyCodeStates.replaceValueFor(keyCode, state);
    };
"
	
	
	
	
      end

      operation 2015244 "setScanCodeState"
	cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "scanCode" explicit_type "int32_t"
	  param in name "state" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        mScanCodeStates.replaceValueFor(scanCode, state);
    };
"
	
	
	
	
      end

      operation 2015372 "setSwitchState"
	cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "switchCode" explicit_type "int32_t"
	  param in name "state" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        mSwitchStates.replaceValueFor(switchCode, state);
    };
"
	
	
	
	
      end

      operation 2015500 "addSupportedKeyCode"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "keyCode" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        mSupportedKeyCodes.add(keyCode);
    };
"
	
	
	
	
      end

      operation 2015628 "getSources"
	cpp_virtual cpp_inline private explicit_return_type "uint32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return mSources;
    };
"
	
	
	
	
      end

      operation 2015756 "populateDeviceInfo"
	cpp_virtual cpp_inline private explicit_return_type "void"
	nparams 1
	  param inout name "deviceInfo" type class_ref 416396 // InputDeviceInfo
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        InputMapper::populateDeviceInfo(deviceInfo);

        if (mKeyboardType != AINPUT_KEYBOARD_TYPE_NONE) {
            deviceInfo->setKeyboardType(mKeyboardType);
        }
    };
"
	
	
	
	
      end

      operation 2015884 "configure"
	cpp_virtual cpp_inline private explicit_return_type "void"
	nparams 3
	  param in name "when" type class_ref 140172 // nsecs_t
	  param in name "config" type class_ref 468748 // InputReaderConfiguration
	  param in name "changes" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract} {
        mConfigureWasCalled = true;
    };
"
	
	
	
	
      end

      operation 2016012 "reset"
	cpp_virtual cpp_inline private explicit_return_type "void"
	nparams 1
	  param in name "when" type class_ref 140172 // nsecs_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        mResetWasCalled = true;
    };
"
	
	
	
	
      end

      operation 2016140 "process"
	cpp_virtual cpp_inline private explicit_return_type "void"
	nparams 1
	  param in name "rawEvent" type class_ref 461196 // RawEvent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        mLastEvent = *rawEvent;
        mProcessWasCalled = true;
    };
"
	
	
	
	
      end

      operation 2016268 "getKeyCodeState"
	cpp_virtual cpp_inline private explicit_return_type "int32_t"
	nparams 2
	  param in name "sourceMask" explicit_type "uint32_t"
	  param in name "keyCode" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        ssize_t index = mKeyCodeStates.indexOfKey(keyCode);
        return index >= 0 ? mKeyCodeStates.valueAt(index) : AKEY_STATE_UNKNOWN;
    };
"
	
	
	
	
      end

      operation 2016396 "getScanCodeState"
	cpp_virtual cpp_inline private explicit_return_type "int32_t"
	nparams 2
	  param in name "sourceMask" explicit_type "uint32_t"
	  param in name "scanCode" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        ssize_t index = mScanCodeStates.indexOfKey(scanCode);
        return index >= 0 ? mScanCodeStates.valueAt(index) : AKEY_STATE_UNKNOWN;
    };
"
	
	
	
	
      end

      operation 2016524 "getSwitchState"
	cpp_virtual cpp_inline private explicit_return_type "int32_t"
	nparams 2
	  param in name "sourceMask" explicit_type "uint32_t"
	  param in name "switchCode" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        ssize_t index = mSwitchStates.indexOfKey(switchCode);
        return index >= 0 ? mSwitchStates.valueAt(index) : AKEY_STATE_UNKNOWN;
    };
"
	
	
	
	
      end

      operation 2016652 "markSupportedKeyCodes"
	cpp_virtual cpp_inline private explicit_return_type "bool"
	nparams 4
	  param in name "sourceMask" explicit_type "uint32_t"
	  param in name "numCodes" explicit_type "size_t"
	  param in name "keyCodes" explicit_type "int32_t"
	  param inout name "outFlags" explicit_type "uint8_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, const ${t2} * ${p2}${v2}, ${t3} * ${p3}${v3}${)}${const}${volatile}${throw}${abstract} {
        bool result = false;
        for (size_t i = 0; i < numCodes; i++) {
            for (size_t j = 0; j < mSupportedKeyCodes.size(); j++) {
                if (keyCodes[i] == mSupportedKeyCodes[j]) {
                    outFlags[i] = 1;
                    result = true;
                }
            }
        }
        return result;
    };
"
	
	
	
	
      end

      operation 2016780 "getMetaState"
	cpp_virtual cpp_inline private explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return mMetaState;
    };
"
	
	
	
	
      end

      operation 2016908 "fadePointer"
	cpp_virtual cpp_inline private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    };
"
	
	
	
	
      end
    end

    class 652684 "InstrumentedInputReader"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " --- InstrumentedInputReader ---"
      classrelation 1361036 // <generalisation>
	relation 1361036 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 1361036 // <generalisation>
	  b parent class_ref 469388 // InputReader
      end

      classrelation 1361164 // mNextDevice (<unidirectional association>)
	relation 1361164 --->
	  a role_name "mNextDevice" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 1361164 // mNextDevice (<unidirectional association>)
	  b parent class_ref 469260 // InputDevice
      end

      operation 2017036 "InstrumentedInputReader"
	cpp_inline public explicit_return_type ""
	nparams 3
	  param in name "eventHub" explicit_type "sp<EventHubInterface>"
	  param in name "policy" explicit_type "sp<InputReaderPolicyInterface>"
	  param in name "listener" explicit_type "sp<InputListenerInterface>"
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, const ${t2} & ${p2}${v2}${)}${volatile}${throw} :
            InputReader(eventHub, policy, listener),
            mNextDevice(NULL) {
    };
"
	
	
	
	
      end

      operation 2017164 "~InstrumentedInputReader"
	cpp_virtual cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {
        if (mNextDevice) {
            delete mNextDevice;
        }
    };
"
	
	
	
	
      end

      operation 2017292 "setNextDevice"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "device" type class_ref 469260 // InputDevice
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        mNextDevice = device;
    };
"
	
	
	
	
      end

      operation 2017420 "newDevice"
	cpp_inline public return_type class_ref 469260 // InputDevice
	nparams 3
	  param in name "deviceId" explicit_type "int32_t"
	  param in name "name" type class_ref 131340 // String8
	  param in name "classes" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract} {
        InputDeviceIdentifier identifier;
        identifier.name = name;
        int32_t generation = deviceId + 1;
        return new InputDevice(&mContext, deviceId, generation, identifier, classes);
    };
"
	
	
	
	
      end

      operation 2017548 "createDeviceLocked"
	cpp_virtual cpp_inline protected return_type class_ref 469260 // InputDevice
	nparams 3
	  param in name "deviceId" explicit_type "int32_t"
	  param in name "identifier" type class_ref 416268 // InputDeviceIdentifier
	  param in name "classes" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract} {
        if (mNextDevice) {
            InputDevice* device = mNextDevice;
            mNextDevice = NULL;
            return device;
        }
        return InputReader::createDeviceLocked(deviceId, identifier, classes);
    };
"
	
	
	
	
      end

      classrelation 1361292 // <dependency>
	relation 1361292 -_->
	  stereotype "friend"
	  a default
	    cpp default "Generated"
	    classrelation_ref 1361292 // <dependency>
	  b parent class_ref 652812 // InputReaderTest
      end
    end

    class 652812 "InputReaderTest"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " --- InputReaderTest ---"
      classrelation 1361420 // <generalisation>
	relation 1361420 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 1361420 // <generalisation>
	  b parent class_ref 651532 // typedef59
      end

      classrelation 1361548 // mFakeListener (<directional composition>)
	relation 1361548 *-->
	  stereotype "sp"
	  a role_name "mFakeListener" protected
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 1361548 // mFakeListener (<directional composition>)
	  b parent class_ref 651916 // FakeInputListener
      end

      classrelation 1361676 // mFakePolicy (<directional composition>)
	relation 1361676 *-->
	  stereotype "sp"
	  a role_name "mFakePolicy" protected
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 1361676 // mFakePolicy (<directional composition>)
	  b parent class_ref 651788 // FakeInputReaderPolicy
      end

      classrelation 1361804 // mFakeEventHub (<directional composition>)
	relation 1361804 *-->
	  stereotype "sp"
	  a role_name "mFakeEventHub" protected
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 1361804 // mFakeEventHub (<directional composition>)
	  b parent class_ref 652044 // FakeEventHub
      end

      classrelation 1361932 // mReader (<directional composition>)
	relation 1361932 *-->
	  stereotype "sp"
	  a role_name "mReader" protected
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 1361932 // mReader (<directional composition>)
	  b parent class_ref 652684 // InstrumentedInputReader
      end

      operation 2017676 "SetUp"
	cpp_virtual cpp_inline protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        mFakeEventHub = new FakeEventHub();
        mFakePolicy = new FakeInputReaderPolicy();
        mFakeListener = new FakeInputListener();

        mReader = new InstrumentedInputReader(mFakeEventHub, mFakePolicy, mFakeListener);
    };
"
	
	
	
	
      end

      operation 2017804 "TearDown"
	cpp_virtual cpp_inline protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        mReader.clear();

        mFakeListener.clear();
        mFakePolicy.clear();
        mFakeEventHub.clear();
    };
"
	
	
	
	
      end

      operation 2017932 "addDevice"
	cpp_inline protected explicit_return_type "void"
	nparams 4
	  param in name "deviceId" explicit_type "int32_t"
	  param in name "name" type class_ref 131340 // String8
	  param in name "classes" explicit_type "uint32_t"
	  param in name "configuration" type class_ref 419212 // PropertyMap
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} ${p2}${v2}, const ${t3} * ${p3}${v3}${)}${const}${volatile}${throw}${abstract} {
        mFakeEventHub->addDevice(deviceId, name, classes);

        if (configuration) {
            mFakeEventHub->addConfigurationMap(deviceId, configuration);
        }
        mFakeEventHub->finishDeviceScan();
        mReader->loopOnce();
        mReader->loopOnce();
        mFakeEventHub->assertQueueIsEmpty();
    };
"
	
	
	
	
      end

      operation 2018060 "addDeviceWithFakeInputMapper"
	cpp_inline protected return_type class_ref 652556 // FakeInputMapper
	nparams 5
	  param in name "deviceId" explicit_type "int32_t"
	  param in name "name" type class_ref 131340 // String8
	  param in name "classes" explicit_type "uint32_t"
	  param in name "sources" explicit_type "uint32_t"
	  param in name "configuration" type class_ref 419212 // PropertyMap
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, const ${t4} * ${p4}${v4}${)}${const}${volatile}${throw}${abstract} {
        InputDevice* device = mReader->newDevice(deviceId, name, classes);
        FakeInputMapper* mapper = new FakeInputMapper(device, sources);
        device->addMapper(mapper);
        mReader->setNextDevice(device);
        addDevice(deviceId, name, classes, configuration);
        return mapper;
    };
"
	
	
	
	
      end
    end

    class 652940 "InputDeviceTest"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " --- InputDeviceTest ---"
      classrelation 1362060 // <generalisation>
	relation 1362060 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 1362060 // <generalisation>
	  b parent class_ref 651532 // typedef59
      end

      attribute 1748236 "DEVICE_NAME"
	class_attribute const_attribute protected explicit_type "char"
	init_value "= \"device\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1748364 "DEVICE_ID"
	class_attribute const_attribute protected explicit_type "int32_t"
	init_value "= 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1748492 "DEVICE_GENERATION"
	class_attribute const_attribute protected explicit_type "int32_t"
	init_value "= 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1748620 "DEVICE_CLASSES"
	class_attribute const_attribute protected explicit_type "uint32_t"
	init_value "= INPUT_DEVICE_CLASS_KEYBOARD
        | INPUT_DEVICE_CLASS_TOUCH | INPUT_DEVICE_CLASS_JOYSTICK"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1362188 // mFakeEventHub (<directional composition>)
	relation 1362188 *-->
	  stereotype "sp"
	  a role_name "mFakeEventHub" protected
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 1362188 // mFakeEventHub (<directional composition>)
	  b parent class_ref 652044 // FakeEventHub
      end

      classrelation 1362316 // mFakePolicy (<directional composition>)
	relation 1362316 *-->
	  stereotype "sp"
	  a role_name "mFakePolicy" protected
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 1362316 // mFakePolicy (<directional composition>)
	  b parent class_ref 651788 // FakeInputReaderPolicy
      end

      classrelation 1362444 // mFakeListener (<directional composition>)
	relation 1362444 *-->
	  stereotype "sp"
	  a role_name "mFakeListener" protected
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 1362444 // mFakeListener (<directional composition>)
	  b parent class_ref 651916 // FakeInputListener
      end

      classrelation 1362572 // mFakeContext (<unidirectional association>)
	relation 1362572 --->
	  a role_name "mFakeContext" protected
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 1362572 // mFakeContext (<unidirectional association>)
	  b parent class_ref 652428 // FakeInputReaderContext
      end

      classrelation 1362700 // mDevice (<unidirectional association>)
	relation 1362700 --->
	  a role_name "mDevice" protected
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 1362700 // mDevice (<unidirectional association>)
	  b parent class_ref 469260 // InputDevice
      end

      operation 2018188 "SetUp"
	cpp_virtual cpp_inline protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        mFakeEventHub = new FakeEventHub();
        mFakePolicy = new FakeInputReaderPolicy();
        mFakeListener = new FakeInputListener();
        mFakeContext = new FakeInputReaderContext(mFakeEventHub, mFakePolicy, mFakeListener);

        mFakeEventHub->addDevice(DEVICE_ID, String8(DEVICE_NAME), 0);
        InputDeviceIdentifier identifier;
        identifier.name = DEVICE_NAME;
        mDevice = new InputDevice(mFakeContext, DEVICE_ID, DEVICE_GENERATION,
                identifier, DEVICE_CLASSES);
    };
"
	
	
	
	
      end

      operation 2018316 "TearDown"
	cpp_virtual cpp_inline protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        delete mDevice;

        delete mFakeContext;
        mFakeListener.clear();
        mFakePolicy.clear();
        mFakeEventHub.clear();
    };
"
	
	
	
	
      end
    end

    class 653068 "InputMapperTest"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " --- InputMapperTest ---"
      classrelation 1362828 // <generalisation>
	relation 1362828 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 1362828 // <generalisation>
	  b parent class_ref 651532 // typedef59
      end

      attribute 1748748 "DEVICE_NAME"
	class_attribute const_attribute protected explicit_type "char"
	init_value "= \"device\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1748876 "DEVICE_ID"
	class_attribute const_attribute protected explicit_type "int32_t"
	init_value "= 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1749004 "DEVICE_GENERATION"
	class_attribute const_attribute protected explicit_type "int32_t"
	init_value "= 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1749132 "DEVICE_CLASSES"
	class_attribute const_attribute protected explicit_type "uint32_t"
	init_value "= 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1362956 // mFakeEventHub (<directional composition>)
	relation 1362956 *-->
	  stereotype "sp"
	  a role_name "mFakeEventHub" protected
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 1362956 // mFakeEventHub (<directional composition>)
	  b parent class_ref 652044 // FakeEventHub
      end

      classrelation 1363084 // mFakePolicy (<directional composition>)
	relation 1363084 *-->
	  stereotype "sp"
	  a role_name "mFakePolicy" protected
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 1363084 // mFakePolicy (<directional composition>)
	  b parent class_ref 651788 // FakeInputReaderPolicy
      end

      classrelation 1363212 // mFakeListener (<directional composition>)
	relation 1363212 *-->
	  stereotype "sp"
	  a role_name "mFakeListener" protected
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 1363212 // mFakeListener (<directional composition>)
	  b parent class_ref 651916 // FakeInputListener
      end

      classrelation 1363340 // mFakeContext (<unidirectional association>)
	relation 1363340 --->
	  a role_name "mFakeContext" protected
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 1363340 // mFakeContext (<unidirectional association>)
	  b parent class_ref 652428 // FakeInputReaderContext
      end

      classrelation 1363468 // mDevice (<unidirectional association>)
	relation 1363468 --->
	  a role_name "mDevice" protected
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 1363468 // mDevice (<unidirectional association>)
	  b parent class_ref 469260 // InputDevice
      end

      operation 2018444 "SetUp"
	cpp_virtual cpp_inline protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        mFakeEventHub = new FakeEventHub();
        mFakePolicy = new FakeInputReaderPolicy();
        mFakeListener = new FakeInputListener();
        mFakeContext = new FakeInputReaderContext(mFakeEventHub, mFakePolicy, mFakeListener);
        InputDeviceIdentifier identifier;
        identifier.name = DEVICE_NAME;
        mDevice = new InputDevice(mFakeContext, DEVICE_ID, DEVICE_GENERATION,
                identifier, DEVICE_CLASSES);

        mFakeEventHub->addDevice(DEVICE_ID, String8(DEVICE_NAME), 0);
    };
"
	
	
	
	
      end

      operation 2018572 "TearDown"
	cpp_virtual cpp_inline protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        delete mDevice;
        delete mFakeContext;
        mFakeListener.clear();
        mFakePolicy.clear();
        mFakeEventHub.clear();
    };
"
	
	
	
	
      end

      operation 2018700 "addConfigurationProperty"
	cpp_inline protected explicit_return_type "void"
	nparams 2
	  param in name "key" explicit_type "char"
	  param in name "value" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, const ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        mFakeEventHub->addConfigurationProperty(DEVICE_ID, String8(key), String8(value));
    };
"
	
	
	
	
      end

      operation 2018828 "addMapperAndConfigure"
	cpp_inline protected explicit_return_type "void"
	nparams 1
	  param inout name "mapper" type class_ref 469772 // InputMapper
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        mDevice->addMapper(mapper);
        mDevice->configure(ARBITRARY_TIME, mFakePolicy->getReaderConfiguration(), 0);
        mDevice->reset(ARBITRARY_TIME);
    };
"
	
	
	
	
      end

      operation 2018956 "setDisplayInfoAndReconfigure"
	cpp_inline protected explicit_return_type "void"
	nparams 4
	  param in name "displayId" explicit_type "int32_t"
	  param in name "width" explicit_type "int32_t"
	  param in name "height" explicit_type "int32_t"
	  param in name "orientation" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract} {
        mFakePolicy->setDisplayInfo(displayId, width, height, orientation);
        mDevice->configure(ARBITRARY_TIME, mFakePolicy->getReaderConfiguration(),
                InputReaderConfiguration::CHANGE_DISPLAY_INFO);
    };
"
	
	
	
	
      end

      operation 2019084 "process"
	class_operation cpp_inline protected explicit_return_type "void"
	nparams 6
	  param inout name "mapper" type class_ref 469772 // InputMapper
	  param in name "when" type class_ref 140172 // nsecs_t
	  param in name "deviceId" explicit_type "int32_t"
	  param in name "type" explicit_type "int32_t"
	  param in name "code" explicit_type "int32_t"
	  param in name "value" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} ${p5}${v5}${)}${const}${volatile}${throw}${abstract} {
        RawEvent event;
        event.when = when;
        event.deviceId = deviceId;
        event.type = type;
        event.code = code;
        event.value = value;
        mapper->process(&event);
    };
"
	
	
	
	
      end

      operation 2019212 "assertMotionRange"
	class_operation cpp_inline protected explicit_return_type "void"
	nparams 7
	  param in name "info" type class_ref 416396 // InputDeviceInfo
	  param in name "axis" explicit_type "int32_t"
	  param in name "source" explicit_type "uint32_t"
	  param in name "min" explicit_type "float"
	  param in name "max" explicit_type "float"
	  param in name "flat" explicit_type "float"
	  param in name "fuzz" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} ${p5}${v5}, ${t6} ${p6}${v6}${)}${const}${volatile}${throw}${abstract} {
        const InputDeviceInfo::MotionRange* range = info.getMotionRange(axis, source);
        ASSERT_TRUE(range != NULL) << \"Axis: \" << axis << \" Source: \" << source;
        ASSERT_EQ(axis, range->axis) << \"Axis: \" << axis << \" Source: \" << source;
        ASSERT_EQ(source, range->source) << \"Axis: \" << axis << \" Source: \" << source;
        ASSERT_NEAR(min, range->min, EPSILON) << \"Axis: \" << axis << \" Source: \" << source;
        ASSERT_NEAR(max, range->max, EPSILON) << \"Axis: \" << axis << \" Source: \" << source;
        ASSERT_NEAR(flat, range->flat, EPSILON) << \"Axis: \" << axis << \" Source: \" << source;
        ASSERT_NEAR(fuzz, range->fuzz, EPSILON) << \"Axis: \" << axis << \" Source: \" << source;
    };
"
	
	
	
	
      end

      operation 2019340 "assertPointerCoords"
	class_operation cpp_inline protected explicit_return_type "void"
	nparams 11
	  param in name "coords" type class_ref 415500 // PointerCoords
	  param in name "x" explicit_type "float"
	  param in name "y" explicit_type "float"
	  param in name "pressure" explicit_type "float"
	  param in name "size" explicit_type "float"
	  param in name "touchMajor" explicit_type "float"
	  param in name "touchMinor" explicit_type "float"
	  param in name "toolMajor" explicit_type "float"
	  param in name "toolMinor" explicit_type "float"
	  param in name "orientation" explicit_type "float"
	  param in name "distance" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} ${p5}${v5}, ${t6} ${p6}${v6}, ${t7} ${p7}${v7}, ${t8} ${p8}${v8}, ${t9} ${p9}${v9}, ${t10} ${p10}${v10}${)}${const}${volatile}${throw}${abstract} {
        ASSERT_NEAR(x, coords.getAxisValue(AMOTION_EVENT_AXIS_X), 1);
        ASSERT_NEAR(y, coords.getAxisValue(AMOTION_EVENT_AXIS_Y), 1);
        ASSERT_NEAR(pressure, coords.getAxisValue(AMOTION_EVENT_AXIS_PRESSURE), EPSILON);
        ASSERT_NEAR(size, coords.getAxisValue(AMOTION_EVENT_AXIS_SIZE), EPSILON);
        ASSERT_NEAR(touchMajor, coords.getAxisValue(AMOTION_EVENT_AXIS_TOUCH_MAJOR), 1);
        ASSERT_NEAR(touchMinor, coords.getAxisValue(AMOTION_EVENT_AXIS_TOUCH_MINOR), 1);
        ASSERT_NEAR(toolMajor, coords.getAxisValue(AMOTION_EVENT_AXIS_TOOL_MAJOR), 1);
        ASSERT_NEAR(toolMinor, coords.getAxisValue(AMOTION_EVENT_AXIS_TOOL_MINOR), 1);
        ASSERT_NEAR(orientation, coords.getAxisValue(AMOTION_EVENT_AXIS_ORIENTATION), EPSILON);
        ASSERT_NEAR(distance, coords.getAxisValue(AMOTION_EVENT_AXIS_DISTANCE), EPSILON);
    };
"
	
	
	
	
      end

      operation 2019468 "assertPosition"
	class_operation cpp_inline protected explicit_return_type "void"
	nparams 3
	  param in name "controller" explicit_type "sp<FakePointerController>"
	  param in name "x" explicit_type "float"
	  param in name "y" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract} {
        float actualX, actualY;
        controller->getPosition(&actualX, &actualY);
        ASSERT_NEAR(x, actualX, 1);
        ASSERT_NEAR(y, actualY, 1);
    };
"
	
	
	
	
      end
    end

    class 653196 "SwitchInputMapperTest"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " not needed for current tests
 --- SwitchInputMapperTest ---"
      classrelation 1363596 // <generalisation>
	relation 1363596 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 1363596 // <generalisation>
	  b parent class_ref 653068 // InputMapperTest
      end
    end

    class 653324 "KeyboardInputMapperTest"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " --- KeyboardInputMapperTest ---"
      classrelation 1363724 // <generalisation>
	relation 1363724 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 1363724 // <generalisation>
	  b parent class_ref 653068 // InputMapperTest
      end

      operation 2019596 "testDPadKeyRotation"
	preserve_cpp_body_indent protected explicit_return_type "void"
	nparams 4
	  param inout name "mapper" type class_ref 471692 // KeyboardInputMapper
	  param in name "originalScanCode" explicit_type "int32_t"
	  param in name "originalKeyCode" explicit_type "int32_t"
	  param in name "rotatedKeyCode" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end
    end

    class 653452 "CursorInputMapperTest"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " --- CursorInputMapperTest ---"
      classrelation 1363852 // <generalisation>
	relation 1363852 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 1363852 // <generalisation>
	  b parent class_ref 653068 // InputMapperTest
      end

      attribute 1749260 "TRACKBALL_MOVEMENT_THRESHOLD"
	class_attribute const_attribute protected explicit_type "int32_t"
	init_value "= 6"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1363980 // mFakePointerController (<directional composition>)
	relation 1363980 *-->
	  stereotype "sp"
	  a role_name "mFakePointerController" protected
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 1363980 // mFakePointerController (<directional composition>)
	  b parent class_ref 651660 // FakePointerController
      end

      operation 2019724 "SetUp"
	cpp_virtual cpp_inline protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        InputMapperTest::SetUp();

        mFakePointerController = new FakePointerController();
        mFakePolicy->setPointerController(DEVICE_ID, mFakePointerController);
    };
"
	
	
	
	
      end

      operation 2019852 "testMotionRotation"
	preserve_cpp_body_indent protected explicit_return_type "void"
	nparams 5
	  param inout name "mapper" type class_ref 472204 // CursorInputMapper
	  param in name "originalX" explicit_type "int32_t"
	  param in name "originalY" explicit_type "int32_t"
	  param in name "rotatedX" explicit_type "int32_t"
	  param in name "rotatedY" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end
    end

    class 653580 "TouchInputMapperTest"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " --- TouchInputMapperTest ---"
      classrelation 1364108 // <generalisation>
	relation 1364108 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 1364108 // <generalisation>
	  b parent class_ref 653068 // InputMapperTest
      end

      attribute 1749388 "RAW_X_MIN"
	class_attribute const_attribute protected explicit_type "int32_t"
	init_value "= 25"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1749516 "RAW_X_MAX"
	class_attribute const_attribute protected explicit_type "int32_t"
	init_value "= 1019"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1749644 "RAW_Y_MIN"
	class_attribute const_attribute protected explicit_type "int32_t"
	init_value "= 30"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1749772 "RAW_Y_MAX"
	class_attribute const_attribute protected explicit_type "int32_t"
	init_value "= 1009"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1749900 "RAW_TOUCH_MIN"
	class_attribute const_attribute protected explicit_type "int32_t"
	init_value "= 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1750028 "RAW_TOUCH_MAX"
	class_attribute const_attribute protected explicit_type "int32_t"
	init_value "= 31"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1750156 "RAW_TOOL_MIN"
	class_attribute const_attribute protected explicit_type "int32_t"
	init_value "= 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1750284 "RAW_TOOL_MAX"
	class_attribute const_attribute protected explicit_type "int32_t"
	init_value "= 15"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1750412 "RAW_PRESSURE_MIN"
	class_attribute const_attribute protected explicit_type "int32_t"
	init_value "= RAW_TOUCH_MIN"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1750540 "RAW_PRESSURE_MAX"
	class_attribute const_attribute protected explicit_type "int32_t"
	init_value "= RAW_TOUCH_MAX"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1750668 "RAW_ORIENTATION_MIN"
	class_attribute const_attribute protected explicit_type "int32_t"
	init_value "= -7"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1750796 "RAW_ORIENTATION_MAX"
	class_attribute const_attribute protected explicit_type "int32_t"
	init_value "= 7"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1750924 "RAW_DISTANCE_MIN"
	class_attribute const_attribute protected explicit_type "int32_t"
	init_value "= 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1751052 "RAW_DISTANCE_MAX"
	class_attribute const_attribute protected explicit_type "int32_t"
	init_value "= 7"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1751180 "RAW_TILT_MIN"
	class_attribute const_attribute protected explicit_type "int32_t"
	init_value "= 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1751308 "RAW_TILT_MAX"
	class_attribute const_attribute protected explicit_type "int32_t"
	init_value "= 150"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1751436 "RAW_ID_MIN"
	class_attribute const_attribute protected explicit_type "int32_t"
	init_value "= 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1751564 "RAW_ID_MAX"
	class_attribute const_attribute protected explicit_type "int32_t"
	init_value "= 9"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1751692 "RAW_SLOT_MIN"
	class_attribute const_attribute protected explicit_type "int32_t"
	init_value "= 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1751820 "RAW_SLOT_MAX"
	class_attribute const_attribute protected explicit_type "int32_t"
	init_value "= 9"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1751948 "X_PRECISION"
	class_attribute const_attribute protected explicit_type "float"
	init_value "= float(RAW_X_MAX - RAW_X_MIN + 1) / DISPLAY_WIDTH"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1752076 "Y_PRECISION"
	class_attribute const_attribute protected explicit_type "float"
	init_value "= float(RAW_Y_MAX - RAW_Y_MIN + 1) / DISPLAY_HEIGHT"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1752204 "GEOMETRIC_SCALE"
	class_attribute const_attribute protected explicit_type "float"
	init_value "=
        avg(float(DISPLAY_WIDTH) / (RAW_X_MAX - RAW_X_MIN + 1),
                float(DISPLAY_HEIGHT) / (RAW_Y_MAX - RAW_Y_MIN + 1))"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1364236 // VIRTUAL_KEYS (<directional composition>)
	relation 1364236 *-->
	  a role_name "VIRTUAL_KEYS" multiplicity "[2]" init_value "= {
        { KEY_HOME, 60, DISPLAY_HEIGHT + 15, 20, 20 },
        { KEY_MENU, DISPLAY_HEIGHT - 60, DISPLAY_WIDTH + 15, 20, 20 },
}" class_relation const_relation protected
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	    classrelation_ref 1364236 // VIRTUAL_KEYS (<directional composition>)
	  b parent class_ref 428428 // VirtualKeyDefinition
      end

      class 653708 "Axes"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum ${name} {
${items}
};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 1752332 "POSITION"
	  public type class_ref 653708 // Axes
	  init_value " 1 << 0"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1752460 "TOUCH"
	  public type class_ref 653708 // Axes
	  init_value " 1 << 1"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1752588 "TOOL"
	  public type class_ref 653708 // Axes
	  init_value " 1 << 2"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1752716 "PRESSURE"
	  public type class_ref 653708 // Axes
	  init_value " 1 << 3"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1752844 "ORIENTATION"
	  public type class_ref 653708 // Axes
	  init_value " 1 << 4"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1752972 "MINOR"
	  public type class_ref 653708 // Axes
	  init_value " 1 << 5"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1753100 "ID"
	  public type class_ref 653708 // Axes
	  init_value " 1 << 6"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1753228 "DISTANCE"
	  public type class_ref 653708 // Axes
	  init_value " 1 << 7"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1753356 "TILT"
	  public type class_ref 653708 // Axes
	  init_value " 1 << 8"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1753484 "SLOT"
	  public type class_ref 653708 // Axes
	  init_value " 1 << 9"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1753612 "TOOL_TYPE"
	  public type class_ref 653708 // Axes
	  init_value " 1 << 10"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      operation 2019980 "prepareDisplay"
	preserve_cpp_body_indent protected explicit_return_type "void"
	nparams 1
	  param in name "orientation" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 2020108 "prepareVirtualKeys"
	preserve_cpp_body_indent protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 2020236 "toRawX"
	preserve_cpp_body_indent protected explicit_return_type "int32_t"
	nparams 1
	  param in name "displayX" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 2020364 "toRawY"
	preserve_cpp_body_indent protected explicit_return_type "int32_t"
	nparams 1
	  param in name "displayY" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 2020492 "toDisplayX"
	preserve_cpp_body_indent protected explicit_return_type "float"
	nparams 1
	  param in name "rawX" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 2020620 "toDisplayY"
	preserve_cpp_body_indent protected explicit_return_type "float"
	nparams 1
	  param in name "rawY" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end
    end

    class 653836 "SingleTouchInputMapperTest"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " --- SingleTouchInputMapperTest ---"
      classrelation 1364364 // <generalisation>
	relation 1364364 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 1364364 // <generalisation>
	  b parent class_ref 653580 // TouchInputMapperTest
      end

      operation 2020748 "prepareButtons"
	preserve_cpp_body_indent protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 2020876 "prepareAxes"
	preserve_cpp_body_indent protected explicit_return_type "void"
	nparams 1
	  param in name "axes" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 2021004 "processDown"
	preserve_cpp_body_indent protected explicit_return_type "void"
	nparams 3
	  param inout name "mapper" type class_ref 475148 // SingleTouchInputMapper
	  param in name "x" explicit_type "int32_t"
	  param in name "y" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 2021132 "processMove"
	preserve_cpp_body_indent protected explicit_return_type "void"
	nparams 3
	  param inout name "mapper" type class_ref 475148 // SingleTouchInputMapper
	  param in name "x" explicit_type "int32_t"
	  param in name "y" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 2021260 "processUp"
	preserve_cpp_body_indent protected explicit_return_type "void"
	nparams 1
	  param inout name "mapper" type class_ref 475148 // SingleTouchInputMapper
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 2021388 "processPressure"
	preserve_cpp_body_indent protected explicit_return_type "void"
	nparams 2
	  param inout name "mapper" type class_ref 475148 // SingleTouchInputMapper
	  param in name "pressure" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 2021516 "processToolMajor"
	preserve_cpp_body_indent protected explicit_return_type "void"
	nparams 2
	  param inout name "mapper" type class_ref 475148 // SingleTouchInputMapper
	  param in name "toolMajor" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 2021644 "processDistance"
	preserve_cpp_body_indent protected explicit_return_type "void"
	nparams 2
	  param inout name "mapper" type class_ref 475148 // SingleTouchInputMapper
	  param in name "distance" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 2021772 "processTilt"
	preserve_cpp_body_indent protected explicit_return_type "void"
	nparams 3
	  param inout name "mapper" type class_ref 475148 // SingleTouchInputMapper
	  param in name "tiltX" explicit_type "int32_t"
	  param in name "tiltY" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 2021900 "processKey"
	preserve_cpp_body_indent protected explicit_return_type "void"
	nparams 3
	  param inout name "mapper" type class_ref 475148 // SingleTouchInputMapper
	  param in name "code" explicit_type "int32_t"
	  param in name "value" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 2022028 "processSync"
	preserve_cpp_body_indent protected explicit_return_type "void"
	nparams 1
	  param inout name "mapper" type class_ref 475148 // SingleTouchInputMapper
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end
    end

    class 653964 "MultiTouchInputMapperTest"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " --- MultiTouchInputMapperTest ---"
      classrelation 1364492 // <generalisation>
	relation 1364492 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 1364492 // <generalisation>
	  b parent class_ref 653580 // TouchInputMapperTest
      end

      operation 2022156 "prepareAxes"
	preserve_cpp_body_indent protected explicit_return_type "void"
	nparams 1
	  param in name "axes" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 2022284 "processPosition"
	preserve_cpp_body_indent protected explicit_return_type "void"
	nparams 3
	  param inout name "mapper" type class_ref 475276 // MultiTouchInputMapper
	  param in name "x" explicit_type "int32_t"
	  param in name "y" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 2022412 "processTouchMajor"
	preserve_cpp_body_indent protected explicit_return_type "void"
	nparams 2
	  param inout name "mapper" type class_ref 475276 // MultiTouchInputMapper
	  param in name "touchMajor" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 2022540 "processTouchMinor"
	preserve_cpp_body_indent protected explicit_return_type "void"
	nparams 2
	  param inout name "mapper" type class_ref 475276 // MultiTouchInputMapper
	  param in name "touchMinor" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 2022668 "processToolMajor"
	preserve_cpp_body_indent protected explicit_return_type "void"
	nparams 2
	  param inout name "mapper" type class_ref 475276 // MultiTouchInputMapper
	  param in name "toolMajor" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 2022796 "processToolMinor"
	preserve_cpp_body_indent protected explicit_return_type "void"
	nparams 2
	  param inout name "mapper" type class_ref 475276 // MultiTouchInputMapper
	  param in name "toolMinor" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 2022924 "processOrientation"
	preserve_cpp_body_indent protected explicit_return_type "void"
	nparams 2
	  param inout name "mapper" type class_ref 475276 // MultiTouchInputMapper
	  param in name "orientation" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 2023052 "processPressure"
	preserve_cpp_body_indent protected explicit_return_type "void"
	nparams 2
	  param inout name "mapper" type class_ref 475276 // MultiTouchInputMapper
	  param in name "pressure" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 2023180 "processDistance"
	preserve_cpp_body_indent protected explicit_return_type "void"
	nparams 2
	  param inout name "mapper" type class_ref 475276 // MultiTouchInputMapper
	  param in name "distance" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 2023308 "processId"
	preserve_cpp_body_indent protected explicit_return_type "void"
	nparams 2
	  param inout name "mapper" type class_ref 475276 // MultiTouchInputMapper
	  param in name "id" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 2023436 "processSlot"
	preserve_cpp_body_indent protected explicit_return_type "void"
	nparams 2
	  param inout name "mapper" type class_ref 475276 // MultiTouchInputMapper
	  param in name "slot" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 2023564 "processToolType"
	preserve_cpp_body_indent protected explicit_return_type "void"
	nparams 2
	  param inout name "mapper" type class_ref 475276 // MultiTouchInputMapper
	  param in name "toolType" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 2023692 "processKey"
	preserve_cpp_body_indent protected explicit_return_type "void"
	nparams 3
	  param inout name "mapper" type class_ref 475276 // MultiTouchInputMapper
	  param in name "code" explicit_type "int32_t"
	  param in name "value" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 2023820 "processMTSync"
	preserve_cpp_body_indent protected explicit_return_type "void"
	nparams 1
	  param inout name "mapper" type class_ref 475276 // MultiTouchInputMapper
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 2023948 "processSync"
	preserve_cpp_body_indent protected explicit_return_type "void"
	nparams 1
	  param inout name "mapper" type class_ref 475276 // MultiTouchInputMapper
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end
    end
  end

  deploymentview 158604 "tests"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 292108 "FakeInputDispatcherPolicy"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 651276 // FakeInputDispatcherPolicy
      end
    end

    artifact 292236 "typedef59"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 651532 // typedef59
      end
    end

    artifact 292364 "InputDispatcherTest"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 651404 // InputDispatcherTest
      end
    end

    artifact 292492 "FakePointerController"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 651660 // FakePointerController
      end
    end

    artifact 292620 "FakeInputReaderPolicy"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 651788 // FakeInputReaderPolicy
      end
    end

    artifact 292748 "FakeInputListener"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 651916 // FakeInputListener
      end
    end

    artifact 292876 "FakeEventHub"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 652044 // FakeEventHub
      end
    end

    artifact 293004 "FakeInputReaderContext"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 652428 // FakeInputReaderContext
      end
    end

    artifact 293132 "FakeInputMapper"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 652556 // FakeInputMapper
      end
    end

    artifact 293260 "InstrumentedInputReader"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 652684 // InstrumentedInputReader
      end
    end

    artifact 293388 "InputReaderTest"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 652812 // InputReaderTest
      end
    end

    artifact 293516 "InputDeviceTest"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 652940 // InputDeviceTest
      end
    end

    artifact 293644 "InputMapperTest"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 653068 // InputMapperTest
      end
    end

    artifact 293772 "SwitchInputMapperTest"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 653196 // SwitchInputMapperTest
      end
    end

    artifact 293900 "KeyboardInputMapperTest"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 653324 // KeyboardInputMapperTest
      end
    end

    artifact 294028 "CursorInputMapperTest"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 653452 // CursorInputMapperTest
      end
    end

    artifact 294156 "TouchInputMapperTest"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 653580 // TouchInputMapperTest
      end
    end

    artifact 294284 "SingleTouchInputMapperTest"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 653836 // SingleTouchInputMapperTest
      end
    end

    artifact 294412 "MultiTouchInputMapperTest"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 653964 // MultiTouchInputMapperTest
      end
    end
  end
end
