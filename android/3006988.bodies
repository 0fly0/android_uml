class SelectSubDeviceDialogActivity
!!!12272524.java!!!	onCreate(inout savedInstanceState : Bundle) : void
        super.onCreate(savedInstanceState);
        setContentView(R.layout.select_device);
        deviceid = getIntent().getStringExtra("device_id");
        deviceport = getIntent().getIntExtra("device_port", 1);
        mTvCecService = CecUtils.getITvCecService();
        updateList();
!!!12272652.java!!!	onStart() : void
        super.onStart();
!!!12272780.java!!!	onStop() : void

        super.onStop();
!!!12272908.java!!!	onNewIntent(inout intent : Intent) : void
        super.onNewIntent(intent);
        setIntent(intent);
!!!12273036.java!!!	updateList() : void
        // test code
        List<CECDevInfo> list = CecUtils.getConnectedDevicesAtPort(deviceport);
        int size = list.size();
        int i, devaddr, devtype;
        String name;
        if (size <= 0) {
            return;
        }

        for (i = 0; i < size; i++) {
            devaddr = list.get(i).getDeviceAddress();
            devtype = list.get(i).getDeviceType();
            if (devtype != DeviceType.AudioDevice && devtype != DeviceType.SWITCH_DEVICE) {
                name = list.get(i).getOsdName();
                CecDevice device = new CecDevice(devaddr, name);
                devices.add(device);
            }
        }

        final ArrayAdapter<CecDevice> adapter = new ArrayAdapter<CecDevice>(this,
                android.R.layout.simple_list_item_2, android.R.id.text1,
                devices) {
            @Override
            public View getView(int position, View convertView,
                    ViewGroup parent) {
                CecDevice device = getItem(position);
                View view = super.getView(position, convertView, parent);
                TextView title = (TextView) view.findViewById(
                        android.R.id.text1);
                title.setText(deviceid + "   " + device.getDeviceName());
                return view;
            }
        };
        ListView listView = (ListView) findViewById(R.id.devices);
        listView.setAdapter(adapter);
        listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
            @Override
            public void onItemClick(AdapterView<?> parent, View view,
                    int position, long id) {
                CecDevice device = adapter.getItem(position);

                // Moving finish here. As there is a race condition and window
                // manager is not able to remove the dialog
                finish();
                Intent intent = new Intent(CecUtils.CEC_ACTION_ACTIVE_SOURCE);
                Bundle hdmiData = new Bundle();
                hdmiData.putInt(HdmiCecUtils.EXTRA_HDMI_PORT, deviceport);
                hdmiData.putInt(HdmiCecUtils.EXTRA_HDMI_LOGICAL_ADDR,
                        device.getAddr());
                intent.putExtra(HdmiCecUtils.EXTRA_HDMI_BUNDLE, hdmiData);
                startService(intent);

                // Set the Current Device as the Default Device. So that on
                // Reboot this Device start playback
                Intent defaultIntent = MediaDevicesIntents
                        .createServiceDefaultDeviceIntent(deviceid);
                getApplicationContext().startService(defaultIntent);
            }
        });
