class ChannelListDialog
!!!13300492.java!!!	ChannelListDialog(in title : String)
        mTitle = title;
!!!13300620.java!!!	onActivityCreated(inout savedState : Bundle) : void
        super.onActivityCreated(savedState);

        if (savedState != null) {
            mLastSelectedIndex = savedState.getInt(KEY_LAST_SELECTED_INDEX);
        }

        mChannelListAdapter = new ChannelListAdapter(getActivity());
        getDialog().setTitle(mTitle);
        setStyle(DialogFragment.STYLE_NORMAL,
                android.R.style.Theme_Holo_Dialog_MinWidth);
!!!13300748.java!!!	onCreateView(inout inflater : LayoutInflater, inout container : ViewGroup, inout savedInstanceState : Bundle) : View
        Log.d(TAG, "Creating GtvResources; activity=" + getActivity());
        mGtvResources = new GtvResources(getActivity());

        View view = mGtvResources.getLayoutInflater().inflate(
                R.layout.channel_list_dialog, null);

        mListView = (ListView) view.findViewById(R.id.channel_list);

        mListView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
                public void onItemClick(AdapterView<?> parent, View view,
                        int position, long id) {
                    mLastSelectedIndex = position;
                    Channel channel = (Channel) mListView.getItemAtPosition(position);
                    if (channel != null) {
                        onChannelSelected(channel);
                    }
                    dismiss();
                }
            });

        mFilterEditText = (EditText) view.findViewById(R.id.filter_text);
        mFilterEditText.addTextChangedListener(new TextWatcher() {
                @Override
                public void beforeTextChanged(CharSequence s, int start,
                        int count, int after) {}

                @Override
                public void onTextChanged(CharSequence s, int start,
                        int before, int count) {}

                @Override
                public void afterTextChanged(Editable s) {
                    applyFilter(s.toString());
                }

            });

        // If the user types a character that is valid for the search field
        // while the list view is focused, send that key event to the search
        // field and give it input focus.
        mListView.setOnKeyListener(new ChannelSearchKeyListener(mFilterEditText));

        mEmptyView = view.findViewById(R.id.empty);

        return view;
!!!13300876.java!!!	onStart() : void
        super.onStart();
        // It's up to the caller to ensure that setDeviceId() is called
        // before showing this dialog; otherwise an empty list will be
        // displayed.
        if (mDeviceId != null) {
            mLoadChannelListTask = new MyLoadChannelListTask(mDeviceId);
            mLoadChannelListTask.execute();
        }
!!!13301004.java!!!	onStop() : void
        if (mLoadChannelListTask != null) {
            mLoadChannelListTask.cancel(false);
            mLoadChannelListTask = null;
        }
        super.onStop();
!!!13301132.java!!!	onCancel(inout dialog : DialogInterface) : void
        onCancelled();
        super.onCancel(dialog);
!!!13301260.java!!!	onSaveInstanceState(inout outState : Bundle) : void
        outState.putInt(KEY_LAST_SELECTED_INDEX, mLastSelectedIndex);
!!!13301388.java!!!	setCurrentChannel(inout uri : Uri) : void
        mCurrentChannel = uri;
!!!13301516.java!!!	setDeviceId(in deviceId : String) : void
        mDeviceId = deviceId;
!!!13301644.java!!!	preselectChannel() : boolean
        int indexToSelect = mLastSelectedIndex;
        boolean foundChannel = false;
        if ((mListView != null) && (mCurrentChannel != null)) {
            String uri = mCurrentChannel.toString();
            ChannelListAdapter adapter =
                    (ChannelListAdapter) mListView.getAdapter();
            int count = adapter.getCount();
            for (int i = 0; i < count; ++i) {
                Channel channel = adapter.getItem(i);
                if (channel.getUri().equals(uri)) {
                    indexToSelect = i;
                    foundChannel = true;
                    break;
                }
            }
        }

        if (mListView != null && mGtvResources != null) {
            int offset = mGtvResources.getResources().getDimensionPixelSize(
                    R.dimen.channel_list_selection_offset_from_top);
            mListView.setSelectionFromTop(indexToSelect, offset);
        }

        return foundChannel;
!!!13301772.java!!!	applyFilter(in text : String) : void
        ChannelListAdapter adapter =
                (ChannelListAdapter) mListView.getAdapter();
        // May not yet have an adapter, if the channel list hasn't finished
        // loading.
        if (adapter == null) return;

        adapter.getFilter().filter(text);
