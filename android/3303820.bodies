class Parcel
!!!14257164.cpp!!!	write(in val : LightFlattenable<T>) : status_t
    size_t size(val.getSize());
    if (!val.isFixedSize()) {
        status_t err = writeInt32(size);
        if (err != NO_ERROR) {
            return err;
        }
    }
    if (size) {
        void* buffer = writeInplace(size);
        return buffer == NULL ? NO_MEMORY :
                val.flatten(buffer);
    }
    return NO_ERROR;
!!!14260620.cpp!!!	read(inout val : LightFlattenable<T>) : status_t
    size_t size;
    if (val.isFixedSize()) {
        size = val.getSize();
    } else {
        int32_t s;
        status_t err = readInt32(&s);
        if (err != NO_ERROR) {
            return err;
        }
        size = s;
    }
    if (size) {
        void const* buffer = readInplace(size);
        return buffer == NULL ? NO_MEMORY :
                val.unflatten(buffer, size);
    }
    return NO_ERROR;
