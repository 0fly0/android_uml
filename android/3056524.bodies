class RecorderActivity
!!!12649356.java!!!	onCreate(inout savedInstanceState : Bundle) : void
        super.onCreate(savedInstanceState);
        setContentView(R.layout.recorder_activity);

        mVideoView  = (RecordingVideoView) findViewById(R.id.recorder_videoview);
        mMediaController = new GtvMediaController(this, false);
        mVideoView.setMediaController(mMediaController);
        mVideoView.setOwner(this);
        mVideoView.setOnPreparedListener(new PreparedListener());
        mVideoView.setOnErrorListener(new ErrorListener());
        mVideoView.setOnCompletionListener(new CompletionListener());

        Intent intent = getIntent();
        String fileName = intent.getStringExtra("RecordFile");
        String mediaUri = intent.getStringExtra("MediaFile");

        if (null == fileName) {
            exitWithAssertion("intent error");
        } else {
            mBasicData = new BasicData();

            if (null == mediaUri) {
                AssetManager assetManager = getAssets();
                mBasicData.copyAssets(assetManager);
                mediaUri = "ed_test.mp4";
            }

            mBasicData.setDataErrorListener(new BasicData.DataErrorListener() {
                    public void onDataError(String errorMessage) {
                        exitWithAssertion(errorMessage);
                    }
            });

            if (mBasicData.setFileName(fileName, mediaUri)) {
                if (mBasicData.openFile()) {
                    mBasicData.addCommentItem(100, mBasicData.getMediaUri());
                    setVideoUri();
                }
            }
        }
!!!12649484.java!!!	setVideoUri() : void
        Uri contentUri = Uri.parse(mBasicData.getMediaUri());
        HashMap<String, String> headers = new HashMap<String, String>();
        headers.put("X-Gtv-TestHeader", "Some value");
        mVideoView.setVideoURI(contentUri, headers);
!!!12649612.java!!!	exitWithAssertion(in errorMessage : String) : void
        AlertDialog.Builder builder = new AlertDialog.Builder(this);
        builder.setTitle("Error");
        builder.setMessage(errorMessage);
        builder.setPositiveButton("OK", new DialogInterface.OnClickListener() {
                public void onClick(DialogInterface dialog, int whichButton) {
                    finishActivity();
                }
        });

        builder.show();
!!!12649740.java!!!	resetActionSet() : void
        mBasicData.resetActionSet();
!!!12649868.java!!!	finishActivity() : void
        finish();
!!!12649996.java!!!	showMediaController() : void
        mMediaController.show();
!!!12650124.java!!!	saveRecord(in stopTime : long) : void
        if (!mDidSave) {
            mBasicData.popActionItem();
            mBasicData.popActionItem();
            mBasicData.writeFile(stopTime);
            mDidSave = true;
        }
!!!12650252.java!!!	addActionItem(in actionTime : long, in actionNum : int) : void
        mBasicData.addActionItem(actionTime, actionNum);
!!!12650380.java!!!	addActionItem(in actionTime : long, in actionNum : int, in otherParam : String) : void
        mBasicData.addActionItem(actionTime, actionNum, otherParam);
!!!12650508.java!!!	addCommentItem(in actionNum : int, in otherParam : String) : void
        mBasicData.addCommentItem(actionNum, otherParam);
!!!12650636.java!!!	isPlaying() : boolean
        return mVideoView.isPlaying();
!!!12650764.java!!!	getCurrentPosition() : int
        return mVideoView.getCurrentPosition();
!!!12650892.java!!!	startMedia() : void
        mVideoView.start();
        mVideoView.mLastActionTime = System.currentTimeMillis();
