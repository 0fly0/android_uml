class IrBlasterTestInputFragment
!!!12238732.java!!!	IrBlasterTestInputFragment(inout context : Context)
        super(context);
!!!12238860.java!!!	onCreateView(inout inflater : LayoutInflater, inout container : ViewGroup, inout savedInstanceState : Bundle) : View
        super.onCreateView(inflater, container, savedInstanceState);
        View view = inflater.inflate(R.layout.ir_setup_test_input, container, false);
        mDesc = (TextView) view.findViewById(R.id.irtest_description);
        mButtOn = (Button) view.findViewById(R.id.irtest_button_power_on);
        mButtOff = (Button) view.findViewById(R.id.irtest_button_power_off);
        mHelper = (TextView) view.findViewById(R.id.ir_setup_test_helper);

        mButtOn.setOnClickListener(new View.OnClickListener() {
            public void onClick(View v) {
                if (mHavePowerKey) {
                    IRBCommand.sendKey(mCommandSet.getName(), UEIKey.POWER);
                    focusNext();
                } else if (mHavePowerOnOffKey) {
                    IRBCommand.sendKey(mCommandSet.getName(), UEIKey.POWER_ON);
                    requestFocusOnView(mButtOff);
                }
            }
        });

        mButtOff.setOnClickListener(new View.OnClickListener() {
            public void onClick(View v) {
                IRBCommand.sendKey(mCommandSet.getName(), UEIKey.POWER_OFF);
                focusNext();
            }
        });
        return view;
!!!12238988.java!!!	refresh() : void
        super.refresh();
        mCodeSetDownloaded = downloadCodeset();
        mHaveChannel = false;
        mHavePowerKey = false;
        mHavePowerOnOffKey = false;
        String selection = (String) getProperty(IrBlasterSetupActivity.DEVICE_SELECTION);
        if (selection != null && selection.equals(IrBlasterSetupActivity.DEVICE_CAPABILITY_LINEUP)
            && IRBCommand.hasUEIKey(mCommandSet.getName(), UEIKey.CHANNEL_UP)) {
            mHaveChannel = true;
        } else {
            if (IRBCommand.hasUEIKey(mCommandSet.getName(), UEIKey.POWER)) {
                mHavePowerKey = true;
            } else if (IRBCommand.hasUEIKey(mCommandSet.getName(), UEIKey.POWER_ON)) {
                mHavePowerOnOffKey = true;
            }
        }
        // FIXME: Just show power if it doesn't have power, power on and channel up
        if (!mHaveChannel && !mHavePowerKey && !mHavePowerOnOffKey) {
            mHavePowerKey = true;
        }
        if (mCodeSetDownloaded) {
            String text = getString(R.string.ir_setup_type) + " " + mType.getName() + "\n";
            text += getString(R.string.ir_setup_manufacturer) + " " + mManufacturer.getName() + "\n";
            text += getString(R.string.ir_setup_model) + " " + mModel.getName() + "\n";
            text += getString(R.string.ir_setup_device_test) + " " +
                (mCommandSetIndex + 1) + "/" + mCommandSetList.size();
            text += " \n";
            text += " \n";
            text += getString(R.string.ir_setup_irtest_select) + " ";
            if (mHavePowerKey) {
                text += getString(R.string.ir_setup_irtest_sendpower);
            } else if (mHavePowerOnOffKey) {
                text += getString(R.string.ir_setup_irtest_sendpower_on) + " or " +
                        getString(R.string.ir_setup_irtest_sendpower_off);
            } else {
                text += getString(R.string.irtest_input_ch_description);
            }
            mDesc.setText(text);
            mDesc.setVisibility(View.VISIBLE);
            if (mHaveChannel) {
                mButtOn.setVisibility(View.INVISIBLE);
                mButtOff.setVisibility(View.INVISIBLE);
                mHelper.setText(getString(R.string.irtest_input_confirm_ch));
                mHelper.setVisibility(View.VISIBLE);
                focusNext();
            } else if (mHavePowerKey) {
                mButtOn.setText(getString(R.string.ir_setup_irtest_sendpower));
                mButtOn.setVisibility(View.VISIBLE);
                mButtOff.setVisibility(View.INVISIBLE);
                mHelper.setVisibility(View.VISIBLE);
                requestFocusOnView(mButtOn);
            } else if (mHavePowerOnOffKey) {
                mButtOn.setText(getString(R.string.ir_setup_irtest_sendpower_on));
                mButtOn.setVisibility(View.VISIBLE);
                mButtOff.setVisibility(View.VISIBLE);
                mHelper.setVisibility(View.VISIBLE);
                requestFocusOnView(mButtOn);
            } else {
            }
            setNextButtonText(getString(R.string.ir_setup_irtest_next));
            setBackButtonText(getString(R.string.ir_setup_irtest_back));
        } else {
            Log.e(LOG_TAG, "Failed to download codeset!!!");
            mDesc.setText(getString(R.string.fail_to_download));
            mHelper.setVisibility(View.INVISIBLE);
            mButtOn.setVisibility(View.INVISIBLE);
            mButtOff.setVisibility(View.INVISIBLE);
            setBackEnabled(false);
            setNextButtonText(getString(R.string.button_cancel));
        }
!!!12239116.java!!!	onAccept() : boolean
        setProperty(IrBlasterSetupActivity.CODESET_DOWNLOADED,
                    Boolean.valueOf(mCodeSetDownloaded));
        return true;
!!!12239244.java!!!	onResume() : void
        setSubtitleText(getString(R.string.ir_setup_irtest_instruction1));
        // Disable CEC onetoucplay for testing
        mContext.sendBroadcast(new Intent(ACTION_DISABLE_ONETOUCPLAY));
        super.onResume();
!!!12239372.java!!!	onPause() : void
        super.onPause();
        // Enable CEC onetoucplay for testing
        mContext.sendBroadcast(new Intent(ACTION_ENABLE_ONETOUCPLAY));
