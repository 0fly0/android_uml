class TvNetworkController
!!!13349772.java!!!	TvNetworkController(inout context : Context)
        super(context);
!!!13349900.java!!!	getConnectedNetworkType() : int
        return mConnectedNetworkType;
!!!13350028.java!!!	getInetCondition() : int
        return mInetCondition;
!!!13350156.java!!!	onReceive(inout context : Context, inout intent : Intent) : void
        final String action = intent.getAction();

        // Get connectivity info, which is unfortunately private in NetworkController.
        // Duplicate some of behaviors in updateConnectivity() which is private.
        if (action.equals(ConnectivityManager.CONNECTIVITY_ACTION) ||
                action.equals(ConnectivityManager.INET_CONDITION_ACTION)) {
            final ConnectivityManager connManager = (ConnectivityManager)
                    mContext.getSystemService(Context.CONNECTIVITY_SERVICE);
            final NetworkInfo info = connManager.getActiveNetworkInfo();
            mConnectedNetworkType = (info != null && info.isConnected())
                    ? info.getType() : ConnectivityManager.TYPE_NONE;

            int connectionStatus = intent.getIntExtra(ConnectivityManager.EXTRA_INET_CONDITION, 0);
            mInetCondition = (connectionStatus > INET_CONDITION_THRESHOLD ? 1 : 0);
        }

        // refreshVies() will be called from super
        super.onReceive(context, intent);
!!!13350284.java!!!	refreshViews() : void
        super.refreshViews();

        Context context = mContext;
        int combinedSignalIconId = mLastCombinedSignalIconId;

        // Airplane mode is not considered because it's disabled on TV.
        if (mConnectedNetworkType == ConnectivityManager.TYPE_ETHERNET) {
            if (mInetCondition == 0) {
                combinedSignalIconId = R.drawable.stat_sys_ethernet;
                mContentDescriptionCombinedSignal =
                        context.getString(R.string.accessibility_ethernet_disconnected);
            } else {
                combinedSignalIconId = R.drawable.stat_sys_ethernet_connected;
                mContentDescriptionCombinedSignal =
                        context.getString(R.string.accessibility_ethernet_connected);
            }
        }

        if (mLastCombinedSignalIconId != combinedSignalIconId) {
            mLastCombinedSignalIconId = combinedSignalIconId;
            int N = mCombinedSignalIconViews.size();
            for (int i = 0; i < N; i++) {
                final ImageView v = mCombinedSignalIconViews.get(i);
                v.setImageResource(combinedSignalIconId);
                v.setContentDescription(mContentDescriptionCombinedSignal);
            }
        }
