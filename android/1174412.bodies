class BaseObj
!!!6510732.java!!!	BaseObj(in id : int, inout rs : RenderScript)
        rs.validate();
        mRS = rs;
        mID = id;
        mDestroyed = false;
!!!6510860.java!!!	setID(in id : int) : void
        if (mID != 0) {
            throw new RSRuntimeException("Internal Error, reset of object ID.");
        }
        mID = id;
!!!6510988.java!!!	getID(inout rs : RenderScript) : int
        mRS.validate();
        if (mDestroyed) {
            throw new RSInvalidStateException("using a destroyed object.");
        }
        if (mID == 0) {
            throw new RSRuntimeException("Internal error: Object id 0.");
        }
        if ((rs != null) && (rs != mRS)) {
            throw new RSInvalidStateException("using object with mismatched context.");
        }
        return mID;
!!!6511116.java!!!	checkValid() : void
        if (mID == 0) {
            throw new RSIllegalArgumentException("Invalid object.");
        }
!!!6511244.java!!!	setName(in name : String) : void
        if (name == null) {
            throw new RSIllegalArgumentException(
                "setName requires a string of non-zero length.");
        }
        if(name.length() < 1) {
            throw new RSIllegalArgumentException(
                "setName does not accept a zero length string.");
        }
        if(mName != null) {
            throw new RSIllegalArgumentException(
                "setName object already has a name.");
        }

        try {
            byte[] bytes = name.getBytes("UTF-8");
            mRS.nAssignName(mID, bytes);
            mName = name;
        } catch (java.io.UnsupportedEncodingException e) {
            throw new RuntimeException(e);
        }
!!!6511372.java!!!	getName() : String
        return mName;
!!!6511500.java!!!	finalize() : void
        if (!mDestroyed) {
            if(mID != 0 && mRS.isAlive()) {
                mRS.nObjDestroy(mID);
            }
            mRS = null;
            mID = 0;
            mDestroyed = true;
            //Log.v(RenderScript.LOG_TAG, getClass() +
            // " auto finalizing object without having released the RS reference.");
        }
        super.finalize();
!!!6511628.java!!!	destroy() : void
        if(mDestroyed) {
            throw new RSInvalidStateException("Object already destroyed.");
        }
        mDestroyed = true;
        mRS.nObjDestroy(mID);
!!!6511756.java!!!	updateFromNative() : void
        mRS.validate();
        mName = mRS.nGetName(getID(mRS));
!!!6511884.java!!!	hashCode() : int
        return mID;
!!!6512012.java!!!	equals(inout obj : Object) : boolean
        // Early-out check to see if both BaseObjs are actually the same
        if (this == obj)
            return true;

        if (getClass() != obj.getClass()) {
            return false;
        }

        BaseObj b = (BaseObj) obj;
        return mID == b.mID;
