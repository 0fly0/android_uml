class OldPushbackReaderTest
!!!2684571.java!!!	test_ConstructorLjava_io_Reader() : void
        // Test for method java.io.PushbackReader(java.io.Reader)
        try {
            pbr.close();
            pbr = new PushbackReader(new StringReader(pbString));
            char buf[] = new char[5];
            pbr.read(buf, 0, 5);
            pbr.unread(buf);
            fail("Created reader with buffer larger than 1");;
        } catch (IOException e) {
            // Expected
        }

        try {
            pbr = new PushbackReader(null);
        } catch (NullPointerException e) {
            // EXpected
        }
!!!2684699.java!!!	test_ConstructorLjava_io_ReaderI() : void
        PushbackReader tobj;

        tobj = new PushbackReader(underlying, 10000);
        tobj = new PushbackReader(underlying, 1);

        try {
            tobj = new PushbackReader(underlying, -1);
            tobj.close();
            fail("IOException not thrown.");
        } catch (IllegalArgumentException e) {
            // expected
        }
        try {
            tobj = new PushbackReader(underlying, 0);
            tobj.close();
            fail("IOException not thrown.");
        } catch (IllegalArgumentException e) {
            // expected
        }
!!!2684827.java!!!	test_close() : void
        PushbackReader tobj;

        tobj = new PushbackReader(underlying);
        tobj.close();
        tobj.close();
        tobj = new PushbackReader(underlying);
        underlying.throwExceptionOnNextUse = true;
        try {
            tobj.close();
            fail("IOException not thrown.");
        } catch (IOException e) {
            // expected
        }
!!!2684955.java!!!	test_markSupported() : void
        assertFalse("Test 1: markSupported() must return false.",
                pbr.markSupported());
!!!2685083.java!!!	test_read() : void
        PushbackReader tobj;

        tobj = new PushbackReader(underlying);
        assertEquals("Wrong value read!", 66, tobj.read());
        underlying.throwExceptionOnNextUse = true;
        try {
            tobj.read();
            fail("IOException not thrown.");
        } catch (IOException e) {
            // expected
        }
!!!2685211.java!!!	test_read$CII() : void
        PushbackReader tobj;
        char[] buf = ("01234567890123456789").toCharArray();

        tobj = new PushbackReader(underlying);
        tobj.read(buf, 6, 5);
        assertEquals("Wrong value read!", "BEGIN", new String(buf, 6, 5));
        assertEquals("Too much read!", "012345BEGIN123456789", new String(buf));
        underlying.throwExceptionOnNextUse = true;
        try {
            tobj.read(buf, 6, 5);
            fail("IOException not thrown.");
        } catch (IOException e) {
            // expected
        }

        // Test for method int java.io.PushbackReader.read(char [], int, int)
        try {
            char[] c = new char[5];
            pbr.read(c, 0, 5);
            assertTrue("Failed to read chars", new String(c).equals(pbString
                    .substring(0, 5)));

            assertEquals(0, pbr.read(c, 0, 0));
            assertEquals(c.length, pbr.read(c, 0, c.length));
            assertEquals(0, pbr.read(c, c.length, 0));
        } catch (IOException e) {
            fail("IOException during read test : " + e.getMessage());
        }
!!!2685339.java!!!	test_read_$CII_Exception() : void
        pbr = new PushbackReader(new StringReader(pbString), 10);

        char[] nullCharArray = null;
        char[] charArray = new char[10];

        try {
            pbr.read(nullCharArray, 0, 1);
            fail("should throw NullPointerException");
        } catch (NullPointerException e) {
            // expected
        }

        try {
            pbr.read(charArray, 0, -1);
            fail("should throw IndexOutOfBoundsException");
        } catch (IndexOutOfBoundsException e) {
            // expected
        }

        try {
            pbr.read(charArray, -1, 0);
            fail("should throw IndexOutOfBoundsException");
        } catch (IndexOutOfBoundsException e) {
            // expected
        }

        try {
            pbr.read(charArray, charArray.length + 1, 0);
            fail("should throw IndexOutOfBoundsException");
        } catch (IndexOutOfBoundsException e) {
            // expected
        }

        try {
            pbr.read(charArray, charArray.length, 1);
            fail("should throw IndexOutOfBoundsException");
        } catch (IndexOutOfBoundsException e) {
            // expected
        }

        try {
            pbr.read(charArray, 1, charArray.length);
            fail("should throw IndexOutOfBoundsException");
        } catch (IndexOutOfBoundsException e) {
            // expected
        }

        try {
            pbr.read(charArray, 0, charArray.length + 1);
            fail("should throw IndexOutOfBoundsException");
        } catch (IndexOutOfBoundsException e) {
            // expected
        }

        pbr.close();

        try {
            pbr.read(charArray, 0, 1);
            fail("should throw IOException");
        } catch (IOException e) {
            // expected
        }
!!!2685467.java!!!	test_ready() : void
        PushbackReader tobj;

        tobj = new PushbackReader(underlying);
        assertTrue("Should be ready!", tobj.ready());
        underlying.throwExceptionOnNextUse = true;
        try {
            tobj.ready();
            fail("IOException not thrown.");
        } catch (IOException e) {
            // expected
        }
!!!2685595.java!!!	test_unread$C() : void
        PushbackReader tobj;
        String str2 = "0123456789";
        char[] buf2 = str2.toCharArray();
        char[] readBuf = new char[10];

        tobj = new PushbackReader(underlying, 10);
        tobj.unread(buf2);
        try {
            tobj.unread(buf2);
            fail("IOException not thrown.");
        } catch (IOException e) {
            // expected
        }
        tobj.read(readBuf);
        assertEquals("Incorrect bytes read", str2, new String(readBuf));
        underlying.throwExceptionOnNextUse = true;
        try {
            tobj.read(buf2);
            fail("IOException not thrown.");
        } catch (IOException e) {
            // expected
        }

        // Test for method void java.io.PushbackReader.unread(char [])
        try {
            char[] c = new char[5];
            pbr.read(c, 0, 5);
            pbr.unread(c);
            pbr.read(c, 0, 5);
            assertTrue("Failed to unread chars", new String(c).equals(pbString
                    .substring(0, 5)));
        } catch (IOException e) {
            fail("IOException during read test : " + e.getMessage());
        }
!!!2685723.java!!!	test_skip$J() : void
        PushbackReader tobj;

        tobj = new PushbackReader(underlying);
        tobj.skip(6);
        tobj.skip(1000000);
        tobj.skip(1000000);
        underlying.throwExceptionOnNextUse = true;
        try {
            tobj.skip(1);
            fail("IOException not thrown.");
        } catch (IOException e) {
            // expected
        }
!!!2685851.java!!!	test_unread$CII() : void
        PushbackReader tobj;
        String str2 = "0123456789";
        char[] buf2 = (str2 + str2 + str2).toCharArray();
        char[] readBuf = new char[10];

        tobj = new PushbackReader(underlying, 10);
        tobj.unread(buf2, 15, 10);
        try {
            tobj.unread(buf2, 15, 10);
            fail("IOException not thrown.");
        } catch (IOException e) {
            // expected
        }
        tobj.read(readBuf);
        assertEquals("Incorrect bytes read", "5678901234", new String(readBuf));
        underlying.throwExceptionOnNextUse = true;
        try {
            tobj.read(buf2, 15, 10);
            fail("IOException not thrown.");
        } catch (IOException e) {
            // expected
        }
!!!2685979.java!!!	test_unread_$CII_ArrayIndexOutOfBoundsException() : void
        //a pushback reader with one character buffer
        pbr = new PushbackReader(new StringReader(pbString));
        try {
            pbr.unread(new char[pbString.length()], 0 , -1);
            fail("should throw ArrayIndexOutOfBoundsException");
        } catch (IndexOutOfBoundsException e) {
            // expected
        }
        try {
            pbr.unread(new char[10], 10 , 1);
            fail("should throw ArrayIndexOutOfBoundsException");
        } catch (IndexOutOfBoundsException e) {
            // expected
        }
!!!2686107.java!!!	test_unreadI() : void
        PushbackReader tobj;

        tobj = new PushbackReader(underlying);
        tobj.unread(23); // Why does this work?!?
        tobj.skip(2);
        tobj.unread(23);
        assertEquals("Wrong value read!", 23, tobj.read());
        tobj.unread(13);
        try {
            tobj.unread(13);
            fail("IOException not thrown (ACTUALLY NOT SURE WHETHER IT REALLY MUST BE THROWN!).");
        } catch (IOException e) {
            // expected
        }
!!!2686235.java!!!	setUp() : void
        pbr = new PushbackReader(new StringReader(pbString), 10);
!!!2686363.java!!!	tearDown() : void
        try {
            pbr.close();
        } catch (IOException e) {
        }
