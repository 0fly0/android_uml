format 74
"api" // vendor::tv::external::android-ndt::java::net::sf::mmm::util::filter::api
  revision 1
  modified_by 12 "shchen"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "/home/shchen/work/jellybean/vendor/tv/external/mmm/mmm-util-core/src/net/sf/mmm/util/filter/api/"
  java_package "net.sf.mmm.util.filter.api"
  classview 302732 "api"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 3117580 "CharFilter"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This is the interface for a filter that {@link #accept(char) decides} if a
given character is acceptable or should be filtered.<br>
It is used by {@link net.sf.mmm.util.scanner.base.CharSequenceScanner} and avoids conversion of
<code>char</code> to {@link Character} for performance reasons. In other
cases please prefer to use {@link Filter}.

@author Joerg Hohwiller (hohwille at users.sourceforge.net)"
      operation 13110668 "accept"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "c" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method determines if the given character <code>c</code> should be
accepted.

@param c is the character to check.
@return <code>true</code> if the given character <code>c</code> is
        acceptable, <code>false</code> if it should be filtered."
      end

      classrelation 5765004 // LATIN_DIGIT_FILTER (<unidirectional association>)
	relation 5764876 --->
	  a role_name "LATIN_DIGIT_FILTER" init_value " new CharFilter() {

    public boolean accept(char c) {

      return ((c >= '0') && (c <= '9'));
    }
  }" public
	    comment "
A filter that {@link #accept(char) accepts} only the Latin digits '0'-'9'.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5765004 // LATIN_DIGIT_FILTER (<unidirectional association>)
	  b parent class_ref 3117580 // CharFilter
      end

      classrelation 5765132 // ASCII_LETTER_FILTER (<unidirectional association>)
	relation 5765004 --->
	  a role_name "ASCII_LETTER_FILTER" init_value " new CharFilter() {

    public boolean accept(char c) {

      return (((c >= 'a') && (c <= 'z')) || ((c >= 'A') && (c >= 'Z')));
    }
  }" public
	    comment "
A filter that {@link #accept(char) accepts} only the Latin ASCII letters
'a'-'z' and 'A'-'Z'.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5765132 // ASCII_LETTER_FILTER (<unidirectional association>)
	  b parent class_ref 3117580 // CharFilter
      end

      classrelation 5765260 // WHITESPACE_FILTER (<unidirectional association>)
	relation 5765132 --->
	  a role_name "WHITESPACE_FILTER" init_value " new CharFilter() {

    public boolean accept(char c) {

      return Character.isWhitespace(c);
    }
  }" public
	    comment "
A filter that {@link #accept(char) accepts} only
{@link Character#isWhitespace(char) whitespaces}.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 5765260 // WHITESPACE_FILTER (<unidirectional association>)
	  b parent class_ref 3117580 // CharFilter
      end
    end

    class 3119372 "Filter"
      visibility public stereotype "interface"
      nformals 1
      formal name "V" type "" explicit_default_value ""
        explicit_extends ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This is the interface for a filter that {@link #accept(Object) decides} if a
given value is acceptable or should be filtered.

@param <V> is the generic type of the value to check.

@author Joerg Hohwiller (hohwille at users.sourceforge.net)"
      operation 13110796 "accept"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "value" explicit_type "V"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method determines if the given <code>value</code> should be
accepted.

@param value is the value to check.
@return <code>true</code> if the given <code>value</code> is
        acceptable, <code>false</code> if it should be filtered."
      end

      classrelation 5765388 // ACCEPT_ALL (<unidirectional association>)
	relation 5765260 --->
	  a role_name "ACCEPT_ALL" init_value " new Filter<Object>() {

    public boolean accept(Object value) {

      return true;
    }
  }" public
	    comment "
A filter instance that {@link #accept(Object) accepts} every object. To be
reusable it is NOT generic but may be casted.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Object> ${name}${value};
"
	    classrelation_ref 5765388 // ACCEPT_ALL (<unidirectional association>)
	  b parent class_ref 3119372 // Filter
      end
    end

    class 3119500 "FilterRule"
      visibility public stereotype "interface"
      nformals 1
      formal name "V" type "" explicit_default_value ""
        explicit_extends ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This is the interface for a filter rule. It {@link #accept(Object) decides}
if a given string is accepted, denied or ignored by this rule.

@param <V> is the generic type of the value to check.

@author Joerg Hohwiller (hohwille at users.sourceforge.net)"
      operation 13110924 "accept"
	public explicit_return_type "Boolean"
	nparams 1
	  param inout name "string" explicit_type "V"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method checks if the given <code>string</code> is accepted, denied or
ignored by this rule.

@param string is the string to check.
@return <code>true</code> if the file should be accepted,
        <code>false</code> if the file should NOT be accepted or
        <code>null</code> if this rule does NOT make a decision about the
        given <code>string</code>."
      end
    end
  end

  deploymentview 289420 "api"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 1211660 "CharFilter"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3117580 // CharFilter
      end
      comment " $Id: CharFilter.java 576 2008-08-28 18:49:09Z hohwille $
Copyright (c) The m-m-m Team, Licensed under the Apache License, Version 2.0
http://www.apache.org/licenses/LICENSE-2.0 "
    end

    artifact 1211788 "Filter"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3119372 // Filter
      end
      comment " $Id: Filter.java 544 2008-05-19 20:10:58Z hohwille $
Copyright (c) The m-m-m Team, Licensed under the Apache License, Version 2.0
http://www.apache.org/licenses/LICENSE-2.0 "
    end

    artifact 1211916 "FilterRule"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3119500 // FilterRule
      end
      comment " $Id: FilterRule.java 566 2008-07-25 19:51:37Z hohwille $
Copyright (c) The m-m-m Team, Licensed under the Apache License, Version 2.0
http://www.apache.org/licenses/LICENSE-2.0 "
    end
  end
end
