class DisplayDeviceInfo
!!!8496268.java!!!	setAssumedDensityForExternalDisplay(in width : int, in height : int) : void
        densityDpi = Math.min(width, height) * DisplayMetrics.DENSITY_XHIGH / 1080;
        // Technically, these values should be smaller than the apparent density
        // but we don't know the physical size of the display.
        xDpi = densityDpi;
        yDpi = densityDpi;
!!!8496396.java!!!	equals(inout o : Object) : boolean
        return o instanceof DisplayDeviceInfo && equals((DisplayDeviceInfo)o);
!!!8496524.java!!!	equals(inout other : DisplayDeviceInfo) : boolean
        return other != null
                && Objects.equal(name, other.name)
                && width == other.width
                && height == other.height
                && refreshRate == other.refreshRate
                && densityDpi == other.densityDpi
                && xDpi == other.xDpi
                && yDpi == other.yDpi
                && flags == other.flags
                && touch == other.touch
                && rotation == other.rotation
                && type == other.type
                && Objects.equal(address, other.address);
!!!8496652.java!!!	hashCode() : int
        return 0; // don't care
!!!8496780.java!!!	copyFrom(inout other : DisplayDeviceInfo) : void
        name = other.name;
        width = other.width;
        height = other.height;
        refreshRate = other.refreshRate;
        densityDpi = other.densityDpi;
        xDpi = other.xDpi;
        yDpi = other.yDpi;
        flags = other.flags;
        touch = other.touch;
        rotation = other.rotation;
        type = other.type;
        address = other.address;
!!!8496908.java!!!	toString() : String
        return "DisplayDeviceInfo{\"" + name + "\": " + width + " x " + height + ", "
                + refreshRate + " fps, "
                + "density " + densityDpi + ", " + xDpi + " x " + yDpi + " dpi"
                + ", touch " + touchToString(touch) + flagsToString(flags)
                + ", rotation " + rotation
                + ", type " + Display.typeToString(type)
                + ", address " + address
                + "}";
!!!8497036.java!!!	touchToString(in touch : int) : String
        switch (touch) {
            case TOUCH_NONE:
                return "NONE";
            case TOUCH_INTERNAL:
                return "INTERNAL";
            case TOUCH_EXTERNAL:
                return "EXTERNAL";
            default:
                return Integer.toString(touch);
        }
!!!8497164.java!!!	flagsToString(in flags : int) : String
        StringBuilder msg = new StringBuilder();
        if ((flags & FLAG_DEFAULT_DISPLAY) != 0) {
            msg.append(", FLAG_DEFAULT_DISPLAY");
        }
        if ((flags & FLAG_ROTATES_WITH_CONTENT) != 0) {
            msg.append(", FLAG_ROTATES_WITH_CONTENT");
        }
        if ((flags & FLAG_SECURE) != 0) {
            msg.append(", FLAG_SECURE");
        }
        if ((flags & FLAG_SUPPORTS_PROTECTED_BUFFERS) != 0) {
            msg.append(", FLAG_SUPPORTS_PROTECTED_BUFFERS");
        }
        return msg.toString();
