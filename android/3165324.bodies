class ConfigurationActivity
!!!13421324.java!!!	onCreate(inout savedInstanceState : Bundle) : void
        super.onCreate(savedInstanceState);
        mSettings = new Settings(this, true) {
            @Override
            protected void onDeviceListChanged() {
                setupPairedRemotes();
            }
        };
        addPreferencesFromResource(R.xml.settings_main);
!!!13421452.java!!!	onResume() : void
        super.onResume();
        setupPairedRemotes();
!!!13421580.java!!!	setupPairedRemotes() : void
        PreferenceGroup group = (PreferenceGroup) findPreference(KEY_PAIRED_REMOTES);
        group.removeAll();
        boolean added = false;
        for (PairedRemote remote : mSettings.getDevices()) {
            group.addPreference(new PairedRemotePreference(this, remote));
            added = true;
        }
        if (!added) {
            Preference noDevicePreference = new Preference(this);
            noDevicePreference.setEnabled(false);
            noDevicePreference.setTitle(R.string.no_devices_paired);
            group.addPreference(noDevicePreference);
        }
!!!13421708.java!!!	onPreferenceTreeClick(inout preferenceScreen : PreferenceScreen, inout preference : Preference) : boolean
        if (preference instanceof PairedRemotePreference) {
            onRemoteSelected(
                    ((PairedRemotePreference) preference).getDevice());
            return true;
        }
        return super.onPreferenceTreeClick(preferenceScreen, preference);
!!!13421836.java!!!	onRemoteSelected(in remote : PairedRemote) : void
        String template = getResources().getString(R.string.unpair_description);
        CharSequence message = TextUtils.expandTemplate(
                template, Build.MODEL, remote.getName());
        new AlertDialog.Builder(this)
                .setTitle(R.string.unpair_title)
                .setIcon(android.R.drawable.ic_dialog_alert)
                .setMessage(message)
                .setPositiveButton(R.string.unpair_confirm,
                        new DialogInterface.OnClickListener() {
                    public void onClick(DialogInterface dialog, int which) {
                        remove(remote);
                    }
                })
                .setNegativeButton(R.string.unpair_cancel,
                        new DialogInterface.OnClickListener() {
                    public void onClick(DialogInterface dialog, int which) {
                        // Nothing specific to do.
                    }
                })
                .show();
!!!13421964.java!!!	remove(inout remote : PairedRemote) : void
        String id = remote.getCertificateId();
        startService(new Intent(this, IpRemoteControlService.class)
                .setAction(IpRemoteControlService.ACTION_REMOVE_CERTIFICATE)
                .putExtra(IpRemoteControlService.EXTRA_CERTIFICATE_ID, id));
        mSettings.removeDevice(remote);
        String template = getString(R.string.toast_successful_unpairing);
        CharSequence message = TextUtils.expandTemplate(
                template, remote.getName());
        Toast.makeText(this, message, Toast.LENGTH_SHORT).show();
