format 74
"code" // framework::base::cmds::am::src::com::android::dx::cf::code
  revision 1
  modified_by 12 "shchen"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "/home/shchen/work/jellybean/dalvik/dx/src/com/android/dx/cf/code/"
  java_package "com.android.dx.cf.code"
  classview 325388 "code"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 3431948 "BytecodeArray"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Bytecode array, which is part of a standard {@code Code} attribute."
      class 3438092 "Visitor"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 14811276 "visitInvalid"
	  public explicit_return_type "void"
	  nparams 3
	    param in name "opcode" explicit_type "int"
	    param in name "offset" explicit_type "int"
	    param in name "length" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Visits an invalid instruction.

@param opcode the opcode
@param offset offset to the instruction
@param length length of the instruction, in bytes"
	end

	operation 14811404 "visitNoArgs"
	  public explicit_return_type "void"
	  nparams 4
	    param in name "opcode" explicit_type "int"
	    param in name "offset" explicit_type "int"
	    param in name "length" explicit_type "int"
	    param inout name "type" type class_ref 3437324 // Type
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Visits an instruction which has no inline arguments
(implicit or explicit).

@param opcode the opcode
@param offset offset to the instruction
@param length length of the instruction, in bytes
@param type {@code non-null;} type the instruction operates on"
	end

	operation 14811532 "visitLocal"
	  public explicit_return_type "void"
	  nparams 6
	    param in name "opcode" explicit_type "int"
	    param in name "offset" explicit_type "int"
	    param in name "length" explicit_type "int"
	    param in name "idx" explicit_type "int"
	    param inout name "type" type class_ref 3437324 // Type
	    param in name "value" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Visits an instruction which has a local variable index argument.

@param opcode the opcode
@param offset offset to the instruction
@param length length of the instruction, in bytes
@param idx the local variable index
@param type {@code non-null;} the type of the accessed value
@param value additional literal integer argument, if salient (i.e.,
for {@code iinc})"
	end

	operation 14811660 "visitConstant"
	  public explicit_return_type "void"
	  nparams 5
	    param in name "opcode" explicit_type "int"
	    param in name "offset" explicit_type "int"
	    param in name "length" explicit_type "int"
	    param inout name "cst" type class_ref 3431692 // Constant
	    param in name "value" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Visits an instruction which has a (possibly synthetic)
constant argument, and possibly also an
additional literal integer argument. In the case of
{@code multianewarray}, the argument is the count of
dimensions. In the case of {@code invokeinterface},
the argument is the parameter count or'ed with the
should-be-zero value left-shifted by 8. In the case of entries
of type {@code int}, the {@code value} field always
holds the raw value (for convenience of clients).

<p><b>Note:</b> In order to avoid giving it a barely-useful
visitor all its own, {@code newarray} also uses this
form, passing {@code value} as the array type code and
{@code cst} as a {@link CstType} instance
corresponding to the array type.</p>

@param opcode the opcode
@param offset offset to the instruction
@param length length of the instruction, in bytes
@param cst {@code non-null;} the constant
@param value additional literal integer argument, if salient
(ignore if not)"
	end

	operation 14811788 "visitBranch"
	  public explicit_return_type "void"
	  nparams 4
	    param in name "opcode" explicit_type "int"
	    param in name "offset" explicit_type "int"
	    param in name "length" explicit_type "int"
	    param in name "target" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Visits an instruction which has a branch target argument.

@param opcode the opcode
@param offset offset to the instruction
@param length length of the instruction, in bytes
@param target the absolute (not relative) branch target"
	end

	operation 14811916 "visitSwitch"
	  public explicit_return_type "void"
	  nparams 5
	    param in name "opcode" explicit_type "int"
	    param in name "offset" explicit_type "int"
	    param in name "length" explicit_type "int"
	    param inout name "cases" type class_ref 3437452 // SwitchList
	    param in name "padding" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Visits a switch instruction.

@param opcode the opcode
@param offset offset to the instruction
@param length length of the instruction, in bytes
@param cases {@code non-null;} list of (value, target)
pairs, plus the default target
@param padding the bytes found in the padding area (if any),
packed"
	end

	operation 14812044 "visitNewarray"
	  public explicit_return_type "void"
	  nparams 4
	    param in name "offset" explicit_type "int"
	    param in name "length" explicit_type "int"
	    param inout name "type" type class_ref 3432844 // CstType
	    param inout name "initVals" explicit_type "ArrayList<Constant>"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Visits a newarray instruction.

@param offset   offset to the instruction
@param length   length of the instruction, in bytes
@param type {@code non-null;} the type of the array
@param initVals {@code non-null;} list of bytecode offsets
for init values"
	end

	operation 14812172 "setPreviousOffset"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "offset" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Set previous bytecode offset
@param offset    offset of the previous fully parsed bytecode"
	end

	operation 14812300 "getPreviousOffset"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Get previous bytecode offset
@return return the recored offset of the previous bytecode"
	end
      end

      classrelation 6587532 // EMPTY_VISITOR (<unidirectional association>)
	relation 6587404 --->
	  a role_name "EMPTY_VISITOR" init_value " new BaseVisitor()" class_relation const_relation public
	    comment " convenient no-op implementation of {@link Visitor} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6587532 // EMPTY_VISITOR (<unidirectional association>)
	  b parent class_ref 3438092 // Visitor
      end

      classrelation 6587660 // bytes (<unidirectional association>)
	relation 6587532 --->
	  a role_name "bytes" const_relation private
	    comment " {@code non-null;} underlying bytes 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6587660 // bytes (<unidirectional association>)
	  b parent class_ref 3436556 // ByteArray
      end

      classrelation 6587788 // pool (<unidirectional association>)
	relation 6587660 --->
	  a role_name "pool" const_relation private
	    comment "
{@code non-null;} constant pool to use when resolving constant
pool indices

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6587788 // pool (<unidirectional association>)
	  b parent class_ref 3436684 // ConstantPool
      end

      operation 14809740 "BytecodeArray"
	public explicit_return_type ""
	nparams 2
	  param inout name "bytes" type class_ref 3436556 // ByteArray
	  param inout name "pool" type class_ref 3436684 // ConstantPool
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance.

@param bytes {@code non-null;} underlying bytes
@param pool {@code non-null;} constant pool to use when
resolving constant pool indices"
      end

      operation 14809868 "getBytes"
	public return_type class_ref 3436556 // ByteArray
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the underlying byte array.

@return {@code non-null;} the byte array"
      end

      operation 14809996 "size"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the size of the bytecode array, per se.

@return {@code >= 0;} the length of the bytecode array"
      end

      operation 14810124 "byteLength"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the total length of this structure in bytes, when included in
a {@code Code} attribute. The returned value includes the
array size plus four bytes for {@code code_length}.

@return {@code >= 4;} the total length, in bytes"
      end

      operation 14810252 "forEach"
	public explicit_return_type "void"
	nparams 1
	  param inout name "visitor" type class_ref 3438092 // Visitor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses each instruction in the array, in order.

@param visitor {@code null-ok;} visitor to call back to for
each instruction"
      end

      operation 14810380 "getInstructionOffsets"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finds the offset to each instruction in the bytecode array. The
result is a bit set with the offset of each opcode-per-se flipped on.

@see Bits
@return {@code non-null;} appropriately constructed bit set"
      end

      operation 14810508 "processWorkSet"
	public explicit_return_type "void"
	nparams 2
	  param inout name "workSet" explicit_type "int"
	  param inout name "visitor" type class_ref 3438092 // Visitor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Processes the given \"work set\" by repeatedly finding the lowest bit
in the set, clearing it, and parsing and visiting the instruction at
the indicated offset (that is, the bit index), repeating until the
work set is empty. It is expected that the visitor will regularly
set new bits in the work set during the process.

@param workSet {@code non-null;} the work set to process
@param visitor {@code non-null;} visitor to call back to for
each instruction"
      end

      operation 14810636 "parseInstruction"
	public explicit_return_type "int"
	nparams 2
	  param in name "offset" explicit_type "int"
	  param inout name "visitor" type class_ref 3438092 // Visitor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses the instruction at the indicated offset. Indicate the
result by calling the visitor if supplied and by returning the
number of bytes consumed by the instruction.

<p>In order to simplify further processing, the opcodes passed
to the visitor are canonicalized, altering the opcode to a more
universal one and making formerly implicit arguments
explicit. In particular:</p>

<ul>
<li>The opcodes to push literal constants of primitive types all become
  {@code ldc}.
  E.g., {@code fconst_0}, {@code sipush}, and
  {@code lconst_0} qualify for this treatment.</li>
<li>{@code aconst_null} becomes {@code ldc} of a
  \"known null.\"</li>
<li>Shorthand local variable accessors become the corresponding
  longhand. E.g. {@code aload_2} becomes {@code aload}.</li>
<li>{@code goto_w} and {@code jsr_w} become {@code goto}
  and {@code jsr} (respectively).</li>
<li>{@code ldc_w} becomes {@code ldc}.</li>
<li>{@code tableswitch} becomes {@code lookupswitch}.
<li>Arithmetic, array, and value-returning ops are collapsed
  to the {@code int} variant opcode, with the {@code type}
  argument set to indicate the actual type. E.g.,
  {@code fadd} becomes {@code iadd}, but
  {@code type} is passed as {@code Type.FLOAT} in that
  case. Similarly, {@code areturn} becomes
  {@code ireturn}. (However, {@code return} remains
  unchanged.</li>
<li>Local variable access ops are collapsed to the {@code int}
  variant opcode, with the {@code type} argument set to indicate
  the actual type. E.g., {@code aload} becomes {@code iload},
  but {@code type} is passed as {@code Type.OBJECT} in
  that case.</li>
<li>Numeric conversion ops ({@code i2l}, etc.) are left alone
  to avoid too much confustion, but their {@code type} is
  the pushed type. E.g., {@code i2b} gets type
  {@code Type.INT}, and {@code f2d} gets type
  {@code Type.DOUBLE}. Other unaltered opcodes also get
  their pushed type. E.g., {@code arraylength} gets type
  {@code Type.INT}.</li>
</ul>

@param offset {@code >= 0, < bytes.size();} offset to the start of the
instruction
@param visitor {@code null-ok;} visitor to call back to
@return the length of the instruction, in bytes"
      end

      operation 14810764 "parseTableswitch"
	private explicit_return_type "int"
	nparams 2
	  param in name "offset" explicit_type "int"
	  param inout name "visitor" type class_ref 3438092 // Visitor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Helper to deal with {@code tableswitch}.

@param offset the offset to the {@code tableswitch} opcode itself
@param visitor {@code non-null;} visitor to use
@return instruction length, in bytes"
      end

      operation 14810892 "parseLookupswitch"
	private explicit_return_type "int"
	nparams 2
	  param in name "offset" explicit_type "int"
	  param inout name "visitor" type class_ref 3438092 // Visitor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Helper to deal with {@code lookupswitch}.

@param offset the offset to the {@code lookupswitch} opcode itself
@param visitor {@code non-null;} visitor to use
@return instruction length, in bytes"
      end

      operation 14811020 "parseNewarray"
	private explicit_return_type "int"
	nparams 2
	  param in name "offset" explicit_type "int"
	  param inout name "visitor" type class_ref 3438092 // Visitor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Helper to deal with {@code newarray}.

@param offset the offset to the {@code newarray} opcode itself
@param visitor {@code non-null;} visitor to use
@return instruction length, in bytes"
      end

      operation 14811148 "parseWide"
	private explicit_return_type "int"
	nparams 2
	  param in name "offset" explicit_type "int"
	  param inout name "visitor" type class_ref 3438092 // Visitor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Helper to deal with {@code wide}.

@param offset the offset to the {@code wide} opcode itself
@param visitor {@code non-null;} visitor to use
@return instruction length, in bytes"
      end

      class 3438220 "BaseVisitor"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 6587916 // <realization>
	  relation 6587788 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 6587916 // <realization>
	    b parent class_ref 3438092 // Visitor
	end

	attribute 12491788 "previousOffset"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " offset of the previously parsed bytecode "
	end

	operation 14812428 "BaseVisitor"
	  package explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 14812556 "visitInvalid"
	  public explicit_return_type "void"
	  nparams 3
	    param in name "opcode" explicit_type "int"
	    param in name "offset" explicit_type "int"
	    param in name "length" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " {@inheritDoc} "
	end

	operation 14812684 "visitNoArgs"
	  public explicit_return_type "void"
	  nparams 4
	    param in name "opcode" explicit_type "int"
	    param in name "offset" explicit_type "int"
	    param in name "length" explicit_type "int"
	    param inout name "type" type class_ref 3437324 // Type
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " {@inheritDoc} "
	end

	operation 14812812 "visitLocal"
	  public explicit_return_type "void"
	  nparams 6
	    param in name "opcode" explicit_type "int"
	    param in name "offset" explicit_type "int"
	    param in name "length" explicit_type "int"
	    param in name "idx" explicit_type "int"
	    param inout name "type" type class_ref 3437324 // Type
	    param in name "value" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " {@inheritDoc} "
	end

	operation 14812940 "visitConstant"
	  public explicit_return_type "void"
	  nparams 5
	    param in name "opcode" explicit_type "int"
	    param in name "offset" explicit_type "int"
	    param in name "length" explicit_type "int"
	    param inout name "cst" type class_ref 3431692 // Constant
	    param in name "value" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " {@inheritDoc} "
	end

	operation 14813068 "visitBranch"
	  public explicit_return_type "void"
	  nparams 4
	    param in name "opcode" explicit_type "int"
	    param in name "offset" explicit_type "int"
	    param in name "length" explicit_type "int"
	    param in name "target" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " {@inheritDoc} "
	end

	operation 14813196 "visitSwitch"
	  public explicit_return_type "void"
	  nparams 5
	    param in name "opcode" explicit_type "int"
	    param in name "offset" explicit_type "int"
	    param in name "length" explicit_type "int"
	    param inout name "cases" type class_ref 3437452 // SwitchList
	    param in name "padding" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " {@inheritDoc} "
	end

	operation 14813324 "visitNewarray"
	  public explicit_return_type "void"
	  nparams 4
	    param in name "offset" explicit_type "int"
	    param in name "length" explicit_type "int"
	    param inout name "type" type class_ref 3432844 // CstType
	    param inout name "initValues" explicit_type "ArrayList<Constant>"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " {@inheritDoc} "
	end

	operation 14813452 "setPreviousOffset"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "offset" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " {@inheritDoc} "
	end

	operation 14813580 "getPreviousOffset"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " {@inheritDoc} "
	end
      end

      class 3438348 "ConstantParserVisitor"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 6588044 // <generalisation>
	  relation 6587916 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 6588044 // <generalisation>
	    b parent class_ref 3438220 // BaseVisitor
	end

	classrelation 6588172 // cst (<unidirectional association>)
	  relation 6588044 --->
	    a role_name "cst" package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 6588172 // cst (<unidirectional association>)
	    b parent class_ref 3431692 // Constant
	end

	attribute 12491916 "length"
	  package explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 12492044 "value"
	  package explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 14813708 "ConstantParserVisitor"
	  package explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Empty constructor "
	end

	operation 14813836 "clear"
	  private explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 14813964 "visitInvalid"
	  public explicit_return_type "void"
	  nparams 3
	    param in name "opcode" explicit_type "int"
	    param in name "offset" explicit_type "int"
	    param in name "length" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment " {@inheritDoc} "
	end

	operation 14814092 "visitNoArgs"
	  public explicit_return_type "void"
	  nparams 4
	    param in name "opcode" explicit_type "int"
	    param in name "offset" explicit_type "int"
	    param in name "length" explicit_type "int"
	    param inout name "type" type class_ref 3437324 // Type
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment " {@inheritDoc} "
	end

	operation 14814220 "visitLocal"
	  public explicit_return_type "void"
	  nparams 6
	    param in name "opcode" explicit_type "int"
	    param in name "offset" explicit_type "int"
	    param in name "length" explicit_type "int"
	    param in name "idx" explicit_type "int"
	    param inout name "type" type class_ref 3437324 // Type
	    param in name "value" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment " {@inheritDoc} "
	end

	operation 14814348 "visitConstant"
	  public explicit_return_type "void"
	  nparams 5
	    param in name "opcode" explicit_type "int"
	    param in name "offset" explicit_type "int"
	    param in name "length" explicit_type "int"
	    param inout name "cst" type class_ref 3431692 // Constant
	    param in name "value" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment " {@inheritDoc} "
	end

	operation 14814476 "visitBranch"
	  public explicit_return_type "void"
	  nparams 4
	    param in name "opcode" explicit_type "int"
	    param in name "offset" explicit_type "int"
	    param in name "length" explicit_type "int"
	    param in name "target" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment " {@inheritDoc} "
	end

	operation 14814604 "visitSwitch"
	  public explicit_return_type "void"
	  nparams 5
	    param in name "opcode" explicit_type "int"
	    param in name "offset" explicit_type "int"
	    param in name "length" explicit_type "int"
	    param inout name "cases" type class_ref 3437452 // SwitchList
	    param in name "padding" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment " {@inheritDoc} "
	end

	operation 14814732 "visitNewarray"
	  public explicit_return_type "void"
	  nparams 4
	    param in name "offset" explicit_type "int"
	    param in name "length" explicit_type "int"
	    param inout name "type" type class_ref 3432844 // CstType
	    param inout name "initVals" explicit_type "ArrayList<Constant>"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment " {@inheritDoc} "
	end

	operation 14814860 "setPreviousOffset"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "offset" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment " {@inheritDoc} "
	end

	operation 14814988 "getPreviousOffset"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment " {@inheritDoc} "
	end
      end
    end

    class 3432076 "ByteCatchList"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "List of catch entries, that is, the elements of an \"exception table,\"
which is part of a standard {@code Code} attribute."
      classrelation 6589580 // <generalisation>
	relation 6589452 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6589580 // <generalisation>
	  b parent class_ref 3435916 // FixedSizeList
      end

      classrelation 6589708 // EMPTY (<unidirectional association>)
	relation 6589580 --->
	  a role_name "EMPTY" init_value " new ByteCatchList(0)" class_relation const_relation public
	    comment " {@code non-null;} convenient zero-entry instance 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6589708 // EMPTY (<unidirectional association>)
	  b parent class_ref 3432076 // ByteCatchList
      end

      operation 14819980 "ByteCatchList"
	public explicit_return_type ""
	nparams 1
	  param in name "count" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance.

@param count the number of elements to be in the table"
      end

      operation 14820108 "byteLength"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the total length of this structure in bytes, when included in
a {@code Code} attribute. The returned value includes the
two bytes for {@code exception_table_length}.

@return {@code >= 2;} the total length, in bytes"
      end

      class 3439244 "Item"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 12493068 "startPc"
	  const_attribute private explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " {@code >= 0;} the start pc (inclusive) of the handler's range "
	end

	attribute 12493196 "endPc"
	  const_attribute private explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " {@code >= startPc;} the end pc (exclusive) of the handler's range "
	end

	attribute 12493324 "handlerPc"
	  const_attribute private explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " {@code >= 0;} the pc of the exception handler "
	end

	classrelation 6589836 // exceptionClass (<unidirectional association>)
	  relation 6589708 --->
	    a role_name "exceptionClass" const_relation private
	      comment " {@code null-ok;} the exception class or {@code null} to catch all
exceptions with this handler 
"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 6589836 // exceptionClass (<unidirectional association>)
	    b parent class_ref 3432844 // CstType
	end

	operation 14821132 "Item"
	  public explicit_return_type ""
	  nparams 4
	    param in name "startPc" explicit_type "int"
	    param in name "endPc" explicit_type "int"
	    param in name "handlerPc" explicit_type "int"
	    param inout name "exceptionClass" type class_ref 3432844 // CstType
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Constructs an instance.

@param startPc {@code >= 0;} the start pc (inclusive) of the
handler's range
@param endPc {@code >= startPc;} the end pc (exclusive) of the
handler's range
@param handlerPc {@code >= 0;} the pc of the exception handler
@param exceptionClass {@code null-ok;} the exception class or
{@code null} to catch all exceptions with this handler"
	end

	operation 14821260 "getStartPc"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the start pc (inclusive) of the handler's range.

@return {@code >= 0;} the start pc (inclusive) of the handler's range."
	end

	operation 14821388 "getEndPc"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the end pc (exclusive) of the handler's range.

@return {@code >= startPc;} the end pc (exclusive) of the
handler's range."
	end

	operation 14821516 "getHandlerPc"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the pc of the exception handler.

@return {@code >= 0;} the pc of the exception handler"
	end

	operation 14821644 "getExceptionClass"
	  public return_type class_ref 3432844 // CstType
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the class of exception handled.

@return {@code non-null;} the exception class; {@link CstType#OBJECT}
if this entry handles all possible exceptions"
	end

	operation 14821772 "covers"
	  public explicit_return_type "boolean"
	  nparams 1
	    param in name "pc" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns whether the given address is in the range of this item.

@param pc the address
@return {@code true} iff this item covers {@code pc}"
	end
      end

      operation 14820236 "get"
	public return_type class_ref 3439244 // Item
	nparams 1
	  param in name "n" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the indicated item.

@param n {@code >= 0;} which item
@return {@code null-ok;} the indicated item"
      end

      operation 14820364 "set"
	public explicit_return_type "void"
	nparams 2
	  param in name "n" explicit_type "int"
	  param inout name "item" type class_ref 3439244 // Item
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the item at the given index.

@param n {@code >= 0, < size();} which entry to set
@param item {@code non-null;} the item"
      end

      operation 14820492 "set"
	public explicit_return_type "void"
	nparams 5
	  param in name "n" explicit_type "int"
	  param in name "startPc" explicit_type "int"
	  param in name "endPc" explicit_type "int"
	  param in name "handlerPc" explicit_type "int"
	  param inout name "exceptionClass" type class_ref 3432844 // CstType
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the item at the given index.

@param n {@code >= 0, < size();} which entry to set
@param startPc {@code >= 0;} the start pc (inclusive) of the handler's range
@param endPc {@code >= startPc;} the end pc (exclusive) of the
handler's range
@param handlerPc {@code >= 0;} the pc of the exception handler
@param exceptionClass {@code null-ok;} the exception class or
{@code null} to catch all exceptions with this handler"
      end

      operation 14820620 "listFor"
	public return_type class_ref 3432076 // ByteCatchList
	nparams 1
	  param in name "pc" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the list of items active at the given address. The result is
automatically made immutable.

@param pc which address
@return {@code non-null;} list of exception handlers active at
{@code pc}"
      end

      operation 14820748 "typeNotFound"
	class_operation private explicit_return_type "boolean"
	nparams 3
	  param inout name "item" type class_ref 3439244 // Item
	  param inout name "arr" type class_ref 3439244 // Item
	  param in name "count" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Helper method for {@link #listFor}, which tells whether a match
is <i>not</i> found for the exception type of the given item in
the given array. A match is considered to be either an exact type
match or the class {@code Object} which represents a catch-all.

@param item {@code non-null;} item with the exception type to look for
@param arr {@code non-null;} array to search in
@param count {@code non-null;} maximum number of elements in the array to check
@return {@code true} iff the exception type is <i>not</i> found"
      end

      operation 14820876 "toTargetList"
	public return_type class_ref 3438604 // IntList
	nparams 1
	  param in name "noException" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a target list corresponding to this instance. The result
is a list of all the exception handler addresses, with the given
{@code noException} address appended if appropriate. The
result is automatically made immutable.

@param noException {@code >= -1;} the no-exception address to append, or
{@code -1} not to append anything
@return {@code non-null;} list of exception targets, with
{@code noException} appended if necessary"
      end

      operation 14821004 "toRopCatchList"
	public return_type class_ref 3433228 // TypeList
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a rop-style catches list equivalent to this one.

@return {@code non-null;} the converted instance"
      end
    end

    class 3433740 "LineNumberList"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "List of \"line number\" entries, which are the contents of
{@code LineNumberTable} attributes."
      classrelation 6591756 // <generalisation>
	relation 6591628 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6591756 // <generalisation>
	  b parent class_ref 3435916 // FixedSizeList
      end

      classrelation 6591884 // EMPTY (<unidirectional association>)
	relation 6591756 --->
	  a role_name "EMPTY" init_value " new LineNumberList(0)" class_relation const_relation public
	    comment " {@code non-null;} zero-size instance 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6591884 // EMPTY (<unidirectional association>)
	  b parent class_ref 3433740 // LineNumberList
      end

      operation 14829836 "concat"
	class_operation public return_type class_ref 3433740 // LineNumberList
	nparams 2
	  param inout name "list1" type class_ref 3433740 // LineNumberList
	  param inout name "list2" type class_ref 3433740 // LineNumberList
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an instance which is the concatenation of the two given
instances.

@param list1 {@code non-null;} first instance
@param list2 {@code non-null;} second instance
@return {@code non-null;} combined instance"
      end

      operation 14829964 "LineNumberList"
	public explicit_return_type ""
	nparams 1
	  param in name "count" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance.

@param count the number of elements to be in the list"
      end

      class 3440524 "Item"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 12524556 "startPc"
	  const_attribute private explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " {@code >= 0;} start pc of this item "
	end

	attribute 12524684 "lineNumber"
	  const_attribute private explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " {@code >= 0;} corresponding line number "
	end

	operation 14830604 "Item"
	  public explicit_return_type ""
	  nparams 2
	    param in name "startPc" explicit_type "int"
	    param in name "lineNumber" explicit_type "int"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Constructs an instance.

@param startPc {@code >= 0;} start pc of this item
@param lineNumber {@code >= 0;} corresponding line number"
	end

	operation 14830732 "getStartPc"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the start pc of this item.

@return the start pc"
	end

	operation 14830860 "getLineNumber"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the line number of this item.

@return the line number"
	end
      end

      operation 14830092 "get"
	public return_type class_ref 3440524 // Item
	nparams 1
	  param in name "n" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the indicated item.

@param n {@code >= 0;} which item
@return {@code null-ok;} the indicated item"
      end

      operation 14830220 "set"
	public explicit_return_type "void"
	nparams 2
	  param in name "n" explicit_type "int"
	  param inout name "item" type class_ref 3440524 // Item
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the item at the given index.

@param n {@code >= 0, < size();} which element
@param item {@code non-null;} the item"
      end

      operation 14830348 "set"
	public explicit_return_type "void"
	nparams 3
	  param in name "n" explicit_type "int"
	  param in name "startPc" explicit_type "int"
	  param in name "lineNumber" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the item at the given index.

@param n {@code >= 0, < size();} which element
@param startPc {@code >= 0;} start pc of this item
@param lineNumber {@code >= 0;} corresponding line number"
      end

      operation 14830476 "pcToLine"
	public explicit_return_type "int"
	nparams 1
	  param in name "pc" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the line number associated with the given address.

@param pc {@code >= 0;} the address to look up
@return {@code >= -1;} the associated line number, or {@code -1} if
none is known"
      end
    end

    class 3434124 "LocalVariableList"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "List of \"local variable\" entries, which are the contents of
{@code LocalVariableTable} and {@code LocalVariableTypeTable}
attributes, as well as combinations of the two."
      classrelation 6592652 // <generalisation>
	relation 6592524 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6592652 // <generalisation>
	  b parent class_ref 3435916 // FixedSizeList
      end

      classrelation 6592780 // EMPTY (<unidirectional association>)
	relation 6592652 --->
	  a role_name "EMPTY" init_value " new LocalVariableList(0)" class_relation const_relation public
	    comment " {@code non-null;} zero-size instance 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6592780 // EMPTY (<unidirectional association>)
	  b parent class_ref 3434124 // LocalVariableList
      end

      operation 14835852 "concat"
	class_operation public return_type class_ref 3434124 // LocalVariableList
	nparams 2
	  param inout name "list1" type class_ref 3434124 // LocalVariableList
	  param inout name "list2" type class_ref 3434124 // LocalVariableList
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an instance which is the concatenation of the two given
instances. The result is immutable.

@param list1 {@code non-null;} first instance
@param list2 {@code non-null;} second instance
@return {@code non-null;} combined instance"
      end

      operation 14835980 "mergeDescriptorsAndSignatures"
	class_operation public return_type class_ref 3434124 // LocalVariableList
	nparams 2
	  param inout name "descriptorList" type class_ref 3434124 // LocalVariableList
	  param inout name "signatureList" type class_ref 3434124 // LocalVariableList
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an instance which is the result of merging the two
given instances, where one instance should have only type
descriptors and the other only type signatures. The merged
result is identical to the one with descriptors, except that
any element whose {name, index, start, length} matches an
element in the signature list gets augmented with the
corresponding signature. The result is immutable.

@param descriptorList {@code non-null;} list with descriptors
@param signatureList {@code non-null;} list with signatures
@return {@code non-null;} the merged result"
      end

      operation 14836108 "LocalVariableList"
	public explicit_return_type ""
	nparams 1
	  param in name "count" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance.

@param count the number of elements to be in the list"
      end

      class 3440908 "Item"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 12524812 "startPc"
	  const_attribute private explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " {@code >= 0;} the start pc of this variable's scope "
	end

	attribute 12524940 "length"
	  const_attribute private explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " {@code >= 0;} the length (in bytecodes) of this variable's scope "
	end

	classrelation 6592908 // name (<unidirectional association>)
	  relation 6592780 --->
	    a role_name "name" const_relation private
	      comment " {@code non-null;} the variable's name 
"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 6592908 // name (<unidirectional association>)
	    b parent class_ref 3435532 // CstString
	end

	classrelation 6593036 // descriptor (<unidirectional association>)
	  relation 6592908 --->
	    a role_name "descriptor" const_relation private
	      comment " {@code null-ok;} the variable's type descriptor 
"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 6593036 // descriptor (<unidirectional association>)
	    b parent class_ref 3435532 // CstString
	end

	classrelation 6593164 // signature (<unidirectional association>)
	  relation 6593036 --->
	    a role_name "signature" const_relation private
	      comment " {@code null-ok;} the variable's type signature 
"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 6593164 // signature (<unidirectional association>)
	    b parent class_ref 3435532 // CstString
	end

	attribute 12525068 "index"
	  const_attribute private explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " {@code >= 0;} the variable's local index "
	end

	operation 14836876 "Item"
	  public explicit_return_type ""
	  nparams 6
	    param in name "startPc" explicit_type "int"
	    param in name "length" explicit_type "int"
	    param inout name "name" type class_ref 3435532 // CstString
	    param inout name "descriptor" type class_ref 3435532 // CstString
	    param inout name "signature" type class_ref 3435532 // CstString
	    param in name "index" explicit_type "int"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Constructs an instance.

<p><b>Note:</b> At least one of {@code descriptor} or
{@code signature} must be passed as non-null.</p>

@param startPc {@code >= 0;} the start pc of this variable's scope
@param length {@code >= 0;} the length (in bytecodes) of this variable's
scope
@param name {@code non-null;} the variable's name
@param descriptor {@code null-ok;} the variable's type descriptor
@param signature {@code null-ok;} the variable's type signature
@param index {@code >= 0;} the variable's local index"
	end

	operation 14837004 "getStartPc"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the start pc of this variable's scope.

@return {@code >= 0;} the start pc of this variable's scope"
	end

	operation 14837132 "getLength"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the length (in bytecodes) of this variable's scope.

@return {@code >= 0;} the length (in bytecodes) of this variable's scope"
	end

	operation 14837260 "getDescriptor"
	  public return_type class_ref 3435532 // CstString
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the variable's type descriptor.

@return {@code null-ok;} the variable's type descriptor"
	end

	operation 14837388 "getLocalItem"
	  public return_type class_ref 3437580 // LocalItem
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the variable's LocalItem, a (name, signature) tuple

@return {@code null-ok;} the variable's type descriptor"
	end

	operation 14837516 "getSignature"
	  private return_type class_ref 3435532 // CstString
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the variable's type signature. Private because if you need this,
you want getLocalItem() instead.

@return {@code null-ok;} the variable's type signature"
	end

	operation 14837644 "getIndex"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the variable's local index.

@return {@code >= 0;} the variable's local index"
	end

	operation 14837772 "getType"
	  public return_type class_ref 3437324 // Type
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the variable's type descriptor. This is a convenient shorthand
for {@code Type.intern(getDescriptor().getString())}.

@return {@code non-null;} the variable's type"
	end

	operation 14837900 "withSignature"
	  public return_type class_ref 3440908 // Item
	  nparams 1
	    param inout name "newSignature" type class_ref 3435532 // CstString
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Constructs and returns an instance which is identical to this
one, except that the signature is changed to the given value.

@param newSignature {@code non-null;} the new signature
@return {@code non-null;} an appropriately-constructed instance"
	end

	operation 14838028 "matchesPcAndIndex"
	  public explicit_return_type "boolean"
	  nparams 2
	    param in name "pc" explicit_type "int"
	    param in name "index" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets whether this instance matches (describes) the given
address and index.

@param pc {@code >= 0;} the address in question
@param index {@code >= 0;} the local variable index in question
@return {@code true} iff this instance matches {@code pc}
and {@code index}"
	end

	operation 14838156 "matchesAllButType"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "other" type class_ref 3440908 // Item
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets whether this instance matches (describes) the given
other instance exactly in all fields except type descriptor and
type signature.

@param other {@code non-null;} the instance to compare to
@return {@code true} iff this instance matches"
	end
      end

      operation 14836236 "get"
	public return_type class_ref 3440908 // Item
	nparams 1
	  param in name "n" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the indicated item.

@param n {@code >= 0;} which item
@return {@code null-ok;} the indicated item"
      end

      operation 14836364 "set"
	public explicit_return_type "void"
	nparams 2
	  param in name "n" explicit_type "int"
	  param inout name "item" type class_ref 3440908 // Item
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the item at the given index.

@param n {@code >= 0, < size();} which element
@param item {@code non-null;} the item"
      end

      operation 14836492 "set"
	public explicit_return_type "void"
	nparams 7
	  param in name "n" explicit_type "int"
	  param in name "startPc" explicit_type "int"
	  param in name "length" explicit_type "int"
	  param inout name "name" type class_ref 3435532 // CstString
	  param inout name "descriptor" type class_ref 3435532 // CstString
	  param inout name "signature" type class_ref 3435532 // CstString
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the item at the given index.

<p><b>Note:</b> At least one of {@code descriptor} or
{@code signature} must be passed as non-null.</p>

@param n {@code >= 0, < size();} which element
@param startPc {@code >= 0;} the start pc of this variable's scope
@param length {@code >= 0;} the length (in bytecodes) of this variable's
scope
@param name {@code non-null;} the variable's name
@param descriptor {@code null-ok;} the variable's type descriptor
@param signature {@code null-ok;} the variable's type signature
@param index {@code >= 0;} the variable's local index"
      end

      operation 14836620 "itemToLocal"
	public return_type class_ref 3440908 // Item
	nparams 1
	  param inout name "item" type class_ref 3440908 // Item
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the local variable information in this instance which matches
the given {@link com.android.dx.cf.code.LocalVariableList.Item}
in all respects but the type descriptor and signature, if any.

@param item {@code non-null;} local variable information to match
@return {@code null-ok;} the corresponding local variable information stored
in this instance, or {@code null} if there is no matching
information"
      end

      operation 14836748 "pcAndIndexToLocal"
	public return_type class_ref 3440908 // Item
	nparams 2
	  param in name "pc" explicit_type "int"
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the local variable information associated with a given address
and local index, if any. <b>Note:</b> In standard classfiles, a
variable's start point is listed as the address of the instruction
<i>just past</i> the one that sets the variable.

@param pc {@code >= 0;} the address to look up
@param index {@code >= 0;} the local variable index
@return {@code null-ok;} the associated local variable information, or
{@code null} if none is known"
      end
    end

    class 3436812 "BaseMachine"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Base implementation of {@link Machine}.

<p><b>Note:</b> For the most part, the documentation for this class
ignores the distinction between {@link Type} and {@link
TypeBearer}.</p>"
      classrelation 6586380 // <realization>
	relation 6586252 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6586380 // <realization>
	  b parent class_ref 3436940 // Machine
      end

      classrelation 6586508 // prototype (<unidirectional association>)
	relation 6586380 --->
	  a role_name "prototype" const_relation private
	    comment " {@code non-null;} the prototype for the associated method 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6586508 // prototype (<unidirectional association>)
	  b parent class_ref 3437068 // Prototype
      end

      classrelation 6586636 // args (<unidirectional association>)
	relation 6586508 --->
	  a role_name "args" multiplicity "[]" private
	    comment " {@code non-null;} primary arguments 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 6586636 // args (<unidirectional association>)
	  b parent class_ref 3437708 // TypeBearer
      end

      attribute 12491020 "argCount"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " {@code >= 0;} number of primary arguments "
      end

      classrelation 6586764 // auxType (<unidirectional association>)
	relation 6586636 --->
	  a role_name "auxType" private
	    comment " {@code null-ok;} type of the operation, if salient 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6586764 // auxType (<unidirectional association>)
	  b parent class_ref 3437324 // Type
      end

      attribute 12491148 "auxInt"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " auxiliary {@code int} argument "
      end

      classrelation 6586892 // auxCst (<unidirectional association>)
	relation 6586764 --->
	  a role_name "auxCst" private
	    comment " {@code null-ok;} auxiliary constant argument 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6586892 // auxCst (<unidirectional association>)
	  b parent class_ref 3431692 // Constant
      end

      attribute 12491276 "auxTarget"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " auxiliary branch target argument "
      end

      classrelation 6587020 // auxCases (<unidirectional association>)
	relation 6586892 --->
	  a role_name "auxCases" private
	    comment " {@code null-ok;} auxiliary switch cases argument 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6587020 // auxCases (<unidirectional association>)
	  b parent class_ref 3437452 // SwitchList
      end

      classrelation 6587148 // auxInitValues (<unidirectional association>)
	relation 6587020 --->
	  stereotype "ArrayList"
	  a role_name "auxInitValues" private
	    comment " {@code null-ok;} auxiliary initial value list for newarray "
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 6587148 // auxInitValues (<unidirectional association>)
	  b parent class_ref 3431692 // Constant
      end

      attribute 12491404 "localIndex"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " {@code >= -1;} last local accessed "
      end

      attribute 12491532 "localInfo"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " specifies if local has info in the local variable table "
      end

      classrelation 6587276 // localTarget (<unidirectional association>)
	relation 6587148 --->
	  a role_name "localTarget" private
	    comment " {@code null-ok;} local target spec, if salient and calculated 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6587276 // localTarget (<unidirectional association>)
	  b parent class_ref 3437836 // RegisterSpec
      end

      classrelation 6587404 // results (<unidirectional association>)
	relation 6587276 --->
	  a role_name "results" multiplicity "[]" private
	    comment " {@code non-null;} results 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 6587404 // results (<unidirectional association>)
	  b parent class_ref 3437708 // TypeBearer
      end

      attribute 12491660 "resultCount"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "{@code >= -1;} count of the results, or {@code -1} if no results
have been set
"
      end

      operation 14805004 "BaseMachine"
	public explicit_return_type ""
	nparams 1
	  param inout name "prototype" type class_ref 3437068 // Prototype
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance.

@param prototype {@code non-null;} the prototype for the
associated method"
      end

      operation 14805132 "getPrototype"
	public return_type class_ref 3437068 // Prototype
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14805260 "clearArgs"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14805388 "popArgs"
	public explicit_return_type "void"
	nparams 2
	  param inout name "frame" type class_ref 3437196 // Frame
	  param in name "count" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14805516 "popArgs"
	public explicit_return_type "void"
	nparams 2
	  param inout name "frame" type class_ref 3437196 // Frame
	  param inout name "prototype" type class_ref 3437068 // Prototype
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14805644 "popArgs"
	public explicit_return_type "void"
	nparams 2
	  param inout name "frame" type class_ref 3437196 // Frame
	  param inout name "type" type class_ref 3437324 // Type
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 14805772 "popArgs"
	public explicit_return_type "void"
	nparams 3
	  param inout name "frame" type class_ref 3437196 // Frame
	  param inout name "type1" type class_ref 3437324 // Type
	  param inout name "type2" type class_ref 3437324 // Type
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14805900 "popArgs"
	public explicit_return_type "void"
	nparams 4
	  param inout name "frame" type class_ref 3437196 // Frame
	  param inout name "type1" type class_ref 3437324 // Type
	  param inout name "type2" type class_ref 3437324 // Type
	  param inout name "type3" type class_ref 3437324 // Type
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14806028 "localArg"
	public explicit_return_type "void"
	nparams 2
	  param inout name "frame" type class_ref 3437196 // Frame
	  param in name "idx" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14806156 "localInfo"
	public explicit_return_type "void"
	nparams 1
	  param inout name "local" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14806284 "auxType"
	public explicit_return_type "void"
	nparams 1
	  param inout name "type" type class_ref 3437324 // Type
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14806412 "auxIntArg"
	public explicit_return_type "void"
	nparams 1
	  param in name "value" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14806540 "auxCstArg"
	public explicit_return_type "void"
	nparams 1
	  param inout name "cst" type class_ref 3431692 // Constant
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14806668 "auxTargetArg"
	public explicit_return_type "void"
	nparams 1
	  param in name "target" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14806796 "auxSwitchArg"
	public explicit_return_type "void"
	nparams 1
	  param inout name "cases" type class_ref 3437452 // SwitchList
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14806924 "auxInitValues"
	public explicit_return_type "void"
	nparams 1
	  param inout name "initValues" explicit_type "ArrayList<Constant>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14807052 "localTarget"
	public explicit_return_type "void"
	nparams 3
	  param in name "idx" explicit_type "int"
	  param inout name "type" type class_ref 3437324 // Type
	  param inout name "local" type class_ref 3437580 // LocalItem
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14807180 "argCount"
	protected explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the number of primary arguments.

@return {@code >= 0;} the number of primary arguments"
      end

      operation 14807308 "argWidth"
	protected explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the width of the arguments (where a category-2 value counts as
two).

@return {@code >= 0;} the argument width"
      end

      operation 14807436 "arg"
	protected return_type class_ref 3437708 // TypeBearer
	nparams 1
	  param in name "n" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the {@code n}th primary argument.

@param n {@code >= 0, < argCount();} which argument
@return {@code non-null;} the indicated argument"
      end

      operation 14807564 "getAuxType"
	protected return_type class_ref 3437324 // Type
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the type auxiliary argument.

@return {@code null-ok;} the salient type"
      end

      operation 14807692 "getAuxInt"
	protected explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the {@code int} auxiliary argument.

@return the argument value"
      end

      operation 14807820 "getAuxCst"
	protected return_type class_ref 3431692 // Constant
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the constant auxiliary argument.

@return {@code null-ok;} the argument value"
      end

      operation 14807948 "getAuxTarget"
	protected explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the branch target auxiliary argument.

@return the argument value"
      end

      operation 14808076 "getAuxCases"
	protected return_type class_ref 3437452 // SwitchList
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the switch cases auxiliary argument.

@return {@code null-ok;} the argument value"
      end

      operation 14808204 "getInitValues"
	protected return_type class_ref 3431692 // Constant
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}ArrayList<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the init values auxiliary argument.

@return {@code null-ok;} the argument value"
      end

      operation 14808332 "getLocalIndex"
	protected explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the last local index accessed.

@return {@code >= -1;} the salient local index or {@code -1} if none
was set since the last time {@link #clearArgs} was called"
      end

      operation 14808460 "getLocalInfo"
	protected explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets whether the loaded local has info in the local variable table.

@return {@code true} if local arg has info in the local variable table"
      end

      operation 14808588 "getLocalTarget"
	protected return_type class_ref 3437836 // RegisterSpec
	nparams 1
	  param inout name "isMove" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the target local register spec of the current operation, if any.
The local target spec is the combination of the values indicated
by a previous call to {@link #localTarget} with the type of what
should be the sole result set by a call to {@link #setResult} (or
the combination {@link #clearResult} then {@link #addResult}.

@param isMove {@code true} if the operation being performed on the
local is a move. This will cause constant values to be propagated
to the returned local
@return {@code null-ok;} the salient register spec or {@code null} if no
local target was set since the last time {@link #clearArgs} was
called"
      end

      operation 14808716 "clearResult"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Clears the results."
      end

      operation 14808844 "setResult"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "result" type class_ref 3437708 // TypeBearer
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the results list to be the given single value.

<p><b>Note:</b> If there is more than one result value, the
others may be added by using {@link #addResult}.</p>

@param result {@code non-null;} result value"
      end

      operation 14808972 "addResult"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "result" type class_ref 3437708 // TypeBearer
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds an additional element to the list of results.

@see #setResult

@param result {@code non-null;} result value"
      end

      operation 14809100 "resultCount"
	protected explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the count of results. This throws an exception if results were
never set. (Explicitly clearing the results counts as setting them.)

@return {@code >= 0;} the count"
      end

      operation 14809228 "resultWidth"
	protected explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the width of the results (where a category-2 value counts as
two).

@return {@code >= 0;} the result width"
      end

      operation 14809356 "result"
	protected return_type class_ref 3437708 // TypeBearer
	nparams 1
	  param in name "n" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the {@code n}th result value.

@param n {@code >= 0, < resultCount();} which result
@return {@code non-null;} the indicated result value"
      end

      operation 14809484 "storeResults"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "frame" type class_ref 3437196 // Frame
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Stores the results of the latest operation into the given frame. If
there is a local target (see {@link #localTarget}), then the sole
result is stored to that target; otherwise any results are pushed
onto the stack.

@param frame {@code non-null;} frame to operate on"
      end

      operation 14809612 "throwLocalMismatch"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "found" type class_ref 3437708 // TypeBearer
	  param inout name "local" type class_ref 3437708 // TypeBearer
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Throws an exception that indicates a mismatch in local variable
types.

@param found {@code non-null;} the encountered type
@param local {@code non-null;} the local variable's claimed type"
      end
    end

    class 3436940 "Machine"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Interface for machines capable of executing bytecode by acting
upon a {@link Frame}. A machine conceptually contains four arbitrary-value
argument slots, slots for several literal-value arguments, and slots for
branch target information."
      operation 14802828 "getPrototype"
	public return_type class_ref 3437068 // Prototype
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the effective prototype of the method that this instance is
being used for. The <i>effective</i> prototype includes an initial
{@code this} argument for instance methods.

@return {@code non-null;} the method prototype"
      end

      operation 14802956 "clearArgs"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Clears the regular and auxiliary arguments area."
      end

      operation 14803084 "popArgs"
	public explicit_return_type "void"
	nparams 2
	  param inout name "frame" type class_ref 3437196 // Frame
	  param in name "count" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pops the given number of values from the stack (of either category),
and store them in the arguments area, indicating that there are now
that many arguments. Also, clear the auxiliary arguments.

@param frame {@code non-null;} frame to operate on
@param count {@code >= 0;} number of values to pop"
      end

      operation 14803212 "popArgs"
	public explicit_return_type "void"
	nparams 2
	  param inout name "frame" type class_ref 3437196 // Frame
	  param inout name "prototype" type class_ref 3437068 // Prototype
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pops values from the stack of the types indicated by the given
{@code Prototype} (popped in reverse of the argument
order, so the first prototype argument type is for the deepest
element of the stack), and store them in the arguments area,
indicating that there are now that many arguments. Also, clear
the auxiliary arguments.

@param frame {@code non-null;} frame to operate on
@param prototype {@code non-null;} prototype indicating arguments to pop"
      end

      operation 14803340 "popArgs"
	public explicit_return_type "void"
	nparams 2
	  param inout name "frame" type class_ref 3437196 // Frame
	  param inout name "type" type class_ref 3437324 // Type
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pops a value from the stack of the indicated type, and store it
in the arguments area, indicating that there are now that many
arguments. Also, clear the auxiliary arguments.

@param frame {@code non-null;} frame to operate on
@param type {@code non-null;} type of the argument"
      end

      operation 14803468 "popArgs"
	public explicit_return_type "void"
	nparams 3
	  param inout name "frame" type class_ref 3437196 // Frame
	  param inout name "type1" type class_ref 3437324 // Type
	  param inout name "type2" type class_ref 3437324 // Type
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pops values from the stack of the indicated types (popped in
reverse argument order, so the first indicated type is for the
deepest element of the stack), and store them in the arguments
area, indicating that there are now that many arguments. Also,
clear the auxiliary arguments.

@param frame {@code non-null;} frame to operate on
@param type1 {@code non-null;} type of the first argument
@param type2 {@code non-null;} type of the second argument"
      end

      operation 14803596 "popArgs"
	public explicit_return_type "void"
	nparams 4
	  param inout name "frame" type class_ref 3437196 // Frame
	  param inout name "type1" type class_ref 3437324 // Type
	  param inout name "type2" type class_ref 3437324 // Type
	  param inout name "type3" type class_ref 3437324 // Type
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pops values from the stack of the indicated types (popped in
reverse argument order, so the first indicated type is for the
deepest element of the stack), and store them in the arguments
area, indicating that there are now that many arguments. Also,
clear the auxiliary arguments.

@param frame {@code non-null;} frame to operate on
@param type1 {@code non-null;} type of the first argument
@param type2 {@code non-null;} type of the second argument
@param type3 {@code non-null;} type of the third argument"
      end

      operation 14803724 "localArg"
	public explicit_return_type "void"
	nparams 2
	  param inout name "frame" type class_ref 3437196 // Frame
	  param in name "idx" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Loads the local variable with the given index as the sole argument in
the arguments area. Also, clear the auxiliary arguments.

@param frame {@code non-null;} frame to operate on
@param idx {@code >= 0;} the local variable index"
      end

      operation 14803852 "localInfo"
	public explicit_return_type "void"
	nparams 1
	  param inout name "local" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Used to specify if a loaded local variable has info in the local
variable table.

@param local {@code true} if local arg has info in local variable table"
      end

      operation 14803980 "auxType"
	public explicit_return_type "void"
	nparams 1
	  param inout name "type" type class_ref 3437324 // Type
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates that the salient type of this operation is as
given. This differentiates between, for example, the various
arithmetic opcodes, which, by the time they hit a
{@code Machine} are collapsed to the {@code int}
variant. (See {@link BytecodeArray#parseInstruction} for
details.)

@param type {@code non-null;} the salient type of the upcoming operation"
      end

      operation 14804108 "auxIntArg"
	public explicit_return_type "void"
	nparams 1
	  param in name "value" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates that there is an auxiliary (inline, not stack)
argument of type {@code int}, with the given value.

<p><b>Note:</b> Perhaps unintuitively, the stack manipulation
ops (e.g., {@code dup} and {@code swap}) use this to
indicate the result stack pattern with a straightforward hex
encoding of the push order starting with least-significant
nibbles getting pushed first). For example, an all-category-1
{@code dup2_x1} sets this to {@code 0x12312}, and the
other form of that op sets this to
{@code 0x121}.</p>

<p><b>Also Note:</b> For {@code switch*} instructions, this is
used to indicate the padding value (which is only useful for
verification).</p>

@param value the argument value"
      end

      operation 14804236 "auxCstArg"
	public explicit_return_type "void"
	nparams 1
	  param inout name "cst" type class_ref 3431692 // Constant
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates that there is an auxiliary (inline, not stack) object
argument, with the value based on the given constant.

<p><b>Note:</b> Some opcodes use both {@code int} and
constant auxiliary arguments.</p>

@param cst {@code non-null;} the constant containing / referencing
the value"
      end

      operation 14804364 "auxTargetArg"
	public explicit_return_type "void"
	nparams 1
	  param in name "target" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates that there is an auxiliary (inline, not stack) argument
indicating a branch target.

@param target the argument value"
      end

      operation 14804492 "auxSwitchArg"
	public explicit_return_type "void"
	nparams 1
	  param inout name "cases" type class_ref 3437452 // SwitchList
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates that there is an auxiliary (inline, not stack) argument
consisting of a {@code switch*} table.

<p><b>Note:</b> This is generally used in conjunction with
{@link #auxIntArg} (which holds the padding).</p>

@param cases {@code non-null;} the list of key-target pairs, plus the default
target"
      end

      operation 14804620 "auxInitValues"
	public explicit_return_type "void"
	nparams 1
	  param inout name "initValues" explicit_type "ArrayList<Constant>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates that there is an auxiliary (inline, not stack) argument
consisting of a list of initial values for a newly created array.

@param initValues {@code non-null;} the list of constant values to initialize
the array"
      end

      operation 14804748 "localTarget"
	public explicit_return_type "void"
	nparams 3
	  param in name "idx" explicit_type "int"
	  param inout name "type" type class_ref 3437324 // Type
	  param inout name "local" type class_ref 3437580 // LocalItem
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates that the target of this operation is the given local.

@param idx {@code >= 0;} the local variable index
@param type {@code non-null;} the type of the local
@param local {@code null-ok;} the name and signature of the local, if known"
      end

      operation 14804876 "run"
	public explicit_return_type "void"
	nparams 3
	  param inout name "frame" type class_ref 3437196 // Frame
	  param in name "offset" explicit_type "int"
	  param in name "opcode" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "\"Runs\" the indicated opcode in an appropriate way, using the arguments
area as appropriate, and modifying the given frame in response.

@param frame {@code non-null;} frame to operate on
@param offset {@code >= 0;} byte offset in the method to the opcode being
run
@param opcode {@code >= 0;} the opcode to run"
      end
    end

    class 3437196 "Frame"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Representation of a Java method execution frame. A frame consists
of a set of locals and a value stack, and it can be told to act on
them to load and store values between them and an \"arguments /
results\" area."
      classrelation 6591372 // locals (<unidirectional association>)
	relation 6591244 --->
	  a role_name "locals" const_relation private
	    comment " {@code non-null;} the locals 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6591372 // locals (<unidirectional association>)
	  b parent class_ref 3440268 // LocalsArray
      end

      classrelation 6591500 // stack (<unidirectional association>)
	relation 6591372 --->
	  a role_name "stack" const_relation private
	    comment " {@code non-null;} the stack 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6591500 // stack (<unidirectional association>)
	  b parent class_ref 3440012 // ExecutionStack
      end

      classrelation 6591628 // subroutines (<unidirectional association>)
	relation 6591500 --->
	  a role_name "subroutines" const_relation private
	    comment " {@code null-ok;} stack of labels of subroutines that this block is nested in 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6591628 // subroutines (<unidirectional association>)
	  b parent class_ref 3438604 // IntList
      end

      operation 14827532 "Frame"
	private explicit_return_type ""
	nparams 2
	  param inout name "locals" type class_ref 3440268 // LocalsArray
	  param inout name "stack" type class_ref 3440012 // ExecutionStack
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance.

@param locals {@code non-null;} the locals array to use
@param stack {@code non-null;} the execution stack to use"
      end

      operation 14827660 "Frame"
	private explicit_return_type ""
	nparams 3
	  param inout name "locals" type class_ref 3440268 // LocalsArray
	  param inout name "stack" type class_ref 3440012 // ExecutionStack
	  param inout name "subroutines" type class_ref 3438604 // IntList
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance.

@param locals {@code non-null;} the locals array to use
@param stack {@code non-null;} the execution stack to use
@param subroutines {@code non-null;} list of subroutine start labels for
subroutines this frame is nested in"
      end

      operation 14827788 "Frame"
	public explicit_return_type ""
	nparams 2
	  param in name "maxLocals" explicit_type "int"
	  param in name "maxStack" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance. The locals array initially consists of
all-uninitialized values (represented as {@code null}s) and
the stack starts out empty.

@param maxLocals {@code >= 0;} the maximum number of locals this instance
can refer to
@param maxStack {@code >= 0;} the maximum size of the stack for this
instance"
      end

      operation 14827916 "copy"
	public return_type class_ref 3437196 // Frame
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Makes and returns a mutable copy of this instance. The copy
contains copies of the locals and stack (that is, it doesn't
share them with the original).

@return {@code non-null;} the copy"
      end

      operation 14828044 "setImmutable"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Makes this instance immutable."
      end

      operation 14828172 "makeInitialized"
	public explicit_return_type "void"
	nparams 1
	  param inout name "type" type class_ref 3437324 // Type
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Replaces all the occurrences of the given uninitialized type in
this frame with its initialized equivalent.

@param type {@code non-null;} type to replace"
      end

      operation 14828300 "getLocals"
	public return_type class_ref 3440268 // LocalsArray
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the locals array for this instance.

@return {@code non-null;} the locals array"
      end

      operation 14828428 "getStack"
	public return_type class_ref 3440012 // ExecutionStack
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the execution stack for this instance.

@return {@code non-null;} the execution stack"
      end

      operation 14828556 "getSubroutines"
	public return_type class_ref 3438604 // IntList
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the largest subroutine nesting this block may be in. An
empty list is returned if this block is not in any subroutine.
Subroutines are identified by the label of their start block. The
list is ordered such that the deepest nesting (the actual subroutine
this block is in) is the last label in the list.

@return {@code non-null;} list as noted above"
      end

      operation 14828684 "initializeWithParameters"
	public explicit_return_type "void"
	nparams 1
	  param inout name "params" type class_ref 3440396 // StdTypeList
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initialize this frame with the method's parameters. Used for the first
frame.

@param params Type list of method parameters."
      end

      operation 14828812 "subFrameForLabel"
	public return_type class_ref 3437196 // Frame
	nparams 2
	  param in name "startLabel" explicit_type "int"
	  param in name "subLabel" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a Frame instance representing the frame state that should
be used when returning from a subroutine. The stack state of all
subroutine invocations is identical, but the locals state may differ.

@param startLabel {@code >=0;} The label of the returning subroutine's
start block
@param subLabel {@code >=0;} A calling label of a subroutine
@return {@code null-ok;} an appropriatly-constructed instance, or null
if label is not in the set"
      end

      operation 14828940 "mergeWith"
	public return_type class_ref 3437196 // Frame
	nparams 1
	  param inout name "other" type class_ref 3437196 // Frame
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Merges two frames. If the merged result is the same as this frame,
then this instance is returned.

@param other {@code non-null;} another frame
@return {@code non-null;} the result of merging the two frames"
      end

      operation 14829068 "mergeSubroutineLists"
	private return_type class_ref 3438604 // IntList
	nparams 1
	  param inout name "otherSubroutines" type class_ref 3438604 // IntList
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Merges this frame's subroutine lists with another. The result
is the deepest common nesting (effectively, the common prefix of the
two lists).

@param otherSubroutines label list of subroutine start blocks, from
least-nested to most-nested.
@return {@code non-null;} merged subroutine nest list as described above"
      end

      operation 14829196 "adjustLocalsForSubroutines"
	class_operation private return_type class_ref 3440268 // LocalsArray
	nparams 2
	  param inout name "locals" type class_ref 3440268 // LocalsArray
	  param inout name "subroutines" type class_ref 3438604 // IntList
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adjusts a locals array to account for a merged subroutines list.
If a frame merge results in, effectively, a subroutine return through
a throw then the current locals will be a LocalsArraySet that will
need to be trimmed of all OneLocalsArray elements that relevent to
the subroutine that is returning.

@param locals {@code non-null;} LocalsArray from before a merge
@param subroutines {@code non-null;} a label list of subroutine start blocks
representing the subroutine nesting of the block being merged into.
@return {@code non-null;} locals set appropriate for merge"
      end

      operation 14829324 "mergeWithSubroutineCaller"
	public return_type class_ref 3437196 // Frame
	nparams 3
	  param inout name "other" type class_ref 3437196 // Frame
	  param in name "subLabel" explicit_type "int"
	  param in name "predLabel" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Merges this frame with the frame of a subroutine caller at
{@code predLabel}. Only called on the frame at the first
block of a subroutine.

@param other {@code non-null;} another frame
@param subLabel label of subroutine start block
@param predLabel label of calling block
@return {@code non-null;} the result of merging the two frames"
      end

      operation 14829452 "makeNewSubroutineStartFrame"
	public return_type class_ref 3437196 // Frame
	nparams 2
	  param in name "subLabel" explicit_type "int"
	  param in name "callerLabel" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Makes a frame for a subroutine start block, given that this is the
ending frame of one of the subroutine's calling blocks. Subroutine
calls may be nested and thus may have nested locals state, so we
start with an initial state as seen by the subroutine, but keep track
of the individual locals states that will be expected when the individual
subroutine calls return.

@param subLabel label of subroutine start block
@param callerLabel {@code >=0;} label of the caller block where this frame
came from.
@return a new instance to begin a called subroutine."
      end

      operation 14829580 "makeExceptionHandlerStartFrame"
	public return_type class_ref 3437196 // Frame
	nparams 1
	  param inout name "exceptionClass" type class_ref 3432844 // CstType
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Makes a new frame for an exception handler block invoked from this
frame.

@param exceptionClass exception that the handler block will handle
@return new frame"
      end

      operation 14829708 "annotate"
	public explicit_return_type "void"
	nparams 1
	  param inout name "ex" type class_ref 3440140 // ExceptionWithContext
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Annotates (adds context to) the given exception with information
about this frame.

@param ex {@code non-null;} the exception to annotate"
      end
    end

    class 3437452 "SwitchList"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "List of (value, target) mappings representing the choices of a
{@code tableswitch} or {@code lookupswitch} instruction. It
also holds the default target for the switch."
      classrelation 6598028 // <generalisation>
	relation 6597900 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6598028 // <generalisation>
	  b parent class_ref 3436044 // MutabilityControl
      end

      classrelation 6598156 // values (<unidirectional association>)
	relation 6598028 --->
	  a role_name "values" const_relation private
	    comment " {@code non-null;} list of test values 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6598156 // values (<unidirectional association>)
	  b parent class_ref 3438604 // IntList
      end

      classrelation 6598284 // targets (<unidirectional association>)
	relation 6598156 --->
	  a role_name "targets" const_relation private
	    comment "
{@code non-null;} list of targets corresponding to the test values; there
is always one extra element in the target list, to hold the
default target

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6598284 // targets (<unidirectional association>)
	  b parent class_ref 3438604 // IntList
      end

      attribute 12529036 "size"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " ultimate size of the list "
      end

      operation 14855564 "SwitchList"
	public explicit_return_type ""
	nparams 1
	  param in name "size" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance.

@param size {@code >= 0;} the number of elements to be in the table"
      end

      operation 14855692 "setImmutable"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14855820 "size"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the size of the list.

@return {@code >= 0;} the list size"
      end

      operation 14855948 "getValue"
	public explicit_return_type "int"
	nparams 1
	  param in name "n" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the indicated test value.

@param n {@code >= 0;}, &lt; size(); which index
@return the test value"
      end

      operation 14856076 "getTarget"
	public explicit_return_type "int"
	nparams 1
	  param in name "n" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the indicated target. Asking for the target at {@code size()}
returns the default target.

@param n {@code >= 0, <= size();} which index
@return {@code >= 0;} the target"
      end

      operation 14856204 "getDefaultTarget"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the default target. This is just a shorthand for
{@code getTarget(size())}.

@return {@code >= 0;} the default target"
      end

      operation 14856332 "getTargets"
	public return_type class_ref 3438604 // IntList
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the list of all targets. This includes one extra element at the
end of the list, which holds the default target.

@return {@code non-null;} the target list"
      end

      operation 14856460 "getValues"
	public return_type class_ref 3438604 // IntList
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the list of all case values.

@return {@code non-null;} the case value list"
      end

      operation 14856588 "setDefaultTarget"
	public explicit_return_type "void"
	nparams 1
	  param in name "target" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the default target. It is only valid to call this method
when all the non-default elements have been set.

@param target {@code >= 0;} the absolute (not relative) default target
address"
      end

      operation 14856716 "add"
	public explicit_return_type "void"
	nparams 2
	  param in name "value" explicit_type "int"
	  param in name "target" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the given item.

@param value the test value
@param target {@code >= 0;} the absolute (not relative) target address"
      end

      operation 14856844 "removeSuperfluousDefaults"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Shrinks this instance if possible, removing test elements that
refer to the default target. This is only valid after the instance
is fully populated, including the default target (naturally)."
      end
    end

    class 3437964 "BasicBlocker"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Utility that identifies basic blocks in bytecode."
      classrelation 6588300 // <realization>
	relation 6588172 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6588300 // <realization>
	  b parent class_ref 3438092 // Visitor
      end

      classrelation 6588428 // method (<unidirectional association>)
	relation 6588300 --->
	  a role_name "method" const_relation private
	    comment " {@code non-null;} method being converted 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6588428 // method (<unidirectional association>)
	  b parent class_ref 3438476 // ConcreteMethod
      end

      attribute 12492172 "workSet"
	const_attribute private explicit_type "int"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "{@code non-null;} work set; bits indicate offsets in need of
examination
"
      end

      attribute 12492300 "liveSet"
	const_attribute private explicit_type "int"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "{@code non-null;} live set; bits indicate potentially-live
opcodes; contrawise, a bit that isn't on is either in the
middle of an instruction or is a definitely-dead opcode
"
      end

      attribute 12492428 "blockSet"
	const_attribute private explicit_type "int"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "{@code non-null;} block start set; bits indicate the starts of
basic blocks, including the opcodes that start blocks of
definitely-dead code
"
      end

      classrelation 6588556 // targetLists (<unidirectional association>)
	relation 6588428 --->
	  a role_name "targetLists" multiplicity "[]" const_relation private
	    comment "
{@code non-null, sparse;} for each instruction offset to a branch of
some sort, the list of targets for that instruction

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 6588556 // targetLists (<unidirectional association>)
	  b parent class_ref 3438604 // IntList
      end

      classrelation 6588684 // catchLists (<unidirectional association>)
	relation 6588556 --->
	  a role_name "catchLists" multiplicity "[]" const_relation private
	    comment "
{@code non-null, sparse;} for each instruction offset to a throwing
instruction, the list of exception handlers for that instruction

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 6588684 // catchLists (<unidirectional association>)
	  b parent class_ref 3432076 // ByteCatchList
      end

      attribute 12492556 "previousOffset"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " offset of the previously parsed bytecode "
      end

      operation 14815116 "identifyBlocks"
	class_operation public return_type class_ref 3438732 // ByteBlockList
	nparams 1
	  param inout name "method" type class_ref 3438476 // ConcreteMethod
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Identifies and enumerates the basic blocks in the given method,
returning a list of them. The returned list notably omits any
definitely-dead code that is identified in the process.

@param method {@code non-null;} method to convert
@return {@code non-null;} list of basic blocks"
      end

      operation 14815244 "BasicBlocker"
	private explicit_return_type ""
	nparams 1
	  param inout name "method" type class_ref 3438476 // ConcreteMethod
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance. This class is not publicly instantiable; use
{@link #identifyBlocks}.

@param method {@code non-null;} method to convert"
      end

      operation 14815372 "visitInvalid"
	public explicit_return_type "void"
	nparams 3
	  param in name "opcode" explicit_type "int"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Note: These methods are defined implementation of the interface
BytecodeArray.Visitor; since the class isn't publicly
instantiable, no external code ever gets a chance to actually
call these methods.

 {@inheritDoc} "
      end

      operation 14815500 "visitNoArgs"
	public explicit_return_type "void"
	nparams 4
	  param in name "opcode" explicit_type "int"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	  param inout name "type" type class_ref 3437324 // Type
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14815628 "visitLocal"
	public explicit_return_type "void"
	nparams 6
	  param in name "opcode" explicit_type "int"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	  param in name "idx" explicit_type "int"
	  param inout name "type" type class_ref 3437324 // Type
	  param in name "value" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14815756 "visitConstant"
	public explicit_return_type "void"
	nparams 5
	  param in name "opcode" explicit_type "int"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	  param inout name "cst" type class_ref 3431692 // Constant
	  param in name "value" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14815884 "visitBranch"
	public explicit_return_type "void"
	nparams 4
	  param in name "opcode" explicit_type "int"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	  param in name "target" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14816012 "visitSwitch"
	public explicit_return_type "void"
	nparams 5
	  param in name "opcode" explicit_type "int"
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	  param inout name "cases" type class_ref 3437452 // SwitchList
	  param in name "padding" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14816140 "visitNewarray"
	public explicit_return_type "void"
	nparams 4
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	  param inout name "type" type class_ref 3432844 // CstType
	  param inout name "intVals" explicit_type "ArrayList<Constant>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14816268 "getBlockList"
	private return_type class_ref 3438732 // ByteBlockList
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Extracts the list of basic blocks from the bit sets.

@return {@code non-null;} the list of basic blocks"
      end

      operation 14816396 "doit"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Does basic block identification."
      end

      operation 14816524 "addWorkIfNecessary"
	private explicit_return_type "void"
	nparams 2
	  param in name "offset" explicit_type "int"
	  param inout name "blockStart" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets a bit in the work set, but only if the instruction in question
isn't yet known to be possibly-live.

@param offset offset to the instruction in question
@param blockStart {@code true} iff this instruction starts a
basic block"
      end

      operation 14816652 "visitCommon"
	private explicit_return_type "void"
	nparams 3
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	  param inout name "nextIsLive" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Helper method used by all the visitor methods.

@param offset offset to the instruction
@param length length of the instruction, in bytes
@param nextIsLive {@code true} iff the instruction after
the indicated one is possibly-live (because this one isn't an
unconditional branch, a return, or a switch)"
      end

      operation 14816780 "visitThrowing"
	private explicit_return_type "void"
	nparams 3
	  param in name "offset" explicit_type "int"
	  param in name "length" explicit_type "int"
	  param inout name "nextIsLive" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Helper method used by all the visitor methods that deal with
opcodes that possibly throw. This method should be called after calling
{@link #visitCommon}.

@param offset offset to the instruction
@param length length of the instruction, in bytes
@param nextIsLive {@code true} iff the instruction after
the indicated one is possibly-live (because this one isn't an
unconditional throw)"
      end

      operation 14816908 "setPreviousOffset"
	public explicit_return_type "void"
	nparams 1
	  param in name "offset" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}"
      end

      operation 14817036 "getPreviousOffset"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}"
      end
    end

    class 3438476 "ConcreteMethod"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Container for all the giblets that make up a concrete Java bytecode method.
It implements {@link Method}, so it provides all the original access
(by delegation), but it also constructs and keeps useful versions of
stuff extracted from the method's {@code Code} attribute."
      classrelation 6590348 // <realization>
	relation 6590220 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6590348 // <realization>
	  b parent class_ref 3439500 // Method
      end

      classrelation 6590476 // method (<unidirectional association>)
	relation 6590348 --->
	  a role_name "method" const_relation private
	    comment " {@code non-null;} method being wrapped 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6590476 // method (<unidirectional association>)
	  b parent class_ref 3439500 // Method
      end

      classrelation 6590604 // sourceFile (<unidirectional association>)
	relation 6590476 --->
	  a role_name "sourceFile" const_relation private
	    comment "
{@code null-ok;} the class's {@code SourceFile} attribute value,
if any

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6590604 // sourceFile (<unidirectional association>)
	  b parent class_ref 3435532 // CstString
      end

      attribute 12524172 "accSuper"
	const_attribute private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "whether the class that this method is part of is defined with
{@code ACC_SUPER}
"
      end

      classrelation 6590732 // attCode (<unidirectional association>)
	relation 6590604 --->
	  a role_name "attCode" const_relation private
	    comment " {@code non-null;} the code attribute 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6590732 // attCode (<unidirectional association>)
	  b parent class_ref 3431820 // AttCode
      end

      classrelation 6590860 // lineNumbers (<unidirectional association>)
	relation 6590732 --->
	  a role_name "lineNumbers" const_relation private
	    comment " {@code non-null;} line number list 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6590860 // lineNumbers (<unidirectional association>)
	  b parent class_ref 3433740 // LineNumberList
      end

      classrelation 6590988 // localVariables (<unidirectional association>)
	relation 6590860 --->
	  a role_name "localVariables" const_relation private
	    comment " {@code non-null;} local variable list 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6590988 // localVariables (<unidirectional association>)
	  b parent class_ref 3434124 // LocalVariableList
      end

      operation 14823180 "ConcreteMethod"
	public explicit_return_type ""
	nparams 4
	  param inout name "method" type class_ref 3439500 // Method
	  param inout name "cf" type class_ref 3439756 // ClassFile
	  param inout name "keepLines" explicit_type "boolean"
	  param inout name "keepLocals" explicit_type "boolean"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance.

@param method {@code non-null;} the method to be based on
@param cf {@code non-null;} the class file that contains this method
@param keepLines whether to keep the line number information
(if any)
@param keepLocals whether to keep the local variable
information (if any)"
      end

      operation 14823308 "ConcreteMethod"
	public explicit_return_type ""
	nparams 5
	  param inout name "method" type class_ref 3439500 // Method
	  param in name "accessFlags" explicit_type "int"
	  param inout name "sourceFile" type class_ref 3435532 // CstString
	  param inout name "keepLines" explicit_type "boolean"
	  param inout name "keepLocals" explicit_type "boolean"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 14823436 "getNat"
	public return_type class_ref 3432972 // CstNat
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14823564 "getName"
	public return_type class_ref 3435532 // CstString
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14823692 "getDescriptor"
	public return_type class_ref 3435532 // CstString
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14823820 "getAccessFlags"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14823948 "getAttributes"
	public return_type class_ref 3432204 // AttributeList
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14824076 "getDefiningClass"
	public return_type class_ref 3432844 // CstType
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14824204 "getEffectiveDescriptor"
	public return_type class_ref 3437068 // Prototype
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14824332 "getAccSuper"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets whether the class that this method is part of is defined with
{@code ACC_SUPER}.

@return the {@code ACC_SUPER} value"
      end

      operation 14824460 "getMaxStack"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the maximum stack size.

@return {@code >= 0;} the maximum stack size"
      end

      operation 14824588 "getMaxLocals"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the number of locals.

@return {@code >= 0;} the number of locals"
      end

      operation 14824716 "getCode"
	public return_type class_ref 3431948 // BytecodeArray
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the bytecode array.

@return {@code non-null;} the bytecode array"
      end

      operation 14824844 "getCatches"
	public return_type class_ref 3432076 // ByteCatchList
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the exception table.

@return {@code non-null;} the exception table"
      end

      operation 14824972 "getLineNumbers"
	public return_type class_ref 3433740 // LineNumberList
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the line number list.

@return {@code non-null;} the line number list"
      end

      operation 14825100 "getLocalVariables"
	public return_type class_ref 3434124 // LocalVariableList
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the local variable list.

@return {@code non-null;} the local variable list"
      end

      operation 14825228 "makeSourcePosistion"
	public return_type class_ref 3439884 // SourcePosition
	nparams 1
	  param in name "offset" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@link SourcePosition} instance corresponding to the
given bytecode offset.

@param offset {@code >= 0;} the bytecode offset
@return {@code non-null;} an appropriate instance"
      end
    end

    class 3438732 "ByteBlockList"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "List of {@link ByteBlock} instances."
      classrelation 6589452 // <generalisation>
	relation 6589324 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6589452 // <generalisation>
	  b parent class_ref 3439116 // LabeledList
      end

      operation 14819468 "ByteBlockList"
	public explicit_return_type ""
	nparams 1
	  param in name "size" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance.

@param size {@code >= 0;} the number of elements to be in the list"
      end

      operation 14819596 "get"
	public return_type class_ref 3438860 // ByteBlock
	nparams 1
	  param in name "n" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the indicated element. It is an error to call this with the
index for an element which was never set; if you do that, this
will throw {@code NullPointerException}.

@param n {@code >= 0, < size();} which element
@return {@code non-null;} the indicated element"
      end

      operation 14819724 "labelToBlock"
	public return_type class_ref 3438860 // ByteBlock
	nparams 1
	  param in name "label" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the block with the given label.

@param label the label to look for
@return {@code non-null;} the block with the given label"
      end

      operation 14819852 "set"
	public explicit_return_type "void"
	nparams 2
	  param in name "n" explicit_type "int"
	  param inout name "bb" type class_ref 3438860 // ByteBlock
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the element at the given index.

@param n {@code >= 0, < size();} which element
@param bb {@code null-ok;} the value to store"
      end
    end

    class 3438860 "ByteBlock"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Representation of a basic block in a bytecode array."
      classrelation 6588812 // <realization>
	relation 6588684 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6588812 // <realization>
	  b parent class_ref 3438988 // LabeledItem
      end

      attribute 12492684 "label"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " {@code >= 0;} label for this block "
      end

      attribute 12492812 "start"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " {@code >= 0;} bytecode offset (inclusive) of the start of the block "
      end

      attribute 12492940 "end"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " {@code > start;} bytecode offset (exclusive) of the end of the block "
      end

      classrelation 6588940 // successors (<unidirectional association>)
	relation 6588812 --->
	  a role_name "successors" const_relation private
	    comment " {@code non-null;} list of successors that this block may branch to 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6588940 // successors (<unidirectional association>)
	  b parent class_ref 3438604 // IntList
      end

      classrelation 6589068 // catches (<unidirectional association>)
	relation 6588940 --->
	  a role_name "catches" const_relation private
	    comment " {@code non-null;} list of exceptions caught and their handler targets 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6589068 // catches (<unidirectional association>)
	  b parent class_ref 3432076 // ByteCatchList
      end

      operation 14817292 "ByteBlock"
	public explicit_return_type ""
	nparams 5
	  param in name "label" explicit_type "int"
	  param in name "start" explicit_type "int"
	  param in name "end" explicit_type "int"
	  param inout name "successors" type class_ref 3438604 // IntList
	  param inout name "catches" type class_ref 3432076 // ByteCatchList
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance.

@param label {@code >= 0;} target label for this block
@param start {@code >= 0;} bytecode offset (inclusive) of the start
of the block
@param end {@code > start;} bytecode offset (exclusive) of the end
of the block
@param successors {@code non-null;} list of successors that this block may
branch to
@param catches {@code non-null;} list of exceptions caught and their
handler targets"
      end

      operation 14817420 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14817548 "getLabel"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the label of this block.

@return {@code >= 0;} the label"
      end

      operation 14817676 "getStart"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the bytecode offset (inclusive) of the start of this block.

@return {@code >= 0;} the start offset"
      end

      operation 14817804 "getEnd"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the bytecode offset (exclusive) of the end of this block.

@return {@code > getStart();} the end offset"
      end

      operation 14817932 "getSuccessors"
	public return_type class_ref 3438604 // IntList
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the list of successors that this block may branch to
non-exceptionally.

@return {@code non-null;} the successor list"
      end

      operation 14818060 "getCatches"
	public return_type class_ref 3432076 // ByteCatchList
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the list of exceptions caught and their handler targets.

@return {@code non-null;} the catch list"
      end
    end

    class 3439372 "ByteOps"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Constants and utility methods for dealing with bytecode arrays at an
opcode level."
      attribute 12493452 "NOP"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " one constant per opcode"
      end

      attribute 12493580 "ACONST_NULL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x01"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12493708 "ICONST_M1"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x02"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12493836 "ICONST_0"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x03"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12493964 "ICONST_1"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x04"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12494092 "ICONST_2"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x05"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12494220 "ICONST_3"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x06"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12494348 "ICONST_4"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x07"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12494476 "ICONST_5"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x08"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12494604 "LCONST_0"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x09"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12494732 "LCONST_1"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0a"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12494860 "FCONST_0"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0b"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12494988 "FCONST_1"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0c"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12495116 "FCONST_2"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0d"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12495244 "DCONST_0"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0e"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12495372 "DCONST_1"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0f"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12495500 "BIPUSH"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x10"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12495628 "SIPUSH"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x11"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12495756 "LDC"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x12"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12495884 "LDC_W"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x13"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12496012 "LDC2_W"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x14"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12496140 "ILOAD"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x15"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12496268 "LLOAD"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x16"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12496396 "FLOAD"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x17"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12496524 "DLOAD"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x18"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12496652 "ALOAD"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x19"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12496780 "ILOAD_0"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x1a"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12496908 "ILOAD_1"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x1b"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12497036 "ILOAD_2"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x1c"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12497164 "ILOAD_3"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x1d"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12497292 "LLOAD_0"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x1e"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12497420 "LLOAD_1"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x1f"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12497548 "LLOAD_2"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x20"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12497676 "LLOAD_3"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x21"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12497804 "FLOAD_0"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x22"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12497932 "FLOAD_1"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x23"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12498060 "FLOAD_2"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x24"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12498188 "FLOAD_3"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x25"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12498316 "DLOAD_0"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x26"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12498444 "DLOAD_1"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x27"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12498572 "DLOAD_2"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x28"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12498700 "DLOAD_3"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x29"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12498828 "ALOAD_0"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x2a"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12498956 "ALOAD_1"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x2b"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12499084 "ALOAD_2"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x2c"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12499212 "ALOAD_3"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x2d"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12499340 "IALOAD"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x2e"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12499468 "LALOAD"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x2f"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12499596 "FALOAD"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x30"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12499724 "DALOAD"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x31"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12499852 "AALOAD"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x32"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12499980 "BALOAD"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x33"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12500108 "CALOAD"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x34"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12500236 "SALOAD"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x35"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12500364 "ISTORE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x36"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12500492 "LSTORE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x37"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12500620 "FSTORE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x38"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12500748 "DSTORE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x39"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12500876 "ASTORE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x3a"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12501004 "ISTORE_0"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x3b"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12501132 "ISTORE_1"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x3c"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12501260 "ISTORE_2"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x3d"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12501388 "ISTORE_3"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x3e"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12501516 "LSTORE_0"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x3f"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12501644 "LSTORE_1"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x40"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12501772 "LSTORE_2"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x41"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12501900 "LSTORE_3"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x42"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12502028 "FSTORE_0"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x43"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12502156 "FSTORE_1"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x44"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12502284 "FSTORE_2"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x45"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12502412 "FSTORE_3"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x46"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12502540 "DSTORE_0"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x47"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12502668 "DSTORE_1"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x48"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12502796 "DSTORE_2"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x49"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12502924 "DSTORE_3"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x4a"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12503052 "ASTORE_0"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x4b"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12503180 "ASTORE_1"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x4c"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12503308 "ASTORE_2"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x4d"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12503436 "ASTORE_3"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x4e"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12503564 "IASTORE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x4f"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12503692 "LASTORE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x50"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12503820 "FASTORE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x51"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12503948 "DASTORE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x52"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12504076 "AASTORE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x53"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12504204 "BASTORE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x54"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12504332 "CASTORE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x55"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12504460 "SASTORE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x56"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12504588 "POP"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x57"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12504716 "POP2"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x58"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12504844 "DUP"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x59"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12504972 "DUP_X1"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x5a"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12505100 "DUP_X2"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x5b"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12505228 "DUP2"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x5c"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12505356 "DUP2_X1"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x5d"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12505484 "DUP2_X2"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x5e"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12505612 "SWAP"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x5f"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12505740 "IADD"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x60"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12505868 "LADD"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x61"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12505996 "FADD"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x62"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12506124 "DADD"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x63"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12506252 "ISUB"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x64"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12506380 "LSUB"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x65"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12506508 "FSUB"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x66"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12506636 "DSUB"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x67"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12506764 "IMUL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x68"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12506892 "LMUL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x69"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12507020 "FMUL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x6a"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12507148 "DMUL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x6b"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12507276 "IDIV"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x6c"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12507404 "LDIV"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x6d"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12507532 "FDIV"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x6e"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12507660 "DDIV"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x6f"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12507788 "IREM"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x70"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12507916 "LREM"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x71"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12508044 "FREM"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x72"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12508172 "DREM"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x73"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12508300 "INEG"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x74"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12508428 "LNEG"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x75"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12508556 "FNEG"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x76"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12508684 "DNEG"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x77"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12508812 "ISHL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x78"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12508940 "LSHL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x79"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12509068 "ISHR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x7a"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12509196 "LSHR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x7b"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12509324 "IUSHR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x7c"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12509452 "LUSHR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x7d"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12509580 "IAND"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x7e"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12509708 "LAND"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x7f"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12509836 "IOR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x80"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12509964 "LOR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x81"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12510092 "IXOR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x82"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12510220 "LXOR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x83"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12510348 "IINC"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x84"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12510476 "I2L"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x85"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12510604 "I2F"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x86"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12510732 "I2D"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x87"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12510860 "L2I"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x88"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12510988 "L2F"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x89"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12511116 "L2D"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x8a"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12511244 "F2I"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x8b"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12511372 "F2L"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x8c"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12511500 "F2D"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x8d"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12511628 "D2I"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x8e"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12511756 "D2L"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x8f"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12511884 "D2F"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x90"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12512012 "I2B"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x91"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12512140 "I2C"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x92"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12512268 "I2S"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x93"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12512396 "LCMP"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x94"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12512524 "FCMPL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x95"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12512652 "FCMPG"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x96"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12512780 "DCMPL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x97"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12512908 "DCMPG"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x98"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12513036 "IFEQ"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x99"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12513164 "IFNE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x9a"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12513292 "IFLT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x9b"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12513420 "IFGE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x9c"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12513548 "IFGT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x9d"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12513676 "IFLE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x9e"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12513804 "IF_ICMPEQ"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x9f"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12513932 "IF_ICMPNE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xa0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12514060 "IF_ICMPLT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xa1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12514188 "IF_ICMPGE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xa2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12514316 "IF_ICMPGT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xa3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12514444 "IF_ICMPLE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xa4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12514572 "IF_ACMPEQ"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xa5"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12514700 "IF_ACMPNE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xa6"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12514828 "GOTO"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xa7"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12514956 "JSR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xa8"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12515084 "RET"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xa9"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12515212 "TABLESWITCH"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xaa"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12515340 "LOOKUPSWITCH"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xab"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12515468 "IRETURN"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xac"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12515596 "LRETURN"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xad"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12515724 "FRETURN"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xae"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12515852 "DRETURN"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xaf"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12515980 "ARETURN"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xb0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12516108 "RETURN"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xb1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12516236 "GETSTATIC"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xb2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12516364 "PUTSTATIC"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xb3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12516492 "GETFIELD"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xb4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12516620 "PUTFIELD"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xb5"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12516748 "INVOKEVIRTUAL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xb6"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12516876 "INVOKESPECIAL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xb7"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12517004 "INVOKESTATIC"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xb8"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12517132 "INVOKEINTERFACE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xb9"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12517260 "NEW"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xbb"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12517388 "NEWARRAY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xbc"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12517516 "ANEWARRAY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xbd"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12517644 "ARRAYLENGTH"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xbe"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12517772 "ATHROW"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xbf"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12517900 "CHECKCAST"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xc0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12518028 "INSTANCEOF"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xc1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12518156 "MONITORENTER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xc2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12518284 "MONITOREXIT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xc3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12518412 "WIDE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xc4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12518540 "MULTIANEWARRAY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xc5"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12518668 "IFNULL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xc6"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12518796 "IFNONNULL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xc7"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12518924 "GOTO_W"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xc8"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12519052 "JSR_W"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xc9"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12519180 "NEWARRAY_BOOLEAN"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " a constant for each valid argument to \"newarray\""
      end

      attribute 12519308 "NEWARRAY_CHAR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 5"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12519436 "NEWARRAY_FLOAT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 6"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12519564 "NEWARRAY_DOUBLE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 7"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12519692 "NEWARRAY_BYTE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 8"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12519820 "NEWARRAY_SHORT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 9"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12519948 "NEWARRAY_INT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 10"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12520076 "NEWARRAY_LONG"
	class_attribute const_attribute public explicit_type "int"
	init_value " 11"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 12520204 "FMT_INVALID"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " a constant for each possible instruction format
 invalid "
      end

      attribute 12520332 "FMT_NO_ARGS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " \"-\": {@code op} "
      end

      attribute 12520460 "FMT_NO_ARGS_LOCALS_1"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " \"0\": {@code op}; implies {@code max_locals >= 1} "
      end

      attribute 12520588 "FMT_NO_ARGS_LOCALS_2"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " \"1\": {@code op}; implies {@code max_locals >= 2} "
      end

      attribute 12520716 "FMT_NO_ARGS_LOCALS_3"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " \"2\": {@code op}; implies {@code max_locals >= 3} "
      end

      attribute 12520844 "FMT_NO_ARGS_LOCALS_4"
	class_attribute const_attribute public explicit_type "int"
	init_value " 5"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " \"3\": {@code op}; implies {@code max_locals >= 4} "
      end

      attribute 12520972 "FMT_NO_ARGS_LOCALS_5"
	class_attribute const_attribute public explicit_type "int"
	init_value " 6"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " \"4\": {@code op}; implies {@code max_locals >= 5} "
      end

      attribute 12521100 "FMT_BRANCH"
	class_attribute const_attribute public explicit_type "int"
	init_value " 7"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " \"b\": {@code op target target} "
      end

      attribute 12521228 "FMT_WIDE_BRANCH"
	class_attribute const_attribute public explicit_type "int"
	init_value " 8"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " \"c\": {@code op target target target target} "
      end

      attribute 12521356 "FMT_CPI"
	class_attribute const_attribute public explicit_type "int"
	init_value " 9"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " \"p\": {@code op #cpi #cpi}; constant restricted as specified "
      end

      attribute 12521484 "FMT_LOCAL_1"
	class_attribute const_attribute public explicit_type "int"
	init_value " 10"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "\"l\": {@code op local}; category-1 local; implies
{@code max_locals} is at least two more than the given
local number
"
      end

      attribute 12521612 "FMT_LOCAL_2"
	class_attribute const_attribute public explicit_type "int"
	init_value " 11"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "\"m\": {@code op local}; category-2 local; implies
{@code max_locals} is at least two more than the given
local number
"
      end

      attribute 12521740 "FMT_LITERAL_BYTE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 12"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "\"y\": {@code op #byte} ({@code bipush} and
{@code newarray})
"
      end

      attribute 12521868 "FMT_INVOKEINTERFACE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 13"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " \"I\": {@code invokeinterface cpi cpi count 0} "
      end

      attribute 12521996 "FMT_LDC"
	class_attribute const_attribute public explicit_type "int"
	init_value " 14"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " \"L\": {@code ldc #cpi}; constant restricted as specified "
      end

      attribute 12522124 "FMT_SIPUSH"
	class_attribute const_attribute public explicit_type "int"
	init_value " 15"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " \"S\": {@code sipush #byte #byte} "
      end

      attribute 12522252 "FMT_TABLESWITCH"
	class_attribute const_attribute public explicit_type "int"
	init_value " 16"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " \"T\": {@code tableswitch ...} "
      end

      attribute 12522380 "FMT_LOOKUPSWITCH"
	class_attribute const_attribute public explicit_type "int"
	init_value " 17"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " \"U\": {@code lookupswitch ...} "
      end

      attribute 12522508 "FMT_MULTIANEWARRAY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 18"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " \"M\": {@code multianewarray cpi cpi dims} "
      end

      attribute 12522636 "FMT_WIDE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 19"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " \"W\": {@code wide ...} "
      end

      attribute 12522764 "FMT_MASK"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x1f"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " mask for the bits representing the opcode format "
      end

      attribute 12522892 "CPOK_Integer"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x20"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " \"I\": flag bit for valid cp type for {@code Integer} "
      end

      attribute 12523020 "CPOK_Float"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x40"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " \"F\": flag bit for valid cp type for {@code Float} "
      end

      attribute 12523148 "CPOK_Long"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x80"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " \"J\": flag bit for valid cp type for {@code Long} "
      end

      attribute 12523276 "CPOK_Double"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x100"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " \"D\": flag bit for valid cp type for {@code Double} "
      end

      attribute 12523404 "CPOK_Class"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x200"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " \"c\": flag bit for valid cp type for {@code Class} "
      end

      attribute 12523532 "CPOK_String"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x400"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " \"s\": flag bit for valid cp type for {@code String} "
      end

      attribute 12523660 "CPOK_Fieldref"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x800"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " \"f\": flag bit for valid cp type for {@code Fieldref} "
      end

      attribute 12523788 "CPOK_Methodref"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x1000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " \"m\": flag bit for valid cp type for {@code Methodref} "
      end

      attribute 12523916 "CPOK_InterfaceMethodref"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x2000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " \"i\": flag bit for valid cp type for {@code InterfaceMethodref} "
      end

      attribute 12524044 "OPCODE_INFO"
	class_attribute const_attribute private explicit_type "int"
	multiplicity "[]"
	init_value " new int[256]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "{@code non-null;} map from opcodes to format or'ed with allowed constant
pool types
"
      end

      classrelation 6589964 // OPCODE_NAMES (<unidirectional association>)
	relation 6589836 --->
	  a role_name "OPCODE_NAMES" multiplicity "[]" init_value " new String[256]" class_relation const_relation private
	    comment " {@code non-null;} map from opcodes to their names 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 6589964 // OPCODE_NAMES (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 6590092 // OPCODE_DETAILS (<unidirectional association>)
	relation 6589964 --->
	  a role_name "OPCODE_DETAILS" init_value "
        \"00 - nop;\" +
        \"01 - aconst_null;\" +
        \"02 - iconst_m1;\" +
        \"03 - iconst_0;\" +
        \"04 - iconst_1;\" +
        \"05 - iconst_2;\" +
        \"06 - iconst_3;\" +
        \"07 - iconst_4;\" +
        \"08 - iconst_5;\" +
        \"09 - lconst_0;\" +
        \"0a - lconst_1;\" +
        \"0b - fconst_0;\" +
        \"0c - fconst_1;\" +
        \"0d - fconst_2;\" +
        \"0e - dconst_0;\" +
        \"0f - dconst_1;\" +
        \"10 y bipush;\" +
        \"11 S sipush;\" +
        \"12 L:IFcs ldc;\" +
        \"13 p:IFcs ldc_w;\" +
        \"14 p:DJ ldc2_w;\" +
        \"15 l iload;\" +
        \"16 m lload;\" +
        \"17 l fload;\" +
        \"18 m dload;\" +
        \"19 l aload;\" +
        \"1a 0 iload_0;\" +
        \"1b 1 iload_1;\" +
        \"1c 2 iload_2;\" +
        \"1d 3 iload_3;\" +
        \"1e 1 lload_0;\" +
        \"1f 2 lload_1;\" +
        \"20 3 lload_2;\" +
        \"21 4 lload_3;\" +
        \"22 0 fload_0;\" +
        \"23 1 fload_1;\" +
        \"24 2 fload_2;\" +
        \"25 3 fload_3;\" +
        \"26 1 dload_0;\" +
        \"27 2 dload_1;\" +
        \"28 3 dload_2;\" +
        \"29 4 dload_3;\" +
        \"2a 0 aload_0;\" +
        \"2b 1 aload_1;\" +
        \"2c 2 aload_2;\" +
        \"2d 3 aload_3;\" +
        \"2e - iaload;\" +
        \"2f - laload;\" +
        \"30 - faload;\" +
        \"31 - daload;\" +
        \"32 - aaload;\" +
        \"33 - baload;\" +
        \"34 - caload;\" +
        \"35 - saload;\" +
        \"36 - istore;\" +
        \"37 - lstore;\" +
        \"38 - fstore;\" +
        \"39 - dstore;\" +
        \"3a - astore;\" +
        \"3b 0 istore_0;\" +
        \"3c 1 istore_1;\" +
        \"3d 2 istore_2;\" +
        \"3e 3 istore_3;\" +
        \"3f 1 lstore_0;\" +
        \"40 2 lstore_1;\" +
        \"41 3 lstore_2;\" +
        \"42 4 lstore_3;\" +
        \"43 0 fstore_0;\" +
        \"44 1 fstore_1;\" +
        \"45 2 fstore_2;\" +
        \"46 3 fstore_3;\" +
        \"47 1 dstore_0;\" +
        \"48 2 dstore_1;\" +
        \"49 3 dstore_2;\" +
        \"4a 4 dstore_3;\" +
        \"4b 0 astore_0;\" +
        \"4c 1 astore_1;\" +
        \"4d 2 astore_2;\" +
        \"4e 3 astore_3;\" +
        \"4f - iastore;\" +
        \"50 - lastore;\" +
        \"51 - fastore;\" +
        \"52 - dastore;\" +
        \"53 - aastore;\" +
        \"54 - bastore;\" +
        \"55 - castore;\" +
        \"56 - sastore;\" +
        \"57 - pop;\" +
        \"58 - pop2;\" +
        \"59 - dup;\" +
        \"5a - dup_x1;\" +
        \"5b - dup_x2;\" +
        \"5c - dup2;\" +
        \"5d - dup2_x1;\" +
        \"5e - dup2_x2;\" +
        \"5f - swap;\" +
        \"60 - iadd;\" +
        \"61 - ladd;\" +
        \"62 - fadd;\" +
        \"63 - dadd;\" +
        \"64 - isub;\" +
        \"65 - lsub;\" +
        \"66 - fsub;\" +
        \"67 - dsub;\" +
        \"68 - imul;\" +
        \"69 - lmul;\" +
        \"6a - fmul;\" +
        \"6b - dmul;\" +
        \"6c - idiv;\" +
        \"6d - ldiv;\" +
        \"6e - fdiv;\" +
        \"6f - ddiv;\" +
        \"70 - irem;\" +
        \"71 - lrem;\" +
        \"72 - frem;\" +
        \"73 - drem;\" +
        \"74 - ineg;\" +
        \"75 - lneg;\" +
        \"76 - fneg;\" +
        \"77 - dneg;\" +
        \"78 - ishl;\" +
        \"79 - lshl;\" +
        \"7a - ishr;\" +
        \"7b - lshr;\" +
        \"7c - iushr;\" +
        \"7d - lushr;\" +
        \"7e - iand;\" +
        \"7f - land;\" +
        \"80 - ior;\" +
        \"81 - lor;\" +
        \"82 - ixor;\" +
        \"83 - lxor;\" +
        \"84 l iinc;\" +
        \"85 - i2l;\" +
        \"86 - i2f;\" +
        \"87 - i2d;\" +
        \"88 - l2i;\" +
        \"89 - l2f;\" +
        \"8a - l2d;\" +
        \"8b - f2i;\" +
        \"8c - f2l;\" +
        \"8d - f2d;\" +
        \"8e - d2i;\" +
        \"8f - d2l;\" +
        \"90 - d2f;\" +
        \"91 - i2b;\" +
        \"92 - i2c;\" +
        \"93 - i2s;\" +
        \"94 - lcmp;\" +
        \"95 - fcmpl;\" +
        \"96 - fcmpg;\" +
        \"97 - dcmpl;\" +
        \"98 - dcmpg;\" +
        \"99 b ifeq;\" +
        \"9a b ifne;\" +
        \"9b b iflt;\" +
        \"9c b ifge;\" +
        \"9d b ifgt;\" +
        \"9e b ifle;\" +
        \"9f b if_icmpeq;\" +
        \"a0 b if_icmpne;\" +
        \"a1 b if_icmplt;\" +
        \"a2 b if_icmpge;\" +
        \"a3 b if_icmpgt;\" +
        \"a4 b if_icmple;\" +
        \"a5 b if_acmpeq;\" +
        \"a6 b if_acmpne;\" +
        \"a7 b goto;\" +
        \"a8 b jsr;\" +
        \"a9 l ret;\" +
        \"aa T tableswitch;\" +
        \"ab U lookupswitch;\" +
        \"ac - ireturn;\" +
        \"ad - lreturn;\" +
        \"ae - freturn;\" +
        \"af - dreturn;\" +
        \"b0 - areturn;\" +
        \"b1 - return;\" +
        \"b2 p:f getstatic;\" +
        \"b3 p:f putstatic;\" +
        \"b4 p:f getfield;\" +
        \"b5 p:f putfield;\" +
        \"b6 p:m invokevirtual;\" +
        \"b7 p:m invokespecial;\" +
        \"b8 p:m invokestatic;\" +
        \"b9 I:i invokeinterface;\" +
        \"bb p:c new;\" +
        \"bc y newarray;\" +
        \"bd p:c anewarray;\" +
        \"be - arraylength;\" +
        \"bf - athrow;\" +
        \"c0 p:c checkcast;\" +
        \"c1 p:c instanceof;\" +
        \"c2 - monitorenter;\" +
        \"c3 - monitorexit;\" +
        \"c4 W wide;\" +
        \"c5 M:c multianewarray;\" +
        \"c6 b ifnull;\" +
        \"c7 b ifnonnull;\" +
        \"c8 c goto_w;\" +
        \"c9 c jsr_w;\"" class_relation const_relation private
	    comment " {@code non-null;} bigass string describing all the opcodes 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6590092 // OPCODE_DETAILS (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      extra_member 215180 "initialization"
	
	cpp "" ""
	java "  static {
        // Set up OPCODE_INFO and OPCODE_NAMES.
        String s = OPCODE_DETAILS;
        int len = s.length();

        for (int i = 0; i < len; /*i*/) {
            int idx = (Character.digit(s.charAt(i), 16) << 4) |
                Character.digit(s.charAt(i + 1), 16);
            int info;
            switch (s.charAt(i + 3)) {
                case '-': info = FMT_NO_ARGS; break;
                case '0': info = FMT_NO_ARGS_LOCALS_1; break;
                case '1': info = FMT_NO_ARGS_LOCALS_2; break;
                case '2': info = FMT_NO_ARGS_LOCALS_3; break;
                case '3': info = FMT_NO_ARGS_LOCALS_4; break;
                case '4': info = FMT_NO_ARGS_LOCALS_5; break;
                case 'b': info = FMT_BRANCH; break;
                case 'c': info = FMT_WIDE_BRANCH; break;
                case 'p': info = FMT_CPI; break;
                case 'l': info = FMT_LOCAL_1; break;
                case 'm': info = FMT_LOCAL_2; break;
                case 'y': info = FMT_LITERAL_BYTE; break;
                case 'I': info = FMT_INVOKEINTERFACE; break;
                case 'L': info = FMT_LDC; break;
                case 'S': info = FMT_SIPUSH; break;
                case 'T': info = FMT_TABLESWITCH; break;
                case 'U': info = FMT_LOOKUPSWITCH; break;
                case 'M': info = FMT_MULTIANEWARRAY; break;
                case 'W': info = FMT_WIDE; break;
                default: info = FMT_INVALID; break;
            }

            i += 5;
            if (s.charAt(i - 1) == ':') {
                inner:
                for (;;) {
                    switch (s.charAt(i)) {
                        case 'I': info |= CPOK_Integer; break;
                        case 'F': info |= CPOK_Float; break;
                        case 'J': info |= CPOK_Long; break;
                        case 'D': info |= CPOK_Double; break;
                        case 'c': info |= CPOK_Class; break;
                        case 's': info |= CPOK_String; break;
                        case 'f': info |= CPOK_Fieldref; break;
                        case 'm': info |= CPOK_Methodref; break;
                        case 'i': info |= CPOK_InterfaceMethodref; break;
                        default: break inner;
                    }
                    i++;
                }
                i++;
            }

            int endAt = s.indexOf(';', i);
            OPCODE_INFO[idx] = info;
            OPCODE_NAMES[idx] = s.substring(i, endAt);
            i = endAt + 1;
        }
    }"
	php ""
	python ""
	idl ""
      end

      operation 14821900 "ByteOps"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This class is uninstantiable."
      end

      operation 14822028 "opName"
	class_operation public return_type class_ref 3399692 // String
	nparams 1
	  param in name "opcode" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the name of the given opcode.

@param opcode {@code >= 0, <= 255;} the opcode
@return {@code non-null;} its name"
      end

      operation 14822156 "opInfo"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "opcode" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the format and allowed cp types of the given opcode.

@param opcode {@code >= 0, <= 255;} the opcode
@return its format and allowed cp types"
      end
    end

    class 3440012 "ExecutionStack"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Representation of a Java method execution stack.

<p><b>Note:</b> For the most part, the documentation for this class
ignores the distinction between {@link Type} and {@link
TypeBearer}.</p>"
      classrelation 6591116 // <generalisation>
	relation 6590988 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6591116 // <generalisation>
	  b parent class_ref 3436044 // MutabilityControl
      end

      classrelation 6591244 // stack (<unidirectional association>)
	relation 6591116 --->
	  a role_name "stack" multiplicity "[]" const_relation private
	    comment " {@code non-null;} array of stack contents 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 6591244 // stack (<unidirectional association>)
	  b parent class_ref 3437708 // TypeBearer
      end

      attribute 12524300 "local"
	const_attribute private explicit_type "boolean"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "{@code non-null;} array specifying whether stack contents have entries
in the local variable table
"
      end

      attribute 12524428 "stackPtr"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "{@code >= 0;} stack pointer (points one past the end) / current stack
size
"
      end

      operation 14825356 "ExecutionStack"
	public explicit_return_type ""
	nparams 1
	  param in name "maxStack" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance.

@param maxStack {@code >= 0;} the maximum size of the stack for this
instance"
      end

      operation 14825484 "copy"
	public return_type class_ref 3440012 // ExecutionStack
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Makes and returns a mutable copy of this instance.

@return {@code non-null;} the copy"
      end

      operation 14825612 "annotate"
	public explicit_return_type "void"
	nparams 1
	  param inout name "ex" type class_ref 3440140 // ExceptionWithContext
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Annotates (adds context to) the given exception with information
about this instance.

@param ex {@code non-null;} the exception to annotate"
      end

      operation 14825740 "makeInitialized"
	public explicit_return_type "void"
	nparams 1
	  param inout name "type" type class_ref 3437324 // Type
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Replaces all the occurrences of the given uninitialized type in
this stack with its initialized equivalent.

@param type {@code non-null;} type to replace"
      end

      operation 14825868 "getMaxStack"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the maximum stack size for this instance.

@return {@code >= 0;} the max stack size"
      end

      operation 14825996 "size"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the current stack size.

@return {@code >= 0, < getMaxStack();} the current stack size"
      end

      operation 14826124 "clear"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Clears the stack. (That is, this method pops everything off.)"
      end

      operation 14826252 "push"
	public explicit_return_type "void"
	nparams 1
	  param inout name "type" type class_ref 3437708 // TypeBearer
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pushes a value of the given type onto the stack.

@param type {@code non-null;} type of the value
@throws SimException thrown if there is insufficient room on the
stack for the value"
      end

      operation 14826380 "setLocal"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Flags the next value pushed onto the stack as having local info."
      end

      operation 14826508 "peek"
	public return_type class_ref 3437708 // TypeBearer
	nparams 1
	  param in name "n" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Peeks at the {@code n}th element down from the top of the stack.
{@code n == 0} means to peek at the top of the stack. Note that
this will return {@code null} if the indicated element is the
deeper half of a category-2 value.

@param n {@code >= 0;} which element to peek at
@return {@code null-ok;} the type of value stored at that element
@throws SimException thrown if {@code n >= size()}"
      end

      operation 14826636 "peekLocal"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "n" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Peeks at the {@code n}th element down from the top of the
stack, returning whether or not it has local info.

@param n {@code >= 0;} which element to peek at
@return {@code true} if the value has local info, {@code false} otherwise
@throws SimException thrown if {@code n >= size()}"
      end

      operation 14826764 "peekType"
	public return_type class_ref 3437324 // Type
	nparams 1
	  param in name "n" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Peeks at the {@code n}th element down from the top of the
stack, returning the type per se, as opposed to the
<i>type-bearer</i>.  This method is just a convenient shorthand
for {@code peek(n).getType()}.

@see #peek"
      end

      operation 14826892 "pop"
	public return_type class_ref 3437708 // TypeBearer
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Pops the top element off of the stack.

@return {@code non-null;} the type formerly on the top of the stack
@throws SimException thrown if the stack is empty"
      end

      operation 14827020 "change"
	public explicit_return_type "void"
	nparams 2
	  param in name "n" explicit_type "int"
	  param inout name "type" type class_ref 3437708 // TypeBearer
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Changes an element already on a stack. This method is useful in limited
contexts, particularly when merging two instances. As such, it places
the following restriction on its behavior: You may only replace
values with other values of the same category.

@param n {@code >= 0;} which element to change, where {@code 0} is
the top element of the stack
@param type {@code non-null;} type of the new value
@throws SimException thrown if {@code n >= size()} or
the action is otherwise prohibited"
      end

      operation 14827148 "merge"
	public return_type class_ref 3440012 // ExecutionStack
	nparams 1
	  param inout name "other" type class_ref 3440012 // ExecutionStack
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Merges this stack with another stack. A new instance is returned if
this merge results in a change. If no change results, this instance is
returned.  See {@link Merger#mergeStack(ExecutionStack,ExecutionStack)
Merger.mergeStack()}

@param other {@code non-null;} a stack to merge with
@return {@code non-null;} the result of the merge"
      end

      operation 14827276 "stackElementString"
	class_operation private return_type class_ref 3399692 // String
	nparams 1
	  param inout name "type" type class_ref 3437708 // TypeBearer
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the string form for a stack element. This is the same as
{@code toString()} except that {@code null} is converted
to {@code \"<invalid>\"}.

@param type {@code null-ok;} the stack element
@return {@code non-null;} the string form"
      end

      operation 14827404 "throwSimException"
	class_operation private return_type class_ref 3437708 // TypeBearer
	nparams 1
	  param inout name "msg" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Throws a properly-formatted exception.

@param msg {@code non-null;} useful message
@return never (keeps compiler happy)"
      end
    end

    class 3440268 "LocalsArray"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Representation of an array of local variables, with Java semantics.

<p><b>Note:</b> For the most part, the documentation for this class
ignores the distinction between {@link Type} and {@link
TypeBearer}.</p>"
      classrelation 6592012 // <generalisation>
	relation 6591884 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6592012 // <generalisation>
	  b parent class_ref 3436044 // MutabilityControl
      end

      classrelation 6592140 // <realization>
	relation 6592012 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6592140 // <realization>
	  b parent class_ref 3436172 // ToHuman
      end

      operation 14830988 "LocalsArray"
	protected explicit_return_type ""
	nparams 1
	  param inout name "mutable" explicit_type "boolean"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance, explicitly indicating the mutability.

@param mutable {@code true} if this instance is mutable"
      end

      operation 14831116 "copy"
	abstract public return_type class_ref 3440268 // LocalsArray
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Makes and returns a mutable copy of this instance.

@return {@code non-null;} the copy"
      end

      operation 14831244 "annotate"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "ex" type class_ref 3440140 // ExceptionWithContext
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Annotates (adds context to) the given exception with information
about this instance.

@param ex {@code non-null;} the exception to annotate"
      end

      operation 14831372 "makeInitialized"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "type" type class_ref 3437324 // Type
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Replaces all the occurrences of the given uninitialized type in
this array with its initialized equivalent.

@param type {@code non-null;} type to replace"
      end

      operation 14831500 "getMaxLocals"
	abstract public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the maximum number of locals this instance can refer to.

@return the max locals"
      end

      operation 14831628 "set"
	abstract public explicit_return_type "void"
	nparams 2
	  param in name "idx" explicit_type "int"
	  param inout name "type" type class_ref 3437708 // TypeBearer
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the type stored at the given local index. If the given type
is category-2, then (a) the index must be at least two less than
{@link #getMaxLocals} and (b) the next index gets invalidated
by the operation. In case of either category, if the <i>previous</i>
local contains a category-2 value, then it too is invalidated by
this operation.

@param idx {@code >= 0, < getMaxLocals();} which local
@param type {@code non-null;} new type for the local at {@code idx}"
      end

      operation 14831756 "set"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "spec" type class_ref 3437836 // RegisterSpec
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the type for the local indicated by the given register spec
to that register spec (which includes type and optional name
information). This is identical to calling
{@code set(spec.getReg(), spec)}.

@param spec {@code non-null;} register spec to use as the basis for the update"
      end

      operation 14831884 "invalidate"
	abstract public explicit_return_type "void"
	nparams 1
	  param in name "idx" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Invalidates the local at the given index.

@param idx {@code >= 0, < getMaxLocals();} which local"
      end

      operation 14832012 "getOrNull"
	abstract public return_type class_ref 3437708 // TypeBearer
	nparams 1
	  param in name "idx" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the type stored at the given local index, or {@code null}
if the given local is uninitialized / invalid.

@param idx {@code >= 0, < getMaxLocals();} which local
@return {@code null-ok;} the type of value stored in that local"
      end

      operation 14832140 "get"
	abstract public return_type class_ref 3437708 // TypeBearer
	nparams 1
	  param in name "idx" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the type stored at the given local index, only succeeding if
the given local contains a valid type (though it is allowed to
be an uninitialized instance).

@param idx {@code >= 0, < getMaxLocals();} which local
@return {@code non-null;} the type of value stored in that local
@throws SimException thrown if {@code idx} is valid, but
the contents are invalid"
      end

      operation 14832268 "getCategory1"
	abstract public return_type class_ref 3437708 // TypeBearer
	nparams 1
	  param in name "idx" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the type stored at the given local index, which is expected
to be an initialized category-1 value.

@param idx {@code >= 0, < getMaxLocals();} which local
@return {@code non-null;} the type of value stored in that local
@throws SimException thrown if {@code idx} is valid, but
one of the following holds: (a) the local is invalid; (b) the local
contains an uninitialized instance; (c) the local contains a
category-2 value"
      end

      operation 14832396 "getCategory2"
	abstract public return_type class_ref 3437708 // TypeBearer
	nparams 1
	  param in name "idx" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the type stored at the given local index, which is expected
to be a category-2 value.

@param idx {@code >= 0, < getMaxLocals();} which local
@return {@code non-null;} the type of value stored in that local
@throws SimException thrown if {@code idx} is valid, but
one of the following holds: (a) the local is invalid; (b) the local
contains a category-1 value"
      end

      operation 14832524 "merge"
	abstract public return_type class_ref 3440268 // LocalsArray
	nparams 1
	  param inout name "other" type class_ref 3440268 // LocalsArray
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Merges this instance with {@code other}. If the merged result is
the same as this instance, then this is returned (not a copy).

@param other {@code non-null;} another LocalsArray
@return {@code non-null;} the merge result, a new instance or this"
      end

      operation 14832652 "mergeWithSubroutineCaller"
	abstract public return_type class_ref 3440652 // LocalsArraySet
	nparams 2
	  param inout name "other" type class_ref 3440268 // LocalsArray
	  param in name "predLabel" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Merges this instance with a {@code LocalsSet} from a subroutine
caller. To be used when merging in the first block of a subroutine.

@param other {@code other non-null;} another LocalsArray. The final locals
state of a subroutine caller.
@param predLabel the label of the subroutine caller block.
@return {@code non-null;} the merge result, a new instance or this"
      end

      operation 14832780 "getPrimary"
	abstract protected return_type class_ref 3440780 // OneLocalsArray
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the locals set appropriate for the current execution context.
That is, if this is a {@code OneLocalsArray} instance, then return
{@code this}, otherwise return {@code LocalsArraySet}'s
primary.

@return locals for this execution context."
      end
    end

    class 3440652 "LocalsArraySet"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Representation of a set of local variable arrays, with Java semantics.
This peculiar case is to support in-method subroutines, which can
have different locals sets for each caller.

<p><b>Note:</b> For the most part, the documentation for this class
ignores the distinction between {@link com.android.dx.rop.type.Type} and {@link
com.android.dx.rop.type.TypeBearer}.</p>"
      classrelation 6592268 // <generalisation>
	relation 6592140 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6592268 // <generalisation>
	  b parent class_ref 3440268 // LocalsArray
      end

      classrelation 6592396 // primary (<unidirectional association>)
	relation 6592268 --->
	  a role_name "primary" const_relation private
	    comment "
The primary LocalsArray represents the locals as seen from
the subroutine itself, which is the merged representation of all the
individual locals states.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6592396 // primary (<unidirectional association>)
	  b parent class_ref 3440780 // OneLocalsArray
      end

      classrelation 6592524 // secondaries (<unidirectional association>)
	relation 6592396 --->
	  stereotype "ArrayList"
	  a role_name "secondaries" const_relation private
	    comment "Indexed by label of caller block: the locals specific to each caller's
invocation of the subroutine.
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 6592524 // secondaries (<unidirectional association>)
	  b parent class_ref 3440268 // LocalsArray
      end

      operation 14832908 "LocalsArraySet"
	public explicit_return_type ""
	nparams 1
	  param in name "maxLocals" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance. The locals array initially consists of
all-uninitialized values (represented as {@code null}s).

@param maxLocals {@code >= 0;} the maximum number of locals this instance
can refer to"
      end

      operation 14833036 "LocalsArraySet"
	public explicit_return_type ""
	nparams 2
	  param inout name "primary" type class_ref 3440780 // OneLocalsArray
	  param inout name "secondaries" explicit_type "ArrayList<LocalsArray>"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance with the specified primary and secondaries set.

@param primary {@code non-null;} primary locals to use
@param secondaries {@code non-null;} secondaries set, indexed by subroutine
caller label."
      end

      operation 14833164 "LocalsArraySet"
	private explicit_return_type ""
	nparams 1
	  param inout name "toCopy" type class_ref 3440652 // LocalsArraySet
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance which is a copy of another.

@param toCopy {@code non-null;} instance to copy."
      end

      operation 14833292 "setImmutable"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " @inheritDoc "
      end

      operation 14833420 "copy"
	public return_type class_ref 3440268 // LocalsArray
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " @inheritDoc "
      end

      operation 14833548 "annotate"
	public explicit_return_type "void"
	nparams 1
	  param inout name "ex" type class_ref 3440140 // ExceptionWithContext
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " @inheritDoc "
      end

      operation 14833676 "toHuman"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc"
      end

      operation 14833804 "makeInitialized"
	public explicit_return_type "void"
	nparams 1
	  param inout name "type" type class_ref 3437324 // Type
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " @inheritDoc "
      end

      operation 14833932 "getMaxLocals"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " @inheritDoc "
      end

      operation 14834060 "set"
	public explicit_return_type "void"
	nparams 2
	  param in name "idx" explicit_type "int"
	  param inout name "type" type class_ref 3437708 // TypeBearer
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " @inheritDoc "
      end

      operation 14834188 "set"
	public explicit_return_type "void"
	nparams 1
	  param inout name "spec" type class_ref 3437836 // RegisterSpec
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " @inheritDoc "
      end

      operation 14834316 "invalidate"
	public explicit_return_type "void"
	nparams 1
	  param in name "idx" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " @inheritDoc "
      end

      operation 14834444 "getOrNull"
	public return_type class_ref 3437708 // TypeBearer
	nparams 1
	  param in name "idx" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " @inheritDoc "
      end

      operation 14834572 "get"
	public return_type class_ref 3437708 // TypeBearer
	nparams 1
	  param in name "idx" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " @inheritDoc "
      end

      operation 14834700 "getCategory1"
	public return_type class_ref 3437708 // TypeBearer
	nparams 1
	  param in name "idx" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " @inheritDoc "
      end

      operation 14834828 "getCategory2"
	public return_type class_ref 3437708 // TypeBearer
	nparams 1
	  param in name "idx" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " @inheritDoc "
      end

      operation 14834956 "mergeWithSet"
	private return_type class_ref 3440652 // LocalsArraySet
	nparams 1
	  param inout name "other" type class_ref 3440652 // LocalsArraySet
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Merges this set with another {@code LocalsArraySet} instance.

@param other {@code non-null;} to merge
@return {@code non-null;} this instance if merge was a no-op, or
new merged instance."
      end

      operation 14835084 "mergeWithOne"
	private return_type class_ref 3440652 // LocalsArraySet
	nparams 1
	  param inout name "other" type class_ref 3440780 // OneLocalsArray
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Merges this set with a {@code OneLocalsArray} instance.

@param other {@code non-null;} to merge
@return {@code non-null;} this instance if merge was a no-op, or
new merged instance."
      end

      operation 14835212 "merge"
	public return_type class_ref 3440652 // LocalsArraySet
	nparams 1
	  param inout name "other" type class_ref 3440268 // LocalsArray
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " @inheritDoc "
      end

      operation 14835340 "getSecondaryForLabel"
	private return_type class_ref 3440268 // LocalsArray
	nparams 1
	  param in name "label" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the {@code LocalsArray} instance for a specified subroutine
caller label, or null if label has no locals associated with it.

@param label {@code >= 0;} subroutine caller label
@return {@code null-ok;} locals if available."
      end

      operation 14835468 "mergeWithSubroutineCaller"
	public return_type class_ref 3440652 // LocalsArraySet
	nparams 2
	  param inout name "other" type class_ref 3440268 // LocalsArray
	  param in name "predLabel" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14835596 "subArrayForLabel"
	public return_type class_ref 3440268 // LocalsArray
	nparams 1
	  param in name "subLabel" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a LocalsArray instance representing the locals state that should
be used when returning to a subroutine caller.

@param subLabel {@code >= 0;} A calling label of a subroutine
@return {@code null-ok;} an instance for this subroutine, or null if subroutine
is not in this set."
      end

      operation 14835724 "getPrimary"
	protected return_type class_ref 3440780 // OneLocalsArray
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "{@inheritDoc}"
      end
    end

    class 3440780 "OneLocalsArray"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Representation of an array of local variables, with Java semantics.

<p><b>Note:</b> For the most part, the documentation for this class
ignores the distinction between {@link com.android.dx.rop.type.Type} and {@link
com.android.dx.rop.type.TypeBearer}.</p>"
      classrelation 6593292 // <generalisation>
	relation 6593164 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6593292 // <generalisation>
	  b parent class_ref 3440268 // LocalsArray
      end

      classrelation 6593420 // locals (<unidirectional association>)
	relation 6593292 --->
	  a role_name "locals" multiplicity "[]" const_relation private
	    comment " {@code non-null;} actual array 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 6593420 // locals (<unidirectional association>)
	  b parent class_ref 3437708 // TypeBearer
      end

      operation 14838924 "OneLocalsArray"
	public explicit_return_type ""
	nparams 1
	  param in name "maxLocals" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance. The locals array initially consists of
all-uninitialized values (represented as {@code null}s).

@param maxLocals {@code >= 0;} the maximum number of locals this instance
can refer to"
      end

      operation 14839052 "copy"
	public return_type class_ref 3440780 // OneLocalsArray
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @inheritDoc "
      end

      operation 14839180 "annotate"
	public explicit_return_type "void"
	nparams 1
	  param inout name "ex" type class_ref 3440140 // ExceptionWithContext
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @inheritDoc "
      end

      operation 14839308 "toHuman"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc"
      end

      operation 14839436 "makeInitialized"
	public explicit_return_type "void"
	nparams 1
	  param inout name "type" type class_ref 3437324 // Type
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @inheritDoc "
      end

      operation 14839564 "getMaxLocals"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @inheritDoc "
      end

      operation 14839692 "set"
	public explicit_return_type "void"
	nparams 2
	  param in name "idx" explicit_type "int"
	  param inout name "type" type class_ref 3437708 // TypeBearer
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @inheritDoc "
      end

      operation 14839820 "set"
	public explicit_return_type "void"
	nparams 1
	  param inout name "spec" type class_ref 3437836 // RegisterSpec
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @inheritDoc "
      end

      operation 14839948 "invalidate"
	public explicit_return_type "void"
	nparams 1
	  param in name "idx" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @inheritDoc "
      end

      operation 14840076 "getOrNull"
	public return_type class_ref 3437708 // TypeBearer
	nparams 1
	  param in name "idx" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @inheritDoc "
      end

      operation 14840204 "get"
	public return_type class_ref 3437708 // TypeBearer
	nparams 1
	  param in name "idx" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @inheritDoc "
      end

      operation 14840332 "getCategory1"
	public return_type class_ref 3437708 // TypeBearer
	nparams 1
	  param in name "idx" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @inheritDoc "
      end

      operation 14840460 "getCategory2"
	public return_type class_ref 3437708 // TypeBearer
	nparams 1
	  param in name "idx" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @inheritDoc "
      end

      operation 14840588 "merge"
	public return_type class_ref 3440268 // LocalsArray
	nparams 1
	  param inout name "other" type class_ref 3440268 // LocalsArray
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " @inheritDoc "
      end

      operation 14840716 "merge"
	public return_type class_ref 3440780 // OneLocalsArray
	nparams 1
	  param inout name "other" type class_ref 3440780 // OneLocalsArray
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Merges this OneLocalsArray instance with another OneLocalsArray
instance. A more-refined version of {@link #merge(LocalsArray) merge}
which is called by that method when appropriate.

@param other locals array with which to merge
@return this instance if merge was a no-op, or a new instance if
the merge resulted in a change."
      end

      operation 14840844 "mergeWithSubroutineCaller"
	public return_type class_ref 3440652 // LocalsArraySet
	nparams 2
	  param inout name "other" type class_ref 3440268 // LocalsArray
	  param in name "predLabel" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " @inheritDoc "
      end

      operation 14840972 "getPrimary"
	protected return_type class_ref 3440780 // OneLocalsArray
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "{@inheritDoc}"
      end

      operation 14841100 "throwSimException"
	class_operation private return_type class_ref 3437708 // TypeBearer
	nparams 2
	  param in name "idx" explicit_type "int"
	  param inout name "msg" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Throws a properly-formatted exception.

@param idx the salient local index
@param msg {@code non-null;} useful message
@return never (keeps compiler happy)"
      end
    end

    class 3441036 "Merger"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Utility methods to merge various frame information."
      operation 14838284 "Merger"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This class is uninstantiable."
      end

      operation 14838412 "mergeLocals"
	class_operation public return_type class_ref 3440780 // OneLocalsArray
	nparams 2
	  param inout name "locals1" type class_ref 3440780 // OneLocalsArray
	  param inout name "locals2" type class_ref 3440780 // OneLocalsArray
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Merges two locals arrays. If the merged result is the same as the first
argument, then return the first argument (not a copy).

@param locals1 {@code non-null;} a locals array
@param locals2 {@code non-null;} another locals array
@return {@code non-null;} the result of merging the two locals arrays"
      end

      operation 14838540 "mergeStack"
	class_operation public return_type class_ref 3440012 // ExecutionStack
	nparams 2
	  param inout name "stack1" type class_ref 3440012 // ExecutionStack
	  param inout name "stack2" type class_ref 3440012 // ExecutionStack
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Merges two stacks. If the merged result is the same as the first
argument, then return the first argument (not a copy).

@param stack1 {@code non-null;} a stack
@param stack2 {@code non-null;} another stack
@return {@code non-null;} the result of merging the two stacks"
      end

      operation 14838668 "mergeType"
	class_operation public return_type class_ref 3437708 // TypeBearer
	nparams 2
	  param inout name "ft1" type class_ref 3437708 // TypeBearer
	  param inout name "ft2" type class_ref 3437708 // TypeBearer
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Merges two frame types.

@param ft1 {@code non-null;} a frame type
@param ft2 {@code non-null;} another frame type
@return {@code non-null;} the result of merging the two types"
      end

      operation 14838796 "isPossiblyAssignableFrom"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "supertypeBearer" type class_ref 3437708 // TypeBearer
	  param inout name "subtypeBearer" type class_ref 3437708 // TypeBearer
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the given supertype is possibly assignable from
the given subtype. This takes into account primitiveness,
int-likeness, known-nullness, and array dimensions, but does
not assume anything about class hierarchy other than that the
type {@code Object} is the supertype of all reference
types and all arrays are assignable to
{@code Serializable} and {@code Cloneable}.

@param supertypeBearer {@code non-null;} the supertype
@param subtypeBearer {@code non-null;} the subtype"
      end
    end

    class 3441164 "ReturnAddress"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Representation of a subroutine return address. In Java verification,
somewhat counterintuitively, the salient bit of information you need to
know about a return address is the <i>start address</i> of the subroutine
being returned from, not the address being returned <i>to</i>, so that's
what instances of this class hang onto."
      classrelation 6593676 // <realization>
	relation 6593548 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6593676 // <realization>
	  b parent class_ref 3437708 // TypeBearer
      end

      attribute 12525196 "subroutineAddress"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " {@code >= 0;} the start address of the subroutine being returned from "
      end

      operation 14841868 "ReturnAddress"
	public explicit_return_type ""
	nparams 1
	  param in name "subroutineAddress" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance.

@param subroutineAddress {@code >= 0;} the start address of the
subroutine being returned from"
      end

      operation 14841996 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14842124 "toHuman"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14842252 "getType"
	public return_type class_ref 3437324 // Type
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14842380 "getFrameType"
	public return_type class_ref 3437708 // TypeBearer
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14842508 "getBasicType"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14842636 "getBasicFrameType"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14842764 "isConstant"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14842892 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "other" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14843020 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14843148 "getSubroutineAddress"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the subroutine address.

@return {@code >= 0;} the subroutine address"
      end
    end

    class 3441292 "Ropper"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Utility that converts a basic block list into a list of register-oriented
blocks."
      attribute 12525324 "PARAM_ASSIGNMENT"
	class_attribute const_attribute private explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " label offset for the parameter assignment block "
      end

      attribute 12525452 "RETURN"
	class_attribute const_attribute private explicit_type "int"
	init_value " -2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " label offset for the return block "
      end

      attribute 12525580 "SYNCH_RETURN"
	class_attribute const_attribute private explicit_type "int"
	init_value " -3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " label offset for the synchronized method final return block "
      end

      attribute 12525708 "SYNCH_SETUP_1"
	class_attribute const_attribute private explicit_type "int"
	init_value " -4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " label offset for the first synchronized method setup block "
      end

      attribute 12525836 "SYNCH_SETUP_2"
	class_attribute const_attribute private explicit_type "int"
	init_value " -5"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " label offset for the second synchronized method setup block "
      end

      attribute 12525964 "SYNCH_CATCH_1"
	class_attribute const_attribute private explicit_type "int"
	init_value " -6"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "label offset for the first synchronized method exception
handler block
"
      end

      attribute 12526092 "SYNCH_CATCH_2"
	class_attribute const_attribute private explicit_type "int"
	init_value " -7"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "label offset for the second synchronized method exception
handler block
"
      end

      attribute 12526220 "SPECIAL_LABEL_COUNT"
	class_attribute const_attribute private explicit_type "int"
	init_value " 7"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " number of special label offsets "
      end

      classrelation 6593804 // method (<unidirectional association>)
	relation 6593676 --->
	  a role_name "method" const_relation private
	    comment " {@code non-null;} method being converted 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6593804 // method (<unidirectional association>)
	  b parent class_ref 3438476 // ConcreteMethod
      end

      classrelation 6593932 // blocks (<unidirectional association>)
	relation 6593804 --->
	  a role_name "blocks" const_relation private
	    comment " {@code non-null;} original block list 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6593932 // blocks (<unidirectional association>)
	  b parent class_ref 3438732 // ByteBlockList
      end

      attribute 12526348 "maxLocals"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " max locals of the method "
      end

      attribute 12526476 "maxLabel"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " max label (exclusive) of any original bytecode block "
      end

      classrelation 6594060 // machine (<unidirectional association>)
	relation 6593932 --->
	  a role_name "machine" const_relation private
	    comment " {@code non-null;} simulation machine to use 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6594060 // machine (<unidirectional association>)
	  b parent class_ref 3441420 // RopperMachine
      end

      classrelation 6594188 // sim (<unidirectional association>)
	relation 6594060 --->
	  a role_name "sim" const_relation private
	    comment " {@code non-null;} simulator to use 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6594188 // sim (<unidirectional association>)
	  b parent class_ref 3441548 // Simulator
      end

      classrelation 6594316 // startFrames (<unidirectional association>)
	relation 6594188 --->
	  a role_name "startFrames" multiplicity "[]" const_relation private
	    comment "
{@code non-null;} sparse array mapping block labels to initial frame
contents, if known

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 6594316 // startFrames (<unidirectional association>)
	  b parent class_ref 3437196 // Frame
      end

      classrelation 6594444 // result (<unidirectional association>)
	relation 6594316 --->
	  stereotype "ArrayList"
	  a role_name "result" const_relation private
	    comment " {@code non-null;} output block list in-progress "
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 6594444 // result (<unidirectional association>)
	  b parent class_ref 3441676 // BasicBlock
      end

      classrelation 6594572 // resultSubroutines (<unidirectional association>)
	relation 6594444 --->
	  stereotype "ArrayList"
	  a role_name "resultSubroutines" const_relation private
	    comment "{@code non-null;} list of subroutine-nest labels
(See {@link Frame#getSubroutines} associated with each result block.
Parallel to {@link Ropper#result}.
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 6594572 // resultSubroutines (<unidirectional association>)
	  b parent class_ref 3438604 // IntList
      end

      classrelation 6594700 // catchTypes (<unidirectional association>)
	relation 6594572 --->
	  a role_name "catchTypes" multiplicity "[]" const_relation private
	    comment "
{@code non-null;} for each block (by label) that is used as an exception
handler, the type of exception it catches

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 6594700 // catchTypes (<unidirectional association>)
	  b parent class_ref 3437324 // Type
      end

      attribute 12526604 "synchNeedsExceptionHandler"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "whether an exception-handler block for a synchronized method was
ever required
"
      end

      class 3441804 "Subroutine"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 12526860 "callerBlocks"
	  private explicit_type "BitSet"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " list of all blocks that jsr to this subroutine "
	end

	attribute 12526988 "retBlocks"
	  private explicit_type "BitSet"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " List of all blocks that return from this subroutine "
	end

	attribute 12527116 "startBlock"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " first block in this subroutine "
	end

	operation 14843276 "Subroutine"
	  package explicit_return_type ""
	  nparams 1
	    param in name "startBlock" explicit_type "int"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Constructs instance.

@param startBlock First block of the subroutine."
	end

	operation 14843404 "Subroutine"
	  package explicit_return_type ""
	  nparams 2
	    param in name "startBlock" explicit_type "int"
	    param in name "retBlock" explicit_type "int"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Constructs instance.

@param startBlock First block of the subroutine.
@param retBlock one of the ret blocks (final blocks) of this
subroutine."
	end

	operation 14843532 "getStartBlock"
	  package explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "@return {@code >= 0;} the label of the subroutine's start block."
	end

	operation 14843660 "addRetBlock"
	  package explicit_return_type "void"
	  nparams 1
	    param in name "retBlock" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Adds a label to the list of ret blocks (final blocks) for this
subroutine.

@param retBlock ret block label"
	end

	operation 14843788 "addCallerBlock"
	  package explicit_return_type "void"
	  nparams 1
	    param in name "label" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Adds a label to the list of caller blocks for this subroutine.

@param label a block that invokes this subroutine."
	end

	operation 14843916 "getSuccessors"
	  package return_type class_ref 3438604 // IntList
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Generates a list of subroutine successors. Note: successor blocks
could be listed more than once. This is ok, because this successor
list (and the block it's associated with) will be copied and inlined
before we leave the ropper. Redundent successors will result in
redundent (no-op) merges.

@return all currently known successors
(return destinations) for that subroutine"
	end

	operation 14844044 "mergeToSuccessors"
	  package explicit_return_type "void"
	  nparams 2
	    param inout name "frame" type class_ref 3437196 // Frame
	    param inout name "workSet" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Merges the specified frame into this subroutine's successors,
setting {@code workSet} as appropriate. To be called with
the frame of a subroutine ret block.

@param frame {@code non-null;} frame from ret block to merge
@param workSet {@code non-null;} workset to update"
	end
      end

      classrelation 6594828 // subroutines (<unidirectional association>)
	relation 6594700 --->
	  a role_name "subroutines" multiplicity "[]" const_relation private
	    comment "
{@code non-null;} list of subroutines indexed by label of start
address 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 6594828 // subroutines (<unidirectional association>)
	  b parent class_ref 3441804 // Subroutine
      end

      attribute 12526732 "hasSubroutines"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " true if {@code subroutines} is non-empty "
      end

      operation 14844172 "convert"
	class_operation public return_type class_ref 3441932 // RopMethod
	nparams 2
	  param inout name "method" type class_ref 3438476 // ConcreteMethod
	  param inout name "advice" type class_ref 3442060 // TranslationAdvice
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts a {@link ConcreteMethod} to a {@link RopMethod}.

@param method {@code non-null;} method to convert
@param advice {@code non-null;} translation advice to use
@return {@code non-null;} the converted instance"
      end

      operation 14844300 "Ropper"
	private explicit_return_type ""
	nparams 2
	  param inout name "method" type class_ref 3438476 // ConcreteMethod
	  param inout name "advice" type class_ref 3442060 // TranslationAdvice
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance. This class is not publicly instantiable; use
{@link #convert}.

@param method {@code non-null;} method to convert
@param advice {@code non-null;} translation advice to use"
      end

      operation 14844428 "getFirstTempStackReg"
	package explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the first (lowest) register number to use as the temporary
area when unwinding stack manipulation ops.

@return {@code >= 0;} the first register to use

package"
      end

      operation 14844556 "getExceptionSetupLabel"
	private explicit_return_type "int"
	nparams 1
	  param in name "label" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the label for the exception handler setup block corresponding
to the given label.

@param label {@code >= 0;} the original label
@return {@code >= 0;} the corresponding exception handler setup label"
      end

      operation 14844684 "getSpecialLabel"
	private explicit_return_type "int"
	nparams 1
	  param in name "label" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the label for the given special-purpose block. The given label
should be one of the static constants defined by this class.

@param label {@code < 0;} the special label constant
@return {@code >= 0;} the actual label value to use"
      end

      operation 14844812 "getMinimumUnreservedLabel"
	private explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the minimum label for unreserved use.

@return {@code >= 0;} the minimum label"
      end

      operation 14844940 "getAvailableLabel"
	private explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets an arbitrary unreserved and available label.

@return {@code >= 0;} the label"
      end

      operation 14845068 "isSynchronized"
	private explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets whether the method being translated is synchronized.

@return whether the method being translated is synchronized"
      end

      operation 14845196 "isStatic"
	private explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets whether the method being translated is static.

@return whether the method being translated is static"
      end

      operation 14845324 "getNormalRegCount"
	private explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the total number of registers used for \"normal\" purposes (i.e.,
for the straightforward translation from the original Java).

@return {@code >= 0;} the total number of registers used"
      end

      operation 14845452 "getSynchReg"
	private return_type class_ref 3437836 // RegisterSpec
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the register spec to use to hold the object to synchronize on,
for a synchronized method.

@return {@code non-null;} the register spec"
      end

      operation 14845580 "labelToResultIndex"
	private explicit_return_type "int"
	nparams 1
	  param in name "label" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Searches {@link #result} for a block with the given label. Returns its
index if found, or returns {@code -1} if there is no such block.

@param label the label to look for
@return {@code >= -1;} the index for the block with the given label or
{@code -1} if there is no such block"
      end

      operation 14845708 "labelToBlock"
	private return_type class_ref 3441676 // BasicBlock
	nparams 1
	  param in name "label" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Searches {@link #result} for a block with the given label. Returns it if
found, or throws an exception if there is no such block.

@param label the label to look for
@return {@code non-null;} the block with the given label"
      end

      operation 14845836 "addBlock"
	private explicit_return_type "void"
	nparams 2
	  param inout name "block" type class_ref 3441676 // BasicBlock
	  param inout name "subroutines" type class_ref 3438604 // IntList
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a block to the output result.

@param block {@code non-null;} the block to add
@param subroutines {@code non-null;} subroutine label list
as described in {@link Frame#getSubroutines}"
      end

      operation 14845964 "addOrReplaceBlock"
	private explicit_return_type "boolean"
	nparams 2
	  param inout name "block" type class_ref 3441676 // BasicBlock
	  param inout name "subroutines" type class_ref 3438604 // IntList
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds or replace a block in the output result. If this is a
replacement, then any extra blocks that got added with the
original get removed as a result of calling this method.

@param block {@code non-null;} the block to add or replace
@param subroutines {@code non-null;} subroutine label list
as described in {@link Frame#getSubroutines}
@return {@code true} if the block was replaced or
{@code false} if it was added for the first time"
      end

      operation 14846092 "addOrReplaceBlockNoDelete"
	private explicit_return_type "boolean"
	nparams 2
	  param inout name "block" type class_ref 3441676 // BasicBlock
	  param inout name "subroutines" type class_ref 3438604 // IntList
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds or replaces a block in the output result. Do not delete
any successors.

@param block {@code non-null;} the block to add or replace
@param subroutines {@code non-null;} subroutine label list
as described in {@link Frame#getSubroutines}
@return {@code true} if the block was replaced or
{@code false} if it was added for the first time"
      end

      operation 14846220 "removeBlockAndSpecialSuccessors"
	private explicit_return_type "void"
	nparams 1
	  param in name "idx" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Helper for {@link #addOrReplaceBlock} which recursively removes
the given block and all blocks that are (direct and indirect)
successors of it whose labels indicate that they are not in the
normally-translated range.

@param idx {@code non-null;} block to remove (etc.)"
      end

      operation 14846348 "getRopMethod"
	private return_type class_ref 3441932 // RopMethod
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Extracts the resulting {@link RopMethod} from the instance.

@return {@code non-null;} the method object"
      end

      operation 14846476 "doit"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Does the conversion."
      end

      operation 14846604 "setFirstFrame"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets up the first frame to contain all the incoming parameters in
locals."
      end

      operation 14846732 "processBlock"
	private explicit_return_type "void"
	nparams 3
	  param inout name "block" type class_ref 3438860 // ByteBlock
	  param inout name "frame" type class_ref 3437196 // Frame
	  param inout name "workSet" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Processes the given block.

@param block {@code non-null;} block to process
@param frame {@code non-null;} start frame for the block
@param workSet {@code non-null;} bits representing work to do,
which this method may add to"
      end

      operation 14846860 "mergeAndWorkAsNecessary"
	private explicit_return_type "void"
	nparams 5
	  param in name "label" explicit_type "int"
	  param in name "pred" explicit_type "int"
	  param inout name "calledSubroutine" type class_ref 3441804 // Subroutine
	  param inout name "frame" type class_ref 3437196 // Frame
	  param inout name "workSet" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4}[] ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Helper for {@link #processBlock}, which merges frames and
adds to the work set, as necessary.

@param label {@code >= 0;} label to work on
@param pred  predecessor label; must be {@code >= 0} when
{@code label} is a subroutine start block and calledSubroutine
is non-null. Otherwise, may be -1.
@param calledSubroutine {@code null-ok;} a Subroutine instance if
{@code label} is the first block in a subroutine.
@param frame {@code non-null;} new frame for the labelled block
@param workSet {@code non-null;} bits representing work to do,
which this method may add to"
      end

      operation 14846988 "addSetupBlocks"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs and adds the blocks that perform setup for the rest of
the method. This includes a first block which merely contains
assignments from parameters to the same-numbered registers and
a possible second block which deals with synchronization."
      end

      operation 14847116 "addReturnBlock"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs and adds the return block, if necessary. The return
block merely contains an appropriate {@code return}
instruction."
      end

      operation 14847244 "addSynchExceptionHandlerBlock"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs and adds, if necessary, the catch-all exception handler
block to deal with unwinding the lock taken on entry to a synchronized
method."
      end

      operation 14847372 "addExceptionSetupBlocks"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates the exception handler setup blocks. \"maxLocals\"
below is because that's the register number corresponding
to the sole element on a one-deep stack (which is the
situation at the start of an exception handler block)."
      end

      operation 14847500 "isSubroutineCaller"
	private explicit_return_type "boolean"
	nparams 1
	  param inout name "bb" type class_ref 3441676 // BasicBlock
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks to see if the basic block is a subroutine caller block.

@param bb {@code non-null;} the basic block in question
@return true if this block calls a subroutine"
      end

      operation 14847628 "inlineSubroutines"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inlines any subroutine calls."
      end

      operation 14847756 "deleteUnreachableBlocks"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Deletes all blocks that cannot be reached. This is run to delete
original subroutine blocks after subroutine inlining."
      end

      class 3442188 "LabelAllocator"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 12527244 "nextAvailableLabel"
	  package explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 14847884 "LabelAllocator"
	  package explicit_return_type ""
	  nparams 1
	    param in name "startLabel" explicit_type "int"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "@param startLabel available label to start allocating from"
	end

	operation 14848012 "getNextLabel"
	  package explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "@return next available label"
	end
      end

      class 3442316 "SubroutineInliner"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 12527372 "origLabelToCopiedLabel"
	  const_attribute private explicit_type "Integer, Integer"
	  stereotype "HashMap"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "maps original label to the label that will be used by the
inlined version
"
	end

	attribute 12527500 "workList"
	  const_attribute private explicit_type "BitSet"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " set of original labels that need to be copied "
	end

	attribute 12527628 "subroutineStart"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " the label of the original start block for this subroutine "
	end

	attribute 12527756 "subroutineSuccessor"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " the label of the ultimate return block "
	end

	classrelation 6594956 // labelAllocator (<unidirectional association>)
	  relation 6594828 --->
	    a role_name "labelAllocator" const_relation private
	      comment " used for generating new labels for copied blocks 
"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 6594956 // labelAllocator (<unidirectional association>)
	    b parent class_ref 3442188 // LabelAllocator
	end

	classrelation 6595084 // labelToSubroutines (<unidirectional association>)
	  relation 6594956 --->
	    stereotype "ArrayList"
	    a role_name "labelToSubroutines" const_relation private
	      comment "A mapping, indexed by label, to subroutine nesting list.
The subroutine nest list is as returned by
{@link Frame#getSubroutines}.
"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	      classrelation_ref 6595084 // labelToSubroutines (<unidirectional association>)
	    b parent class_ref 3438604 // IntList
	end

	operation 14848140 "SubroutineInliner"
	  package explicit_return_type ""
	  nparams 2
	    param in name "labelAllocator" type class_ref 3442188 // LabelAllocator
	    param inout name "labelToSubroutines" explicit_type "ArrayList<IntList>"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}final ${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 14848268 "inlineSubroutineCalledFrom"
	  package explicit_return_type "void"
	  nparams 1
	    param in name "b" type class_ref 3441676 // BasicBlock
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Inlines a subroutine.

@param b block where {@code jsr} occurred in the original bytecode"
	end

	operation 14848396 "copyBlock"
	  private explicit_return_type "void"
	  nparams 2
	    param in name "origLabel" explicit_type "int"
	    param in name "newLabel" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Copies a basic block, mapping its successors along the way.

@param origLabel original block label
@param newLabel label that the new block should have"
	end

	operation 14848524 "involvedInSubroutine"
	  private explicit_return_type "boolean"
	  nparams 2
	    param in name "label" explicit_type "int"
	    param in name "subroutineStart" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Checks to see if a specified label is involved in a specified
subroutine.

@param label {@code >= 0;} a basic block label
@param subroutineStart {@code >= 0;} a subroutine as identified
by the label of its start block
@return true if the block is dominated by the subroutine call"
	end

	operation 14848652 "mapOrAllocateLabel"
	  private explicit_return_type "int"
	  nparams 1
	    param in name "origLabel" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Maps the label of a pre-copied block to the label of the inlined
block, allocating a new label and adding it to the worklist
if necessary.  If the origLabel is a \"special\" label, it
is returned exactly and not scheduled for duplication: copying
never proceeds past a special label, which likely is the function
return block or an immediate predecessor.

@param origLabel label of original, pre-copied block
@return label for new, inlined block"
	end
      end

      operation 14848780 "subroutineFromRetBlock"
	private return_type class_ref 3441804 // Subroutine
	nparams 1
	  param in name "label" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finds a {@code Subroutine} that is returned from by a {@code ret} in
a given block.

@param label A block that originally contained a {@code ret} instruction
@return {@code null-ok;} found subroutine or {@code null} if none
was found"
      end

      operation 14848908 "filterMoveReturnAddressInsns"
	private return_type class_ref 3442444 // InsnList
	nparams 1
	  param inout name "insns" type class_ref 3442444 // InsnList
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all {@code move-return-address} instructions, returning a new
{@code InsnList} if necessary. The {@code move-return-address}
insns are dead code after subroutines have been inlined.

@param insns {@code InsnList} that may contain
{@code move-return-address} insns
@return {@code InsnList} with {@code move-return-address} removed"
      end

      operation 14849036 "forEachNonSubBlockDepthFirst"
	private explicit_return_type "void"
	nparams 2
	  param in name "firstLabel" explicit_type "int"
	  param inout name "v" type class_ref 3442572 // Visitor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Visits each non-subroutine block once in depth-first successor order.

@param firstLabel label of start block
@param v callback interface"
      end

      operation 14849164 "forEachNonSubBlockDepthFirst0"
	private explicit_return_type "void"
	nparams 3
	  param inout name "next" type class_ref 3441676 // BasicBlock
	  param inout name "v" type class_ref 3442572 // Visitor
	  param inout name "visited" explicit_type "BitSet"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Visits each block once in depth-first successor order, ignoring
{@code jsr} targets. Worker for {@link #forEachNonSubBlockDepthFirst}.

@param next next block to visit
@param v callback interface
@param visited set of blocks already visited"
      end
    end

    class 3441420 "RopperMachine"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Machine implementation for use by {@link Ropper}.

package"
      classrelation 6595340 // <generalisation>
	relation 6595212 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6595340 // <generalisation>
	  b parent class_ref 3442700 // ValueAwareMachine
      end

      classrelation 6595468 // ARRAY_REFLECT_TYPE (<unidirectional association>)
	relation 6595340 --->
	  a role_name "ARRAY_REFLECT_TYPE" init_value "
        new CstType(Type.internClassName(\"java/lang/reflect/Array\"))" class_relation const_relation private
	    comment " {@code non-null;} array reflection class 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6595468 // ARRAY_REFLECT_TYPE (<unidirectional association>)
	  b parent class_ref 3432844 // CstType
      end

      classrelation 6595596 // MULTIANEWARRAY_METHOD (<unidirectional association>)
	relation 6595468 --->
	  a role_name "MULTIANEWARRAY_METHOD" init_value "
        new CstMethodRef(ARRAY_REFLECT_TYPE,
                         new CstNat(new CstString(\"newInstance\"),
                                    new CstString(\"(Ljava/lang/Class;[I)\" +
                                                \"Ljava/lang/Object;\")))" class_relation const_relation private
	    comment "
{@code non-null;} method constant for use in converting
{@code multianewarray} instructions

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6595596 // MULTIANEWARRAY_METHOD (<unidirectional association>)
	  b parent class_ref 3442828 // CstMethodRef
      end

      classrelation 6595724 // ropper (<unidirectional association>)
	relation 6595596 --->
	  a role_name "ropper" const_relation private
	    comment " {@code non-null;} {@link Ropper} controlling this instance 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6595724 // ropper (<unidirectional association>)
	  b parent class_ref 3441292 // Ropper
      end

      classrelation 6595852 // method (<unidirectional association>)
	relation 6595724 --->
	  a role_name "method" const_relation private
	    comment " {@code non-null;} method being converted 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6595852 // method (<unidirectional association>)
	  b parent class_ref 3438476 // ConcreteMethod
      end

      classrelation 6595980 // advice (<unidirectional association>)
	relation 6595852 --->
	  a role_name "advice" const_relation private
	    comment " {@code non-null;} translation advice 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6595980 // advice (<unidirectional association>)
	  b parent class_ref 3442060 // TranslationAdvice
      end

      attribute 12527884 "maxLocals"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " max locals of the method "
      end

      classrelation 6596108 // insns (<unidirectional association>)
	relation 6595980 --->
	  stereotype "ArrayList"
	  a role_name "insns" const_relation private
	    comment " {@code non-null;} instructions for the rop basic block in-progress "
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 6596108 // insns (<unidirectional association>)
	  b parent class_ref 3442956 // Insn
      end

      classrelation 6596236 // catches (<unidirectional association>)
	relation 6596108 --->
	  a role_name "catches" private
	    comment " {@code non-null;} catches for the block currently being processed 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6596236 // catches (<unidirectional association>)
	  b parent class_ref 3433228 // TypeList
      end

      attribute 12528012 "catchesUsed"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " whether the catches have been used in an instruction "
      end

      attribute 12528140 "returns"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " whether the block contains a {@code return} "
      end

      attribute 12528268 "primarySuccessorIndex"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " primary successor index "
      end

      attribute 12528396 "extraBlockCount"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " {@code >= 0;} number of extra basic blocks required "
      end

      attribute 12528524 "hasJsr"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " true if last processed block ends with a jsr or jsr_W"
      end

      attribute 12528652 "blockCanThrow"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " true if an exception can be thrown by the last block processed "
      end

      classrelation 6596364 // returnAddress (<unidirectional association>)
	relation 6596236 --->
	  a role_name "returnAddress" private
	    comment "
If non-null, the ReturnAddress that was used by the terminating ret
instruction. If null, there was no ret instruction encountered.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6596364 // returnAddress (<unidirectional association>)
	  b parent class_ref 3441164 // ReturnAddress
      end

      classrelation 6596492 // returnOp (<unidirectional association>)
	relation 6596364 --->
	  a role_name "returnOp" private
	    comment "
{@code null-ok;} the appropriate {@code return} op or {@code null}
if it is not yet known

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6596492 // returnOp (<unidirectional association>)
	  b parent class_ref 3443084 // Rop
      end

      classrelation 6596620 // returnPosition (<unidirectional association>)
	relation 6596492 --->
	  a role_name "returnPosition" private
	    comment "
{@code null-ok;} the source position for the return block or {@code null}
if it is not yet known

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6596620 // returnPosition (<unidirectional association>)
	  b parent class_ref 3439884 // SourcePosition
      end

      operation 14849548 "RopperMachine"
	public explicit_return_type ""
	nparams 3
	  param inout name "ropper" type class_ref 3441292 // Ropper
	  param inout name "method" type class_ref 3438476 // ConcreteMethod
	  param inout name "advice" type class_ref 3442060 // TranslationAdvice
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance.

@param ropper {@code non-null;} ropper controlling this instance
@param method {@code non-null;} method being converted
@param advice {@code non-null;} translation advice to use"
      end

      operation 14849676 "getInsns"
	public return_type class_ref 3442956 // Insn
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}ArrayList<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the instructions array. It is shared and gets modified by
subsequent calls to this instance.

@return {@code non-null;} the instructions array"
      end

      operation 14849804 "getReturnOp"
	public return_type class_ref 3443084 // Rop
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the return opcode encountered, if any.

@return {@code null-ok;} the return opcode"
      end

      operation 14849932 "getReturnPosition"
	public return_type class_ref 3439884 // SourcePosition
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the return position, if known.

@return {@code null-ok;} the return position"
      end

      operation 14850060 "startBlock"
	public explicit_return_type "void"
	nparams 1
	  param inout name "catches" type class_ref 3433228 // TypeList
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets ready to start working on a new block. This will clear the
{@link #insns} list, set {@link #catches}, reset whether it has
been used, reset whether the block contains a
{@code return}, and reset {@link #primarySuccessorIndex}."
      end

      operation 14850188 "wereCatchesUsed"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets whether {@link #catches} was used. This indicates that the
last instruction in the block is one of the ones that can throw.

@return whether {@code catches} has been used"
      end

      operation 14850316 "returns"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets whether the block just processed ended with a
{@code return}.

@return whether the block returns"
      end

      operation 14850444 "getPrimarySuccessorIndex"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the primary successor index. This is the index into the
successors list where the primary may be found or
{@code -1} if there are successors but no primary
successor. This may return something other than
{@code -1} in the case of an instruction with no
successors at all (primary or otherwise).

@return {@code >= -1;} the primary successor index"
      end

      operation 14850572 "getExtraBlockCount"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets how many extra blocks will be needed to represent the
block currently being translated. Each extra block should consist
of one instruction from the end of the original block.

@return {@code >= 0;} the number of extra blocks needed"
      end

      operation 14850700 "canThrow"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return true if at least one of the insn processed since the last
call to startBlock() can throw."
      end

      operation 14850828 "hasJsr"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return true if a JSR has ben encountered since the last call to
startBlock()"
      end

      operation 14850956 "hasRet"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return {@code true} if a {@code ret} has ben encountered since
the last call to {@code startBlock()}"
      end

      operation 14851084 "getReturnAddress"
	public return_type class_ref 3441164 // ReturnAddress
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return {@code null-ok;} return address of a {@code ret}
instruction if encountered since last call to startBlock().
{@code null} if no ret instruction encountered."
      end

      operation 14851212 "run"
	public explicit_return_type "void"
	nparams 3
	  param inout name "frame" type class_ref 3437196 // Frame
	  param in name "offset" explicit_type "int"
	  param in name "opcode" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14851340 "getSources"
	private return_type class_ref 3443212 // RegisterSpecList
	nparams 2
	  param in name "opcode" explicit_type "int"
	  param in name "stackPointer" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Helper for {@link #run}, which gets the list of sources for the.
instruction.

@param opcode the opcode being translated
@param stackPointer {@code >= 0;} the stack pointer after the
instruction's arguments have been popped
@return {@code non-null;} the sources"
      end

      operation 14851468 "updateReturnOp"
	private explicit_return_type "void"
	nparams 2
	  param inout name "op" type class_ref 3443084 // Rop
	  param inout name "pos" type class_ref 3439884 // SourcePosition
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets or updates the information about the return block.

@param op {@code non-null;} the opcode to use
@param pos {@code non-null;} the position to use"
      end

      operation 14851596 "jopToRopOpcode"
	private explicit_return_type "int"
	nparams 2
	  param in name "jop" explicit_type "int"
	  param inout name "cst" type class_ref 3431692 // Constant
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the register opcode for the given Java opcode.

@param jop {@code >= 0;} the Java opcode
@param cst {@code null-ok;} the constant argument, if any
@return {@code >= 0;} the corresponding register opcode"
      end
    end

    class 3441548 "Simulator"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Class which knows how to simulate the effects of executing bytecode.

<p><b>Note:</b> This class is not thread-safe. If multiple threads
need to use a single instance, they must synchronize access explicitly
between themselves.</p>"
      classrelation 6597004 // LOCAL_MISMATCH_ERROR (<unidirectional association>)
	relation 6596876 --->
	  a role_name "LOCAL_MISMATCH_ERROR" init_value "
        \"This is symptomatic of .class transformation tools that ignore \" +
        \"local variable information.\"" class_relation const_relation private
	    comment "
{@code non-null;} canned error message for local variable
table mismatches

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6597004 // LOCAL_MISMATCH_ERROR (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 6597132 // machine (<unidirectional association>)
	relation 6597004 --->
	  a role_name "machine" const_relation private
	    comment " {@code non-null;} machine to use when simulating 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6597132 // machine (<unidirectional association>)
	  b parent class_ref 3436940 // Machine
      end

      classrelation 6597260 // code (<unidirectional association>)
	relation 6597132 --->
	  a role_name "code" const_relation private
	    comment " {@code non-null;} array of bytecode 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6597260 // code (<unidirectional association>)
	  b parent class_ref 3431948 // BytecodeArray
      end

      classrelation 6597388 // localVariables (<unidirectional association>)
	relation 6597260 --->
	  a role_name "localVariables" const_relation private
	    comment " {@code non-null;} local variable information 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6597388 // localVariables (<unidirectional association>)
	  b parent class_ref 3434124 // LocalVariableList
      end

      class 3443468 "SimVisitor"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 6597644 // <realization>
	  relation 6597516 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 6597644 // <realization>
	    b parent class_ref 3438092 // Visitor
	end

	classrelation 6597772 // machine (<unidirectional association>)
	  relation 6597644 --->
	    a role_name "machine" const_relation private
	      comment "
{@code non-null;} machine instance to use (just to avoid excessive
cross-object field access)

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 6597772 // machine (<unidirectional association>)
	    b parent class_ref 3436940 // Machine
	end

	classrelation 6597900 // frame (<unidirectional association>)
	  relation 6597772 --->
	    a role_name "frame" private
	      comment "
{@code null-ok;} frame to use; set with each call to
{@link Simulator#simulate}

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 6597900 // frame (<unidirectional association>)
	    b parent class_ref 3437196 // Frame
	end

	attribute 12528908 "previousOffset"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " offset of the previous bytecode "
	end

	operation 14854028 "SimVisitor"
	  public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Constructs an instance."
	end

	operation 14854156 "setFrame"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "frame" type class_ref 3437196 // Frame
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Sets the frame to act on.

@param frame {@code non-null;} the frame"
	end

	operation 14854284 "visitInvalid"
	  public explicit_return_type "void"
	  nparams 3
	    param in name "opcode" explicit_type "int"
	    param in name "offset" explicit_type "int"
	    param in name "length" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " {@inheritDoc} "
	end

	operation 14854412 "visitNoArgs"
	  public explicit_return_type "void"
	  nparams 4
	    param in name "opcode" explicit_type "int"
	    param in name "offset" explicit_type "int"
	    param in name "length" explicit_type "int"
	    param inout name "type" type class_ref 3437324 // Type
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " {@inheritDoc} "
	end

	operation 14854540 "checkReturnType"
	  private explicit_return_type "void"
	  nparams 1
	    param inout name "encountered" type class_ref 3437324 // Type
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Checks whether the prototype is compatible with returning the
given type, and throws if not.

@param encountered {@code non-null;} the encountered return type"
	end

	operation 14854668 "visitLocal"
	  public explicit_return_type "void"
	  nparams 6
	    param in name "opcode" explicit_type "int"
	    param in name "offset" explicit_type "int"
	    param in name "length" explicit_type "int"
	    param in name "idx" explicit_type "int"
	    param inout name "type" type class_ref 3437324 // Type
	    param in name "value" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " {@inheritDoc} "
	end

	operation 14854796 "visitConstant"
	  public explicit_return_type "void"
	  nparams 5
	    param in name "opcode" explicit_type "int"
	    param in name "offset" explicit_type "int"
	    param in name "length" explicit_type "int"
	    param inout name "cst" type class_ref 3431692 // Constant
	    param in name "value" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " {@inheritDoc} "
	end

	operation 14854924 "visitBranch"
	  public explicit_return_type "void"
	  nparams 4
	    param in name "opcode" explicit_type "int"
	    param in name "offset" explicit_type "int"
	    param in name "length" explicit_type "int"
	    param in name "target" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " {@inheritDoc} "
	end

	operation 14855052 "visitSwitch"
	  public explicit_return_type "void"
	  nparams 5
	    param in name "opcode" explicit_type "int"
	    param in name "offset" explicit_type "int"
	    param in name "length" explicit_type "int"
	    param inout name "cases" type class_ref 3437452 // SwitchList
	    param in name "padding" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " {@inheritDoc} "
	end

	operation 14855180 "visitNewarray"
	  public explicit_return_type "void"
	  nparams 4
	    param in name "offset" explicit_type "int"
	    param in name "length" explicit_type "int"
	    param inout name "type" type class_ref 3432844 // CstType
	    param inout name "initValues" explicit_type "ArrayList<Constant>"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " {@inheritDoc} "
	end

	operation 14855308 "setPreviousOffset"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "offset" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " {@inheritDoc} "
	end

	operation 14855436 "getPreviousOffset"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " {@inheritDoc} "
	end
      end

      classrelation 6597516 // visitor (<unidirectional association>)
	relation 6597388 --->
	  a role_name "visitor" const_relation private
	    comment " {@code non-null;} visitor instance to use 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6597516 // visitor (<unidirectional association>)
	  b parent class_ref 3443468 // SimVisitor
      end

      operation 14853388 "Simulator"
	public explicit_return_type ""
	nparams 2
	  param inout name "machine" type class_ref 3436940 // Machine
	  param inout name "method" type class_ref 3438476 // ConcreteMethod
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance.

@param machine {@code non-null;} machine to use when simulating
@param method {@code non-null;} method data to use"
      end

      operation 14853516 "simulate"
	public explicit_return_type "void"
	nparams 2
	  param inout name "bb" type class_ref 3438860 // ByteBlock
	  param inout name "frame" type class_ref 3437196 // Frame
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Simulates the effect of executing the given basic block. This modifies
the passed-in frame to represent the end result.

@param bb {@code non-null;} the basic block
@param frame {@code non-null;} frame to operate on"
      end

      operation 14853644 "simulate"
	public explicit_return_type "int"
	nparams 2
	  param in name "offset" explicit_type "int"
	  param inout name "frame" type class_ref 3437196 // Frame
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Simulates the effect of the instruction at the given offset, by
making appropriate calls on the given frame.

@param offset {@code >= 0;} offset of the instruction to simulate
@param frame {@code non-null;} frame to operate on
@return the length of the instruction, in bytes"
      end

      operation 14853772 "illegalTos"
	class_operation private return_type class_ref 3443340 // SimException
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an \"illegal top-of-stack\" exception, for the stack
manipulation opcodes."
      end

      operation 14853900 "requiredArrayTypeFor"
	class_operation private return_type class_ref 3437324 // Type
	nparams 2
	  param inout name "impliedType" type class_ref 3437324 // Type
	  param inout name "foundArrayType" type class_ref 3437324 // Type
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the required array type for an array load or store
instruction, based on a given implied type and an observed
actual array type.

<p>The interesting cases here have to do with object arrays,
<code>byte[]</code>s, <code>boolean[]</code>s, and
known-nulls.</p>

<p>In the case of arrays of objects, we want to narrow the type
to the actual array present on the stack, as long as what is
present is an object type. Similarly, due to a quirk of the
original bytecode representation, the instructions for dealing
with <code>byte[]</code> and <code>boolean[]</code> are
undifferentiated, and we aim here to return whichever one was
actually present on the stack.</p>

<p>In the case where there is a known-null on the stack where
an array is expected, we just fall back to the implied type of
the instruction. Due to the quirk described above, this means
that source code that uses <code>boolean[]</code> might get
translated surprisingly -- but correctly -- into an instruction
that specifies a <code>byte[]</code>. It will be correct,
because should the code actually execute, it will necessarily
throw a <code>NullPointerException</code>, and it won't matter
what opcode variant is used to achieve that result.</p>

@param impliedType {@code non-null;} type implied by the
instruction; is <i>not</i> an array type
@param foundArrayType {@code non-null;} type found on the
stack; is either an array type or a known-null
@return {@code non-null;} the array type that should be
required in this context"
      end
    end

    class 3442700 "ValueAwareMachine"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "{@link Machine} which keeps track of known values but does not do
smart/realistic reference type calculations."
      classrelation 6595212 // <generalisation>
	relation 6595084 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6595212 // <generalisation>
	  b parent class_ref 3436812 // BaseMachine
      end

      operation 14849292 "ValueAwareMachine"
	public explicit_return_type ""
	nparams 1
	  param inout name "prototype" type class_ref 3437068 // Prototype
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance.

@param prototype {@code non-null;} the prototype for the associated
method"
      end

      operation 14849420 "run"
	public explicit_return_type "void"
	nparams 3
	  param inout name "frame" type class_ref 3437196 // Frame
	  param in name "offset" explicit_type "int"
	  param in name "opcode" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end
    end

    class 3443340 "SimException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Exception from simulation."
      classrelation 6596876 // <generalisation>
	relation 6596748 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6596876 // <generalisation>
	  b parent class_ref 3440140 // ExceptionWithContext
      end

      operation 14853004 "SimException"
	public explicit_return_type ""
	nparams 1
	  param inout name "message" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 14853132 "SimException"
	public explicit_return_type ""
	nparams 1
	  param inout name "cause" explicit_type "Throwable"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 14853260 "SimException"
	public explicit_return_type ""
	nparams 2
	  param inout name "message" type class_ref 3399692 // String
	  param inout name "cause" explicit_type "Throwable"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end
  end

  deploymentview 310796 "code"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 1361548 "Machine"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.dx.rop.cst.Constant;
import com.android.dx.rop.type.Prototype;
import com.android.dx.rop.type.Type;
import com.android.dx.rop.code.LocalItem;
import java.util.ArrayList;
${definition}"
      associated_classes
	class_ref 3436940 // Machine
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1361676 "BaseMachine"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.dx.rop.code.RegisterSpec;
import com.android.dx.rop.code.LocalItem;
import com.android.dx.rop.cst.Constant;
import com.android.dx.rop.type.Prototype;
import com.android.dx.rop.type.StdTypeList;
import com.android.dx.rop.type.Type;
import com.android.dx.rop.type.TypeBearer;
import java.util.ArrayList;
${definition}"
      associated_classes
	class_ref 3436812 // BaseMachine
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1361804 "BytecodeArray"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.dx.rop.cst.Constant;
import com.android.dx.rop.cst.ConstantPool;
import com.android.dx.rop.cst.CstDouble;
import com.android.dx.rop.cst.CstFloat;
import com.android.dx.rop.cst.CstInteger;
import com.android.dx.rop.cst.CstKnownNull;
import com.android.dx.rop.cst.CstLiteralBits;
import com.android.dx.rop.cst.CstLong;
import com.android.dx.rop.cst.CstType;
import com.android.dx.rop.type.Type;
import com.android.dx.util.Bits;
import com.android.dx.util.ByteArray;
import com.android.dx.util.Hex;
import java.util.ArrayList;
${definition}"
      associated_classes
	class_ref 3431948 // BytecodeArray
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1361932 "BasicBlocker"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.dx.rop.cst.Constant;
import com.android.dx.rop.cst.CstMemberRef;
import com.android.dx.rop.cst.CstType;
import com.android.dx.rop.cst.CstString;
import com.android.dx.rop.type.Type;
import com.android.dx.util.Bits;
import com.android.dx.util.IntList;
import java.util.ArrayList;
${definition}"
      associated_classes
	class_ref 3437964 // BasicBlocker
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1362188 "ByteBlock"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.dx.util.Hex;
import com.android.dx.util.IntList;
import com.android.dx.util.LabeledItem;
${definition}"
      associated_classes
	class_ref 3438860 // ByteBlock
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1362444 "ByteBlockList"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.dx.util.FixedSizeList;
import com.android.dx.util.Hex;
import com.android.dx.util.LabeledList;
${definition}"
      associated_classes
	class_ref 3438732 // ByteBlockList
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1362572 "ByteCatchList"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.dx.rop.cst.CstType;
import com.android.dx.rop.type.StdTypeList;
import com.android.dx.rop.type.TypeList;
import com.android.dx.util.FixedSizeList;
import com.android.dx.util.IntList;
${definition}"
      associated_classes
	class_ref 3432076 // ByteCatchList
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1362700 "ByteOps"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.dx.util.Hex;
${definition}"
      associated_classes
	class_ref 3439372 // ByteOps
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1363084 "ConcreteMethod"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.dx.cf.attrib.AttCode;
import com.android.dx.cf.attrib.AttLineNumberTable;
import com.android.dx.cf.attrib.AttLocalVariableTable;
import com.android.dx.cf.attrib.AttLocalVariableTypeTable;
import com.android.dx.cf.iface.AttributeList;
import com.android.dx.cf.iface.ClassFile;
import com.android.dx.cf.iface.Method;
import com.android.dx.rop.code.AccessFlags;
import com.android.dx.rop.code.SourcePosition;
import com.android.dx.rop.cst.CstNat;
import com.android.dx.rop.cst.CstString;
import com.android.dx.rop.cst.CstType;
import com.android.dx.rop.type.Prototype;
${definition}"
      associated_classes
	class_ref 3438476 // ConcreteMethod
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1363212 "ExecutionStack"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.dx.rop.type.Type;
import com.android.dx.rop.type.TypeBearer;
import com.android.dx.util.ExceptionWithContext;
import com.android.dx.util.Hex;
import com.android.dx.util.MutabilityControl;
${definition}"
      associated_classes
	class_ref 3440012 // ExecutionStack
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1363340 "Frame"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.dx.rop.cst.CstType;
import com.android.dx.rop.type.StdTypeList;
import com.android.dx.rop.type.Type;
import com.android.dx.util.ExceptionWithContext;
import com.android.dx.util.IntList;
${definition}"
      associated_classes
	class_ref 3437196 // Frame
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1363468 "LineNumberList"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.dx.util.FixedSizeList;
${definition}"
      associated_classes
	class_ref 3433740 // LineNumberList
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1363596 "LocalsArray"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.dx.rop.code.RegisterSpec;
import com.android.dx.rop.type.Type;
import com.android.dx.rop.type.TypeBearer;
import com.android.dx.util.ExceptionWithContext;
import com.android.dx.util.Hex;
import com.android.dx.util.MutabilityControl;
import com.android.dx.util.ToHuman;
${definition}"
      associated_classes
	class_ref 3440268 // LocalsArray
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1363724 "LocalsArraySet"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.dx.rop.code.RegisterSpec;
import com.android.dx.rop.type.Type;
import com.android.dx.rop.type.TypeBearer;
import com.android.dx.util.ExceptionWithContext;
import com.android.dx.util.Hex;
import com.android.dx.util.MutabilityControl;
import java.util.ArrayList;
${definition}"
      associated_classes
	class_ref 3440652 // LocalsArraySet
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1363852 "LocalVariableList"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.dx.rop.cst.CstString;
import com.android.dx.rop.type.Type;
import com.android.dx.rop.code.LocalItem;
import com.android.dx.util.FixedSizeList;
${definition}"
      associated_classes
	class_ref 3434124 // LocalVariableList
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1363980 "Merger"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.dx.rop.type.Type;
import com.android.dx.rop.type.TypeBearer;
import com.android.dx.util.Hex;
${definition}"
      associated_classes
	class_ref 3441036 // Merger
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1364108 "OneLocalsArray"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.dx.rop.code.RegisterSpec;
import com.android.dx.rop.type.Type;
import com.android.dx.rop.type.TypeBearer;
import com.android.dx.util.ExceptionWithContext;
import com.android.dx.util.Hex;
import com.android.dx.util.MutabilityControl;
${definition}"
      associated_classes
	class_ref 3440780 // OneLocalsArray
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1364364 "ReturnAddress"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.dx.rop.type.Type;
import com.android.dx.rop.type.TypeBearer;
import com.android.dx.util.Hex;
${definition}"
      associated_classes
	class_ref 3441164 // ReturnAddress
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1364492 "Ropper"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.dx.rop.code.*;
import com.android.dx.rop.cst.CstInteger;
import com.android.dx.rop.cst.CstType;
import com.android.dx.rop.type.Prototype;
import com.android.dx.rop.type.StdTypeList;
import com.android.dx.rop.type.Type;
import com.android.dx.rop.type.TypeList;
import com.android.dx.util.Bits;
import com.android.dx.util.Hex;
import com.android.dx.util.IntList;
import java.util.ArrayList;
import java.util.BitSet;
import java.util.HashMap;
${definition}"
      associated_classes
	class_ref 3441292 // Ropper
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1364620 "ValueAwareMachine"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.dx.rop.cst.CstType;
import com.android.dx.rop.type.Prototype;
import com.android.dx.rop.type.Type;
import com.android.dx.rop.type.TypeBearer;
import com.android.dx.util.Hex;
${definition}"
      associated_classes
	class_ref 3442700 // ValueAwareMachine
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1364748 "RopperMachine"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.dx.rop.code.FillArrayDataInsn;
import com.android.dx.rop.code.Insn;
import com.android.dx.rop.code.PlainCstInsn;
import com.android.dx.rop.code.PlainInsn;
import com.android.dx.rop.code.RegOps;
import com.android.dx.rop.code.RegisterSpec;
import com.android.dx.rop.code.RegisterSpecList;
import com.android.dx.rop.code.Rop;
import com.android.dx.rop.code.Rops;
import com.android.dx.rop.code.SourcePosition;
import com.android.dx.rop.code.SwitchInsn;
import com.android.dx.rop.code.ThrowingCstInsn;
import com.android.dx.rop.code.ThrowingInsn;
import com.android.dx.rop.code.TranslationAdvice;
import com.android.dx.rop.cst.Constant;
import com.android.dx.rop.cst.CstFieldRef;
import com.android.dx.rop.cst.CstInteger;
import com.android.dx.rop.cst.CstMethodRef;
import com.android.dx.rop.cst.CstNat;
import com.android.dx.rop.cst.CstString;
import com.android.dx.rop.cst.CstType;
import com.android.dx.rop.type.Type;
import com.android.dx.rop.type.TypeBearer;
import com.android.dx.rop.type.TypeList;
import com.android.dx.util.IntList;
import java.util.ArrayList;
${definition}"
      associated_classes
	class_ref 3441420 // RopperMachine
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1365004 "SimException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.dx.util.ExceptionWithContext;
${definition}"
      associated_classes
	class_ref 3443340 // SimException
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1365132 "Simulator"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.dx.rop.cst.Constant;
import com.android.dx.rop.cst.CstFieldRef;
import com.android.dx.rop.cst.CstInteger;
import com.android.dx.rop.cst.CstInterfaceMethodRef;
import com.android.dx.rop.cst.CstMethodRef;
import com.android.dx.rop.cst.CstType;
import com.android.dx.rop.type.Prototype;
import com.android.dx.rop.type.Type;
import com.android.dx.rop.code.LocalItem;
import com.android.dx.util.Hex;
import java.util.ArrayList;
${definition}"
      associated_classes
	class_ref 3441548 // Simulator
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1365260 "SwitchList"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.dx.util.IntList;
import com.android.dx.util.MutabilityControl;
${definition}"
      associated_classes
	class_ref 3437452 // SwitchList
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end
  end
end
