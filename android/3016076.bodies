class LocationSetterDialog
!!!12319372.java!!!	LocationSetterDialog(inout context : Context, inout callBack : OnLocationSetListener)
        super(context);

        mCallBack = callBack;
        mContext = context;

        setTitle(mContext.getText(R.string.locate));
        setButton(DialogInterface.BUTTON_NEGATIVE,
                mContext.getText(R.string.cancel), (OnClickListener) null);
        setButton(DialogInterface.BUTTON_POSITIVE,
                mContext.getString(R.string.set), this);

        LayoutInflater factory = LayoutInflater.from(context);
        mView = factory.inflate(R.layout.location_entry_view, null);
        setView(mView);
        setIcon(0);
        setupViewControls();
!!!12319500.java!!!	onClick(inout dialog : DialogInterface, in which : int) : void
        if (DialogInterface.BUTTON_POSITIVE == which) {
            if (mCallBack != null) {
                mCallBack.onLocationSet(getLocation());
            }
            if (mAddress != null) {
                updateStaticLocation(mAddress);
            }
        }
!!!12319628.java!!!	setLocation(in location : String) : void
        EditText locationEditText = (EditText) mView.findViewById(R.id.zip_code);
        if (location != null) {
            locationEditText.setText(location);
            updateStatusBasedOnInput(locationEditText.getText(), false);
        }
!!!12319756.java!!!	getLocation() : String
        EditText locationEditText = (EditText) mView.findViewById(R.id.zip_code);
        return locationEditText.getText().toString();
!!!12319884.java!!!	updateStaticLocation(inout address : Address) : void
        Intent updateLocationIntent = new Intent(UPDATE_STATIC_LOCATION_ACTION);
        Bundle extras = new Bundle();
        extras.putDouble(KEY_LATITUDE, address.getLatitude());
        extras.putDouble(KEY_LONGITUDE, address.getLongitude());
        updateLocationIntent.putExtras(extras);
        mContext.startService(updateLocationIntent);
!!!12320012.java!!!	setupViewControls() : void
        EditText locationEditText = (EditText) mView.findViewById(R.id.zip_code);
        locationEditText.addTextChangedListener(new TextWatcher() {
            @Override
            public void afterTextChanged(Editable s) {
                updateStatusBasedOnInput(s, false);
            }

            @Override
            public void beforeTextChanged(CharSequence s, int start, int count,
                    int after) {
                // do nothing
            }

            @Override
            public void onTextChanged(CharSequence s, int start, int before,
                    int count) {
                // do nothing
            }
        });

        locationEditText.setOnFocusChangeListener(
                new View.OnFocusChangeListener() {
                    @Override
                    public void onFocusChange(View v, boolean hasFocus) {
                        if (!hasFocus) {
                            EditText locationEditText = (EditText) v;
                            updateStatusBasedOnInput(
                                    locationEditText.getEditableText(), true);
                        }
                    }
                });
!!!12320140.java!!!	updateStatusBasedOnInput(inout s : Editable, inout showError : boolean) : void
        String zipCode = s.toString();
        boolean locationValid = zipCode.length() == US_ZIP_CODE_LENGTH;
        setPositiveButtonEnabled(locationValid && mLastZipCodeGood);
        EditText locationEditText = (EditText) findViewById(R.id.zip_code);
        if (showError) {
            locationEditText.setError(locationValid ? null :
                    mContext.getString(R.string.not_a_zip_code));
        }

        if (locationValid) {
            if (mLastZipCodeChecked == null ||
                    !mLastZipCodeChecked.equals(zipCode)) {
                LookUpZipCodeAsyncTask task = new LookUpZipCodeAsyncTask();
                task.execute(zipCode);
            }
        } else {
            mLastZipCodeChecked = null;
            mLastZipCodeGood = false;
            TextView determinedLocation = (TextView) findViewById(
                    R.id.determined_location);
            determinedLocation.setText(null);
        }
!!!12320268.java!!!	getLocationFromAddress(inout address : Address) : String
        if (address != null) {
            StringBuilder locationBuilder = new StringBuilder();
            if (address.getLocality() != null) {
                locationBuilder.append(address.getLocality());
                locationBuilder.append(", ");
            }
            locationBuilder.append(address.getAdminArea());
            return locationBuilder.toString();
        } else {
            return null;
        }
!!!12320396.java!!!	setPositiveButtonEnabled(inout enabled : boolean) : void
        getButton(DialogInterface.BUTTON_POSITIVE).setEnabled(enabled);
