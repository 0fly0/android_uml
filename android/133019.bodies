class Reader
!!!145691.java!!!	Reader()
        lock = this;
!!!145819.java!!!	Reader(inout lock : Object)
        if (lock == null) {
            throw new NullPointerException("lock == null");
        }
        this.lock = lock;
!!!146075.java!!!	mark(in readLimit : int) : void
        throw new IOException();
!!!146203.java!!!	markSupported() : boolean
        return false;
!!!146331.java!!!	read() : int
        synchronized (lock) {
            char[] charArray = new char[1];
            if (read(charArray, 0, 1) != -1) {
                return charArray[0];
            }
            return -1;
        }
!!!146459.java!!!	read(inout buf : char) : int
        return read(buf, 0, buf.length);
!!!146715.java!!!	ready() : boolean
        return false;
!!!146843.java!!!	reset() : void
        throw new IOException();
!!!146971.java!!!	skip(in charCount : long) : long
        if (charCount < 0) {
            throw new IllegalArgumentException("charCount < 0: " + charCount);
        }
        synchronized (lock) {
            long skipped = 0;
            int toRead = charCount < 512 ? (int) charCount : 512;
            char[] charsSkipped = new char[toRead];
            while (skipped < charCount) {
                int read = read(charsSkipped, 0, toRead);
                if (read == -1) {
                    return skipped;
                }
                skipped += read;
                if (read < toRead) {
                    return skipped;
                }
                if (charCount - skipped < toRead) {
                    toRead = (int) (charCount - skipped);
                }
            }
            return skipped;
        }
!!!147099.java!!!	read(inout target : CharBuffer) : int
        int length = target.length();
        char[] buf = new char[length];
        length = Math.min(length, read(buf));
        if (length > 0) {
            target.put(buf, 0, length);
        }
        return length;
