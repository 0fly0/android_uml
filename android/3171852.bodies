class LauncherProvider
!!!13464588.java!!!	LauncherProvider()
        this(null);
!!!13464716.java!!!	LauncherProvider(inout provider : DefaultItemProvider)
        mDefaultItemProvider = provider;
!!!13464844.java!!!	onCreate() : boolean
        mDatabaseHelper = new DatabaseHelper(getContext(), DATABASE_NAME, null, DATABASE_VERSION);
        // This is a little clunky: need to create the default item provider if the provider was
        // created with no arguments. However, the context isn't set until this point.
        if (mDefaultItemProvider == null) {
            mDefaultItemProvider = new DefaultItemProvider(getContext());
        }
        SUGGEST_PROJECTION[SUGGEST_PROJECTION.length - 1] = "'" +
                getContext().getString(R.string.search_secondary_text) + "' AS "
                + SearchManager.SUGGEST_COLUMN_TEXT_2;
        return true;
!!!13464972.java!!!	getType(inout uri : Uri) : String
        int match = URI_MATCHER.match(uri);
        switch (match) {
            case URI_MATCH_SHORTCUTS:
                return "vnd.android.cursor.dir/" + TABLE_SHORTCUTS;
            case URI_MATCH_SHORTCUTS_ID:
                return "vnd.android.cursor.item/" + TABLE_SHORTCUTS;
            case URI_MATCH_QUICKLIST_CONTENTS:
                return "vnd.android.cursor.dir/" + TABLE_QUICKLIST_CONTENTS;
            case URI_MATCH_QUICKLIST_CONTENTS_ID:
                return "vnd.android.cursor.item/" + TABLE_QUICKLIST_CONTENTS;
            case URI_MATCH_CANVAS_CONTENTS:
                return "vnd.android.cursor.dir/" + TABLE_CANVAS_CONTENTS;
            case URI_MATCH_CANVAS_CONTENTS_ID:
                return "vnd.android.cursor.item/" + TABLE_CANVAS_CONTENTS;
            case URI_MATCH_SHORTCUT_SUGGESTIONS:
                return SearchManager.SUGGEST_MIME_TYPE;
            default:
                throw new IllegalArgumentException("Unknown URI match " + match + " for " + uri);
        }
!!!13465100.java!!!	insert(inout uri : Uri, inout values : ContentValues) : Uri
        int match = URI_MATCHER.match(uri);
        if (match == URI_MATCH_CANVAS_CONTENTS
                || match == URI_MATCH_QUICKLIST_CONTENTS
                || match == URI_MATCH_SHORTCUTS) {
            SQLiteDatabase db = mDatabaseHelper.getWritableDatabase();
            long id = db.insert(getTableName(match), getNullColumn(match), values);
            if (id != -1) {
                Uri newUri = ContentUris.withAppendedId(uri, id);
                getContext().getContentResolver().notifyChange(newUri, null);
                return newUri;
            } else {
                return null;
            }
        }
        throw new IllegalArgumentException("Can't insert into URI " + uri);
!!!13465228.java!!!	update(inout uri : Uri, inout values : ContentValues, in selection : String, inout selectionArgs : String) : int
        int match = URI_MATCHER.match(uri);
        if (match != UriMatcher.NO_MATCH) {
            SQLiteDatabase db = mDatabaseHelper.getWritableDatabase();
            int updateCount = db.update(getTableName(match), values, selection,
                    selectionArgs);
            if (updateCount > 0 && match == URI_MATCH_SHORTCUTS) {
                // If shortcuts are updated, clear the icon cache.
                ((LauncherApp) getContext().getApplicationContext()).getIconCache()
                        .clearCache();
            }
            getContext().getContentResolver().notifyChange(uri, null);
            return updateCount;
        } else {
            return 0;
        }
!!!13465356.java!!!	delete(inout uri : Uri, in selection : String, inout selectionArgs : String) : int
        int match = URI_MATCHER.match(uri);
        if (match != UriMatcher.NO_MATCH) {
            SQLiteDatabase db = mDatabaseHelper.getWritableDatabase();
            int count = db.delete(getTableName(match), selection, selectionArgs);
            getContext().getContentResolver().notifyChange(uri, null);
            return count;
        } else {
            return 0;
        }
!!!13465484.java!!!	query(inout uri : Uri, inout projection : String, in selection : String, inout selectionArgs : String, in sortOrder : String) : Cursor
        int match = URI_MATCHER.match(uri);
        if (match == URI_MATCH_SHORTCUT_SUGGESTIONS) {
            return getSuggestions(uri);
        } else if (match != UriMatcher.NO_MATCH) {
            SQLiteDatabase db = mDatabaseHelper.getReadableDatabase();
            return db.query(getTableName(match), projection, selection,
                    selectionArgs, null, null, sortOrder);
        } else {
            return null;
        }
!!!13465612.java!!!	getSuggestions(inout uri : Uri) : Cursor
        SQLiteDatabase db = mDatabaseHelper.getReadableDatabase();
        String query = uri.getLastPathSegment();
        if (TextUtils.isEmpty(query)) {
            return null;
        }
        query += "%";
        String selection = ShortcutColumns.TITLE + " LIKE ?";
        return db.query(TABLE_SHORTCUTS, SUGGEST_PROJECTION, selection, new String[] { query },
                null, null, null);
!!!13465740.java!!!	getTableName(in match : int) : String
        switch (match) {
            case URI_MATCH_CANVAS_CONTENTS:
            case URI_MATCH_CANVAS_CONTENTS_ID:
                return TABLE_CANVAS_CONTENTS;
            case URI_MATCH_QUICKLIST_CONTENTS:
            case URI_MATCH_QUICKLIST_CONTENTS_ID:
                return TABLE_QUICKLIST_CONTENTS;
            case URI_MATCH_SHORTCUTS:
            case URI_MATCH_SHORTCUTS_ID:
                return TABLE_SHORTCUTS;
            default:
                throw new IllegalArgumentException("URI match " + match + " is unknown.");
        }
!!!13465868.java!!!	getNullColumn(in match : int) : String
        switch (match) {
            case URI_MATCH_CANVAS_CONTENTS:
                return CanvasContentsColumns.CANVAS_ID;
            case URI_MATCH_QUICKLIST_CONTENTS:
                return QuickListContentsColumns.QUICKLIST_ID;
            case URI_MATCH_SHORTCUTS:
                return ShortcutColumns.TITLE;
            default:
                throw new IllegalArgumentException("Cant get null column hack column for match "
                        + match);
        }
!!!13467276.java!!!	getPackageManager() : PackageManager
        return getContext().getPackageManager();
