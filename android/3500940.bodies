class State
!!!15306380.java!!!	State()
        mHeaps = new HashMap<Integer, Heap>();
        setToDefaultHeap();
!!!15306508.java!!!	setToDefaultHeap() : Heap
        return setHeapTo(0, "default");
!!!15306636.java!!!	setHeapTo(in id : int, inout name : String) : Heap
        Heap heap = mHeaps.get(id);

        if (heap == null) {
            heap = new Heap(name);
            heap.mState = this;
            mHeaps.put(id, heap);
        }

        mCurrentHeap = heap;

        return mCurrentHeap;
!!!15306764.java!!!	getHeap(in id : int) : Heap
        return mHeaps.get(id);
!!!15306892.java!!!	getHeap(inout name : String) : Heap
        for (Heap heap: mHeaps.values()) {
            if (heap.mName.equals(name)) {
                return heap;
            }
        }

        return null;
!!!15307020.java!!!	addStackFrame(inout theFrame : StackFrame) : void
        mCurrentHeap.addStackFrame(theFrame);
!!!15307148.java!!!	getStackFrame(in id : long) : StackFrame
        return mCurrentHeap.getStackFrame(id);
!!!15307276.java!!!	addStackTrace(inout theTrace : StackTrace) : void
        mCurrentHeap.addStackTrace(theTrace);
!!!15307404.java!!!	getStackTrace(in traceSerialNumber : int) : StackTrace
        return mCurrentHeap.getStackTrace(traceSerialNumber);
!!!15307532.java!!!	getStackTraceAtDepth(in traceSerialNumber : int, in depth : int) : StackTrace
        return mCurrentHeap.getStackTraceAtDepth(traceSerialNumber, depth);
!!!15307660.java!!!	addRoot(inout root : RootObj) : void
        mCurrentHeap.addRoot(root);
!!!15307788.java!!!	addThread(inout thread : ThreadObj, in serialNumber : int) : void
        mCurrentHeap.addThread(thread, serialNumber);
!!!15307916.java!!!	getThread(in serialNumber : int) : ThreadObj
        return mCurrentHeap.getThread(serialNumber);
!!!15308044.java!!!	addInstance(in id : long, inout instance : Instance) : void
        mCurrentHeap.addInstance(id, instance);
!!!15308172.java!!!	addClass(in id : long, inout theClass : ClassObj) : void
        mCurrentHeap.addClass(id, theClass);
!!!15308300.java!!!	findReference(in id : long) : Instance
        for (Heap heap: mHeaps.values()) {
            Instance instance = heap.getInstance(id);

            if (instance != null) {
                return instance;
            }
        }

        //  Couldn't find an instance of a class, look for a class object
        return findClass(id);
!!!15308428.java!!!	findClass(in id : long) : ClassObj
        for (Heap heap: mHeaps.values()) {
            ClassObj theClass = heap.getClass(id);

            if (theClass != null) {
                return theClass;
            }
        }

        return null;
!!!15308556.java!!!	findClass(inout name : String) : ClassObj
        for (Heap heap: mHeaps.values()) {
            ClassObj theClass = heap.getClass(name);

            if (theClass != null) {
                return theClass;
            }
        }

        return null;
!!!15308684.java!!!	dumpInstanceCounts() : void
        for (Heap heap: mHeaps.values()) {
            System.out.println(
                "+------------------ instance counts for heap: " + heap.mName);
            heap.dumpInstanceCounts();
        }
!!!15308812.java!!!	dumpSizes() : void
        for (Heap heap: mHeaps.values()) {
            System.out.println(
                "+------------------ sizes for heap: " + heap.mName);
            heap.dumpSizes();
        }
!!!15308940.java!!!	dumpSubclasses() : void
        for (Heap heap: mHeaps.values()) {
            System.out.println(
                "+------------------ subclasses for heap: " + heap.mName);
            heap.dumpSubclasses();
        }
!!!15309068.java!!!	resolveReferences() : void
        for (Heap heap: mHeaps.values()) {
            heap.resolveInstanceRefs(this);
            heap.resolveClassStatics(this);
            heap.resolveRoots(this);
        }
