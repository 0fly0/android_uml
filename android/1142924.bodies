class ListInterleaveFocusablesTest
!!!6260620.java!!!	ListInterleaveFocusablesTest()
        super(ListInterleaveFocusables.class);
!!!6260748.java!!!	setUp() : void
        super.setUp();

        mListView = getActivity().getListView();
        mListUtil = new ListUtil(mListView, getInstrumentation());
!!!6260876.java!!!	testPreconditions() : void
        assertEquals(7, mListView.getChildCount());
        assertTrue(mListView.getChildAt(1).isFocusable());
        assertTrue(mListView.getChildAt(3).isFocusable());
        assertTrue(mListView.getChildAt(6).isFocusable());
!!!6261004.java!!!	testGoingFromUnFocusableSelectedToFocusable() : void
        sendKeys(KeyEvent.KEYCODE_DPAD_DOWN);

        assertEquals("selected item position", 1, mListView.getSelectedItemPosition());
        assertSelectedViewFocus(true);
!!!6261132.java!!!	testGoingDownFromUnFocusableSelectedToFocusableWithOtherFocusableAbove() : void
        mListUtil.setSelectedPosition(2);
        sendKeys(KeyEvent.KEYCODE_DPAD_DOWN);
        assertEquals("selected item position", 3, mListView.getSelectedItemPosition());
        assertSelectedViewFocus(true);
!!!6261260.java!!!	testGoingUpFromUnFocusableSelectedToFocusableWithOtherFocusableAbove() : void
        mListUtil.setSelectedPosition(2);
        sendKeys(KeyEvent.KEYCODE_DPAD_UP);
        assertEquals("selected item position", 1, mListView.getSelectedItemPosition());
        assertSelectedViewFocus(true);
!!!6261388.java!!!	testGoingDownFromFocusableToUnfocusableWhenFocusableIsBelow() : void
        mListUtil.setSelectedPosition(3);
        sendKeys(KeyEvent.KEYCODE_DPAD_DOWN);
        assertEquals("selected item position", 4, mListView.getSelectedItemPosition());
        assertSelectedViewFocus(false);
!!!6261516.java!!!	testGoingUpFromFocusableToUnfocusableWhenFocusableIsBelow() : void
        mListUtil.setSelectedPosition(6);
        sendKeys(KeyEvent.KEYCODE_DPAD_UP);
        assertEquals("selected item position", 5, mListView.getSelectedItemPosition());
        assertSelectedViewFocus(false);
!!!6261644.java!!!	assertSelectedViewFocus(inout isFocused : boolean) : void
        final View view = mListView.getSelectedView();
        assertEquals("selected view focused", isFocused, view.isFocused());
        assertEquals("selected position's isSelected should be the inverse "
                + "of it having focus", !isFocused, view.isSelected());
