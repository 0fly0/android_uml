class ColorDrawable
!!!6463244.java!!!	ColorDrawable()
        this(null);
!!!6463372.java!!!	ColorDrawable(in color : int)
        this(null);
        setColor(color);
!!!6463500.java!!!	ColorDrawable(inout state : ColorState)
        mState = new ColorState(state);
!!!6463628.java!!!	getChangingConfigurations() : int
        return super.getChangingConfigurations() | mState.mChangingConfigurations;
!!!6463756.java!!!	mutate() : Drawable
        if (!mMutated && super.mutate() == this) {
            mState = new ColorState(mState);
            mMutated = true;
        }
        return this;
!!!6463884.java!!!	draw(inout canvas : Canvas) : void
        if ((mState.mUseColor >>> 24) != 0) {
            mPaint.setColor(mState.mUseColor);
            canvas.drawRect(getBounds(), mPaint);
        }
!!!6464012.java!!!	getColor() : int
        return mState.mUseColor;
!!!6464140.java!!!	setColor(in color : int) : void
        if (mState.mBaseColor != color || mState.mUseColor != color) {
            invalidateSelf();
            mState.mBaseColor = mState.mUseColor = color;
        }
!!!6464268.java!!!	getAlpha() : int
        return mState.mUseColor >>> 24;
!!!6464396.java!!!	setAlpha(in alpha : int) : void
        alpha += alpha >> 7;   // make it 0..256
        int baseAlpha = mState.mBaseColor >>> 24;
        int useAlpha = baseAlpha * alpha >> 8;
        int oldUseColor = mState.mUseColor;
        mState.mUseColor = (mState.mBaseColor << 8 >>> 8) | (useAlpha << 24);
        if (oldUseColor != mState.mUseColor) {
            invalidateSelf();
        }
!!!6464652.java!!!	getOpacity() : int
        switch (mState.mUseColor >>> 24) {
            case 255:
                return PixelFormat.OPAQUE;
            case 0:
                return PixelFormat.TRANSPARENT;
        }
        return PixelFormat.TRANSLUCENT;
!!!6464780.java!!!	inflate(inout r : Resources, inout parser : XmlPullParser, inout attrs : AttributeSet) : void
        super.inflate(r, parser, attrs);

        TypedArray a = r.obtainAttributes(attrs, com.android.internal.R.styleable.ColorDrawable);

        int color = mState.mBaseColor;
        color = a.getColor(com.android.internal.R.styleable.ColorDrawable_color, color);
        mState.mBaseColor = mState.mUseColor = color;

        a.recycle();
!!!6464908.java!!!	getConstantState() : ConstantState
        mState.mChangingConfigurations = getChangingConfigurations();
        return mState;
