class StringTokenizer
!!!1380123.java!!!	StringTokenizer(inout string : String)
        this(string, " \t\n\r\f", false);
!!!1380251.java!!!	StringTokenizer(inout string : String, inout delimiters : String)
        this(string, delimiters, false);
!!!1380379.java!!!	StringTokenizer(inout string : String, inout delimiters : String, inout returnDelimiters : boolean)
        if (string == null) {
            throw new NullPointerException("string == null");
        }
        this.string = string;
        this.delimiters = delimiters;
        this.returnDelimiters = returnDelimiters;
        this.position = 0;
!!!1380507.java!!!	countTokens() : int
        int count = 0;
        boolean inToken = false;
        for (int i = position, length = string.length(); i < length; i++) {
            if (delimiters.indexOf(string.charAt(i), 0) >= 0) {
                if (returnDelimiters)
                    count++;
                if (inToken) {
                    count++;
                    inToken = false;
                }
            } else {
                inToken = true;
            }
        }
        if (inToken)
            count++;
        return count;
!!!1380635.java!!!	hasMoreElements() : boolean
        return hasMoreTokens();
!!!1380763.java!!!	hasMoreTokens() : boolean
        if (delimiters == null) {
            throw new NullPointerException("delimiters == null");
        }
        int length = string.length();
        if (position < length) {
            if (returnDelimiters)
                return true; // there is at least one character and even if
            // it is a delimiter it is a token

            // otherwise find a character which is not a delimiter
            for (int i = position; i < length; i++)
                if (delimiters.indexOf(string.charAt(i), 0) == -1)
                    return true;
        }
        return false;
!!!1380891.java!!!	nextElement() : Object
        return nextToken();
!!!1381019.java!!!	nextToken() : String
        if (delimiters == null) {
            throw new NullPointerException("delimiters == null");
        }
        int i = position;
        int length = string.length();

        if (i < length) {
            if (returnDelimiters) {
                if (delimiters.indexOf(string.charAt(position), 0) >= 0)
                    return String.valueOf(string.charAt(position++));
                for (position++; position < length; position++)
                    if (delimiters.indexOf(string.charAt(position), 0) >= 0)
                        return string.substring(i, position);
                return string.substring(i);
            }

            while (i < length && delimiters.indexOf(string.charAt(i), 0) >= 0)
                i++;
            position = i;
            if (i < length) {
                for (position++; position < length; position++)
                    if (delimiters.indexOf(string.charAt(position), 0) >= 0)
                        return string.substring(i, position);
                return string.substring(i);
            }
        }
        throw new NoSuchElementException();
!!!1381147.java!!!	nextToken(inout delims : String) : String
        this.delimiters = delims;
        return nextToken();
