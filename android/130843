format 74
"cert" // _unknown::java::security::cert
  revision 1
  modified_by 27 "shchen"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "/home/shchen/work/android-x86/libcore/luni/src/main/java/java/security/cert/"
  java_package "java.security.cert"
  classview 130459 "cert"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 173595 "Certificate"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Abstract class to represent identity certificates. It represents a way to
verify the binding of a Principal and its public key. Examples are X.509,
PGP, and SDSI."
      classrelation 305051 // <realization>
	relation 305051 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 305051 // <realization>
	  b parent class_ref 128155 // Serializable
      end

      attribute 258203 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -3585440601605666277L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 305179 // type (<unidirectional association>)
	relation 305179 --->
	  a role_name "type" const_relation private
	    comment " The standard name of the certificate type
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 305179 // type (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      operation 898587 "Certificate"
	protected explicit_return_type ""
	nparams 1
	  param inout name "type" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code Certificate} with the specified type.

@param type
       the certificate type."
      end

      operation 898715 "getType"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the certificate type.

@return the certificate type."
      end

      operation 898843 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "other" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares the argument to the certificate, and returns {@code true} if they
represent the <em>same</em> object using a class specific comparison. The
implementation in Object returns {@code true} only if the argument is the
exact same object as the callee (==).

@param other
           the object to compare with this object.
@return {@code true} if the object is the same as this object, {@code
        false} if it is different from this object.
@see #hashCode"
      end

      operation 898971 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an integer hash code for the certificate. Any two objects which
return {@code true} when passed to {@code equals} must return the same
value for this method.

@return the certificate's hash
@see #equals"
      end

      operation 899099 "getEncoded"
	abstract public explicit_return_type "byte"
	nparams 0
	nexceptions 1
	  exception class_ref 209691 // CertificateEncodingException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the encoded representation for this certificate.

@return the encoded representation for this certificate.
@throws CertificateEncodingException
            if the encoding fails."
      end

      operation 899227 "verify"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "key" type class_ref 199963 // PublicKey
	nexceptions 5
	  exception class_ref 204059 // CertificateException
	  exception class_ref 195867 // NoSuchAlgorithmException
	  exception class_ref 201755 // InvalidKeyException
	  exception class_ref 195995 // NoSuchProviderException
	  exception class_ref 208027 // SignatureException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Verifies that this certificate was signed with the given public key.

@param key
           PublicKey public key for which verification should be
           performed.
@throws CertificateException
            if encoding errors are detected.
@throws NoSuchAlgorithmException
            if an unsupported algorithm is detected.
@throws InvalidKeyException
            if an invalid key is detected.
@throws NoSuchProviderException
            if there is no default provider.
@throws SignatureException
            if signature errors are detected."
      end

      operation 899355 "verify"
	abstract public explicit_return_type "void"
	nparams 2
	  param inout name "key" type class_ref 199963 // PublicKey
	  param inout name "sigProvider" type class_ref 3399692 // String
	nexceptions 5
	  exception class_ref 204059 // CertificateException
	  exception class_ref 195867 // NoSuchAlgorithmException
	  exception class_ref 201755 // InvalidKeyException
	  exception class_ref 195995 // NoSuchProviderException
	  exception class_ref 208027 // SignatureException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Verifies that this certificate was signed with the given public key. It
Uses the signature algorithm given by the provider.

@param key
           PublicKey public key for which verification should be
           performed.
@param sigProvider
           String the name of the signature provider.
@exception CertificateException
               if encoding errors are detected.
@exception NoSuchAlgorithmException
               if an unsupported algorithm is detected.
@exception InvalidKeyException
               if an invalid key is detected.
@exception NoSuchProviderException
               if the specified provider does not exists.
@exception SignatureException
               if signature errors are detected."
      end

      operation 899483 "toString"
	abstract public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string containing a concise, human-readable description of the
certificate.

@return a printable representation for the certificate."
      end

      operation 899611 "getPublicKey"
	abstract public return_type class_ref 199963 // PublicKey
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the public key corresponding to this certificate.

@return the public key corresponding to this certificate."
      end

      operation 899739 "writeReplace"
	protected return_type class_ref 3401484 // Object
	nparams 0
	nexceptions 1
	  exception class_ref 139291 // ObjectStreamException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an alternate object to be serialized.

@return the object to serialize.
@throws ObjectStreamException
            if the creation of the alternate object fails."
      end

      class 209819 "CertificateRep"
	visibility protected 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 305307 // <realization>
	  relation 305307 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 305307 // <realization>
	    b parent class_ref 128155 // Serializable
	end

	attribute 258331 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " -8563758940495660020L"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 305435 // type (<unidirectional association>)
	  relation 305435 --->
	    a role_name "type" const_relation private
	      comment " The standard name of the certificate type
"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 305435 // type (<unidirectional association>)
	    b parent class_ref 3399692 // String
	end

	attribute 258459 "data"
	  const_attribute private explicit_type "byte"
	  multiplicity "[]"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " The certificate data"
	end

	classrelation 305563 // serialPersistentFields (<unidirectional association>)
	  relation 305563 --->
	    a role_name "serialPersistentFields" multiplicity "[]" init_value " {
             new ObjectStreamField(\"type\", String.class),
             new ObjectStreamField(\"data\", byte[].class, true)
        }" class_relation const_relation private
	      comment " Force default serialization to use writeUnshared/readUnshared
 for the certificate data
"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 305563 // serialPersistentFields (<unidirectional association>)
	    b parent class_ref 131355 // ObjectStreamField
	end

	operation 899867 "CertificateRep"
	  protected explicit_return_type ""
	  nparams 2
	    param inout name "type" type class_ref 3399692 // String
	    param inout name "data" explicit_type "byte"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Creates a new {@code CertificateRep} instance with the specified
certificate type and encoded data.

@param type
           the certificate type.
@param data
           the encoded data."
	end

	operation 899995 "readResolve"
	  protected return_type class_ref 3401484 // Object
	  nparams 0
	  nexceptions 1
	    exception class_ref 139291 // ObjectStreamException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Deserializes a {@code Certificate} from a serialized {@code
CertificateRep} object.

@return the deserialized {@code Certificate}.
@throws ObjectStreamException
            if deserialization fails."
	end
      end
    end

    class 200219 "CertPath"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "An immutable certificate path that can be validated. All certificates in the
path are of the same type (i.e., X509).
<p>
A {@code CertPath} can be represented as a byte array in at least one
supported encoding scheme (i.e. PkiPath or PKCS7) when serialized.
<p>
When a {@code List} of the certificates is obtained it must be immutable.
<p>
A {@code CertPath} must be thread-safe without requiring coordinated access.

@see Certificate"
      classrelation 306971 // <realization>
	relation 306971 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 306971 // <realization>
	  b parent class_ref 128155 // Serializable
      end

      attribute 259227 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 6068470306649138683L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 307099 // type (<unidirectional association>)
	relation 307099 --->
	  a role_name "type" const_relation private
	    comment " Standard name of the type of certificates in this path
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 307099 // type (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      operation 905115 "CertPath"
	protected explicit_return_type ""
	nparams 1
	  param inout name "type" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code CertPath} instance for the specified certificate
type.

@param type
           the certificate type."
      end

      operation 905243 "getType"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the type of {@code Certificate} in this instance.

@return the certificate type."
      end

      operation 905371 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "other" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns {@code true} if {@code Certificate}s in the list are the same
type and the lists are equal (and by implication the certificates
contained within are the same).

@param other
           {@code CertPath} to be compared for equality.
@return {@code true} if the object are equal, {@code false} otherwise."
      end

      operation 905499 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Overrides {@code Object.hashCode()}. The function is defined as follows:
<pre>
{@code hashCode = 31 * path.getType().hashCode() +
path.getCertificates().hashCode();}
</pre>

@return the hash code for this instance."
      end

      operation 905627 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@code String} representation of this {@code CertPath}
instance. It is the result of calling {@code toString} on all {@code
Certificate}s in the {@code List}.

@return a string representation of this instance."
      end

      operation 905755 "getCertificates"
	abstract public return_type class_ref 131483 // List
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<? extends Certificate> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an immutable List of the {@code Certificate}s contained
in the {@code CertPath}.

@return a list of {@code Certificate}s in the {@code CertPath}."
      end

      operation 905883 "getEncoded"
	abstract public explicit_return_type "byte"
	nparams 0
	nexceptions 1
	  exception class_ref 209691 // CertificateEncodingException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an encoding of the {@code CertPath} using the default encoding.

@return default encoding of the {@code CertPath}.
@throws CertificateEncodingException
            if the encoding fails."
      end

      operation 906011 "getEncoded"
	abstract public explicit_return_type "byte"
	nparams 1
	  param inout name "encoding" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 209691 // CertificateEncodingException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an encoding of this {@code CertPath} using the given
{@code encoding} from {@link #getEncodings()}.

@throws CertificateEncodingException
            if the encoding fails."
      end

      operation 906139 "getEncodings"
	abstract public return_type class_ref 155803 // Iterator
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an {@code Iterator} over the supported encodings for a
representation of the certificate path.

@return {@code Iterator} over supported encodings (as {@code String}s)."
      end

      operation 906267 "writeReplace"
	protected return_type class_ref 3401484 // Object
	nparams 0
	nexceptions 1
	  exception class_ref 139291 // ObjectStreamException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an alternate object to be serialized.

@return an alternate object to be serialized.
@throws ObjectStreamException
            if the creation of the alternate object fails."
      end

      class 210843 "CertPathRep"
	visibility protected 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 307227 // <realization>
	  relation 307227 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 307227 // <realization>
	    b parent class_ref 128155 // Serializable
	end

	attribute 259355 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " 3015633072427920915L"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 307355 // type (<unidirectional association>)
	  relation 307355 --->
	    a role_name "type" const_relation private
	      comment " Standard name of the type of certificates in this path
"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 307355 // type (<unidirectional association>)
	    b parent class_ref 3399692 // String
	end

	attribute 259483 "data"
	  const_attribute private explicit_type "byte"
	  multiplicity "[]"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " cert path data"
	end

	classrelation 307483 // serialPersistentFields (<unidirectional association>)
	  relation 307483 --->
	    a role_name "serialPersistentFields" multiplicity "[]" init_value " {
            new ObjectStreamField(\"type\", String.class),
            new ObjectStreamField(\"data\", byte[].class, true),
        }" class_relation const_relation private
	      comment " Force default serialization to use writeUnshared/readUnshared
 for cert path data
"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	      classrelation_ref 307483 // serialPersistentFields (<unidirectional association>)
	    b parent class_ref 131355 // ObjectStreamField
	end

	operation 906395 "CertPathRep"
	  protected explicit_return_type ""
	  nparams 2
	    param inout name "type" type class_ref 3399692 // String
	    param inout name "data" explicit_type "byte"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Creates a new {@code CertPathRep} instance with the specified type
and encoded data.

@param type
           the certificate type.
@param data
           the encoded data."
	end

	operation 906523 "readResolve"
	  protected return_type class_ref 3401484 // Object
	  nparams 0
	  nexceptions 1
	    exception class_ref 139291 // ObjectStreamException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Deserializes a {@code CertPath} from a serialized {@code CertPathRep}
object.

@return the deserialized {@code CertPath}.
@throws ObjectStreamException
            if deserialization fails."
	end
      end
    end

    class 204059 "CertificateException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The base class for all {@code Certificate} related exceptions."
      classrelation 305691 // <generalisation>
	relation 305691 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 305691 // <generalisation>
	  b parent class_ref 200603 // GeneralSecurityException
      end

      attribute 258587 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 3192535253797119798L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 900123 "CertificateException"
	public explicit_return_type ""
	nparams 1
	  param inout name "msg" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code CertificateException} with the specified message.

@param msg
           the detail message for the exception."
      end

      operation 900251 "CertificateException"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code CertificateException}."
      end

      operation 900379 "CertificateException"
	public explicit_return_type ""
	nparams 2
	  param inout name "message" type class_ref 3399692 // String
	  param inout name "cause" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code CertificateException} with the specified message and
cause.

@param message
           the detail message for the exception.
@param cause
           the cause."
      end

      operation 900507 "CertificateException"
	public explicit_return_type ""
	nparams 1
	  param inout name "cause" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code CertificateException} with the specified cause.

@param cause
           the cause"
      end
    end

    class 209691 "CertificateEncodingException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The exception that is thrown when an error occurs while a {@code Certificate}
is being encoded."
      classrelation 305819 // <generalisation>
	relation 305819 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 305819 // <generalisation>
	  b parent class_ref 204059 // CertificateException
      end

      attribute 258715 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 6219492851589449162L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 900635 "CertificateEncodingException"
	public explicit_return_type ""
	nparams 1
	  param inout name "msg" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code CertificateEncodingException} with the specified
message.

@param msg
           The detail message for the exception."
      end

      operation 900763 "CertificateEncodingException"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code CertificateEncodingException}."
      end

      operation 900891 "CertificateEncodingException"
	public explicit_return_type ""
	nparams 2
	  param inout name "message" type class_ref 3399692 // String
	  param inout name "cause" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code CertificateEncodingException} with the specified
message and cause.

@param message
           the detail message for the exception.
@param cause
           the cause."
      end

      operation 901019 "CertificateEncodingException"
	public explicit_return_type ""
	nparams 1
	  param inout name "cause" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code CertificateEncodingException} with the specified
cause.

@param cause
           the cause."
      end
    end

    class 209947 "CertificateExpiredException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The exception that is thrown when a {@code Certificate} has expired."
      classrelation 305947 // <generalisation>
	relation 305947 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 305947 // <generalisation>
	  b parent class_ref 204059 // CertificateException
      end

      attribute 258843 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 9071001339691533771L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 901147 "CertificateExpiredException"
	public explicit_return_type ""
	nparams 1
	  param inout name "msg" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code CertificateExpiredException} with the specified
message.

@param msg
           the detail message for this exception"
      end

      operation 901275 "CertificateExpiredException"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code CertificateExpiredException}."
      end
    end

    class 210075 "CertificateFactory"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class implements the functionality of a certificate factory algorithm,
relying on parsing a stream of bytes.
<p>
It defines methods for parsing certificate chains (certificate paths) and
<i>Certificate Revocation Lists</i> (CRLs)."
      classrelation 306075 // SERVICE (<unidirectional association>)
	relation 306075 --->
	  a role_name "SERVICE" init_value " \"CertificateFactory\"" class_relation const_relation private
	    comment " Store CertificateFactory service name
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 306075 // SERVICE (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 306203 // ENGINE (<unidirectional association>)
	relation 306203 --->
	  a role_name "ENGINE" init_value " new Engine(SERVICE)" class_relation const_relation private
	    comment " Used to access common engine functionality
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 306203 // ENGINE (<unidirectional association>)
	  b parent class_ref 195355 // Engine
      end

      classrelation 306331 // provider (<unidirectional association>)
	relation 306331 --->
	  a role_name "provider" const_relation private
	    comment " Store used provider
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 306331 // provider (<unidirectional association>)
	  b parent class_ref 195611 // Provider
      end

      classrelation 306459 // spiImpl (<unidirectional association>)
	relation 306459 --->
	  a role_name "spiImpl" const_relation private
	    comment " Store used CertificateFactorySpi implementation
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 306459 // spiImpl (<unidirectional association>)
	  b parent class_ref 210203 // CertificateFactorySpi
      end

      classrelation 306587 // type (<unidirectional association>)
	relation 306587 --->
	  a role_name "type" const_relation private
	    comment " Store used type
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 306587 // type (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      operation 901403 "CertificateFactory"
	protected explicit_return_type ""
	nparams 3
	  param inout name "certFacSpi" type class_ref 210203 // CertificateFactorySpi
	  param inout name "provider" type class_ref 195611 // Provider
	  param inout name "type" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code CertificateFactory} instance.

@param certFacSpi
           the implementation delegate.
@param provider
           the associated provider.
@param type
           the certificate type."
      end

      operation 901531 "getInstance"
	class_operation public return_type class_ref 210075 // CertificateFactory
	nparams 1
	  param inout name "type" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 204059 // CertificateException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code CertificateFactory} instance that provides the
requested certificate type.

@param type
           the certificate type.
@return the new {@code CertificateFactory} instance.
@throws CertificateException
            if the specified certificate type is not available at any
            installed provider.
@throws NullPointerException if {@code type == null}"
      end

      operation 901659 "getInstance"
	class_operation public return_type class_ref 210075 // CertificateFactory
	nparams 2
	  param inout name "type" type class_ref 3399692 // String
	  param inout name "provider" type class_ref 3399692 // String
	nexceptions 2
	  exception class_ref 204059 // CertificateException
	  exception class_ref 195995 // NoSuchProviderException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code CertificateFactory} instance from the specified
provider that provides the requested certificate type.

@param type
           the certificate type.
@param provider
           the name of the provider providing certificates of the
           specified type.
@return the new {@code CertificateFactory} instance.
@throws CertificateException
            if the specified certificate type is not available by the
            specified provider.
@throws NoSuchProviderException
            if no provider with the specified name can be found.
@throws IllegalArgumentException if {@code provider == null || provider.isEmpty()}
@throws NullPointerException
            it {@code type} is {@code null}."
      end

      operation 901787 "getInstance"
	class_operation public return_type class_ref 210075 // CertificateFactory
	nparams 2
	  param inout name "type" type class_ref 3399692 // String
	  param inout name "provider" type class_ref 195611 // Provider
	nexceptions 1
	  exception class_ref 204059 // CertificateException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code CertificateFactory} instance from the specified
provider that provides the requested certificate type.

@param type
           the certificate type.
@param provider
           the name of the provider providing certificates of the
           specified type.
@return the new {@code CertificateFactory} instance.
@throws CertificateException
            if the specified certificate type is not available at the
            specified provider.
@throws IllegalArgumentException
            if the specified provider is {@code null}.
@throws NullPointerException if {@code type == null}
@throws IllegalArgumentException if {@code provider == null}"
      end

      operation 901915 "getProvider"
	public return_type class_ref 195611 // Provider
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code Provider} of the certificate factory represented by
the certificate.

@return the provider of this certificate factory."
      end

      operation 902043 "getType"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the Certificate type.

@return type of certificate being used."
      end

      operation 902171 "generateCertificate"
	public return_type class_ref 173595 // Certificate
	nparams 1
	  param inout name "inStream" type class_ref 131867 // InputStream
	nexceptions 1
	  exception class_ref 204059 // CertificateException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generates and initializes a {@code Certificate} from the provided input
stream.

@param inStream
           the stream from where data is read to create the {@code
           Certificate}.
@return an initialized Certificate.
@throws CertificateException
            if parsing problems are detected."
      end

      operation 902299 "getCertPathEncodings"
	public return_type class_ref 155803 // Iterator
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an {@code Iterator} over the supported {@code CertPath} encodings
(as Strings). The first element is the default encoding scheme to apply.

@return an iterator over supported {@link CertPath} encodings (as
        Strings)."
      end

      operation 902427 "generateCertPath"
	public return_type class_ref 200219 // CertPath
	nparams 1
	  param inout name "inStream" type class_ref 131867 // InputStream
	nexceptions 1
	  exception class_ref 204059 // CertificateException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generates a {@code CertPath} (a certificate chain) from the provided
{@code InputStream}. The default encoding scheme is applied.

@param inStream
           {@code InputStream} with encoded data.
@return a {@code CertPath} initialized from the provided data.
@throws CertificateException
            if parsing problems are detected."
      end

      operation 902555 "generateCertPath"
	public return_type class_ref 200219 // CertPath
	nparams 2
	  param inout name "inputStream" type class_ref 131867 // InputStream
	  param inout name "encoding" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 204059 // CertificateException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generates a {@code CertPath} (a certificate chain) from the given
{@code inputStream}, assuming the given {@code encoding} from
{@link #getCertPathEncodings()}.

@throws CertificateException
            if parsing problems are detected.
@throws UnsupportedOperationException
            if the provider does not implement this method."
      end

      operation 902683 "generateCertPath"
	public return_type class_ref 200219 // CertPath
	nparams 1
	  param inout name "certificates" type class_ref 131483 // List
	nexceptions 1
	  exception class_ref 204059 // CertificateException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends Certificate> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generates a {@code CertPath} from the provided list of certificates. The
encoding is the default encoding.

@param certificates
           the list containing certificates in a format supported by the
           {@code CertificateFactory}.
@return a {@code CertPath} initialized from the provided data.
@throws CertificateException
            if parsing problems are detected.
@throws UnsupportedOperationException
            if the provider does not implement this method."
      end

      operation 902811 "generateCertificates"
	public return_type class_ref 160667 // Collection
	nparams 1
	  param inout name "inStream" type class_ref 131867 // InputStream
	nexceptions 1
	  exception class_ref 204059 // CertificateException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<? extends Certificate> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generates and initializes a collection of (unrelated) certificates from
the provided input stream.

@param inStream
           the stream from which the data is read to create the
           collection.
@return an initialized collection of certificates.
@throws CertificateException
            if parsing problems are detected."
      end

      operation 902939 "generateCRL"
	public return_type class_ref 210331 // CRL
	nparams 1
	  param inout name "inStream" type class_ref 131867 // InputStream
	nexceptions 1
	  exception class_ref 210459 // CRLException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generates and initializes a <i>Certificate Revocation List</i> (CRL) from
the provided input stream.

@param inStream
           the stream from where data is read to create the CRL.
@return an initialized CRL.
@exception CRLException
               if parsing problems are detected."
      end

      operation 903067 "generateCRLs"
	public return_type class_ref 160667 // Collection
	nparams 1
	  param inout name "inStream" type class_ref 131867 // InputStream
	nexceptions 1
	  exception class_ref 210459 // CRLException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<? extends CRL> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generates and initializes a collection of <i>Certificate Revocation
List</i> (CRL) from the provided input stream.

@param inStream
           the stream from which the data is read to create the CRLs.
@return an initialized collection of CRLs.
@exception CRLException
               if parsing problems are detected."
      end
    end

    class 210203 "CertificateFactorySpi"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class defines the <i>Service Provider Interface</i> (<b>SPI</b>) for the
{@code CertificateFactory} class. This SPI must be implemented for each
certificate type a security provider wishes to support."
      operation 903195 "CertificateFactorySpi"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a new instance of this class."
      end

      operation 903323 "engineGenerateCertificate"
	abstract public return_type class_ref 173595 // Certificate
	nparams 1
	  param inout name "inStream" type class_ref 131867 // InputStream
	nexceptions 1
	  exception class_ref 204059 // CertificateException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generates and initializes a {@code Certificate} from the provided input
stream.

@param inStream
           the stream from which the data is read to create the
           certificate.
@return an initialized certificate.
@exception CertificateException
               if parsing problems are detected."
      end

      operation 903451 "engineGenerateCertificates"
	abstract public return_type class_ref 160667 // Collection
	nparams 1
	  param inout name "inStream" type class_ref 131867 // InputStream
	nexceptions 1
	  exception class_ref 204059 // CertificateException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<? extends Certificate> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generates and initializes a collection of certificates from the provided
input stream.

@param inStream
           the stream from where data is read to create the certificates.
@return a collection of certificates.
@exception CertificateException
               if parsing problems are detected."
      end

      operation 903579 "engineGenerateCRL"
	abstract public return_type class_ref 210331 // CRL
	nparams 1
	  param inout name "inStream" type class_ref 131867 // InputStream
	nexceptions 1
	  exception class_ref 210459 // CRLException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generates and initializes a <i>Certificate Revocation List</i> (CRL) from
the provided input stream.

@param inStream
           the stream from where data is read to create the CRL.
@return an CRL instance.
@exception CRLException
               if parsing problems are detected."
      end

      operation 903707 "engineGenerateCRLs"
	abstract public return_type class_ref 160667 // Collection
	nparams 1
	  param inout name "inStream" type class_ref 131867 // InputStream
	nexceptions 1
	  exception class_ref 210459 // CRLException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<? extends CRL> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generates and initializes a collection of <i>Certificate Revocation
List</i> (CRL) from the provided input stream.

@param inStream
           the stream from which the data is read to create the CRLs.
@return a collection of CRLs.
@exception CRLException
               if parsing problems are detected."
      end

      operation 903835 "engineGenerateCertPath"
	public return_type class_ref 200219 // CertPath
	nparams 1
	  param inout name "inStream" type class_ref 131867 // InputStream
	nexceptions 1
	  exception class_ref 204059 // CertificateException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generates a {@code CertPath} from the provided {@code InputStream}. The
default encoding scheme is applied.

@param inStream
           an input stream with encoded data.
@return a {@code CertPath} initialized from the provided data.
@throws CertificateException
            if parsing problems are detected."
      end

      operation 903963 "engineGenerateCertPath"
	public return_type class_ref 200219 // CertPath
	nparams 2
	  param inout name "inStream" type class_ref 131867 // InputStream
	  param inout name "encoding" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 204059 // CertificateException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generates a {@code CertPath} (a certificate chain) from the given
{@code inputStream}, assuming the given {@code encoding} from
{@link #engineGetCertPathEncodings()}.

@throws CertificateException
            if parsing problems are detected.
@throws UnsupportedOperationException
            if the provider does not implement this method."
      end

      operation 904091 "engineGenerateCertPath"
	public return_type class_ref 200219 // CertPath
	nparams 1
	  param inout name "certificates" type class_ref 131483 // List
	nexceptions 1
	  exception class_ref 204059 // CertificateException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<? extends Certificate> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generates a {@code CertPath} from the provided list of certificates. The
encoding is the default encoding.

@param certificates
           the list containing certificates in a format supported by the
           {@code CertificateFactory}.
@return a {@code CertPath} initialized from the provided data.
@throws CertificateException
            if parsing problems are detected.
@throws UnsupportedOperationException
            if the provider does not implement this method."
      end

      operation 904219 "engineGetCertPathEncodings"
	public return_type class_ref 155803 // Iterator
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an {@code Iterator} over the supported {@code CertPath} encodings
(as Strings). The first element is the default encoding.

@return an iterator over supported {@code CertPath} encodings (as
        Strings)."
      end
    end

    class 210331 "CRL"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class represents Certificate Revocation Lists (CRLs) maintained by a
certificate authority. They are used to indicate that a given Certificate has
expired and consequently has become invalid.

@see CertificateFactory"
      classrelation 311963 // type (<unidirectional association>)
	relation 311963 --->
	  a role_name "type" const_relation private
	    comment " The CRL type
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 311963 // type (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      operation 914331 "CRL"
	protected explicit_return_type ""
	nparams 1
	  param inout name "type" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new certificate revocation list of the specified type.

@param type
           the type for the CRL."
      end

      operation 914459 "getType"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the type of this CRL.

@return the type of this CRL."
      end

      operation 914587 "isRevoked"
	abstract public explicit_return_type "boolean"
	nparams 1
	  param inout name "cert" type class_ref 173595 // Certificate
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the specified certificate is revoked by this CRL.

@param cert
           the certificate to check.
@return {@code true} if the certificate is revoked by this CRL, otherwise
        {@code false}."
      end

      operation 914715 "toString"
	abstract public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the string representation of this instance.

@return the string representation of this instance."
      end
    end

    class 210459 "CRLException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The exception that is thrown if errors occur during handling of {@code CRL}s."
      classrelation 312091 // <generalisation>
	relation 312091 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 312091 // <generalisation>
	  b parent class_ref 200603 // GeneralSecurityException
      end

      attribute 260123 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -6694728944094197147L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 914843 "CRLException"
	public explicit_return_type ""
	nparams 1
	  param inout name "msg" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code CRLException} with the specified message.

@param msg
           the detail message for this exception."
      end

      operation 914971 "CRLException"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code CRLException}."
      end

      operation 915099 "CRLException"
	public explicit_return_type ""
	nparams 2
	  param inout name "message" type class_ref 3399692 // String
	  param inout name "cause" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code CRLException} with the specified message and cause.

@param message
           the detail message for this exception.
@param cause
           the cause for this exception."
      end

      operation 915227 "CRLException"
	public explicit_return_type ""
	nparams 1
	  param inout name "cause" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code CRLException} with the specified cause.

@param cause
           the cause for this exception."
      end
    end

    class 210587 "CertificateNotYetValidException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The exception that is thrown when a {@code Certificate} is not yet valid or
will not yet be valid on a specified date."
      classrelation 306715 // <generalisation>
	relation 306715 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 306715 // <generalisation>
	  b parent class_ref 204059 // CertificateException
      end

      attribute 258971 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 4355919900041064702L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 904347 "CertificateNotYetValidException"
	public explicit_return_type ""
	nparams 1
	  param inout name "msg" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code CertificateNotYetValidException} with the specified
message.

@param msg
           the detail message for the exception."
      end

      operation 904475 "CertificateNotYetValidException"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code CertificateNotYetValidException}."
      end
    end

    class 210715 "CertificateParsingException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The exception that is thrown when a {@code Certificate} can not be parsed."
      classrelation 306843 // <generalisation>
	relation 306843 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 306843 // <generalisation>
	  b parent class_ref 204059 // CertificateException
      end

      attribute 259099 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -7989222416793322029L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 904603 "CertificateParsingException"
	public explicit_return_type ""
	nparams 1
	  param inout name "msg" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code CertificateParsingException} with the specified
message.

@param msg
           the detail message for the exception."
      end

      operation 904731 "CertificateParsingException"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code CertificateParsingException}."
      end

      operation 904859 "CertificateParsingException"
	public explicit_return_type ""
	nparams 2
	  param inout name "message" type class_ref 3399692 // String
	  param inout name "cause" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code CertificateParsingException} with the specified
message and cause.

@param message
           the detail message for the exception.
@param cause
           the exception's source."
      end

      operation 904987 "CertificateParsingException"
	public explicit_return_type ""
	nparams 1
	  param inout name "cause" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code CertificateParsingException} with the specified
cause.

@param cause
           the exception's source."
      end
    end

    class 210971 "CertPathBuilder"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class implements the functionality of a builder for an unverified
<i>Certification Path</i>s from a specified certificate to a trust anchor."
      classrelation 307611 // SERVICE (<unidirectional association>)
	relation 307611 --->
	  a role_name "SERVICE" init_value " \"CertPathBuilder\"" class_relation const_relation private
	    comment " Store CertPathBuilder service name
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 307611 // SERVICE (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 307739 // ENGINE (<unidirectional association>)
	relation 307739 --->
	  a role_name "ENGINE" init_value " new Engine(SERVICE)" class_relation const_relation private
	    comment " Used to access common engine functionality
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 307739 // ENGINE (<unidirectional association>)
	  b parent class_ref 195355 // Engine
      end

      classrelation 307867 // PROPERTY_NAME (<unidirectional association>)
	relation 307867 --->
	  a role_name "PROPERTY_NAME" init_value " \"certpathbuilder.type\"" class_relation const_relation private
	    comment " Store default property name
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 307867 // PROPERTY_NAME (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 307995 // DEFAULT_PROPERTY (<unidirectional association>)
	relation 307995 --->
	  a role_name "DEFAULT_PROPERTY" init_value " \"PKIX\"" class_relation const_relation private
	    comment " Default value of CertPathBuilder type.
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 307995 // DEFAULT_PROPERTY (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 308123 // provider (<unidirectional association>)
	relation 308123 --->
	  a role_name "provider" const_relation private
	    comment " Store used provider
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 308123 // provider (<unidirectional association>)
	  b parent class_ref 195611 // Provider
      end

      classrelation 308251 // spiImpl (<unidirectional association>)
	relation 308251 --->
	  a role_name "spiImpl" const_relation private
	    comment " Store spi implementation
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 308251 // spiImpl (<unidirectional association>)
	  b parent class_ref 211099 // CertPathBuilderSpi
      end

      classrelation 308379 // algorithm (<unidirectional association>)
	relation 308379 --->
	  a role_name "algorithm" const_relation private
	    comment " Store algorithm name
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 308379 // algorithm (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      operation 906651 "CertPathBuilder"
	protected explicit_return_type ""
	nparams 3
	  param inout name "builderSpi" type class_ref 211099 // CertPathBuilderSpi
	  param inout name "provider" type class_ref 195611 // Provider
	  param inout name "algorithm" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code CertPathBuilder}.

@param builderSpi
           the implementation delegate.
@param provider
           the provider.
@param algorithm
           the desired algorithm available at the provider."
      end

      operation 906779 "getAlgorithm"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the algorithm name of this instance.

@return the algorithm name of this instance."
      end

      operation 906907 "getProvider"
	public return_type class_ref 195611 // Provider
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the provider of this instance.

@return the provider of this instance."
      end

      operation 907035 "getInstance"
	class_operation public return_type class_ref 210971 // CertPathBuilder
	nparams 1
	  param inout name "algorithm" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 195867 // NoSuchAlgorithmException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code CertPathBuilder} instance with the specified
algorithm.

@param algorithm
           the name of the algorithm.
@return a builder for the requested algorithm.
@throws NullPointerException
            if the algorithm is {@code null}.
@throws NoSuchAlgorithmException
            if no installed provider can provide the algorithm."
      end

      operation 907163 "getInstance"
	class_operation public return_type class_ref 210971 // CertPathBuilder
	nparams 2
	  param inout name "algorithm" type class_ref 3399692 // String
	  param inout name "provider" type class_ref 3399692 // String
	nexceptions 2
	  exception class_ref 195867 // NoSuchAlgorithmException
	  exception class_ref 195995 // NoSuchProviderException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code CertPathBuilder} instance from the specified
provider providing the specified algorithm.

@param algorithm
           the name of the algorithm.
@param provider
           the name of the provider.
@return a builder for the requested algorithm.
@throws NoSuchAlgorithmException
            if the specified provider cannot provide the algorithm.
@throws NoSuchProviderException
            if no provider with the specified name can be found.
@throws NullPointerException
            if algorithm is {@code null}.
@throws IllegalArgumentException if {@code provider == null || provider.isEmpty()}"
      end

      operation 907291 "getInstance"
	class_operation public return_type class_ref 210971 // CertPathBuilder
	nparams 2
	  param inout name "algorithm" type class_ref 3399692 // String
	  param inout name "provider" type class_ref 195611 // Provider
	nexceptions 1
	  exception class_ref 195867 // NoSuchAlgorithmException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code CertPathBuilder} instance from the specified
provider providing the specified algorithm.

@param algorithm
           the name of the algorithm.
@param provider
           the provider.
@return a builder for the requested algorithm
@throws NoSuchAlgorithmException
            if the specified provider cannot provide the algorithm.
@throws IllegalArgumentException if {@code provider == null}
@throws NullPointerException
            if algorithm is {@code null}."
      end

      operation 907419 "build"
	public return_type class_ref 211227 // CertPathBuilderResult
	nparams 1
	  param inout name "params" type class_ref 211355 // CertPathParameters
	nexceptions 2
	  exception class_ref 211483 // CertPathBuilderException
	  exception class_ref 196251 // InvalidAlgorithmParameterException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Builds a certification path with the specified algorithm parameters.

@param params
           the algorithm parameters.
@return the built certification path.
@throws CertPathBuilderException
            if the build fails.
@throws InvalidAlgorithmParameterException
            if the specified parameters cannot be used to build with this
            builder.
@see CertPathBuilderResult"
      end

      operation 907547 "getDefaultType"
	class_operation public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the default {@code CertPathBuilder} type from the <i>Security
Properties</i>.

@return the default {@code CertPathBuilder} type from the <i>Security
        Properties</i>, or the string \"{@code PKIX}\" if it cannot be
        determined."
      end
    end

    class 211099 "CertPathBuilderSpi"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The <i>Service Provider Interface</i> (<b>SPI</b>) for the {@code
CertPathBuilder} class to be implemented by security providers."
      operation 908443 "CertPathBuilderSpi"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code CertPathBuilderSpi} instance."
      end

      operation 908571 "engineBuild"
	abstract public return_type class_ref 211227 // CertPathBuilderResult
	nparams 1
	  param inout name "params" type class_ref 211355 // CertPathParameters
	nexceptions 2
	  exception class_ref 211483 // CertPathBuilderException
	  exception class_ref 196251 // InvalidAlgorithmParameterException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Builds a certification path with the specified algorithm parameters.

@param params
           the algorithm parameters.
@return a result of the build.
@throws CertPathBuilderException
            if the build fails.
@throws InvalidAlgorithmParameterException
            if the specified parameters cannot be used to build the path
            with this builder."
      end
    end

    class 211227 "CertPathBuilderResult"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The interface for results generated by
{@link CertPathBuilder#build(CertPathParameters)}."
      classrelation 308635 // <generalisation>
	relation 308635 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 308635 // <generalisation>
	  b parent class_ref 129435 // Cloneable
      end

      operation 908187 "clone"
	public return_type class_ref 3401484 // Object
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Clones this {@code CertPathBuilderResult} instance.

@return the copy of this instance."
      end

      operation 908315 "getCertPath"
	public return_type class_ref 200219 // CertPath
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the built {@code CertPath} instance. Never returns {@code null}.

@return the built certificate path instance."
      end
    end

    class 211355 "CertPathParameters"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The interface specification for certification path algorithm parameters.
<p>
This interface is for grouping purposes of {@code CertPath} parameter
implementations."
      classrelation 308763 // <generalisation>
	relation 308763 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 308763 // <generalisation>
	  b parent class_ref 129435 // Cloneable
      end

      operation 908699 "clone"
	public return_type class_ref 3401484 // Object
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Clones this {@code CertPathParameters} instance.

@return the cloned instance."
      end
    end

    class 211483 "CertPathBuilderException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The exception that is thrown when a {@code CertPathBuilder} method fails."
      classrelation 308507 // <generalisation>
	relation 308507 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 308507 // <generalisation>
	  b parent class_ref 200603 // GeneralSecurityException
      end

      attribute 259611 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 5316471420178794402L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 907675 "CertPathBuilderException"
	public explicit_return_type ""
	nparams 2
	  param inout name "msg" type class_ref 3399692 // String
	  param inout name "cause" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code CertPathBuilderException} with the specified message
and cause.

@param msg
           the detail message for the exception
@param cause
           why the building of the certification path failed."
      end

      operation 907803 "CertPathBuilderException"
	public explicit_return_type ""
	nparams 1
	  param inout name "cause" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code CertPathBuilderException} with the specified cause.

@param cause
           why the building of the certification path failed."
      end

      operation 907931 "CertPathBuilderException"
	public explicit_return_type ""
	nparams 1
	  param inout name "msg" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code CertPathBuilderException} with the specified
message.

@param msg
           the detail message for the exception."
      end

      operation 908059 "CertPathBuilderException"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code CertPathBuilderException}."
      end
    end

    class 211611 "CertPathValidator"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class provides the functionality for validating certification paths
(certificate chains) establishing a trust chain from a certificate to a trust
anchor."
      classrelation 308891 // SERVICE (<unidirectional association>)
	relation 308891 --->
	  a role_name "SERVICE" init_value " \"CertPathValidator\"" class_relation const_relation private
	    comment " Store CertPathValidator implementation service name
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 308891 // SERVICE (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 309019 // ENGINE (<unidirectional association>)
	relation 309019 --->
	  a role_name "ENGINE" init_value " new Engine(SERVICE)" class_relation const_relation private
	    comment " Used to access common engine functionality
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 309019 // ENGINE (<unidirectional association>)
	  b parent class_ref 195355 // Engine
      end

      classrelation 309147 // PROPERTY_NAME (<unidirectional association>)
	relation 309147 --->
	  a role_name "PROPERTY_NAME" init_value " \"certpathvalidator.type\"" class_relation const_relation private
	    comment " Store default property name
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 309147 // PROPERTY_NAME (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 309275 // DEFAULT_PROPERTY (<unidirectional association>)
	relation 309275 --->
	  a role_name "DEFAULT_PROPERTY" init_value " \"PKIX\"" class_relation const_relation private
	    comment " Default value of CertPathBuilder type. It returns if certpathbuild.type
 property is not defined in java.security file
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 309275 // DEFAULT_PROPERTY (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 309403 // provider (<unidirectional association>)
	relation 309403 --->
	  a role_name "provider" const_relation private
	    comment " Store used provider
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 309403 // provider (<unidirectional association>)
	  b parent class_ref 195611 // Provider
      end

      classrelation 309531 // spiImpl (<unidirectional association>)
	relation 309531 --->
	  a role_name "spiImpl" const_relation private
	    comment " Store used spi implementation
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 309531 // spiImpl (<unidirectional association>)
	  b parent class_ref 211739 // CertPathValidatorSpi
      end

      classrelation 309659 // algorithm (<unidirectional association>)
	relation 309659 --->
	  a role_name "algorithm" const_relation private
	    comment " Store used algorithm value
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 309659 // algorithm (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      operation 908827 "CertPathValidator"
	protected explicit_return_type ""
	nparams 3
	  param inout name "validatorSpi" type class_ref 211739 // CertPathValidatorSpi
	  param inout name "provider" type class_ref 195611 // Provider
	  param inout name "algorithm" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code CertPathValidator} instance.

@param validatorSpi
           the implementation delegate.
@param provider
           the security provider.
@param algorithm
           the name of the algorithm."
      end

      operation 908955 "getAlgorithm"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the certification path algorithm name.

@return the certification path algorithm name."
      end

      operation 909083 "getProvider"
	public return_type class_ref 195611 // Provider
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the security provider.

@return the provider."
      end

      operation 909211 "getInstance"
	class_operation public return_type class_ref 211611 // CertPathValidator
	nparams 1
	  param inout name "algorithm" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 195867 // NoSuchAlgorithmException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new certification path validator for the specified algorithm.

@param algorithm
           the algorithm name.
@return a certification path validator for the requested algorithm.
@throws NoSuchAlgorithmException
            if no installed provider provides the specified algorithm.
@throws NullPointerException
            if algorithm is {@code null}."
      end

      operation 909339 "getInstance"
	class_operation public return_type class_ref 211611 // CertPathValidator
	nparams 2
	  param inout name "algorithm" type class_ref 3399692 // String
	  param inout name "provider" type class_ref 3399692 // String
	nexceptions 2
	  exception class_ref 195867 // NoSuchAlgorithmException
	  exception class_ref 195995 // NoSuchProviderException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new certification path validator for the specified algorithm
from the specified provider.

@param algorithm
           the algorithm name.
@param provider
           the security provider name.
@return a certification path validator for the requested algorithm.
@throws NoSuchAlgorithmException
            if the specified security provider cannot provide the
            requested algorithm.
@throws NoSuchProviderException
            if no provider with the specified name can be found.
@throws NullPointerException
            if algorithm is {@code null}.
@throws IllegalArgumentException if {@code provider == null || provider.isEmpty()}"
      end

      operation 909467 "getInstance"
	class_operation public return_type class_ref 211611 // CertPathValidator
	nparams 2
	  param inout name "algorithm" type class_ref 3399692 // String
	  param inout name "provider" type class_ref 195611 // Provider
	nexceptions 1
	  exception class_ref 195867 // NoSuchAlgorithmException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new certification path validator for the specified algorithm
from the specified provider.

@param algorithm
           the algorithm name.
@param provider
           the security provider name.
@return a certification path validator for the requested algorithm.
@throws NoSuchAlgorithmException
            if the specified provider cannot provide the requested
            algorithm.
@throws IllegalArgumentException if {@code provider == null}
@throws NullPointerException
            if algorithm is {@code null}."
      end

      operation 909595 "validate"
	public return_type class_ref 211867 // CertPathValidatorResult
	nparams 2
	  param inout name "certPath" type class_ref 200219 // CertPath
	  param inout name "params" type class_ref 211355 // CertPathParameters
	nexceptions 2
	  exception class_ref 211995 // CertPathValidatorException
	  exception class_ref 196251 // InvalidAlgorithmParameterException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Validates the {@code CertPath} with the algorithm of this {@code
CertPathValidator} using the specified algorithm parameters.

@param certPath
           the certification path to be validated.
@param params
           the certification path validator algorithm parameters.
@return the validation result.
@throws CertPathValidatorException
            if the validation fails, or the algorithm of the specified
            certification path cannot be validated using the algorithm of
            this instance.
@throws InvalidAlgorithmParameterException
            if the specified algorithm parameters cannot be used with
            this algorithm.
@see CertPathValidatorResult"
      end

      operation 909723 "getDefaultType"
	class_operation public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the default {@code CertPathValidator} type from the <i>Security
Properties</i>.

@return the default {@code CertPathValidator} type from the <i>Security
        Properties</i>, or the string {@code \"PKIX\"} if it cannot be
        determined."
      end
    end

    class 211739 "CertPathValidatorSpi"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The <i>Service Provider Interface</i> (<b>SPI</b>) for the {@code
CertPathValidator} class to be implemented by security providers."
      operation 910875 "CertPathValidatorSpi"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code CertPathValidatorSpi} instance."
      end

      operation 911003 "engineValidate"
	abstract public return_type class_ref 211867 // CertPathValidatorResult
	nparams 2
	  param inout name "certPath" type class_ref 200219 // CertPath
	  param inout name "params" type class_ref 211355 // CertPathParameters
	nexceptions 2
	  exception class_ref 211995 // CertPathValidatorException
	  exception class_ref 196251 // InvalidAlgorithmParameterException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Validates the {@code CertPath} with the algorithm of this {@code
CertPathValidator} using the specified algorithm parameters.

@param certPath
           the certification path to be validated.
@param params
           the certification path validator algorithm parameters.
@return the validation result.
@throws CertPathValidatorException
            if the validation fails, or the algorithm of the specified
            certification path cannot be validated using the algorithm of
            this instance.
@throws InvalidAlgorithmParameterException
            if the specified algorithm parameters cannot be used with
            this algorithm."
      end
    end

    class 211867 "CertPathValidatorResult"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The interface specification for certification path validation results.
<p>
This interface is for grouping purposes of validation result implementations."
      classrelation 310043 // <generalisation>
	relation 310043 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 310043 // <generalisation>
	  b parent class_ref 129435 // Cloneable
      end

      operation 910747 "clone"
	public return_type class_ref 3401484 // Object
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Clones this {@code CertPathValidatorResult} instance.

@return the cloned instance."
      end
    end

    class 211995 "CertPathValidatorException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The exception that is thrown when a certification path (or certificate chain)
cannot be validated.
<p>
A {@code CertPathValidatorException} may optionally include the certification
path instance that failed the validation and the index of the failed
certificate."
      classrelation 309787 // <generalisation>
	relation 309787 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 309787 // <generalisation>
	  b parent class_ref 200603 // GeneralSecurityException
      end

      attribute 259739 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -3083180014971893139L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 309915 // certPath (<unidirectional association>)
	relation 309915 --->
	  a role_name "certPath" private
	    comment "
the certification path.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 309915 // certPath (<unidirectional association>)
	  b parent class_ref 200219 // CertPath
      end

      attribute 259867 "index"
	private explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "the index of the certificate.
"
      end

      operation 909851 "CertPathValidatorException"
	public explicit_return_type ""
	nparams 4
	  param inout name "msg" type class_ref 3399692 // String
	  param inout name "cause" type class_ref 134683 // Throwable
	  param inout name "certPath" type class_ref 200219 // CertPath
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code CertPathValidatorException} with the specified
message , cause, certification path and certificate index in the
certification path.

@param msg
           the detail message for this exception.
@param cause
           the cause.
@param certPath
           the certification path that failed the validation.
@param index
           the index of the failed certificate.
@throws IllegalArgumentException
            if {@code certPath} is {@code null} and index is not {@code
            -1}.
@throws IndexOutOfBoundsException
            if {@code certPath} is not {@code null} and index is not
            referencing an certificate in the certification path."
      end

      operation 909979 "CertPathValidatorException"
	public explicit_return_type ""
	nparams 2
	  param inout name "msg" type class_ref 3399692 // String
	  param inout name "cause" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code CertPathValidatorException} with the specified
message and cause.

@param msg
           the detail message for this exception.
@param cause
           the cause why the path could not be validated."
      end

      operation 910107 "CertPathValidatorException"
	public explicit_return_type ""
	nparams 1
	  param inout name "cause" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code CertPathValidatorException} with the specified
cause.

@param cause
           the cause why the path could not be validated."
      end

      operation 910235 "CertPathValidatorException"
	public explicit_return_type ""
	nparams 1
	  param inout name "msg" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code CertPathValidatorException} with the specified
message.

@param msg
           the detail message for this exception."
      end

      operation 910363 "CertPathValidatorException"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code CertPathValidatorException}."
      end

      operation 910491 "getCertPath"
	public return_type class_ref 200219 // CertPath
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the certification path that failed validation.

@return the certification path that failed validation, or {@code null} if
        none was specified."
      end

      operation 910619 "getIndex"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index of the failed certificate in the certification path.

@return the index of the failed certificate in the certification path, or
        {@code -1} if none was specified."
      end
    end

    class 212123 "CertSelector"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The interface specification to determine whether a {@code
Certificate} meets some criteria.
<p>
The implementations of this interface are typically used to define the
criteria for selecting {@code Certificate}s from a {@code CertStore}.

@see CertStore
@see Certificate"
      classrelation 310171 // <generalisation>
	relation 310171 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 310171 // <generalisation>
	  b parent class_ref 129435 // Cloneable
      end

      operation 911131 "clone"
	public return_type class_ref 3401484 // Object
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Clones this {@code CertSelector} instance.

@return the cloned instance."
      end

      operation 911259 "match"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "cert" type class_ref 173595 // Certificate
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks whether the defined criteria of this instance match the specified
certificate.

@param cert
           the certificate to be evaluated.
@return {@code true} if the certificate matches the criteria, {@code
        false} otherwise."
      end
    end

    class 212251 "CertStore"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class provides the functionality to retrieve {@code Certificate}s and
{@code CRL}s from a read-only repository. This repository may be very large
and may store trusted as well as untrusted certificates."
      classrelation 310299 // SERVICE (<unidirectional association>)
	relation 310299 --->
	  a role_name "SERVICE" init_value " \"CertStore\"" class_relation const_relation private
	    comment " Store spi implementation service name
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 310299 // SERVICE (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 310427 // ENGINE (<unidirectional association>)
	relation 310427 --->
	  a role_name "ENGINE" init_value " new Engine(SERVICE)" class_relation const_relation private
	    comment " Used to access common engine functionality
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 310427 // ENGINE (<unidirectional association>)
	  b parent class_ref 195355 // Engine
      end

      classrelation 310555 // PROPERTY_NAME (<unidirectional association>)
	relation 310555 --->
	  a role_name "PROPERTY_NAME" init_value " \"certstore.type\"" class_relation const_relation private
	    comment " Store default property name
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 310555 // PROPERTY_NAME (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 310683 // DEFAULT_PROPERTY (<unidirectional association>)
	relation 310683 --->
	  a role_name "DEFAULT_PROPERTY" init_value " \"LDAP\"" class_relation const_relation private
	    comment " Default value of CertStore type. It returns if certpathbuild.type
 property is not defined in java.security file
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 310683 // DEFAULT_PROPERTY (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 310811 // provider (<unidirectional association>)
	relation 310811 --->
	  a role_name "provider" const_relation private
	    comment " Store used provider
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 310811 // provider (<unidirectional association>)
	  b parent class_ref 195611 // Provider
      end

      classrelation 310939 // spiImpl (<unidirectional association>)
	relation 310939 --->
	  a role_name "spiImpl" const_relation private
	    comment " Store CertStoreSpi implementation
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 310939 // spiImpl (<unidirectional association>)
	  b parent class_ref 212379 // CertStoreSpi
      end

      classrelation 311067 // type (<unidirectional association>)
	relation 311067 --->
	  a role_name "type" const_relation private
	    comment " Store used type
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 311067 // type (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 311195 // certStoreParams (<unidirectional association>)
	relation 311195 --->
	  a role_name "certStoreParams" const_relation private
	    comment " Store used parameters
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 311195 // certStoreParams (<unidirectional association>)
	  b parent class_ref 212507 // CertStoreParameters
      end

      operation 911387 "CertStore"
	protected explicit_return_type ""
	nparams 4
	  param inout name "storeSpi" type class_ref 212379 // CertStoreSpi
	  param inout name "provider" type class_ref 195611 // Provider
	  param inout name "type" type class_ref 3399692 // String
	  param inout name "params" type class_ref 212507 // CertStoreParameters
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code CertStore} instance.

@param storeSpi
           the implementation delegate.
@param provider
           the security provider.
@param type
           the certificate store type.
@param params
           the certificate store parameters (may be {@code null}."
      end

      operation 911515 "getInstance"
	class_operation public return_type class_ref 212251 // CertStore
	nparams 2
	  param inout name "type" type class_ref 3399692 // String
	  param inout name "params" type class_ref 212507 // CertStoreParameters
	nexceptions 2
	  exception class_ref 196251 // InvalidAlgorithmParameterException
	  exception class_ref 195867 // NoSuchAlgorithmException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code CertStore} instance with the specified type and
initialized with the specified parameters.

@param type
           the certificate store type.
@param params
           the certificate store parameters (may be {@code null}).
@return the new certificate store instance.
@throws NoSuchAlgorithmException
            if no provider can provide the specified certificate store
            type.
@throws InvalidAlgorithmParameterException
            if the specified parameters cannot be used to initialize this
            certificate store instance.
@throws NullPointerException if {@code type == null}"
      end

      operation 911643 "getInstance"
	class_operation public return_type class_ref 212251 // CertStore
	nparams 3
	  param inout name "type" type class_ref 3399692 // String
	  param inout name "params" type class_ref 212507 // CertStoreParameters
	  param inout name "provider" type class_ref 3399692 // String
	nexceptions 3
	  exception class_ref 196251 // InvalidAlgorithmParameterException
	  exception class_ref 195867 // NoSuchAlgorithmException
	  exception class_ref 195995 // NoSuchProviderException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code CertStore} instance from the specified provider with
the specified type and initialized with the specified parameters.

@param type
           the certificate store type.
@param params
           the certificate store parameters (may be {@code null}).
@param provider
           the name of the provider.
@return the new certificate store instance.
@throws NoSuchAlgorithmException
            if the specified provider cannot provide the requested
            certificate store type.
@throws NoSuchProviderException
            if no provider with the specified name can be found.
@throws InvalidAlgorithmParameterException
            if the specified parameters cannot be used to initialize this
            certificate store instance.
@throws IllegalArgumentException if {@code provider == null || provider.isEmpty()}
@throws NullPointerException
            if {@code type} is {@code null}."
      end

      operation 911771 "getInstance"
	class_operation public return_type class_ref 212251 // CertStore
	nparams 3
	  param inout name "type" type class_ref 3399692 // String
	  param inout name "params" type class_ref 212507 // CertStoreParameters
	  param inout name "provider" type class_ref 195611 // Provider
	nexceptions 2
	  exception class_ref 195867 // NoSuchAlgorithmException
	  exception class_ref 196251 // InvalidAlgorithmParameterException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code CertStore} instance from the specified provider with
the specified type and initialized with the specified parameters.
@param type
           the certificate store type.
@param params
           the certificate store parameters (may be {@code null}).
@param provider
           the name of the provider.
@return the new certificate store instance.
@throws NoSuchAlgorithmException
            if the specified provider cannot provide the requested
            certificate store type.
@throws InvalidAlgorithmParameterException
            if the specified parameters cannot be used to initialize this
            certificate store instance.
@throws IllegalArgumentException if {@code provider == null}
@throws NullPointerException if {@code type == null}"
      end

      operation 911899 "getType"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the certificate store type.

@return the certificate store type."
      end

      operation 912027 "getProvider"
	public return_type class_ref 195611 // Provider
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the security provider.

@return the security provider."
      end

      operation 912155 "getCertStoreParameters"
	public return_type class_ref 212507 // CertStoreParameters
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a copy of the certificate store parameters that were used to
initialize this instance.

@return a copy of the certificate store parameters or {@code null} if
        none were specified."
      end

      operation 912283 "getCertificates"
	public return_type class_ref 160667 // Collection
	nparams 1
	  param inout name "selector" type class_ref 212123 // CertSelector
	nexceptions 1
	  exception class_ref 212635 // CertStoreException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<? extends Certificate> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the list of {@code Certificate}s for the specified {@code
CertSelector} from this certificate store.

@param selector
           the selector containing the criteria to search for
           certificates in this certificate store.
@return the list of {@code Certificate}s that match the criteria of the
        specified selector.
@throws CertStoreException
            if error(s) occur."
      end

      operation 912411 "getCRLs"
	public return_type class_ref 160667 // Collection
	nparams 1
	  param inout name "selector" type class_ref 212763 // CRLSelector
	nexceptions 1
	  exception class_ref 212635 // CertStoreException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<? extends CRL> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the list of {@code CRL}s for the specified {@code CRLSelector}
from this certificate store.

@param selector
           the selector containing the criteria to search for certificate
           revocation lists in this store.
@return the list of {@code CRL}s that match the criteria of the specified
        selector
@throws CertStoreException
            if error(s) occur."
      end

      operation 912539 "getDefaultType"
	class_operation public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the default {@code CertStore} type from the <i>Security
Properties</i>.

@return the default {@code CertStore} type from the <i>Security
        Properties</i>, or the string {@code \"LDAP\"} if it cannot be
        determined."
      end
    end

    class 212379 "CertStoreSpi"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The <i>Service Provider Interface</i> (<b>SPI</b>) definition for the {@code
CertStore} class to be implemented by security providers."
      operation 913307 "CertStoreSpi"
	public explicit_return_type ""
	nparams 1
	  param inout name "params" type class_ref 212507 // CertStoreParameters
	nexceptions 1
	  exception class_ref 196251 // InvalidAlgorithmParameterException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code CertStoreSpi}.

@param params
           the initialization parameters.
@throws InvalidAlgorithmParameterException
            if the specified initialization parameters cannot be used to
            initialize this instance."
      end

      operation 913435 "engineGetCertificates"
	abstract public return_type class_ref 160667 // Collection
	nparams 1
	  param inout name "selector" type class_ref 212123 // CertSelector
	nexceptions 1
	  exception class_ref 212635 // CertStoreException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<? extends Certificate> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the list of {@code Certificate}s for the specified {@code
CertSelector} from this instance.

@param selector
           the selector containing the criteria to search for
           certificates in this instance.
@return the list of {@code Certificate}s that match the criteria of the
        specified selector.
@throws CertStoreException
            if error(s) occur."
      end

      operation 913563 "engineGetCRLs"
	abstract public return_type class_ref 160667 // Collection
	nparams 1
	  param inout name "selector" type class_ref 212763 // CRLSelector
	nexceptions 1
	  exception class_ref 212635 // CertStoreException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<? extends CRL> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the list of {@code CRL}s for the specified {@code CRLSelector}
from this instance.

@param selector
           the selector containing the criteria to search for certificate
           revocation lists in instance.
@return the list of {@code CRL}s that match the criteria of the specified
        selector
@throws CertStoreException
            if error(s) occur."
      end
    end

    class 212507 "CertStoreParameters"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The marker interface specifying the parameters used to initialize a {@code
CertStore} instance."
      classrelation 311451 // <generalisation>
	relation 311451 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 311451 // <generalisation>
	  b parent class_ref 129435 // Cloneable
      end

      operation 913179 "clone"
	public return_type class_ref 3401484 // Object
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Clones this {@code CertStoreParameters} instance.

@return the cloned instance."
      end
    end

    class 212635 "CertStoreException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The exception that is thrown when an access to a {@code CertStore} fails."
      classrelation 311323 // <generalisation>
	relation 311323 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 311323 // <generalisation>
	  b parent class_ref 200603 // GeneralSecurityException
      end

      attribute 259995 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " 2395296107471573245L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 912667 "CertStoreException"
	public explicit_return_type ""
	nparams 2
	  param inout name "msg" type class_ref 3399692 // String
	  param inout name "cause" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code CertStoreException} with the specified message and
cause.

@param msg
           the detail message for this exception.
@param cause
           the cause why the access to the certificate store failed."
      end

      operation 912795 "CertStoreException"
	public explicit_return_type ""
	nparams 1
	  param inout name "cause" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code CertStoreException} with the specified cause.

@param cause
           the cause why the access to the certificate store failed."
      end

      operation 912923 "CertStoreException"
	public explicit_return_type ""
	nparams 1
	  param inout name "msg" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code CertStoreException} with the specified message.

@param msg
           the detail message for this exception."
      end

      operation 913051 "CertStoreException"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code CertStoreException}."
      end
    end

    class 212763 "CRLSelector"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The interface specification for determining whether a CRL meets some criteria
to select CRL objects among a set of {@code CRL}s.
<p>
The implementations of this interface are typically used to define the
criteria for selecting {@code CRL}s from a {@code CertStore}.

@see CertStore
@see CRL"
      classrelation 312219 // <generalisation>
	relation 312219 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 312219 // <generalisation>
	  b parent class_ref 129435 // Cloneable
      end

      operation 915355 "clone"
	public return_type class_ref 3401484 // Object
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Clones this {@code CRLSelector} instance.

@return the cloned instance."
      end

      operation 915483 "match"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "crl" type class_ref 210331 // CRL
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks whether the defined criteria of this instance match the specified
CRL.

@param crl
           the CRL to be evaluated.
@return {@code true} if the CRL matches the criteria, {@code false}
        otherwise."
      end
    end

    class 212891 "CollectionCertStoreParameters"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The parameters to initialize a <i>Collection</i> type {@code CertStore} instance.
<p>
It is used to specify the {@code Collection} where the {@code CertStore} will
retrieve the certificates and CRLs from."
      classrelation 311579 // <realization>
	relation 311579 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 311579 // <realization>
	  b parent class_ref 212507 // CertStoreParameters
      end

      classrelation 311707 // defaultCollection (<unidirectional association>)
	relation 311707 --->
	  a role_name "defaultCollection" init_value " Collections.EMPTY_SET" class_relation const_relation private
	    comment " Default empty and immutable collection.
 Used if <code>CollectionCertStoreParameters</code>instance
 created by the no arg constructor
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<?> ${name}${value};
"
	    classrelation_ref 311707 // defaultCollection (<unidirectional association>)
	  b parent class_ref 160667 // Collection
      end

      classrelation 311835 // collection (<unidirectional association>)
	relation 311835 --->
	  a role_name "collection" const_relation private
	    comment " A <code>Collection</code> of <code>Certificate</code>s
 and <code>CRL</code>s
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<?> ${name}${value};
"
	    classrelation_ref 311835 // collection (<unidirectional association>)
	  b parent class_ref 160667 // Collection
      end

      operation 913691 "CollectionCertStoreParameters"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code CollectionCertStoreParameters} without a collection.
<p>
The default collection is an empty and unmodifiable {@code Collection}."
      end

      operation 913819 "CollectionCertStoreParameters"
	public explicit_return_type ""
	nparams 1
	  param inout name "collection" type class_ref 160667 // Collection
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code CollectionCertStoreParameters} with the specified
collection.
<p>
The specified collection is not copied and therefore may be modified at
any time.

@param collection
           the collection where the {@code Certificate}s and {@code CRL}s
           will be retrieved from.
@throws NullPointerException
            if {@code collection is null}."
      end

      operation 913947 "clone"
	public return_type class_ref 3401484 // Object
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Clones this {@code CollectionCertStoreParameters} instance, but not the
underlying collection.

@return the cloned instance."
      end

      operation 914075 "getCollection"
	public return_type class_ref 160667 // Collection
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the collection where the {@code Certificate}s and {@code CRL}s
are retrieved from.

@return the collection where the {@code Certificate}s and {@code CRL}s
        will be retrieved from."
      end

      operation 914203 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the string representation of this instance.

@return the string representation of this instance."
      end
    end

    class 213019 "LDAPCertStoreParameters"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The parameters to initialize a LDAP {@code CertStore} instance."
      classrelation 312347 // <realization>
	relation 312347 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 312347 // <realization>
	  b parent class_ref 212507 // CertStoreParameters
      end

      classrelation 312475 // DEFAULT_LDAP_SERVER_NAME (<unidirectional association>)
	relation 312475 --->
	  a role_name "DEFAULT_LDAP_SERVER_NAME" init_value " \"localhost\"" class_relation const_relation private
	    comment " Default LDAP server name
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 312475 // DEFAULT_LDAP_SERVER_NAME (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      attribute 260251 "DEFAULT_LDAP_PORT"
	class_attribute const_attribute private explicit_type "int"
	init_value " 389"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Default LDAP server port number"
      end

      classrelation 312603 // serverName (<unidirectional association>)
	relation 312603 --->
	  a role_name "serverName" const_relation private
	    comment " LDAP server name for this cert store
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 312603 // serverName (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      attribute 260379 "port"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " LDAP server port number for this cert store"
      end

      operation 915611 "LDAPCertStoreParameters"
	public explicit_return_type ""
	nparams 2
	  param inout name "serverName" type class_ref 3399692 // String
	  param in name "port" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code LDAPCertStoreParameters} instance with the specified
server name and port.

@param serverName
           the LDAP server name.
@param port
           the port.
@throws NullPointerException
            is {@code serverName} is {@code null}."
      end

      operation 915739 "LDAPCertStoreParameters"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code LDAPCertStoreParameters} instance with default
parameters.
<p>
The default parameters are server name \"localhost\" and port 389."
      end

      operation 915867 "LDAPCertStoreParameters"
	public explicit_return_type ""
	nparams 1
	  param inout name "serverName" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code LDAPCertStoreParameters} instance with the specified
server name and default port 389.

@param serverName
           the LDAP server name.
@throws NullPointerException
            if {@code serverName} is {@code null}."
      end

      operation 915995 "clone"
	public return_type class_ref 3401484 // Object
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Clones this {@code LDAPCertStoreParameters} instance.

@return the cloned instance."
      end

      operation 916123 "getPort"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the LDAP server port.

@return the LDAP server port."
      end

      operation 916251 "getServerName"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the LDAP server name.

@return the LDAP server name."
      end

      operation 916379 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the string representation of this {@code LDAPCertStoreParameters}
instance.

@return the string representation of this {@code LDAPCertStoreParameters}
        instance."
      end
    end

    class 213147 "PKIXBuilderParameters"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The parameter specification for a PKIX {@code CertPathBuilder}
algorithm used to {@link CertPathBuilder#build(CertPathParameters) build}
certificate chains validated with the PKIX certification path validation.
<p>
The parameters must be created with <i>trusted</i> certificate authorities
and constraints for the target certificates.

@see CertPathBuilder
@see CertPathParameters"
      classrelation 313755 // <generalisation>
	relation 313755 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 313755 // <generalisation>
	  b parent class_ref 213275 // PKIXParameters
      end

      attribute 261147 "maxPathLength"
	private explicit_type "int"
	init_value " 5"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Maximum certificate path length (5 by default)"
      end

      operation 920475 "PKIXBuilderParameters"
	public explicit_return_type ""
	nparams 2
	  param inout name "trustAnchors" type class_ref 129691 // Set
	  param inout name "targetConstraints" type class_ref 212123 // CertSelector
	nexceptions 1
	  exception class_ref 196251 // InvalidAlgorithmParameterException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<TrustAnchor> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code PKIXBuilderParameters} instance with the specified
set of {@code TrustAnchor} and certificate constraints.

@param trustAnchors
           the set of {@code TrustAnchors}.
@param targetConstraints
           the certificate constraints.
@throws InvalidAlgorithmParameterException
            if {@code trustAnchors} is empty.
@throws ClassCastException
            if one of the items in {@code trustAnchors} is not an
            instance of {@code java.security.cert.TrustAnchor}."
      end

      operation 920603 "PKIXBuilderParameters"
	public explicit_return_type ""
	nparams 2
	  param inout name "keyStore" type class_ref 203547 // KeyStore
	  param inout name "targetConstraints" type class_ref 212123 // CertSelector
	nexceptions 2
	  exception class_ref 203803 // KeyStoreException
	  exception class_ref 196251 // InvalidAlgorithmParameterException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code PKIXBuilderParameters} instance with the trusted
{@code X509Certificate} entries from the specified {@code KeyStore}.

@param keyStore
           the key store containing trusted certificates.
@param targetConstraints
           the certificate constraints.
@throws KeyStoreException
            if the {@code keyStore} is not initialized.
@throws InvalidAlgorithmParameterException
            if {@code keyStore} does not contained any trusted
            certificate entry."
      end

      operation 920731 "getMaxPathLength"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the maximum length of a certification path.
<p>
This is the maximum number of non-self-signed certificates in a
certification path.

@return the maximum length of a certification path, or {@code -1} if it
        is unlimited."
      end

      operation 920859 "setMaxPathLength"
	public explicit_return_type "void"
	nparams 1
	  param in name "maxPathLength" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the maximum length of a certification path.
<p>
This is the maximum number of non-self-signed certificates in a
certification path.

@param maxPathLength
           the maximum length of a certification path.
@throws InvalidParameterException
            if {@code maxPathLength} is less than {@code -1}."
      end

      operation 920987 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this {@code PKIXBuilderParameters}
instance.

@return a string representation of this {@code PKIXBuilderParameters}
        instance."
      end
    end

    class 213275 "PKIXParameters"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class implements the parameters for the {@code PKIX CertPathValidator}.
<p>
The parameters must be created with <i>trusted</i> certificate authorities
(trust anchors).

@see CertPathValidator
@see CertPathParameters"
      classrelation 312731 // <realization>
	relation 312731 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 312731 // <realization>
	  b parent class_ref 211355 // CertPathParameters
      end

      classrelation 312859 // trustAnchors (<unidirectional association>)
	relation 312859 --->
	  a role_name "trustAnchors" private
	    comment " Set of trust anchors - most trusted CAs
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<TrustAnchor> ${name}${value};
"
	    classrelation_ref 312859 // trustAnchors (<unidirectional association>)
	  b parent class_ref 129691 // Set
      end

      classrelation 312987 // initialPolicies (<unidirectional association>)
	relation 312987 --->
	  a role_name "initialPolicies" private
	    comment " Set of acceptable initial policy identifiers (OID strings)
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String> ${name}${value};
"
	    classrelation_ref 312987 // initialPolicies (<unidirectional association>)
	  b parent class_ref 129691 // Set
      end

      classrelation 313115 // certStores (<unidirectional association>)
	relation 313115 --->
	  a role_name "certStores" private
	    comment " List of cert stores that used to find certificates and CRLs
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<CertStore> ${name}${value};
"
	    classrelation_ref 313115 // certStores (<unidirectional association>)
	  b parent class_ref 131483 // List
      end

      classrelation 313243 // date (<unidirectional association>)
	relation 313243 --->
	  a role_name "date" private
	    comment " Time for which the validity of the certification
 patch should be determined
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 313243 // date (<unidirectional association>)
	  b parent class_ref 171931 // Date
      end

      classrelation 313371 // certPathCheckers (<unidirectional association>)
	relation 313371 --->
	  a role_name "certPathCheckers" private
	    comment " List of certification patch checkers (PKIXCertPathChecker)
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<PKIXCertPathChecker> ${name}${value};
"
	    classrelation_ref 313371 // certPathCheckers (<unidirectional association>)
	  b parent class_ref 131483 // List
      end

      classrelation 313499 // sigProvider (<unidirectional association>)
	relation 313499 --->
	  a role_name "sigProvider" private
	    comment " Preferred signature provider name
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 313499 // sigProvider (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 313627 // targetCertConstraints (<unidirectional association>)
	relation 313627 --->
	  a role_name "targetCertConstraints" private
	    comment " Required constraints on the target certificate
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 313627 // targetCertConstraints (<unidirectional association>)
	  b parent class_ref 212123 // CertSelector
      end

      attribute 260507 "revocationEnabled"
	private explicit_type "boolean"
	init_value " true"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Indicates whether cert revocation is enabled or not"
      end

      attribute 260635 "explicitPolicyRequired"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Indicates whether explicit policy required or not"
      end

      attribute 260763 "policyMappingInhibited"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Indicates whether policy mapping inhibited or not"
      end

      attribute 260891 "anyPolicyInhibited"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Indicates whether any policy inhibited or not"
      end

      attribute 261019 "policyQualifiersRejected"
	private explicit_type "boolean"
	init_value " true"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Indicates whether certificates that include policy
 qualifiers in a certificate policies extension that
 is marked critical must be rejected or not"
      end

      operation 916507 "PKIXParameters"
	public explicit_return_type ""
	nparams 1
	  param inout name "trustAnchors" type class_ref 129691 // Set
	nexceptions 1
	  exception class_ref 196251 // InvalidAlgorithmParameterException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}<TrustAnchor> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code PKIXParameters} instance with the specified set of
<i>trusted</i> certificate authorities.

@param trustAnchors
           the trusted CAs.
@throws InvalidAlgorithmParameterException
            if {@code trustAnchors} is empty."
      end

      operation 916635 "PKIXParameters"
	public explicit_return_type ""
	nparams 1
	  param inout name "keyStore" type class_ref 203547 // KeyStore
	nexceptions 2
	  exception class_ref 203803 // KeyStoreException
	  exception class_ref 196251 // InvalidAlgorithmParameterException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code PKIXParameters} instance with the trusted {@code
X509Certificate} entries from the specified {@code KeyStore}.

@param keyStore
           the key store containing trusted certificates.
@throws KeyStoreException
            if the {@code keyStore} is not initialized.
@throws InvalidAlgorithmParameterException
            if {@code keyStore} does not contained any trusted
            certificate entry."
      end

      operation 916763 "getTrustAnchors"
	public return_type class_ref 129691 // Set
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<TrustAnchor> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a unmodifiable set of the <i>trusted</i> certificate authorities.

@return a unmodifiable set of the <i>trusted</i> certificate authorities."
      end

      operation 916891 "setTrustAnchors"
	public explicit_return_type "void"
	nparams 1
	  param inout name "trustAnchors" type class_ref 129691 // Set
	nexceptions 1
	  exception class_ref 196251 // InvalidAlgorithmParameterException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<TrustAnchor> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the set of <i>trusted</i> certificate authorities.

@param trustAnchors
           the set of <i>trusted</i> certificate authorities.
@throws InvalidAlgorithmParameterException
            if {@code trustAnchors} is empty."
      end

      operation 917019 "isAnyPolicyInhibited"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the <i>any policy OID</i> will be inhibited if it's
included in a certificate.

@return {@code true} if the <i>any policy OID</i> will be inhibited,
        otherwise {@code false}."
      end

      operation 917147 "setAnyPolicyInhibited"
	public explicit_return_type "void"
	nparams 1
	  param inout name "anyPolicyInhibited" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether the <i>any policy OID</i> should be inhibited if it's
included in a certificate.

@param anyPolicyInhibited
           {@code true} if the <i>any policy OID</i> should be inhibited,
           otherwise {@code false}."
      end

      operation 917275 "getCertPathCheckers"
	public return_type class_ref 131483 // List
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<PKIXCertPathChecker> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the list of checkers for the certification path.
<p>
The list is unmodifiable and the entries in the list are cloned.

@return the list of checkers for the certification path."
      end

      operation 917403 "setCertPathCheckers"
	public explicit_return_type "void"
	nparams 1
	  param inout name "certPathCheckers" type class_ref 131483 // List
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<PKIXCertPathChecker> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the list of checkers for the certification path.
<p>
The list is copied and the entries are cloned.

@param certPathCheckers
           the list of checkers for the certification path, or {@code
           null} to clear the checkers."
      end

      operation 917531 "addCertPathChecker"
	public explicit_return_type "void"
	nparams 1
	  param inout name "checker" type class_ref 213531 // PKIXCertPathChecker
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds the specified {@code PKIXCertPathChecker} to the list of
certification path checkers.

@param checker
           the {@code PKIXCertPathChecker} to add, if {@code null}, it
           will be ignored."
      end

      operation 917659 "getCertStores"
	public return_type class_ref 131483 // List
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<CertStore> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the list of certificate stores that are used to find certificates
and CRLs.

@return an immutable list of certificate stores."
      end

      operation 917787 "setCertStores"
	public explicit_return_type "void"
	nparams 1
	  param inout name "certStores" type class_ref 131483 // List
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<CertStore> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the list of certificate stores that are used to find certificates and
CRLs.

@param certStores the list of certificate stores."
      end

      operation 917915 "addCertStore"
	public explicit_return_type "void"
	nparams 1
	  param inout name "store" type class_ref 212251 // CertStore
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a certificate store to the list of certificate stores that are used
to find certificates and CRLs.

@param store
           the store to add, if {@code null}, it will be ignored."
      end

      operation 918043 "getDate"
	public return_type class_ref 171931 // Date
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the time for which the validation of the certification path
should be evaluated.

@return the time for the validation, or {@code null} for the current
        time."
      end

      operation 918171 "setDate"
	public explicit_return_type "void"
	nparams 1
	  param inout name "date" type class_ref 171931 // Date
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the time for which the validation of the certification path should be
evaluated.

@param date
           the time for the validation, or {@code null} for the current
           time."
      end

      operation 918299 "isExplicitPolicyRequired"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether an acceptable policy needs to be explicit identified in
every certificate.

@return {@code true} if an explicit policy is required, otherwise {@code
        false}."
      end

      operation 918427 "setExplicitPolicyRequired"
	public explicit_return_type "void"
	nparams 1
	  param inout name "explicitPolicyRequired" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether an an acceptable policy needs to be explicit identified in
every certificate.

@param explicitPolicyRequired
           {@code true} if an explicit policy is required, otherwise
           {@code false}."
      end

      operation 918555 "getInitialPolicies"
	public return_type class_ref 129691 // Set
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the list of policies (as OID strings) that would be acceptable
for the purpose of certification path processing.

@return the unmodifiable list of policies, or an empty set if any policy
        is acceptable."
      end

      operation 918683 "setInitialPolicies"
	public explicit_return_type "void"
	nparams 1
	  param inout name "initialPolicies" type class_ref 129691 // Set
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<String> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the list of policies (as OID strings) that would be acceptable for
the purpose of certification path processing.

@param initialPolicies
           the list of policies, or an empty set or {@code null} if any
           policy is acceptable."
      end

      operation 918811 "isPolicyMappingInhibited"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether policy mapping is inhibited.

@return {@code true} if policy mapping is inhibited, otherwise {@code
        false}."
      end

      operation 918939 "setPolicyMappingInhibited"
	public explicit_return_type "void"
	nparams 1
	  param inout name "policyMappingInhibited" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether policy mapping is to be inhibited.

@param policyMappingInhibited
           {@code true} if policy mapping is to be inhibited, otherwise
           {@code false}."
      end

      operation 919067 "getPolicyQualifiersRejected"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether certificates are rejected that include policy
qualifiers in a certificate policy extension that is marked as critical.

@return {@code true} if the certificates should be rejected, otherwise
        {@code false}."
      end

      operation 919195 "setPolicyQualifiersRejected"
	public explicit_return_type "void"
	nparams 1
	  param inout name "policyQualifiersRejected" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether certificates should be rejected that include policy
qualifiers in a certificate policy extension that is marked as critical.

@param policyQualifiersRejected
           {@code true} if the certificates should be rejected, otherwise
           {@code false}."
      end

      operation 919323 "isRevocationEnabled"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the default revocation checking mechanism of the
underlying service provider is used.

@return {@code true} if the default revocation checking mechanism is
        used, otherwise {@code false}."
      end

      operation 919451 "setRevocationEnabled"
	public explicit_return_type "void"
	nparams 1
	  param inout name "revocationEnabled" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets whether the default revocation checking mechanism of the underlying
service provider should be used.

@param revocationEnabled
           {@code true} id the default revocation checking mechanism
           should be used, otherwise {@code false}."
      end

      operation 919579 "getSigProvider"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the signature provider.

@return the name of the signature provider, or {@code null} if none is
        set."
      end

      operation 919707 "setSigProvider"
	public explicit_return_type "void"
	nparams 1
	  param inout name "sigProvider" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the name of the preferred signature provider.
<p>
If set, the specified provider will be preferred for creating signatures.
If not set, the first provider found supporting creation of signatures
will be used.

@param sigProvider
           the name of the preferred signature provider, or {@code null}
           if none is preferred."
      end

      operation 919835 "getTargetCertConstraints"
	public return_type class_ref 212123 // CertSelector
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the constraints that are required for the target certificate.

@return the constraints for the target certificate, or {@code null} if
        none are set."
      end

      operation 919963 "setTargetCertConstraints"
	public explicit_return_type "void"
	nparams 1
	  param inout name "targetCertConstraints" type class_ref 212123 // CertSelector
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the constraints that are required for the target certificate.

@param targetCertConstraints
           the constraints for the target certificate, or {@code null} if
           none should be used."
      end

      operation 920091 "clone"
	public return_type class_ref 3401484 // Object
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Clones this {@code PKIXParameters} instance.

@return the cloned instance."
      end

      operation 920219 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this {@code PKIXParameters} instance.

@return a string representation of this {@code PKIXParameters} instance."
      end

      operation 920347 "checkTrustAnchors"
	private explicit_return_type "void"
	nparams 1
	  param inout name "trustAnchors" type class_ref 129691 // Set
	nexceptions 1
	  exception class_ref 196251 // InvalidAlgorithmParameterException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<TrustAnchor> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks that {@code trustAnchors} contains only {@code
TrustAnchor} instances.

@throws InvalidAlgorithmParameterException if trustAnchors set is empty."
      end
    end

    class 213403 "TrustAnchor"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class represents a trust anchor for validation of X.509 certification
path.
<p>
It is a <i>trusted</i> certificate authority (CA) and includes the public key
of the CA, the CA's name and the constraints for the validation of
certification paths. The constructor also allows to specify a binary
representation of a so called \"Name Constraints\" extension as a byte array."
      classrelation 315035 // caPrincipal (<unidirectional association>)
	relation 315035 --->
	  a role_name "caPrincipal" const_relation private
	    comment " Most trusted CA as a X500Principal
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 315035 // caPrincipal (<unidirectional association>)
	  b parent class_ref 214171 // X500Principal
      end

      classrelation 315163 // caName (<unidirectional association>)
	relation 315163 --->
	  a role_name "caName" const_relation private
	    comment " Most trusted CA name
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 315163 // caName (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 315291 // caPublicKey (<unidirectional association>)
	relation 315291 --->
	  a role_name "caPublicKey" const_relation private
	    comment " Most trusted CA public key
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 315291 // caPublicKey (<unidirectional association>)
	  b parent class_ref 199963 // PublicKey
      end

      classrelation 315419 // trustedCert (<unidirectional association>)
	relation 315419 --->
	  a role_name "trustedCert" const_relation private
	    comment " Most trusted CA certificate
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 315419 // trustedCert (<unidirectional association>)
	  b parent class_ref 214299 // X509Certificate
      end

      attribute 261531 "nameConstraints"
	const_attribute private explicit_type "byte"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Name constraints extension"
      end

      operation 924571 "TrustAnchor"
	public explicit_return_type ""
	nparams 2
	  param inout name "trustedCert" type class_ref 214299 // X509Certificate
	  param inout name "nameConstraints" explicit_type "byte"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code TrustAnchor} with the specified certificate and name
constraints.
<p>
The name constraints will be used as additional constraints during the
validation of certification paths.

@param trustedCert
           the trusted certificate
@param nameConstraints
           the ASN.1 DER encoded form of the name constraints or {@code
           null} if none.
@throws IllegalArgumentException
            if the decoding of the name constraints fail."
      end

      operation 924699 "TrustAnchor"
	public explicit_return_type ""
	nparams 3
	  param inout name "caName" type class_ref 3399692 // String
	  param inout name "caPublicKey" type class_ref 199963 // PublicKey
	  param inout name "nameConstraints" explicit_type "byte"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code TrustAnchor} with the specified certificate
authority name, its public key and the specified name constraints.
<p>
The name constraints will be used as additional constraints during the
validation of certification paths.

@param caName
           the X.500 name of the certificate authority in RFC 2253
           {@code String} format.
@param caPublicKey
           the public key of the certificate authority
@param nameConstraints
           the ASN.1 DER encoded form of the name constraints or {@code
           null} if none.
@throws IllegalArgumentException
            if the {@code caName} is empty or if decoding of the name
            constraints fail."
      end

      operation 924827 "TrustAnchor"
	public explicit_return_type ""
	nparams 3
	  param inout name "caPrincipal" type class_ref 214171 // X500Principal
	  param inout name "caPublicKey" type class_ref 199963 // PublicKey
	  param inout name "nameConstraints" explicit_type "byte"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code TrustAnchor} with the specified certificate
authority name as principal, its public key and the specified name
constraints.
<p>
The name constraints will be used as additional constraints during the
validation of certification paths.

@param caPrincipal
           the name of the certificate authority as X500 principal.
@param caPublicKey
           the public key of the certificate authority.
@param nameConstraints
           the ASN.1 DER encoded form of the name constraints or {@code
           null} if none.
@throws IllegalArgumentException
            if decoding of the name constraints fail."
      end

      operation 924955 "getNameConstraints"
	public explicit_return_type "byte"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a copy of the name constraints in ASN.1 DER encoded form.

@return a copy of the name constraints in ASN.1 DER encoded form."
      end

      operation 925083 "getTrustedCert"
	public return_type class_ref 214299 // X509Certificate
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the certificate of this <i>trusted</i> certificate authority.

@return the certificate of this CA or {@code null}, if the trust anchor
        of this instance was not created with a certificate."
      end

      operation 925211 "getCA"
	public return_type class_ref 214171 // X500Principal
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the certificate authority as {@code X500Principal}.

@return the name of the certificate authority or {@code null} if the
        trust anchor of this instance was not created with a {@code
        X500Principal}."
      end

      operation 925339 "getCAName"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the certificate authority as {@code String} in RFC
2253 format.

@return the name of the certificate authority as {@code String} in RFC
        2253 format or {@code null} if the trust anchor of this instance
        was not created with a CA name."
      end

      operation 925467 "getCAPublicKey"
	public return_type class_ref 199963 // PublicKey
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the public key of the certificate authority.

@return the public key of the certificate authority or {@code null} if
        the trust anchor if this instance was not created with a public
        key."
      end

      operation 925595 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this {@code TrustAnchor} instance.

@return a string representation of this {@code TrustAnchor} instance."
      end

      operation 925723 "processNameConstraints"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Private stuff

 Decodes and checks NameConstraints structure.
 Throws IllegalArgumentException if NameConstraints
 encoding is invalid."
      end
    end

    class 213531 "PKIXCertPathChecker"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The class specifying the interface to extend the certification path
validation algorithm by checks to perform on an {@code X509Certificate}.
<p>
The checks are added to a certification path validation using the
{@link PKIXParameters#setCertPathCheckers(java.util.List)
setCertPathCheckers} or
{@link PKIXBuilderParameters#addCertPathChecker(PKIXCertPathChecker)
addCertPathChecker} of the {@code PKIXParameters} and {@code
PKIXBuilderParameters} class respectively. The
{@link #check(Certificate, Collection) check} method will be called for each
certificate processed by a {@code CertPathBuilder} of {@code
CertPathValidator}.
<p>
A {@code PKIXCertPathChecker} implementation <u>must</u> support reverse
checking (from trusted CA to target) and <u>may</u> support forward checking
(from target to trusted CA). The return value of {@code
isForwardCheckingSupported} indicates whether forward checking is supported."
      classrelation 314779 // <realization>
	relation 314779 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 314779 // <realization>
	  b parent class_ref 129435 // Cloneable
      end

      operation 922267 "PKIXCertPathChecker"
	protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code PKIXCertPathChecker} instance."
      end

      operation 922395 "clone"
	public return_type class_ref 3401484 // Object
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Clones this {@code PKIXCertPathChecker} instance.

@return the cloned instance."
      end

      operation 922523 "init"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "forward" explicit_type "boolean"
	nexceptions 1
	  exception class_ref 211995 // CertPathValidatorException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Initializes this {@code PKIXCertPathChecker} instance for specified
<i>checking direction</i>.

@param forward
           the direction of the certification path processing, {@code
           true} if the certificates are processed in forward direction
           (from target to trusted CA), {@code false} if processed in
           reverse direction (from trusted CA to target).
@throws CertPathValidatorException
            if initialization of this {@code PKIXCertPathChecker}
            instance fails, or if it cannot process certificates in the
            specified order."
      end

      operation 922651 "isForwardCheckingSupported"
	abstract public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether this {@code PKIXCertPathChecker} instance supports
<i>forward checking</i>.

@return {@code true} if this {@code PKIXCertPathChecker} instance
        supports forward checking, otherwise {@code false}."
      end

      operation 922779 "getSupportedExtensions"
	abstract public return_type class_ref 129691 // Set
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the list of extensions of X.509 certificates that this {@code
PKIXCertPathChecker} is able to process.

@return the list of extensions of X.509 certificates that this {@code
        PKIXCertPathChecker} is able to process, or {@code null} if there
        are none."
      end

      operation 922907 "check"
	abstract public explicit_return_type "void"
	nparams 2
	  param inout name "cert" type class_ref 173595 // Certificate
	  param inout name "unresolvedCritExts" type class_ref 160667 // Collection
	nexceptions 1
	  exception class_ref 211995 // CertPathValidatorException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<String> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks the specified certificate and removes the processed critical
extensions from the specified list of X.509 extension <i>OID</i>s.

@param cert
           the certificate.
@param unresolvedCritExts
           the list of critical X.509 extension OID strings.
@throws CertPathValidatorException
            if check(s) fail on the specified certificate."
      end
    end

    class 213659 "PKIXCertPathBuilderResult"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The result of the PKIX certification path builder, returned by
{@link CertPathBuilder#build(CertPathParameters)}."
      classrelation 314395 // <generalisation>
	relation 314395 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 314395 // <generalisation>
	  b parent class_ref 213787 // PKIXCertPathValidatorResult
      end

      classrelation 314523 // <realization>
	relation 314523 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 314523 // <realization>
	  b parent class_ref 211227 // CertPathBuilderResult
      end

      classrelation 314651 // certPath (<unidirectional association>)
	relation 314651 --->
	  a role_name "certPath" const_relation private
	    comment " Built and validated certification path
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 314651 // certPath (<unidirectional association>)
	  b parent class_ref 200219 // CertPath
      end

      operation 921883 "PKIXCertPathBuilderResult"
	public explicit_return_type ""
	nparams 4
	  param inout name "certPath" type class_ref 200219 // CertPath
	  param inout name "trustAnchor" type class_ref 213403 // TrustAnchor
	  param inout name "policyTree" type class_ref 213915 // PolicyNode
	  param inout name "subjectPublicKey" type class_ref 199963 // PublicKey
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code PKIXCertPathBuilderResult} instance with the
specified validated certification path, the trust anchor of the
certification path, the policy tree and the public key of the subject.

@param certPath
           the validated certification path.
@param trustAnchor
           the trust anchor.
@param policyTree
           the policy tree (or {@code null} if not used).
@param subjectPublicKey
           the public key.
@throws NullPointerException
            if the {@code cerPath}, {@code trustAnchor} or {@code
            subjectPolicyKey} is {@code null}."
      end

      operation 922011 "getCertPath"
	public return_type class_ref 200219 // CertPath
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the validated certification path.

@return the validated certification path."
      end

      operation 922139 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this {@code PKIXCertPathBuilderResult}
instance.

@return a string representation of this {@code PKIXCertPathBuilderResult}
        instance."
      end
    end

    class 213787 "PKIXCertPathValidatorResult"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The implementation of the result of the PKIX certification path validation.

@see CertPathValidator
@see CertPathValidator#validate(CertPath, CertPathParameters)"
      classrelation 313883 // <realization>
	relation 313883 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 313883 // <realization>
	  b parent class_ref 211867 // CertPathValidatorResult
      end

      classrelation 314011 // trustAnchor (<unidirectional association>)
	relation 314011 --->
	  a role_name "trustAnchor" const_relation private
	    comment " A trust anchor used during validation of certification path
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 314011 // trustAnchor (<unidirectional association>)
	  b parent class_ref 213403 // TrustAnchor
      end

      classrelation 314139 // policyTree (<unidirectional association>)
	relation 314139 --->
	  a role_name "policyTree" const_relation private
	    comment " Valid policy tree resulting from PKIX
 certification path validation algorithm
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 314139 // policyTree (<unidirectional association>)
	  b parent class_ref 213915 // PolicyNode
      end

      classrelation 314267 // subjectPublicKey (<unidirectional association>)
	relation 314267 --->
	  a role_name "subjectPublicKey" const_relation private
	    comment " Public key of the subject (target) certificate
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 314267 // subjectPublicKey (<unidirectional association>)
	  b parent class_ref 199963 // PublicKey
      end

      operation 921115 "PKIXCertPathValidatorResult"
	public explicit_return_type ""
	nparams 3
	  param inout name "trustAnchor" type class_ref 213403 // TrustAnchor
	  param inout name "policyTree" type class_ref 213915 // PolicyNode
	  param inout name "subjectPublicKey" type class_ref 199963 // PublicKey
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code PKIXCertPathValidatorResult} with the specified
trust anchor, the valid policy tree and the subject public key.

@param trustAnchor
           the trust anchor describing the certification authority (CA)
           that served as trust anchor for the certification path.
@param policyTree
           the valid policy tree from the validation.
@param subjectPublicKey
           the subject public key from the validation."
      end

      operation 921243 "getPolicyTree"
	public return_type class_ref 213915 // PolicyNode
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the valid policy tree from the validation.

@return the valid policy tree from the validation."
      end

      operation 921371 "getPublicKey"
	public return_type class_ref 199963 // PublicKey
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the subject public key from the validation.

@return the subject public key from the validation."
      end

      operation 921499 "getTrustAnchor"
	public return_type class_ref 213403 // TrustAnchor
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the trust anchor describing the certification authority (CA) that
served as trust anchor for this certification path.

@return the trust anchor."
      end

      operation 921627 "clone"
	public return_type class_ref 3401484 // Object
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Clones this {@code PKIXCertPathValidatorResult} instance.

@return the cloned instance."
      end

      operation 921755 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation for this {@code
PKIXCertPathValidatorResult} instance.

@return a string representation for this {@code
        PKIXCertPathValidatorResult} instance."
      end
    end

    class 213915 "PolicyNode"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The interface to a valid policy tree node for the PKIX certification path
validation algorithm.
<p>
Instances of this class are one of the outputs of the PKIX certification path
validation algorithm."
      operation 923035 "getChildren"
	public return_type class_ref 155803 // Iterator
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<? extends PolicyNode> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the list of children of this node as an {@code Iterator}.

@return the list of children of this node as an {@code Iterator}."
      end

      operation 923163 "getDepth"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the depth of this node in the policy tree.
<p>
the depth is zero based.

@return the depth of this node in the policy tree."
      end

      operation 923291 "getExpectedPolicies"
	public return_type class_ref 129691 // Set
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the expected policies for the next certificate to be valid.

@return the expected policies."
      end

      operation 923419 "getParent"
	public return_type class_ref 213915 // PolicyNode
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the parent policy node.

@return the parent policy node."
      end

      operation 923547 "getPolicyQualifiers"
	public return_type class_ref 129691 // Set
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<? extends PolicyQualifierInfo> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the policy qualifiers associated with the policy of this node.

@return the policy qualifiers associated with the policy of this node."
      end

      operation 923675 "getValidPolicy"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the valid policy of this node.

@return the valid policy of this node."
      end

      operation 923803 "isCritical"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the certificate policy extension of the most recently
processed certificate is marked as critical.

@return {@code true} if the extension is marked as critical, otherwise
        {@code false}."
      end
    end

    class 214043 "PolicyQualifierInfo"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class implements a policy qualifier as defined by the ASN.1
{@code PolicyQualifierInfo} structure."
      attribute 261275 "encoded"
	const_attribute private explicit_type "byte"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " This PolicyQualifierInfo DER encoding"
      end

      classrelation 314907 // policyQualifierId (<unidirectional association>)
	relation 314907 --->
	  a role_name "policyQualifierId" const_relation private
	    comment " This PolicyQualifierInfo policy qualifier id -
 OID represented as String containing non-negative integers
 separated by periods
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 314907 // policyQualifierId (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      attribute 261403 "policyQualifier"
	const_attribute private explicit_type "byte"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " DER encoding of the policy qualifier - part of encoded"
      end

      operation 923931 "PolicyQualifierInfo"
	public explicit_return_type ""
	nparams 1
	  param inout name "encoded" explicit_type "byte"
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code PolicyQualifierInfo} from the specified encoded
form.

@param encoded
           the DER encoded policy qualifier.
@throws IOException
            the policy qualifier cannot be decoded."
      end

      operation 924059 "getEncoded"
	public explicit_return_type "byte"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a ASN.1 DER encoded copy of policy qualifier info.

@return a ASN.1 DER encoded copy of policy qualifier info."
      end

      operation 924187 "getPolicyQualifierId"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the identifier (an OID) of this policy qualifier info.

@return the identifier of this policy qualifier info."
      end

      operation 924315 "getPolicyQualifier"
	public explicit_return_type "byte"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a ASN.1 DER encoded copy of the qualifier of this policy
qualifier info.

@return a ASN.1 DER encoded copy of the qualifier of this policy
        qualifier info."
      end

      operation 924443 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this {@code PolicyQualifierInfo}
instance.

@return a string representation of this {@code PolicyQualifierInfo}
        instance."
      end
    end

    class 214299 "X509Certificate"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Abstract base class for X.509 certificates.
<p>
This represents a standard way for accessing the attributes of X.509
certificates.
<p>
The basic X.509 v3 format described in ASN.1:

<pre>
Certificate  ::=  SEQUENCE  {
    tbsCertificate       TBSCertificate,
    signatureAlgorithm   AlgorithmIdentifier,
    signature            BIT STRING  }

TBSCertificate  ::=  SEQUENCE  {
     version         [0]  EXPLICIT Version DEFAULT v1,
     serialNumber         CertificateSerialNumber,
     signature            AlgorithmIdentifier,
     issuer               Name,
     validity             Validity,
     subject              Name,
     subjectPublicKeyInfo SubjectPublicKeyInfo,
     issuerUniqueID  [1]  IMPLICIT UniqueIdentifier OPTIONAL,
                          -- If present, version must be v2 or v3
     subjectUniqueID [2]  IMPLICIT UniqueIdentifier OPTIONAL,
                          -- If present, version must be v2 or v3
     extensions      [3]  EXPLICIT Extensions OPTIONAL
                          -- If present, version must be v3
     }
</pre>
<p>
For more information consult RFC 2459
\"Internet X.509 Public Key Infrastructure Certificate and CRL Profile\" at <a
href
=\"http://www.ietf.org/rfc/rfc2459.txt\">http://www.ietf.org/rfc/rfc2459.txt
</a> ."
      classrelation 315547 // <generalisation>
	relation 315547 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 315547 // <generalisation>
	  b parent class_ref 173595 // Certificate
      end

      classrelation 315675 // <realization>
	relation 315675 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 315675 // <realization>
	  b parent class_ref 214427 // X509Extension
      end

      attribute 261659 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -2491127588187038216L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 926363 "X509Certificate"
	protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code X509Certificate}."
      end

      operation 926491 "checkValidity"
	abstract public explicit_return_type "void"
	nparams 0
	nexceptions 2
	  exception class_ref 209947 // CertificateExpiredException
	  exception class_ref 210587 // CertificateNotYetValidException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks whether the certificate is currently valid.
<p>
The validity defined in ASN.1:

<pre>
validity             Validity

Validity ::= SEQUENCE {
     notBefore       CertificateValidityDate,
     notAfter        CertificateValidityDate }

CertificateValidityDate ::= CHOICE {
     utcTime         UTCTime,
     generalTime     GeneralizedTime }
</pre>

@throws CertificateExpiredException
            if the certificate has expired.
@throws CertificateNotYetValidException
            if the certificate is not yet valid."
      end

      operation 926619 "checkValidity"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "date" type class_ref 171931 // Date
	nexceptions 2
	  exception class_ref 209947 // CertificateExpiredException
	  exception class_ref 210587 // CertificateNotYetValidException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks whether the certificate is valid at the specified date.

@param date
           the date to check the validity against.
@throws CertificateExpiredException
            if the certificate has expired.
@throws CertificateNotYetValidException
            if the certificate is not yet valid.
@see #checkValidity()"
      end

      operation 926747 "getVersion"
	abstract public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the certificates {@code version} (version number).
<p>
The version defined is ASN.1:

<pre>
Version ::=  INTEGER  {  v1(0), v2(1), v3(2)  }
</pre>

@return the version number."
      end

      operation 926875 "getSerialNumber"
	abstract public return_type class_ref 166299 // BigInteger
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code serialNumber} of the certificate.
<p>
The ASN.1 definition of {@code serialNumber}:

<pre>
CertificateSerialNumber  ::=  INTEGER
</pre>

@return the serial number."
      end

      operation 927003 "getIssuerDN"
	abstract public return_type class_ref 176539 // Principal
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code issuer} (issuer distinguished name) as an
implementation specific {@code Principal} object.
<p>
The ASN.1 definition of {@code issuer}:

<pre>
 issuer      Name

 Name ::= CHOICE {
     RDNSequence }

   RDNSequence ::= SEQUENCE OF RelativeDistinguishedName

   RelativeDistinguishedName ::= SET OF AttributeTypeAndValue

   AttributeTypeAndValue ::= SEQUENCE {
     type     AttributeType,
     value    AttributeValue }

   AttributeType ::= OBJECT IDENTIFIER

   AttributeValue ::= ANY DEFINED BY AttributeType
</pre>

<b>replaced by:</b> {@link #getIssuerX500Principal()}.

@return the {@code issuer} as an implementation specific {@code
        Principal}."
      end

      operation 927131 "getIssuerX500Principal"
	public return_type class_ref 214171 // X500Principal
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code issuer} (issuer distinguished name) as an {@code
X500Principal}.

@return the {@code issuer} (issuer distinguished name)."
      end

      operation 927259 "getSubjectDN"
	abstract public return_type class_ref 176539 // Principal
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code subject} (subject distinguished name) as an
implementation specific {@code Principal} object.
<p>
The ASN.1 definition of {@code subject}:

<pre>
subject      Name

 Name ::= CHOICE {
     RDNSequence }

   RDNSequence ::= SEQUENCE OF RelativeDistinguishedName

   RelativeDistinguishedName ::= SET OF AttributeTypeAndValue

   AttributeTypeAndValue ::= SEQUENCE {
     type     AttributeType,
     value    AttributeValue }

   AttributeType ::= OBJECT IDENTIFIER

   AttributeValue ::= ANY DEFINED BY AttributeType
</pre>

<p>
<b>replaced by:</b> {@link #getSubjectX500Principal()}.

@return the {@code subject} (subject distinguished name)."
      end

      operation 927387 "getSubjectX500Principal"
	public return_type class_ref 214171 // X500Principal
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code subject} (subject distinguished name) as an {@code
X500Principal}.

@return the {@code subject} (subject distinguished name)"
      end

      operation 927515 "getNotBefore"
	abstract public return_type class_ref 171931 // Date
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code notBefore} date from the validity period of the
certificate.

@return the start of the validity period."
      end

      operation 927643 "getNotAfter"
	abstract public return_type class_ref 171931 // Date
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code notAfter} date of the validity period of the
certificate.

@return the end of the validity period."
      end

      operation 927771 "getTBSCertificate"
	abstract public explicit_return_type "byte"
	nparams 0
	nexceptions 1
	  exception class_ref 209691 // CertificateEncodingException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code tbsCertificate} information from this certificate in
DER-encoded format.

@return the DER-encoded certificate information.
@throws CertificateEncodingException
            if an error occurs in encoding"
      end

      operation 927899 "getSignature"
	abstract public explicit_return_type "byte"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the raw signature bits from the certificate.

@return the raw signature bits from the certificate."
      end

      operation 928027 "getSigAlgName"
	abstract public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the algorithm for the certificate signature.

@return the signature algorithm name."
      end

      operation 928155 "getSigAlgOID"
	abstract public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the OID of the signature algorithm from the certificate.

@return the OID of the signature algorithm."
      end

      operation 928283 "getSigAlgParams"
	abstract public explicit_return_type "byte"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the parameters of the signature algorithm in DER-encoded format.

@return the parameters of the signature algorithm, or {@code null} if
        none are used."
      end

      operation 928411 "getIssuerUniqueID"
	abstract public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code issuerUniqueID} from the certificate.

@return the {@code issuerUniqueID} or {@code null} if there's none in the
        certificate."
      end

      operation 928539 "getSubjectUniqueID"
	abstract public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code subjectUniqueID} from the certificate.

@return the {@code subjectUniqueID} or null if there's none in the
        certificate."
      end

      operation 928667 "getKeyUsage"
	abstract public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code KeyUsage} extension as a {@code boolean} array.
<p>
The ASN.1 definition of {@code KeyUsage}:

<pre>
KeyUsage ::= BIT STRING {
     digitalSignature        (0),
     nonRepudiation          (1),
     keyEncipherment         (2),
     dataEncipherment        (3),
     keyAgreement            (4),
     keyCertSign             (5),
     cRLSign                 (6),
     encipherOnly            (7),
     decipherOnly            (8) }

</pre>

@return the {@code KeyUsage} extension or {@code null} if there's none in
        the certificate."
      end

      operation 928795 "getExtendedKeyUsage"
	public return_type class_ref 131483 // List
	nparams 0
	nexceptions 1
	  exception class_ref 210715 // CertificateParsingException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a read-only list of OID strings representing the {@code
ExtKeyUsageSyntax} field of the extended key usage extension.

@return the extended key usage extension, or {@code null} if there's none
        in the certificate.
@throws CertificateParsingException
            if the extension decoding fails."
      end

      operation 928923 "getBasicConstraints"
	abstract public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the path length of the certificate constraints from the {@code
BasicContraints} extension.

If the certificate has no basic constraints or is not a
certificate authority, {@code -1} is returned. If the
certificate is a certificate authority without a path length,
{@code Integer.MAX_VALUE} is returned. Otherwise, the
certificate authority's path length is returned."
      end

      operation 929051 "getSubjectAlternativeNames"
	public return_type class_ref 160667 // Collection
	nparams 0
	nexceptions 1
	  exception class_ref 210715 // CertificateParsingException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<List<?>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a read-only list of the subject alternative names from the
{@code SubjectAltName} extension.
<p>
The ASN.1 definition of {@code SubjectAltName}:

<pre>
SubjectAltName ::= GeneralNames

GeneralNames ::= SEQUENCE SIZE (1..MAX) OF GeneralName

GeneralName ::= CHOICE {
     otherName                       [0]     AnotherName,
     rfc822Name                      [1]     IA5String,
     dNSName                         [2]     IA5String,
     x400Address                     [3]     ORAddress,
     directoryName                   [4]     Name,
     ediPartyName                    [5]     EDIPartyName,
     uniformResourceIdentifier       [6]     IA5String,
     iPAddress                       [7]     OCTET STRING,
     registeredID                    [8]     OBJECT IDENTIFIER }

</pre>

@return the subject alternative names or {@code null} if there are none
        in the certificate.
@throws CertificateParsingException
            if decoding of the extension fails."
      end

      operation 929179 "getIssuerAlternativeNames"
	public return_type class_ref 160667 // Collection
	nparams 0
	nexceptions 1
	  exception class_ref 210715 // CertificateParsingException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<List<?>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a read-only list of the issuer alternative names from the {@code
IssuerAltName} extension.
<p>
The ASN.1 definition of {@code IssuerAltName}:

<pre>
IssuerAltName ::= GeneralNames

GeneralNames ::= SEQUENCE SIZE (1..MAX) OF GeneralName

GeneralName ::= CHOICE {
     otherName                       [0]     AnotherName,
     rfc822Name                      [1]     IA5String,
     dNSName                         [2]     IA5String,
     x400Address                     [3]     ORAddress,
     directoryName                   [4]     Name,
     ediPartyName                    [5]     EDIPartyName,
     uniformResourceIdentifier       [6]     IA5String,
     iPAddress                       [7]     OCTET STRING,
     registeredID                    [8]     OBJECT IDENTIFIER }

</pre>

@return the issuer alternative names of {@code null} if there are none in
        the certificate.
@throws CertificateParsingException
            if decoding of the extension fails."
      end
    end

    class 214427 "X509Extension"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The interface specifying an X.509 Certificate or CRL extension."
      operation 925851 "getCriticalExtensionOIDs"
	public return_type class_ref 129691 // Set
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the set of OIDs of the extension(s) marked as CRITICAL, that this
implementation manages.

@return the set of extension OIDs marked as CRITIAL, an empty set if none
        are marked as CRITICAL, or {@code null} if no extensions are
        present."
      end

      operation 925979 "getExtensionValue"
	public explicit_return_type "byte"
	nparams 1
	  param inout name "oid" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the extension value as DER-encoded OCTET string for the specified
OID.

@param oid
           the object identifier to get the extension value for.
@return the extension value as DER-encoded OCTET string, or {@code null}
        if no extension for the specified OID can be found."
      end

      operation 926107 "getNonCriticalExtensionOIDs"
	public return_type class_ref 129691 // Set
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the set of OIDs of the extension(s) marked as NON-CRITICAL, that
this implementation manages.

@return the set of extension OIDs marked as NON-CRITIAL, an empty set if
        none are marked as NON-.CRITICAL, or {@code null} if no
        extensions are present."
      end

      operation 926235 "hasUnsupportedCriticalExtension"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether this instance has an extension marked as CRITICAL that it
cannot support.

@return {@code true} if an unsupported CRITICAL extension is present,
        {@code false} otherwise."
      end
    end

    class 214555 "X509CertSelector"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A certificate selector ({@code CertSelector} for selecting {@code
X509Certificate}s that match the specified criteria."
      classrelation 315803 // <realization>
	relation 315803 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 315803 // <realization>
	  b parent class_ref 212123 // CertSelector
      end

      classrelation 315931 // certificateEquals (<unidirectional association>)
	relation 315931 --->
	  a role_name "certificateEquals" private
	    comment " match criteria
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 315931 // certificateEquals (<unidirectional association>)
	  b parent class_ref 214299 // X509Certificate
      end

      classrelation 316059 // serialNumber (<unidirectional association>)
	relation 316059 --->
	  a role_name "serialNumber" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 316059 // serialNumber (<unidirectional association>)
	  b parent class_ref 166299 // BigInteger
      end

      classrelation 316187 // issuer (<unidirectional association>)
	relation 316187 --->
	  a role_name "issuer" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 316187 // issuer (<unidirectional association>)
	  b parent class_ref 214171 // X500Principal
      end

      classrelation 316315 // subject (<unidirectional association>)
	relation 316315 --->
	  a role_name "subject" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 316315 // subject (<unidirectional association>)
	  b parent class_ref 214171 // X500Principal
      end

      attribute 261787 "subjectKeyIdentifier"
	private explicit_type "byte"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 261915 "authorityKeyIdentifier"
	private explicit_type "byte"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 316443 // certificateValid (<unidirectional association>)
	relation 316443 --->
	  a role_name "certificateValid" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 316443 // certificateValid (<unidirectional association>)
	  b parent class_ref 171931 // Date
      end

      classrelation 316571 // subjectPublicKeyAlgID (<unidirectional association>)
	relation 316571 --->
	  a role_name "subjectPublicKeyAlgID" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 316571 // subjectPublicKeyAlgID (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 316699 // privateKeyValid (<unidirectional association>)
	relation 316699 --->
	  a role_name "privateKeyValid" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 316699 // privateKeyValid (<unidirectional association>)
	  b parent class_ref 171931 // Date
      end

      attribute 262043 "subjectPublicKey"
	private explicit_type "byte"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 262171 "keyUsage"
	private explicit_type "boolean"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 316827 // extendedKeyUsage (<unidirectional association>)
	relation 316827 --->
	  a role_name "extendedKeyUsage" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String> ${name}${value};
"
	    classrelation_ref 316827 // extendedKeyUsage (<unidirectional association>)
	  b parent class_ref 129691 // Set
      end

      attribute 262299 "matchAllNames"
	private explicit_type "boolean"
	init_value " true"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 262427 "pathLen"
	private explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 316955 // subjectAltNames (<unidirectional association>)
	relation 316955 --->
	  a role_name "subjectAltNames" multiplicity "[]" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<GeneralName>${multiplicity} ${name}${value};
"
	    classrelation_ref 316955 // subjectAltNames (<unidirectional association>)
	  b parent class_ref 131483 // List
      end

      classrelation 317083 // nameConstraints (<unidirectional association>)
	relation 317083 --->
	  a role_name "nameConstraints" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 317083 // nameConstraints (<unidirectional association>)
	  b parent class_ref 214811 // NameConstraints
      end

      classrelation 317211 // policies (<unidirectional association>)
	relation 317211 --->
	  a role_name "policies" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String> ${name}${value};
"
	    classrelation_ref 317211 // policies (<unidirectional association>)
	  b parent class_ref 129691 // Set
      end

      classrelation 317339 // pathToNames (<unidirectional association>)
	relation 317339 --->
	  a role_name "pathToNames" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<GeneralName> ${name}${value};
"
	    classrelation_ref 317339 // pathToNames (<unidirectional association>)
	  b parent class_ref 138267 // ArrayList
      end

      classrelation 317467 // subjectPublicKeyImpl (<unidirectional association>)
	relation 317467 --->
	  a role_name "subjectPublicKeyImpl" private
	    comment " needed to avoid needless encoding/decoding work
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 317467 // subjectPublicKeyImpl (<unidirectional association>)
	  b parent class_ref 199963 // PublicKey
      end

      classrelation 317595 // issuerName (<unidirectional association>)
	relation 317595 --->
	  a role_name "issuerName" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 317595 // issuerName (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      attribute 262555 "issuerBytes"
	private explicit_type "byte"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 929307 "X509CertSelector"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code X509CertSelector}."
      end

      operation 929435 "setCertificate"
	public explicit_return_type "void"
	nparams 1
	  param inout name "certificate" type class_ref 214299 // X509Certificate
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the certificate that a matching certificate must be equal to.

@param certificate
           the certificate to match, or null to not check this criteria."
      end

      operation 929563 "getCertificate"
	public return_type class_ref 214299 // X509Certificate
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the certificate that a matching certificate must be equal to.

@return the certificate to match, or null if this criteria is not
        checked."
      end

      operation 929691 "setSerialNumber"
	public explicit_return_type "void"
	nparams 1
	  param inout name "serialNumber" type class_ref 166299 // BigInteger
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the serial number that a certificate must match.

@param serialNumber
           the serial number to match, or {@code null} to not check the
           serial number."
      end

      operation 929819 "getSerialNumber"
	public return_type class_ref 166299 // BigInteger
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the serial number that a certificate must match.

@return the serial number to match, or {@code null} if the serial number
        is not to be checked."
      end

      operation 929947 "setIssuer"
	public explicit_return_type "void"
	nparams 1
	  param inout name "issuer" type class_ref 214171 // X500Principal
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the issuer that a certificate must match.

@param issuer
           the issuer to match, or {@code null} if the issuer is not to
           be checked."
      end

      operation 930075 "getIssuer"
	public return_type class_ref 214171 // X500Principal
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the issuer that a certificate must match.

@return the issuer that a certificate must match, or {@code null} if the
        issuer is not to be checked."
      end

      operation 930203 "setIssuer"
	public explicit_return_type "void"
	nparams 1
	  param inout name "issuerName" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<b>Do not use</b>, use {@link #getIssuer()} or
{@link #getIssuerAsBytes()} instead. Sets the issuer that a certificate
must match.

@param issuerName
           the issuer in a RFC 2253 format string, or {@code null} to not
           check the issuer.
@throws IOException
            if parsing the issuer fails."
      end

      operation 930331 "getIssuerAsString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<b>Do not use</b>, use {@link #getIssuer()} or
{@link #getIssuerAsBytes()} instead. Returns the issuer that a
certificate must match in a RFC 2253 format string.

@return the issuer in a RFC 2253 format string, or {@code null} if the
        issuer is not to be checked."
      end

      operation 930459 "setIssuer"
	public explicit_return_type "void"
	nparams 1
	  param inout name "issuerDN" explicit_type "byte"
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the issuer that a certificate must match.

@param issuerDN
           the distinguished issuer name in ASN.1 DER encoded format, or
           {@code null} to not check the issuer.
@throws IOException
            if decoding the issuer fail."
      end

      operation 930587 "getIssuerAsBytes"
	public explicit_return_type "byte"
	nparams 0
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the issuer that a certificate must match.

@return the distinguished issuer name in ASN.1 DER encoded format, or
        {@code null} if the issuer is not to be checked.
@throws IOException
            if encoding the issuer fails."
      end

      operation 930715 "setSubject"
	public explicit_return_type "void"
	nparams 1
	  param inout name "subject" type class_ref 214171 // X500Principal
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the subject that a certificate must match.

@param subject
           the subject distinguished name or {@code null} to not check
           the subject."
      end

      operation 930843 "getSubject"
	public return_type class_ref 214171 // X500Principal
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the subject that a certificate must match.

@return the subject distinguished name, or null if the subject is not to
        be checked."
      end

      operation 930971 "setSubject"
	public explicit_return_type "void"
	nparams 1
	  param inout name "subjectDN" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<b>Do not use</b>, use {@link #setSubject(byte[])} or
{@link #setSubject(X500Principal)} instead. Returns the subject that a
certificate must match.

@param subjectDN
           the subject distinguished name in RFC 2253 format or {@code
           null} to not check the subject.
@throws IOException
            if decoding the subject fails."
      end

      operation 931099 "getSubjectAsString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<b>Do not use</b>, use {@link #getSubject()} or
{@link #getSubjectAsBytes()} instead. Returns the subject that a
certificate must match.

@return the subject distinguished name in RFC 2253 format, or {@code
        null} if the subject is not to be checked."
      end

      operation 931227 "setSubject"
	public explicit_return_type "void"
	nparams 1
	  param inout name "subjectDN" explicit_type "byte"
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the subject that a certificate must match.

@param subjectDN
           the subject distinguished name in ASN.1 DER format, or {@code
           null} to not check the subject.
@throws IOException
            if decoding the subject fails."
      end

      operation 931355 "getSubjectAsBytes"
	public explicit_return_type "byte"
	nparams 0
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the subject that a certificate must match.

@return the subject distinguished name in ASN.1 DER format, or {@code
        null} if the subject is not to be checked.
@throws IOException
            if encoding the subject fails."
      end

      operation 931483 "setSubjectKeyIdentifier"
	public explicit_return_type "void"
	nparams 1
	  param inout name "subjectKeyIdentifier" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the criterion for the {@literal SubjectKeyIdentifier} extension.
<p>
The {@code subjectKeyIdentifier} should be a single DER encoded value.

@param subjectKeyIdentifier
           the subject key identifier or {@code null} to disable this
           check."
      end

      operation 931611 "getSubjectKeyIdentifier"
	public explicit_return_type "byte"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the criterion for the {@literal SubjectKeyIdentifier} extension.

@return the subject key identifier or {@code null} if it is not to be
        checked."
      end

      operation 931739 "setAuthorityKeyIdentifier"
	public explicit_return_type "void"
	nparams 1
	  param inout name "authorityKeyIdentifier" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the criterion for the {@literal AuthorityKeyIdentifier} extension.

@param authorityKeyIdentifier
           the authority key identifier, or {@code null} to disable this
           check."
      end

      operation 931867 "getAuthorityKeyIdentifier"
	public explicit_return_type "byte"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the criterion for the {@literal AuthorityKeyIdentifier}
extension.

@return the authority key identifier, or {@code null} if it is not to be
        checked."
      end

      operation 931995 "setCertificateValid"
	public explicit_return_type "void"
	nparams 1
	  param inout name "certificateValid" type class_ref 171931 // Date
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the criterion for the validity date of the certificate.
<p>
The certificate must be valid at the specified date.
@param certificateValid
           the validity date or {@code null} to not check the date."
      end

      operation 932123 "getCertificateValid"
	public return_type class_ref 171931 // Date
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the criterion for the validity date of the certificate.

@return the validity date or {@code null} if the date is not to be
        checked."
      end

      operation 932251 "setPrivateKeyValid"
	public explicit_return_type "void"
	nparams 1
	  param inout name "privateKeyValid" type class_ref 171931 // Date
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the criterion for the validity date of the private key.
<p>
The private key must be valid at the specified date.

@param privateKeyValid
           the validity date or {@code null} to not check the date."
      end

      operation 932379 "getPrivateKeyValid"
	public return_type class_ref 171931 // Date
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the criterion for the validity date of the private key.
<p>
The private key must be valid at the specified date.

@return the validity date or {@code null} if the date is not to be
        checked."
      end

      operation 932507 "checkOID"
	private explicit_return_type "void"
	nparams 1
	  param inout name "oid" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 932635 "setSubjectPublicKeyAlgID"
	public explicit_return_type "void"
	nparams 1
	  param inout name "oid" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the criterion for the subject public key signature algorithm.
<p>
The certificate must contain a subject public key with the algorithm
specified.

@param oid
           the OID (object identifier) of the signature algorithm or
           {@code null} to not check the OID.
@throws IOException
            if the specified object identifier is invalid."
      end

      operation 932763 "getSubjectPublicKeyAlgID"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the criterion for the subject public key signature algorithm.

@return the OID (object identifier) or the signature algorithm or {@code
        null} if it's not to be checked."
      end

      operation 932891 "setSubjectPublicKey"
	public explicit_return_type "void"
	nparams 1
	  param inout name "key" type class_ref 199963 // PublicKey
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the criterion for the subject public key.

@param key
           the subject public key or {@code null} to not check the key."
      end

      operation 933019 "setSubjectPublicKey"
	public explicit_return_type "void"
	nparams 1
	  param inout name "key" explicit_type "byte"
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the criterion for the subject public key.

@param key
           the subject public key in ASN.1 DER encoded format or {@code null} to
           not check the key.
@throws IOException
            if decoding the the public key fails."
      end

      operation 933147 "getSubjectPublicKey"
	public return_type class_ref 199963 // PublicKey
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the criterion for the subject public key.

@return the subject public key or {@code null} if the key is not to be
        checked."
      end

      operation 933275 "setKeyUsage"
	public explicit_return_type "void"
	nparams 1
	  param inout name "keyUsage" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the criterion for the {@literal KeyUsage} extension.

@param keyUsage
           the boolean array in the format as returned by
           {@link X509Certificate#getKeyUsage()}, or {@code null} to not
           check the key usage."
      end

      operation 933403 "getKeyUsage"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the criterion for the {@literal KeyUsage} extension.

@return the boolean array in the format as returned by
        {@link X509Certificate#getKeyUsage()}, or {@code null} if the key
        usage is not to be checked."
      end

      operation 933531 "setExtendedKeyUsage"
	public explicit_return_type "void"
	nparams 1
	  param inout name "keyUsage" type class_ref 129691 // Set
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<String> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the criterion for the {@literal ExtendedKeyUsage} extension.

@param keyUsage
           the set of key usage OIDs, or {@code null} to not check it.
@throws IOException
            if one of the OIDs is invalid."
      end

      operation 933659 "getExtendedKeyUsage"
	public return_type class_ref 129691 // Set
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the criterion for the {@literal ExtendedKeyUsage} extension.

@return the set of key usage OIDs, or {@code null} if it's not to be
        checked."
      end

      operation 933787 "setMatchAllSubjectAltNames"
	public explicit_return_type "void"
	nparams 1
	  param inout name "matchAllNames" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the flag for the matching behavior for subject alternative names.
<p>
The flag indicates whether a certificate must contain all or at least one
of the subject alternative names specified by {@link
#setSubjectAlternativeNames} or {@link #addSubjectAlternativeName}.

@param matchAllNames
           {@code true} if a certificate must contain all of the
           specified subject alternative names, otherwise {@code false}."
      end

      operation 933915 "getMatchAllSubjectAltNames"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the flag for the matching behavior for subject alternative names.
<p>
The flag indicates whether a certificate must contain all or at least one
of the subject alternative names specified by {@link
#setSubjectAlternativeNames} or {@link #addSubjectAlternativeName}.

@return {@code true} if a certificate must contain all of the specified
        subject alternative names, otherwise {@code false}."
      end

      operation 934043 "setSubjectAlternativeNames"
	public explicit_return_type "void"
	nparams 1
	  param inout name "names" type class_ref 160667 // Collection
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<List<?>> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the criterion for subject alternative names.
<p>
the certificate must contain all or at least one of the specified subject
alternative names. The behavior is specified by
{@link #getMatchAllSubjectAltNames}.
<p>
The specified parameter {@code names} is a collection with an entry for
each name to be included in the criterion. The name is specified as a
{@code List}, the first entry must be an {@code Integer} specifying the
name type (0-8), the second entry must be a {@code String} or a byte
array specifying the name (in string or ASN.1 DER encoded form)

@param names
           the names collection or {@code null} to not perform this check.
@throws IOException
            if the decoding of a name fails."
      end

      operation 934171 "addSubjectAlternativeName"
	public explicit_return_type "void"
	nparams 2
	  param in name "tag" explicit_type "int"
	  param inout name "name" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a subject alternative name to the respective criterion.

@param tag
           the type of the name
@param name
           the name in string format.
@throws IOException
            if parsing the name fails."
      end

      operation 934299 "addSubjectAlternativeName"
	public explicit_return_type "void"
	nparams 2
	  param in name "tag" explicit_type "int"
	  param inout name "name" explicit_type "byte"
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a subject alternative name to the respective criterion.

@param tag
           the type of the name.
@param name
           the name in ASN.1 DER encoded form.
@throws IOException
            if the decoding of the name fails."
      end

      operation 934427 "getSubjectAlternativeNames"
	public return_type class_ref 160667 // Collection
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<List<?>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the criterion for subject alternative names.
<p>
the certificate must contain all or at least one of the specified subject
alternative names. The behavior is specified by
{@link #getMatchAllSubjectAltNames}.
<p>
The subject alternative names is a collection with an entry for each name
included in the criterion. The name is specified as a {@code List}, the
first entry is an {@code Integer} specifying the name type (0-8), the
second entry is byte array specifying the name in ASN.1 DER encoded form)

@return the names collection or {@code null} if none specified."
      end

      operation 934555 "setNameConstraints"
	public explicit_return_type "void"
	nparams 1
	  param inout name "bytes" explicit_type "byte"
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the criterion for the name constraints.
<p>
The certificate must constraint subject and subject alternative names
that match the specified name constraints.
<p>
The name constraints in ASN.1:

<pre>
NameConstraints ::= SEQUENCE {
       permittedSubtrees       [0]     GeneralSubtrees OPTIONAL,
       excludedSubtrees        [1]     GeneralSubtrees OPTIONAL }

GeneralSubtrees ::= SEQUENCE SIZE (1..MAX) OF GeneralSubtree

GeneralSubtree ::= SEQUENCE {
       base                    GeneralName,
       minimum         [0]     BaseDistance DEFAULT 0,
       maximum         [1]     BaseDistance OPTIONAL }

BaseDistance ::= INTEGER (0..MAX)

GeneralName ::= CHOICE {
       otherName                       [0]     OtherName,
       rfc822Name                      [1]     IA5String,
       dNSName                         [2]     IA5String,
       x400Address                     [3]     ORAddress,
       directoryName                   [4]     Name,
       ediPartyName                    [5]     EDIPartyName,
       uniformResourceIdentifier       [6]     IA5String,
       iPAddress                       [7]     OCTET STRING,
       registeredID                    [8]     OBJECT IDENTIFIER}

</pre>

@param bytes
           the name constraints in ASN.1 DER encoded format, or null to
           not check any constraints.
@throws IOException
            if decoding the name constraints fail."
      end

      operation 934683 "getNameConstraints"
	public explicit_return_type "byte"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the criterion for the name constraints.

@return the name constraints or {@code null} if none specified.
@see #setNameConstraints"
      end

      operation 934811 "setBasicConstraints"
	public explicit_return_type "void"
	nparams 1
	  param in name "pathLen" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the criterion for the basic constraints extension.
<p>
A value greater than or equal to zero indicates that a certificate must
include a basic constraints extension with a path length of a least that
value. A value of {@code -2} indicates that only end-entity certificates
are accepted. A value of {@code -1} indicates that no check is done.

@param pathLen
           the value specifying the criterion.
@throws IllegalArgumentException
            if {@code pathLen} is less than {@code -2}."
      end

      operation 934939 "getBasicConstraints"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the criterion for the basic constraints extension.
<p>
A value greater than or equal to zero indicates that a certificate must
include a basic constraints extension with a path length of a least that
value. A value of {@code -2} indicates that only end-entity certificates
are accepted. A value of {@code -1} indicates that no check is done.

@return the value of the criterion."
      end

      operation 935067 "setPolicy"
	public explicit_return_type "void"
	nparams 1
	  param inout name "policies" type class_ref 129691 // Set
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<String> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the criterion for the policy constraint.
<p>
The certificate must have at least one of the specified certificate
policy extensions. For an empty set the certificate must have at least
some policies in its policy extension.

@param policies
           the certificate policy OIDs, an empty set, or {@code null} to
           not perform this check.
@throws IOException
            if parsing the specified OIDs fails."
      end

      operation 935195 "getPolicy"
	public return_type class_ref 129691 // Set
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<String> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the criterion for the policy constraint.
<p>
The certificate must have at least one of the certificate policy
extensions. For an empty set the certificate must have at least some
policies in its policy extension.

@return the certificate policy OIDs, an empty set, or {@code null} if not
        to be checked."
      end

      operation 935323 "addPathToName"
	public explicit_return_type "void"
	nparams 2
	  param in name "type" explicit_type "int"
	  param inout name "name" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a {@literal \"pathToName\"} to the respective criterion.

@param type
           the type of the name.
@param name
           the name in string format.
@throws IOException
            if parsing fails.
@see #setPathToNames"
      end

      operation 935451 "setPathToNames"
	public explicit_return_type "void"
	nparams 1
	  param inout name "names" type class_ref 160667 // Collection
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<List<?>> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the criterion for the pathToNames constraint.
<p>
This allows to specify the complete set of names, a certificate's name
constraints must permit.
<p>
The specified parameter {@code names} is a collection with an entry for
each name to be included in the criterion. The name is specified as a
{@code List}, the first entry must be an {@code Integer} specifying the
name type (0-8), the second entry must be a {@code String} or a byte
array specifying the name (in string or ASN.1 DER encoded form)

@param names
           the names collection or {@code null} to not perform this
           check.
@throws IOException
            if decoding fails."
      end

      operation 935579 "addPathToName"
	public explicit_return_type "void"
	nparams 2
	  param in name "type" explicit_type "int"
	  param inout name "name" explicit_type "byte"
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a {@literal \"pathToName\"} to the respective criterion.

@param type
           the type of the name
@param name
           the name in ASN.1 DER encoded form.
@throws IOException
            if decoding fails.
@see #setPathToNames"
      end

      operation 935707 "getPathToNames"
	public return_type class_ref 160667 // Collection
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<List<?>> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the criterion for the pathToNames constraint.
<p>
The constraint is a collection with an entry for each name to be included
in the criterion. The name is specified as a {@code List}, the first
entry is an {@code Integer} specifying the name type (0-8), the second
entry is a byte array specifying the name in ASN.1 DER encoded form.

@return the pathToNames constraint or {@code null} if none specified."
      end

      operation 935835 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this {@code X509CertSelector}
instance.

@return a string representation of this {@code X509CertSelector}
        instance."
      end

      operation 935963 "getExtensionValue"
	private explicit_return_type "byte"
	nparams 2
	  param inout name "cert" type class_ref 214299 // X509Certificate
	  param inout name "oid" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 936091 "match"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "certificate" type class_ref 173595 // Certificate
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the specified certificate matches all the criteria
collected in this instance.

@param certificate
           the certificate to check.
@return {@code true} if the certificate matches all the criteria,
        otherwise {@code false}."
      end

      operation 936219 "clone"
	public return_type class_ref 3401484 // Object
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Clones this {@code X509CertSelector} instance.

@return the cloned instance."
      end
    end

    class 214939 "X509CRL"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Abstract base class for X.509 certificate revocation lists (CRL).
<p>
More information regarding CRL can be found in RFC 2459,
\"Internet X.509 Public Key Infrastructure Certificate and CRL Profile\" at <a
href
=\"http://www.ietf.org/rfc/rfc2459.txt\">http://www.ietf.org/rfc/rfc2459.txt
</a>."
      classrelation 317723 // <generalisation>
	relation 317723 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 317723 // <generalisation>
	  b parent class_ref 210331 // CRL
      end

      classrelation 317851 // <realization>
	relation 317851 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 317851 // <realization>
	  b parent class_ref 214427 // X509Extension
      end

      operation 936347 "X509CRL"
	protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code X509CRL} instance."
      end

      operation 936475 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "other" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the specified object equals to this instance.

@param other
           the object to compare.
@return {@code true} if the specified object is equal to this, otherwise
        {@code false}."
      end

      operation 936603 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the hashcode of this CRL instance.

@return the hashcode."
      end

      operation 936731 "getEncoded"
	abstract public explicit_return_type "byte"
	nparams 0
	nexceptions 1
	  exception class_ref 210459 // CRLException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns this CRL in ASN.1 DER encoded form.

@return this CRL in ASN.1 DER encoded form.
@throws CRLException
            if encoding fails."
      end

      operation 936859 "verify"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "key" type class_ref 199963 // PublicKey
	nexceptions 5
	  exception class_ref 210459 // CRLException
	  exception class_ref 195867 // NoSuchAlgorithmException
	  exception class_ref 201755 // InvalidKeyException
	  exception class_ref 195995 // NoSuchProviderException
	  exception class_ref 208027 // SignatureException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Verifies this CRL by verifying that this CRL was signed with the
corresponding private key to the specified public key.

@param key
           the public key to verify this CRL with.
@throws CRLException
            if encoding or decoding fails.
@throws NoSuchAlgorithmException
            if a needed algorithm is not present.
@throws InvalidKeyException
            if the specified key is invalid.
@throws NoSuchProviderException
            if no provider can be found.
@throws SignatureException
            if errors occur on signatures."
      end

      operation 936987 "verify"
	abstract public explicit_return_type "void"
	nparams 2
	  param inout name "key" type class_ref 199963 // PublicKey
	  param inout name "sigProvider" type class_ref 3399692 // String
	nexceptions 5
	  exception class_ref 210459 // CRLException
	  exception class_ref 195867 // NoSuchAlgorithmException
	  exception class_ref 201755 // InvalidKeyException
	  exception class_ref 195995 // NoSuchProviderException
	  exception class_ref 208027 // SignatureException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Verifies this CRL by verifying that this CRL was signed with the
corresponding private key to the specified public key. The signature
verification engine of the specified provider will be used.

@param key
           the public key to verify this CRL with.
@param sigProvider
           the name of the provider for the signature algorithm.
@throws CRLException
            if encoding decoding fails.
@throws NoSuchAlgorithmException
            if a needed algorithm is not present.
@throws InvalidKeyException
            if the specified key is invalid.
@throws NoSuchProviderException
            if the specified provider cannot be found.
@throws SignatureException
            if errors occur on signatures."
      end

      operation 937115 "getVersion"
	abstract public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the version number of this CRL.

@return the version number of this CRL."
      end

      operation 937243 "getIssuerDN"
	abstract public return_type class_ref 176539 // Principal
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<b>Do not use</b>, use {@link #getIssuerX500Principal()} instead. Returns
the issuer as an implementation specific Principal object.

@return the issuer distinguished name."
      end

      operation 937371 "getIssuerX500Principal"
	public return_type class_ref 214171 // X500Principal
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the issuer distinguished name of this CRL.

@return the issuer distinguished name of this CRL."
      end

      operation 937499 "getThisUpdate"
	abstract public return_type class_ref 171931 // Date
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code thisUpdate} value of this CRL.

@return the {@code thisUpdate} value of this CRL."
      end

      operation 937627 "getNextUpdate"
	abstract public return_type class_ref 171931 // Date
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code nextUpdate} value of this CRL.

@return the {@code nextUpdate} value of this CRL, or {@code null} if none
        is present."
      end

      operation 937755 "getRevokedCertificate"
	abstract public return_type class_ref 215067 // X509CRLEntry
	nparams 1
	  param inout name "serialNumber" type class_ref 166299 // BigInteger
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the CRL entry with the specified certificate serial number.

@param serialNumber
           the certificate serial number to search for a CRL entry.
@return the entry for the specified certificate serial number, or {@code
        null} if not found."
      end

      operation 937883 "getRevokedCertificate"
	public return_type class_ref 215067 // X509CRLEntry
	nparams 1
	  param inout name "certificate" type class_ref 214299 // X509Certificate
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the CRL entry for the specified certificate.

@param certificate
           the certificate to search a CRL entry for.
@return the entry for the specified certificate, or {@code null} if not
        found."
      end

      operation 938011 "getRevokedCertificates"
	abstract public return_type class_ref 129691 // Set
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<? extends X509CRLEntry> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the set of revoked certificates.

@return the set of revoked certificates, or {@code null} if no revoked
        certificates are in this CRL."
      end

      operation 938139 "getTBSCertList"
	abstract public explicit_return_type "byte"
	nparams 0
	nexceptions 1
	  exception class_ref 210459 // CRLException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the {@code tbsCertList} information of this CRL in DER encoded
form.

@return the CRL information in DER encoded form.
@throws CRLException
            if encoding fails."
      end

      operation 938267 "getSignature"
	abstract public explicit_return_type "byte"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the signature bytes of this CRL.

@return the signature bytes of this CRL."
      end

      operation 938395 "getSigAlgName"
	abstract public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the name of the signature algorithm.

@return the name of the signature algorithm."
      end

      operation 938523 "getSigAlgOID"
	abstract public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the OID of the signature algorithm.

@return the OID of the signature algorithm."
      end

      operation 938651 "getSigAlgParams"
	abstract public explicit_return_type "byte"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the parameters of the signature algorithm in DER encoded form.

@return the parameters of the signature algorithm in DER encoded form, or
        {@code null} if not present."
      end
    end

    class 215067 "X509CRLEntry"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Abstract base class for entries in a certificate revocation list (CRL).

@see X509CRL"
      classrelation 317979 // <realization>
	relation 317979 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 317979 // <realization>
	  b parent class_ref 214427 // X509Extension
      end

      operation 938779 "X509CRLEntry"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code X509CRLEntry} instance."
      end

      operation 938907 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "other" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the specified object equals to this instance.

@param other
           the object to compare.
@return {@code true} if the specified object equals to this instance,
        otherwise {@code false}."
      end

      operation 939035 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the hashcode of this instance.

@return the hashcode of this instance."
      end

      operation 939163 "getEncoded"
	abstract public explicit_return_type "byte"
	nparams 0
	nexceptions 1
	  exception class_ref 210459 // CRLException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns this entry in ASN.1 DER encoded form.

@return the encoded form of this entry.
@throws CRLException
            if encoding fails."
      end

      operation 939291 "getSerialNumber"
	abstract public return_type class_ref 166299 // BigInteger
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the serial number of the revoked certificate.

@return the serial number of the revoked certificate."
      end

      operation 939419 "getCertificateIssuer"
	public return_type class_ref 214171 // X500Principal
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the issuer of the revoked certificate.

@return the issuer of the revoked certificate, or {@code null} if the
        issuer is equal to the CRL issuer."
      end

      operation 939547 "getRevocationDate"
	abstract public return_type class_ref 171931 // Date
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the date when the certificate is revoked.

@return the date when the certificate is revoked."
      end

      operation 939675 "hasExtensions"
	abstract public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether this CRL entry has extensions.

@return {@code true} is this CRL entry has extensions, otherwise {@code
        false}."
      end

      operation 939803 "toString"
	abstract public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this instance.

@return a string representation of this instance."
      end
    end

    class 215195 "X509CRLSelector"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A CRL selector ({@code CRLSelector} for selecting {@code
X509CRL}s that match the specified criteria.
<p>
When constructed, all criteria are set to default values that will match any
{@code X509CRL}."
      classrelation 318107 // <realization>
	relation 318107 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 318107 // <realization>
	  b parent class_ref 212763 // CRLSelector
      end

      classrelation 318235 // issuerNames (<unidirectional association>)
	relation 318235 --->
	  a role_name "issuerNames" private
	    comment " issuerNames criterion:
 contains X.500 distinguished names in CANONICAL format
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<String> ${name}${value};
"
	    classrelation_ref 318235 // issuerNames (<unidirectional association>)
	  b parent class_ref 138267 // ArrayList
      end

      classrelation 318363 // issuerPrincipals (<unidirectional association>)
	relation 318363 --->
	  a role_name "issuerPrincipals" private
	    comment " contains X500Principal objects corresponding to the names
 from issuerNames collection (above)
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<X500Principal> ${name}${value};
"
	    classrelation_ref 318363 // issuerPrincipals (<unidirectional association>)
	  b parent class_ref 138267 // ArrayList
      end

      classrelation 318491 // minCRL (<unidirectional association>)
	relation 318491 --->
	  a role_name "minCRL" private
	    comment " minCRLNumber criterion
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 318491 // minCRL (<unidirectional association>)
	  b parent class_ref 166299 // BigInteger
      end

      classrelation 318619 // maxCRL (<unidirectional association>)
	relation 318619 --->
	  a role_name "maxCRL" private
	    comment " maxCRLNumber criterion
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 318619 // maxCRL (<unidirectional association>)
	  b parent class_ref 166299 // BigInteger
      end

      attribute 262683 "dateAndTime"
	private explicit_type "long"
	init_value " -1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " dateAndTime criterion"
      end

      classrelation 318747 // certificateChecking (<unidirectional association>)
	relation 318747 --->
	  a role_name "certificateChecking" private
	    comment " the certificate being checked
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 318747 // certificateChecking (<unidirectional association>)
	  b parent class_ref 214299 // X509Certificate
      end

      operation 939931 "X509CRLSelector"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new {@code X509CertSelector}."
      end

      operation 940059 "setIssuers"
	public explicit_return_type "void"
	nparams 1
	  param inout name "issuers" type class_ref 160667 // Collection
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<X500Principal> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the criterion for the issuer distinguished names.
<p>
The CRL issuer must match at least one of the specified distinguished
names.

@param issuers
           the list of issuer distinguished names to match, or {@code
           null} if any issuer distinguished name will do."
      end

      operation 940187 "setIssuerNames"
	public explicit_return_type "void"
	nparams 1
	  param inout name "names" type class_ref 160667 // Collection
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<b>Do not use:</b> use {@link #setIssuers(Collection)} or one of
{@link #addIssuerName} instead. Sets the criterion for the issuer
distinguished names.
<p>
The CRL issuer must match at least one of the specified distinguished
names.
<p>
The specified parameter {@code names} is a collection with an entry for
each name to be included in the criterion. The name is specified as a
{@code String} or a byte array specifying the name (in RFC 2253 or ASN.1
DER encoded form)

@param names
           the list of issuer distinguished names to match, or {@code
           null} if any issuer distinguished name will do.
@throws IOException
            if parsing fails."
      end

      operation 940315 "addIssuer"
	public explicit_return_type "void"
	nparams 1
	  param inout name "issuer" type class_ref 214171 // X500Principal
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds an issuer to the criterion for the issuer distinguished names.
<p>
The CRL issuer must match at least one of the specified distinguished
names.

@param issuer
           the issuer to add to the criterion"
      end

      operation 940443 "addIssuerName"
	public explicit_return_type "void"
	nparams 1
	  param inout name "iss_name" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<b>Do not use:</b>, use {@link #addIssuer(X500Principal)} or
{@link #addIssuerName(byte[])} instead. It can fail to match some CRLs
because of a loss of encoding information in a RFC 2253 string.
<p>
Adds an issuer to the criterion for the issuer distinguished names. The
CRK issuer must match at least one of the specified distinguished names.

@param iss_name
           the RFC 2253 encoded name.
@throws IOException
            if parsing fails."
      end

      operation 940571 "addIssuerName"
	public explicit_return_type "void"
	nparams 1
	  param inout name "iss_name" explicit_type "byte"
	nexceptions 1
	  exception class_ref 128539 // IOException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds an issuer to the criterion for the issuer distinguished names.
<p>
The CRL issuer must match at least one of the specified distinguished
names.

@param iss_name
           the issuer to add to the criterion in ASN.1 DER encoded form.
@throws IOException
            if parsing fails."
      end

      operation 940699 "setMinCRLNumber"
	public explicit_return_type "void"
	nparams 1
	  param inout name "minCRL" type class_ref 166299 // BigInteger
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the criterion for the minimum CRL number.
<p>
The CRL must have a number extension with a value greater than or equal
to the specified parameter.

@param minCRL
           the minimum CRL number or null to not check the minimum CRL
           number"
      end

      operation 940827 "setMaxCRLNumber"
	public explicit_return_type "void"
	nparams 1
	  param inout name "maxCRL" type class_ref 166299 // BigInteger
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the criterion for the maximum CRL number.
<p>
The CRL must have a number extension with a value less than or equal to
the specified parameter.

@param maxCRL
           the maximum CRL number or null to not check the maximum CRL
           number."
      end

      operation 940955 "setDateAndTime"
	public explicit_return_type "void"
	nparams 1
	  param inout name "dateAndTime" type class_ref 171931 // Date
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the criterion for the CRL update period.
<p>
The CRL's {@code thisUpdate} value must be equal or before the specified
date and the {@code nextUpdate} value must be after the specified date.

@param dateAndTime
           the date to search for valid CRL's or {@code null} to not
           check the date."
      end

      operation 941083 "setCertificateChecking"
	public explicit_return_type "void"
	nparams 1
	  param inout name "cert" type class_ref 214299 // X509Certificate
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets a certificate hint to find CRLs. It's not a criterion but may help
finding relevant CRLs.

@param cert
           the certificate hint or {@code null}."
      end

      operation 941211 "getIssuers"
	public return_type class_ref 160667 // Collection
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<X500Principal> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the criterion for the issuer distinguished names.
<p>
The CRL issuer must match at least one of the distinguished names.

@return the unmodifiable list of issuer distinguished names to match, or
        {@code null} if any issuer distinguished name will do."
      end

      operation 941339 "getIssuerNames"
	public return_type class_ref 160667 // Collection
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<Object> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the criterion for the issuer distinguished names.
<p>
The CRL issuer must match at least one of the distinguished names.

@return a copy of the list of issuer distinguished names to
        match, or {@code null} if any issuer distinguished name
        will do. The elements may be strings or ASN.1 DER
        encoded byte arrays."
      end

      operation 941467 "getMinCRL"
	public return_type class_ref 166299 // BigInteger
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the criterion for the minimum CRL number.
<p>
The CRL must have a number extension with a value greater than or equal
to the returned value.

@return the minimum CRL number or {@code null} if the minimum CRL number
        is not to be checked."
      end

      operation 941595 "getMaxCRL"
	public return_type class_ref 166299 // BigInteger
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the criterion for the maximum CRL number.
<p>
The CRL must have a number extension with a value less than or equal to
the returned value.

@return the maximum CRL number or null if the maximum CRL number is not
        checked."
      end

      operation 941723 "getDateAndTime"
	public return_type class_ref 171931 // Date
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the criterion for the CRL update period.
<p>
The CRL's {@code thisUpdate} value must be equal or before the returned
date and the {@code nextUpdate} value must be after the returned date.

@return the date to search for valid CRL's or {@code null} if the date is
        not checked."
      end

      operation 941851 "getCertificateChecking"
	public return_type class_ref 214299 // X509Certificate
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the certificate hint to find CRLs. It's not a criterion but may
help finding relevant CRLs.

@return the certificate hint or {@code null} if none set."
      end

      operation 941979 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a string representation of this {@code X509CRLSelector} instance.

@return a string representation of this {@code X509CRLSelector} instance."
      end

      operation 942107 "match"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "crl" type class_ref 210331 // CRL
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the specified CRL matches all the criteria collected in
this instance.

@param crl
           the CRL to check.
@return {@code true} if the CRL matches all the criteria, otherwise
        {@code false}."
      end

      operation 942235 "clone"
	public return_type class_ref 3401484 // Object
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Clones this {@code X509CRL} instance.

@return the cloned instance."
      end
    end
  end

  deploymentview 130587 "cert"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 193179 "Certificate"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.ByteArrayInputStream;
import java.io.NotSerializableException;
import java.io.ObjectStreamException;
import java.io.ObjectStreamField;
import java.io.Serializable;
import java.security.InvalidKeyException;
import java.security.NoSuchAlgorithmException;
import java.security.NoSuchProviderException;
import java.security.PublicKey;
import java.security.SignatureException;
import java.util.Arrays;
${definition}"
      associated_classes
	class_ref 173595 // Certificate
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 193307 "CertificateException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.security.GeneralSecurityException;
${definition}"
      associated_classes
	class_ref 204059 // CertificateException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 193435 "CertificateEncodingException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 209691 // CertificateEncodingException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 193563 "CertificateExpiredException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 209947 // CertificateExpiredException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 193691 "CertificateFactory"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.InputStream;
import java.security.NoSuchAlgorithmException;
import java.security.NoSuchProviderException;
import java.security.Provider;
import java.security.Security;
import java.util.Collection;
import java.util.Iterator;
import java.util.List;
import org.apache.harmony.security.fortress.Engine;
${definition}"
      associated_classes
	class_ref 210075 // CertificateFactory
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 193819 "CertificateFactorySpi"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.InputStream;
import java.util.Collection;
import java.util.Iterator;
import java.util.List;
${definition}"
      associated_classes
	class_ref 210203 // CertificateFactorySpi
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 193947 "CertificateNotYetValidException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 210587 // CertificateNotYetValidException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 194075 "CertificateParsingException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 210715 // CertificateParsingException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 194203 "CertPath"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.ByteArrayInputStream;
import java.io.NotSerializableException;
import java.io.ObjectStreamException;
import java.io.ObjectStreamField;
import java.io.Serializable;
import java.util.Iterator;
import java.util.List;
${definition}"
      associated_classes
	class_ref 200219 // CertPath
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 194331 "CertPathBuilder"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.security.InvalidAlgorithmParameterException;
import java.security.NoSuchAlgorithmException;
import java.security.NoSuchProviderException;
import java.security.Provider;
import java.security.Security;
import org.apache.harmony.security.fortress.Engine;
${definition}"
      associated_classes
	class_ref 210971 // CertPathBuilder
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 194459 "CertPathBuilderException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.security.GeneralSecurityException;
${definition}"
      associated_classes
	class_ref 211483 // CertPathBuilderException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 194587 "CertPathBuilderResult"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 211227 // CertPathBuilderResult
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 194715 "CertPathBuilderSpi"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.security.InvalidAlgorithmParameterException;
${definition}"
      associated_classes
	class_ref 211099 // CertPathBuilderSpi
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 194843 "CertPathParameters"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 211355 // CertPathParameters
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 194971 "CertPathValidator"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.security.InvalidAlgorithmParameterException;
import java.security.NoSuchAlgorithmException;
import java.security.NoSuchProviderException;
import java.security.Provider;
import java.security.Security;
import org.apache.harmony.security.fortress.Engine;
${definition}"
      associated_classes
	class_ref 211611 // CertPathValidator
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 195099 "CertPathValidatorException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.security.GeneralSecurityException;
${definition}"
      associated_classes
	class_ref 211995 // CertPathValidatorException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 195227 "CertPathValidatorResult"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 211867 // CertPathValidatorResult
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 195355 "CertPathValidatorSpi"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.security.InvalidAlgorithmParameterException;
${definition}"
      associated_classes
	class_ref 211739 // CertPathValidatorSpi
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 195483 "CertSelector"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 212123 // CertSelector
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 195611 "CertStore"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.security.InvalidAlgorithmParameterException;
import java.security.NoSuchAlgorithmException;
import java.security.NoSuchProviderException;
import java.security.Provider;
import java.security.Security;
import java.util.Collection;
import org.apache.harmony.security.fortress.Engine;
${definition}"
      associated_classes
	class_ref 212251 // CertStore
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 195739 "CertStoreException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.security.GeneralSecurityException;
${definition}"
      associated_classes
	class_ref 212635 // CertStoreException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 195867 "CertStoreParameters"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 212507 // CertStoreParameters
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 195995 "CertStoreSpi"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.security.InvalidAlgorithmParameterException;
import java.util.Collection;
${definition}"
      associated_classes
	class_ref 212379 // CertStoreSpi
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 196123 "CollectionCertStoreParameters"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.util.Collection;
import java.util.Collections;
${definition}"
      associated_classes
	class_ref 212891 // CollectionCertStoreParameters
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 196251 "CRL"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 210331 // CRL
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 196379 "CRLException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.security.GeneralSecurityException;
${definition}"
      associated_classes
	class_ref 210459 // CRLException
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 196507 "CRLSelector"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 212763 // CRLSelector
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 196635 "LDAPCertStoreParameters"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 213019 // LDAPCertStoreParameters
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 196763 "PKIXParameters"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.security.InvalidAlgorithmParameterException;
import java.security.KeyStore;
import java.security.KeyStoreException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import java.util.Enumeration;
import java.util.HashSet;
import java.util.Iterator;
import java.util.List;
import java.util.Set;
${definition}"
      associated_classes
	class_ref 213275 // PKIXParameters
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 196891 "PKIXBuilderParameters"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.security.InvalidAlgorithmParameterException;
import java.security.InvalidParameterException;
import java.security.KeyStore;
import java.security.KeyStoreException;
import java.util.Set;
${definition}"
      associated_classes
	class_ref 213147 // PKIXBuilderParameters
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 197019 "PKIXCertPathValidatorResult"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.security.PublicKey;
${definition}"
      associated_classes
	class_ref 213787 // PKIXCertPathValidatorResult
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 197147 "PKIXCertPathBuilderResult"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.security.PublicKey;
${definition}"
      associated_classes
	class_ref 213659 // PKIXCertPathBuilderResult
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 197275 "PKIXCertPathChecker"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.util.Collection;
import java.util.Set;
${definition}"
      associated_classes
	class_ref 213531 // PKIXCertPathChecker
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 197403 "PolicyNode"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.util.Iterator;
import java.util.Set;
${definition}"
      associated_classes
	class_ref 213915 // PolicyNode
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 197531 "PolicyQualifierInfo"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import org.apache.harmony.security.asn1.ObjectIdentifier;
import org.apache.harmony.security.utils.Array;
${definition}"
      associated_classes
	class_ref 214043 // PolicyQualifierInfo
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 197659 "TrustAnchor"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.security.PublicKey;
import javax.security.auth.x500.X500Principal;
import org.apache.harmony.security.utils.Array;
import org.apache.harmony.security.x509.NameConstraints;
${definition}"
      associated_classes
	class_ref 213403 // TrustAnchor
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 197787 "X509Extension"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.util.Set;
${definition}"
      associated_classes
	class_ref 214427 // X509Extension
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 197915 "X509Certificate"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.ByteArrayInputStream;
import java.math.BigInteger;
import java.security.Principal;
import java.util.Collection;
import java.util.Date;
import java.util.List;
import javax.security.auth.x500.X500Principal;
${definition}"
      associated_classes
	class_ref 214299 // X509Certificate
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 198043 "X509CertSelector"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.math.BigInteger;
import java.security.PublicKey;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.Collections;
import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import javax.security.auth.x500.X500Principal;
import libcore.util.EmptyArray;
import org.apache.harmony.security.asn1.ASN1OctetString;
import org.apache.harmony.security.utils.Array;
import org.apache.harmony.security.x509.AlgorithmIdentifier;
import org.apache.harmony.security.x509.CertificatePolicies;
import org.apache.harmony.security.x509.GeneralName;
import org.apache.harmony.security.x509.GeneralNames;
import org.apache.harmony.security.x509.NameConstraints;
import org.apache.harmony.security.x509.PolicyInformation;
import org.apache.harmony.security.x509.PrivateKeyUsagePeriod;
import org.apache.harmony.security.x509.SubjectPublicKeyInfo;
${definition}"
      associated_classes
	class_ref 214555 // X509CertSelector
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 198171 "X509CRL"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.ByteArrayInputStream;
import java.math.BigInteger;
import java.security.InvalidKeyException;
import java.security.NoSuchAlgorithmException;
import java.security.NoSuchProviderException;
import java.security.Principal;
import java.security.PublicKey;
import java.security.SignatureException;
import java.util.Arrays;
import java.util.Date;
import java.util.Set;
import javax.security.auth.x500.X500Principal;
${definition}"
      associated_classes
	class_ref 214939 // X509CRL
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 198299 "X509CRLEntry"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.math.BigInteger;
import java.util.Arrays;
import java.util.Date;
import javax.security.auth.x500.X500Principal;
${definition}"
      associated_classes
	class_ref 215067 // X509CRLEntry
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end

    artifact 198427 "X509CRLSelector"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Collections;
import java.util.Date;
import javax.security.auth.x500.X500Principal;
import org.apache.harmony.security.asn1.ASN1Integer;
import org.apache.harmony.security.asn1.ASN1OctetString;
import org.apache.harmony.security.x501.Name;
${definition}"
      associated_classes
	class_ref 215195 // X509CRLSelector
      end
      comment " Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the \"License\"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an \"AS IS\" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License."
    end
  end
end
