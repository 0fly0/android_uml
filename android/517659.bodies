class InputStage
!!!3227803.java!!!	InputStage(inout next : InputStage)
            mNext = next;
!!!3227931.java!!!	deliver(inout q : QueuedInputEvent) : void
            if ((q.mFlags & QueuedInputEvent.FLAG_FINISHED) != 0) {
                forward(q);
            } else if (mView == null || !mAdded) {
                Slog.w(TAG, "Dropping event due to root view being removed: " + q.mEvent);
                finish(q, false);
            } else if (!mAttachInfo.mHasWindowFocus &&
                  !q.mEvent.isFromSource(InputDevice.SOURCE_CLASS_POINTER) &&
                  !isTerminalInputEvent(q.mEvent)) {
                // If this is a focused event and the window doesn't currently have input focus,
                // then drop this event.  This could be an event that came back from the previous
                // stage but the window has lost focus in the meantime.
                Slog.w(TAG, "Dropping event due to no window focus: " + q.mEvent);
                finish(q, false);
            } else {
                apply(q, onProcess(q));
            }
!!!3228059.java!!!	finish(inout q : QueuedInputEvent, inout handled : boolean) : void
            q.mFlags |= QueuedInputEvent.FLAG_FINISHED;
            if (handled) {
                q.mFlags |= QueuedInputEvent.FLAG_FINISHED_HANDLED;
            }
            forward(q);
!!!3228187.java!!!	forward(inout q : QueuedInputEvent) : void
            onDeliverToNext(q);
!!!3228315.java!!!	apply(inout q : QueuedInputEvent, in result : int) : void
            if (result == FORWARD) {
                forward(q);
            } else if (result == FINISH_HANDLED) {
                finish(q, true);
            } else if (result == FINISH_NOT_HANDLED) {
                finish(q, false);
            } else {
                throw new IllegalArgumentException("Invalid result: " + result);
            }
!!!3228443.java!!!	onProcess(inout q : QueuedInputEvent) : int
            return FORWARD;
!!!3228571.java!!!	onDeliverToNext(inout q : QueuedInputEvent) : void
            if (mNext != null) {
                mNext.deliver(q);
            } else {
                finishInputEvent(q);
            }
