class LogRecord
!!!1722011.java!!!	LogRecord(inout level : Level, inout msg : String)
        if (level == null) {
            throw new NullPointerException("level == null");
        }
        this.level = level;
        this.message = msg;
        this.millis = System.currentTimeMillis();

        synchronized (LogRecord.class) {
            this.sequenceNumber = currentSequenceNumber++;
            Integer id = currentThreadId.get();
            if (id == null) {
                this.threadID = initThreadId;
                currentThreadId.set(Integer.valueOf(initThreadId++));
            } else {
                this.threadID = id.intValue();
            }
        }

        this.sourceClassName = null;
        this.sourceMethodName = null;
        this.loggerName = null;
        this.parameters = null;
        this.resourceBundle = null;
        this.resourceBundleName = null;
        this.thrown = null;
!!!1722139.java!!!	getLevel() : Level
        return level;
!!!1722267.java!!!	setLevel(inout level : Level) : void
        if (level == null) {
            throw new NullPointerException("level == null");
        }
        this.level = level;
!!!1722395.java!!!	getLoggerName() : String
        return loggerName;
!!!1722523.java!!!	setLoggerName(inout loggerName : String) : void
        this.loggerName = loggerName;
!!!1722651.java!!!	getMessage() : String
        return message;
!!!1722779.java!!!	setMessage(inout message : String) : void
        this.message = message;
!!!1722907.java!!!	getMillis() : long
        return millis;
!!!1723035.java!!!	setMillis(in millis : long) : void
        this.millis = millis;
!!!1723163.java!!!	getParameters() : Object
        return parameters;
!!!1723291.java!!!	setParameters(inout parameters : Object) : void
        this.parameters = parameters;
!!!1723419.java!!!	getResourceBundle() : ResourceBundle
        return resourceBundle;
!!!1723547.java!!!	setResourceBundle(inout resourceBundle : ResourceBundle) : void
        this.resourceBundle = resourceBundle;
!!!1723675.java!!!	getResourceBundleName() : String
        return resourceBundleName;
!!!1723803.java!!!	setResourceBundleName(inout resourceBundleName : String) : void
        this.resourceBundleName = resourceBundleName;
!!!1723931.java!!!	getSequenceNumber() : long
        return sequenceNumber;
!!!1724059.java!!!	setSequenceNumber(in sequenceNumber : long) : void
        this.sequenceNumber = sequenceNumber;
!!!1724187.java!!!	getSourceClassName() : String
        initSource();
        return sourceClassName;
!!!1724315.java!!!	initSource() : void
        if (sourceInitialized) {
            return;
        }

        boolean sawLogger = false;
        for (StackTraceElement element : new Throwable().getStackTrace()) {
            String current = element.getClassName();
            if (current.startsWith(Logger.class.getName())) {
                sawLogger = true;
            } else if (sawLogger) {
                this.sourceClassName = element.getClassName();
                this.sourceMethodName = element.getMethodName();
                break;
            }
        }

        sourceInitialized = true;
!!!1724443.java!!!	setSourceClassName(inout sourceClassName : String) : void
        sourceInitialized = true;
        this.sourceClassName = sourceClassName;
!!!1724571.java!!!	getSourceMethodName() : String
        initSource();
        return sourceMethodName;
!!!1724699.java!!!	setSourceMethodName(inout sourceMethodName : String) : void
        sourceInitialized = true;
        this.sourceMethodName = sourceMethodName;
!!!1724827.java!!!	getThreadID() : int
        return threadID;
!!!1724955.java!!!	setThreadID(in threadID : int) : void
        this.threadID = threadID;
!!!1725083.java!!!	getThrown() : Throwable
        return thrown;
!!!1725211.java!!!	setThrown(inout thrown : Throwable) : void
        this.thrown = thrown;
!!!1725339.java!!!	writeObject(inout out : ObjectOutputStream) : void
        out.defaultWriteObject();
        out.writeByte(MAJOR);
        out.writeByte(MINOR);
        if (parameters == null) {
            out.writeInt(-1);
        } else {
            out.writeInt(parameters.length);
            for (Object element : parameters) {
                out.writeObject((element == null) ? null : element.toString());
            }
        }
!!!1725467.java!!!	readObject(inout in : ObjectInputStream) : void
        in.defaultReadObject();
        byte major = in.readByte();
        byte minor = in.readByte();
        // only check MAJOR version
        if (major != MAJOR) {
            throw new IOException("Different version " + Byte.valueOf(major) + "." + Byte.valueOf(minor));
        }

        int length = in.readInt();
        if (length >= 0) {
            parameters = new Object[length];
            for (int i = 0; i < parameters.length; i++) {
                parameters[i] = in.readObject();
            }
        }
        if (resourceBundleName != null) {
            try {
                resourceBundle = Logger.loadResourceBundle(resourceBundleName);
            } catch (MissingResourceException e) {
                // Cannot find the specified resource bundle
                resourceBundle = null;
            }
        }
