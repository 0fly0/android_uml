class AmpAudioTrack
!!!10924684.cpp!!!	AmpAudioTrack(in sampleRateInHz : uint32_t, in channelCount : uint32_t, in audioFormat : audio_format_t)
    audio_channel_mask_t channelMask = audio_channel_out_mask_from_count(channelCount);

    mAudioTrack = new AudioTrack();
    if (mAudioTrack == NULL) {
        SLOGE("Failed to alloc AudioTrack");
        return;
    }
    mAudioTrack->set(AUDIO_STREAM_MUSIC,
                     sampleRateInHz,
                     audioFormat,
                     channelMask,
                     0,
                     AUDIO_OUTPUT_FLAG_FAST);
    status_t err = mAudioTrack->initCheck();
    if (err != NO_ERROR) {
        SLOGE("Failed to initialize audioTrack : (%u)", err);
        mAudioTrack.clear();
        mAudioTrack = NULL;
    }

    mStatus = NO_ERROR;
!!!10924812.cpp!!!	~AmpAudioTrack()
    if (mStatus == NO_ERROR) {
        stopReceiver();
        if (mAudioTrack != NULL) {
            if (!mAudioTrack->stopped()) {
                mAudioTrack->stop();
            }
            mAudioTrack.clear();
        }
    }
!!!10924940.cpp!!!	play() : status_t
    if (mStatus != NO_ERROR)
        return mStatus;

    if (mActive)
        return INVALID_OPERATION;

    if (mAudioTrack->stopped()) {
        mAudioTrack->start();
    }

    if (!mAudioTrack->stopped()) {
        if (startReceiver() != 0) {
            mAudioTrack->stop();
            return NO_INIT;
        }
        mActive = true;
        return NO_ERROR;
    }

    return INVALID_OPERATION;
!!!10925068.cpp!!!	record(in fileName : char) : status_t
    int fd, oldfd;

    if (mStatus != NO_ERROR)
        return mStatus;

    if (mActive)
        return INVALID_OPERATION;

    if ((fd = open(fileName, O_CREAT|O_RDWR|O_TRUNC, 0644)) < 0) {
        SLOGE("Failed to open %s : (%s)", fileName, strerror(errno));
        return PERMISSION_DENIED;
    }

    oldfd = getFd();
    setFd(fd);
    if (startReceiver() != 0) {
        setFd(oldfd);
        close(fd);
        return NO_INIT;
    }

    if (oldfd > -1)
        close(oldfd);

    mActive = true;

    return NO_ERROR;
!!!10925196.cpp!!!	stop() : status_t
    if (mStatus != NO_ERROR)
        return mStatus;

    if (!mActive)
        return INVALID_OPERATION;

    stopReceiver();

    if (!mAudioTrack->stopped()) {
        mAudioTrack->stop();
    }

    int fd = getFd();
    if (fd > -1) {
        close(fd);
        setFd(-1);
    }

    mActive = false;

    return NO_ERROR;
!!!10925324.cpp!!!	peek() : status_t
    if (mStatus != NO_ERROR)
        return mStatus;

    if (!mActive)
        return NO_INIT;

    return (pollReceiver(0) == 0) ? NO_ERROR : DEAD_OBJECT;
!!!10925964.cpp!!!	onDataReceive(inout buffer : void, in count : size_t) : bool
    if (getFd() > -1) {
        ssize_t n = safeWrite(getFd(), buffer, count);
        if (static_cast<size_t>(n) != count)
            return false;
    } else {
        if (mAudioTrack == NULL) {
            SLOGE("No AudioTrack for writing");
            return false;
        }
        ssize_t n = mAudioTrack->write(buffer, count);
        if (static_cast<size_t>(n) != count) {
            SLOGE("Failed to write to AudioTrack");
            return false;
        }
    }
    return true;
