class KeyguardMultiUserAvatar
!!!7859340.java!!!	fromXml(in resId : int, inout context : Context, inout userSelector : KeyguardMultiUserSelectorView, inout info : UserInfo) : KeyguardMultiUserAvatar
        KeyguardMultiUserAvatar icon = (KeyguardMultiUserAvatar)
                LayoutInflater.from(context).inflate(resId, userSelector, false);

        icon.init(info, userSelector);
        return icon;
!!!7859468.java!!!	KeyguardMultiUserAvatar(inout context : Context)
        this(context, null, 0);
!!!7859596.java!!!	KeyguardMultiUserAvatar(inout context : Context, inout attrs : AttributeSet)
        this(context, attrs, 0);
!!!7859724.java!!!	KeyguardMultiUserAvatar(inout context : Context, inout attrs : AttributeSet, in defStyle : int)
        super(context, attrs, defStyle);

        Resources res = mContext.getResources();
        mTextColor = res.getColor(R.color.keyguard_avatar_nick_color);
        mIconSize = res.getDimension(R.dimen.keyguard_avatar_size);
        mStroke = res.getDimension(R.dimen.keyguard_avatar_frame_stroke_width);
        mShadowRadius = res.getDimension(R.dimen.keyguard_avatar_frame_shadow_radius);
        mFrameColor = res.getColor(R.color.keyguard_avatar_frame_color);
        mFrameShadowColor = res.getColor(R.color.keyguard_avatar_frame_shadow_color);
        mHighlightColor = res.getColor(R.color.keyguard_avatar_frame_pressed_color);
        mActiveTextAlpha = ACTIVE_TEXT_ALPHA;
        mInactiveTextAlpha = INACTIVE_TEXT_ALPHA;
        mActiveScale = ACTIVE_SCALE;
        mActiveAlpha = ACTIVE_ALPHA;
        mInactiveAlpha = INACTIVE_ALPHA;

        mTouched = false;

        setLayerType(View.LAYER_TYPE_SOFTWARE, null);
!!!7859852.java!!!	rewriteIconPath(in path : String) : String
        if (!this.getClass().getName().contains("internal")) {
            return path.replace("system", "data");
        }
        return path;
!!!7859980.java!!!	init(inout user : UserInfo, inout userSelector : KeyguardMultiUserSelectorView) : void
        mUserInfo = user;
        mUserSelector = userSelector;

        mUserImage = (ImageView) findViewById(R.id.keyguard_user_avatar);
        mUserName = (TextView) findViewById(R.id.keyguard_user_name);

        Bitmap icon = null; 
        try {
            icon = BitmapFactory.decodeFile(rewriteIconPath(user.iconPath));
        } catch (Exception e) {
            if (DEBUG) Log.d(TAG, "failed to open profile icon " + user.iconPath, e);
        }

        if (icon == null) {
            icon = BitmapFactory.decodeResource(mContext.getResources(),
                    com.android.internal.R.drawable.ic_contact_picture);
        }

        mFramed = new KeyguardCircleFramedDrawable(icon, (int) mIconSize, mFrameColor, mStroke,
                mFrameShadowColor, mShadowRadius, mHighlightColor);
        mUserImage.setImageDrawable(mFramed);
        mUserName.setText(mUserInfo.name);
        setOnClickListener(mUserSelector);
        mInit = false;
!!!7860108.java!!!	setActive(inout active : boolean, inout animate : boolean, in onComplete : Runnable) : void
        if (mActive != active || mInit) {
            mActive = active;

            if (active) {
                KeyguardLinearLayout parent = (KeyguardLinearLayout) getParent();
                parent.setTopChild(this);
                // TODO: Create an appropriate asset when string changes are possible.
                setContentDescription(mUserName.getText()
                        + ". " + mContext.getString(R.string.user_switched, ""));
            } else {
                setContentDescription(mUserName.getText());
            }
        }
        updateVisualsForActive(mActive, animate, SWITCH_ANIMATION_DURATION, onComplete);
!!!7860236.java!!!	updateVisualsForActive(inout active : boolean, inout animate : boolean, in duration : int, in onComplete : Runnable) : void
        final float finalAlpha = active ? mActiveAlpha : mInactiveAlpha;
        final float initAlpha = active ? mInactiveAlpha : mActiveAlpha;
        final float finalScale = active ? 1f : 1f / mActiveScale;
        final float initScale = mFramed.getScale();
        final int finalTextAlpha = active ? (int) (mActiveTextAlpha * 255) :
                (int) (mInactiveTextAlpha * 255);
        final int initTextAlpha = active ? (int) (mInactiveTextAlpha * 255) :
                (int) (mActiveTextAlpha * 255);
        int textColor = mTextColor;
        mUserName.setTextColor(textColor);

        if (animate && mTouched) {
            ValueAnimator va = ValueAnimator.ofFloat(0f, 1f);
            va.addUpdateListener(new AnimatorUpdateListener() {
                @Override
                public void onAnimationUpdate(ValueAnimator animation) {
                    float r = animation.getAnimatedFraction();
                    float scale = (1 - r) * initScale + r * finalScale;
                    float alpha = (1 - r) * initAlpha + r * finalAlpha;
                    int textAlpha = (int) ((1 - r) * initTextAlpha + r * finalTextAlpha);
                    mFramed.setScale(scale);
                    mUserImage.setAlpha(alpha);
                    mUserName.setTextColor(Color.argb(textAlpha, 255, 255, 255));
                    mUserImage.invalidate();
                }
            });
            va.addListener(new AnimatorListenerAdapter() {
                @Override
                public void onAnimationEnd(Animator animation) {
                    if (onComplete != null) {
                        onComplete.run();
                    }
                }
            });
            va.setDuration(duration);
            va.start();
        } else {
            mFramed.setScale(finalScale);
            mUserImage.setAlpha(finalAlpha);
            mUserName.setTextColor(Color.argb(finalTextAlpha, 255, 255, 255));
            if (onComplete != null) {
                post(onComplete);
            }
        }

        mTouched = true;
!!!7860364.java!!!	setPressed(inout pressed : boolean) : void
        if (!pressed || isClickable()) {
            super.setPressed(pressed);
            mFramed.setPressed(pressed);
            mUserImage.invalidate();
        }
!!!7860492.java!!!	getUserInfo() : UserInfo
        return mUserInfo;
