class AppOpsManager
!!!15753996.java!!!	opToSwitch(in op : int) : int
        return sOpToSwitch[op];
!!!15754124.java!!!	opToName(in op : int) : String
        if (op == OP_NONE) return "NONE";
        return op < sOpNames.length ? sOpNames[op] : ("Unknown(" + op + ")");
!!!15754252.java!!!	opToPermission(in op : int) : String
        return sOpPerms[op];
!!!15756684.java!!!	AppOpsManager(inout context : Context, inout service : IAppOpsService)
        mContext = context;
        mService = service;
!!!15756812.java!!!	getPackagesForOps(inout ops : int) : List
        try {
            return mService.getPackagesForOps(ops);
        } catch (RemoteException e) {
        }
        return null;
!!!15756940.java!!!	getOpsForPackage(in uid : int, in packageName : String, inout ops : int) : List
        try {
            return mService.getOpsForPackage(uid, packageName, ops);
        } catch (RemoteException e) {
        }
        return null;
!!!15757068.java!!!	setMode(in code : int, in uid : int, in packageName : String, in mode : int) : void
        try {
            mService.setMode(code, uid, packageName, mode);
        } catch (RemoteException e) {
        }
!!!15757196.java!!!	resetAllModes() : void
        try {
            mService.resetAllModes();
        } catch (RemoteException e) {
        }
!!!15757324.java!!!	startWatchingMode(in op : int, in packageName : String, in callback : Callback) : void
        synchronized (mModeWatchers) {
            IAppOpsCallback cb = mModeWatchers.get(callback);
            if (cb == null) {
                cb = new IAppOpsCallback.Stub() {
                    public void opChanged(int op, String packageName) {
                        callback.opChanged(op, packageName);
                    }
                };
                mModeWatchers.put(callback, cb);
            }
            try {
                mService.startWatchingMode(op, packageName, cb);
            } catch (RemoteException e) {
            }
        }
!!!15757452.java!!!	stopWatchingMode(inout callback : Callback) : void
        synchronized (mModeWatchers) {
            IAppOpsCallback cb = mModeWatchers.get(callback);
            if (cb != null) {
                try {
                    mService.stopWatchingMode(cb);
                } catch (RemoteException e) {
                }
            }
        }
!!!15757580.java!!!	checkOp(in op : int, in uid : int, in packageName : String) : int
        try {
            int mode = mService.checkOperation(op, uid, packageName);
            if (mode == MODE_ERRORED) {
                throw new SecurityException("Operation not allowed");
            }
            return mode;
        } catch (RemoteException e) {
        }
        return MODE_IGNORED;
!!!15757708.java!!!	checkOpNoThrow(in op : int, in uid : int, in packageName : String) : int
        try {
            return mService.checkOperation(op, uid, packageName);
        } catch (RemoteException e) {
        }
        return MODE_IGNORED;
!!!15757836.java!!!	noteOp(in op : int, in uid : int, in packageName : String) : int
        try {
            int mode = mService.noteOperation(op, uid, packageName);
            if (mode == MODE_ERRORED) {
                throw new SecurityException("Operation not allowed");
            }
            return mode;
        } catch (RemoteException e) {
        }
        return MODE_IGNORED;
!!!15757964.java!!!	noteOpNoThrow(in op : int, in uid : int, in packageName : String) : int
        try {
            return mService.noteOperation(op, uid, packageName);
        } catch (RemoteException e) {
        }
        return MODE_IGNORED;
!!!15758092.java!!!	noteOp(in op : int) : int
        return noteOp(op, Process.myUid(), mContext.getBasePackageName());
!!!15758220.java!!!	startOp(in op : int, in uid : int, in packageName : String) : int
        try {
            int mode = mService.startOperation(op, uid, packageName);
            if (mode == MODE_ERRORED) {
                throw new SecurityException("Operation not allowed");
            }
            return mode;
        } catch (RemoteException e) {
        }
        return MODE_IGNORED;
!!!15758348.java!!!	startOpNoThrow(in op : int, in uid : int, in packageName : String) : int
        try {
            return mService.startOperation(op, uid, packageName);
        } catch (RemoteException e) {
        }
        return MODE_IGNORED;
!!!15758476.java!!!	startOp(in op : int) : int
        return startOp(op, Process.myUid(), mContext.getBasePackageName());
!!!15758604.java!!!	finishOp(in op : int, in uid : int, in packageName : String) : void
        try {
            mService.finishOperation(op, uid, packageName);
        } catch (RemoteException e) {
        }
!!!15758732.java!!!	finishOp(in op : int) : void
        finishOp(op, Process.myUid(), mContext.getBasePackageName());
