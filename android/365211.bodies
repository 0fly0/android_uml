class OpenSSLEngine
!!!2426907.java!!!	getInstance(inout engine : String) : OpenSSLEngine
        if (engine == null) {
            throw new NullPointerException("engine == null");
        }

        final long engineCtx;
        synchronized (mLoadingLock) {
            engineCtx = NativeCrypto.ENGINE_by_id(engine);
            if (engineCtx == 0) {
                throw new IllegalArgumentException("Unknown ENGINE id: " + engine);
            }

            NativeCrypto.ENGINE_add(engineCtx);
        }

        return new OpenSSLEngine(engineCtx);
!!!2427035.java!!!	OpenSSLEngine(in engineCtx : long)
        ctx = engineCtx;

        if (NativeCrypto.ENGINE_init(engineCtx) == 0) {
            NativeCrypto.ENGINE_free(engineCtx);
            throw new IllegalArgumentException("Could not initialize engine");
        }
!!!2427163.java!!!	getPrivateKeyById(inout id : String) : PrivateKey
        if (id == null) {
            throw new NullPointerException("id == null");
        }

        final long keyRef = NativeCrypto.ENGINE_load_private_key(ctx, id);
        if (keyRef == 0) {
            return null;
        }

        OpenSSLKey pkey = new OpenSSLKey(keyRef, this, id);
        try {
            return pkey.getPrivateKey();
        } catch (NoSuchAlgorithmException e) {
            throw new InvalidKeyException(e);
        }
!!!2427291.java!!!	getSecretKeyById(inout id : String, inout algorithm : String) : SecretKey
        if (id == null) {
            throw new NullPointerException("id == null");
        }

        final long keyRef = NativeCrypto.ENGINE_load_private_key(ctx, id);
        if (keyRef == 0) {
            return null;
        }

        OpenSSLKey pkey = new OpenSSLKey(keyRef, this, id);
        try {
            return pkey.getSecretKey(algorithm);
        } catch (NoSuchAlgorithmException e) {
            throw new InvalidKeyException(e);
        }
!!!2427419.java!!!	getEngineContext() : long
        return ctx;
!!!2427547.java!!!	finalize() : void
        try {
            NativeCrypto.ENGINE_finish(ctx);
            NativeCrypto.ENGINE_free(ctx);
        } finally {
            super.finalize();
        }
!!!2427675.java!!!	equals(inout o : Object) : boolean
        if (o == this) {
            return true;
        }

        if (!(o instanceof OpenSSLEngine)) {
            return false;
        }

        OpenSSLEngine other = (OpenSSLEngine) o;

        if (other.getEngineContext() == ctx) {
            return true;
        }

        final String id = NativeCrypto.ENGINE_get_id(ctx);
        if (id == null) {
            return false;
        }

        return id.equals(NativeCrypto.ENGINE_get_id(other.getEngineContext()));
!!!2427803.java!!!	hashCode() : int
      return (int) ctx;
