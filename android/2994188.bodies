class ChannelNumber
!!!13260940.java!!!	ChannelNumber(in id : String)
        mId = id;
        String cleanId = mId.replace('-', '.');
        mIdMatchString = cleanId.toLowerCase();
        if (cleanId.endsWith(".")) {
            // For some reason, split doesn't catch this properly.
            throw new IllegalArgumentException("Not a valid number: " + id);
        }
        String[] majorMinor = cleanId.split(ESCAPED_DELIMITER_CONSTANT);
        try {
            switch (majorMinor.length) {
                case 1:
                    mMajor = Integer.parseInt(majorMinor[0]);
                    mMinor = 0;
                    mHasMinor = false;
                    break;
                case 2:
                    mMajor = Integer.parseInt(majorMinor[0]);
                    mMinor = Integer.parseInt(majorMinor[1]);
                    mHasMinor = true;
                    break;
                default:
                    throw new IllegalArgumentException(
                            "Not a valid number format: " + id);
            }
        } catch (NumberFormatException e) {
            throw new IllegalArgumentException("Not a valid number: " + id);
        }
!!!13261068.java!!!	ChannelNumber(in major : int)
        mMajor = major;
        mMinor = 0;
        mHasMinor = false;
        mId = mIdMatchString = String.valueOf(major);
!!!13261196.java!!!	ChannelNumber(in major : int, in minor : int)
        mMajor = major;
        mMinor = minor;
        mHasMinor = true;
        mId = mIdMatchString = String.valueOf(mMajor) + '.' + String.valueOf(mMinor);
!!!13261324.java!!!	ChannelNumber(inout in : Parcel)
        this(in.readString());
!!!13261452.java!!!	getMajor() : int
        return mMajor;
!!!13261580.java!!!	getMinor() : int
        return mMinor;
!!!13261708.java!!!	compareTo(inout other : ChannelNumber) : int
        if (mMajor != other.mMajor) {
            return mMajor - other.mMajor;
        } else {
            return mMinor - other.mMinor;
        }
!!!13261836.java!!!	startsWith(in prefix : String) : boolean
        return mIdMatchString.startsWith(prefix.toLowerCase().replace('-', '.'));
!!!13261964.java!!!	toString() : String
        return mId;
!!!13262092.java!!!	isValidStringRepresentation(in channelNumber : String) : boolean
        int dashIndex = channelNumber.indexOf("-");
        if (dashIndex > 0) {
            channelNumber = channelNumber.replaceFirst("-", "");
        } else {
            // If no dash, look for a dot.
            int dotIndex = channelNumber.indexOf(".");
            if (dotIndex > 0) {
                channelNumber = channelNumber.replaceFirst("\\.", "");
            }
        }
        return TextUtils.isDigitsOnly(channelNumber);
!!!13262220.java!!!	equals(inout o : Object) : boolean
        if (!(o instanceof ChannelNumber)) {
            return false;
        }
        return compareTo((ChannelNumber) o) == 0;
!!!13262348.java!!!	hashCode() : int
        return 31 * mMajor + mMinor;
!!!13262476.java!!!	format(in formatString : String) : String
        if (mHasMinor) {
            return String.format(formatString, mMajor, mMinor);
        }
        return mId;
!!!13262604.java!!!	describeContents() : int
        return 0;
!!!13262732.java!!!	writeToParcel(inout dest : Parcel, in flags : int) : void
        dest.writeString(mId);
