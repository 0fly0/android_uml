class FrameRatePreference
!!!12126476.java!!!	FrameRatePreference(inout context : Context, inout attrs : AttributeSet)
        super(context, attrs);
        if (DEBUG) Log.d(TAG, "construct");
        registerStateListener();
!!!12126604.java!!!	updateItems() : void
        if (DEBUG) Log.d(TAG, "updateItems");
        List<String> deviceSupportedFrameRates =
                DisplayModeManager.getInstance().getDeviceSupportedFrameRate();
        mItems.clear();
        for (int i = 0; i < deviceSupportedFrameRates.size(); i++) {
            DisplayModeItem frameRateItem = new DisplayModeItem(deviceSupportedFrameRates.get(i));
            frameRateItem.setSupported(DisplayModeManager.getInstance().isFrameRatePaired(
                    deviceSupportedFrameRates.get(i)));
            if (DEBUG) Log.d(TAG, "checking frame rate item: " + frameRateItem.toString());
            mItems.add(frameRateItem);
        }
        mAdapter.notifyDataSetChanged();
!!!12126732.java!!!	handleItemSelected(in value : String) : void
        if (DEBUG) Log.d(TAG, "handleItemSelected, " + value);
        // When user change frame rate:
        // 1. save preferred value;
        // 2. if target differ from current, set current to target
        setValue(value);
        String curValue = DisplayModeManager.getInstance().getDisplayMode(
                DisplayModeType.FRAMERATE);
        if (!curValue.equals(value)) {
            DisplayModeManager.getInstance().setDisplayMode(
                DisplayModeType.FRAMERATE, value);
        } else {
            if (DEBUG) Log.d(TAG, "target frame rate same as current");
        }
!!!12126860.java!!!	setValue(in value : String) : void
        if (DEBUG) Log.d(TAG, "setValue, " + value);
        DisplayModeManager.getInstance().setPreferredDisplayMode(
                DisplayModeType.FRAMERATE, value);
!!!12126988.java!!!	getValue() : String
        String frameRate = DisplayModeManager.getInstance().getPreferredDisplayMode(
                DisplayModeType.FRAMERATE);
        if (DEBUG) Log.d(TAG, "getValue, return " + frameRate);
        return frameRate;
!!!12127116.java!!!	onActivityDestroy() : void
        if (DEBUG) Log.d(TAG, "onActivityDestroy");
        unRegisterStateListener();
!!!12127244.java!!!	registerStateListener() : void
        mStateListener = new StateListener() {

            @Override
            public void onPreferredDisplayModeChanged(DisplayModeType type) {
                if (DEBUG) Log.d(TAG, "onPreferredDisplayModeChanged, type: " + type);
                if (type == DisplayModeType.FRAMERATE) return;
                // Update frame rate support state if preferred resolution changed
                for (DisplayModeItem item : mItems) {
                    item.setSupported(
                            DisplayModeManager.getInstance().isFrameRatePaired(item.getDesc()));
                }
                mAdapter.notifyDataSetChanged();
            }

            @Override
            public void onDisplayModeChanged() {
                // No handler
            }

            @Override
            public void onTvCapalityChanged() {
                // No handler
            }
        };
        DisplayModeManager.getInstance().registerStateListener(mStateListener);
!!!12127372.java!!!	unRegisterStateListener() : void
        DisplayModeManager.getInstance().unRegisterStateListener(mStateListener);
