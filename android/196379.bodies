class AlgorithmParameters
!!!810011.java!!!	AlgorithmParameters(inout algPramSpi : AlgorithmParametersSpi, inout provider : Provider, inout algorithm : String)
        this.provider = provider;
        this.algorithm = algorithm;
        this.spiImpl = algPramSpi;
!!!810139.java!!!	getInstance(inout algorithm : String) : AlgorithmParameters
        if (algorithm == null) {
            throw new NullPointerException("algorithm == null");
        }
        Engine.SpiAndProvider sap = ENGINE.getInstance(algorithm, null);
        return new AlgorithmParameters((AlgorithmParametersSpi) sap.spi, sap.provider, algorithm);
!!!810267.java!!!	getInstance(inout algorithm : String, inout provider : String) : AlgorithmParameters
        if (provider == null || provider.isEmpty()) {
            throw new IllegalArgumentException("provider == null || provider.isEmpty()");
        }
        Provider p = Security.getProvider(provider);
        if (p == null) {
            throw new NoSuchProviderException(provider);
        }
        return getInstance(algorithm, p);
!!!810395.java!!!	getInstance(inout algorithm : String, inout provider : Provider) : AlgorithmParameters
        if (provider == null) {
            throw new IllegalArgumentException("provider == null");
        }
        if (algorithm == null) {
            throw new NullPointerException("algorithm == null");
        }
        Object spi = ENGINE.getInstance(algorithm, provider, null);
        return new AlgorithmParameters((AlgorithmParametersSpi) spi, provider, algorithm);
!!!810523.java!!!	getProvider() : Provider
        return provider;
!!!810651.java!!!	getAlgorithm() : String
        return algorithm;
!!!810779.java!!!	init(inout paramSpec : AlgorithmParameterSpec) : void
        if (initialized) {
            throw new InvalidParameterSpecException("Parameter has already been initialized");
        }
        spiImpl.engineInit(paramSpec);
        initialized = true;
!!!810907.java!!!	init(inout params : byte) : void
        if (initialized) {
            throw new IOException("Parameter has already been initialized");
        }
        spiImpl.engineInit(params);
        initialized = true;
!!!811035.java!!!	init(inout params : byte, inout format : String) : void
        if (initialized) {
            throw new IOException("Parameter has already been initialized");
        }
        spiImpl.engineInit(params, format);
        initialized = true;
!!!811163.java!!!	getParameterSpec(inout paramSpec : Class) : T
        if (!initialized) {
            throw new InvalidParameterSpecException("Parameter has not been initialized");
        }
        return spiImpl.engineGetParameterSpec(paramSpec);
!!!811291.java!!!	getEncoded() : byte
        if (!initialized) {
            throw new IOException("Parameter has not been initialized");
        }
        return spiImpl.engineGetEncoded();
!!!811419.java!!!	getEncoded(inout format : String) : byte
        if (!initialized) {
            throw new IOException("Parameter has not been initialized");
        }
        return spiImpl.engineGetEncoded(format);
!!!811547.java!!!	toString() : String
        if (!initialized) {
            return null;
        }
        return spiImpl.engineToString();
