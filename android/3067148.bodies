class MDV2TestActivity
!!!12708236.java!!!	onCreate(inout savedInstanceState : Bundle) : void
        super.onCreate(savedInstanceState);

        setLongPressBackToExit(true);

        setContentView(R.layout.mdvtest);

        mLeftPlayer = new VideoPlayer(findViewById(R.id.left_player));
        mRightPlayer = new VideoPlayer(findViewById(R.id.right_player));

        setTitle(R.string.dialog_title);
!!!12708364.java!!!	onStart() : void
        super.onStart();

        mLeftPlayer.init();
        mRightPlayer.init();
!!!12708492.java!!!	onStop() : void
        mLeftPlayer.teardown();
        mRightPlayer.teardown();

        super.onStop();
!!!12708620.java!!!	onPause() : void
        mLeftPlayer.stopPlayback();
        mRightPlayer.stopPlayback();

        super.onPause();
!!!12708748.java!!!	onKeyDown(in keyCode : int, inout event : KeyEvent) : boolean

        if (keyCode == KeyEvent.KEYCODE_SPACE) {
            logActiveSessions();
            return true;
        }

        VideoPlayer activePlayer = getActivePlayer();
        return ((activePlayer != null) && activePlayer.handleMediaKey(keyCode, event))
                || super.onKeyDown(keyCode, event);
!!!12708876.java!!!	onKeyUp(in keyCode : int, inout event : KeyEvent) : boolean
        VideoPlayer activePlayer = getActivePlayer();
        return ((activePlayer != null) && activePlayer.handleMediaKey(keyCode, event))
                || super.onKeyUp(keyCode, event);
!!!12709004.java!!!	getActivePlayer() : VideoPlayer
        VideoPlayer activePlayer = null;
        if (mLeftPlayer.isPlaying()) {
            activePlayer = mLeftPlayer;
        } else if (mRightPlayer.isPlaying()) {
            activePlayer = mRightPlayer;
        }
        return activePlayer;
!!!12709132.java!!!	logActiveSessions() : void
        MediaDevicesServiceConnection conn = new MediaDevicesServiceConnection(this) {
                @Override
                public void onConnected() {
                    try {
                        List<MediaDevicesSessionInfo> sessions
                                = getBoundService().getActiveSessions();

                        for (MediaDevicesSessionInfo session : sessions) {
                            Log.i(LOG_TAG, "Session: deviceId=" + session.getDeviceId()
                                    + ", deviceLabel=" + session.getDeviceLabel()
                                    + ", clientPackage=" + session.getClientPackageName()
                                    + ", createTime=" + session.getCreateTime()
                                    + ", sessionTag= " + session.getSessionTag()
                                    + ", options=" + session.getOptions()
                                    + ", flags=" + session.getFlags());
                        }
                    } catch (RemoteException ex) {
                        Log.e(LOG_TAG, "Can't fetch session list", ex);
                    }

                    disconnect();
                }
            };
        conn.connect();
