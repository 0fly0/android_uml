class SurfaceTexture
!!!4896140.java!!!	SurfaceTexture(in texName : int)
        this(texName, false);
!!!4896268.java!!!	SurfaceTexture(in texName : int, inout allowSynchronousMode : boolean)
        Looper looper;
        if ((looper = Looper.myLooper()) != null) {
            mEventHandler = new EventHandler(looper);
        } else if ((looper = Looper.getMainLooper()) != null) {
            mEventHandler = new EventHandler(looper);
        } else {
            mEventHandler = null;
        }
        nativeInit(texName, new WeakReference<SurfaceTexture>(this), allowSynchronousMode);
!!!4896396.java!!!	setOnFrameAvailableListener(inout l : OnFrameAvailableListener) : void
        mOnFrameAvailableListener = l;
!!!4896524.java!!!	setDefaultBufferSize(in width : int, in height : int) : void
        nativeSetDefaultBufferSize(width, height);
!!!4896652.java!!!	updateTexImage() : void
        nativeUpdateTexImage();
!!!4896780.java!!!	detachFromGLContext() : void
        int err = nativeDetachFromGLContext();
        if (err != 0) {
            throw new RuntimeException("Error during detachFromGLContext (see logcat for details)");
        }
!!!4896908.java!!!	attachToGLContext(in texName : int) : void
        int err = nativeAttachToGLContext(texName);
        if (err != 0) {
            throw new RuntimeException("Error during detachFromGLContext (see logcat for details)");
        }
!!!4897036.java!!!	getTransformMatrix(inout mtx : float) : void
        // Note we intentionally don't check mtx for null, so this will result in a
        // NullPointerException. But it's safe because it happens before the call to native.
        if (mtx.length != 16) {
            throw new IllegalArgumentException();
        }
        nativeGetTransformMatrix(mtx);
!!!4897164.java!!!	getTimestamp() : long
        return nativeGetTimestamp();
!!!4897292.java!!!	release() : void
        nativeRelease();
!!!4897420.java!!!	finalize() : void
        try {
            nativeFinalize();
        } finally {
            super.finalize();
        }
!!!4897804.java!!!	postEventFromNative(inout selfRef : Object) : void
        WeakReference weakSelf = (WeakReference)selfRef;
        SurfaceTexture st = (SurfaceTexture)weakSelf.get();
        if (st == null) {
            return;
        }

        if (st.mEventHandler != null) {
            Message m = st.mEventHandler.obtainMessage();
            st.mEventHandler.sendMessage(m);
        }
