class WindowOrientationListener
!!!15904012.java!!!	WindowOrientationListener(inout context : Context, inout handler : Handler)
        this(context, handler, SensorManager.SENSOR_DELAY_UI);
!!!15904140.java!!!	WindowOrientationListener(inout context : Context, inout handler : Handler, in rate : int)
        mHandler = handler;
        mSensorManager = (SensorManager)context.getSystemService(Context.SENSOR_SERVICE);
        mRate = rate;
        mSensor = mSensorManager.getDefaultSensor(USE_GRAVITY_SENSOR
                ? Sensor.TYPE_GRAVITY : Sensor.TYPE_ACCELEROMETER);
        if (mSensor != null) {
            // Create listener only if sensors do exist
            mSensorEventListener = new SensorEventListenerImpl();
        }
!!!15904268.java!!!	enable() : void
        synchronized (mLock) {
            if (mSensor == null) {
                Log.w(TAG, "Cannot detect sensors. Not enabled");
                return;
            }
            if (mEnabled == false) {
                if (LOG) {
                    Log.d(TAG, "WindowOrientationListener enabled");
                }
                mSensorEventListener.resetLocked();
                mSensorManager.registerListener(mSensorEventListener, mSensor, mRate, mHandler);
                mEnabled = true;
            }
        }
!!!15904396.java!!!	disable() : void
        synchronized (mLock) {
            if (mSensor == null) {
                Log.w(TAG, "Cannot detect sensors. Invalid disable");
                return;
            }
            if (mEnabled == true) {
                if (LOG) {
                    Log.d(TAG, "WindowOrientationListener disabled");
                }
                mSensorManager.unregisterListener(mSensorEventListener);
                mEnabled = false;
            }
        }
!!!15904524.java!!!	setCurrentRotation(in rotation : int) : void
        synchronized (mLock) {
            mCurrentRotation = rotation;
        }
!!!15904652.java!!!	getProposedRotation() : int
        synchronized (mLock) {
            if (mEnabled) {
                return mSensorEventListener.getProposedRotationLocked();
            }
            return -1;
        }
!!!15904780.java!!!	canDetectOrientation() : boolean
        synchronized (mLock) {
            return mSensor != null;
        }
