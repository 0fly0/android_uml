class System
!!!4090892.java!!!	getMovedKeys(inout outKeySet : HashSet<String>) : void
            outKeySet.addAll(MOVED_TO_GLOBAL);
            outKeySet.addAll(MOVED_TO_SECURE_THEN_GLOBAL);
!!!4091020.java!!!	getNonLegacyMovedKeys(inout outKeySet : HashSet<String>) : void
            outKeySet.addAll(MOVED_TO_GLOBAL);
!!!4091148.java!!!	getString(inout resolver : ContentResolver, in name : String) : String
            return getStringForUser(resolver, name, UserHandle.myUserId());
!!!4091276.java!!!	getStringForUser(inout resolver : ContentResolver, in name : String, in userHandle : int) : String
            if (MOVED_TO_SECURE.contains(name)) {
                Log.w(TAG, "Setting " + name + " has moved from android.provider.Settings.System"
                        + " to android.provider.Settings.Secure, returning read-only value.");
                return Secure.getStringForUser(resolver, name, userHandle);
            }
            if (MOVED_TO_GLOBAL.contains(name) || MOVED_TO_SECURE_THEN_GLOBAL.contains(name)) {
                Log.w(TAG, "Setting " + name + " has moved from android.provider.Settings.System"
                        + " to android.provider.Settings.Global, returning read-only value.");
                return Global.getStringForUser(resolver, name, userHandle);
            }
            return sNameValueCache.getStringForUser(resolver, name, userHandle);
!!!4091404.java!!!	putString(inout resolver : ContentResolver, in name : String, in value : String) : boolean
            return putStringForUser(resolver, name, value, UserHandle.myUserId());
!!!4091532.java!!!	putStringForUser(inout resolver : ContentResolver, in name : String, in value : String, in userHandle : int) : boolean
            if (MOVED_TO_SECURE.contains(name)) {
                Log.w(TAG, "Setting " + name + " has moved from android.provider.Settings.System"
                        + " to android.provider.Settings.Secure, value is unchanged.");
                return false;
            }
            if (MOVED_TO_GLOBAL.contains(name) || MOVED_TO_SECURE_THEN_GLOBAL.contains(name)) {
                Log.w(TAG, "Setting " + name + " has moved from android.provider.Settings.System"
                        + " to android.provider.Settings.Global, value is unchanged.");
                return false;
            }
            return sNameValueCache.putStringForUser(resolver, name, value, userHandle);
!!!4091660.java!!!	getUriFor(in name : String) : Uri
            if (MOVED_TO_SECURE.contains(name)) {
                Log.w(TAG, "Setting " + name + " has moved from android.provider.Settings.System"
                    + " to android.provider.Settings.Secure, returning Secure URI.");
                return Secure.getUriFor(Secure.CONTENT_URI, name);
            }
            if (MOVED_TO_GLOBAL.contains(name) || MOVED_TO_SECURE_THEN_GLOBAL.contains(name)) {
                Log.w(TAG, "Setting " + name + " has moved from android.provider.Settings.System"
                        + " to android.provider.Settings.Global, returning read-only global URI.");
                return Global.getUriFor(Global.CONTENT_URI, name);
            }
            return getUriFor(CONTENT_URI, name);
!!!4091788.java!!!	getInt(inout cr : ContentResolver, in name : String, in def : int) : int
            return getIntForUser(cr, name, def, UserHandle.myUserId());
!!!4091916.java!!!	getIntForUser(inout cr : ContentResolver, in name : String, in def : int, in userHandle : int) : int
            String v = getStringForUser(cr, name, userHandle);
            try {
                return v != null ? Integer.parseInt(v) : def;
            } catch (NumberFormatException e) {
                return def;
            }
!!!4092044.java!!!	getInt(inout cr : ContentResolver, in name : String) : int
            return getIntForUser(cr, name, UserHandle.myUserId());
!!!4092172.java!!!	getIntForUser(inout cr : ContentResolver, in name : String, in userHandle : int) : int
            String v = getStringForUser(cr, name, userHandle);
            try {
                return Integer.parseInt(v);
            } catch (NumberFormatException e) {
                throw new SettingNotFoundException(name);
            }
!!!4092300.java!!!	putInt(inout cr : ContentResolver, in name : String, in value : int) : boolean
            return putIntForUser(cr, name, value, UserHandle.myUserId());
!!!4092428.java!!!	putIntForUser(inout cr : ContentResolver, in name : String, in value : int, in userHandle : int) : boolean
            return putStringForUser(cr, name, Integer.toString(value), userHandle);
!!!4092556.java!!!	getLong(inout cr : ContentResolver, in name : String, in def : long) : long
            return getLongForUser(cr, name, def, UserHandle.myUserId());
!!!4092684.java!!!	getLongForUser(inout cr : ContentResolver, in name : String, in def : long, in userHandle : int) : long
            String valString = getStringForUser(cr, name, userHandle);
            long value;
            try {
                value = valString != null ? Long.parseLong(valString) : def;
            } catch (NumberFormatException e) {
                value = def;
            }
            return value;
!!!4092812.java!!!	getLong(inout cr : ContentResolver, in name : String) : long
            return getLongForUser(cr, name, UserHandle.myUserId());
!!!4092940.java!!!	getLongForUser(inout cr : ContentResolver, in name : String, in userHandle : int) : long
            String valString = getStringForUser(cr, name, userHandle);
            try {
                return Long.parseLong(valString);
            } catch (NumberFormatException e) {
                throw new SettingNotFoundException(name);
            }
!!!4093068.java!!!	putLong(inout cr : ContentResolver, in name : String, in value : long) : boolean
            return putLongForUser(cr, name, value, UserHandle.myUserId());
!!!4093196.java!!!	putLongForUser(inout cr : ContentResolver, in name : String, in value : long, in userHandle : int) : boolean
            return putStringForUser(cr, name, Long.toString(value), userHandle);
!!!4093324.java!!!	getFloat(inout cr : ContentResolver, in name : String, in def : float) : float
            return getFloatForUser(cr, name, def, UserHandle.myUserId());
!!!4093452.java!!!	getFloatForUser(inout cr : ContentResolver, in name : String, in def : float, in userHandle : int) : float
            String v = getStringForUser(cr, name, userHandle);
            try {
                return v != null ? Float.parseFloat(v) : def;
            } catch (NumberFormatException e) {
                return def;
            }
!!!4093580.java!!!	getFloat(inout cr : ContentResolver, in name : String) : float
            return getFloatForUser(cr, name, UserHandle.myUserId());
!!!4093708.java!!!	getFloatForUser(inout cr : ContentResolver, in name : String, in userHandle : int) : float
            String v = getStringForUser(cr, name, userHandle);
            if (v == null) {
                throw new SettingNotFoundException(name);
            }
            try {
                return Float.parseFloat(v);
            } catch (NumberFormatException e) {
                throw new SettingNotFoundException(name);
            }
!!!4093836.java!!!	putFloat(inout cr : ContentResolver, in name : String, in value : float) : boolean
            return putFloatForUser(cr, name, value, UserHandle.myUserId());
!!!4093964.java!!!	putFloatForUser(inout cr : ContentResolver, in name : String, in value : float, in userHandle : int) : boolean
            return putStringForUser(cr, name, Float.toString(value), userHandle);
!!!4094092.java!!!	getConfiguration(inout cr : ContentResolver, inout outConfig : Configuration) : void
            getConfigurationForUser(cr, outConfig, UserHandle.myUserId());
!!!4094220.java!!!	getConfigurationForUser(inout cr : ContentResolver, inout outConfig : Configuration, in userHandle : int) : void
            outConfig.fontScale = Settings.System.getFloatForUser(
                cr, FONT_SCALE, outConfig.fontScale, userHandle);
            if (outConfig.fontScale < 0) {
                outConfig.fontScale = 1;
            }
!!!4094348.java!!!	clearConfiguration(inout inoutConfig : Configuration) : void
            inoutConfig.fontScale = 0;
!!!4094476.java!!!	putConfiguration(inout cr : ContentResolver, inout config : Configuration) : boolean
            return putConfigurationForUser(cr, config, UserHandle.myUserId());
!!!4094604.java!!!	putConfigurationForUser(inout cr : ContentResolver, inout config : Configuration, in userHandle : int) : boolean
            return Settings.System.putFloatForUser(cr, FONT_SCALE, config.fontScale, userHandle);
!!!4094732.java!!!	hasInterestingConfigurationChanges(in changes : int) : boolean
            return (changes&ActivityInfo.CONFIG_FONT_SCALE) != 0;
!!!4094860.java!!!	getShowGTalkServiceStatus(inout cr : ContentResolver) : boolean
            return getShowGTalkServiceStatusForUser(cr, UserHandle.myUserId());
!!!4094988.java!!!	getShowGTalkServiceStatusForUser(inout cr : ContentResolver, in userHandle : int) : boolean
            return getIntForUser(cr, SHOW_GTALK_SERVICE_STATUS, 0, userHandle) != 0;
!!!4095116.java!!!	setShowGTalkServiceStatus(inout cr : ContentResolver, inout flag : boolean) : void
            setShowGTalkServiceStatusForUser(cr, flag, UserHandle.myUserId());
!!!4095244.java!!!	setShowGTalkServiceStatusForUser(inout cr : ContentResolver, inout flag : boolean, in userHandle : int) : void
            putIntForUser(cr, SHOW_GTALK_SERVICE_STATUS, flag ? 1 : 0, userHandle);
