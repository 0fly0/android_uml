class SystemStatusService
!!!12307468.java!!!	SystemStatusService()
        super(TAG);
!!!12307596.java!!!	onHandleIntent(inout intent : Intent) : void
        if (intent != null) {
            if (mContext == null)
                mContext = getApplicationContext();

            String action = intent.getAction();
            if (TvIntents.VOLUME_CHANGED_ACTION.equals(action)) {
                boolean mute = intent.getBooleanExtra(
                        TvIntents.EXTRA_VOLUME_STREAM_MUTED, false);
                Log.d(TAG, "onHandleIntent: mute = "+mute);
                Wrapper.getWrapperInstance().updateCCStatusByMute(mute);

            } else if (Intent.ACTION_BOOT_COMPLETED.equals(action)) {
                Log.d(TAG, "handle ACTION_BOOT_COMPLETED intent");
                bootCompleted = true;

                if (mContext != null) {
                    Wrapper.getWrapperInstance().setContext(mContext);
                }

                checkAgingMode();

                checkMuteStatus();

                checkEnergySavingTimer();

                checkPSIPDateTime();

                // register FrameworkEventListener for get event from
                // usdtv framework
                final FrameworkEventListener mEventListener =
                        FrameworkEventListener.getFrameworkEventListenerInstance();
                mEventListener.registerAppListener(mContext);

                // cache channel list in advance
                Wrapper.getWrapperInstance().startLoadChannels();

            } else if (ConnectivityManager.CONNECTIVITY_ACTION.equals(action)) {
                checkPSIPDateTime();

            } else if (TvIntents.MASTER_CLEAR_ACTION.equals(action)) {
                Log.d(TAG, "handle MASTER_CLEAR_ACTION resetTvFactory=" + resetTvFactory);
                if (resetTvFactory) {
                    FactorySettingJNIWrapper.getInstance().DoResetUser(
                            RESET_PARAM.NOT_REBOOT.ordinal());
                } else {
                    resetTvFactory = true;
                }

            } else if (Intent.ACTION_SHUTDOWN.equals(action)) {
                // turn off LVDS panel when TV shutdown by DC
                FactorySettingJNIWrapper.getInstance().SetSysControl(
                        SystemProperty.MV_FS_CTRL_PANEL_POWER.ordinal(), 0);

            } else if (TvIntents.ACTION_TV_PLAYER_STARTED.equals(action)) {
                if (!bootCompleted) {
                    checkAgingMode();
                }

            } else if (TvIntents.ACTION_CHECK_AGINGMODE.equals(action)) {
                checkAgingMode();

            } else if (TvIntents.ACTION_TV_FACTORY_RESETED.equals(action)) {
                Log.d(TAG, "handle ACTION_TV_FACTORY_RESETED intent");
                // not to reset TV Factory again when receive MASTER_CLEAR_ACTION
                resetTvFactory = false;

            } else if (TvIntents.ACTION_CHANNEL_SCAN_DISABLEDKEY.equals(action)) {
                boolean disabled = intent.getBooleanExtra(TvIntents.EXTRA_DISABLE_KEY, false);
                Log.d(TAG, "handle ACTION_CHANNEL_SCAN_DISABLEDKEY intent disabled=" + disabled);
                Wrapper.getWrapperInstance().setInChannelScan(disabled);
                if (disabled) {
                    Utils.registerGlobalKeyListener(mContext);
                    Utils.registerAllGlobalKeys(true);
                    Utils.registerGlobalKeyCode(false, KeyEvent.KEYCODE_ESCAPE);
                    Utils.registerGlobalKeyCode(false, KeyEvent.KEYCODE_BACK);
                } else {
                    Utils.registerAllGlobalKeys(false);
                    Utils.unregisterGlobalKeyListener();
                }

            } else if (TvIntents.ACTION_UPDATE_CHANNELDB.equals(action)) {
                int delay = intent.getIntExtra(TvIntents.EXTRA_DELAY, 0);
                Log.d(TAG, "handle ACTION_UPDATE_CHANNELDB intent delay=" + delay);
                Wrapper.getWrapperInstance().updateChanneListToGTVDb(delay);

            } else if (TvIntents.ACTION_SWITCH_CHANNEL.equals(action)) {
                int type = intent.getIntExtra(TvIntents.EXTRA_SWITCH_TYPE, -1);
                Log.d(TAG, "handle ACTION_SWITCH_CHANNEL intent type=" + type);
                if (type == TvIntents.SWITCH_TYPE_DOWN || type == TvIntents.SWITCH_TYPE_UP) {
                    if (Wrapper.getWrapperInstance().allowChannelUpDown()) {
                        Wrapper.getWrapperInstance().pauseCC();
                        if (type == TvIntents.SWITCH_TYPE_DOWN) {
                            Wrapper.getWrapperInstance().doChannelDown(mContext);
                        } else {
                            Wrapper.getWrapperInstance().doChannelUp(mContext);
                        }
                    }
                }
            }
            // else if
            // (TvIntents.EDIT_CHANNEL_ENABLED_ACTION.equals(action)) {
            // String uri = intent.getStringExtra("uri");
            // boolean enabled = intent.getBooleanExtra("enabled", true);
            // updateChannelSkipStatus(uri, enabled);

            // }
            // else if
            // (SystemStatusReceiver.TV_PLAY_STATUS_ACTION.equals(action)) {
            // Log.i(TAG, "*****handle TV_PLAY_STATUS_ACTION intent*****");
            // boolean start = intent.getBooleanExtra("start", true);
            // boolean home = intent.getBooleanExtra("home", false);
            // if (mContext != null) {
            // if (start) {
            // Wrapper.getWrapperInstance().setContext(mContext);
            //
            // // register FrameworkEventListener for get event from
            // // usdtv framework
            // final FrameworkEventListener mEventListener =
            // FrameworkEventListener.getFrameworkEventListenerInstance();
            // mEventListener.registerAppListener(mContext);
            //
            // // Fix Trestles 31095 Reset EventManagerService flag of
            // // TvPlayer option menu displayed status.
            // // This can avoid "no signal"/info banner not displayed
            // // after TvPlayer died
            // final Intent resetOptionMenuIntent = new Intent(
            // EventManagerService.ACTION_PLAYER_OPTION_MENU_CHANGED);
            // resetOptionMenuIntent.putExtra(EventManagerService.EXTRA_PLAYER_STATUS,
            // 0);
            // mContext.sendBroadcast(resetOptionMenuIntent);
            //
            // if (!home) {
            // checkAgingMode();
            // }
            // } else {
            // // dismiss No signal messages when LiveTV is exited
            // WidgetManager.dismissEventAlert(mContext);
            // }
            // }
            // }
        }
!!!12307724.java!!!	checkMuteStatus() : void
        if (mContext != null) {
            Boolean mute = Utils.isSystemMute(mContext);
            Log.d(TAG, "checkMuteStatus: mute = "+mute);
            Wrapper.getWrapperInstance().updateCCStatusByMute(mute);
        }
!!!12307852.java!!!	checkEnergySavingTimer() : void
        if (mContext != null) {
            if (Wrapper.getWrapperInstance().getAutoPowerOff() == 1) {
                Wrapper.getWrapperInstance().setAutoPowerOff(1);
            }
            int noSignalTimer = Wrapper.getWrapperInstance().getNoSignalTimer();
            if (noSignalTimer > 0) {
                Wrapper.getWrapperInstance().setNoSignalTimer(noSignalTimer);
            }
        }
!!!12307980.java!!!	checkPSIPDateTime() : void
        if (mContext != null)
            Utils.syncPSIPDateTime(mContext);
!!!12308108.java!!!	checkAgingMode() : void
        if (mContext != null
                && mContext.getResources().getBoolean(R.bool.aging_mode_disable_key)) {
            int agingMode = Wrapper.getWrapperInstance().getAgingMode();
            if (agingMode == 1) {
                // If in aging mode, enable key filter
                Utils.registerGlobalKeyListener(mContext);
                Utils.registerAllGlobalKeys(true);
            } else {
                Utils.registerAllGlobalKeys(false);
                Utils.unregisterGlobalKeyListener();
            }
        }
