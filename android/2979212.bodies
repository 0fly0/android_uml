class DisplayModeListAdapter
!!!12118668.java!!!	DisplayModeListAdapter(inout context : Context, inout items : List<DisplayModeItem>)
        mContext = context;
        mLayoutInflater = LayoutInflater.from(context);
        mItems = items;
        mItemHeight = (int) mContext.getResources().getDimension(
                R.dimen.list_preference_item_height);
        mItemLeftPadding = (int) mContext.getResources().getDimension(
                R.dimen.list_preference_item_left_padding);
        mItemRightPadding = (int) mContext.getResources().getDimension(
                R.dimen.list_preference_item_right_padding);
        mItemTopPadding = (int) mContext.getResources().getDimension(
                R.dimen.list_preference_item_top_padding);
        mItemButtomPadding = (int) mContext.getResources().getDimension(
                R.dimen.list_preference_item_bottom_padding);
!!!12118796.java!!!	getCount() : int
        return mItems.size();
!!!12118924.java!!!	getItem(in position : int) : Object
        return mItems.get(position);
!!!12119052.java!!!	getItemId(in position : int) : long
        return position;
!!!12119180.java!!!	getView(in position : int, inout convertView : View, inout parent : ViewGroup) : View
        CheckableItemView itemView = null;
        if (convertView == null) {
            itemView = new CheckableItemView();
            convertView = mLayoutInflater.inflate(
                    android.R.layout.simple_list_item_single_choice, null);
            itemView.mCheckedText =  (CheckedTextView) convertView.findViewById(android.R.id.text1);
            convertView.setTag(itemView);
        } else {
            itemView = (CheckableItemView) convertView.getTag();
        }

        //Log.d(TAG, "getView, item: " + mItems.get(position).getDesc() +
        //        ", supported " + mItems.get(position).isSupported());

        // Update single item state
        itemView.mCheckedText.setText(mItems.get(position).getDesc());
        itemView.mCheckedText.setEnabled(mItems.get(position).isSupported());
        // TODO: it'll be better to make non-supported item as unselectable
        //itemView.mCheckedText.setClickable(mItems.get(position).isSupported());
        //itemView.mCheckedText.setActivated(mItems.get(position).isSupported());
        // Fix layout of list item, keep consistency with ListPreference layout
        itemView.mCheckedText.setHeight(mItemHeight);
        itemView.mCheckedText.setPadding(mItemLeftPadding, mItemTopPadding,
                mItemRightPadding, mItemButtomPadding);
        return convertView;
