class SaturateFilter
!!!7098252.java!!!	SaturateFilter(in name : String)
        super(name);
!!!7098380.java!!!	setupPorts() : void
        addMaskedInputPort("image", ImageFormat.create(ImageFormat.COLORSPACE_RGBA));
        addOutputBasedOnInput("image", "image");
!!!7098508.java!!!	getOutputFormat(in portName : String, inout inputFormat : FrameFormat) : FrameFormat
        return inputFormat;
!!!7098636.java!!!	initProgram(inout context : FilterContext, in target : int) : void
        switch (target) {
            case FrameFormat.TARGET_GPU:
                ShaderProgram shaderProgram = new ShaderProgram(context, mBenSaturateShader);
                shaderProgram.setMaximumTileSize(mTileSize);
                mBenProgram = shaderProgram;

                shaderProgram = new ShaderProgram(context, mHerfSaturateShader);
                shaderProgram.setMaximumTileSize(mTileSize);
                mHerfProgram = shaderProgram;

                break;

            default:
                throw new RuntimeException("Filter Sharpen does not support frames of " +
                    "target " + target + "!");
        }
        mTarget = target;
!!!7098764.java!!!	fieldPortValueUpdated(in name : String, inout context : FilterContext) : void
        if (mBenProgram != null && mHerfProgram != null) {
            updateParameters();
        }
!!!7098892.java!!!	process(inout context : FilterContext) : void
        // Get input frame
        Frame input = pullInput("image");
        FrameFormat inputFormat = input.getFormat();

        // Create program if not created already
        if (mBenProgram == null || inputFormat.getTarget() != mTarget) {
            initProgram(context, inputFormat.getTarget());
            initParameters();
        }

        // Create output frame
        Frame output = context.getFrameManager().newFrame(inputFormat);

        // Process
        if (mScale > 0.0f) {
            mHerfProgram.process(input, output);
        } else {
            mBenProgram.process(input, output);
        }
         // Push output
        pushOutput("image", output);

        // Release pushed frame
        output.release();
!!!7099020.java!!!	initParameters() : void
        float shift = 1.0f / 255.0f;
        float weights[] = { 2f/8f, 5f/8f, 1f/8f};

        mBenProgram.setHostValue("weights", weights);
        mBenProgram.setHostValue("shift", shift);

        mHerfProgram.setHostValue("weights", weights);

        updateParameters();
!!!7099148.java!!!	updateParameters() : void

        if (mScale > 0.0f) {
            float exponents[] = new float[3];

            exponents[0] = (0.9f * mScale) + 1.0f;
            exponents[1] = (2.1f * mScale) + 1.0f;
            exponents[2] = (2.7f * mScale) + 1.0f;

            mHerfProgram.setHostValue("exponents", exponents);
        } else {
            mBenProgram.setHostValue("scale", 1.0f + mScale);
        }
