class UriPermission
!!!8472844.java!!!	UriPermission(in _uid : int, inout _uri : Uri)
        uid = _uid;
        uri = _uri;
!!!8472972.java!!!	clearModes(in modeFlagsToClear : int) : void
        if ((modeFlagsToClear&Intent.FLAG_GRANT_READ_URI_PERMISSION) != 0) {
            globalModeFlags &= ~Intent.FLAG_GRANT_READ_URI_PERMISSION;
            modeFlags &= ~Intent.FLAG_GRANT_READ_URI_PERMISSION;
            if (readOwners.size() > 0) {
                for (UriPermissionOwner r : readOwners) {
                    r.removeReadPermission(this);
                }
                readOwners.clear();
            }
        }
        if ((modeFlagsToClear&Intent.FLAG_GRANT_WRITE_URI_PERMISSION) != 0) {
            globalModeFlags &= ~Intent.FLAG_GRANT_WRITE_URI_PERMISSION;
            modeFlags &= ~Intent.FLAG_GRANT_WRITE_URI_PERMISSION;
            if (writeOwners.size() > 0) {
                for (UriPermissionOwner r : writeOwners) {
                    r.removeWritePermission(this);
                }
                writeOwners.clear();
            }
        }
!!!8473100.java!!!	toString() : String
        if (stringName != null) {
            return stringName;
        }
        StringBuilder sb = new StringBuilder(128);
        sb.append("UriPermission{");
        sb.append(Integer.toHexString(System.identityHashCode(this)));
        sb.append(' ');
        sb.append(uri);
        sb.append('}');
        return stringName = sb.toString();
!!!8473228.java!!!	dump(inout pw : PrintWriter, in prefix : String) : void
        pw.print(prefix); pw.print("modeFlags=0x");
                pw.print(Integer.toHexString(modeFlags));
                pw.print(" uid="); pw.print(uid); 
                pw.print(" globalModeFlags=0x");
                pw.println(Integer.toHexString(globalModeFlags));
        if (readOwners.size() != 0) {
            pw.print(prefix); pw.println("readOwners:");
            for (UriPermissionOwner owner : readOwners) {
                pw.print(prefix); pw.print("  * "); pw.println(owner);
            }
        }
        if (writeOwners.size() != 0) {
            pw.print(prefix); pw.println("writeOwners:");
            for (UriPermissionOwner owner : writeOwners) {
                pw.print(prefix); pw.print("  * "); pw.println(owner);
            }
        }
