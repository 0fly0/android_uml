class OldFilterReaderTest
!!!2659867.java!!!	test_ConstructorLjava_io_Reader() : void

        FilterReader myReader = null;

        called = true;

        try {
            myReader = new MyFilterReader(null);
            fail("NullPointerException expected.");
        } catch (NullPointerException e) {
            // expected
        }
!!!2659995.java!!!	test_close() : void
        fr.close();
        assertTrue("close() has not been called.", called);
!!!2660123.java!!!	test_markI() : void
        fr.mark(0);
        assertTrue("mark(int) has not been called.", called);
!!!2660251.java!!!	test_markSupported() : void
        fr.markSupported();
        assertTrue("markSupported() has not been called.", called);
!!!2660379.java!!!	test_read() : void
        fr.read();
        assertTrue("read() has not been called.", called);
!!!2660507.java!!!	test_read$CII() : void
        char[] buffer = new char[5];
        fr.read(buffer, 0, 5);
        assertTrue("read(char[], int, int) has not been called.", called);
!!!2660635.java!!!	test_read$CII_Exception() : void
        byte[] bbuffer = new byte[20];
        char[] buffer = new char[10];

        fr = new MyFilterReader(new InputStreamReader(
            new ByteArrayInputStream(bbuffer)));

        try {
            fr.read(buffer, 0, -1);
            fail("Test 1: IndexOutOfBoundsException expected.");
        } catch (IndexOutOfBoundsException e) {
            // Expected.
        }

        try {
            fr.read(buffer, -1, 1);
            fail("Test 2: IndexOutOfBoundsException expected.");
        } catch (IndexOutOfBoundsException e) {
            // Expected.
        }

        try {
            fr.read(buffer, 10, 1);
            fail("Test 3: IndexOutOfBoundsException expected.");
        } catch (IndexOutOfBoundsException e) {
            // Expected.
        }
!!!2660763.java!!!	test_ready() : void
        fr.ready();
        assertTrue("ready() has not been called.", called);
!!!2660891.java!!!	test_reset() : void
        fr.reset();
        assertTrue("reset() has not been called.", called);
!!!2661019.java!!!	test_skip() : void
        fr.skip(10);
        assertTrue("skip(long) has not been called.", called);
!!!2661147.java!!!	setUp() : void

        fr = new MyFilterReader(new MockReader());
        called = false;
!!!2661275.java!!!	tearDown() : void

        try {
            fr.close();
        } catch (Exception e) {
            System.out.println("Exception during FilterReaderTest tear down.");
        }
