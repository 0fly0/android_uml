class HotplugMoniterService
!!!12127500.java!!!	onBind(inout intent : Intent) : IBinder
        // Our service does not support IPC access
        throw new UnsupportedOperationException("Binder access not supported");
!!!12127628.java!!!	onCreate() : void
        if (DEBUG) Log.d(TAG, "onCreate");
        mAVSettingsObs = new AVSettingsObserver();
        mValueObsHandle = mAVSettingsObs.registerValueObserver(
                AVSettings.KEY_PREFIX_VIDEO_OUTPUT, this);
        if (DEBUG) Log.d(TAG, "avsetting value observer handle: " + mValueObsHandle);
!!!12127756.java!!!	onStartCommand(inout intent : Intent, in flags : int, in startId : int) : int
        if (DEBUG) Log.d(TAG, "onStartCommand, startId " + startId + ": " + intent);
        // We want this service to continue running until it's explicitly stopped
        return START_STICKY;
!!!12127884.java!!!	onDestroy() : void
        super.onDestroy();
        if (DEBUG) Log.d(TAG, "onDestroy");
        mAVSettingsObs.unRegisterValueObserver(mValueObsHandle);
!!!12128012.java!!!	onValueChanged(inout observer_ref : AVSettingsObserver, in name : String, inout value : SettingValue) : void
        if (DEBUG) Log.d(TAG, "onValueChanged, name: " + name + ", value: " + value);
        if (name.equals(VideoOutput.getFullKey(VideoOutput.KEY_HDMI_IS_PLUGGED))) {
            try {
                boolean plugged = value.getBoolean();
                if (DEBUG) Log.d(TAG, "onHdmiHotplug, " + plugged);
                DisplayModeManager.getInstance().handleTvConnected(plugged);
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
