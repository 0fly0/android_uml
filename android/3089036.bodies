class SuggestedWordInfo
!!!12852492.java!!!	SuggestedWordInfo(in word : CharSequence, in score : int)
            mWordStr = word.toString();
            mWord = word;
            mScore = score;
            mCodePointCount = mWordStr.codePointCount(0, mWordStr.length());
!!!12852620.java!!!	setDebugString(in str : String) : void
            if (null == str) throw new NullPointerException("Debug info is null");
            mDebugString = str;
!!!12852748.java!!!	getDebugString() : String
            return mDebugString;
!!!12852876.java!!!	codePointCount() : int
            return mCodePointCount;
!!!12853004.java!!!	codePointAt(in i : int) : int
            return mWordStr.codePointAt(i);
!!!12853132.java!!!	toString() : String
            if (TextUtils.isEmpty(mDebugString)) {
                return mWordStr;
            } else {
                return mWordStr + " (" + mDebugString.toString() + ")";
            }
!!!12853260.java!!!	removeDups(inout candidates : ArrayList<SuggestedWordInfo>) : void
            if (candidates.size() <= 1) {
                return;
            }
            int i = 1;
            while(i < candidates.size()) {
                final SuggestedWordInfo cur = candidates.get(i);
                for (int j = 0; j < i; ++j) {
                    final SuggestedWordInfo previous = candidates.get(j);
                    if (TextUtils.equals(cur.mWord, previous.mWord)) {
                        candidates.remove(cur.mScore < previous.mScore ? i : j);
                        --i;
                        break;
                    }
                }
                ++i;
            }
