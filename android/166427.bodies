class MathContext
!!!521499.java!!!	MathContext(in precision : int)
        this(precision, RoundingMode.HALF_UP);
!!!521627.java!!!	MathContext(in precision : int, inout roundingMode : RoundingMode)
        this.precision = precision;
        this.roundingMode = roundingMode;
        checkValid();
!!!521755.java!!!	MathContext(inout s : String)
        int precisionLength = "precision=".length();
        int roundingModeLength = "roundingMode=".length();

        int spaceIndex;
        if (!s.startsWith("precision=") || (spaceIndex = s.indexOf(' ', precisionLength)) == -1) {
            throw invalidMathContext("Missing precision", s);
        }
        String precisionString = s.substring(precisionLength, spaceIndex);
        try {
            this.precision = Integer.parseInt(precisionString);
        } catch (NumberFormatException nfe) {
            throw invalidMathContext("Bad precision", s);
        }

        int roundingModeStart = spaceIndex + 1;
        if (!s.regionMatches(roundingModeStart, "roundingMode=", 0, roundingModeLength)) {
            throw invalidMathContext("Missing rounding mode", s);
        }
        roundingModeStart += roundingModeLength;
        this.roundingMode = RoundingMode.valueOf(s.substring(roundingModeStart));

        checkValid();
!!!521883.java!!!	invalidMathContext(inout reason : String, inout s : String) : IllegalArgumentException
        throw new IllegalArgumentException(reason + ": " + s);
!!!522011.java!!!	checkValid() : void
        if (precision < 0) {
            throw new IllegalArgumentException("Negative precision: " + precision);
        }
        if (roundingMode == null) {
            throw new NullPointerException("roundingMode == null");
        }
!!!522139.java!!!	getPrecision() : int
        return precision;
!!!522267.java!!!	getRoundingMode() : RoundingMode
        return roundingMode;
!!!522395.java!!!	equals(inout x : Object) : boolean
        return ((x instanceof MathContext)
                && (((MathContext) x).getPrecision() == precision) && (((MathContext) x)
                .getRoundingMode() == roundingMode));
!!!522523.java!!!	hashCode() : int
        // Make place for the necessary bits to represent 8 rounding modes
        return ((precision << 3) | roundingMode.ordinal());
!!!522651.java!!!	toString() : String
        return "precision=" + precision + " roundingMode=" + roundingMode;
!!!522779.java!!!	readObject(inout s : ObjectInputStream) : void
        s.defaultReadObject();
        try {
            checkValid();
        } catch (Exception ex) {
            throw new StreamCorruptedException(ex.getMessage());
        }
