class OffsettedItem
!!!14972172.java!!!	getAbsoluteOffsetOr0(inout item : OffsettedItem) : int
        if (item == null) {
            return 0;
        }

        return item.getAbsoluteOffset();
!!!14972300.java!!!	OffsettedItem(in alignment : int, in writeSize : int)
        Section.validateAlignment(alignment);

        if (writeSize < -1) {
            throw new IllegalArgumentException("writeSize < -1");
        }

        this.alignment = alignment;
        this.writeSize = writeSize;
        this.addedTo = null;
        this.offset = -1;
!!!14972428.java!!!	equals(inout other : Object) : boolean
        if (this == other) {
            return true;
        }

        OffsettedItem otherItem = (OffsettedItem) other;
        ItemType thisType = itemType();
        ItemType otherType = otherItem.itemType();

        if (thisType != otherType) {
            return false;
        }

        return (compareTo0(otherItem) == 0);
!!!14972556.java!!!	compareTo(inout other : OffsettedItem) : int
        if (this == other) {
            return 0;
        }

        ItemType thisType = itemType();
        ItemType otherType = other.itemType();

        if (thisType != otherType) {
            return thisType.compareTo(otherType);
        }

        return compareTo0(other);
!!!14972684.java!!!	setWriteSize(in writeSize : int) : void
        if (writeSize < 0) {
            throw new IllegalArgumentException("writeSize < 0");
        }

        if (this.writeSize >= 0) {
            throw new UnsupportedOperationException("writeSize already set");
        }

        this.writeSize = writeSize;
!!!14972812.java!!!	writeSize() : int
        if (writeSize < 0) {
            throw new UnsupportedOperationException("writeSize is unknown");
        }

        return writeSize;
!!!14972940.java!!!	writeTo(inout file : DexFile, inout out : AnnotatedOutput) : void
        out.alignTo(alignment);

        try {
            if (writeSize < 0) {
                throw new UnsupportedOperationException(
                        "writeSize is unknown");
            }
            out.assertCursor(getAbsoluteOffset());
        } catch (RuntimeException ex) {
            throw ExceptionWithContext.withContext(ex,
                    "...while writing " + this);
        }

        writeTo0(file, out);
!!!14973068.java!!!	getRelativeOffset() : int
        if (offset < 0) {
            throw new RuntimeException("offset not yet known");
        }

        return offset;
!!!14973196.java!!!	getAbsoluteOffset() : int
        if (offset < 0) {
            throw new RuntimeException("offset not yet known");
        }

        return addedTo.getAbsoluteOffset(offset);
!!!14973324.java!!!	place(inout addedTo : Section, in offset : int) : int
        if (addedTo == null) {
            throw new NullPointerException("addedTo == null");
        }

        if (offset < 0) {
            throw new IllegalArgumentException("offset < 0");
        }

        if (this.addedTo != null) {
            throw new RuntimeException("already written");
        }

        int mask = alignment - 1;
        offset = (offset + mask) & ~mask;

        this.addedTo = addedTo;
        this.offset = offset;

        place0(addedTo, offset);

        return offset;
!!!14973452.java!!!	getAlignment() : int
        return alignment;
!!!14973580.java!!!	offsetString() : String
        return '[' + Integer.toHexString(getAbsoluteOffset()) + ']';
!!!14973836.java!!!	compareTo0(inout other : OffsettedItem) : int
        throw new UnsupportedOperationException("unsupported");
!!!14973964.java!!!	place0(inout addedTo : Section, in offset : int) : void
        // This space intentionally left blank.
