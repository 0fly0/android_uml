format 74
"code" // framework::base::cmds::am::src::com::android::dexgen::rop::code
  revision 1
  modified_by 12 "shchen"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "/home/shchen/work/jellybean/dalvik/dexgen/src/com/android/dexgen/rop/code/"
  java_package "com.android.dexgen.rop.code"
  classview 323724 "code"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 3399180 "SourcePosition"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Information about a source position for code, which includes both a
line number and original bytecode address."
      classrelation 6550156 // NO_INFO (<unidirectional association>)
	relation 6550028 --->
	  a role_name "NO_INFO" init_value "
        new SourcePosition(null, -1, -1)" class_relation const_relation public
	    comment " {@code non-null;} convenient \"no information known\" instance 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6550156 // NO_INFO (<unidirectional association>)
	  b parent class_ref 3399180 // SourcePosition
      end

      classrelation 6550284 // sourceFile (<unidirectional association>)
	relation 6550156 --->
	  a role_name "sourceFile" const_relation private
	    comment " {@code null-ok;} name of the file of origin or {@code null} if unknown 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6550284 // sourceFile (<unidirectional association>)
	  b parent class_ref 3404300 // CstUtf8
      end

      attribute 12484236 "address"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "{@code >= -1;} the bytecode address, or {@code -1} if that
information is unknown
"
      end

      attribute 12484364 "line"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "{@code >= -1;} the line number, or {@code -1} if that
information is unknown
"
      end

      operation 14716940 "SourcePosition"
	public explicit_return_type ""
	nparams 3
	  param inout name "sourceFile" type class_ref 3404300 // CstUtf8
	  param in name "address" explicit_type "int"
	  param in name "line" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance.

@param sourceFile {@code null-ok;} name of the file of origin or
{@code null} if unknown
@param address {@code >= -1;} original bytecode address or {@code -1}
if unknown
@param line {@code >= -1;} original line number or {@code -1} if
unknown"
      end

      operation 14717068 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14717196 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "other" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14717324 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14717452 "sameLine"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "other" type class_ref 3399180 // SourcePosition
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the lines match between this instance and
the one given.

@param other {@code non-null;} the instance to compare to
@return {@code true} iff the lines match"
      end

      operation 14717580 "sameLineAndFile"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "other" type class_ref 3399180 // SourcePosition
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the lines and files match between this instance and
the one given.

@param other {@code non-null;} the instance to compare to
@return {@code true} iff the lines and files match"
      end

      operation 14717708 "getSourceFile"
	public return_type class_ref 3404300 // CstUtf8
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the source file, if known.

@return {@code null-ok;} the source file or {@code null} if unknown"
      end

      operation 14717836 "getAddress"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the original bytecode address.

@return {@code >= -1;} the address or {@code -1} if unknown"
      end

      operation 14717964 "getLine"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the original line number.

@return {@code >= -1;} the original line number or {@code -1} if
unknown"
      end
    end

    class 3399308 "RegisterSpecList"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "List of {@link RegisterSpec} instances."
      classrelation 6521996 // <generalisation>
	relation 6521868 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6521996 // <generalisation>
	  b parent class_ref 3401100 // FixedSizeList
      end

      classrelation 6522124 // <realization>
	relation 6521996 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6522124 // <realization>
	  b parent class_ref 3406220 // TypeList
      end

      classrelation 6522252 // EMPTY (<unidirectional association>)
	relation 6522124 --->
	  a role_name "EMPTY" init_value " new RegisterSpecList(0)" class_relation const_relation public
	    comment " {@code non-null;} no-element instance 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6522252 // EMPTY (<unidirectional association>)
	  b parent class_ref 3399308 // RegisterSpecList
      end

      operation 14702732 "make"
	class_operation public return_type class_ref 3399308 // RegisterSpecList
	nparams 1
	  param inout name "spec" type class_ref 3399564 // RegisterSpec
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Makes a single-element instance.

@param spec {@code non-null;} the element
@return {@code non-null;} an appropriately-constructed instance"
      end

      operation 14702860 "make"
	class_operation public return_type class_ref 3399308 // RegisterSpecList
	nparams 2
	  param inout name "spec0" type class_ref 3399564 // RegisterSpec
	  param inout name "spec1" type class_ref 3399564 // RegisterSpec
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Makes a two-element instance.

@param spec0 {@code non-null;} the first element
@param spec1 {@code non-null;} the second element
@return {@code non-null;} an appropriately-constructed instance"
      end

      operation 14702988 "make"
	class_operation public return_type class_ref 3399308 // RegisterSpecList
	nparams 3
	  param inout name "spec0" type class_ref 3399564 // RegisterSpec
	  param inout name "spec1" type class_ref 3399564 // RegisterSpec
	  param inout name "spec2" type class_ref 3399564 // RegisterSpec
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Makes a three-element instance.

@param spec0 {@code non-null;} the first element
@param spec1 {@code non-null;} the second element
@param spec2 {@code non-null;} the third element
@return {@code non-null;} an appropriately-constructed instance"
      end

      operation 14703116 "make"
	class_operation public return_type class_ref 3399308 // RegisterSpecList
	nparams 4
	  param inout name "spec0" type class_ref 3399564 // RegisterSpec
	  param inout name "spec1" type class_ref 3399564 // RegisterSpec
	  param inout name "spec2" type class_ref 3399564 // RegisterSpec
	  param inout name "spec3" type class_ref 3399564 // RegisterSpec
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Makes a four-element instance.

@param spec0 {@code non-null;} the first element
@param spec1 {@code non-null;} the second element
@param spec2 {@code non-null;} the third element
@param spec3 {@code non-null;} the fourth element
@return {@code non-null;} an appropriately-constructed instance"
      end

      operation 14703244 "RegisterSpecList"
	public explicit_return_type ""
	nparams 1
	  param in name "size" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance. All indices initially contain {@code null}.

@param size the size of the list"
      end

      operation 14703372 "getType"
	public return_type class_ref 3400844 // Type
	nparams 1
	  param in name "n" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14703500 "getWordCount"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14703628 "withAddedType"
	public return_type class_ref 3406220 // TypeList
	nparams 1
	  param inout name "type" type class_ref 3400844 // Type
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14703756 "get"
	public return_type class_ref 3399564 // RegisterSpec
	nparams 1
	  param in name "n" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the indicated element. It is an error to call this with the
index for an element which was never set; if you do that, this
will throw {@code NullPointerException}.

@param n {@code >= 0, < size();} which element
@return {@code non-null;} the indicated element"
      end

      operation 14703884 "specForRegister"
	public return_type class_ref 3399564 // RegisterSpec
	nparams 1
	  param in name "reg" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a RegisterSpec in this list that uses the specified register,
or null if there is none in this list.
@param reg Register to find
@return RegisterSpec that uses argument or null."
      end

      operation 14704012 "indexOfRegister"
	public explicit_return_type "int"
	nparams 1
	  param in name "reg" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the index of a RegisterSpec in this list that uses the specified
register, or -1 if none in this list uses the register.
@param reg Register to find
@return index of RegisterSpec or -1"
      end

      operation 14704140 "set"
	public explicit_return_type "void"
	nparams 2
	  param in name "n" explicit_type "int"
	  param inout name "spec" type class_ref 3399564 // RegisterSpec
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the element at the given index.

@param n {@code >= 0, < size();} which element
@param spec {@code non-null;} the value to store"
      end

      operation 14704268 "getRegistersSize"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the minimum required register count implied by this
instance. This is equal to the highest register number referred
to plus the widest width (largest category) of the type used in
that register.

@return {@code >= 0;} the required registers size"
      end

      operation 14704396 "withFirst"
	public return_type class_ref 3399308 // RegisterSpecList
	nparams 1
	  param inout name "spec" type class_ref 3399564 // RegisterSpec
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new instance, which is the same as this instance,
except that it has an additional element prepended to the original.
Mutability of the result is inherited from the original.

@param spec {@code non-null;} the new first spec (to prepend)
@return {@code non-null;} an appropriately-constructed instance"
      end

      operation 14704524 "withoutFirst"
	public return_type class_ref 3399308 // RegisterSpecList
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new instance, which is the same as this instance,
except that its first element is removed. Mutability of the
result is inherited from the original.

@return {@code non-null;} an appropriately-constructed instance"
      end

      operation 14704652 "withoutLast"
	public return_type class_ref 3399308 // RegisterSpecList
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new instance, which is the same as this instance,
except that its last element is removed. Mutability of the
result is inherited from the original.

@return {@code non-null;} an appropriately-constructed instance"
      end

      operation 14704780 "withOffset"
	public return_type class_ref 3399308 // RegisterSpecList
	nparams 1
	  param in name "delta" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an instance that is identical to this one, except that
all register numbers are offset by the given amount. Mutability
of the result is inherited from the original.

@param delta the amount to offset the register numbers by
@return {@code non-null;} an appropriately-constructed instance"
      end

      operation 14704908 "withSequentialRegisters"
	public return_type class_ref 3399308 // RegisterSpecList
	nparams 2
	  param in name "base" explicit_type "int"
	  param inout name "duplicateFirst" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an instance that is identical to this one, except that
all register numbers are renumbered sequentially from the given
base, with the first number duplicated if indicated.

@param base the base register number
@param duplicateFirst whether to duplicate the first number
@return {@code non-null;} an appropriately-constructed instance"
      end
    end

    class 3399564 "RegisterSpec"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Combination of a register number and a type, used as the sources and
destinations of register-based operations."
      classrelation 6520716 // <realization>
	relation 6520588 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6520716 // <realization>
	  b parent class_ref 3424012 // TypeBearer
      end

      classrelation 6520844 // <realization>
	relation 6520716 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6520844 // <realization>
	  b parent class_ref 3401356 // ToHuman
      end

      classrelation 6520972 // <realization>
	relation 6520844 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}<RegisterSpec>"
	    classrelation_ref 6520972 // <realization>
	  b parent class_ref 3077132 // Comparable
      end

      classrelation 6521100 // PREFIX (<unidirectional association>)
	relation 6520972 --->
	  a role_name "PREFIX" init_value " \"v\"" class_relation const_relation public
	    comment " {@code non-null;} string to prefix register numbers with 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6521100 // PREFIX (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 6521228 // theInterns (<unidirectional association>)
	relation 6521100 --->
	  stereotype "HashMap"
	  a role_name "theInterns" init_value "
        new HashMap<Object, RegisterSpec>(1000)" class_relation const_relation private
	    comment " {@code non-null;} intern table for instances "
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}, RegisterSpec> ${name}${value};
"
	    classrelation_ref 6521228 // theInterns (<unidirectional association>)
	  b parent class_ref 3401484 // Object
      end

      class 3424140 "ForComparison"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 12475148 "reg"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " {@code >= 0;} register number "
	end

	classrelation 6521740 // type (<unidirectional association>)
	  relation 6521612 --->
	    a role_name "type" private
	      comment " {@code non-null;} type loaded or stored 
"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 6521740 // type (<unidirectional association>)
	    b parent class_ref 3424012 // TypeBearer
	end

	classrelation 6521868 // local (<unidirectional association>)
	  relation 6521740 --->
	    a role_name "local" private
	      comment "
{@code null-ok;} local variable associated with this
register, if any

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 6521868 // local (<unidirectional association>)
	    b parent class_ref 3423756 // LocalItem
	end

	operation 14701580 "set"
	  public explicit_return_type "void"
	  nparams 3
	    param in name "reg" explicit_type "int"
	    param inout name "type" type class_ref 3424012 // TypeBearer
	    param inout name "local" type class_ref 3423756 // LocalItem
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Set all the instance variables.

@param reg {@code >= 0;} the register number
@param type {@code non-null;} the type (or possibly actual
value) which is loaded from or stored to the indicated
register
@param local {@code null-ok;} the associated local variable, if any
@return {@code non-null;} an appropriately-constructed instance"
	end

	operation 14701708 "toRegisterSpec"
	  public return_type class_ref 3399564 // RegisterSpec
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Construct a {@code RegisterSpec} of this instance's
contents.

@return {@code non-null;} an appropriately-constructed instance"
	end

	operation 14701836 "equals"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "other" type class_ref 3401484 // Object
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment " {@inheritDoc} "
	end

	operation 14701964 "hashCode"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment " {@inheritDoc} "
	end
      end

      classrelation 6521356 // theInterningItem (<unidirectional association>)
	relation 6521228 --->
	  a role_name "theInterningItem" init_value " new ForComparison()" class_relation const_relation private
	    comment " {@code non-null;} common comparison instance used while interning 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6521356 // theInterningItem (<unidirectional association>)
	  b parent class_ref 3424140 // ForComparison
      end

      attribute 12475020 "reg"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " {@code >= 0;} register number "
      end

      classrelation 6521484 // type (<unidirectional association>)
	relation 6521356 --->
	  a role_name "type" const_relation private
	    comment " {@code non-null;} type loaded or stored 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6521484 // type (<unidirectional association>)
	  b parent class_ref 3424012 // TypeBearer
      end

      classrelation 6521612 // local (<unidirectional association>)
	relation 6521484 --->
	  a role_name "local" const_relation private
	    comment " {@code null-ok;} local variable info associated with this register, if any 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6521612 // local (<unidirectional association>)
	  b parent class_ref 3423756 // LocalItem
      end

      operation 14697100 "intern"
	class_operation private return_type class_ref 3399564 // RegisterSpec
	nparams 3
	  param in name "reg" explicit_type "int"
	  param inout name "type" type class_ref 3424012 // TypeBearer
	  param inout name "local" type class_ref 3423756 // LocalItem
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Intern the given triple as an instance of this class.

@param reg {@code >= 0;} the register number
@param type {@code non-null;} the type (or possibly actual value) which
is loaded from or stored to the indicated register
@param local {@code null-ok;} the associated local variable, if any
@return {@code non-null;} an appropriately-constructed instance"
      end

      operation 14697228 "make"
	class_operation public return_type class_ref 3399564 // RegisterSpec
	nparams 2
	  param in name "reg" explicit_type "int"
	  param inout name "type" type class_ref 3424012 // TypeBearer
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an instance for the given register number and type, with
no variable info. This method is allowed to return shared
instances (but doesn't necessarily do so).

@param reg {@code >= 0;} the register number
@param type {@code non-null;} the type (or possibly actual value) which
is loaded from or stored to the indicated register
@return {@code non-null;} an appropriately-constructed instance"
      end

      operation 14697356 "make"
	class_operation public return_type class_ref 3399564 // RegisterSpec
	nparams 3
	  param in name "reg" explicit_type "int"
	  param inout name "type" type class_ref 3424012 // TypeBearer
	  param inout name "local" type class_ref 3423756 // LocalItem
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an instance for the given register number, type, and
variable info. This method is allowed to return shared
instances (but doesn't necessarily do so).

@param reg {@code >= 0;} the register number
@param type {@code non-null;} the type (or possibly actual value) which
is loaded from or stored to the indicated register
@param local {@code non-null;} the associated local variable
@return {@code non-null;} an appropriately-constructed instance"
      end

      operation 14697484 "makeLocalOptional"
	class_operation public return_type class_ref 3399564 // RegisterSpec
	nparams 3
	  param in name "reg" explicit_type "int"
	  param inout name "type" type class_ref 3424012 // TypeBearer
	  param inout name "local" type class_ref 3423756 // LocalItem
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an instance for the given register number, type, and
variable info. This method is allowed to return shared
instances (but doesn't necessarily do so).

@param reg {@code >= 0;} the register number
@param type {@code non-null;} the type (or possibly actual value) which
is loaded from or stored to the indicated register
@param local {@code null-ok;} the associated variable info or null for
none
@return {@code non-null;} an appropriately-constructed instance"
      end

      operation 14697612 "regString"
	class_operation public return_type class_ref 3399692 // String
	nparams 1
	  param in name "reg" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the string form for the given register number.

@param reg {@code >= 0;} the register number
@return {@code non-null;} the string form"
      end

      operation 14697740 "RegisterSpec"
	private explicit_return_type ""
	nparams 3
	  param in name "reg" explicit_type "int"
	  param inout name "type" type class_ref 3424012 // TypeBearer
	  param inout name "local" type class_ref 3423756 // LocalItem
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance. This constructor is private. Use
{@link #make}.

@param reg {@code >= 0;} the register number
@param type {@code non-null;} the type (or possibly actual value) which
is loaded from or stored to the indicated register
@param local {@code null-ok;} the associated local variable, if any"
      end

      operation 14697868 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "other" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14697996 "equalsUsingSimpleType"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "other" type class_ref 3399564 // RegisterSpec
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Like {@code equals}, but only consider the simple types of the
registers. That is, this compares {@code getType()} on the types
to ignore whatever arbitrary extra stuff might be carried around
by an outer {@link TypeBearer}.

@param other {@code null-ok;} spec to compare to
@return {@code true} iff {@code this} and {@code other} are equal
in the stated way"
      end

      operation 14698124 "matchesVariable"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "other" type class_ref 3399564 // RegisterSpec
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Like {@link #equalsUsingSimpleType} but ignoring the register number.
This is useful to determine if two instances refer to the \"same\"
local variable.

@param other {@code null-ok;} spec to compare to
@return {@code true} iff {@code this} and {@code other} are equal
in the stated way"
      end

      operation 14698252 "equals"
	private explicit_return_type "boolean"
	nparams 3
	  param in name "reg" explicit_type "int"
	  param inout name "type" type class_ref 3424012 // TypeBearer
	  param inout name "local" type class_ref 3423756 // LocalItem
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Helper for {@link #equals} and {@link #ForComparison.equals},
which actually does the test.

@param reg value of the instance variable, for another instance
@param type value of the instance variable, for another instance
@param local value of the instance variable, for another instance
@return whether this instance is equal to one with the given
values"
      end

      operation 14698380 "compareTo"
	public explicit_return_type "int"
	nparams 1
	  param inout name "other" type class_ref 3399564 // RegisterSpec
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares by (in priority order) register number, unwrapped type
(that is types not {@link TypeBearer}s, and local info.

@param other {@code non-null;} spec to compare to
@return {@code -1..1;} standard result of comparison"
      end

      operation 14698508 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14698636 "hashCodeOf"
	class_operation private explicit_return_type "int"
	nparams 3
	  param in name "reg" explicit_type "int"
	  param inout name "type" type class_ref 3424012 // TypeBearer
	  param inout name "local" type class_ref 3423756 // LocalItem
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Helper for {@link #hashCode} and {@link #ForComparison.hashCode},
which actually does the calculation.

@param reg value of the instance variable
@param type value of the instance variable
@param local value of the instance variable
@return the hash code"
      end

      operation 14698764 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14698892 "toHuman"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14699020 "getType"
	public return_type class_ref 3400844 // Type
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14699148 "getFrameType"
	public return_type class_ref 3424012 // TypeBearer
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14699276 "getBasicType"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14699404 "getBasicFrameType"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14699532 "isConstant"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14699660 "getReg"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the register number.

@return {@code >= 0;} the register number"
      end

      operation 14699788 "getTypeBearer"
	public return_type class_ref 3424012 // TypeBearer
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the type (or actual value) which is loaded from or stored
to the register associated with this instance.

@return {@code non-null;} the type"
      end

      operation 14699916 "getLocalItem"
	public return_type class_ref 3423756 // LocalItem
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the variable info associated with this instance, if any.

@return {@code null-ok;} the variable info, or {@code null} if this
instance has none"
      end

      operation 14700044 "getNextReg"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the next available register number after the one in this
instance. This is equal to the register number plus the width
(category) of the type used. Among other things, this may also
be used to determine the minimum required register count
implied by this instance.

@return {@code >= 0;} the required registers size"
      end

      operation 14700172 "getCategory"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the category of this instance's type. This is just a convenient
shorthand for {@code getType().getCategory()}.

@see #isCategory1
@see #isCategory2
@return {@code 1..2;} the category of this instance's type"
      end

      operation 14700300 "isCategory1"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets whether this instance's type is category 1. This is just a
convenient shorthand for {@code getType().isCategory1()}.

@see #getCategory
@see #isCategory2
@return whether or not this instance's type is of category 1"
      end

      operation 14700428 "isCategory2"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets whether this instance's type is category 2. This is just a
convenient shorthand for {@code getType().isCategory2()}.

@see #getCategory
@see #isCategory1
@return whether or not this instance's type is of category 2"
      end

      operation 14700556 "regString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the string form for just the register number of this instance.

@return {@code non-null;} the register string form"
      end

      operation 14700684 "intersect"
	public return_type class_ref 3399564 // RegisterSpec
	nparams 2
	  param inout name "other" type class_ref 3399564 // RegisterSpec
	  param inout name "localPrimary" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an instance that is the intersection between this instance
and the given one, if any. The intersection is defined as follows:

<ul>
  <li>If {@code other} is {@code null}, then the result
    is {@code null}.
  <li>If the register numbers don't match, then the intersection
    is {@code null}. Otherwise, the register number of the
    intersection is the same as the one in the two instances.</li>
  <li>If the types returned by {@code getType()} are not
    {@code equals()}, then the intersection is null.</li>
  <li>If the type bearers returned by {@code getTypeBearer()}
    are {@code equals()}, then the intersection's type bearer
    is the one from this instance. Otherwise, the intersection's
    type bearer is the {@code getType()} of this instance.</li>
  <li>If the locals are {@code equals()}, then the local info
    of the intersection is the local info of this instance. Otherwise,
    the local info of the intersection is {@code null}.</li>
</ul>

@param other {@code null-ok;} instance to intersect with (or {@code null})
@param localPrimary whether local variables are primary to the
intersection; if {@code true}, then the only non-null
results occur when registers being intersected have equal local
infos (or both have {@code null} local infos)
@return {@code null-ok;} the intersection"
      end

      operation 14700812 "withReg"
	public return_type class_ref 3399564 // RegisterSpec
	nparams 1
	  param in name "newReg" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an instance that is identical to this one, except that the
register number is replaced by the given one.

@param newReg {@code >= 0;} the new register number
@return {@code non-null;} an appropriately-constructed instance"
      end

      operation 14700940 "withType"
	public return_type class_ref 3399564 // RegisterSpec
	nparams 1
	  param inout name "newType" type class_ref 3424012 // TypeBearer
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an instance that is identical to this one, except that
the type is replaced by the given one.

@param newType {@code non-null;} the new type
@return {@code non-null;} an appropriately-constructed instance"
      end

      operation 14701068 "withOffset"
	public return_type class_ref 3399564 // RegisterSpec
	nparams 1
	  param in name "delta" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an instance that is identical to this one, except that the
register number is offset by the given amount.

@param delta the amount to offset the register number by
@return {@code non-null;} an appropriately-constructed instance"
      end

      operation 14701196 "withSimpleType"
	public return_type class_ref 3399564 // RegisterSpec
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an instance that is identical to this one, except that
the type bearer is replaced by the actual underlying type
(thereby stripping off non-type information) with any
initialization information stripped away as well.

@return {@code non-null;} an appropriately-constructed instance"
      end

      operation 14701324 "withLocalItem"
	public return_type class_ref 3399564 // RegisterSpec
	nparams 1
	  param inout name "local" type class_ref 3423756 // LocalItem
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an instance that is identical to this one except that the
local variable is as specified in the parameter.

@param local {@code null-ok;} the local item or null for none
@return an appropriate instance"
      end

      operation 14701452 "toString0"
	private return_type class_ref 3399692 // String
	nparams 1
	  param inout name "human" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Helper for {@link #toString} and {@link #toHuman}.

@param human whether to be human-oriented
@return {@code non-null;} the string form"
      end
    end

    class 3400332 "RopMethod"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "All of the parts that make up a method at the rop layer."
      classrelation 6523276 // blocks (<unidirectional association>)
	relation 6523148 --->
	  a role_name "blocks" const_relation private
	    comment " {@code non-null;} basic block list of the method 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6523276 // blocks (<unidirectional association>)
	  b parent class_ref 3422604 // BasicBlockList
      end

      attribute 12484108 "firstLabel"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " {@code >= 0;} label for the block which starts the method "
      end

      classrelation 6523404 // predecessors (<unidirectional association>)
	relation 6523276 --->
	  a role_name "predecessors" multiplicity "[]" private
	    comment "
{@code null-ok;} array of predecessors for each block, indexed by block
label

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 6523404 // predecessors (<unidirectional association>)
	  b parent class_ref 3407628 // IntList
      end

      classrelation 6523532 // exitPredecessors (<unidirectional association>)
	relation 6523404 --->
	  a role_name "exitPredecessors" private
	    comment "
{@code null-ok;} the predecessors for the implicit \"exit\" block, that is
the labels for the blocks that return, if calculated

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6523532 // exitPredecessors (<unidirectional association>)
	  b parent class_ref 3407628 // IntList
      end

      operation 14709772 "RopMethod"
	public explicit_return_type ""
	nparams 2
	  param inout name "blocks" type class_ref 3422604 // BasicBlockList
	  param in name "firstLabel" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance.

@param blocks {@code non-null;} basic block list of the method
@param firstLabel {@code >= 0;} the label of the first block to execute"
      end

      operation 14709900 "getBlocks"
	public return_type class_ref 3422604 // BasicBlockList
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the basic block list for this method.

@return {@code non-null;} the list"
      end

      operation 14710028 "getFirstLabel"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the label for the first block in the method that this list
represents.

@return {@code >= 0;} the first-block label"
      end

      operation 14710156 "labelToPredecessors"
	public return_type class_ref 3407628 // IntList
	nparams 1
	  param in name "label" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the predecessors associated with the given block. This throws
an exception if there is no block with the given label.

@param label {@code >= 0;} the label of the block in question
@return {@code non-null;} the predecessors of that block"
      end

      operation 14710284 "getExitPredecessors"
	public return_type class_ref 3407628 // IntList
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the exit predecessors for this instance.

@return {@code non-null;} the exit predecessors"
      end

      operation 14710412 "withRegisterOffset"
	public return_type class_ref 3400332 // RopMethod
	nparams 1
	  param in name "delta" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an instance that is identical to this one, except that
the registers in each instruction are offset by the given
amount.

@param delta the amount to offset register numbers by
@return {@code non-null;} an appropriately-constructed instance"
      end

      operation 14710540 "calcPredecessors"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Calculates the predecessor sets for each block as well as for the
exit."
      end
    end

    class 3400460 "BasicBlock"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Basic block of register-based instructions."
      classrelation 6514700 // <realization>
	relation 6514572 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6514700 // <realization>
	  b parent class_ref 3420300 // LabeledItem
      end

      attribute 12473996 "label"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " {@code >= 0;} target label for this block "
      end

      classrelation 6514828 // insns (<unidirectional association>)
	relation 6514700 --->
	  a role_name "insns" const_relation private
	    comment " {@code non-null;} list of instructions in this block 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6514828 // insns (<unidirectional association>)
	  b parent class_ref 3422348 // InsnList
      end

      classrelation 6514956 // successors (<unidirectional association>)
	relation 6514828 --->
	  a role_name "successors" const_relation private
	    comment "
{@code non-null;} full list of successors that this block may
branch to

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6514956 // successors (<unidirectional association>)
	  b parent class_ref 3407628 // IntList
      end

      attribute 12474124 "primarySuccessor"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "{@code >= -1;} the primary / standard-flow / \"default\" successor, or
{@code -1} if this block has no successors (that is, it
exits the function/method)
"
      end

      operation 14681228 "BasicBlock"
	public explicit_return_type ""
	nparams 4
	  param in name "label" explicit_type "int"
	  param inout name "insns" type class_ref 3422348 // InsnList
	  param inout name "successors" type class_ref 3407628 // IntList
	  param in name "primarySuccessor" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance. The predecessor set is set to {@code null}.

@param label {@code >= 0;} target label for this block
@param insns {@code non-null;} list of instructions in this block
@param successors {@code non-null;} full list of successors that this
block may branch to
@param primarySuccessor {@code >= -1;} the primary / standard-flow /
\"default\" successor, or {@code -1} if this block has no
successors (that is, it exits the function/method or is an
unconditional throw)"
      end

      operation 14681356 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "other" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "{@inheritDoc}

Instances of this class compare by identity. That is,
{@code x.equals(y)} is only true if {@code x == y}."
      end

      operation 14681484 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "{@inheritDoc}

Return the identity hashcode of this instance. This is proper,
since instances of this class compare by identity (see {@link #equals})."
      end

      operation 14681612 "getLabel"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the target label of this block.

@return {@code >= 0;} the label"
      end

      operation 14681740 "getInsns"
	public return_type class_ref 3422348 // InsnList
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the list of instructions inside this block.

@return {@code non-null;} the instruction list"
      end

      operation 14681868 "getSuccessors"
	public return_type class_ref 3407628 // IntList
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the list of successors that this block may branch to.

@return {@code non-null;} the successors list"
      end

      operation 14681996 "getPrimarySuccessor"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the primary successor of this block.

@return {@code >= -1;} the primary successor, or {@code -1} if this
block has no successors at all"
      end

      operation 14682124 "getSecondarySuccessor"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the secondary successor of this block. It is only valid to call
this method on blocks that have exactly two successors.

@return {@code >= 0;} the secondary successor"
      end

      operation 14682252 "getFirstInsn"
	public return_type class_ref 3405580 // Insn
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the first instruction of this block. This is just a
convenient shorthand for {@code getInsns().get(0)}.

@return {@code non-null;} the first instruction"
      end

      operation 14682380 "getLastInsn"
	public return_type class_ref 3405580 // Insn
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the last instruction of this block. This is just a
convenient shorthand for {@code getInsns().getLast()}.

@return {@code non-null;} the last instruction"
      end

      operation 14682508 "canThrow"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether this block might throw an exception. This is
just a convenient shorthand for {@code getLastInsn().canThrow()}.

@return {@code true} iff this block might throw an
exception"
      end

      operation 14682636 "hasExceptionHandlers"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether this block has any associated exception handlers.
This is just a shorthand for inspecting the last instruction in
the block to see if it could throw, and if so, whether it in fact
has any associated handlers.

@return {@code true} iff this block has any associated
exception handlers"
      end

      operation 14682764 "getExceptionHandlerTypes"
	public return_type class_ref 3406220 // TypeList
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the exception handler types associated with this block,
if any. This is just a shorthand for inspecting the last
instruction in the block to see if it could throw, and if so,
grabbing the catch list out of it. If not, this returns an
empty list (not {@code null}).

@return {@code non-null;} the exception handler types associated with
this block"
      end

      operation 14682892 "withRegisterOffset"
	public return_type class_ref 3400460 // BasicBlock
	nparams 1
	  param in name "delta" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an instance that is identical to this one, except that
the registers in each instruction are offset by the given
amount.

@param delta the amount to offset register numbers by
@return {@code non-null;} an appropriately-constructed instance"
      end

      operation 14683020 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 3422476 "Visitor"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 14683148 "visitBlock"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "b" type class_ref 3400460 // BasicBlock
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Visits a basic block
@param b block visited"
	end
      end
    end

    class 3404556 "RegisterSpecSet"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Set of {@link RegisterSpec} instances, where a given register number
may appear only once in the set."
      classrelation 6522380 // <generalisation>
	relation 6522252 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6522380 // <generalisation>
	  b parent class_ref 3401228 // MutabilityControl
      end

      classrelation 6522508 // EMPTY (<unidirectional association>)
	relation 6522380 --->
	  a role_name "EMPTY" init_value " new RegisterSpecSet(0)" class_relation const_relation public
	    comment " {@code non-null;} no-element instance 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6522508 // EMPTY (<unidirectional association>)
	  b parent class_ref 3404556 // RegisterSpecSet
      end

      classrelation 6522636 // specs (<unidirectional association>)
	relation 6522508 --->
	  a role_name "specs" multiplicity "[]" const_relation private
	    comment "
{@code non-null;} array of register specs, where each element is
{@code null} or is an instance whose {@code reg}
matches the array index

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 6522636 // specs (<unidirectional association>)
	  b parent class_ref 3399564 // RegisterSpec
      end

      attribute 12475276 "size"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " {@code >= -1;} size of the set or {@code -1} if not yet calculated "
      end

      operation 14705036 "RegisterSpecSet"
	public explicit_return_type ""
	nparams 1
	  param in name "maxSize" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance. The instance is initially empty.

@param maxSize {@code >= 0;} the maximum register number (exclusive) that
may be represented in this instance"
      end

      operation 14705164 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "other" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14705292 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14705420 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14705548 "getMaxSize"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the maximum number of registers that may be in this instance, which
is also the maximum-plus-one of register numbers that may be
represented.

@return {@code >= 0;} the maximum size"
      end

      operation 14705676 "size"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the current size of this instance.

@return {@code >= 0;} the size"
      end

      operation 14705804 "get"
	public return_type class_ref 3399564 // RegisterSpec
	nparams 1
	  param in name "reg" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the element with the given register number, if any.

@param reg {@code >= 0;} the desired register number
@return {@code null-ok;} the element with the given register number or
{@code null} if there is none"
      end

      operation 14705932 "get"
	public return_type class_ref 3399564 // RegisterSpec
	nparams 1
	  param inout name "spec" type class_ref 3399564 // RegisterSpec
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the element with the same register number as the given
spec, if any. This is just a convenient shorthand for
{@code get(spec.getReg())}.

@param spec {@code non-null;} spec with the desired register number
@return {@code null-ok;} the element with the matching register number or
{@code null} if there is none"
      end

      operation 14706060 "findMatchingLocal"
	public return_type class_ref 3399564 // RegisterSpec
	nparams 1
	  param inout name "spec" type class_ref 3399564 // RegisterSpec
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the spec in this set that's currently associated with a
given local (type, name, and signature), or {@code null} if there is
none. This ignores the register number of the given spec but
matches on everything else.

@param spec {@code non-null;} local to look for
@return {@code null-ok;} first register found that matches, if any"
      end

      operation 14706188 "localItemToSpec"
	public return_type class_ref 3399564 // RegisterSpec
	nparams 1
	  param inout name "local" type class_ref 3423756 // LocalItem
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the spec in this set that's currently associated with a given
local (name and signature), or {@code null} if there is none.

@param local {@code non-null;} local item to search for
@return {@code null-ok;} first register found with matching name and signature"
      end

      operation 14706316 "remove"
	public explicit_return_type "void"
	nparams 1
	  param inout name "toRemove" type class_ref 3399564 // RegisterSpec
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes a spec from the set. Only the register number
of the parameter is significant.

@param toRemove {@code non-null;} register to remove."
      end

      operation 14706444 "put"
	public explicit_return_type "void"
	nparams 1
	  param inout name "spec" type class_ref 3399564 // RegisterSpec
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Puts the given spec into the set. If there is already an element in
the set with the same register number, it is replaced. Additionally,
if the previous element is for a category-2 register, then that
previous element is nullified. Finally, if the given spec is for
a category-2 register, then the immediately subsequent element
is nullified.

@param spec {@code non-null;} the register spec to put in the instance"
      end

      operation 14706572 "putAll"
	public explicit_return_type "void"
	nparams 1
	  param inout name "set" type class_ref 3404556 // RegisterSpecSet
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Put the entire contents of the given set into this one.

@param set {@code non-null;} the set to put into this instance"
      end

      operation 14706700 "intersect"
	public explicit_return_type "void"
	nparams 2
	  param inout name "other" type class_ref 3404556 // RegisterSpecSet
	  param inout name "localPrimary" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Intersects this instance with the given one, modifying this
instance. The intersection consists of the pairwise
{@link RegisterSpec#intersect} of corresponding elements from
this instance and the given one where both are non-null.

@param other {@code non-null;} set to intersect with
@param localPrimary whether local variables are primary to
the intersection; if {@code true}, then the only non-null
result elements occur when registers being intersected have
equal names (or both have {@code null} names)"
      end

      operation 14706828 "withOffset"
	public return_type class_ref 3404556 // RegisterSpecSet
	nparams 1
	  param in name "delta" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an instance that is identical to this one, except that
all register numbers are offset by the given amount. Mutability
of the result is inherited from the original.

@param delta the amount to offset the register numbers by
@return {@code non-null;} an appropriately-constructed instance"
      end

      operation 14706956 "mutableCopy"
	public return_type class_ref 3404556 // RegisterSpecSet
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Makes and return a mutable copy of this instance.

@return {@code non-null;} the mutable copy"
      end
    end

    class 3405452 "Rop"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Class that describes all the immutable parts of register-based operations."
      attribute 12482700 "BRANCH_MIN"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " minimum {@code BRANCH_*} value "
      end

      attribute 12482828 "BRANCH_NONE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " indicates a non-branching op "
      end

      attribute 12482956 "BRANCH_RETURN"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " indicates a function/method return "
      end

      attribute 12483084 "BRANCH_GOTO"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " indicates an unconditional goto "
      end

      attribute 12483212 "BRANCH_IF"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " indicates a two-way branch "
      end

      attribute 12483340 "BRANCH_SWITCH"
	class_attribute const_attribute public explicit_type "int"
	init_value " 5"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " indicates a switch-style branch "
      end

      attribute 12483468 "BRANCH_THROW"
	class_attribute const_attribute public explicit_type "int"
	init_value " 6"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " indicates a throw-style branch (both always-throws and may-throw) "
      end

      attribute 12483596 "BRANCH_MAX"
	class_attribute const_attribute public explicit_type "int"
	init_value " 6"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " maximum {@code BRANCH_*} value "
      end

      attribute 12483724 "opcode"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " the opcode; one of the constants in {@link RegOps} "
      end

      classrelation 6522764 // result (<unidirectional association>)
	relation 6522636 --->
	  a role_name "result" const_relation private
	    comment "
{@code non-null;} result type of this operation; {@link Type#VOID} for
no-result operations

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6522764 // result (<unidirectional association>)
	  b parent class_ref 3400844 // Type
      end

      classrelation 6522892 // sources (<unidirectional association>)
	relation 6522764 --->
	  a role_name "sources" const_relation private
	    comment " {@code non-null;} types of all the sources of this operation 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6522892 // sources (<unidirectional association>)
	  b parent class_ref 3406220 // TypeList
      end

      classrelation 6523020 // exceptions (<unidirectional association>)
	relation 6522892 --->
	  a role_name "exceptions" const_relation private
	    comment " {@code non-null;} list of possible types thrown by this operation 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6523020 // exceptions (<unidirectional association>)
	  b parent class_ref 3406220 // TypeList
      end

      attribute 12483852 "branchingness"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "the branchingness of this op; one of the {@code BRANCH_*}
constants in this class
"
      end

      attribute 12483980 "isCallLike"
	const_attribute private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " whether this is a function/method call op or similar "
      end

      classrelation 6523148 // nickname (<unidirectional association>)
	relation 6523020 --->
	  a role_name "nickname" const_relation private
	    comment " {@code null-ok;} nickname, if specified (used for debugging) 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6523148 // nickname (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      operation 14707468 "Rop"
	public explicit_return_type ""
	nparams 7
	  param in name "opcode" explicit_type "int"
	  param inout name "result" type class_ref 3400844 // Type
	  param inout name "sources" type class_ref 3406220 // TypeList
	  param inout name "exceptions" type class_ref 3406220 // TypeList
	  param in name "branchingness" explicit_type "int"
	  param inout name "isCallLike" explicit_type "boolean"
	  param inout name "nickname" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance. This method is private. Use one of the
public constructors.

@param opcode the opcode; one of the constants in {@link RegOps}
@param result {@code non-null;} result type of this operation; {@link
Type#VOID} for no-result operations
@param sources {@code non-null;} types of all the sources of this operation
@param exceptions {@code non-null;} list of possible types thrown by this
operation
@param branchingness the branchingness of this op; one of the
{@code BRANCH_*} constants
@param isCallLike whether the op is a function/method call or similar
@param nickname {@code null-ok;} optional nickname (used for debugging)"
      end

      operation 14707596 "Rop"
	public explicit_return_type ""
	nparams 6
	  param in name "opcode" explicit_type "int"
	  param inout name "result" type class_ref 3400844 // Type
	  param inout name "sources" type class_ref 3406220 // TypeList
	  param inout name "exceptions" type class_ref 3406220 // TypeList
	  param in name "branchingness" explicit_type "int"
	  param inout name "nickname" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance. The constructed instance is never a
call-like op (see {@link #isCallLike}).

@param opcode the opcode; one of the constants in {@link RegOps}
@param result {@code non-null;} result type of this operation; {@link
Type#VOID} for no-result operations
@param sources {@code non-null;} types of all the sources of this operation
@param exceptions {@code non-null;} list of possible types thrown by this
operation
@param branchingness the branchingness of this op; one of the
{@code BRANCH_*} constants
@param nickname {@code null-ok;} optional nickname (used for debugging)"
      end

      operation 14707724 "Rop"
	public explicit_return_type ""
	nparams 5
	  param in name "opcode" explicit_type "int"
	  param inout name "result" type class_ref 3400844 // Type
	  param inout name "sources" type class_ref 3406220 // TypeList
	  param in name "branchingness" explicit_type "int"
	  param inout name "nickname" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a no-exception instance. The constructed instance is never a
call-like op (see {@link #isCallLike}).

@param opcode the opcode; one of the constants in {@link RegOps}
@param result {@code non-null;} result type of this operation; {@link
Type#VOID} for no-result operations
@param sources {@code non-null;} types of all the sources of this operation
@param branchingness the branchingness of this op; one of the
{@code BRANCH_*} constants
@param nickname {@code null-ok;} optional nickname (used for debugging)"
      end

      operation 14707852 "Rop"
	public explicit_return_type ""
	nparams 4
	  param in name "opcode" explicit_type "int"
	  param inout name "result" type class_ref 3400844 // Type
	  param inout name "sources" type class_ref 3406220 // TypeList
	  param inout name "nickname" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a non-branching no-exception instance. The
{@code branchingness} is always {@code BRANCH_NONE},
and it is never a call-like op (see {@link #isCallLike}).

@param opcode the opcode; one of the constants in {@link RegOps}
@param result {@code non-null;} result type of this operation; {@link
Type#VOID} for no-result operations
@param sources {@code non-null;} types of all the sources of this operation
@param nickname {@code null-ok;} optional nickname (used for debugging)"
      end

      operation 14707980 "Rop"
	public explicit_return_type ""
	nparams 5
	  param in name "opcode" explicit_type "int"
	  param inout name "result" type class_ref 3400844 // Type
	  param inout name "sources" type class_ref 3406220 // TypeList
	  param inout name "exceptions" type class_ref 3406220 // TypeList
	  param inout name "nickname" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a non-empty exceptions instance. Its
{@code branchingness} is always {@code BRANCH_THROW},
but it is never a call-like op (see {@link #isCallLike}).

@param opcode the opcode; one of the constants in {@link RegOps}
@param result {@code non-null;} result type of this operation; {@link
Type#VOID} for no-result operations
@param sources {@code non-null;} types of all the sources of this operation
@param exceptions {@code non-null;} list of possible types thrown by this
operation
@param nickname {@code null-ok;} optional nickname (used for debugging)"
      end

      operation 14708108 "Rop"
	public explicit_return_type ""
	nparams 3
	  param in name "opcode" explicit_type "int"
	  param inout name "sources" type class_ref 3406220 // TypeList
	  param inout name "exceptions" type class_ref 3406220 // TypeList
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a non-nicknamed instance with non-empty exceptions, which
is always a call-like op (see {@link #isCallLike}). Its
{@code branchingness} is always {@code BRANCH_THROW}.

@param opcode the opcode; one of the constants in {@link RegOps}
@param sources {@code non-null;} types of all the sources of this operation
@param exceptions {@code non-null;} list of possible types thrown by this
operation"
      end

      operation 14708236 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "other" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14708364 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14708492 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14708620 "getOpcode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the opcode.

@return the opcode"
      end

      operation 14708748 "getResult"
	public return_type class_ref 3400844 // Type
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the result type. A return value of {@link Type#VOID}
means this operation returns nothing.

@return {@code null-ok;} the result spec"
      end

      operation 14708876 "getSources"
	public return_type class_ref 3406220 // TypeList
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the source types.

@return {@code non-null;} the source types"
      end

      operation 14709004 "getExceptions"
	public return_type class_ref 3406220 // TypeList
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the list of exception types that might be thrown.

@return {@code non-null;} the list of exception types"
      end

      operation 14709132 "getBranchingness"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the branchingness of this instance.

@return the branchingness"
      end

      operation 14709260 "isCallLike"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets whether this opcode is a function/method call or similar.

@return {@code true} iff this opcode is call-like"
      end

      operation 14709388 "isCommutative"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets whether this opcode is commutative (the order of its sources are
unimportant) or not. All commutative Rops have exactly two sources and
have no branchiness.

@return true if rop is commutative"
      end

      operation 14709516 "getNickname"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the nickname. If this instance has no nickname, this returns
the result of calling {@link #toString}.

@return {@code non-null;} the nickname"
      end

      operation 14709644 "canThrow"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets whether this operation can possibly throw an exception. This
is just a convenient wrapper for
{@code getExceptions().size() != 0}.

@return {@code true} iff this operation can possibly throw"
      end
    end

    class 3405580 "Insn"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A register-based instruction. An instruction is the combination of
an opcode (which specifies operation and source/result types), a
list of actual sources and result registers/values, and additional
information."
      class 3406092 "Visitor"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 14572812 "visitPlainInsn"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "insn" type class_ref 3406348 // PlainInsn
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Visits a {@link PlainInsn}.

@param insn {@code non-null;} the instruction to visit"
	end

	operation 14572940 "visitPlainCstInsn"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "insn" type class_ref 3406476 // PlainCstInsn
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Visits a {@link PlainCstInsn}.

@param insn {@code non-null;} the instruction to visit"
	end

	operation 14573068 "visitSwitchInsn"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "insn" type class_ref 3406604 // SwitchInsn
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Visits a {@link SwitchInsn}.

@param insn {@code non-null;} the instruction to visit"
	end

	operation 14573196 "visitThrowingCstInsn"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "insn" type class_ref 3406732 // ThrowingCstInsn
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Visits a {@link ThrowingCstInsn}.

@param insn {@code non-null;} the instruction to visit"
	end

	operation 14573324 "visitThrowingInsn"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "insn" type class_ref 3406860 // ThrowingInsn
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Visits a {@link ThrowingInsn}.

@param insn {@code non-null;} the instruction to visit"
	end

	operation 14573452 "visitFillArrayDataInsn"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "insn" type class_ref 3406988 // FillArrayDataInsn
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Visits a {@link FillArrayDataInsn}.

@param insn {@code non-null;} the instruction to visit"
	end
      end

      classrelation 6478988 // <realization>
	relation 6478860 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6478988 // <realization>
	  b parent class_ref 3401356 // ToHuman
      end

      classrelation 6479116 // opcode (<unidirectional association>)
	relation 6478988 --->
	  a role_name "opcode" const_relation private
	    comment " {@code non-null;} opcode 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6479116 // opcode (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6479244 // position (<unidirectional association>)
	relation 6479116 --->
	  a role_name "position" const_relation private
	    comment " {@code non-null;} source position 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6479244 // position (<unidirectional association>)
	  b parent class_ref 3399180 // SourcePosition
      end

      classrelation 6479372 // result (<unidirectional association>)
	relation 6479244 --->
	  a role_name "result" const_relation private
	    comment " {@code null-ok;} spec for the result of this instruction, if any 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6479372 // result (<unidirectional association>)
	  b parent class_ref 3399564 // RegisterSpec
      end

      classrelation 6479500 // sources (<unidirectional association>)
	relation 6479372 --->
	  a role_name "sources" const_relation private
	    comment " {@code non-null;} specs for all the sources of this instruction 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6479500 // sources (<unidirectional association>)
	  b parent class_ref 3399308 // RegisterSpecList
      end

      operation 14569868 "Insn"
	public explicit_return_type ""
	nparams 4
	  param inout name "opcode" type class_ref 3405452 // Rop
	  param inout name "position" type class_ref 3399180 // SourcePosition
	  param inout name "result" type class_ref 3399564 // RegisterSpec
	  param inout name "sources" type class_ref 3399308 // RegisterSpecList
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance.

@param opcode {@code non-null;} the opcode
@param position {@code non-null;} source position
@param result {@code null-ok;} spec for the result, if any
@param sources {@code non-null;} specs for all the sources"
      end

      operation 14569996 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "other" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "{@inheritDoc}

Instances of this class compare by identity. That is,
{@code x.equals(y)} is only true if {@code x == y}."
      end

      operation 14570124 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "{@inheritDoc}

This implementation returns the identity hashcode of this
instance. This is proper, since instances of this class compare
by identity (see {@link #equals})."
      end

      operation 14570252 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14570380 "toHuman"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets a human-oriented (and slightly lossy) string for this instance.

@return {@code non-null;} the human string form"
      end

      operation 14570508 "getInlineString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets an \"inline\" string portion for toHuman(), if available. This
is the portion that appears after the Rop opcode

@return {@code null-ok;} if non-null, the inline text for toHuman()"
      end

      operation 14570636 "getOpcode"
	public return_type class_ref 3405452 // Rop
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the opcode.

@return {@code non-null;} the opcode"
      end

      operation 14570764 "getPosition"
	public return_type class_ref 3399180 // SourcePosition
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the source position.

@return {@code non-null;} the source position"
      end

      operation 14570892 "getResult"
	public return_type class_ref 3399564 // RegisterSpec
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the result spec, if any. A return value of {@code null}
means this instruction returns nothing.

@return {@code null-ok;} the result spec, if any"
      end

      operation 14571020 "getLocalAssignment"
	public return_type class_ref 3399564 // RegisterSpec
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the spec of a local variable assignment that occurs at this
instruction, or null if no local variable assignment occurs. This
may be the result register, or for {@code mark-local} insns
it may be the source.

@return {@code null-ok;} a named register spec or null"
      end

      operation 14571148 "getSources"
	public return_type class_ref 3399308 // RegisterSpecList
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the source specs.

@return {@code non-null;} the source specs"
      end

      operation 14571276 "canThrow"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets whether this instruction can possibly throw an exception. This
is just a convenient wrapper for {@code getOpcode().canThrow()}.

@return {@code true} iff this instruction can possibly throw"
      end

      operation 14571404 "getCatches"
	abstract public return_type class_ref 3406220 // TypeList
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the list of possibly-caught exceptions. This returns {@link
StdTypeList#EMPTY} if this instruction has no handlers,
which can be <i>either</i> if this instruction can't possibly
throw or if it merely doesn't handle any of its possible
exceptions. To determine whether this instruction can throw,
use {@link #canThrow}.

@return {@code non-null;} the catches list"
      end

      operation 14571532 "accept"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "visitor" type class_ref 3406092 // Visitor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Calls the appropriate method on the given visitor, depending on the
class of this instance. Subclasses must override this.

@param visitor {@code non-null;} the visitor to call on"
      end

      operation 14571660 "withAddedCatch"
	abstract public return_type class_ref 3405580 // Insn
	nparams 1
	  param inout name "type" type class_ref 3400844 // Type
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an instance that is just like this one, except that it
has a catch list with the given item appended to the end. This
method throws an exception if this instance can't possibly
throw. To determine whether this instruction can throw, use
{@link #canThrow}.

@param type {@code non-null;} type to append to the catch list
@return {@code non-null;} an appropriately-constructed instance"
      end

      operation 14571788 "withRegisterOffset"
	abstract public return_type class_ref 3405580 // Insn
	nparams 1
	  param in name "delta" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an instance that is just like this one, except that all
register references have been offset by the given delta.

@param delta the amount to offset register references by
@return {@code non-null;} an appropriately-constructed instance"
      end

      operation 14571916 "withLastSourceLiteral"
	public return_type class_ref 3405580 // Insn
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an instance that is just like this one, except that, if
possible, the insn is converted into a version in which the last
source (if it is a constant) is represented directly rather than
as a register reference. {@code this} is returned in cases where
the translation is not possible.

@return {@code non-null;} an appropriately-constructed instance"
      end

      operation 14572044 "copy"
	public return_type class_ref 3405580 // Insn
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an exact copy of this Insn

@return {@code non-null;} an appropriately-constructed instance"
      end

      operation 14572172 "equalsHandleNulls"
	class_operation private explicit_return_type "boolean"
	nparams 2
	  param inout name "a" type class_ref 3401484 // Object
	  param inout name "b" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares, handling nulls safely

@param a first object
@param b second object
@return true if they're equal or both null."
      end

      operation 14572300 "contentEquals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "b" type class_ref 3405580 // Insn
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares Insn contents, since {@code Insn.equals()} is defined
to be an identity compare. Insn's are {@code contentEquals()}
if they have the same opcode, registers, source position, and other
metadata.

@return true in the case described above"
      end

      operation 14572428 "withNewRegisters"
	abstract public return_type class_ref 3405580 // Insn
	nparams 2
	  param inout name "result" type class_ref 3399564 // RegisterSpec
	  param inout name "sources" type class_ref 3399308 // RegisterSpecList
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an instance that is just like this one, except
with new result and source registers.

@param result {@code null-ok;} new result register
@param sources {@code non-null;} new sources registers
@return {@code non-null;} an appropriately-constructed instance"
      end

      operation 14572556 "toStringWithInline"
	protected return_type class_ref 3399692 // String
	nparams 1
	  param inout name "extra" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the string form of this instance, with the given bit added in
the standard location for an inline argument.

@param extra {@code null-ok;} the inline argument string
@return {@code non-null;} the string form"
      end

      operation 14572684 "toHumanWithInline"
	protected return_type class_ref 3399692 // String
	nparams 1
	  param inout name "extra" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the human string form of this instance, with the given
bit added in the standard location for an inline argument.

@param extra {@code null-ok;} the inline argument string
@return {@code non-null;} the human string form"
      end

      class 3407116 "BaseVisitor"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 6479628 // <realization>
	  relation 6479500 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 6479628 // <realization>
	    b parent class_ref 3406092 // Visitor
	end

	operation 14573580 "visitPlainInsn"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "insn" type class_ref 3406348 // PlainInsn
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " {@inheritDoc} "
	end

	operation 14573708 "visitPlainCstInsn"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "insn" type class_ref 3406476 // PlainCstInsn
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " {@inheritDoc} "
	end

	operation 14573836 "visitSwitchInsn"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "insn" type class_ref 3406604 // SwitchInsn
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " {@inheritDoc} "
	end

	operation 14573964 "visitThrowingCstInsn"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "insn" type class_ref 3406732 // ThrowingCstInsn
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " {@inheritDoc} "
	end

	operation 14574092 "visitThrowingInsn"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "insn" type class_ref 3406860 // ThrowingInsn
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " {@inheritDoc} "
	end

	operation 14574220 "visitFillArrayDataInsn"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "insn" type class_ref 3406988 // FillArrayDataInsn
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " {@inheritDoc} "
	end
      end
    end

    class 3405836 "LocalVariableInfo"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Container for local variable information for a particular {@link
RopMethod}."
      classrelation 6519820 // <generalisation>
	relation 6519692 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6519820 // <generalisation>
	  b parent class_ref 3401228 // MutabilityControl
      end

      attribute 12474892 "regCount"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " {@code >= 0;} the register count for the method "
      end

      classrelation 6519948 // emptySet (<unidirectional association>)
	relation 6519820 --->
	  a role_name "emptySet" const_relation private
	    comment "
{@code non-null;} {@link RegisterSpecSet} to use when indicating a block
that has no locals; it is empty and immutable but has an appropriate
max size for the method

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6519948 // emptySet (<unidirectional association>)
	  b parent class_ref 3404556 // RegisterSpecSet
      end

      classrelation 6520076 // blockStarts (<unidirectional association>)
	relation 6519948 --->
	  a role_name "blockStarts" multiplicity "[]" const_relation private
	    comment "
{@code non-null;} array consisting of register sets representing the
sets of variables already assigned upon entry to each block,
where array indices correspond to block labels

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 6520076 // blockStarts (<unidirectional association>)
	  b parent class_ref 3404556 // RegisterSpecSet
      end

      classrelation 6520204 // insnAssignments (<unidirectional association>)
	relation 6520076 --->
	  stereotype "HashMap"
	  a role_name "insnAssignments" const_relation private
	    comment " {@code non-null;} map from instructions to the variable each assigns "
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}, RegisterSpec> ${name}${value};
"
	    classrelation_ref 6520204 // insnAssignments (<unidirectional association>)
	  b parent class_ref 3405580 // Insn
      end

      operation 14693260 "LocalVariableInfo"
	public explicit_return_type ""
	nparams 1
	  param inout name "method" type class_ref 3400332 // RopMethod
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance.

@param method {@code non-null;} the method being represented by this instance"
      end

      operation 14693388 "setStarts"
	public explicit_return_type "void"
	nparams 2
	  param in name "label" explicit_type "int"
	  param inout name "specs" type class_ref 3404556 // RegisterSpecSet
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the register set associated with the start of the block with
the given label.

@param label {@code >= 0;} the block label
@param specs {@code non-null;} the register set to associate with the block"
      end

      operation 14693516 "mergeStarts"
	public explicit_return_type "boolean"
	nparams 2
	  param in name "label" explicit_type "int"
	  param inout name "specs" type class_ref 3404556 // RegisterSpecSet
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Merges the given register set into the set for the block with the
given label. If there was not already an associated set, then this
is the same as calling {@link #setStarts}. Otherwise, this will
merge the two sets and call {@link #setStarts} on the result of the
merge.

@param label {@code >= 0;} the block label
@param specs {@code non-null;} the register set to merge into the start set
for the block
@return {@code true} if the merge resulted in an actual change
to the associated set (including storing one for the first time) or
{@code false} if there was no change"
      end

      operation 14693644 "getStarts"
	public return_type class_ref 3404556 // RegisterSpecSet
	nparams 1
	  param in name "label" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the register set associated with the start of the block
with the given label. This returns an empty set with the appropriate
max size if no set was associated with the block in question.

@param label {@code >= 0;} the block label
@return {@code non-null;} the associated register set"
      end

      operation 14693772 "getStarts"
	public return_type class_ref 3404556 // RegisterSpecSet
	nparams 1
	  param inout name "block" type class_ref 3400460 // BasicBlock
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the register set associated with the start of the given
block. This is just convenient shorthand for
{@code getStarts(block.getLabel())}.

@param block {@code non-null;} the block in question
@return {@code non-null;} the associated register set"
      end

      operation 14693900 "mutableCopyOfStarts"
	public return_type class_ref 3404556 // RegisterSpecSet
	nparams 1
	  param in name "label" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets a mutable copy of the register set associated with the
start of the block with the given label. This returns a
newly-allocated empty {@link RegisterSpecSet} of appropriate
max size if there is not yet any set associated with the block.

@param label {@code >= 0;} the block label
@return {@code non-null;} the associated register set"
      end

      operation 14694028 "addAssignment"
	public explicit_return_type "void"
	nparams 2
	  param inout name "insn" type class_ref 3405580 // Insn
	  param inout name "spec" type class_ref 3399564 // RegisterSpec
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds an assignment association for the given instruction and
register spec. This throws an exception if the instruction
doesn't actually perform a named variable assignment.

<b>Note:</b> Although the instruction contains its own spec for
the result, it still needs to be passed in explicitly to this
method, since the spec that is stored here should always have a
simple type and the one in the instruction can be an arbitrary
{@link TypeBearer} (such as a constant value).

@param insn {@code non-null;} the instruction in question
@param spec {@code non-null;} the associated register spec"
      end

      operation 14694156 "getAssignment"
	public return_type class_ref 3399564 // RegisterSpec
	nparams 1
	  param inout name "insn" type class_ref 3405580 // Insn
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the named register being assigned by the given instruction, if
previously stored in this instance.

@param insn {@code non-null;} instruction in question
@return {@code null-ok;} the named register being assigned, if any"
      end

      operation 14694284 "getAssignmentCount"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the number of assignments recorded by this instance.

@return {@code >= 0;} the number of assignments"
      end

      operation 14694412 "debugDump"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 14694540 "getStarts0"
	private return_type class_ref 3404556 // RegisterSpecSet
	nparams 1
	  param in name "label" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Helper method, to get the starts for a label, throwing the
right exception for range problems.

@param label {@code >= 0;} the block label
@return {@code null-ok;} associated register set or {@code null} if there
is none"
      end
    end

    class 3406348 "PlainInsn"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Plain instruction, which has no embedded data and which cannot possibly
throw an exception."
      classrelation 6520460 // <generalisation>
	relation 6520332 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6520460 // <generalisation>
	  b parent class_ref 3405580 // Insn
      end

      operation 14695436 "PlainInsn"
	public explicit_return_type ""
	nparams 4
	  param inout name "opcode" type class_ref 3405452 // Rop
	  param inout name "position" type class_ref 3399180 // SourcePosition
	  param inout name "result" type class_ref 3399564 // RegisterSpec
	  param inout name "sources" type class_ref 3399308 // RegisterSpecList
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance.

@param opcode {@code non-null;} the opcode
@param position {@code non-null;} source position
@param result {@code null-ok;} spec for the result, if any
@param sources {@code non-null;} specs for all the sources"
      end

      operation 14695564 "PlainInsn"
	public explicit_return_type ""
	nparams 4
	  param inout name "opcode" type class_ref 3405452 // Rop
	  param inout name "position" type class_ref 3399180 // SourcePosition
	  param inout name "result" type class_ref 3399564 // RegisterSpec
	  param inout name "source" type class_ref 3399564 // RegisterSpec
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a single-source instance.

@param opcode {@code non-null;} the opcode
@param position {@code non-null;} source position
@param result {@code null-ok;} spec for the result, if any
@param source {@code non-null;} spec for the source"
      end

      operation 14695692 "getCatches"
	public return_type class_ref 3406220 // TypeList
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14695820 "accept"
	public explicit_return_type "void"
	nparams 1
	  param inout name "visitor" type class_ref 3406092 // Visitor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14695948 "withAddedCatch"
	public return_type class_ref 3405580 // Insn
	nparams 1
	  param inout name "type" type class_ref 3400844 // Type
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14696076 "withRegisterOffset"
	public return_type class_ref 3405580 // Insn
	nparams 1
	  param in name "delta" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14696204 "withLastSourceLiteral"
	public return_type class_ref 3405580 // Insn
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14696332 "withNewRegisters"
	public return_type class_ref 3405580 // Insn
	nparams 2
	  param inout name "result" type class_ref 3399564 // RegisterSpec
	  param inout name "sources" type class_ref 3399308 // RegisterSpecList
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end
    end

    class 3406476 "PlainCstInsn"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Instruction which contains an explicit reference to a constant
but which cannot throw an exception."
      classrelation 6520332 // <generalisation>
	relation 6520204 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6520332 // <generalisation>
	  b parent class_ref 3423244 // CstInsn
      end

      operation 14694668 "PlainCstInsn"
	public explicit_return_type ""
	nparams 5
	  param inout name "opcode" type class_ref 3405452 // Rop
	  param inout name "position" type class_ref 3399180 // SourcePosition
	  param inout name "result" type class_ref 3399564 // RegisterSpec
	  param inout name "sources" type class_ref 3399308 // RegisterSpecList
	  param inout name "cst" type class_ref 3400076 // Constant
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance.

@param opcode {@code non-null;} the opcode
@param position {@code non-null;} source position
@param result {@code null-ok;} spec for the result, if any
@param sources {@code non-null;} specs for all the sources
@param cst {@code non-null;} the constant"
      end

      operation 14694796 "getCatches"
	public return_type class_ref 3406220 // TypeList
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14694924 "accept"
	public explicit_return_type "void"
	nparams 1
	  param inout name "visitor" type class_ref 3406092 // Visitor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14695052 "withAddedCatch"
	public return_type class_ref 3405580 // Insn
	nparams 1
	  param inout name "type" type class_ref 3400844 // Type
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14695180 "withRegisterOffset"
	public return_type class_ref 3405580 // Insn
	nparams 1
	  param in name "delta" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14695308 "withNewRegisters"
	public return_type class_ref 3405580 // Insn
	nparams 2
	  param inout name "result" type class_ref 3399564 // RegisterSpec
	  param inout name "sources" type class_ref 3399308 // RegisterSpecList
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end
    end

    class 3406604 "SwitchInsn"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Instruction which contains switch cases."
      classrelation 6550412 // <generalisation>
	relation 6550284 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6550412 // <generalisation>
	  b parent class_ref 3405580 // Insn
      end

      classrelation 6550540 // cases (<unidirectional association>)
	relation 6550412 --->
	  a role_name "cases" const_relation private
	    comment " {@code non-null;} list of switch cases 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6550540 // cases (<unidirectional association>)
	  b parent class_ref 3407628 // IntList
      end

      operation 14718092 "SwitchInsn"
	public explicit_return_type ""
	nparams 5
	  param inout name "opcode" type class_ref 3405452 // Rop
	  param inout name "position" type class_ref 3399180 // SourcePosition
	  param inout name "result" type class_ref 3399564 // RegisterSpec
	  param inout name "sources" type class_ref 3399308 // RegisterSpecList
	  param inout name "cases" type class_ref 3407628 // IntList
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance.

@param opcode {@code non-null;} the opcode
@param position {@code non-null;} source position
@param result {@code null-ok;} spec for the result, if any
@param sources {@code non-null;} specs for all the sources
@param cases {@code non-null;} list of switch cases"
      end

      operation 14718220 "getInlineString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14718348 "getCatches"
	public return_type class_ref 3406220 // TypeList
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14718476 "accept"
	public explicit_return_type "void"
	nparams 1
	  param inout name "visitor" type class_ref 3406092 // Visitor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14718604 "withAddedCatch"
	public return_type class_ref 3405580 // Insn
	nparams 1
	  param inout name "type" type class_ref 3400844 // Type
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14718732 "withRegisterOffset"
	public return_type class_ref 3405580 // Insn
	nparams 1
	  param in name "delta" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14718860 "contentEquals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "b" type class_ref 3405580 // Insn
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "{@inheritDoc}

<p> SwitchInsn always compares false. The current use for this method
never encounters {@code SwitchInsn}s"
      end

      operation 14718988 "withNewRegisters"
	public return_type class_ref 3405580 // Insn
	nparams 2
	  param inout name "result" type class_ref 3399564 // RegisterSpec
	  param inout name "sources" type class_ref 3399308 // RegisterSpecList
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14719116 "getCases"
	public return_type class_ref 3407628 // IntList
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the list of switch cases.

@return {@code non-null;} the case list"
      end
    end

    class 3406732 "ThrowingCstInsn"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Instruction which contains an explicit reference to a constant
and which might throw an exception."
      classrelation 6550668 // <generalisation>
	relation 6550540 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6550668 // <generalisation>
	  b parent class_ref 3423244 // CstInsn
      end

      classrelation 6550796 // catches (<unidirectional association>)
	relation 6550668 --->
	  a role_name "catches" const_relation private
	    comment " {@code non-null;} list of exceptions caught 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6550796 // catches (<unidirectional association>)
	  b parent class_ref 3406220 // TypeList
      end

      operation 14719244 "ThrowingCstInsn"
	public explicit_return_type ""
	nparams 5
	  param inout name "opcode" type class_ref 3405452 // Rop
	  param inout name "position" type class_ref 3399180 // SourcePosition
	  param inout name "sources" type class_ref 3399308 // RegisterSpecList
	  param inout name "catches" type class_ref 3406220 // TypeList
	  param inout name "cst" type class_ref 3400076 // Constant
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance.

@param opcode {@code non-null;} the opcode
@param position {@code non-null;} source position
@param sources {@code non-null;} specs for all the sources
@param catches {@code non-null;} list of exceptions caught
@param cst {@code non-null;} the constant"
      end

      operation 14719372 "getInlineString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14719500 "getCatches"
	public return_type class_ref 3406220 // TypeList
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14719628 "accept"
	public explicit_return_type "void"
	nparams 1
	  param inout name "visitor" type class_ref 3406092 // Visitor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14719756 "withAddedCatch"
	public return_type class_ref 3405580 // Insn
	nparams 1
	  param inout name "type" type class_ref 3400844 // Type
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14719884 "withRegisterOffset"
	public return_type class_ref 3405580 // Insn
	nparams 1
	  param in name "delta" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14720012 "withNewRegisters"
	public return_type class_ref 3405580 // Insn
	nparams 2
	  param inout name "result" type class_ref 3399564 // RegisterSpec
	  param inout name "sources" type class_ref 3399308 // RegisterSpecList
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end
    end

    class 3406860 "ThrowingInsn"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Instruction which possibly throws. The {@code successors} list in the
basic block an instance of this class is inside corresponds in-order to
the list of exceptions handled by this instruction, with the
no-exception case appended as the final target."
      classrelation 6550924 // <generalisation>
	relation 6550796 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6550924 // <generalisation>
	  b parent class_ref 3405580 // Insn
      end

      classrelation 6551052 // catches (<unidirectional association>)
	relation 6550924 --->
	  a role_name "catches" const_relation private
	    comment " {@code non-null;} list of exceptions caught 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6551052 // catches (<unidirectional association>)
	  b parent class_ref 3406220 // TypeList
      end

      operation 14720140 "toCatchString"
	class_operation public return_type class_ref 3399692 // String
	nparams 1
	  param inout name "catches" type class_ref 3406220 // TypeList
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the string form of a register spec list to be used as a catches
list.

@param catches {@code non-null;} the catches list
@return {@code non-null;} the string form"
      end

      operation 14720268 "ThrowingInsn"
	public explicit_return_type ""
	nparams 4
	  param inout name "opcode" type class_ref 3405452 // Rop
	  param inout name "position" type class_ref 3399180 // SourcePosition
	  param inout name "sources" type class_ref 3399308 // RegisterSpecList
	  param inout name "catches" type class_ref 3406220 // TypeList
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance.

@param opcode {@code non-null;} the opcode
@param position {@code non-null;} source position
@param sources {@code non-null;} specs for all the sources
@param catches {@code non-null;} list of exceptions caught"
      end

      operation 14720396 "getInlineString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14720524 "getCatches"
	public return_type class_ref 3406220 // TypeList
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14720652 "accept"
	public explicit_return_type "void"
	nparams 1
	  param inout name "visitor" type class_ref 3406092 // Visitor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14720780 "withAddedCatch"
	public return_type class_ref 3405580 // Insn
	nparams 1
	  param inout name "type" type class_ref 3400844 // Type
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14720908 "withRegisterOffset"
	public return_type class_ref 3405580 // Insn
	nparams 1
	  param in name "delta" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14721036 "withNewRegisters"
	public return_type class_ref 3405580 // Insn
	nparams 2
	  param inout name "result" type class_ref 3399564 // RegisterSpec
	  param inout name "sources" type class_ref 3399308 // RegisterSpecList
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end
    end

    class 3406988 "FillArrayDataInsn"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Instruction which fills a newly created array with a predefined list of
constant values."
      classrelation 6518540 // <generalisation>
	relation 6518412 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6518540 // <generalisation>
	  b parent class_ref 3405580 // Insn
      end

      classrelation 6518668 // initValues (<unidirectional association>)
	relation 6518540 --->
	  stereotype "ArrayList"
	  a role_name "initValues" const_relation private
	    comment " non-null: initial values to fill the newly created array "
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 6518668 // initValues (<unidirectional association>)
	  b parent class_ref 3400076 // Constant
      end

      classrelation 6518796 // arrayType (<unidirectional association>)
	relation 6518668 --->
	  a role_name "arrayType" const_relation private
	    comment "
non-null: type of the array. Will be used to determine the width of
elements in the array-data table.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6518796 // arrayType (<unidirectional association>)
	  b parent class_ref 3400076 // Constant
      end

      operation 14689676 "FillArrayDataInsn"
	public explicit_return_type ""
	nparams 5
	  param inout name "opcode" type class_ref 3405452 // Rop
	  param inout name "position" type class_ref 3399180 // SourcePosition
	  param inout name "sources" type class_ref 3399308 // RegisterSpecList
	  param inout name "initValues" explicit_type "ArrayList<Constant>"
	  param inout name "cst" type class_ref 3400076 // Constant
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance.

@param opcode {@code non-null;} the opcode
@param position {@code non-null;} source position
@param sources {@code non-null;} specs for all the sources
@param initValues {@code non-null;} list of initial values to fill the array
@param cst {@code non-null;} type of the new array"
      end

      operation 14689804 "getCatches"
	public return_type class_ref 3406220 // TypeList
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14689932 "getInitValues"
	public return_type class_ref 3400076 // Constant
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}ArrayList<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the list of init values
@return {@code non-null;} list of init values"
      end

      operation 14690060 "getConstant"
	public return_type class_ref 3400076 // Constant
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the type of the newly created array
@return {@code non-null;} array type"
      end

      operation 14690188 "accept"
	public explicit_return_type "void"
	nparams 1
	  param inout name "visitor" type class_ref 3406092 // Visitor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14690316 "withAddedCatch"
	public return_type class_ref 3405580 // Insn
	nparams 1
	  param inout name "type" type class_ref 3400844 // Type
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14690444 "withRegisterOffset"
	public return_type class_ref 3405580 // Insn
	nparams 1
	  param in name "delta" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14690572 "withNewRegisters"
	public return_type class_ref 3405580 // Insn
	nparams 2
	  param inout name "result" type class_ref 3399564 // RegisterSpec
	  param inout name "sources" type class_ref 3399308 // RegisterSpecList
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end
    end

    class 3422220 "AccessFlags"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Constants used as \"access flags\" in various places in classes, and
related utilities. Although, at the rop layer, flags are generally
ignored, this is the layer of communication, and as such, this
package is where these definitions belong. The flag definitions are
identical to Java access flags, but {@code ACC_SUPER} isn't
used at all in translated code, and {@code ACC_SYNCHRONIZED}
is only used in a very limited way."
      attribute 12470540 "ACC_PUBLIC"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0001"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " public member / class "
      end

      attribute 12470668 "ACC_PRIVATE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0002"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " private member "
      end

      attribute 12470796 "ACC_PROTECTED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0004"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " protected member "
      end

      attribute 12470924 "ACC_STATIC"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0008"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " static member "
      end

      attribute 12471052 "ACC_FINAL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0010"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " final member / class "
      end

      attribute 12471180 "ACC_SYNCHRONIZED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0020"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "synchronized method; only valid in dex files for {@code native}
methods
"
      end

      attribute 12471308 "ACC_SUPER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0020"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "class with new-style {@code invokespecial} for superclass
method access
"
      end

      attribute 12471436 "ACC_VOLATILE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0040"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " volatile field "
      end

      attribute 12471564 "ACC_BRIDGE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0040"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " bridge method (generated) "
      end

      attribute 12471692 "ACC_TRANSIENT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0080"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " transient field "
      end

      attribute 12471820 "ACC_VARARGS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0080"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " varargs method "
      end

      attribute 12471948 "ACC_NATIVE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0100"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " native method "
      end

      attribute 12472076 "ACC_INTERFACE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0200"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " \"class\" is in fact an public static final interface "
      end

      attribute 12472204 "ACC_ABSTRACT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0400"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " abstract method / class "
      end

      attribute 12472332 "ACC_STRICT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0800"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "method with strict floating point ({@code strictfp})
behavior
"
      end

      attribute 12472460 "ACC_SYNTHETIC"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x1000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " synthetic member "
      end

      attribute 12472588 "ACC_ANNOTATION"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x2000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " class is an annotation type "
      end

      attribute 12472716 "ACC_ENUM"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x4000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "class is an enumerated type; field is an element of an enumerated
type
"
      end

      attribute 12472844 "ACC_CONSTRUCTOR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x10000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " method is a constructor "
      end

      attribute 12472972 "ACC_DECLARED_SYNCHRONIZED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x20000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "method was declared {@code synchronized}; has no effect on
execution (other than inspecting this flag, per se)
"
      end

      attribute 12473100 "CLASS_FLAGS"
	class_attribute const_attribute public explicit_type "int"
	init_value "
        ACC_PUBLIC | ACC_FINAL | ACC_SUPER | ACC_INTERFACE | ACC_ABSTRACT |
        ACC_SYNTHETIC | ACC_ANNOTATION | ACC_ENUM"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " flags defined on classes "
      end

      attribute 12473228 "INNER_CLASS_FLAGS"
	class_attribute const_attribute public explicit_type "int"
	init_value "
        ACC_PUBLIC | ACC_PRIVATE | ACC_PROTECTED | ACC_STATIC | ACC_FINAL |
        ACC_INTERFACE | ACC_ABSTRACT | ACC_SYNTHETIC | ACC_ANNOTATION |
        ACC_ENUM"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " flags defined on inner classes "
      end

      attribute 12473356 "FIELD_FLAGS"
	class_attribute const_attribute public explicit_type "int"
	init_value "
        ACC_PUBLIC | ACC_PRIVATE | ACC_PROTECTED | ACC_STATIC | ACC_FINAL |
        ACC_VOLATILE | ACC_TRANSIENT | ACC_SYNTHETIC | ACC_ENUM"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " flags defined on fields "
      end

      attribute 12473484 "METHOD_FLAGS"
	class_attribute const_attribute public explicit_type "int"
	init_value "
        ACC_PUBLIC | ACC_PRIVATE | ACC_PROTECTED | ACC_STATIC | ACC_FINAL |
        ACC_SYNCHRONIZED | ACC_BRIDGE | ACC_VARARGS | ACC_NATIVE |
        ACC_ABSTRACT | ACC_STRICT | ACC_SYNTHETIC | ACC_CONSTRUCTOR |
        ACC_DECLARED_SYNCHRONIZED"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " flags defined on methods "
      end

      attribute 12473612 "CONV_CLASS"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " indicates conversion of class flags "
      end

      attribute 12473740 "CONV_FIELD"
	class_attribute const_attribute private explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " indicates conversion of field flags "
      end

      attribute 12473868 "CONV_METHOD"
	class_attribute const_attribute private explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " indicates conversion of method flags "
      end

      operation 14679308 "AccessFlags"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This class is uninstantiable."
      end

      operation 14679436 "classString"
	class_operation public return_type class_ref 3399692 // String
	nparams 1
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a human-oriented string representing the given access flags,
as defined on classes (not fields or methods).

@param flags the flags
@return {@code non-null;} human-oriented string"
      end

      operation 14679564 "innerClassString"
	class_operation public return_type class_ref 3399692 // String
	nparams 1
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a human-oriented string representing the given access flags,
as defined on inner classes.

@param flags the flags
@return {@code non-null;} human-oriented string"
      end

      operation 14679692 "fieldString"
	class_operation public return_type class_ref 3399692 // String
	nparams 1
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a human-oriented string representing the given access flags,
as defined on fields (not classes or methods).

@param flags the flags
@return {@code non-null;} human-oriented string"
      end

      operation 14679820 "methodString"
	class_operation public return_type class_ref 3399692 // String
	nparams 1
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a human-oriented string representing the given access flags,
as defined on methods (not classes or fields).

@param flags the flags
@return {@code non-null;} human-oriented string"
      end

      operation 14679948 "isPublic"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the flag {@code ACC_PUBLIC} is on in the given
flags.

@param flags the flags to check
@return the value of the {@code ACC_PUBLIC} flag"
      end

      operation 14680076 "isProtected"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the flag {@code ACC_PROTECTED} is on in the given
flags.

@param flags the flags to check
@return the value of the {@code ACC_PROTECTED} flag"
      end

      operation 14680204 "isPrivate"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the flag {@code ACC_PRIVATE} is on in the given
flags.

@param flags the flags to check
@return the value of the {@code ACC_PRIVATE} flag"
      end

      operation 14680332 "isStatic"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the flag {@code ACC_STATIC} is on in the given
flags.

@param flags the flags to check
@return the value of the {@code ACC_STATIC} flag"
      end

      operation 14680460 "isSynchronized"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the flag {@code ACC_SYNCHRONIZED} is on in
the given flags.

@param flags the flags to check
@return the value of the {@code ACC_SYNCHRONIZED} flag"
      end

      operation 14680588 "isAbstract"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the flag {@code ACC_ABSTRACT} is on in the given
flags.

@param flags the flags to check
@return the value of the {@code ACC_ABSTRACT} flag"
      end

      operation 14680716 "isNative"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the flag {@code ACC_NATIVE} is on in the given
flags.

@param flags the flags to check
@return the value of the {@code ACC_NATIVE} flag"
      end

      operation 14680844 "isAnnotation"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the flag {@code ACC_ANNOTATION} is on in the given
flags.

@param flags the flags to check
@return the value of the {@code ACC_ANNOTATION} flag"
      end

      operation 14680972 "isDeclaredSynchronized"
	class_operation public explicit_return_type "boolean"
	nparams 1
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether the flag {@code ACC_DECLARED_SYNCHRONIZED} is
on in the given flags.

@param flags the flags to check
@return the value of the {@code ACC_DECLARED_SYNCHRONIZED} flag"
      end

      operation 14681100 "humanHelper"
	class_operation private return_type class_ref 3399692 // String
	nparams 3
	  param in name "flags" explicit_type "int"
	  param in name "mask" explicit_type "int"
	  param in name "what" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Helper to return a human-oriented string representing the given
access flags.

@param flags the defined flags
@param mask mask for the \"defined\" bits
@param what what the flags represent (one of {@code CONV_*})
@return {@code non-null;} human-oriented string"
      end
    end

    class 3422348 "InsnList"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "List of {@link Insn} instances."
      classrelation 6518924 // <generalisation>
	relation 6518796 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6518924 // <generalisation>
	  b parent class_ref 3401100 // FixedSizeList
      end

      operation 14690700 "InsnList"
	public explicit_return_type ""
	nparams 1
	  param in name "size" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance. All indices initially contain {@code null}.

@param size the size of the list"
      end

      operation 14690828 "get"
	public return_type class_ref 3405580 // Insn
	nparams 1
	  param in name "n" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the element at the given index. It is an error to call
this with the index for an element which was never set; if you
do that, this will throw {@code NullPointerException}.

@param n {@code >= 0, < size();} which index
@return {@code non-null;} element at that index"
      end

      operation 14690956 "set"
	public explicit_return_type "void"
	nparams 2
	  param in name "n" explicit_type "int"
	  param inout name "insn" type class_ref 3405580 // Insn
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the instruction at the given index.

@param n {@code >= 0, < size();} which index
@param insn {@code non-null;} the instruction to set at {@code n}"
      end

      operation 14691084 "getLast"
	public return_type class_ref 3405580 // Insn
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the last instruction. This is just a convenient shorthand for
{@code get(size() - 1)}.

@return {@code non-null;} the last instruction"
      end

      operation 14691212 "forEach"
	public explicit_return_type "void"
	nparams 1
	  param inout name "visitor" type class_ref 3406092 // Visitor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Visits each instruction in the list, in order.

@param visitor {@code non-null;} visitor to use"
      end

      operation 14691340 "contentEquals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "b" type class_ref 3422348 // InsnList
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares the contents of this {@code InsnList} with another.
The blocks must have the same number of insns, and each Insn must
also return true to {@code Insn.contentEquals()}.

@param b to compare
@return true in the case described above."
      end

      operation 14691468 "withRegisterOffset"
	public return_type class_ref 3422348 // InsnList
	nparams 1
	  param in name "delta" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an instance that is identical to this one, except that
the registers in each instruction are offset by the given
amount. Mutability of the result is inherited from the
original.

@param delta the amount to offset register numbers by
@return {@code non-null;} an appropriately-constructed instance"
      end
    end

    class 3422604 "BasicBlockList"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "List of {@link BasicBlock} instances."
      classrelation 6515340 // <generalisation>
	relation 6515212 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6515340 // <generalisation>
	  b parent class_ref 3422732 // LabeledList
      end

      attribute 12474252 "regCount"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "{@code >= -1;} the count of registers required by this method or
{@code -1} if not yet calculated
"
      end

      operation 14684428 "BasicBlockList"
	public explicit_return_type ""
	nparams 1
	  param in name "size" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance. All indices initially contain {@code null},
and the first-block label is initially {@code -1}.

@param size the size of the list"
      end

      operation 14684556 "BasicBlockList"
	private explicit_return_type ""
	nparams 1
	  param inout name "old" type class_ref 3422604 // BasicBlockList
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs a mutable copy for {@code getMutableCopy()}.

@param old block to copy"
      end

      operation 14684684 "get"
	public return_type class_ref 3400460 // BasicBlock
	nparams 1
	  param in name "n" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the element at the given index. It is an error to call
this with the index for an element which was never set; if you
do that, this will throw {@code NullPointerException}.

@param n {@code >= 0, < size();} which index
@return {@code non-null;} element at that index"
      end

      operation 14684812 "set"
	public explicit_return_type "void"
	nparams 2
	  param in name "n" explicit_type "int"
	  param inout name "bb" type class_ref 3400460 // BasicBlock
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the basic block at the given index.

@param n {@code >= 0, < size();} which index
@param bb {@code null-ok;} the element to set at {@code n}"
      end

      operation 14684940 "getRegCount"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns how many registers this method requires. This is simply
the maximum of register-number-plus-category referred to by this
instance's instructions (indirectly through {@link BasicBlock}
instances).

@return {@code >= 0;} the register count"
      end

      operation 14685068 "getInstructionCount"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the total instruction count for this instance. This is the
sum of the instruction counts of each block.

@return {@code >= 0;} the total instruction count"
      end

      operation 14685196 "getEffectiveInstructionCount"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the total instruction count for this instance, ignoring
mark-local instructions which are not actually emitted.

@return {@code >= 0;} the total instruction count"
      end

      operation 14685324 "labelToBlock"
	public return_type class_ref 3400460 // BasicBlock
	nparams 1
	  param in name "label" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the first block in the list with the given label, if any.

@param label {@code >= 0;} the label to look for
@return {@code non-null;} the so-labelled block
@throws IllegalArgumentException thrown if the label isn't found"
      end

      operation 14685452 "forEachInsn"
	public explicit_return_type "void"
	nparams 1
	  param inout name "visitor" type class_ref 3406092 // Visitor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Visits each instruction of each block in the list, in order.

@param visitor {@code non-null;} visitor to use"
      end

      operation 14685580 "withRegisterOffset"
	public return_type class_ref 3422604 // BasicBlockList
	nparams 1
	  param in name "delta" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an instance that is identical to this one, except that
the registers in each instruction are offset by the given
amount. Mutability of the result is inherited from the
original.

@param delta the amount to offset register numbers by
@return {@code non-null;} an appropriately-constructed instance"
      end

      operation 14685708 "getMutableCopy"
	public return_type class_ref 3422604 // BasicBlockList
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a mutable copy of this list.

@return {@code non-null;} an appropriately-constructed instance"
      end

      operation 14685836 "preferredSuccessorOf"
	public return_type class_ref 3400460 // BasicBlock
	nparams 1
	  param inout name "block" type class_ref 3400460 // BasicBlock
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the preferred successor for the given block. If the block
only has one successor, then that is the preferred successor.
Otherwise, if the block has a primay successor, then that is
the preferred successor. If the block has no successors, then
this returns {@code null}.

@param block {@code non-null;} the block in question
@return {@code null-ok;} the preferred successor, if any"
      end

      operation 14685964 "catchesEqual"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "block1" type class_ref 3400460 // BasicBlock
	  param inout name "block2" type class_ref 3400460 // BasicBlock
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares the catches of two blocks for equality. This includes
both the catch types and target labels.

@param block1 {@code non-null;} one block to compare
@param block2 {@code non-null;} the other block to compare
@return {@code true} if the two blocks' non-primary successors
are identical"
      end

      class 3422860 "RegCountVisitor"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 6515468 // <realization>
	  relation 6515340 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 6515468 // <realization>
	    b parent class_ref 3406092 // Visitor
	end

	attribute 12474380 "regCount"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " {@code >= 0;} register count in-progress "
	end

	operation 14686092 "RegCountVisitor"
	  public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Constructs an instance."
	end

	operation 14686220 "getRegCount"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Gets the register count.

@return {@code >= 0;} the count"
	end

	operation 14686348 "visitPlainInsn"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "insn" type class_ref 3406348 // PlainInsn
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " {@inheritDoc} "
	end

	operation 14686476 "visitPlainCstInsn"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "insn" type class_ref 3406476 // PlainCstInsn
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " {@inheritDoc} "
	end

	operation 14686604 "visitSwitchInsn"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "insn" type class_ref 3406604 // SwitchInsn
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " {@inheritDoc} "
	end

	operation 14686732 "visitThrowingCstInsn"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "insn" type class_ref 3406732 // ThrowingCstInsn
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " {@inheritDoc} "
	end

	operation 14686860 "visitThrowingInsn"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "insn" type class_ref 3406860 // ThrowingInsn
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " {@inheritDoc} "
	end

	operation 14686988 "visitFillArrayDataInsn"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "insn" type class_ref 3406988 // FillArrayDataInsn
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " {@inheritDoc} "
	end

	operation 14687116 "visit"
	  private explicit_return_type "void"
	  nparams 1
	    param inout name "insn" type class_ref 3405580 // Insn
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Helper for all the {@code visit*} methods.

@param insn {@code non-null;} instruction being visited"
	end

	operation 14687244 "processReg"
	  private explicit_return_type "void"
	  nparams 1
	    param inout name "spec" type class_ref 3399564 // RegisterSpec
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Processes the given register spec.

@param spec {@code non-null;} the register spec"
	end
      end
    end

    class 3422988 "ConservativeTranslationAdvice"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Implementation of {@link TranslationAdvice} which conservatively answers
{@code false} to all methods."
      classrelation 6515596 // <realization>
	relation 6515468 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6515596 // <realization>
	  b parent class_ref 3423116 // TranslationAdvice
      end

      classrelation 6515724 // THE_ONE (<unidirectional association>)
	relation 6515596 --->
	  a role_name "THE_ONE" init_value "
        new ConservativeTranslationAdvice()" class_relation const_relation public
	    comment " {@code non-null;} standard instance of this class 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6515724 // THE_ONE (<unidirectional association>)
	  b parent class_ref 3422988 // ConservativeTranslationAdvice
      end

      operation 14687756 "ConservativeTranslationAdvice"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This class is not publicly instantiable. Use {@link #THE_ONE}."
      end

      operation 14687884 "hasConstantOperation"
	public explicit_return_type "boolean"
	nparams 3
	  param inout name "opcode" type class_ref 3405452 // Rop
	  param inout name "sourceA" type class_ref 3399564 // RegisterSpec
	  param inout name "sourceB" type class_ref 3399564 // RegisterSpec
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14688012 "requiresSourcesInOrder"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "opcode" type class_ref 3405452 // Rop
	  param inout name "sources" type class_ref 3399308 // RegisterSpecList
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14688140 "getMaxOptimalRegisterCount"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end
    end

    class 3423116 "TranslationAdvice"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Interface for \"advice\" passed from the late stage of translation back
to the early stage. This allows for the final target architecture to
exert its influence early in the translation process without having
the early stage code be explicitly tied to the target."
      operation 14687372 "hasConstantOperation"
	public explicit_return_type "boolean"
	nparams 3
	  param inout name "opcode" type class_ref 3405452 // Rop
	  param inout name "sourceA" type class_ref 3399564 // RegisterSpec
	  param inout name "sourceB" type class_ref 3399564 // RegisterSpec
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an indication of whether the target can directly represent an
instruction with the given opcode operating on the given arguments,
where the last source argument is used as a constant. (That is, the
last argument must have a type which indicates it is a known constant.)
The instruction associated must have exactly two sources.

@param opcode {@code non-null;} the opcode
@param sourceA {@code non-null;} the first source
@param sourceB {@code non-null;} the second source
@return {@code true} iff the target can represent the operation
using a constant for the last argument"
      end

      operation 14687500 "requiresSourcesInOrder"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "opcode" type class_ref 3405452 // Rop
	  param inout name "sources" type class_ref 3399308 // RegisterSpecList
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the translation target requires the sources of the
specified opcode to be in order and contiguous (eg, for an invoke-range)

@param opcode {@code non-null;} opcode
@param sources {@code non-null;} source list
@return {@code true} iff the target requires the sources to be
in order and contiguous."
      end

      operation 14687628 "getMaxOptimalRegisterCount"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the maximum register width that can be represented optimally.
For example, Dex bytecode does not have instruction forms that take
register numbers larger than 15 for all instructions so
DexTranslationAdvice returns 15 here.

@return register count noted above"
      end
    end

    class 3423244 "CstInsn"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Instruction which contains an explicit reference to a constant."
      classrelation 6515852 // <generalisation>
	relation 6515724 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6515852 // <generalisation>
	  b parent class_ref 3405580 // Insn
      end

      classrelation 6515980 // cst (<unidirectional association>)
	relation 6515852 --->
	  a role_name "cst" const_relation private
	    comment " {@code non-null;} the constant 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6515980 // cst (<unidirectional association>)
	  b parent class_ref 3400076 // Constant
      end

      operation 14688268 "CstInsn"
	public explicit_return_type ""
	nparams 5
	  param inout name "opcode" type class_ref 3405452 // Rop
	  param inout name "position" type class_ref 3399180 // SourcePosition
	  param inout name "result" type class_ref 3399564 // RegisterSpec
	  param inout name "sources" type class_ref 3399308 // RegisterSpecList
	  param inout name "cst" type class_ref 3400076 // Constant
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance.

@param opcode {@code non-null;} the opcode
@param position {@code non-null;} source position
@param result {@code null-ok;} spec for the result, if any
@param sources {@code non-null;} specs for all the sources
@param cst {@code non-null;} constant"
      end

      operation 14688396 "getInlineString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14688524 "getConstant"
	public return_type class_ref 3400076 // Constant
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the constant.

@return {@code non-null;} the constant"
      end

      operation 14688652 "contentEquals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "b" type class_ref 3405580 // Insn
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end
    end

    class 3423372 "DexTranslationAdvice"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Implementation of {@link TranslationAdvice} which represents what
the dex format will be able to represent."
      classrelation 6516108 // <realization>
	relation 6515980 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 6516108 // <realization>
	  b parent class_ref 3423116 // TranslationAdvice
      end

      classrelation 6516236 // THE_ONE (<unidirectional association>)
	relation 6516108 --->
	  a role_name "THE_ONE" init_value "
        new DexTranslationAdvice()" class_relation const_relation public
	    comment " {@code non-null;} standard instance of this class 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6516236 // THE_ONE (<unidirectional association>)
	  b parent class_ref 3423372 // DexTranslationAdvice
      end

      classrelation 6516364 // NO_SOURCES_IN_ORDER (<unidirectional association>)
	relation 6516236 --->
	  a role_name "NO_SOURCES_IN_ORDER" init_value "
        new DexTranslationAdvice(true)" class_relation const_relation public
	    comment " debug advice for disabling invoke-range optimization 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6516364 // NO_SOURCES_IN_ORDER (<unidirectional association>)
	  b parent class_ref 3423372 // DexTranslationAdvice
      end

      attribute 12474508 "MIN_INVOKE_IN_ORDER"
	class_attribute const_attribute private explicit_type "int"
	init_value " 6"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The minimum source width, in register units, for an invoke
instruction that requires its sources to be in order and contiguous.
"
      end

      attribute 12474636 "disableSourcesInOrder"
	const_attribute private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " when true: always returns false for requiresSourcesInOrder "
      end

      operation 14688780 "DexTranslationAdvice"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This class is not publicly instantiable. Use {@link #THE_ONE}."
      end

      operation 14688908 "DexTranslationAdvice"
	private explicit_return_type ""
	nparams 1
	  param inout name "disableInvokeRange" explicit_type "boolean"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 14689036 "hasConstantOperation"
	public explicit_return_type "boolean"
	nparams 3
	  param inout name "opcode" type class_ref 3405452 // Rop
	  param inout name "sourceA" type class_ref 3399564 // RegisterSpec
	  param inout name "sourceB" type class_ref 3399564 // RegisterSpec
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14689164 "requiresSourcesInOrder"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "opcode" type class_ref 3405452 // Rop
	  param inout name "sources" type class_ref 3399308 // RegisterSpecList
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14689292 "totalRopWidth"
	private explicit_return_type "int"
	nparams 1
	  param inout name "sources" type class_ref 3399308 // RegisterSpecList
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Calculates the total rop width of the list of SSA registers

@param sources {@code non-null;} list of SSA registers
@return {@code >= 0;} rop-form width in register units"
      end

      operation 14689420 "getMaxOptimalRegisterCount"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end
    end

    class 3423500 "Exceptions"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Common exception types."
      classrelation 6516492 // TYPE_ArithmeticException (<unidirectional association>)
	relation 6516364 --->
	  a role_name "TYPE_ArithmeticException" init_value "
        Type.intern(\"Ljava/lang/ArithmeticException;\")" class_relation const_relation public
	    comment " {@code non-null;} the type {@code java.lang.ArithmeticException} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6516492 // TYPE_ArithmeticException (<unidirectional association>)
	  b parent class_ref 3400844 // Type
      end

      classrelation 6516620 // TYPE_ArrayIndexOutOfBoundsException (<unidirectional association>)
	relation 6516492 --->
	  a role_name "TYPE_ArrayIndexOutOfBoundsException" init_value "
        Type.intern(\"Ljava/lang/ArrayIndexOutOfBoundsException;\")" class_relation const_relation public
	    comment "
{@code non-null;} the type
{@code java.lang.ArrayIndexOutOfBoundsException}

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6516620 // TYPE_ArrayIndexOutOfBoundsException (<unidirectional association>)
	  b parent class_ref 3400844 // Type
      end

      classrelation 6516748 // TYPE_ArrayStoreException (<unidirectional association>)
	relation 6516620 --->
	  a role_name "TYPE_ArrayStoreException" init_value "
        Type.intern(\"Ljava/lang/ArrayStoreException;\")" class_relation const_relation public
	    comment " {@code non-null;} the type {@code java.lang.ArrayStoreException} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6516748 // TYPE_ArrayStoreException (<unidirectional association>)
	  b parent class_ref 3400844 // Type
      end

      classrelation 6516876 // TYPE_ClassCastException (<unidirectional association>)
	relation 6516748 --->
	  a role_name "TYPE_ClassCastException" init_value "
        Type.intern(\"Ljava/lang/ClassCastException;\")" class_relation const_relation public
	    comment " {@code non-null;} the type {@code java.lang.ClassCastException} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6516876 // TYPE_ClassCastException (<unidirectional association>)
	  b parent class_ref 3400844 // Type
      end

      classrelation 6517004 // TYPE_Error (<unidirectional association>)
	relation 6516876 --->
	  a role_name "TYPE_Error" init_value " Type.intern(\"Ljava/lang/Error;\")" class_relation const_relation public
	    comment " {@code non-null;} the type {@code java.lang.Error} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6517004 // TYPE_Error (<unidirectional association>)
	  b parent class_ref 3400844 // Type
      end

      classrelation 6517132 // TYPE_IllegalMonitorStateException (<unidirectional association>)
	relation 6517004 --->
	  a role_name "TYPE_IllegalMonitorStateException" init_value "
        Type.intern(\"Ljava/lang/IllegalMonitorStateException;\")" class_relation const_relation public
	    comment "
{@code non-null;} the type
{@code java.lang.IllegalMonitorStateException}

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6517132 // TYPE_IllegalMonitorStateException (<unidirectional association>)
	  b parent class_ref 3400844 // Type
      end

      classrelation 6517260 // TYPE_NegativeArraySizeException (<unidirectional association>)
	relation 6517132 --->
	  a role_name "TYPE_NegativeArraySizeException" init_value "
        Type.intern(\"Ljava/lang/NegativeArraySizeException;\")" class_relation const_relation public
	    comment " {@code non-null;} the type {@code java.lang.NegativeArraySizeException} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6517260 // TYPE_NegativeArraySizeException (<unidirectional association>)
	  b parent class_ref 3400844 // Type
      end

      classrelation 6517388 // TYPE_NullPointerException (<unidirectional association>)
	relation 6517260 --->
	  a role_name "TYPE_NullPointerException" init_value "
        Type.intern(\"Ljava/lang/NullPointerException;\")" class_relation const_relation public
	    comment " {@code non-null;} the type {@code java.lang.NullPointerException} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6517388 // TYPE_NullPointerException (<unidirectional association>)
	  b parent class_ref 3400844 // Type
      end

      classrelation 6517516 // LIST_Error (<unidirectional association>)
	relation 6517388 --->
	  a role_name "LIST_Error" init_value " StdTypeList.make(TYPE_Error)" class_relation const_relation public
	    comment " {@code non-null;} the list {@code [java.lang.Error]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6517516 // LIST_Error (<unidirectional association>)
	  b parent class_ref 3423628 // StdTypeList
      end

      classrelation 6517644 // LIST_Error_ArithmeticException (<unidirectional association>)
	relation 6517516 --->
	  a role_name "LIST_Error_ArithmeticException" init_value "
        StdTypeList.make(TYPE_Error, TYPE_ArithmeticException)" class_relation const_relation public
	    comment "
{@code non-null;} the list {@code[java.lang.Error,
java.lang.ArithmeticException]}

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6517644 // LIST_Error_ArithmeticException (<unidirectional association>)
	  b parent class_ref 3423628 // StdTypeList
      end

      classrelation 6517772 // LIST_Error_ClassCastException (<unidirectional association>)
	relation 6517644 --->
	  a role_name "LIST_Error_ClassCastException" init_value "
        StdTypeList.make(TYPE_Error, TYPE_ClassCastException)" class_relation const_relation public
	    comment "
{@code non-null;} the list {@code[java.lang.Error,
java.lang.ClassCastException]}

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6517772 // LIST_Error_ClassCastException (<unidirectional association>)
	  b parent class_ref 3423628 // StdTypeList
      end

      classrelation 6517900 // LIST_Error_NegativeArraySizeException (<unidirectional association>)
	relation 6517772 --->
	  a role_name "LIST_Error_NegativeArraySizeException" init_value "
        StdTypeList.make(TYPE_Error, TYPE_NegativeArraySizeException)" class_relation const_relation public
	    comment "
{@code non-null;} the list {@code [java.lang.Error,
java.lang.NegativeArraySizeException]}

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6517900 // LIST_Error_NegativeArraySizeException (<unidirectional association>)
	  b parent class_ref 3423628 // StdTypeList
      end

      classrelation 6518028 // LIST_Error_NullPointerException (<unidirectional association>)
	relation 6517900 --->
	  a role_name "LIST_Error_NullPointerException" init_value "
        StdTypeList.make(TYPE_Error, TYPE_NullPointerException)" class_relation const_relation public
	    comment "
{@code non-null;} the list {@code [java.lang.Error,
java.lang.NullPointerException]}

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6518028 // LIST_Error_NullPointerException (<unidirectional association>)
	  b parent class_ref 3423628 // StdTypeList
      end

      classrelation 6518156 // LIST_Error_Null_ArrayIndexOutOfBounds (<unidirectional association>)
	relation 6518028 --->
	  a role_name "LIST_Error_Null_ArrayIndexOutOfBounds" init_value "
        StdTypeList.make(TYPE_Error,
                      TYPE_NullPointerException,
                      TYPE_ArrayIndexOutOfBoundsException)" class_relation const_relation public
	    comment "
{@code non-null;} the list {@code [java.lang.Error,
java.lang.NullPointerException,
java.lang.ArrayIndexOutOfBoundsException]}

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6518156 // LIST_Error_Null_ArrayIndexOutOfBounds (<unidirectional association>)
	  b parent class_ref 3423628 // StdTypeList
      end

      classrelation 6518284 // LIST_Error_Null_ArrayIndex_ArrayStore (<unidirectional association>)
	relation 6518156 --->
	  a role_name "LIST_Error_Null_ArrayIndex_ArrayStore" init_value "
        StdTypeList.make(TYPE_Error,
                      TYPE_NullPointerException,
                      TYPE_ArrayIndexOutOfBoundsException,
                      TYPE_ArrayStoreException)" class_relation const_relation public
	    comment "
{@code non-null;} the list {@code [java.lang.Error,
java.lang.NullPointerException,
java.lang.ArrayIndexOutOfBoundsException,
java.lang.ArrayStoreException]}

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6518284 // LIST_Error_Null_ArrayIndex_ArrayStore (<unidirectional association>)
	  b parent class_ref 3423628 // StdTypeList
      end

      classrelation 6518412 // LIST_Error_Null_IllegalMonitorStateException (<unidirectional association>)
	relation 6518284 --->
	  a role_name "LIST_Error_Null_IllegalMonitorStateException" init_value "
        StdTypeList.make(TYPE_Error,
                      TYPE_NullPointerException,
                      TYPE_IllegalMonitorStateException)" class_relation const_relation public
	    comment "
{@code non-null;} the list {@code [java.lang.Error,
java.lang.NullPointerException,
java.lang.IllegalMonitorStateException]}

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6518412 // LIST_Error_Null_IllegalMonitorStateException (<unidirectional association>)
	  b parent class_ref 3423628 // StdTypeList
      end

      operation 14689548 "Exceptions"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This class is uninstantiable."
      end
    end

    class 3423756 "LocalItem"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A local variable item: either a name or a signature or both."
      classrelation 6519052 // <realization>
	relation 6518924 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}<LocalItem>"
	    classrelation_ref 6519052 // <realization>
	  b parent class_ref 3077132 // Comparable
      end

      classrelation 6519180 // name (<unidirectional association>)
	relation 6519052 --->
	  a role_name "name" const_relation private
	    comment " {@code null-ok;} local variable name 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6519180 // name (<unidirectional association>)
	  b parent class_ref 3404300 // CstUtf8
      end

      classrelation 6519308 // signature (<unidirectional association>)
	relation 6519180 --->
	  a role_name "signature" const_relation private
	    comment " {@code null-ok;} local variable signature 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6519308 // signature (<unidirectional association>)
	  b parent class_ref 3404300 // CstUtf8
      end

      operation 14691596 "make"
	class_operation public return_type class_ref 3423756 // LocalItem
	nparams 2
	  param inout name "name" type class_ref 3404300 // CstUtf8
	  param inout name "signature" type class_ref 3404300 // CstUtf8
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Make a new item. If both name and signature are null, null is returned.

TODO: intern these

@param name {@code null-ok;} local variable name
@param signature {@code null-ok;} local variable signature
@return {@code non-null;} appropriate instance."
      end

      operation 14691724 "LocalItem"
	private explicit_return_type ""
	nparams 2
	  param inout name "name" type class_ref 3404300 // CstUtf8
	  param inout name "signature" type class_ref 3404300 // CstUtf8
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs instance.

@param name {@code null-ok;} local variable name
@param signature {@code null-ok;} local variable signature"
      end

      operation 14691852 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "other" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14691980 "compareHandlesNulls"
	class_operation private explicit_return_type "int"
	nparams 2
	  param inout name "a" type class_ref 3404300 // CstUtf8
	  param inout name "b" type class_ref 3404300 // CstUtf8
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Compares two strings like String.compareTo(), excepts treats a null
as the least-possible string value.

@return negative integer, zero, or positive integer in accordance
with Comparable.compareTo()"
      end

      operation 14692108 "compareTo"
	public explicit_return_type "int"
	nparams 1
	  param inout name "local" type class_ref 3423756 // LocalItem
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14692236 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14692364 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " {@inheritDoc} "
      end

      operation 14692492 "getName"
	public return_type class_ref 3404300 // CstUtf8
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets name.

@return {@code null-ok;} name"
      end

      operation 14692620 "getSignature"
	public return_type class_ref 3404300 // CstUtf8
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets signature.

@return {@code null-ok;} signature"
      end
    end

    class 3423884 "LocalVariableExtractor"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Code to figure out which local variables are active at which points in
a method."
      classrelation 6519436 // method (<unidirectional association>)
	relation 6519308 --->
	  a role_name "method" const_relation private
	    comment " {@code non-null;} method being extracted from 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6519436 // method (<unidirectional association>)
	  b parent class_ref 3400332 // RopMethod
      end

      classrelation 6519564 // blocks (<unidirectional association>)
	relation 6519436 --->
	  a role_name "blocks" const_relation private
	    comment " {@code non-null;} block list for the method 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6519564 // blocks (<unidirectional association>)
	  b parent class_ref 3422604 // BasicBlockList
      end

      classrelation 6519692 // resultInfo (<unidirectional association>)
	relation 6519564 --->
	  a role_name "resultInfo" const_relation private
	    comment " {@code non-null;} result in-progress 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6519692 // resultInfo (<unidirectional association>)
	  b parent class_ref 3405836 // LocalVariableInfo
      end

      attribute 12474764 "workSet"
	const_attribute private explicit_type "int"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " {@code non-null;} work set indicating blocks needing to be processed "
      end

      operation 14692748 "extract"
	class_operation public return_type class_ref 3405836 // LocalVariableInfo
	nparams 1
	  param inout name "method" type class_ref 3400332 // RopMethod
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Extracts out all the local variable information from the given method.

@param method {@code non-null;} the method to extract from
@return {@code non-null;} the extracted information"
      end

      operation 14692876 "LocalVariableExtractor"
	private explicit_return_type ""
	nparams 1
	  param inout name "method" type class_ref 3400332 // RopMethod
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructs an instance. This method is private. Use {@link #extract}.

@param method {@code non-null;} the method to extract from"
      end

      operation 14693004 "doit"
	private return_type class_ref 3405836 // LocalVariableInfo
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Does the extraction.

@return {@code non-null;} the extracted information"
      end

      operation 14693132 "processBlock"
	private explicit_return_type "void"
	nparams 1
	  param in name "label" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Processes a single block.

@param label {@code >= 0;} label of the block to process"
      end
    end

    class 3424268 "RegOps"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "All the register-based opcodes, and related utilities.

<p><b>Note:</b> Opcode descriptions use a rough pseudocode. {@code r}
is the result register, {@code x} is the first argument,
{@code y} is the second argument, and {@code z} is the
third argument. The expression which describes
the operation uses Java-ish syntax but is preceded by type indicators for
each of the values."
      attribute 12475404 "NOP"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " {@code nop()} "
      end

      attribute 12475532 "MOVE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " {@code T: any type; r,x: T :: r = x;} "
      end

      attribute 12475660 "MOVE_PARAM"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " {@code T: any type; r,param(x): T :: r = param(x)} "
      end

      attribute 12475788 "MOVE_EXCEPTION"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "{@code T: Throwable; r: T :: r = caught_exception}.
<b>Note:</b> This opcode should only ever be used in the
first instruction of a block, and such blocks must be
the start of an exception handler.
"
      end

      attribute 12475916 "CONST"
	class_attribute const_attribute public explicit_type "int"
	init_value " 5"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " {@code T: any type; r, literal: T :: r = literal;} "
      end

      attribute 12476044 "GOTO"
	class_attribute const_attribute public explicit_type "int"
	init_value " 6"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " {@code goto label} "
      end

      attribute 12476172 "IF_EQ"
	class_attribute const_attribute public explicit_type "int"
	init_value " 7"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "{@code T: int or Object; x,y: T :: if (x == y) goto
label}
"
      end

      attribute 12476300 "IF_NE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 8"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "{@code T: int or Object; x,y: T :: if (x != y) goto
label}
"
      end

      attribute 12476428 "IF_LT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 9"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " {@code x,y: int :: if (x < y) goto label} "
      end

      attribute 12476556 "IF_GE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 10"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " {@code x,y: int :: if (x >= y) goto label} "
      end

      attribute 12476684 "IF_LE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 11"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " {@code x,y: int :: if (x <= y) goto label} "
      end

      attribute 12476812 "IF_GT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 12"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " {@code x,y: int :: if (x > y) goto label} "
      end

      attribute 12476940 "SWITCH"
	class_attribute const_attribute public explicit_type "int"
	init_value " 13"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " {@code x: int :: goto table[x]} "
      end

      attribute 12477068 "ADD"
	class_attribute const_attribute public explicit_type "int"
	init_value " 14"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " {@code T: any numeric type; r,x,y: T :: r = x + y} "
      end

      attribute 12477196 "SUB"
	class_attribute const_attribute public explicit_type "int"
	init_value " 15"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " {@code T: any numeric type; r,x,y: T :: r = x - y} "
      end

      attribute 12477324 "MUL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 16"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " {@code T: any numeric type; r,x,y: T :: r = x * y} "
      end

      attribute 12477452 "DIV"
	class_attribute const_attribute public explicit_type "int"
	init_value " 17"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " {@code T: any numeric type; r,x,y: T :: r = x / y} "
      end

      attribute 12477580 "REM"
	class_attribute const_attribute public explicit_type "int"
	init_value " 18"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "{@code T: any numeric type; r,x,y: T :: r = x % y}
(Java-style remainder)
"
      end

      attribute 12477708 "NEG"
	class_attribute const_attribute public explicit_type "int"
	init_value " 19"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " {@code T: any numeric type; r,x: T :: r = -x} "
      end

      attribute 12477836 "AND"
	class_attribute const_attribute public explicit_type "int"
	init_value " 20"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " {@code T: any integral type; r,x,y: T :: r = x & y} "
      end

      attribute 12477964 "OR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 21"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " {@code T: any integral type; r,x,y: T :: r = x | y} "
      end

      attribute 12478092 "XOR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 22"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " {@code T: any integral type; r,x,y: T :: r = x ^ y} "
      end

      attribute 12478220 "SHL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 23"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "{@code T: any integral type; r,x: T; y: int :: r = x << y}
"
      end

      attribute 12478348 "SHR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 24"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "{@code T: any integral type; r,x: T; y: int :: r = x >> y}
(signed right-shift)
"
      end

      attribute 12478476 "USHR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 25"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "{@code T: any integral type; r,x: T; y: int :: r = x >>> y}
(unsigned right-shift)
"
      end

      attribute 12478604 "NOT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 26"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " {@code T: any integral type; r,x: T :: r = ~x} "
      end

      attribute 12478732 "CMPL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 27"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "{@code T: any numeric type; r: int; x,y: T :: r = (x == y) ? 0
: (x > y) ? 1 : -1} (Java-style \"cmpl\" where a NaN is
considered \"less than\" all other values; also used for integral
comparisons)
"
      end

      attribute 12478860 "CMPG"
	class_attribute const_attribute public explicit_type "int"
	init_value " 28"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "{@code T: any floating point type; r: int; x,y: T :: r = (x == y) ? 0
: (x < y) ? -1 : 1} (Java-style \"cmpg\" where a NaN is
considered \"greater than\" all other values)
"
      end

      attribute 12478988 "CONV"
	class_attribute const_attribute public explicit_type "int"
	init_value " 29"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "{@code T: any numeric type; U: any numeric type; r: T; x: U ::
r = (T) x} (numeric type conversion between the four
\"real\" numeric types)
"
      end

      attribute 12479116 "TO_BYTE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 30"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "{@code r,x: int :: r = (x << 24) >> 24} (Java-style
convert int to byte)
"
      end

      attribute 12479244 "TO_CHAR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 31"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "{@code r,x: int :: r = x & 0xffff} (Java-style convert int to char)
"
      end

      attribute 12479372 "TO_SHORT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 32"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "{@code r,x: int :: r = (x << 16) >> 16} (Java-style
convert int to short)
"
      end

      attribute 12479500 "RETURN"
	class_attribute const_attribute public explicit_type "int"
	init_value " 33"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " {@code T: return type for the method; x: T; return x} "
      end

      attribute 12479628 "ARRAY_LENGTH"
	class_attribute const_attribute public explicit_type "int"
	init_value " 34"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " {@code T: any type; r: int; x: T[]; :: r = x.length} "
      end

      attribute 12479756 "THROW"
	class_attribute const_attribute public explicit_type "int"
	init_value " 35"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " {@code x: Throwable :: throw(x)} "
      end

      attribute 12479884 "MONITOR_ENTER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 36"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " {@code x: Object :: monitorenter(x)} "
      end

      attribute 12480012 "MONITOR_EXIT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 37"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " {@code x: Object :: monitorexit(x)} "
      end

      attribute 12480140 "AGET"
	class_attribute const_attribute public explicit_type "int"
	init_value " 38"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " {@code T: any type; r: T; x: T[]; y: int :: r = x[y]} "
      end

      attribute 12480268 "APUT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 39"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " {@code T: any type; x: T; y: T[]; z: int :: x[y] = z} "
      end

      attribute 12480396 "NEW_INSTANCE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 40"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "{@code T: any non-array object type :: r =
alloc(T)} (allocate heap space for an object)
"
      end

      attribute 12480524 "NEW_ARRAY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 41"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " {@code T: any array type; r: T; x: int :: r = new T[x]} "
      end

      attribute 12480652 "FILLED_NEW_ARRAY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 42"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "{@code T: any array type; r: T; x: int; v0..vx: T :: r = new T[x]
{v0, ..., vx}}
"
      end

      attribute 12480780 "CHECK_CAST"
	class_attribute const_attribute public explicit_type "int"
	init_value " 43"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "{@code T: any object type; x: Object :: (T) x} (can
throw {@code ClassCastException})
"
      end

      attribute 12480908 "INSTANCE_OF"
	class_attribute const_attribute public explicit_type "int"
	init_value " 44"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "{@code T: any object type; x: Object :: x instanceof T}
"
      end

      attribute 12481036 "GET_FIELD"
	class_attribute const_attribute public explicit_type "int"
	init_value " 45"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "{@code T: any type; r: T; x: Object; f: instance field spec of
type T :: r = x.f}
"
      end

      attribute 12481164 "GET_STATIC"
	class_attribute const_attribute public explicit_type "int"
	init_value " 46"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "{@code T: any type; r: T; f: static field spec of type T :: r =
f}
"
      end

      attribute 12481292 "PUT_FIELD"
	class_attribute const_attribute public explicit_type "int"
	init_value " 47"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "{@code T: any type; x: T; y: Object; f: instance field spec of type
T :: y.f = x}
"
      end

      attribute 12481420 "PUT_STATIC"
	class_attribute const_attribute public explicit_type "int"
	init_value " 48"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "{@code T: any type; f: static field spec of type T; x: T :: f = x}
"
      end

      attribute 12481548 "INVOKE_STATIC"
	class_attribute const_attribute public explicit_type "int"
	init_value " 49"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "{@code Tr, T0, T1...: any types; r: Tr; m: static method spec;
y0: T0; y1: T1 ... :: r = m(y0, y1, ...)} (call static
method)
"
      end

      attribute 12481676 "INVOKE_VIRTUAL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 50"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "{@code Tr, T0, T1...: any types; r: Tr; x: Object; m: instance method
spec; y0: T0; y1: T1 ... :: r = x.m(y0, y1, ...)} (call normal
virtual method)
"
      end

      attribute 12481804 "INVOKE_SUPER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 51"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "{@code Tr, T0, T1...: any types; r: Tr; x: Object; m: instance method
spec; y0: T0; y1: T1 ... :: r = x.m(y0, y1, ...)} (call
superclass virtual method)
"
      end

      attribute 12481932 "INVOKE_DIRECT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 52"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "{@code Tr, T0, T1...: any types; r: Tr; x: Object; m: instance method
spec; y0: T0; y1: T1 ... :: r = x.m(y0, y1, ...)} (call
direct/special method)
"
      end

      attribute 12482060 "INVOKE_INTERFACE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 53"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "{@code Tr, T0, T1...: any types; r: Tr; x: Object; m: interface
(instance) method spec; y0: T0; y1: T1 ... :: r = x.m(y0, y1,
...)} (call interface method)
"
      end

      attribute 12482188 "MARK_LOCAL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 54"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "{@code T0: any type; name: local variable name  :: mark(name,T0)}
(mark beginning or end of local variable name)
"
      end

      attribute 12482316 "MOVE_RESULT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 55"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "{@code T: Any type; r: T :: r = return_type}.
<b>Note:</b> This opcode should only ever be used in the
first instruction of a block following an invoke-*.
"
      end

      attribute 12482444 "MOVE_RESULT_PSEUDO"
	class_attribute const_attribute public explicit_type "int"
	init_value " 56"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "{@code T: Any type; r: T :: r = return_type}.
<b>Note:</b> This opcode should only ever be used in the
first instruction of a block following a non-invoke throwing insn
"
      end

      attribute 12482572 "FILL_ARRAY_DATA"
	class_attribute const_attribute public explicit_type "int"
	init_value " 57"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " {@code T: Any primitive type; v0..vx: T :: {v0, ..., vx}} "
      end

      operation 14707084 "RegOps"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This class is uninstantiable."
      end

      operation 14707212 "opName"
	class_operation public return_type class_ref 3399692 // String
	nparams 1
	  param in name "opcode" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the name of the given opcode.

@param opcode {@code >= 0, <= 255;} the opcode
@return {@code non-null;} its name"
      end

      operation 14707340 "flippedIfOpcode"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "opcode" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Given an IF_* RegOp, returns the right-to-left flipped version. For
example, IF_GT becomes IF_LT.

@param opcode An IF_* RegOp
@return flipped IF Regop"
      end
    end

    class 3424396 "Rops"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Standard instances of {@link Rop}."
      classrelation 6523660 // NOP (<unidirectional association>)
	relation 6523532 --->
	  a role_name "NOP" init_value "
        new Rop(RegOps.NOP, Type.VOID, StdTypeList.EMPTY, \"nop\")" class_relation const_relation public
	    comment " {@code nop()} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6523660 // NOP (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6523788 // MOVE_INT (<unidirectional association>)
	relation 6523660 --->
	  a role_name "MOVE_INT" init_value "
        new Rop(RegOps.MOVE, Type.INT, StdTypeList.INT, \"move-int\")" class_relation const_relation public
	    comment " {@code r,x: int :: r = x;} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6523788 // MOVE_INT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6523916 // MOVE_LONG (<unidirectional association>)
	relation 6523788 --->
	  a role_name "MOVE_LONG" init_value "
        new Rop(RegOps.MOVE, Type.LONG, StdTypeList.LONG, \"move-long\")" class_relation const_relation public
	    comment " {@code r,x: long :: r = x;} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6523916 // MOVE_LONG (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6524044 // MOVE_FLOAT (<unidirectional association>)
	relation 6523916 --->
	  a role_name "MOVE_FLOAT" init_value "
        new Rop(RegOps.MOVE, Type.FLOAT, StdTypeList.FLOAT, \"move-float\")" class_relation const_relation public
	    comment " {@code r,x: float :: r = x;} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6524044 // MOVE_FLOAT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6524172 // MOVE_DOUBLE (<unidirectional association>)
	relation 6524044 --->
	  a role_name "MOVE_DOUBLE" init_value "
        new Rop(RegOps.MOVE, Type.DOUBLE, StdTypeList.DOUBLE, \"move-double\")" class_relation const_relation public
	    comment " {@code r,x: double :: r = x;} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6524172 // MOVE_DOUBLE (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6524300 // MOVE_OBJECT (<unidirectional association>)
	relation 6524172 --->
	  a role_name "MOVE_OBJECT" init_value "
        new Rop(RegOps.MOVE, Type.OBJECT, StdTypeList.OBJECT, \"move-object\")" class_relation const_relation public
	    comment " {@code r,x: Object :: r = x;} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6524300 // MOVE_OBJECT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6524428 // MOVE_RETURN_ADDRESS (<unidirectional association>)
	relation 6524300 --->
	  a role_name "MOVE_RETURN_ADDRESS" init_value "
        new Rop(RegOps.MOVE, Type.RETURN_ADDRESS,
                StdTypeList.RETURN_ADDRESS, \"move-return-address\")" class_relation const_relation public
	    comment "
{@code r,x: ReturnAddress :: r = x;}

Note that this rop-form instruction has no dex-form equivilent and
must be removed before the dex conversion.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6524428 // MOVE_RETURN_ADDRESS (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6524556 // MOVE_PARAM_INT (<unidirectional association>)
	relation 6524428 --->
	  a role_name "MOVE_PARAM_INT" init_value "
        new Rop(RegOps.MOVE_PARAM, Type.INT, StdTypeList.EMPTY,
                \"move-param-int\")" class_relation const_relation public
	    comment " {@code r,param(x): int :: r = param(x);} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6524556 // MOVE_PARAM_INT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6524684 // MOVE_PARAM_LONG (<unidirectional association>)
	relation 6524556 --->
	  a role_name "MOVE_PARAM_LONG" init_value "
        new Rop(RegOps.MOVE_PARAM, Type.LONG, StdTypeList.EMPTY,
                \"move-param-long\")" class_relation const_relation public
	    comment " {@code r,param(x): long :: r = param(x);} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6524684 // MOVE_PARAM_LONG (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6524812 // MOVE_PARAM_FLOAT (<unidirectional association>)
	relation 6524684 --->
	  a role_name "MOVE_PARAM_FLOAT" init_value "
        new Rop(RegOps.MOVE_PARAM, Type.FLOAT, StdTypeList.EMPTY,
                \"move-param-float\")" class_relation const_relation public
	    comment " {@code r,param(x): float :: r = param(x);} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6524812 // MOVE_PARAM_FLOAT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6524940 // MOVE_PARAM_DOUBLE (<unidirectional association>)
	relation 6524812 --->
	  a role_name "MOVE_PARAM_DOUBLE" init_value "
        new Rop(RegOps.MOVE_PARAM, Type.DOUBLE, StdTypeList.EMPTY,
                \"move-param-double\")" class_relation const_relation public
	    comment " {@code r,param(x): double :: r = param(x);} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6524940 // MOVE_PARAM_DOUBLE (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6525068 // MOVE_PARAM_OBJECT (<unidirectional association>)
	relation 6524940 --->
	  a role_name "MOVE_PARAM_OBJECT" init_value "
        new Rop(RegOps.MOVE_PARAM, Type.OBJECT, StdTypeList.EMPTY,
                \"move-param-object\")" class_relation const_relation public
	    comment " {@code r,param(x): Object :: r = param(x);} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6525068 // MOVE_PARAM_OBJECT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6525196 // CONST_INT (<unidirectional association>)
	relation 6525068 --->
	  a role_name "CONST_INT" init_value "
        new Rop(RegOps.CONST, Type.INT, StdTypeList.EMPTY, \"const-int\")" class_relation const_relation public
	    comment " {@code r, literal: int :: r = literal;} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6525196 // CONST_INT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6525324 // CONST_LONG (<unidirectional association>)
	relation 6525196 --->
	  a role_name "CONST_LONG" init_value "
        new Rop(RegOps.CONST, Type.LONG, StdTypeList.EMPTY, \"const-long\")" class_relation const_relation public
	    comment " {@code r, literal: long :: r = literal;} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6525324 // CONST_LONG (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6525452 // CONST_FLOAT (<unidirectional association>)
	relation 6525324 --->
	  a role_name "CONST_FLOAT" init_value "
        new Rop(RegOps.CONST, Type.FLOAT, StdTypeList.EMPTY, \"const-float\")" class_relation const_relation public
	    comment " {@code r, literal: float :: r = literal;} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6525452 // CONST_FLOAT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6525580 // CONST_DOUBLE (<unidirectional association>)
	relation 6525452 --->
	  a role_name "CONST_DOUBLE" init_value "
        new Rop(RegOps.CONST, Type.DOUBLE, StdTypeList.EMPTY, \"const-double\")" class_relation const_relation public
	    comment " {@code r, literal: double :: r = literal;} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6525580 // CONST_DOUBLE (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6525708 // CONST_OBJECT (<unidirectional association>)
	relation 6525580 --->
	  a role_name "CONST_OBJECT" init_value "
        new Rop(RegOps.CONST, Type.OBJECT, StdTypeList.EMPTY,
                Exceptions.LIST_Error, \"const-object\")" class_relation const_relation public
	    comment " {@code r, literal: Object :: r = literal;} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6525708 // CONST_OBJECT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6525836 // CONST_OBJECT_NOTHROW (<unidirectional association>)
	relation 6525708 --->
	  a role_name "CONST_OBJECT_NOTHROW" init_value "
        new Rop(RegOps.CONST, Type.OBJECT, StdTypeList.EMPTY,
                \"const-object-nothrow\")" class_relation const_relation public
	    comment " {@code r, literal: Object :: r = literal;} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6525836 // CONST_OBJECT_NOTHROW (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6525964 // GOTO (<unidirectional association>)
	relation 6525836 --->
	  a role_name "GOTO" init_value "
        new Rop(RegOps.GOTO, Type.VOID, StdTypeList.EMPTY, Rop.BRANCH_GOTO,
                \"goto\")" class_relation const_relation public
	    comment " {@code goto label} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6525964 // GOTO (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6526092 // IF_EQZ_INT (<unidirectional association>)
	relation 6525964 --->
	  a role_name "IF_EQZ_INT" init_value "
        new Rop(RegOps.IF_EQ, Type.VOID, StdTypeList.INT, Rop.BRANCH_IF,
                \"if-eqz-int\")" class_relation const_relation public
	    comment " {@code x: int :: if (x == 0) goto label} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6526092 // IF_EQZ_INT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6526220 // IF_NEZ_INT (<unidirectional association>)
	relation 6526092 --->
	  a role_name "IF_NEZ_INT" init_value "
        new Rop(RegOps.IF_NE, Type.VOID, StdTypeList.INT, Rop.BRANCH_IF,
                \"if-nez-int\")" class_relation const_relation public
	    comment " {@code x: int :: if (x != 0) goto label} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6526220 // IF_NEZ_INT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6526348 // IF_LTZ_INT (<unidirectional association>)
	relation 6526220 --->
	  a role_name "IF_LTZ_INT" init_value "
        new Rop(RegOps.IF_LT, Type.VOID, StdTypeList.INT, Rop.BRANCH_IF,
                \"if-ltz-int\")" class_relation const_relation public
	    comment " {@code x: int :: if (x < 0) goto label} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6526348 // IF_LTZ_INT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6526476 // IF_GEZ_INT (<unidirectional association>)
	relation 6526348 --->
	  a role_name "IF_GEZ_INT" init_value "
        new Rop(RegOps.IF_GE, Type.VOID, StdTypeList.INT, Rop.BRANCH_IF,
                \"if-gez-int\")" class_relation const_relation public
	    comment " {@code x: int :: if (x >= 0) goto label} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6526476 // IF_GEZ_INT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6526604 // IF_LEZ_INT (<unidirectional association>)
	relation 6526476 --->
	  a role_name "IF_LEZ_INT" init_value "
        new Rop(RegOps.IF_LE, Type.VOID, StdTypeList.INT, Rop.BRANCH_IF,
                \"if-lez-int\")" class_relation const_relation public
	    comment " {@code x: int :: if (x <= 0) goto label} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6526604 // IF_LEZ_INT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6526732 // IF_GTZ_INT (<unidirectional association>)
	relation 6526604 --->
	  a role_name "IF_GTZ_INT" init_value "
        new Rop(RegOps.IF_GT, Type.VOID, StdTypeList.INT, Rop.BRANCH_IF,
                \"if-gtz-int\")" class_relation const_relation public
	    comment " {@code x: int :: if (x > 0) goto label} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6526732 // IF_GTZ_INT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6526860 // IF_EQZ_OBJECT (<unidirectional association>)
	relation 6526732 --->
	  a role_name "IF_EQZ_OBJECT" init_value "
        new Rop(RegOps.IF_EQ, Type.VOID, StdTypeList.OBJECT, Rop.BRANCH_IF,
                \"if-eqz-object\")" class_relation const_relation public
	    comment " {@code x: Object :: if (x == null) goto label} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6526860 // IF_EQZ_OBJECT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6526988 // IF_NEZ_OBJECT (<unidirectional association>)
	relation 6526860 --->
	  a role_name "IF_NEZ_OBJECT" init_value "
        new Rop(RegOps.IF_NE, Type.VOID, StdTypeList.OBJECT, Rop.BRANCH_IF,
                \"if-nez-object\")" class_relation const_relation public
	    comment " {@code x: Object :: if (x != null) goto label} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6526988 // IF_NEZ_OBJECT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6527116 // IF_EQ_INT (<unidirectional association>)
	relation 6526988 --->
	  a role_name "IF_EQ_INT" init_value "
        new Rop(RegOps.IF_EQ, Type.VOID, StdTypeList.INT_INT, Rop.BRANCH_IF,
                \"if-eq-int\")" class_relation const_relation public
	    comment " {@code x,y: int :: if (x == y) goto label} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6527116 // IF_EQ_INT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6527244 // IF_NE_INT (<unidirectional association>)
	relation 6527116 --->
	  a role_name "IF_NE_INT" init_value "
        new Rop(RegOps.IF_NE, Type.VOID, StdTypeList.INT_INT, Rop.BRANCH_IF,
                \"if-ne-int\")" class_relation const_relation public
	    comment " {@code x,y: int :: if (x != y) goto label} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6527244 // IF_NE_INT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6527372 // IF_LT_INT (<unidirectional association>)
	relation 6527244 --->
	  a role_name "IF_LT_INT" init_value "
        new Rop(RegOps.IF_LT, Type.VOID, StdTypeList.INT_INT, Rop.BRANCH_IF,
                \"if-lt-int\")" class_relation const_relation public
	    comment " {@code x,y: int :: if (x < y) goto label} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6527372 // IF_LT_INT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6527500 // IF_GE_INT (<unidirectional association>)
	relation 6527372 --->
	  a role_name "IF_GE_INT" init_value "
        new Rop(RegOps.IF_GE, Type.VOID, StdTypeList.INT_INT, Rop.BRANCH_IF,
                \"if-ge-int\")" class_relation const_relation public
	    comment " {@code x,y: int :: if (x >= y) goto label} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6527500 // IF_GE_INT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6527628 // IF_LE_INT (<unidirectional association>)
	relation 6527500 --->
	  a role_name "IF_LE_INT" init_value "
        new Rop(RegOps.IF_LE, Type.VOID, StdTypeList.INT_INT, Rop.BRANCH_IF,
                \"if-le-int\")" class_relation const_relation public
	    comment " {@code x,y: int :: if (x <= y) goto label} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6527628 // IF_LE_INT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6527756 // IF_GT_INT (<unidirectional association>)
	relation 6527628 --->
	  a role_name "IF_GT_INT" init_value "
        new Rop(RegOps.IF_GT, Type.VOID, StdTypeList.INT_INT, Rop.BRANCH_IF,
                \"if-gt-int\")" class_relation const_relation public
	    comment " {@code x,y: int :: if (x > y) goto label} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6527756 // IF_GT_INT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6527884 // IF_EQ_OBJECT (<unidirectional association>)
	relation 6527756 --->
	  a role_name "IF_EQ_OBJECT" init_value "
        new Rop(RegOps.IF_EQ, Type.VOID, StdTypeList.OBJECT_OBJECT,
                Rop.BRANCH_IF, \"if-eq-object\")" class_relation const_relation public
	    comment " {@code x,y: Object :: if (x == y) goto label} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6527884 // IF_EQ_OBJECT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6528012 // IF_NE_OBJECT (<unidirectional association>)
	relation 6527884 --->
	  a role_name "IF_NE_OBJECT" init_value "
        new Rop(RegOps.IF_NE, Type.VOID, StdTypeList.OBJECT_OBJECT,
                Rop.BRANCH_IF, \"if-ne-object\")" class_relation const_relation public
	    comment " {@code x,y: Object :: if (x != y) goto label} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6528012 // IF_NE_OBJECT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6528140 // SWITCH (<unidirectional association>)
	relation 6528012 --->
	  a role_name "SWITCH" init_value "
        new Rop(RegOps.SWITCH, Type.VOID, StdTypeList.INT, Rop.BRANCH_SWITCH,
                \"switch\")" class_relation const_relation public
	    comment " {@code x: int :: goto switchtable[x]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6528140 // SWITCH (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6528268 // ADD_INT (<unidirectional association>)
	relation 6528140 --->
	  a role_name "ADD_INT" init_value "
        new Rop(RegOps.ADD, Type.INT, StdTypeList.INT_INT, \"add-int\")" class_relation const_relation public
	    comment " {@code r,x,y: int :: r = x + y;} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6528268 // ADD_INT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6528396 // ADD_LONG (<unidirectional association>)
	relation 6528268 --->
	  a role_name "ADD_LONG" init_value "
        new Rop(RegOps.ADD, Type.LONG, StdTypeList.LONG_LONG, \"add-long\")" class_relation const_relation public
	    comment " {@code r,x,y: long :: r = x + y;} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6528396 // ADD_LONG (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6528524 // ADD_FLOAT (<unidirectional association>)
	relation 6528396 --->
	  a role_name "ADD_FLOAT" init_value "
        new Rop(RegOps.ADD, Type.FLOAT, StdTypeList.FLOAT_FLOAT, \"add-float\")" class_relation const_relation public
	    comment " {@code r,x,y: float :: r = x + y;} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6528524 // ADD_FLOAT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6528652 // ADD_DOUBLE (<unidirectional association>)
	relation 6528524 --->
	  a role_name "ADD_DOUBLE" init_value "
        new Rop(RegOps.ADD, Type.DOUBLE, StdTypeList.DOUBLE_DOUBLE,
                Rop.BRANCH_NONE, \"add-double\")" class_relation const_relation public
	    comment " {@code r,x,y: double :: r = x + y;} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6528652 // ADD_DOUBLE (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6528780 // SUB_INT (<unidirectional association>)
	relation 6528652 --->
	  a role_name "SUB_INT" init_value "
        new Rop(RegOps.SUB, Type.INT, StdTypeList.INT_INT, \"sub-int\")" class_relation const_relation public
	    comment " {@code r,x,y: int :: r = x - y;} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6528780 // SUB_INT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6528908 // SUB_LONG (<unidirectional association>)
	relation 6528780 --->
	  a role_name "SUB_LONG" init_value "
        new Rop(RegOps.SUB, Type.LONG, StdTypeList.LONG_LONG, \"sub-long\")" class_relation const_relation public
	    comment " {@code r,x,y: long :: r = x - y;} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6528908 // SUB_LONG (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6529036 // SUB_FLOAT (<unidirectional association>)
	relation 6528908 --->
	  a role_name "SUB_FLOAT" init_value "
        new Rop(RegOps.SUB, Type.FLOAT, StdTypeList.FLOAT_FLOAT, \"sub-float\")" class_relation const_relation public
	    comment " {@code r,x,y: float :: r = x - y;} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6529036 // SUB_FLOAT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6529164 // SUB_DOUBLE (<unidirectional association>)
	relation 6529036 --->
	  a role_name "SUB_DOUBLE" init_value "
        new Rop(RegOps.SUB, Type.DOUBLE, StdTypeList.DOUBLE_DOUBLE,
                Rop.BRANCH_NONE, \"sub-double\")" class_relation const_relation public
	    comment " {@code r,x,y: double :: r = x - y;} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6529164 // SUB_DOUBLE (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6529292 // MUL_INT (<unidirectional association>)
	relation 6529164 --->
	  a role_name "MUL_INT" init_value "
        new Rop(RegOps.MUL, Type.INT, StdTypeList.INT_INT, \"mul-int\")" class_relation const_relation public
	    comment " {@code r,x,y: int :: r = x * y;} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6529292 // MUL_INT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6529420 // MUL_LONG (<unidirectional association>)
	relation 6529292 --->
	  a role_name "MUL_LONG" init_value "
        new Rop(RegOps.MUL, Type.LONG, StdTypeList.LONG_LONG, \"mul-long\")" class_relation const_relation public
	    comment " {@code r,x,y: long :: r = x * y;} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6529420 // MUL_LONG (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6529548 // MUL_FLOAT (<unidirectional association>)
	relation 6529420 --->
	  a role_name "MUL_FLOAT" init_value "
        new Rop(RegOps.MUL, Type.FLOAT, StdTypeList.FLOAT_FLOAT, \"mul-float\")" class_relation const_relation public
	    comment " {@code r,x,y: float :: r = x * y;} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6529548 // MUL_FLOAT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6529676 // MUL_DOUBLE (<unidirectional association>)
	relation 6529548 --->
	  a role_name "MUL_DOUBLE" init_value "
        new Rop(RegOps.MUL, Type.DOUBLE, StdTypeList.DOUBLE_DOUBLE,
                Rop.BRANCH_NONE, \"mul-double\")" class_relation const_relation public
	    comment " {@code r,x,y: double :: r = x * y;} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6529676 // MUL_DOUBLE (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6529804 // DIV_INT (<unidirectional association>)
	relation 6529676 --->
	  a role_name "DIV_INT" init_value "
        new Rop(RegOps.DIV, Type.INT, StdTypeList.INT_INT,
                Exceptions.LIST_Error_ArithmeticException, \"div-int\")" class_relation const_relation public
	    comment " {@code r,x,y: int :: r = x / y;} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6529804 // DIV_INT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6529932 // DIV_LONG (<unidirectional association>)
	relation 6529804 --->
	  a role_name "DIV_LONG" init_value "
        new Rop(RegOps.DIV, Type.LONG, StdTypeList.LONG_LONG,
                Exceptions.LIST_Error_ArithmeticException, \"div-long\")" class_relation const_relation public
	    comment " {@code r,x,y: long :: r = x / y;} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6529932 // DIV_LONG (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6530060 // DIV_FLOAT (<unidirectional association>)
	relation 6529932 --->
	  a role_name "DIV_FLOAT" init_value "
        new Rop(RegOps.DIV, Type.FLOAT, StdTypeList.FLOAT_FLOAT, \"div-float\")" class_relation const_relation public
	    comment " {@code r,x,y: float :: r = x / y;} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6530060 // DIV_FLOAT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6530188 // DIV_DOUBLE (<unidirectional association>)
	relation 6530060 --->
	  a role_name "DIV_DOUBLE" init_value "
        new Rop(RegOps.DIV, Type.DOUBLE, StdTypeList.DOUBLE_DOUBLE,
                \"div-double\")" class_relation const_relation public
	    comment " {@code r,x,y: double :: r = x / y;} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6530188 // DIV_DOUBLE (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6530316 // REM_INT (<unidirectional association>)
	relation 6530188 --->
	  a role_name "REM_INT" init_value "
        new Rop(RegOps.REM, Type.INT, StdTypeList.INT_INT,
                Exceptions.LIST_Error_ArithmeticException, \"rem-int\")" class_relation const_relation public
	    comment " {@code r,x,y: int :: r = x % y;} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6530316 // REM_INT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6530444 // REM_LONG (<unidirectional association>)
	relation 6530316 --->
	  a role_name "REM_LONG" init_value "
        new Rop(RegOps.REM, Type.LONG, StdTypeList.LONG_LONG,
                Exceptions.LIST_Error_ArithmeticException, \"rem-long\")" class_relation const_relation public
	    comment " {@code r,x,y: long :: r = x % y;} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6530444 // REM_LONG (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6530572 // REM_FLOAT (<unidirectional association>)
	relation 6530444 --->
	  a role_name "REM_FLOAT" init_value "
        new Rop(RegOps.REM, Type.FLOAT, StdTypeList.FLOAT_FLOAT, \"rem-float\")" class_relation const_relation public
	    comment " {@code r,x,y: float :: r = x % y;} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6530572 // REM_FLOAT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6530700 // REM_DOUBLE (<unidirectional association>)
	relation 6530572 --->
	  a role_name "REM_DOUBLE" init_value "
        new Rop(RegOps.REM, Type.DOUBLE, StdTypeList.DOUBLE_DOUBLE,
                \"rem-double\")" class_relation const_relation public
	    comment " {@code r,x,y: double :: r = x % y;} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6530700 // REM_DOUBLE (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6530828 // NEG_INT (<unidirectional association>)
	relation 6530700 --->
	  a role_name "NEG_INT" init_value "
        new Rop(RegOps.NEG, Type.INT, StdTypeList.INT, \"neg-int\")" class_relation const_relation public
	    comment " {@code r,x: int :: r = -x;} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6530828 // NEG_INT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6530956 // NEG_LONG (<unidirectional association>)
	relation 6530828 --->
	  a role_name "NEG_LONG" init_value "
        new Rop(RegOps.NEG, Type.LONG, StdTypeList.LONG, \"neg-long\")" class_relation const_relation public
	    comment " {@code r,x: long :: r = -x;} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6530956 // NEG_LONG (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6531084 // NEG_FLOAT (<unidirectional association>)
	relation 6530956 --->
	  a role_name "NEG_FLOAT" init_value "
        new Rop(RegOps.NEG, Type.FLOAT, StdTypeList.FLOAT, \"neg-float\")" class_relation const_relation public
	    comment " {@code r,x: float :: r = -x;} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6531084 // NEG_FLOAT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6531212 // NEG_DOUBLE (<unidirectional association>)
	relation 6531084 --->
	  a role_name "NEG_DOUBLE" init_value "
        new Rop(RegOps.NEG, Type.DOUBLE, StdTypeList.DOUBLE, \"neg-double\")" class_relation const_relation public
	    comment " {@code r,x: double :: r = -x;} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6531212 // NEG_DOUBLE (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6531340 // AND_INT (<unidirectional association>)
	relation 6531212 --->
	  a role_name "AND_INT" init_value "
        new Rop(RegOps.AND, Type.INT, StdTypeList.INT_INT, \"and-int\")" class_relation const_relation public
	    comment " {@code r,x,y: int :: r = x & y;} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6531340 // AND_INT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6531468 // AND_LONG (<unidirectional association>)
	relation 6531340 --->
	  a role_name "AND_LONG" init_value "
        new Rop(RegOps.AND, Type.LONG, StdTypeList.LONG_LONG, \"and-long\")" class_relation const_relation public
	    comment " {@code r,x,y: long :: r = x & y;} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6531468 // AND_LONG (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6531596 // OR_INT (<unidirectional association>)
	relation 6531468 --->
	  a role_name "OR_INT" init_value "
        new Rop(RegOps.OR, Type.INT, StdTypeList.INT_INT, \"or-int\")" class_relation const_relation public
	    comment " {@code r,x,y: int :: r = x | y;} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6531596 // OR_INT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6531724 // OR_LONG (<unidirectional association>)
	relation 6531596 --->
	  a role_name "OR_LONG" init_value "
        new Rop(RegOps.OR, Type.LONG, StdTypeList.LONG_LONG, \"or-long\")" class_relation const_relation public
	    comment " {@code r,x,y: long :: r = x | y;} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6531724 // OR_LONG (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6531852 // XOR_INT (<unidirectional association>)
	relation 6531724 --->
	  a role_name "XOR_INT" init_value "
        new Rop(RegOps.XOR, Type.INT, StdTypeList.INT_INT, \"xor-int\")" class_relation const_relation public
	    comment " {@code r,x,y: int :: r = x ^ y;} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6531852 // XOR_INT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6531980 // XOR_LONG (<unidirectional association>)
	relation 6531852 --->
	  a role_name "XOR_LONG" init_value "
        new Rop(RegOps.XOR, Type.LONG, StdTypeList.LONG_LONG, \"xor-long\")" class_relation const_relation public
	    comment " {@code r,x,y: long :: r = x ^ y;} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6531980 // XOR_LONG (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6532108 // SHL_INT (<unidirectional association>)
	relation 6531980 --->
	  a role_name "SHL_INT" init_value "
        new Rop(RegOps.SHL, Type.INT, StdTypeList.INT_INT, \"shl-int\")" class_relation const_relation public
	    comment " {@code r,x,y: int :: r = x << y;} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6532108 // SHL_INT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6532236 // SHL_LONG (<unidirectional association>)
	relation 6532108 --->
	  a role_name "SHL_LONG" init_value "
        new Rop(RegOps.SHL, Type.LONG, StdTypeList.LONG_INT, \"shl-long\")" class_relation const_relation public
	    comment " {@code r,x: long; y: int :: r = x << y;} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6532236 // SHL_LONG (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6532364 // SHR_INT (<unidirectional association>)
	relation 6532236 --->
	  a role_name "SHR_INT" init_value "
        new Rop(RegOps.SHR, Type.INT, StdTypeList.INT_INT, \"shr-int\")" class_relation const_relation public
	    comment " {@code r,x,y: int :: r = x >> y;} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6532364 // SHR_INT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6532492 // SHR_LONG (<unidirectional association>)
	relation 6532364 --->
	  a role_name "SHR_LONG" init_value "
        new Rop(RegOps.SHR, Type.LONG, StdTypeList.LONG_INT, \"shr-long\")" class_relation const_relation public
	    comment " {@code r,x: long; y: int :: r = x >> y;} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6532492 // SHR_LONG (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6532620 // USHR_INT (<unidirectional association>)
	relation 6532492 --->
	  a role_name "USHR_INT" init_value "
        new Rop(RegOps.USHR, Type.INT, StdTypeList.INT_INT, \"ushr-int\")" class_relation const_relation public
	    comment " {@code r,x,y: int :: r = x >>> y;} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6532620 // USHR_INT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6532748 // USHR_LONG (<unidirectional association>)
	relation 6532620 --->
	  a role_name "USHR_LONG" init_value "
        new Rop(RegOps.USHR, Type.LONG, StdTypeList.LONG_INT, \"ushr-long\")" class_relation const_relation public
	    comment " {@code r,x: long; y: int :: r = x >>> y;} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6532748 // USHR_LONG (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6532876 // NOT_INT (<unidirectional association>)
	relation 6532748 --->
	  a role_name "NOT_INT" init_value "
        new Rop(RegOps.NOT, Type.INT, StdTypeList.INT, \"not-int\")" class_relation const_relation public
	    comment " {@code r,x: int :: r = ~x;} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6532876 // NOT_INT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6533004 // NOT_LONG (<unidirectional association>)
	relation 6532876 --->
	  a role_name "NOT_LONG" init_value "
        new Rop(RegOps.NOT, Type.LONG, StdTypeList.LONG, \"not-long\")" class_relation const_relation public
	    comment " {@code r,x: long :: r = ~x;} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6533004 // NOT_LONG (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6533132 // ADD_CONST_INT (<unidirectional association>)
	relation 6533004 --->
	  a role_name "ADD_CONST_INT" init_value "
        new Rop(RegOps.ADD, Type.INT, StdTypeList.INT, \"add-const-int\")" class_relation const_relation public
	    comment " {@code r,x,c: int :: r = x + c;} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6533132 // ADD_CONST_INT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6533260 // ADD_CONST_LONG (<unidirectional association>)
	relation 6533132 --->
	  a role_name "ADD_CONST_LONG" init_value "
        new Rop(RegOps.ADD, Type.LONG, StdTypeList.LONG, \"add-const-long\")" class_relation const_relation public
	    comment " {@code r,x,c: long :: r = x + c;} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6533260 // ADD_CONST_LONG (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6533388 // ADD_CONST_FLOAT (<unidirectional association>)
	relation 6533260 --->
	  a role_name "ADD_CONST_FLOAT" init_value "
        new Rop(RegOps.ADD, Type.FLOAT, StdTypeList.FLOAT, \"add-const-float\")" class_relation const_relation public
	    comment " {@code r,x,c: float :: r = x + c;} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6533388 // ADD_CONST_FLOAT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6533516 // ADD_CONST_DOUBLE (<unidirectional association>)
	relation 6533388 --->
	  a role_name "ADD_CONST_DOUBLE" init_value "
        new Rop(RegOps.ADD, Type.DOUBLE, StdTypeList.DOUBLE,
                \"add-const-double\")" class_relation const_relation public
	    comment " {@code r,x,c: double :: r = x + c;} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6533516 // ADD_CONST_DOUBLE (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6533644 // SUB_CONST_INT (<unidirectional association>)
	relation 6533516 --->
	  a role_name "SUB_CONST_INT" init_value "
        new Rop(RegOps.SUB, Type.INT, StdTypeList.INT, \"sub-const-int\")" class_relation const_relation public
	    comment " {@code r,x,c: int :: r = x - c;} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6533644 // SUB_CONST_INT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6533772 // SUB_CONST_LONG (<unidirectional association>)
	relation 6533644 --->
	  a role_name "SUB_CONST_LONG" init_value "
        new Rop(RegOps.SUB, Type.LONG, StdTypeList.LONG, \"sub-const-long\")" class_relation const_relation public
	    comment " {@code r,x,c: long :: r = x - c;} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6533772 // SUB_CONST_LONG (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6533900 // SUB_CONST_FLOAT (<unidirectional association>)
	relation 6533772 --->
	  a role_name "SUB_CONST_FLOAT" init_value "
        new Rop(RegOps.SUB, Type.FLOAT, StdTypeList.FLOAT, \"sub-const-float\")" class_relation const_relation public
	    comment " {@code r,x,c: float :: r = x - c;} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6533900 // SUB_CONST_FLOAT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6534028 // SUB_CONST_DOUBLE (<unidirectional association>)
	relation 6533900 --->
	  a role_name "SUB_CONST_DOUBLE" init_value "
        new Rop(RegOps.SUB, Type.DOUBLE, StdTypeList.DOUBLE,
                \"sub-const-double\")" class_relation const_relation public
	    comment " {@code r,x,c: double :: r = x - c;} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6534028 // SUB_CONST_DOUBLE (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6534156 // MUL_CONST_INT (<unidirectional association>)
	relation 6534028 --->
	  a role_name "MUL_CONST_INT" init_value "
        new Rop(RegOps.MUL, Type.INT, StdTypeList.INT, \"mul-const-int\")" class_relation const_relation public
	    comment " {@code r,x,c: int :: r = x * c;} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6534156 // MUL_CONST_INT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6534284 // MUL_CONST_LONG (<unidirectional association>)
	relation 6534156 --->
	  a role_name "MUL_CONST_LONG" init_value "
        new Rop(RegOps.MUL, Type.LONG, StdTypeList.LONG, \"mul-const-long\")" class_relation const_relation public
	    comment " {@code r,x,c: long :: r = x * c;} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6534284 // MUL_CONST_LONG (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6534412 // MUL_CONST_FLOAT (<unidirectional association>)
	relation 6534284 --->
	  a role_name "MUL_CONST_FLOAT" init_value "
        new Rop(RegOps.MUL, Type.FLOAT, StdTypeList.FLOAT, \"mul-const-float\")" class_relation const_relation public
	    comment " {@code r,x,c: float :: r = x * c;} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6534412 // MUL_CONST_FLOAT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6534540 // MUL_CONST_DOUBLE (<unidirectional association>)
	relation 6534412 --->
	  a role_name "MUL_CONST_DOUBLE" init_value "
        new Rop(RegOps.MUL, Type.DOUBLE, StdTypeList.DOUBLE,
                \"mul-const-double\")" class_relation const_relation public
	    comment " {@code r,x,c: double :: r = x * c;} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6534540 // MUL_CONST_DOUBLE (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6534668 // DIV_CONST_INT (<unidirectional association>)
	relation 6534540 --->
	  a role_name "DIV_CONST_INT" init_value "
        new Rop(RegOps.DIV, Type.INT, StdTypeList.INT,
                Exceptions.LIST_Error_ArithmeticException, \"div-const-int\")" class_relation const_relation public
	    comment " {@code r,x,c: int :: r = x / c;} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6534668 // DIV_CONST_INT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6534796 // DIV_CONST_LONG (<unidirectional association>)
	relation 6534668 --->
	  a role_name "DIV_CONST_LONG" init_value "
        new Rop(RegOps.DIV, Type.LONG, StdTypeList.LONG,
                Exceptions.LIST_Error_ArithmeticException, \"div-const-long\")" class_relation const_relation public
	    comment " {@code r,x,c: long :: r = x / c;} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6534796 // DIV_CONST_LONG (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6534924 // DIV_CONST_FLOAT (<unidirectional association>)
	relation 6534796 --->
	  a role_name "DIV_CONST_FLOAT" init_value "
        new Rop(RegOps.DIV, Type.FLOAT, StdTypeList.FLOAT, \"div-const-float\")" class_relation const_relation public
	    comment " {@code r,x,c: float :: r = x / c;} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6534924 // DIV_CONST_FLOAT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6535052 // DIV_CONST_DOUBLE (<unidirectional association>)
	relation 6534924 --->
	  a role_name "DIV_CONST_DOUBLE" init_value "
        new Rop(RegOps.DIV, Type.DOUBLE, StdTypeList.DOUBLE,
                \"div-const-double\")" class_relation const_relation public
	    comment " {@code r,x,c: double :: r = x / c;} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6535052 // DIV_CONST_DOUBLE (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6535180 // REM_CONST_INT (<unidirectional association>)
	relation 6535052 --->
	  a role_name "REM_CONST_INT" init_value "
        new Rop(RegOps.REM, Type.INT, StdTypeList.INT,
                Exceptions.LIST_Error_ArithmeticException, \"rem-const-int\")" class_relation const_relation public
	    comment " {@code r,x,c: int :: r = x % c;} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6535180 // REM_CONST_INT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6535308 // REM_CONST_LONG (<unidirectional association>)
	relation 6535180 --->
	  a role_name "REM_CONST_LONG" init_value "
        new Rop(RegOps.REM, Type.LONG, StdTypeList.LONG,
                Exceptions.LIST_Error_ArithmeticException, \"rem-const-long\")" class_relation const_relation public
	    comment " {@code r,x,c: long :: r = x % c;} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6535308 // REM_CONST_LONG (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6535436 // REM_CONST_FLOAT (<unidirectional association>)
	relation 6535308 --->
	  a role_name "REM_CONST_FLOAT" init_value "
        new Rop(RegOps.REM, Type.FLOAT, StdTypeList.FLOAT, \"rem-const-float\")" class_relation const_relation public
	    comment " {@code r,x,c: float :: r = x % c;} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6535436 // REM_CONST_FLOAT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6535564 // REM_CONST_DOUBLE (<unidirectional association>)
	relation 6535436 --->
	  a role_name "REM_CONST_DOUBLE" init_value "
        new Rop(RegOps.REM, Type.DOUBLE, StdTypeList.DOUBLE,
                \"rem-const-double\")" class_relation const_relation public
	    comment " {@code r,x,c: double :: r = x % c;} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6535564 // REM_CONST_DOUBLE (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6535692 // AND_CONST_INT (<unidirectional association>)
	relation 6535564 --->
	  a role_name "AND_CONST_INT" init_value "
        new Rop(RegOps.AND, Type.INT, StdTypeList.INT, \"and-const-int\")" class_relation const_relation public
	    comment " {@code r,x,c: int :: r = x & c;} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6535692 // AND_CONST_INT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6535820 // AND_CONST_LONG (<unidirectional association>)
	relation 6535692 --->
	  a role_name "AND_CONST_LONG" init_value "
        new Rop(RegOps.AND, Type.LONG, StdTypeList.LONG, \"and-const-long\")" class_relation const_relation public
	    comment " {@code r,x,c: long :: r = x & c;} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6535820 // AND_CONST_LONG (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6535948 // OR_CONST_INT (<unidirectional association>)
	relation 6535820 --->
	  a role_name "OR_CONST_INT" init_value "
        new Rop(RegOps.OR, Type.INT, StdTypeList.INT, \"or-const-int\")" class_relation const_relation public
	    comment " {@code r,x,c: int :: r = x | c;} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6535948 // OR_CONST_INT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6536076 // OR_CONST_LONG (<unidirectional association>)
	relation 6535948 --->
	  a role_name "OR_CONST_LONG" init_value "
        new Rop(RegOps.OR, Type.LONG, StdTypeList.LONG, \"or-const-long\")" class_relation const_relation public
	    comment " {@code r,x,c: long :: r = x | c;} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6536076 // OR_CONST_LONG (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6536204 // XOR_CONST_INT (<unidirectional association>)
	relation 6536076 --->
	  a role_name "XOR_CONST_INT" init_value "
        new Rop(RegOps.XOR, Type.INT, StdTypeList.INT, \"xor-const-int\")" class_relation const_relation public
	    comment " {@code r,x,c: int :: r = x ^ c;} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6536204 // XOR_CONST_INT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6536332 // XOR_CONST_LONG (<unidirectional association>)
	relation 6536204 --->
	  a role_name "XOR_CONST_LONG" init_value "
        new Rop(RegOps.XOR, Type.LONG, StdTypeList.LONG, \"xor-const-long\")" class_relation const_relation public
	    comment " {@code r,x,c: long :: r = x ^ c;} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6536332 // XOR_CONST_LONG (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6536460 // SHL_CONST_INT (<unidirectional association>)
	relation 6536332 --->
	  a role_name "SHL_CONST_INT" init_value "
        new Rop(RegOps.SHL, Type.INT, StdTypeList.INT, \"shl-const-int\")" class_relation const_relation public
	    comment " {@code r,x,c: int :: r = x << c;} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6536460 // SHL_CONST_INT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6536588 // SHL_CONST_LONG (<unidirectional association>)
	relation 6536460 --->
	  a role_name "SHL_CONST_LONG" init_value "
        new Rop(RegOps.SHL, Type.LONG, StdTypeList.INT, \"shl-const-long\")" class_relation const_relation public
	    comment " {@code r,x: long; c: int :: r = x << c;} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6536588 // SHL_CONST_LONG (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6536716 // SHR_CONST_INT (<unidirectional association>)
	relation 6536588 --->
	  a role_name "SHR_CONST_INT" init_value "
        new Rop(RegOps.SHR, Type.INT, StdTypeList.INT, \"shr-const-int\")" class_relation const_relation public
	    comment " {@code r,x,c: int :: r = x >> c;} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6536716 // SHR_CONST_INT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6536844 // SHR_CONST_LONG (<unidirectional association>)
	relation 6536716 --->
	  a role_name "SHR_CONST_LONG" init_value "
        new Rop(RegOps.SHR, Type.LONG, StdTypeList.INT, \"shr-const-long\")" class_relation const_relation public
	    comment " {@code r,x: long; c: int :: r = x >> c;} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6536844 // SHR_CONST_LONG (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6536972 // USHR_CONST_INT (<unidirectional association>)
	relation 6536844 --->
	  a role_name "USHR_CONST_INT" init_value "
        new Rop(RegOps.USHR, Type.INT, StdTypeList.INT, \"ushr-const-int\")" class_relation const_relation public
	    comment " {@code r,x,c: int :: r = x >>> c;} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6536972 // USHR_CONST_INT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6537100 // USHR_CONST_LONG (<unidirectional association>)
	relation 6536972 --->
	  a role_name "USHR_CONST_LONG" init_value "
        new Rop(RegOps.USHR, Type.LONG, StdTypeList.INT, \"ushr-const-long\")" class_relation const_relation public
	    comment " {@code r,x: long; c: int :: r = x >>> c;} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6537100 // USHR_CONST_LONG (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6537228 // CMPL_LONG (<unidirectional association>)
	relation 6537100 --->
	  a role_name "CMPL_LONG" init_value "
        new Rop(RegOps.CMPL, Type.INT, StdTypeList.LONG_LONG, \"cmpl-long\")" class_relation const_relation public
	    comment " {@code r: int; x,y: long :: r = cmp(x, y);} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6537228 // CMPL_LONG (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6537356 // CMPL_FLOAT (<unidirectional association>)
	relation 6537228 --->
	  a role_name "CMPL_FLOAT" init_value "
        new Rop(RegOps.CMPL, Type.INT, StdTypeList.FLOAT_FLOAT, \"cmpl-float\")" class_relation const_relation public
	    comment " {@code r: int; x,y: float :: r = cmpl(x, y);} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6537356 // CMPL_FLOAT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6537484 // CMPL_DOUBLE (<unidirectional association>)
	relation 6537356 --->
	  a role_name "CMPL_DOUBLE" init_value "
        new Rop(RegOps.CMPL, Type.INT, StdTypeList.DOUBLE_DOUBLE,
                \"cmpl-double\")" class_relation const_relation public
	    comment " {@code r: int; x,y: double :: r = cmpl(x, y);} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6537484 // CMPL_DOUBLE (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6537612 // CMPG_FLOAT (<unidirectional association>)
	relation 6537484 --->
	  a role_name "CMPG_FLOAT" init_value "
        new Rop(RegOps.CMPG, Type.INT, StdTypeList.FLOAT_FLOAT, \"cmpg-float\")" class_relation const_relation public
	    comment " {@code r: int; x,y: float :: r = cmpg(x, y);} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6537612 // CMPG_FLOAT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6537740 // CMPG_DOUBLE (<unidirectional association>)
	relation 6537612 --->
	  a role_name "CMPG_DOUBLE" init_value "
        new Rop(RegOps.CMPG, Type.INT, StdTypeList.DOUBLE_DOUBLE,
                \"cmpg-double\")" class_relation const_relation public
	    comment " {@code r: int; x,y: double :: r = cmpg(x, y);} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6537740 // CMPG_DOUBLE (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6537868 // CONV_L2I (<unidirectional association>)
	relation 6537740 --->
	  a role_name "CONV_L2I" init_value "
        new Rop(RegOps.CONV, Type.INT, StdTypeList.LONG, \"conv-l2i\")" class_relation const_relation public
	    comment " {@code r: int; x: long :: r = (int) x} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6537868 // CONV_L2I (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6537996 // CONV_F2I (<unidirectional association>)
	relation 6537868 --->
	  a role_name "CONV_F2I" init_value "
        new Rop(RegOps.CONV, Type.INT, StdTypeList.FLOAT, \"conv-f2i\")" class_relation const_relation public
	    comment " {@code r: int; x: float :: r = (int) x} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6537996 // CONV_F2I (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6538124 // CONV_D2I (<unidirectional association>)
	relation 6537996 --->
	  a role_name "CONV_D2I" init_value "
        new Rop(RegOps.CONV, Type.INT, StdTypeList.DOUBLE, \"conv-d2i\")" class_relation const_relation public
	    comment " {@code r: int; x: double :: r = (int) x} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6538124 // CONV_D2I (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6538252 // CONV_I2L (<unidirectional association>)
	relation 6538124 --->
	  a role_name "CONV_I2L" init_value "
        new Rop(RegOps.CONV, Type.LONG, StdTypeList.INT, \"conv-i2l\")" class_relation const_relation public
	    comment " {@code r: long; x: int :: r = (long) x} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6538252 // CONV_I2L (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6538380 // CONV_F2L (<unidirectional association>)
	relation 6538252 --->
	  a role_name "CONV_F2L" init_value "
        new Rop(RegOps.CONV, Type.LONG, StdTypeList.FLOAT, \"conv-f2l\")" class_relation const_relation public
	    comment " {@code r: long; x: float :: r = (long) x} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6538380 // CONV_F2L (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6538508 // CONV_D2L (<unidirectional association>)
	relation 6538380 --->
	  a role_name "CONV_D2L" init_value "
        new Rop(RegOps.CONV, Type.LONG, StdTypeList.DOUBLE, \"conv-d2l\")" class_relation const_relation public
	    comment " {@code r: long; x: double :: r = (long) x} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6538508 // CONV_D2L (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6538636 // CONV_I2F (<unidirectional association>)
	relation 6538508 --->
	  a role_name "CONV_I2F" init_value "
        new Rop(RegOps.CONV, Type.FLOAT, StdTypeList.INT, \"conv-i2f\")" class_relation const_relation public
	    comment " {@code r: float; x: int :: r = (float) x} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6538636 // CONV_I2F (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6538764 // CONV_L2F (<unidirectional association>)
	relation 6538636 --->
	  a role_name "CONV_L2F" init_value "
        new Rop(RegOps.CONV, Type.FLOAT, StdTypeList.LONG, \"conv-l2f\")" class_relation const_relation public
	    comment " {@code r: float; x: long :: r = (float) x} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6538764 // CONV_L2F (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6538892 // CONV_D2F (<unidirectional association>)
	relation 6538764 --->
	  a role_name "CONV_D2F" init_value "
        new Rop(RegOps.CONV, Type.FLOAT, StdTypeList.DOUBLE, \"conv-d2f\")" class_relation const_relation public
	    comment " {@code r: float; x: double :: r = (float) x} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6538892 // CONV_D2F (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6539020 // CONV_I2D (<unidirectional association>)
	relation 6538892 --->
	  a role_name "CONV_I2D" init_value "
        new Rop(RegOps.CONV, Type.DOUBLE, StdTypeList.INT, \"conv-i2d\")" class_relation const_relation public
	    comment " {@code r: double; x: int :: r = (double) x} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6539020 // CONV_I2D (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6539148 // CONV_L2D (<unidirectional association>)
	relation 6539020 --->
	  a role_name "CONV_L2D" init_value "
        new Rop(RegOps.CONV, Type.DOUBLE, StdTypeList.LONG, \"conv-l2d\")" class_relation const_relation public
	    comment " {@code r: double; x: long :: r = (double) x} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6539148 // CONV_L2D (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6539276 // CONV_F2D (<unidirectional association>)
	relation 6539148 --->
	  a role_name "CONV_F2D" init_value "
        new Rop(RegOps.CONV, Type.DOUBLE, StdTypeList.FLOAT, \"conv-f2d\")" class_relation const_relation public
	    comment " {@code r: double; x: float :: r = (double) x} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6539276 // CONV_F2D (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6539404 // TO_BYTE (<unidirectional association>)
	relation 6539276 --->
	  a role_name "TO_BYTE" init_value "
        new Rop(RegOps.TO_BYTE, Type.INT, StdTypeList.INT, \"to-byte\")" class_relation const_relation public
	    comment "
{@code r,x: int :: r = (x << 24) >> 24} (Java-style
convert int to byte)

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6539404 // TO_BYTE (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6539532 // TO_CHAR (<unidirectional association>)
	relation 6539404 --->
	  a role_name "TO_CHAR" init_value "
        new Rop(RegOps.TO_CHAR, Type.INT, StdTypeList.INT, \"to-char\")" class_relation const_relation public
	    comment "
{@code r,x: int :: r = x & 0xffff} (Java-style
convert int to char)

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6539532 // TO_CHAR (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6539660 // TO_SHORT (<unidirectional association>)
	relation 6539532 --->
	  a role_name "TO_SHORT" init_value "
        new Rop(RegOps.TO_SHORT, Type.INT, StdTypeList.INT, \"to-short\")" class_relation const_relation public
	    comment "
{@code r,x: int :: r = (x << 16) >> 16} (Java-style
convert int to short)

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6539660 // TO_SHORT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6539788 // RETURN_VOID (<unidirectional association>)
	relation 6539660 --->
	  a role_name "RETURN_VOID" init_value "
        new Rop(RegOps.RETURN, Type.VOID, StdTypeList.EMPTY, Rop.BRANCH_RETURN,
                \"return-void\")" class_relation const_relation public
	    comment " {@code return void} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6539788 // RETURN_VOID (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6539916 // RETURN_INT (<unidirectional association>)
	relation 6539788 --->
	  a role_name "RETURN_INT" init_value "
        new Rop(RegOps.RETURN, Type.VOID, StdTypeList.INT, Rop.BRANCH_RETURN,
                \"return-int\")" class_relation const_relation public
	    comment " {@code x: int; return x} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6539916 // RETURN_INT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6540044 // RETURN_LONG (<unidirectional association>)
	relation 6539916 --->
	  a role_name "RETURN_LONG" init_value "
        new Rop(RegOps.RETURN, Type.VOID, StdTypeList.LONG, Rop.BRANCH_RETURN,
                \"return-long\")" class_relation const_relation public
	    comment " {@code x: long; return x} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6540044 // RETURN_LONG (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6540172 // RETURN_FLOAT (<unidirectional association>)
	relation 6540044 --->
	  a role_name "RETURN_FLOAT" init_value "
        new Rop(RegOps.RETURN, Type.VOID, StdTypeList.FLOAT, Rop.BRANCH_RETURN,
                \"return-float\")" class_relation const_relation public
	    comment " {@code x: float; return x} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6540172 // RETURN_FLOAT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6540300 // RETURN_DOUBLE (<unidirectional association>)
	relation 6540172 --->
	  a role_name "RETURN_DOUBLE" init_value "
        new Rop(RegOps.RETURN, Type.VOID, StdTypeList.DOUBLE,
                Rop.BRANCH_RETURN, \"return-double\")" class_relation const_relation public
	    comment " {@code x: double; return x} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6540300 // RETURN_DOUBLE (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6540428 // RETURN_OBJECT (<unidirectional association>)
	relation 6540300 --->
	  a role_name "RETURN_OBJECT" init_value "
        new Rop(RegOps.RETURN, Type.VOID, StdTypeList.OBJECT,
                Rop.BRANCH_RETURN, \"return-object\")" class_relation const_relation public
	    comment " {@code x: Object; return x} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6540428 // RETURN_OBJECT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6540556 // ARRAY_LENGTH (<unidirectional association>)
	relation 6540428 --->
	  a role_name "ARRAY_LENGTH" init_value "
        new Rop(RegOps.ARRAY_LENGTH, Type.INT, StdTypeList.OBJECT,
                Exceptions.LIST_Error_NullPointerException, \"array-length\")" class_relation const_relation public
	    comment " {@code T: any type; r: int; x: T[]; :: r = x.length} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6540556 // ARRAY_LENGTH (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6540684 // THROW (<unidirectional association>)
	relation 6540556 --->
	  a role_name "THROW" init_value "
        new Rop(RegOps.THROW, Type.VOID, StdTypeList.THROWABLE,
                StdTypeList.THROWABLE, \"throw\")" class_relation const_relation public
	    comment " {@code x: Throwable :: throw(x)} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6540684 // THROW (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6540812 // MONITOR_ENTER (<unidirectional association>)
	relation 6540684 --->
	  a role_name "MONITOR_ENTER" init_value "
        new Rop(RegOps.MONITOR_ENTER, Type.VOID, StdTypeList.OBJECT,
                Exceptions.LIST_Error_NullPointerException, \"monitor-enter\")" class_relation const_relation public
	    comment " {@code x: Object :: monitorenter(x)} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6540812 // MONITOR_ENTER (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6540940 // MONITOR_EXIT (<unidirectional association>)
	relation 6540812 --->
	  a role_name "MONITOR_EXIT" init_value "
        new Rop(RegOps.MONITOR_EXIT, Type.VOID, StdTypeList.OBJECT,
                Exceptions.LIST_Error_Null_IllegalMonitorStateException,
                \"monitor-exit\")" class_relation const_relation public
	    comment " {@code x: Object :: monitorexit(x)} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6540940 // MONITOR_EXIT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6541068 // AGET_INT (<unidirectional association>)
	relation 6540940 --->
	  a role_name "AGET_INT" init_value "
        new Rop(RegOps.AGET, Type.INT, StdTypeList.INTARR_INT,
                Exceptions.LIST_Error_Null_ArrayIndexOutOfBounds,
                \"aget-int\")" class_relation const_relation public
	    comment " {@code r,y: int; x: int[] :: r = x[y]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6541068 // AGET_INT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6541196 // AGET_LONG (<unidirectional association>)
	relation 6541068 --->
	  a role_name "AGET_LONG" init_value "
        new Rop(RegOps.AGET, Type.LONG, StdTypeList.LONGARR_INT,
                Exceptions.LIST_Error_Null_ArrayIndexOutOfBounds,
                \"aget-long\")" class_relation const_relation public
	    comment " {@code r: long; x: long[]; y: int :: r = x[y]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6541196 // AGET_LONG (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6541324 // AGET_FLOAT (<unidirectional association>)
	relation 6541196 --->
	  a role_name "AGET_FLOAT" init_value "
        new Rop(RegOps.AGET, Type.FLOAT, StdTypeList.FLOATARR_INT,
                Exceptions.LIST_Error_Null_ArrayIndexOutOfBounds,
                \"aget-float\")" class_relation const_relation public
	    comment " {@code r: float; x: float[]; y: int :: r = x[y]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6541324 // AGET_FLOAT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6541452 // AGET_DOUBLE (<unidirectional association>)
	relation 6541324 --->
	  a role_name "AGET_DOUBLE" init_value "
        new Rop(RegOps.AGET, Type.DOUBLE, StdTypeList.DOUBLEARR_INT,
                Exceptions.LIST_Error_Null_ArrayIndexOutOfBounds,
                \"aget-double\")" class_relation const_relation public
	    comment " {@code r: double; x: double[]; y: int :: r = x[y]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6541452 // AGET_DOUBLE (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6541580 // AGET_OBJECT (<unidirectional association>)
	relation 6541452 --->
	  a role_name "AGET_OBJECT" init_value "
        new Rop(RegOps.AGET, Type.OBJECT, StdTypeList.OBJECTARR_INT,
                Exceptions.LIST_Error_Null_ArrayIndexOutOfBounds,
                \"aget-object\")" class_relation const_relation public
	    comment " {@code r: Object; x: Object[]; y: int :: r = x[y]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6541580 // AGET_OBJECT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6541708 // AGET_BOOLEAN (<unidirectional association>)
	relation 6541580 --->
	  a role_name "AGET_BOOLEAN" init_value "
        new Rop(RegOps.AGET, Type.INT, StdTypeList.BOOLEANARR_INT,
                Exceptions.LIST_Error_Null_ArrayIndexOutOfBounds,
                \"aget-boolean\")" class_relation const_relation public
	    comment " {@code r: boolean; x: boolean[]; y: int :: r = x[y]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6541708 // AGET_BOOLEAN (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6541836 // AGET_BYTE (<unidirectional association>)
	relation 6541708 --->
	  a role_name "AGET_BYTE" init_value "
        new Rop(RegOps.AGET, Type.INT, StdTypeList.BYTEARR_INT,
                Exceptions.LIST_Error_Null_ArrayIndexOutOfBounds, \"aget-byte\")" class_relation const_relation public
	    comment " {@code r: byte; x: byte[]; y: int :: r = x[y]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6541836 // AGET_BYTE (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6541964 // AGET_CHAR (<unidirectional association>)
	relation 6541836 --->
	  a role_name "AGET_CHAR" init_value "
        new Rop(RegOps.AGET, Type.INT, StdTypeList.CHARARR_INT,
                Exceptions.LIST_Error_Null_ArrayIndexOutOfBounds, \"aget-char\")" class_relation const_relation public
	    comment " {@code r: char; x: char[]; y: int :: r = x[y]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6541964 // AGET_CHAR (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6542092 // AGET_SHORT (<unidirectional association>)
	relation 6541964 --->
	  a role_name "AGET_SHORT" init_value "
        new Rop(RegOps.AGET, Type.INT, StdTypeList.SHORTARR_INT,
                Exceptions.LIST_Error_Null_ArrayIndexOutOfBounds,
                \"aget-short\")" class_relation const_relation public
	    comment " {@code r: short; x: short[]; y: int :: r = x[y]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6542092 // AGET_SHORT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6542220 // APUT_INT (<unidirectional association>)
	relation 6542092 --->
	  a role_name "APUT_INT" init_value "
        new Rop(RegOps.APUT, Type.VOID, StdTypeList.INT_INTARR_INT,
                Exceptions.LIST_Error_Null_ArrayIndexOutOfBounds, \"aput-int\")" class_relation const_relation public
	    comment " {@code x,z: int; y: int[] :: y[z] = x} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6542220 // APUT_INT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6542348 // APUT_LONG (<unidirectional association>)
	relation 6542220 --->
	  a role_name "APUT_LONG" init_value "
        new Rop(RegOps.APUT, Type.VOID, StdTypeList.LONG_LONGARR_INT,
                Exceptions.LIST_Error_Null_ArrayIndexOutOfBounds, \"aput-long\")" class_relation const_relation public
	    comment " {@code x: long; y: long[]; z: int :: y[z] = x} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6542348 // APUT_LONG (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6542476 // APUT_FLOAT (<unidirectional association>)
	relation 6542348 --->
	  a role_name "APUT_FLOAT" init_value "
        new Rop(RegOps.APUT, Type.VOID, StdTypeList.FLOAT_FLOATARR_INT,
                Exceptions.LIST_Error_Null_ArrayIndexOutOfBounds,
                \"aput-float\")" class_relation const_relation public
	    comment " {@code x: float; y: float[]; z: int :: y[z] = x} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6542476 // APUT_FLOAT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6542604 // APUT_DOUBLE (<unidirectional association>)
	relation 6542476 --->
	  a role_name "APUT_DOUBLE" init_value "
        new Rop(RegOps.APUT, Type.VOID, StdTypeList.DOUBLE_DOUBLEARR_INT,
                Exceptions.LIST_Error_Null_ArrayIndexOutOfBounds,
                \"aput-double\")" class_relation const_relation public
	    comment " {@code x: double; y: double[]; z: int :: y[z] = x} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6542604 // APUT_DOUBLE (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6542732 // APUT_OBJECT (<unidirectional association>)
	relation 6542604 --->
	  a role_name "APUT_OBJECT" init_value "
        new Rop(RegOps.APUT, Type.VOID, StdTypeList.OBJECT_OBJECTARR_INT,
                Exceptions.LIST_Error_Null_ArrayIndex_ArrayStore,
                \"aput-object\")" class_relation const_relation public
	    comment " {@code x: Object; y: Object[]; z: int :: y[z] = x} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6542732 // APUT_OBJECT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6542860 // APUT_BOOLEAN (<unidirectional association>)
	relation 6542732 --->
	  a role_name "APUT_BOOLEAN" init_value "
        new Rop(RegOps.APUT, Type.VOID, StdTypeList.INT_BOOLEANARR_INT,
                Exceptions.LIST_Error_Null_ArrayIndex_ArrayStore,
                \"aput-boolean\")" class_relation const_relation public
	    comment " {@code x: boolean; y: boolean[]; z: int :: y[z] = x} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6542860 // APUT_BOOLEAN (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6542988 // APUT_BYTE (<unidirectional association>)
	relation 6542860 --->
	  a role_name "APUT_BYTE" init_value "
        new Rop(RegOps.APUT, Type.VOID, StdTypeList.INT_BYTEARR_INT,
                Exceptions.LIST_Error_Null_ArrayIndex_ArrayStore, \"aput-byte\")" class_relation const_relation public
	    comment " {@code x: byte; y: byte[]; z: int :: y[z] = x} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6542988 // APUT_BYTE (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6543116 // APUT_CHAR (<unidirectional association>)
	relation 6542988 --->
	  a role_name "APUT_CHAR" init_value "
        new Rop(RegOps.APUT, Type.VOID, StdTypeList.INT_CHARARR_INT,
                Exceptions.LIST_Error_Null_ArrayIndex_ArrayStore, \"aput-char\")" class_relation const_relation public
	    comment " {@code x: char; y: char[]; z: int :: y[z] = x} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6543116 // APUT_CHAR (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6543244 // APUT_SHORT (<unidirectional association>)
	relation 6543116 --->
	  a role_name "APUT_SHORT" init_value "
        new Rop(RegOps.APUT, Type.VOID, StdTypeList.INT_SHORTARR_INT,
                Exceptions.LIST_Error_Null_ArrayIndex_ArrayStore,
                \"aput-short\")" class_relation const_relation public
	    comment " {@code x: short; y: short[]; z: int :: y[z] = x} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6543244 // APUT_SHORT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6543372 // NEW_INSTANCE (<unidirectional association>)
	relation 6543244 --->
	  a role_name "NEW_INSTANCE" init_value "
        new Rop(RegOps.NEW_INSTANCE, Type.OBJECT, StdTypeList.EMPTY,
                Exceptions.LIST_Error, \"new-instance\")" class_relation const_relation public
	    comment "
{@code T: any non-array object type :: r =
alloc(T)} (allocate heap space for an object)

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6543372 // NEW_INSTANCE (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6543500 // NEW_ARRAY_INT (<unidirectional association>)
	relation 6543372 --->
	  a role_name "NEW_ARRAY_INT" init_value "
        new Rop(RegOps.NEW_ARRAY, Type.INT_ARRAY, StdTypeList.INT,
                Exceptions.LIST_Error_NegativeArraySizeException,
                \"new-array-int\")" class_relation const_relation public
	    comment " {@code r: int[]; x: int :: r = new int[x]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6543500 // NEW_ARRAY_INT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6543628 // NEW_ARRAY_LONG (<unidirectional association>)
	relation 6543500 --->
	  a role_name "NEW_ARRAY_LONG" init_value "
        new Rop(RegOps.NEW_ARRAY, Type.LONG_ARRAY, StdTypeList.INT,
                Exceptions.LIST_Error_NegativeArraySizeException,
                \"new-array-long\")" class_relation const_relation public
	    comment " {@code r: long[]; x: int :: r = new long[x]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6543628 // NEW_ARRAY_LONG (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6543756 // NEW_ARRAY_FLOAT (<unidirectional association>)
	relation 6543628 --->
	  a role_name "NEW_ARRAY_FLOAT" init_value "
        new Rop(RegOps.NEW_ARRAY, Type.FLOAT_ARRAY, StdTypeList.INT,
                Exceptions.LIST_Error_NegativeArraySizeException,
                \"new-array-float\")" class_relation const_relation public
	    comment " {@code r: float[]; x: int :: r = new float[x]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6543756 // NEW_ARRAY_FLOAT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6543884 // NEW_ARRAY_DOUBLE (<unidirectional association>)
	relation 6543756 --->
	  a role_name "NEW_ARRAY_DOUBLE" init_value "
        new Rop(RegOps.NEW_ARRAY, Type.DOUBLE_ARRAY, StdTypeList.INT,
                Exceptions.LIST_Error_NegativeArraySizeException,
                \"new-array-double\")" class_relation const_relation public
	    comment " {@code r: double[]; x: int :: r = new double[x]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6543884 // NEW_ARRAY_DOUBLE (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6544012 // NEW_ARRAY_BOOLEAN (<unidirectional association>)
	relation 6543884 --->
	  a role_name "NEW_ARRAY_BOOLEAN" init_value "
        new Rop(RegOps.NEW_ARRAY, Type.BOOLEAN_ARRAY, StdTypeList.INT,
                Exceptions.LIST_Error_NegativeArraySizeException,
                \"new-array-boolean\")" class_relation const_relation public
	    comment " {@code r: boolean[]; x: int :: r = new boolean[x]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6544012 // NEW_ARRAY_BOOLEAN (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6544140 // NEW_ARRAY_BYTE (<unidirectional association>)
	relation 6544012 --->
	  a role_name "NEW_ARRAY_BYTE" init_value "
        new Rop(RegOps.NEW_ARRAY, Type.BYTE_ARRAY, StdTypeList.INT,
                Exceptions.LIST_Error_NegativeArraySizeException,
                \"new-array-byte\")" class_relation const_relation public
	    comment " {@code r: byte[]; x: int :: r = new byte[x]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6544140 // NEW_ARRAY_BYTE (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6544268 // NEW_ARRAY_CHAR (<unidirectional association>)
	relation 6544140 --->
	  a role_name "NEW_ARRAY_CHAR" init_value "
        new Rop(RegOps.NEW_ARRAY, Type.CHAR_ARRAY, StdTypeList.INT,
                Exceptions.LIST_Error_NegativeArraySizeException,
                \"new-array-char\")" class_relation const_relation public
	    comment " {@code r: char[]; x: int :: r = new char[x]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6544268 // NEW_ARRAY_CHAR (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6544396 // NEW_ARRAY_SHORT (<unidirectional association>)
	relation 6544268 --->
	  a role_name "NEW_ARRAY_SHORT" init_value "
        new Rop(RegOps.NEW_ARRAY, Type.SHORT_ARRAY, StdTypeList.INT,
                Exceptions.LIST_Error_NegativeArraySizeException,
                \"new-array-short\")" class_relation const_relation public
	    comment " {@code r: short[]; x: int :: r = new short[x]} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6544396 // NEW_ARRAY_SHORT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6544524 // CHECK_CAST (<unidirectional association>)
	relation 6544396 --->
	  a role_name "CHECK_CAST" init_value "
        new Rop(RegOps.CHECK_CAST, Type.VOID, StdTypeList.OBJECT,
                Exceptions.LIST_Error_ClassCastException, \"check-cast\")" class_relation const_relation public
	    comment "
{@code T: any non-array object type; x: Object :: (T) x} (can
throw {@code ClassCastException})

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6544524 // CHECK_CAST (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6544652 // INSTANCE_OF (<unidirectional association>)
	relation 6544524 --->
	  a role_name "INSTANCE_OF" init_value "
        new Rop(RegOps.INSTANCE_OF, Type.INT, StdTypeList.OBJECT,
                Exceptions.LIST_Error, \"instance-of\")" class_relation const_relation public
	    comment "
{@code T: any non-array object type; x: Object :: x instanceof
T}. Note: This is listed as throwing {@code Error}
explicitly because the op <i>can</i> throw, but there are no
other predefined exceptions for it.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6544652 // INSTANCE_OF (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6544780 // GET_FIELD_INT (<unidirectional association>)
	relation 6544652 --->
	  a role_name "GET_FIELD_INT" init_value "
        new Rop(RegOps.GET_FIELD, Type.INT, StdTypeList.OBJECT,
                Exceptions.LIST_Error_NullPointerException, \"get-field-int\")" class_relation const_relation public
	    comment "
{@code r: int; x: Object; f: instance field spec of
type int :: r = x.f}

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6544780 // GET_FIELD_INT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6544908 // GET_FIELD_LONG (<unidirectional association>)
	relation 6544780 --->
	  a role_name "GET_FIELD_LONG" init_value "
        new Rop(RegOps.GET_FIELD, Type.LONG, StdTypeList.OBJECT,
                Exceptions.LIST_Error_NullPointerException, \"get-field-long\")" class_relation const_relation public
	    comment "
{@code r: long; x: Object; f: instance field spec of
type long :: r = x.f}

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6544908 // GET_FIELD_LONG (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6545036 // GET_FIELD_FLOAT (<unidirectional association>)
	relation 6544908 --->
	  a role_name "GET_FIELD_FLOAT" init_value "
        new Rop(RegOps.GET_FIELD, Type.FLOAT, StdTypeList.OBJECT,
                Exceptions.LIST_Error_NullPointerException,
                \"get-field-float\")" class_relation const_relation public
	    comment "
{@code r: float; x: Object; f: instance field spec of
type float :: r = x.f}

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6545036 // GET_FIELD_FLOAT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6545164 // GET_FIELD_DOUBLE (<unidirectional association>)
	relation 6545036 --->
	  a role_name "GET_FIELD_DOUBLE" init_value "
        new Rop(RegOps.GET_FIELD, Type.DOUBLE, StdTypeList.OBJECT,
                Exceptions.LIST_Error_NullPointerException,
                \"get-field-double\")" class_relation const_relation public
	    comment "
{@code r: double; x: Object; f: instance field spec of
type double :: r = x.f}

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6545164 // GET_FIELD_DOUBLE (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6545292 // GET_FIELD_OBJECT (<unidirectional association>)
	relation 6545164 --->
	  a role_name "GET_FIELD_OBJECT" init_value "
        new Rop(RegOps.GET_FIELD, Type.OBJECT, StdTypeList.OBJECT,
                Exceptions.LIST_Error_NullPointerException,
                \"get-field-object\")" class_relation const_relation public
	    comment "
{@code r: Object; x: Object; f: instance field spec of
type Object :: r = x.f}

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6545292 // GET_FIELD_OBJECT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6545420 // GET_FIELD_BOOLEAN (<unidirectional association>)
	relation 6545292 --->
	  a role_name "GET_FIELD_BOOLEAN" init_value "
        new Rop(RegOps.GET_FIELD, Type.INT, StdTypeList.OBJECT,
                Exceptions.LIST_Error_NullPointerException,
                \"get-field-boolean\")" class_relation const_relation public
	    comment "
{@code r: boolean; x: Object; f: instance field spec of
type boolean :: r = x.f}

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6545420 // GET_FIELD_BOOLEAN (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6545548 // GET_FIELD_BYTE (<unidirectional association>)
	relation 6545420 --->
	  a role_name "GET_FIELD_BYTE" init_value "
        new Rop(RegOps.GET_FIELD, Type.INT, StdTypeList.OBJECT,
                Exceptions.LIST_Error_NullPointerException,
                \"get-field-byte\")" class_relation const_relation public
	    comment "
{@code r: byte; x: Object; f: instance field spec of
type byte :: r = x.f}

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6545548 // GET_FIELD_BYTE (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6545676 // GET_FIELD_CHAR (<unidirectional association>)
	relation 6545548 --->
	  a role_name "GET_FIELD_CHAR" init_value "
        new Rop(RegOps.GET_FIELD, Type.INT, StdTypeList.OBJECT,
                Exceptions.LIST_Error_NullPointerException,
                \"get-field-char\")" class_relation const_relation public
	    comment "
{@code r: char; x: Object; f: instance field spec of
type char :: r = x.f}

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6545676 // GET_FIELD_CHAR (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6545804 // GET_FIELD_SHORT (<unidirectional association>)
	relation 6545676 --->
	  a role_name "GET_FIELD_SHORT" init_value "
        new Rop(RegOps.GET_FIELD, Type.INT, StdTypeList.OBJECT,
                Exceptions.LIST_Error_NullPointerException,
                \"get-field-short\")" class_relation const_relation public
	    comment "
{@code r: short; x: Object; f: instance field spec of
type short :: r = x.f}

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6545804 // GET_FIELD_SHORT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6545932 // GET_STATIC_INT (<unidirectional association>)
	relation 6545804 --->
	  a role_name "GET_STATIC_INT" init_value "
        new Rop(RegOps.GET_STATIC, Type.INT, StdTypeList.EMPTY,
                Exceptions.LIST_Error, \"get-static-int\")" class_relation const_relation public
	    comment " {@code r: int; f: static field spec of type int :: r = f} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6545932 // GET_STATIC_INT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6546060 // GET_STATIC_LONG (<unidirectional association>)
	relation 6545932 --->
	  a role_name "GET_STATIC_LONG" init_value "
        new Rop(RegOps.GET_STATIC, Type.LONG, StdTypeList.EMPTY,
                Exceptions.LIST_Error, \"get-static-long\")" class_relation const_relation public
	    comment " {@code r: long; f: static field spec of type long :: r = f} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6546060 // GET_STATIC_LONG (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6546188 // GET_STATIC_FLOAT (<unidirectional association>)
	relation 6546060 --->
	  a role_name "GET_STATIC_FLOAT" init_value "
        new Rop(RegOps.GET_STATIC, Type.FLOAT, StdTypeList.EMPTY,
                Exceptions.LIST_Error, \"get-static-float\")" class_relation const_relation public
	    comment " {@code r: float; f: static field spec of type float :: r = f} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6546188 // GET_STATIC_FLOAT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6546316 // GET_STATIC_DOUBLE (<unidirectional association>)
	relation 6546188 --->
	  a role_name "GET_STATIC_DOUBLE" init_value "
        new Rop(RegOps.GET_STATIC, Type.DOUBLE, StdTypeList.EMPTY,
                Exceptions.LIST_Error, \"get-static-double\")" class_relation const_relation public
	    comment " {@code r: double; f: static field spec of type double :: r = f} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6546316 // GET_STATIC_DOUBLE (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6546444 // GET_STATIC_OBJECT (<unidirectional association>)
	relation 6546316 --->
	  a role_name "GET_STATIC_OBJECT" init_value "
        new Rop(RegOps.GET_STATIC, Type.OBJECT, StdTypeList.EMPTY,
                Exceptions.LIST_Error, \"get-static-object\")" class_relation const_relation public
	    comment " {@code r: Object; f: static field spec of type Object :: r = f} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6546444 // GET_STATIC_OBJECT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6546572 // GET_STATIC_BOOLEAN (<unidirectional association>)
	relation 6546444 --->
	  a role_name "GET_STATIC_BOOLEAN" init_value "
        new Rop(RegOps.GET_STATIC, Type.INT, StdTypeList.EMPTY,
                Exceptions.LIST_Error, \"get-field-boolean\")" class_relation const_relation public
	    comment " {@code r: boolean; f: static field spec of type boolean :: r = f} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6546572 // GET_STATIC_BOOLEAN (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6546700 // GET_STATIC_BYTE (<unidirectional association>)
	relation 6546572 --->
	  a role_name "GET_STATIC_BYTE" init_value "
        new Rop(RegOps.GET_STATIC, Type.INT, StdTypeList.EMPTY,
                Exceptions.LIST_Error, \"get-field-byte\")" class_relation const_relation public
	    comment " {@code r: byte; f: static field spec of type byte :: r = f} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6546700 // GET_STATIC_BYTE (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6546828 // GET_STATIC_CHAR (<unidirectional association>)
	relation 6546700 --->
	  a role_name "GET_STATIC_CHAR" init_value "
        new Rop(RegOps.GET_STATIC, Type.INT, StdTypeList.EMPTY,
                Exceptions.LIST_Error, \"get-field-char\")" class_relation const_relation public
	    comment " {@code r: char; f: static field spec of type char :: r = f} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6546828 // GET_STATIC_CHAR (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6546956 // GET_STATIC_SHORT (<unidirectional association>)
	relation 6546828 --->
	  a role_name "GET_STATIC_SHORT" init_value "
        new Rop(RegOps.GET_STATIC, Type.INT, StdTypeList.EMPTY,
                Exceptions.LIST_Error, \"get-field-short\")" class_relation const_relation public
	    comment " {@code r: short; f: static field spec of type short :: r = f} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6546956 // GET_STATIC_SHORT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6547084 // PUT_FIELD_INT (<unidirectional association>)
	relation 6546956 --->
	  a role_name "PUT_FIELD_INT" init_value "
        new Rop(RegOps.PUT_FIELD, Type.VOID, StdTypeList.INT_OBJECT,
                Exceptions.LIST_Error_NullPointerException, \"put-field-int\")" class_relation const_relation public
	    comment "
{@code x: int; y: Object; f: instance field spec of type
int :: y.f = x}

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6547084 // PUT_FIELD_INT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6547212 // PUT_FIELD_LONG (<unidirectional association>)
	relation 6547084 --->
	  a role_name "PUT_FIELD_LONG" init_value "
        new Rop(RegOps.PUT_FIELD, Type.VOID, StdTypeList.LONG_OBJECT,
                Exceptions.LIST_Error_NullPointerException, \"put-field-long\")" class_relation const_relation public
	    comment "
{@code x: long; y: Object; f: instance field spec of type
long :: y.f = x}

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6547212 // PUT_FIELD_LONG (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6547340 // PUT_FIELD_FLOAT (<unidirectional association>)
	relation 6547212 --->
	  a role_name "PUT_FIELD_FLOAT" init_value "
        new Rop(RegOps.PUT_FIELD, Type.VOID, StdTypeList.FLOAT_OBJECT,
                Exceptions.LIST_Error_NullPointerException,
                \"put-field-float\")" class_relation const_relation public
	    comment "
{@code x: float; y: Object; f: instance field spec of type
float :: y.f = x}

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6547340 // PUT_FIELD_FLOAT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6547468 // PUT_FIELD_DOUBLE (<unidirectional association>)
	relation 6547340 --->
	  a role_name "PUT_FIELD_DOUBLE" init_value "
        new Rop(RegOps.PUT_FIELD, Type.VOID, StdTypeList.DOUBLE_OBJECT,
                Exceptions.LIST_Error_NullPointerException,
                \"put-field-double\")" class_relation const_relation public
	    comment "
{@code x: double; y: Object; f: instance field spec of type
double :: y.f = x}

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6547468 // PUT_FIELD_DOUBLE (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6547596 // PUT_FIELD_OBJECT (<unidirectional association>)
	relation 6547468 --->
	  a role_name "PUT_FIELD_OBJECT" init_value "
        new Rop(RegOps.PUT_FIELD, Type.VOID, StdTypeList.OBJECT_OBJECT,
                Exceptions.LIST_Error_NullPointerException,
                \"put-field-object\")" class_relation const_relation public
	    comment "
{@code x: Object; y: Object; f: instance field spec of type
Object :: y.f = x}

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6547596 // PUT_FIELD_OBJECT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6547724 // PUT_FIELD_BOOLEAN (<unidirectional association>)
	relation 6547596 --->
	  a role_name "PUT_FIELD_BOOLEAN" init_value "
        new Rop(RegOps.PUT_FIELD, Type.VOID, StdTypeList.INT_OBJECT,
                Exceptions.LIST_Error_NullPointerException,
                \"put-field-boolean\")" class_relation const_relation public
	    comment "
{@code x: int; y: Object; f: instance field spec of type
boolean :: y.f = x}

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6547724 // PUT_FIELD_BOOLEAN (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6547852 // PUT_FIELD_BYTE (<unidirectional association>)
	relation 6547724 --->
	  a role_name "PUT_FIELD_BYTE" init_value "
        new Rop(RegOps.PUT_FIELD, Type.VOID, StdTypeList.INT_OBJECT,
                Exceptions.LIST_Error_NullPointerException,
                \"put-field-byte\")" class_relation const_relation public
	    comment "
{@code x: int; y: Object; f: instance field spec of type
byte :: y.f = x}

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6547852 // PUT_FIELD_BYTE (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6547980 // PUT_FIELD_CHAR (<unidirectional association>)
	relation 6547852 --->
	  a role_name "PUT_FIELD_CHAR" init_value "
        new Rop(RegOps.PUT_FIELD, Type.VOID, StdTypeList.INT_OBJECT,
                Exceptions.LIST_Error_NullPointerException,
                \"put-field-char\")" class_relation const_relation public
	    comment "
{@code x: int; y: Object; f: instance field spec of type
char :: y.f = x}

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6547980 // PUT_FIELD_CHAR (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6548108 // PUT_FIELD_SHORT (<unidirectional association>)
	relation 6547980 --->
	  a role_name "PUT_FIELD_SHORT" init_value "
        new Rop(RegOps.PUT_FIELD, Type.VOID, StdTypeList.INT_OBJECT,
                Exceptions.LIST_Error_NullPointerException,
                \"put-field-short\")" class_relation const_relation public
	    comment "
{@code x: int; y: Object; f: instance field spec of type
short :: y.f = x}

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6548108 // PUT_FIELD_SHORT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6548236 // PUT_STATIC_INT (<unidirectional association>)
	relation 6548108 --->
	  a role_name "PUT_STATIC_INT" init_value "
        new Rop(RegOps.PUT_STATIC, Type.VOID, StdTypeList.INT,
                Exceptions.LIST_Error, \"put-static-int\")" class_relation const_relation public
	    comment " {@code f: static field spec of type int; x: int :: f = x} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6548236 // PUT_STATIC_INT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6548364 // PUT_STATIC_LONG (<unidirectional association>)
	relation 6548236 --->
	  a role_name "PUT_STATIC_LONG" init_value "
        new Rop(RegOps.PUT_STATIC, Type.VOID, StdTypeList.LONG,
                Exceptions.LIST_Error, \"put-static-long\")" class_relation const_relation public
	    comment " {@code f: static field spec of type long; x: long :: f = x} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6548364 // PUT_STATIC_LONG (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6548492 // PUT_STATIC_FLOAT (<unidirectional association>)
	relation 6548364 --->
	  a role_name "PUT_STATIC_FLOAT" init_value "
        new Rop(RegOps.PUT_STATIC, Type.VOID, StdTypeList.FLOAT,
                Exceptions.LIST_Error, \"put-static-float\")" class_relation const_relation public
	    comment " {@code f: static field spec of type float; x: float :: f = x} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6548492 // PUT_STATIC_FLOAT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6548620 // PUT_STATIC_DOUBLE (<unidirectional association>)
	relation 6548492 --->
	  a role_name "PUT_STATIC_DOUBLE" init_value "
        new Rop(RegOps.PUT_STATIC, Type.VOID, StdTypeList.DOUBLE,
                Exceptions.LIST_Error, \"put-static-double\")" class_relation const_relation public
	    comment " {@code f: static field spec of type double; x: double :: f = x} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6548620 // PUT_STATIC_DOUBLE (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6548748 // PUT_STATIC_OBJECT (<unidirectional association>)
	relation 6548620 --->
	  a role_name "PUT_STATIC_OBJECT" init_value "
        new Rop(RegOps.PUT_STATIC, Type.VOID, StdTypeList.OBJECT,
                Exceptions.LIST_Error, \"put-static-object\")" class_relation const_relation public
	    comment " {@code f: static field spec of type Object; x: Object :: f = x} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6548748 // PUT_STATIC_OBJECT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6548876 // PUT_STATIC_BOOLEAN (<unidirectional association>)
	relation 6548748 --->
	  a role_name "PUT_STATIC_BOOLEAN" init_value "
        new Rop(RegOps.PUT_STATIC, Type.VOID, StdTypeList.INT,
                Exceptions.LIST_Error, \"put-static-boolean\")" class_relation const_relation public
	    comment "
{@code f: static field spec of type boolean; x: boolean :: f =
x}

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6548876 // PUT_STATIC_BOOLEAN (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6549004 // PUT_STATIC_BYTE (<unidirectional association>)
	relation 6548876 --->
	  a role_name "PUT_STATIC_BYTE" init_value "
        new Rop(RegOps.PUT_STATIC, Type.VOID, StdTypeList.INT,
                Exceptions.LIST_Error, \"put-static-byte\")" class_relation const_relation public
	    comment " {@code f: static field spec of type byte; x: byte :: f = x} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6549004 // PUT_STATIC_BYTE (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6549132 // PUT_STATIC_CHAR (<unidirectional association>)
	relation 6549004 --->
	  a role_name "PUT_STATIC_CHAR" init_value "
        new Rop(RegOps.PUT_STATIC, Type.VOID, StdTypeList.INT,
                Exceptions.LIST_Error, \"put-static-char\")" class_relation const_relation public
	    comment " {@code f: static field spec of type char; x: char :: f = x} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6549132 // PUT_STATIC_CHAR (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6549260 // PUT_STATIC_SHORT (<unidirectional association>)
	relation 6549132 --->
	  a role_name "PUT_STATIC_SHORT" init_value "
        new Rop(RegOps.PUT_STATIC, Type.VOID, StdTypeList.INT,
                Exceptions.LIST_Error, \"put-static-short\")" class_relation const_relation public
	    comment " {@code f: static field spec of type short; x: short :: f = x} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6549260 // PUT_STATIC_SHORT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6549388 // MARK_LOCAL_INT (<unidirectional association>)
	relation 6549260 --->
	  a role_name "MARK_LOCAL_INT" init_value "
            new Rop (RegOps.MARK_LOCAL, Type.VOID,
                    StdTypeList.INT, \"mark-local-int\")" class_relation const_relation public
	    comment " {@code x: Int :: local variable begins in x} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6549388 // MARK_LOCAL_INT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6549516 // MARK_LOCAL_LONG (<unidirectional association>)
	relation 6549388 --->
	  a role_name "MARK_LOCAL_LONG" init_value "
            new Rop (RegOps.MARK_LOCAL, Type.VOID,
                    StdTypeList.LONG, \"mark-local-long\")" class_relation const_relation public
	    comment " {@code x: Long :: local variable begins in x} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6549516 // MARK_LOCAL_LONG (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6549644 // MARK_LOCAL_FLOAT (<unidirectional association>)
	relation 6549516 --->
	  a role_name "MARK_LOCAL_FLOAT" init_value "
            new Rop (RegOps.MARK_LOCAL, Type.VOID,
                    StdTypeList.FLOAT, \"mark-local-float\")" class_relation const_relation public
	    comment " {@code x: Float :: local variable begins in x} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6549644 // MARK_LOCAL_FLOAT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6549772 // MARK_LOCAL_DOUBLE (<unidirectional association>)
	relation 6549644 --->
	  a role_name "MARK_LOCAL_DOUBLE" init_value "
            new Rop (RegOps.MARK_LOCAL, Type.VOID,
                    StdTypeList.DOUBLE, \"mark-local-double\")" class_relation const_relation public
	    comment " {@code x: Double :: local variable begins in x} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6549772 // MARK_LOCAL_DOUBLE (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6549900 // MARK_LOCAL_OBJECT (<unidirectional association>)
	relation 6549772 --->
	  a role_name "MARK_LOCAL_OBJECT" init_value "
            new Rop (RegOps.MARK_LOCAL, Type.VOID,
                    StdTypeList.OBJECT, \"mark-local-object\")" class_relation const_relation public
	    comment " {@code x: Object :: local variable begins in x} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6549900 // MARK_LOCAL_OBJECT (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      classrelation 6550028 // FILL_ARRAY_DATA (<unidirectional association>)
	relation 6549900 --->
	  a role_name "FILL_ARRAY_DATA" init_value "
        new Rop(RegOps.FILL_ARRAY_DATA, Type.VOID, StdTypeList.EMPTY,
                \"fill-array-data\")" class_relation const_relation public
	    comment " {@code T: Any primitive type; v0..vx: T :: {v0, ..., vx}} 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 6550028 // FILL_ARRAY_DATA (<unidirectional association>)
	  b parent class_ref 3405452 // Rop
      end

      operation 14710668 "ropFor"
	class_operation public return_type class_ref 3405452 // Rop
	nparams 4
	  param in name "opcode" explicit_type "int"
	  param inout name "dest" type class_ref 3424012 // TypeBearer
	  param inout name "sources" type class_ref 3406220 // TypeList
	  param inout name "cst" type class_ref 3400076 // Constant
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the appropriate rop for the given opcode, destination,
and sources. The result is typically, but not necessarily, a
shared instance.

<p><b>Note:</b> This method does not do complete error checking on
its arguments, and so it may return an instance which seemed \"right
enough\" even though in actuality the passed arguments don't quite
match what is returned. TODO: Revisit this issue.</p>

@param opcode the opcode
@param dest {@code non-null;} destination (result) type, or
{@link Type#VOID} if none
@param sources {@code non-null;} list of source types
@param cst {@code null-ok;} associated constant, if any
@return {@code non-null;} an appropriate instance"
      end

      operation 14710796 "opMove"
	class_operation public return_type class_ref 3405452 // Rop
	nparams 1
	  param inout name "type" type class_ref 3424012 // TypeBearer
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the appropriate {@code move} rop for the given type. The
result is a shared instance.

@param type {@code non-null;} type of value being moved
@return {@code non-null;} an appropriate instance"
      end

      operation 14710924 "opMoveParam"
	class_operation public return_type class_ref 3405452 // Rop
	nparams 1
	  param inout name "type" type class_ref 3424012 // TypeBearer
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the appropriate {@code move-param} rop for the
given type. The result is a shared instance.

@param type {@code non-null;} type of value being moved
@return {@code non-null;} an appropriate instance"
      end

      operation 14711052 "opMoveException"
	class_operation public return_type class_ref 3405452 // Rop
	nparams 1
	  param inout name "type" type class_ref 3424012 // TypeBearer
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the appropriate {@code move-exception} rop for the
given type. The result may be a shared instance.

@param type {@code non-null;} type of the exception
@return {@code non-null;} an appropriate instance"
      end

      operation 14711180 "opMoveResult"
	class_operation public return_type class_ref 3405452 // Rop
	nparams 1
	  param inout name "type" type class_ref 3424012 // TypeBearer
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the appropriate {@code move-result} rop for the
given type. The result may be a shared instance.

@param type {@code non-null;} type of the parameter
@return {@code non-null;} an appropriate instance"
      end

      operation 14711308 "opMoveResultPseudo"
	class_operation public return_type class_ref 3405452 // Rop
	nparams 1
	  param inout name "type" type class_ref 3424012 // TypeBearer
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the appropriate {@code move-result-pseudo} rop for the
given type. The result may be a shared instance.

@param type {@code non-null;} type of the parameter
@return {@code non-null;} an appropriate instance"
      end

      operation 14711436 "opConst"
	class_operation public return_type class_ref 3405452 // Rop
	nparams 1
	  param inout name "type" type class_ref 3424012 // TypeBearer
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the appropriate {@code const} rop for the given
type. The result is a shared instance.

@param type {@code non-null;} type of the constant
@return {@code non-null;} an appropriate instance"
      end

      operation 14711564 "opIfEq"
	class_operation public return_type class_ref 3405452 // Rop
	nparams 1
	  param inout name "types" type class_ref 3406220 // TypeList
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the appropriate {@code if-eq} rop for the given
sources. The result is a shared instance.

@param types {@code non-null;} source types
@return {@code non-null;} an appropriate instance"
      end

      operation 14711692 "opIfNe"
	class_operation public return_type class_ref 3405452 // Rop
	nparams 1
	  param inout name "types" type class_ref 3406220 // TypeList
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the appropriate {@code if-ne} rop for the given
sources. The result is a shared instance.

@param types {@code non-null;} source types
@return {@code non-null;} an appropriate instance"
      end

      operation 14711820 "opIfLt"
	class_operation public return_type class_ref 3405452 // Rop
	nparams 1
	  param inout name "types" type class_ref 3406220 // TypeList
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the appropriate {@code if-lt} rop for the given
sources. The result is a shared instance.

@param types {@code non-null;} source types
@return {@code non-null;} an appropriate instance"
      end

      operation 14711948 "opIfGe"
	class_operation public return_type class_ref 3405452 // Rop
	nparams 1
	  param inout name "types" type class_ref 3406220 // TypeList
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the appropriate {@code if-ge} rop for the given
sources. The result is a shared instance.

@param types {@code non-null;} source types
@return {@code non-null;} an appropriate instance"
      end

      operation 14712076 "opIfGt"
	class_operation public return_type class_ref 3405452 // Rop
	nparams 1
	  param inout name "types" type class_ref 3406220 // TypeList
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the appropriate {@code if-gt} rop for the given
sources. The result is a shared instance.

@param types {@code non-null;} source types
@return {@code non-null;} an appropriate instance"
      end

      operation 14712204 "opIfLe"
	class_operation public return_type class_ref 3405452 // Rop
	nparams 1
	  param inout name "types" type class_ref 3406220 // TypeList
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the appropriate {@code if-le} rop for the given
sources. The result is a shared instance.

@param types {@code non-null;} source types
@return {@code non-null;} an appropriate instance"
      end

      operation 14712332 "pickIf"
	class_operation private return_type class_ref 3405452 // Rop
	nparams 5
	  param inout name "types" type class_ref 3406220 // TypeList
	  param inout name "intZ" type class_ref 3405452 // Rop
	  param inout name "objZ" type class_ref 3405452 // Rop
	  param inout name "intInt" type class_ref 3405452 // Rop
	  param inout name "objObj" type class_ref 3405452 // Rop
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Helper for all the {@code if*}-related methods, which
checks types and picks one of the four variants, throwing if
there's a problem.

@param types {@code non-null;} the types
@param intZ {@code non-null;} the int-to-0 comparison
@param objZ {@code null-ok;} the object-to-null comparison
@param intInt {@code non-null;} the int-to-int comparison
@param objObj {@code non-null;} the object-to-object comparison
@return {@code non-null;} the appropriate instance"
      end

      operation 14712460 "opAdd"
	class_operation public return_type class_ref 3405452 // Rop
	nparams 1
	  param inout name "types" type class_ref 3406220 // TypeList
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the appropriate {@code add} rop for the given
types. The result is a shared instance.

@param types {@code non-null;} types of the sources
@return {@code non-null;} an appropriate instance"
      end

      operation 14712588 "opSub"
	class_operation public return_type class_ref 3405452 // Rop
	nparams 1
	  param inout name "types" type class_ref 3406220 // TypeList
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the appropriate {@code sub} rop for the given
types. The result is a shared instance.

@param types {@code non-null;} types of the sources
@return {@code non-null;} an appropriate instance"
      end

      operation 14712716 "opMul"
	class_operation public return_type class_ref 3405452 // Rop
	nparams 1
	  param inout name "types" type class_ref 3406220 // TypeList
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the appropriate {@code mul} rop for the given
types. The result is a shared instance.

@param types {@code non-null;} types of the sources
@return {@code non-null;} an appropriate instance"
      end

      operation 14712844 "opDiv"
	class_operation public return_type class_ref 3405452 // Rop
	nparams 1
	  param inout name "types" type class_ref 3406220 // TypeList
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the appropriate {@code div} rop for the given
types. The result is a shared instance.

@param types {@code non-null;} types of the sources
@return {@code non-null;} an appropriate instance"
      end

      operation 14712972 "opRem"
	class_operation public return_type class_ref 3405452 // Rop
	nparams 1
	  param inout name "types" type class_ref 3406220 // TypeList
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the appropriate {@code rem} rop for the given
types. The result is a shared instance.

@param types {@code non-null;} types of the sources
@return {@code non-null;} an appropriate instance"
      end

      operation 14713100 "opAnd"
	class_operation public return_type class_ref 3405452 // Rop
	nparams 1
	  param inout name "types" type class_ref 3406220 // TypeList
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the appropriate {@code and} rop for the given
types. The result is a shared instance.

@param types {@code non-null;} types of the sources
@return {@code non-null;} an appropriate instance"
      end

      operation 14713228 "opOr"
	class_operation public return_type class_ref 3405452 // Rop
	nparams 1
	  param inout name "types" type class_ref 3406220 // TypeList
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the appropriate {@code or} rop for the given
types. The result is a shared instance.

@param types {@code non-null;} types of the sources
@return {@code non-null;} an appropriate instance"
      end

      operation 14713356 "opXor"
	class_operation public return_type class_ref 3405452 // Rop
	nparams 1
	  param inout name "types" type class_ref 3406220 // TypeList
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the appropriate {@code xor} rop for the given
types. The result is a shared instance.

@param types {@code non-null;} types of the sources
@return {@code non-null;} an appropriate instance"
      end

      operation 14713484 "opShl"
	class_operation public return_type class_ref 3405452 // Rop
	nparams 1
	  param inout name "types" type class_ref 3406220 // TypeList
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the appropriate {@code shl} rop for the given
types. The result is a shared instance.

@param types {@code non-null;} types of the sources
@return {@code non-null;} an appropriate instance"
      end

      operation 14713612 "opShr"
	class_operation public return_type class_ref 3405452 // Rop
	nparams 1
	  param inout name "types" type class_ref 3406220 // TypeList
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the appropriate {@code shr} rop for the given
types. The result is a shared instance.

@param types {@code non-null;} types of the sources
@return {@code non-null;} an appropriate instance"
      end

      operation 14713740 "opUshr"
	class_operation public return_type class_ref 3405452 // Rop
	nparams 1
	  param inout name "types" type class_ref 3406220 // TypeList
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the appropriate {@code ushr} rop for the given
types. The result is a shared instance.

@param types {@code non-null;} types of the sources
@return {@code non-null;} an appropriate instance"
      end

      operation 14713868 "pickBinaryOp"
	class_operation private return_type class_ref 3405452 // Rop
	nparams 9
	  param inout name "types" type class_ref 3406220 // TypeList
	  param inout name "int1" type class_ref 3405452 // Rop
	  param inout name "long1" type class_ref 3405452 // Rop
	  param inout name "float1" type class_ref 3405452 // Rop
	  param inout name "double1" type class_ref 3405452 // Rop
	  param inout name "int2" type class_ref 3405452 // Rop
	  param inout name "long2" type class_ref 3405452 // Rop
	  param inout name "float2" type class_ref 3405452 // Rop
	  param inout name "double2" type class_ref 3405452 // Rop
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the appropriate binary arithmetic rop for the given type
and arguments. The result is a shared instance.

@param types {@code non-null;} sources of the operation
@param int1 {@code non-null;} the int-to-constant rop
@param long1 {@code non-null;} the long-to-constant rop
@param float1 {@code null-ok;} the float-to-constant rop, if any
@param double1 {@code null-ok;} the double-to-constant rop, if any
@param int2 {@code non-null;} the int-to-int rop
@param long2 {@code non-null;} the long-to-long or long-to-int rop
@param float2 {@code null-ok;} the float-to-float rop, if any
@param double2 {@code null-ok;} the double-to-double rop, if any
@return {@code non-null;} an appropriate instance"
      end

      operation 14713996 "opNeg"
	class_operation public return_type class_ref 3405452 // Rop
	nparams 1
	  param inout name "type" type class_ref 3424012 // TypeBearer
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the appropriate {@code neg} rop for the given type. The
result is a shared instance.

@param type {@code non-null;} type of value being operated on
@return {@code non-null;} an appropriate instance"
      end

      operation 14714124 "opNot"
	class_operation public return_type class_ref 3405452 // Rop
	nparams 1
	  param inout name "type" type class_ref 3424012 // TypeBearer
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the appropriate {@code not} rop for the given type. The
result is a shared instance.

@param type {@code non-null;} type of value being operated on
@return {@code non-null;} an appropriate instance"
      end

      operation 14714252 "opCmpl"
	class_operation public return_type class_ref 3405452 // Rop
	nparams 1
	  param inout name "type" type class_ref 3424012 // TypeBearer
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the appropriate {@code cmpl} rop for the given type. The
result is a shared instance.

@param type {@code non-null;} type of value being compared
@return {@code non-null;} an appropriate instance"
      end

      operation 14714380 "opCmpg"
	class_operation public return_type class_ref 3405452 // Rop
	nparams 1
	  param inout name "type" type class_ref 3424012 // TypeBearer
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the appropriate {@code cmpg} rop for the given type. The
result is a shared instance.

@param type {@code non-null;} type of value being compared
@return {@code non-null;} an appropriate instance"
      end

      operation 14714508 "opConv"
	class_operation public return_type class_ref 3405452 // Rop
	nparams 2
	  param inout name "dest" type class_ref 3424012 // TypeBearer
	  param inout name "source" type class_ref 3424012 // TypeBearer
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the appropriate {@code conv} rop for the given types. The
result is a shared instance.

@param dest {@code non-null;} target value type
@param source {@code non-null;} source value type
@return {@code non-null;} an appropriate instance"
      end

      operation 14714636 "opReturn"
	class_operation public return_type class_ref 3405452 // Rop
	nparams 1
	  param inout name "type" type class_ref 3424012 // TypeBearer
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the appropriate {@code return} rop for the given type. The
result is a shared instance.

@param type {@code non-null;} type of value being returned
@return {@code non-null;} an appropriate instance"
      end

      operation 14714764 "opAget"
	class_operation public return_type class_ref 3405452 // Rop
	nparams 1
	  param inout name "type" type class_ref 3424012 // TypeBearer
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the appropriate {@code aget} rop for the given type. The
result is a shared instance.

@param type {@code non-null;} element type of array being accessed
@return {@code non-null;} an appropriate instance"
      end

      operation 14714892 "opAput"
	class_operation public return_type class_ref 3405452 // Rop
	nparams 1
	  param inout name "type" type class_ref 3424012 // TypeBearer
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the appropriate {@code aput} rop for the given type. The
result is a shared instance.

@param type {@code non-null;} element type of array being accessed
@return {@code non-null;} an appropriate instance"
      end

      operation 14715020 "opNewArray"
	class_operation public return_type class_ref 3405452 // Rop
	nparams 1
	  param inout name "arrayType" type class_ref 3424012 // TypeBearer
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the appropriate {@code new-array} rop for the given
type. The result is a shared instance.

@param arrayType {@code non-null;} array type of array being created
@return {@code non-null;} an appropriate instance"
      end

      operation 14715148 "opFilledNewArray"
	class_operation public return_type class_ref 3405452 // Rop
	nparams 2
	  param inout name "arrayType" type class_ref 3424012 // TypeBearer
	  param in name "count" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the appropriate {@code filled-new-array} rop for the given
type. The result may be a shared instance.

@param arrayType {@code non-null;} type of array being created
@param count {@code >= 0;} number of elements that the array should have
@return {@code non-null;} an appropriate instance"
      end

      operation 14715276 "opGetField"
	class_operation public return_type class_ref 3405452 // Rop
	nparams 1
	  param inout name "type" type class_ref 3424012 // TypeBearer
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the appropriate {@code get-field} rop for the given
type. The result is a shared instance.

@param type {@code non-null;} type of the field in question
@return {@code non-null;} an appropriate instance"
      end

      operation 14715404 "opPutField"
	class_operation public return_type class_ref 3405452 // Rop
	nparams 1
	  param inout name "type" type class_ref 3424012 // TypeBearer
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the appropriate {@code put-field} rop for the given
type. The result is a shared instance.

@param type {@code non-null;} type of the field in question
@return {@code non-null;} an appropriate instance"
      end

      operation 14715532 "opGetStatic"
	class_operation public return_type class_ref 3405452 // Rop
	nparams 1
	  param inout name "type" type class_ref 3424012 // TypeBearer
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the appropriate {@code get-static} rop for the given
type. The result is a shared instance.

@param type {@code non-null;} type of the field in question
@return {@code non-null;} an appropriate instance"
      end

      operation 14715660 "opPutStatic"
	class_operation public return_type class_ref 3405452 // Rop
	nparams 1
	  param inout name "type" type class_ref 3424012 // TypeBearer
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the appropriate {@code put-static} rop for the given
type. The result is a shared instance.

@param type {@code non-null;} type of the field in question
@return {@code non-null;} an appropriate instance"
      end

      operation 14715788 "opInvokeStatic"
	class_operation public return_type class_ref 3405452 // Rop
	nparams 1
	  param inout name "meth" type class_ref 3415692 // Prototype
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the appropriate {@code invoke-static} rop for the
given type. The result is typically a newly-allocated instance.

@param meth {@code non-null;} descriptor of the method
@return {@code non-null;} an appropriate instance"
      end

      operation 14715916 "opInvokeVirtual"
	class_operation public return_type class_ref 3405452 // Rop
	nparams 1
	  param inout name "meth" type class_ref 3415692 // Prototype
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the appropriate {@code invoke-virtual} rop for the
given type. The result is typically a newly-allocated instance.

@param meth {@code non-null;} descriptor of the method, including the
{@code this} parameter
@return {@code non-null;} an appropriate instance"
      end

      operation 14716044 "opInvokeSuper"
	class_operation public return_type class_ref 3405452 // Rop
	nparams 1
	  param inout name "meth" type class_ref 3415692 // Prototype
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the appropriate {@code invoke-super} rop for the
given type. The result is typically a newly-allocated instance.

@param meth {@code non-null;} descriptor of the method, including the
{@code this} parameter
@return {@code non-null;} an appropriate instance"
      end

      operation 14716172 "opInvokeDirect"
	class_operation public return_type class_ref 3405452 // Rop
	nparams 1
	  param inout name "meth" type class_ref 3415692 // Prototype
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the appropriate {@code invoke-direct} rop for the
given type. The result is typically a newly-allocated instance.

@param meth {@code non-null;} descriptor of the method, including the
{@code this} parameter
@return {@code non-null;} an appropriate instance"
      end

      operation 14716300 "opInvokeInterface"
	class_operation public return_type class_ref 3405452 // Rop
	nparams 1
	  param inout name "meth" type class_ref 3415692 // Prototype
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the appropriate {@code invoke-interface} rop for the
given type. The result is typically a newly-allocated instance.

@param meth {@code non-null;} descriptor of the method, including the
{@code this} parameter
@return {@code non-null;} an appropriate instance"
      end

      operation 14716428 "opMarkLocal"
	class_operation public return_type class_ref 3405452 // Rop
	nparams 1
	  param inout name "type" type class_ref 3424012 // TypeBearer
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the appropriate {@code mark-local} rop for the given type.
The result is a shared instance.

@param type {@code non-null;} type of value being marked
@return {@code non-null;} an appropriate instance"
      end

      operation 14716556 "Rops"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This class is uninstantiable."
      end

      operation 14716684 "throwBadType"
	class_operation private return_type class_ref 3405452 // Rop
	nparams 1
	  param inout name "type" type class_ref 3424012 // TypeBearer
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Throws the right exception to complain about a bogus type.

@param type {@code non-null;} the bad type
@return never"
      end

      operation 14716812 "throwBadTypes"
	class_operation private return_type class_ref 3405452 // Rop
	nparams 1
	  param inout name "types" type class_ref 3406220 // TypeList
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Throws the right exception to complain about a bogus list of types.

@param types {@code non-null;} the bad types
@return never"
      end
    end
  end

  deploymentview 309388 "code"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 1333644 "Insn"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.dexgen.rop.cst.Constant;
import com.android.dexgen.rop.cst.CstUtf8;
import com.android.dexgen.rop.type.StdTypeList;
import com.android.dexgen.rop.type.Type;
import com.android.dexgen.rop.type.TypeList;
import com.android.dexgen.util.ToHuman;
${definition}"
      associated_classes
	class_ref 3405580 // Insn
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1346572 "AccessFlags"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.dexgen.util.Hex;
${definition}"
      associated_classes
	class_ref 3422220 // AccessFlags
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1346700 "BasicBlock"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.dexgen.rop.type.TypeList;
import com.android.dexgen.util.Hex;
import com.android.dexgen.util.IntList;
import com.android.dexgen.util.LabeledItem;
${definition}"
      associated_classes
	class_ref 3400460 // BasicBlock
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1346956 "BasicBlockList"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.dexgen.rop.type.StdTypeList;
import com.android.dexgen.rop.type.TypeList;
import com.android.dexgen.util.Hex;
import com.android.dexgen.util.IntList;
import com.android.dexgen.util.LabeledList;
${definition}"
      associated_classes
	class_ref 3422604 // BasicBlockList
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1347084 "TranslationAdvice"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3423116 // TranslationAdvice
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1347212 "ConservativeTranslationAdvice"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3422988 // ConservativeTranslationAdvice
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1347340 "CstInsn"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.dexgen.rop.cst.Constant;
${definition}"
      associated_classes
	class_ref 3423244 // CstInsn
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1347468 "DexTranslationAdvice"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.dexgen.rop.cst.CstInteger;
import com.android.dexgen.rop.type.Type;
${definition}"
      associated_classes
	class_ref 3423372 // DexTranslationAdvice
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1347596 "Exceptions"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.dexgen.rop.type.StdTypeList;
import com.android.dexgen.rop.type.Type;
${definition}"
      associated_classes
	class_ref 3423500 // Exceptions
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1347724 "FillArrayDataInsn"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.dexgen.rop.cst.Constant;
import com.android.dexgen.rop.type.StdTypeList;
import com.android.dexgen.rop.type.Type;
import com.android.dexgen.rop.type.TypeList;
import java.util.ArrayList;
${definition}"
      associated_classes
	class_ref 3406988 // FillArrayDataInsn
      end
      comment "Copyright (C) 2008 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1347852 "InsnList"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.dexgen.util.FixedSizeList;
${definition}"
      associated_classes
	class_ref 3422348 // InsnList
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1347980 "LocalItem"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.dexgen.rop.cst.CstUtf8;
${definition}"
      associated_classes
	class_ref 3423756 // LocalItem
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1348108 "LocalVariableExtractor"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.dexgen.util.Bits;
import com.android.dexgen.util.IntList;
${definition}"
      associated_classes
	class_ref 3423884 // LocalVariableExtractor
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1348236 "LocalVariableInfo"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.dexgen.rop.type.TypeBearer;
import com.android.dexgen.util.MutabilityControl;
import java.util.HashMap;
${definition}"
      associated_classes
	class_ref 3405836 // LocalVariableInfo
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1348364 "PlainCstInsn"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.dexgen.rop.cst.Constant;
import com.android.dexgen.rop.type.StdTypeList;
import com.android.dexgen.rop.type.Type;
import com.android.dexgen.rop.type.TypeList;
${definition}"
      associated_classes
	class_ref 3406476 // PlainCstInsn
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1348492 "PlainInsn"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.dexgen.rop.cst.Constant;
import com.android.dexgen.rop.type.StdTypeList;
import com.android.dexgen.rop.type.Type;
import com.android.dexgen.rop.type.TypeBearer;
import com.android.dexgen.rop.type.TypeList;
${definition}"
      associated_classes
	class_ref 3406348 // PlainInsn
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1348748 "RegisterSpec"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.dexgen.rop.cst.Constant;
import com.android.dexgen.rop.cst.CstUtf8;
import com.android.dexgen.rop.type.Type;
import com.android.dexgen.rop.type.TypeBearer;
import com.android.dexgen.util.ToHuman;
import java.util.HashMap;
${definition}"
      associated_classes
	class_ref 3399564 // RegisterSpec
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1349004 "RegisterSpecList"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.dexgen.rop.type.Type;
import com.android.dexgen.rop.type.TypeList;
import com.android.dexgen.util.FixedSizeList;
${definition}"
      associated_classes
	class_ref 3399308 // RegisterSpecList
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1349132 "RegisterSpecSet"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.dexgen.rop.cst.CstUtf8;
import com.android.dexgen.util.MutabilityControl;
${definition}"
      associated_classes
	class_ref 3404556 // RegisterSpecSet
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1349260 "RegOps"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.dexgen.util.Hex;
${definition}"
      associated_classes
	class_ref 3424268 // RegOps
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1349388 "Rop"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.dexgen.rop.type.StdTypeList;
import com.android.dexgen.rop.type.Type;
import com.android.dexgen.rop.type.TypeList;
import com.android.dexgen.util.Hex;
${definition}"
      associated_classes
	class_ref 3405452 // Rop
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1349516 "RopMethod"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.dexgen.util.Bits;
import com.android.dexgen.util.Hex;
import com.android.dexgen.util.IntList;
${definition}"
      associated_classes
	class_ref 3400332 // RopMethod
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1349644 "Rops"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.dexgen.rop.cst.Constant;
import com.android.dexgen.rop.cst.CstBaseMethodRef;
import com.android.dexgen.rop.cst.CstMethodRef;
import com.android.dexgen.rop.cst.CstType;
import com.android.dexgen.rop.type.Prototype;
import com.android.dexgen.rop.type.StdTypeList;
import com.android.dexgen.rop.type.Type;
import com.android.dexgen.rop.type.TypeBearer;
import com.android.dexgen.rop.type.TypeList;
${definition}"
      associated_classes
	class_ref 3424396 // Rops
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1349772 "SourcePosition"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.dexgen.rop.cst.CstUtf8;
import com.android.dexgen.util.Hex;
${definition}"
      associated_classes
	class_ref 3399180 // SourcePosition
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1349900 "SwitchInsn"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.dexgen.rop.type.StdTypeList;
import com.android.dexgen.rop.type.Type;
import com.android.dexgen.rop.type.TypeList;
import com.android.dexgen.util.IntList;
${definition}"
      associated_classes
	class_ref 3406604 // SwitchInsn
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1350028 "ThrowingCstInsn"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.dexgen.rop.cst.Constant;
import com.android.dexgen.rop.type.Type;
import com.android.dexgen.rop.type.TypeList;
${definition}"
      associated_classes
	class_ref 3406732 // ThrowingCstInsn
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 1350156 "ThrowingInsn"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.dexgen.rop.type.Type;
import com.android.dexgen.rop.type.TypeList;
${definition}"
      associated_classes
	class_ref 3406860 // ThrowingInsn
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end
  end
end
