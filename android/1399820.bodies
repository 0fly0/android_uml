class NetworkIdentitySet
!!!8556812.java!!!	NetworkIdentitySet(inout in : DataInputStream)
        final int version = in.readInt();
        final int size = in.readInt();
        for (int i = 0; i < size; i++) {
            if (version <= VERSION_INIT) {
                final int ignored = in.readInt();
            }
            final int type = in.readInt();
            final int subType = in.readInt();
            final String subscriberId = readOptionalString(in);
            final String networkId;
            if (version >= VERSION_ADD_NETWORK_ID) {
                networkId = readOptionalString(in);
            } else {
                networkId = null;
            }
            final boolean roaming;
            if (version >= VERSION_ADD_ROAMING) {
                roaming = in.readBoolean();
            } else {
                roaming = false;
            }

            add(new NetworkIdentity(type, subType, subscriberId, networkId, false));
        }
!!!8556940.java!!!	writeToStream(inout out : DataOutputStream) : void
        out.writeInt(VERSION_ADD_NETWORK_ID);
        out.writeInt(size());
        for (NetworkIdentity ident : this) {
            out.writeInt(ident.getType());
            out.writeInt(ident.getSubType());
            writeOptionalString(out, ident.getSubscriberId());
            writeOptionalString(out, ident.getNetworkId());
            out.writeBoolean(ident.getRoaming());
        }
!!!8557068.java!!!	writeOptionalString(inout out : DataOutputStream, in value : String) : void
        if (value != null) {
            out.writeByte(1);
            out.writeUTF(value);
        } else {
            out.writeByte(0);
        }
!!!8557196.java!!!	readOptionalString(inout in : DataInputStream) : String
        if (in.readByte() != 0) {
            return in.readUTF();
        } else {
            return null;
        }
