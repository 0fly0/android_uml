class ClassPathTestCollector
!!!8930956.java!!!	collectTests() : Enumeration
        String classPath= System.getProperty("java.class.path");
        Hashtable result = collectFilesInPath(classPath);
        return result.elements();
!!!8931084.java!!!	collectFilesInPath(in classPath : String) : Hashtable
        Hashtable result= collectFilesInRoots(splitClassPath(classPath));
        return result;
!!!8931212.java!!!	collectFilesInRoots(inout roots : Vector) : Hashtable
        Hashtable result= new Hashtable(100);
        Enumeration e= roots.elements();
        while (e.hasMoreElements())
            gatherFiles(new File((String)e.nextElement()), "", result);
        return result;
!!!8931340.java!!!	gatherFiles(inout classRoot : File, in classFileName : String, inout result : Hashtable) : void
        File thisRoot= new File(classRoot, classFileName);
        if (thisRoot.isFile()) {
            if (isTestClass(classFileName)) {
                String className= classNameFromFile(classFileName);
                result.put(className, className);
            }
            return;
        }
        String[] contents= thisRoot.list();
        if (contents != null) {
            for (int i= 0; i < contents.length; i++)
                gatherFiles(classRoot, classFileName+File.separatorChar+contents[i], result);
        }
!!!8931468.java!!!	splitClassPath(in classPath : String) : Vector
        Vector result= new Vector();
        String separator= System.getProperty("path.separator");
        StringTokenizer tokenizer= new StringTokenizer(classPath, separator);
        while (tokenizer.hasMoreTokens())
            result.addElement(tokenizer.nextToken());
        return result;
!!!8931596.java!!!	isTestClass(in classFileName : String) : boolean
        return
                classFileName.endsWith(".class") &&
                classFileName.indexOf('$') < 0 &&
                classFileName.indexOf("Test") > 0;
!!!8931724.java!!!	classNameFromFile(in classFileName : String) : String
        // convert /a/b.class to a.b
        String s= classFileName.substring(0, classFileName.length()-SUFFIX_LENGTH);
        String s2= s.replace(File.separatorChar, '.');
        if (s2.startsWith("."))
            return s2.substring(1);
        return s2;
