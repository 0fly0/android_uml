class HDCP
!!!497804.cpp!!!	HDCP()
    mLibHandle = dlopen("libstagefright_hdcp.so", RTLD_NOW);

    if (mLibHandle == NULL) {
        ALOGE("Unable to locate libstagefright_hdcp.so");
        return;
    }

    typedef HDCPModule *(*CreateHDCPModuleFunc)(
            void *, HDCPModule::ObserverFunc);

    CreateHDCPModuleFunc createHDCPModule =
        (CreateHDCPModuleFunc)dlsym(mLibHandle, "createHDCPModule");

    if (createHDCPModule == NULL) {
        ALOGE("Unable to find symbol 'createHDCPModule'.");
    } else if ((mHDCPModule = createHDCPModule(
                    this, &HDCP::ObserveWrapper)) == NULL) {
        ALOGE("createHDCPModule failed.");
    }
!!!497932.cpp!!!	~HDCP()
    Mutex::Autolock autoLock(mLock);

    if (mHDCPModule != NULL) {
        delete mHDCPModule;
        mHDCPModule = NULL;
    }

    if (mLibHandle != NULL) {
        dlclose(mLibHandle);
        mLibHandle = NULL;
    }
!!!498060.cpp!!!	setObserver(in observer : sp<IHDCPObserver>) : status_t
    Mutex::Autolock autoLock(mLock);

    if (mHDCPModule == NULL) {
        return NO_INIT;
    }

    mObserver = observer;

    return OK;
!!!498188.cpp!!!	initAsync(in host : char, in port : uint) : status_t
    Mutex::Autolock autoLock(mLock);

    if (mHDCPModule == NULL) {
        return NO_INIT;
    }

    return mHDCPModule->initAsync(host, port);
!!!498316.cpp!!!	shutdownAsync() : status_t
    Mutex::Autolock autoLock(mLock);

    if (mHDCPModule == NULL) {
        return NO_INIT;
    }

    return mHDCPModule->shutdownAsync();
!!!498444.cpp!!!	encrypt(in inData : void, in size : size_t, in streamCTR : uint32_t, inout outInputCTR : uint64_t, inout outData : void) : status_t
    Mutex::Autolock autoLock(mLock);

    if (mHDCPModule == NULL) {
        *outInputCTR = 0;

        return NO_INIT;
    }

    return mHDCPModule->encrypt(inData, size, streamCTR, outInputCTR, outData);
!!!498572.cpp!!!	ObserveWrapper(inout me : void, in msg : int, in ext1 : int, in ext2 : int) : void
    static_cast<HDCP *>(me)->observe(msg, ext1, ext2);
!!!498700.cpp!!!	observe(in msg : int, in ext1 : int, in ext2 : int) : void
    Mutex::Autolock autoLock(mLock);

    if (mObserver != NULL) {
        mObserver->notify(msg, ext1, ext2, NULL /* obj */);
    }
