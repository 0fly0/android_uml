class LocalClock
!!!203148.cpp!!!	LocalClock()
    int res;
    const hw_module_t* mod;

    AutoMutex lock(&dev_lock_);

    if (dev_ != NULL)
        return;

    res = hw_get_module_by_class(LOCAL_TIME_HARDWARE_MODULE_ID, NULL, &mod);
    if (res) {
        ALOGE("Failed to open local time HAL module (res = %d)", res);
    } else {
        res = local_time_hw_device_open(mod, &dev_);
        if (res) {
            ALOGE("Failed to open local time HAL device (res = %d)", res);
            dev_ = NULL;
        }
    }
!!!203276.cpp!!!	initCheck() : bool
    return (NULL != dev_);
!!!203404.cpp!!!	getLocalTime() : int64_t
    assert(NULL != dev_);
    assert(NULL != dev_->get_local_time);

    return dev_->get_local_time(dev_);
!!!203532.cpp!!!	getLocalFreq() : uint64_t
    assert(NULL != dev_);
    assert(NULL != dev_->get_local_freq);

    return dev_->get_local_freq(dev_);
!!!203660.cpp!!!	setLocalSlew(in rate : int16_t) : status_t
    assert(NULL != dev_);

    if (!dev_->set_local_slew)
        return INVALID_OPERATION;

    return static_cast<status_t>(dev_->set_local_slew(dev_, rate));
!!!203788.cpp!!!	getDebugLog(inout records : local_time_debug_event, in max_records : int) : int32_t
    assert(NULL != dev_);

    if (!dev_->get_debug_log)
        return INVALID_OPERATION;

    return dev_->get_debug_log(dev_, records, max_records);
