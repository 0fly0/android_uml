class LineupTest
!!!13331084.java!!!	buildCompleteLineup() : Lineup
        List<Channel> channels = new ArrayList<Channel>();
        channels.add(new Channel.Builder(new ChannelNumber("1.2"))
                .setName("Fox")
                .setCallSign("FOX")
                .setTier(TmsChannelTier.BASIC)
                .build());

        return new Lineup.Builder(SAMPLE_LINEUP_ID, SAMPLE_LINEUP_NAME)
                // don't set a location name
                .setOperatorId(SAMPLE_OPERATOR_ID)
                .setOperatorName(SAMPLE_OPERATOR_NAME)
                .setHeadendName(SAMPLE_HEADEND_NAME)
                .setLineupType(SAMPLE_LINEUP_TYPE)
                .setChannels(channels)
                .build();
!!!13331212.java!!!	parcelAndUnparcel(inout lineup : Lineup) : Lineup
        Parcel parcel = Parcel.obtain();
        lineup.writeToParcel(parcel, 0);
        parcel.setDataPosition(0);  // flip the buffer
        return new Lineup(parcel);
!!!13331340.java!!!	testBuilder() : void
        Lineup lineup1 = buildCompleteLineup();

        assertEquals(SAMPLE_LINEUP_ID, lineup1.getLineupId());
        assertEquals(SAMPLE_LINEUP_NAME, lineup1.getLineupName());
        assertEquals(SAMPLE_OPERATOR_ID, lineup1.getOperatorId());
        assertEquals(SAMPLE_OPERATOR_NAME, lineup1.getOperatorName());
        assertEquals(SAMPLE_HEADEND_NAME, lineup1.getHeadendName());
        assertEquals(SAMPLE_LINEUP_TYPE, lineup1.getLineupType());
        assertEquals(1, lineup1.getChannels().size());

        Lineup lineup2 = new Lineup.Builder(SAMPLE_LINEUP_ID, SAMPLE_LINEUP_NAME)
                .setLocationName(SAMPLE_LOCATION_NAME)
                .build();

        assertEquals(SAMPLE_LINEUP_NAME_WITH_LOCATION, lineup2.getLineupName());

        Lineup lineup3 = new Lineup.Builder(SAMPLE_LINEUP_ID, SAMPLE_LINEUP_NAME_WITH_LOCATION)
                .setLocationName(SAMPLE_LOCATION_NAME)
                .build();

        assertEquals(SAMPLE_LINEUP_NAME_WITH_LOCATION, lineup3.getLineupName());
!!!13331468.java!!!	testParceling() : void
        Lineup lineup1 = new Lineup.Builder(SAMPLE_LINEUP_ID, SAMPLE_LINEUP_NAME)
                // don't set any other fields; leave all null
                .build();

        assertEquals(SAMPLE_LINEUP_ID, lineup1.getLineupId());
        assertEquals(SAMPLE_LINEUP_NAME, lineup1.getLineupName());

        Parcel parcel1 = Parcel.obtain();
        lineup1.writeToParcel(parcel1, 0);
        Lineup lineup1out = parcelAndUnparcel(lineup1);

        assertEquals(SAMPLE_LINEUP_ID, lineup1out.getLineupId());
        assertEquals(SAMPLE_LINEUP_NAME, lineup1out.getLineupName());
        assertNull(lineup1out.getOperatorId());
        assertNull(lineup1out.getOperatorName());
        assertNull(lineup1out.getHeadendName());
        assertEquals(Lineup.LineupType.OTHER, lineup1out.getLineupType());
        assertEquals(0, lineup1out.getChannels().size());

        List<Channel> channels = new ArrayList<Channel>();
        channels.add(new Channel.Builder(new ChannelNumber("1.2"))
                .setName("Fox")
                .setCallSign("FOX")
                .setTier(TmsChannelTier.BASIC)
                .build());

        Lineup lineup2 = buildCompleteLineup();
        Lineup lineup2out = parcelAndUnparcel(lineup2);

        assertEquals(SAMPLE_LINEUP_ID, lineup2.getLineupId());
        assertEquals(SAMPLE_LINEUP_NAME, lineup2.getLineupName());
        assertEquals(SAMPLE_OPERATOR_ID, lineup2.getOperatorId());
        assertEquals(SAMPLE_OPERATOR_NAME, lineup2.getOperatorName());
        assertEquals(SAMPLE_HEADEND_NAME, lineup2.getHeadendName());
        assertEquals(SAMPLE_LINEUP_TYPE, lineup2.getLineupType());
        assertEquals(1, lineup2.getChannels().size());
!!!13331596.java!!!	testComparison() : void
        Lineup lineup1 = new Lineup.Builder(SAMPLE_LINEUP_ID, SAMPLE_LINEUP_NAME)
                .setOperatorId(SAMPLE_OPERATOR_ID)
                .build();

        Lineup lineup2 = new Lineup.Builder(SAMPLE_LINEUP_ID, SAMPLE_LINEUP_NAME)
                .setOperatorId(SAMPLE_OPERATOR_ID)
                .setOperatorName(SAMPLE_OPERATOR_NAME)
                .build();

        assertFalse(lineup1.equals(null));
        assertTrue(lineup1.equals(lineup1));
        assertTrue(lineup1.equals(lineup2));

        Lineup lineup3 = new Lineup.Builder(SAMPLE_LINEUP_ID, SAMPLE_LINEUP_NAME)
                // no operator ID
                .setOperatorName(SAMPLE_OPERATOR_NAME)
                .build();

        // One has a null operator ID, but the lineup IDs match, so should still be equal.
        assertTrue(lineup1.equals(lineup3));
