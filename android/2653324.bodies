class OmxVideoEncoderOutputPort
!!!11166860.cpp!!!	OmxVideoEncoderOutputPort(in index : OMX_U32)
  mDefinition.format.video.eCompressionFormat = OMX_VIDEO_CodingAutoDetect;
  mDefinition.format.video.eColorFormat = OMX_COLOR_FormatUnused;
  mIsExtraDataGot = OMX_FALSE;
!!!11167116.cpp!!!	pushBuffer(inout buffer : OMX_BUFFERHEADERTYPE) : void
  setBufferOwner(buffer, OWN_BY_OMX);
  AmpBuffer *amp_buffer =  static_cast<AmpBuffer *>(buffer->pPlatformPrivate);
  // TODO: Workaround for amp bd mem_info size
  buffer->nFilledLen = buffer->nAllocLen;
  amp_buffer->updateMemInfo(buffer);
  mPushedBdNum++;
  HRESULT err = SUCCESS;
  AMP_BD_ST *bd = amp_buffer->getBD();
  OMX_LOGD("<Out> %d/%d, push bd %p", mReturnedBdNum, mPushedBdNum, bd);
  AMP_RPC(err, AMP_VENC_PushBD, mAmpHandle, AMP_PORT_OUTPUT, 0, bd);
  setBufferOwner(buffer, OWN_BY_LOWER);
!!!11167244.cpp!!!	getVideoParam(inout param : OMX_VIDEO_PARAM_PORTFORMATTYPE) : OMX_ERRORTYPE
  if (param->nIndex >= NELM(kCodecSupport)) {
    return OMX_ErrorNoMore;
  }
  const VideoFormatType *v_fmt = &kCodecSupport[param->nIndex];
  param->eCompressionFormat = v_fmt->eCompressionFormat;
  param->eColorFormat = v_fmt->eColorFormat;
  param->xFramerate = v_fmt->xFramerate;
  return OMX_ErrorNone;
!!!11167372.cpp!!!	setVideoParam(inout param : OMX_VIDEO_PARAM_PORTFORMATTYPE) : OMX_ERRORTYPE
  int i;
  for (i = 0; i < NELM(kCodecSupport); i++) {
    if(param->eCompressionFormat == kCodecSupport[i].eCompressionFormat) {
      break;
    }
  }
  if (i >= NELM(kCodecSupport)) {
    OMX_LOGW("Unsupport codec 0x%x", param->eCompressionFormat);
    return OMX_ErrorNoMore;
  }
  mVideoParam.eColorFormat = param->eColorFormat;
  mVideoParam.eCompressionFormat = param->eCompressionFormat;
  mVideoParam.xFramerate = param->xFramerate;
  updateDomainDefinition();
  return OMX_ErrorNone;
