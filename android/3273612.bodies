class DeviceTypeSelectionFragment
!!!14206092.java!!!	DeviceTypeSelectionFragment(inout context : Context)
        super(context);
!!!14206220.java!!!	onCreateView(inout inflater : LayoutInflater, inout container : ViewGroup, inout savedInstanceState : Bundle) : View
        if (container == null) return null;

        View view = inflater.inflate(R.layout.device_type_selection, null);

        mRadioListener = new View.OnClickListener() {
                @Override
                public void onClick(View view) {
                    focusNext();
                }
            };

        mDeviceWithLineupRadio = (RadioButton) view.findViewById(
                R.id.radio_device_with_lineup);
        mDeviceWithLineupRadio.setOnClickListener(mRadioListener);

        mDeviceWithoutLineupRadio = (RadioButton) view.findViewById(
                R.id.radio_device_without_lineup);
        mDeviceWithoutLineupRadio.setOnClickListener(mRadioListener);

        return view;
!!!14206348.java!!!	onAccept() : boolean
        final boolean needsLineup = mDeviceWithLineupRadio.isChecked();

        Device device = (Device) getProperty(SetupProperties.DEVICE_PROPERTY);
        if (device.getType() == DeviceType.IR_BLASTER) {
            device.setCapability(Capability.USES_CHANNEL_LINEUP, needsLineup);
            device.setCapability(Capability.PROVIDES_CHANNEL_LINEUP, false);
        }
        return true;
!!!14206476.java!!!	onResume() : void
        super.onResume();

        setTitleText(getString(R.string.set_up_media_device_title));
        setSubtitleText(getString(R.string.select_device_type_subtitle));

        mDeviceWithLineupRadio.setChecked(true);
        requestFocusOnView(mDeviceWithLineupRadio);
