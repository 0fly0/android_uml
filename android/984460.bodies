class WebIconDatabaseClassic
!!!4948876.java!!!	open(in path : String) : void
        if (path != null) {
            // Make the directories and parents if they don't exist
            File db = new File(path);
            if (!db.exists()) {
                db.mkdirs();
            }
            mEventHandler.postMessage(
                    Message.obtain(null, EventHandler.OPEN, db.getAbsolutePath()));
        }
!!!4949004.java!!!	close() : void
        mEventHandler.postMessage(
                Message.obtain(null, EventHandler.CLOSE));
!!!4949132.java!!!	removeAllIcons() : void
        mEventHandler.postMessage(
                Message.obtain(null, EventHandler.REMOVE_ALL));
!!!4949260.java!!!	requestIconForPageUrl(in url : String, inout listener : IconListener) : void
        if (listener == null || url == null) {
            return;
        }
        Message msg = Message.obtain(null, EventHandler.REQUEST_ICON, listener);
        msg.getData().putString("url", url);
        mEventHandler.postMessage(msg);
!!!4949388.java!!!	bulkRequestIconForPageUrl(inout cr : ContentResolver, in where : String, inout listener : IconListener) : void
        if (listener == null) {
            return;
        }

        // Special case situation: we don't want to add this message to the
        // queue if there is no handler because we may never have a real
        // handler to service the messages and the cursor will never get
        // closed.
        if (mEventHandler.hasHandler()) {
            // Don't use Bundle as it is parcelable.
            HashMap<String, Object> map = new HashMap<String, Object>();
            map.put("contentResolver", cr);
            map.put("where", where);
            map.put("listener", listener);
            Message msg =
                    Message.obtain(null, EventHandler.BULK_REQUEST_ICON, map);
            mEventHandler.postMessage(msg);
        }
!!!4949516.java!!!	retainIconForPageUrl(in url : String) : void
        if (url != null) {
            mEventHandler.postMessage(
                    Message.obtain(null, EventHandler.RETAIN_ICON, url));
        }
!!!4949644.java!!!	releaseIconForPageUrl(in url : String) : void
        if (url != null) {
            mEventHandler.postMessage(
                    Message.obtain(null, EventHandler.RELEASE_ICON, url));
        }
!!!4949772.java!!!	getInstance() : WebIconDatabaseClassic
        // XXX: Must be created in the UI thread.
        if (sIconDatabase == null) {
            sIconDatabase = new WebIconDatabaseClassic();
        }
        return sIconDatabase;
!!!4949900.java!!!	createHandler() : void
        mEventHandler.createHandler();
