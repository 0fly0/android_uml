class DatatypeConfigurationException
!!!1890075.java!!!	DatatypeConfigurationException(inout message : String)
        super(message);
!!!1890203.java!!!	DatatypeConfigurationException(inout message : String, inout cause : Throwable)
        super(message);
        initCauseByReflection(cause);
!!!1890331.java!!!	DatatypeConfigurationException(inout cause : Throwable)
        super(cause == null ? null : cause.toString());
        initCauseByReflection(cause);
!!!1890459.java!!!	printStackTrace() : void
        if (!isJDK14OrAbove && causeOnJDK13OrBelow != null) {
            printStackTrace0(new PrintWriter(System.err, true));
        }
        else {
            super.printStackTrace();
        }
!!!1890587.java!!!	printStackTrace(inout s : PrintStream) : void
        if (!isJDK14OrAbove && causeOnJDK13OrBelow != null) {
            printStackTrace0(new PrintWriter(s));
        }
        else {
            super.printStackTrace(s);
        }
!!!1890715.java!!!	printStackTrace(inout s : PrintWriter) : void
        if (!isJDK14OrAbove && causeOnJDK13OrBelow != null) {
            printStackTrace0(s);
        }
        else {
            super.printStackTrace(s);
        }
!!!1890843.java!!!	printStackTrace0(inout s : PrintWriter) : void
        causeOnJDK13OrBelow.printStackTrace(s);
        s.println("------------------------------------------");
        super.printStackTrace(s);
!!!1890971.java!!!	initCauseByReflection(inout cause : Throwable) : void
        causeOnJDK13OrBelow = cause;
        try {
            Method m = this.getClass().getMethod("initCause", new Class[] {Throwable.class});
            m.invoke(this, new Object[] {cause});
            isJDK14OrAbove = true;
        }
        // Ignore exception
        catch (Exception e) {}
!!!1891099.java!!!	readObject(inout in : ObjectInputStream) : void
        in.defaultReadObject();
        try {
            Method m1 = this.getClass().getMethod("getCause", new Class[] {});
            Throwable cause = (Throwable) m1.invoke(this, new Object[] {});
            if (causeOnJDK13OrBelow == null) {
                causeOnJDK13OrBelow = cause;
            }
            else if (cause == null) {
                Method m2 = this.getClass().getMethod("initCause", new Class[] {Throwable.class});
                m2.invoke(this, new Object[] {causeOnJDK13OrBelow});
            }
            isJDK14OrAbove = true;
        }
        // Ignore exception
        catch (Exception e) {}
