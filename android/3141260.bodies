class SimpleContentProvider
!!!13279756.java!!!	addProviderHelper(inout uri : Uri, inout alsoMatchSingleIdUri : boolean, inout helper : ProviderHelper) : void
        String authority = uri.getAuthority();
        // Remove the first "/" character
        String path = uri.getPath().substring(1);

        addProviderHelper(authority, path, alsoMatchSingleIdUri, helper);
!!!13279884.java!!!	addProviderHelper(in authority : String, in path : String, inout alsoMatchSingleIdUri : boolean, inout helper : ProviderHelper) : void
        int matchCode = mMatchCodeCounter++;

        mUriMatcher.addURI(authority, path, matchCode);
        if (alsoMatchSingleIdUri) {
            mUriMatcher.addURI(authority, path + "/#", matchCode | URI_MATCH_ID_MASK);
        }

        mProviderHelpers.put(matchCode, helper);
!!!13280012.java!!!	getType(inout uri : Uri) : String
        int match = mUriMatcher.match(uri);
        if (match == -1) {
            return null;
        }
        int code = match & ~URI_MATCH_ID_MASK;
        boolean single = (match & URI_MATCH_ID_MASK) != 0;
        ProviderHelper providerHelper = mProviderHelpers.get(code);

        String mimeSubType = providerHelper.getMimeSubType();

        if (mimeSubType == null) {
            throw new UnsupportedOperationException();
        }
        String type = single
                ? "vnd.android.cursor.item"
                : "vnd.android.cursor.dir";
        return type + "/" + mimeSubType;

!!!13280140.java!!!	query(inout uri : Uri, inout projectionIn : String, in selection : String, inout selectionArgs : String, in sortOrder : String) : Cursor
        int match = mUriMatcher.match(uri);
        if (match == -1) {
            throw new IllegalArgumentException("Invalid URI: " + uri);
        }
        int code = match & ~URI_MATCH_ID_MASK;
        boolean single = (match & URI_MATCH_ID_MASK) != 0;
        if (single) {
            selection = appendIdClause(selection, ContentUris.parseId(uri));
        }
        selection = injectWhereFromQueryString(uri, selection);
        String limit = uri.getQueryParameter(LIMIT_QUERY_PARAM);

        ProviderHelper providerHelper = mProviderHelpers.get(code);

        Cursor cursor = providerHelper.query(uri, projectionIn, selection, selectionArgs,
                sortOrder, limit);
        cursor.setNotificationUri(getContext().getContentResolver(), uri);
        return cursor;
!!!13280268.java!!!	insert(inout uri : Uri, inout initialValues : ContentValues) : Uri
        Uri rowUri = insertValues(uri, initialValues);
        getContext().getContentResolver().notifyChange(rowUri, null);
        return rowUri;
!!!13280396.java!!!	insertValues(inout uri : Uri, inout initialValues : ContentValues) : Uri
        int match = mUriMatcher.match(uri);
        if (match == -1) {
            throw new IllegalArgumentException("Invalid URI: " + uri);
        }
        int code = match & ~URI_MATCH_ID_MASK;
        boolean single = (match & URI_MATCH_ID_MASK) != 0;
        if (single) {
            throw new IllegalArgumentException("Invalid URI: " + uri);
        }
        ProviderHelper providerHelper = mProviderHelpers.get(code);

        long rowId = providerHelper.insert(initialValues);

        Uri rowUri = ContentUris.withAppendedId(uri, rowId);
        return rowUri;
!!!13280524.java!!!	bulkInsert(inout uri : Uri, inout values : ContentValues) : int
        int numValues = values.length;
        for (int i = 0; i < numValues; i++) {
            insert(uri, values[i]);
        }
        getContext().getContentResolver().notifyChange(uri, null);
        return numValues;
!!!13280652.java!!!	delete(inout uri : Uri, in where : String, inout whereArgs : String) : int
        int match = mUriMatcher.match(uri);
        if (match == -1) {
            throw new IllegalArgumentException("Invalid URI: " + uri);
        }
        int code = match & ~URI_MATCH_ID_MASK;
        boolean single = (match & URI_MATCH_ID_MASK) != 0;
        if (single) {
            where = appendIdClause(where, ContentUris.parseId(uri));
        }
        ProviderHelper providerHelper = mProviderHelpers.get(code);
        int count = providerHelper.delete(where, whereArgs);
        getContext().getContentResolver().notifyChange(uri, null);

        return count;
!!!13280780.java!!!	update(inout uri : Uri, inout values : ContentValues, in where : String, inout whereArgs : String) : int
        int match = mUriMatcher.match(uri);
        if (match == -1) {
            throw new IllegalArgumentException("Invalid URI: " + uri);
        }
        int code = match & ~URI_MATCH_ID_MASK;
        boolean single = (match & URI_MATCH_ID_MASK) != 0;
        if (single) {
            where = appendIdClause(where, ContentUris.parseId(uri));
        }
        ProviderHelper providerHelper = mProviderHelpers.get(code);
        int count = providerHelper.update(values, where, whereArgs);
        getContext().getContentResolver().notifyChange(uri, null);

        return count;
!!!13280908.java!!!	injectWhereFromQueryString(inout uri : Uri, in where : String) : String
        String queryStringWhere = uri.getQueryParameter(WHERE_QUERY_PARAM);
        return combineWhereClauses(where, queryStringWhere);
!!!13281036.java!!!	appendIdClause(in where : String, in id : long) : String
        return combineWhereClauses(where, "_id = " + id);
!!!13281164.java!!!	combineWhereClauses(in left : String, in right : String) : String
        if (left == null && right == null) {
            return null;
        } else if (left == null) {
            return right;
        } else if (right == null) {
            return left;
        }
        return String.format("(%s) AND (%s)", left, right);
