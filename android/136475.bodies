class EmulatedFields
!!!180507.java!!!	EmulatedFields(inout fields : ObjectStreamField, inout declared : ObjectStreamField)
        // We assume the slots are already sorted in the right shape for dumping
        buildSlots(fields);
        declaredFields = declared;
!!!180635.java!!!	buildSlots(inout fields : ObjectStreamField) : void
        slotsToSerialize = new ObjectSlot[fields.length];
        for (int i = 0; i < fields.length; i++) {
            ObjectSlot s = new ObjectSlot();
            slotsToSerialize[i] = s;
            s.field = fields[i];
        }
        // We assume the slots are already sorted in the right shape for dumping
!!!180763.java!!!	defaulted(inout name : String) : boolean
        ObjectSlot slot = findSlot(name, null);
        if (slot == null) {
            throw new IllegalArgumentException("no field '" + name + "'");
        }
        return slot.defaulted;
!!!180891.java!!!	findSlot(inout fieldName : String, inout fieldType : Class) : ObjectSlot
        boolean isPrimitive = fieldType != null && fieldType.isPrimitive();
        for (int i = 0; i < slotsToSerialize.length; i++) {
            ObjectSlot slot = slotsToSerialize[i];
            if (slot.field.getName().equals(fieldName)) {
                if (isPrimitive) {
                    // Looking for a primitive type field. Types must match
                    // *exactly*
                    if (slot.field.getType() == fieldType) {
                        return slot;
                    }
                } else {
                    // Looking for a non-primitive type field.
                    if (fieldType == null) {
                        return slot; // Null means we take anything
                    }
                    // Types must be compatible (assignment)
                    if (slot.field.getType().isAssignableFrom(fieldType)) {
                        return slot;
                    }
                }
            }
        }

        if (declaredFields != null) {
            for (int i = 0; i < declaredFields.length; i++) {
                ObjectStreamField field = declaredFields[i];
                if (field.getName().equals(fieldName)) {
                    if (isPrimitive ? fieldType == field.getType() : fieldType == null ||
                            field.getType().isAssignableFrom(fieldType)) {
                        ObjectSlot slot = new ObjectSlot();
                        slot.field = field;
                        slot.defaulted = true;
                        return slot;
                    }
                }
            }
        }
        return null;
!!!181019.java!!!	findMandatorySlot(inout name : String, inout type : Class) : ObjectSlot
        ObjectSlot slot = findSlot(name, type);
        if (slot == null || (type == null && slot.field.getType().isPrimitive())) {
            throw new IllegalArgumentException("no field '" + name + "' of type " + type);
        }
        return slot;
!!!181147.java!!!	get(inout name : String, in defaultValue : byte) : byte
        ObjectSlot slot = findMandatorySlot(name, byte.class);
        return slot.defaulted ? defaultValue : ((Byte) slot.fieldValue).byteValue();
!!!181275.java!!!	get(inout name : String, in defaultValue : char) : char
        ObjectSlot slot = findMandatorySlot(name, char.class);
        return slot.defaulted ? defaultValue : ((Character) slot.fieldValue).charValue();
!!!181403.java!!!	get(inout name : String, in defaultValue : double) : double
        ObjectSlot slot = findMandatorySlot(name, double.class);
        return slot.defaulted ? defaultValue : ((Double) slot.fieldValue).doubleValue();
!!!181531.java!!!	get(inout name : String, in defaultValue : float) : float
        ObjectSlot slot = findMandatorySlot(name, float.class);
        return slot.defaulted ? defaultValue : ((Float) slot.fieldValue).floatValue();
!!!181659.java!!!	get(inout name : String, in defaultValue : int) : int
        ObjectSlot slot = findMandatorySlot(name, int.class);
        return slot.defaulted ? defaultValue : ((Integer) slot.fieldValue).intValue();
!!!181787.java!!!	get(inout name : String, in defaultValue : long) : long
        ObjectSlot slot = findMandatorySlot(name, long.class);
        return slot.defaulted ? defaultValue : ((Long) slot.fieldValue).longValue();
!!!181915.java!!!	get(inout name : String, inout defaultValue : Object) : Object
        ObjectSlot slot = findMandatorySlot(name, null);
        return slot.defaulted ? defaultValue : slot.fieldValue;
!!!182043.java!!!	get(inout name : String, in defaultValue : short) : short
        ObjectSlot slot = findMandatorySlot(name, short.class);
        return slot.defaulted ? defaultValue : ((Short) slot.fieldValue).shortValue();
!!!182171.java!!!	get(inout name : String, inout defaultValue : boolean) : boolean
        ObjectSlot slot = findMandatorySlot(name, boolean.class);
        return slot.defaulted ? defaultValue : ((Boolean) slot.fieldValue).booleanValue();
!!!182299.java!!!	put(inout name : String, in value : byte) : void
        ObjectSlot slot = findMandatorySlot(name, byte.class);
        slot.fieldValue = Byte.valueOf(value);
        slot.defaulted = false; // No longer default value
!!!182427.java!!!	put(inout name : String, in value : char) : void
        ObjectSlot slot = findMandatorySlot(name, char.class);
        slot.fieldValue = Character.valueOf(value);
        slot.defaulted = false; // No longer default value
!!!182555.java!!!	put(inout name : String, in value : double) : void
        ObjectSlot slot = findMandatorySlot(name, double.class);
        slot.fieldValue = Double.valueOf(value);
        slot.defaulted = false; // No longer default value
!!!182683.java!!!	put(inout name : String, in value : float) : void
        ObjectSlot slot = findMandatorySlot(name, float.class);
        slot.fieldValue = Float.valueOf(value);
        slot.defaulted = false; // No longer default value
!!!182811.java!!!	put(inout name : String, in value : int) : void
        ObjectSlot slot = findMandatorySlot(name, int.class);
        slot.fieldValue = Integer.valueOf(value);
        slot.defaulted = false; // No longer default value
!!!182939.java!!!	put(inout name : String, in value : long) : void
        ObjectSlot slot = findMandatorySlot(name, long.class);
        slot.fieldValue = Long.valueOf(value);
        slot.defaulted = false; // No longer default value
!!!183067.java!!!	put(inout name : String, inout value : Object) : void
        Class<?> valueClass = null;
        if (value != null) {
            valueClass = value.getClass();
        }
        ObjectSlot slot = findMandatorySlot(name, valueClass);
        slot.fieldValue = value;
        slot.defaulted = false; // No longer default value
!!!183195.java!!!	put(inout name : String, in value : short) : void
        ObjectSlot slot = findMandatorySlot(name, short.class);
        slot.fieldValue = Short.valueOf(value);
        slot.defaulted = false; // No longer default value
!!!183323.java!!!	put(inout name : String, inout value : boolean) : void
        ObjectSlot slot = findMandatorySlot(name, boolean.class);
        slot.fieldValue = Boolean.valueOf(value);
        slot.defaulted = false; // No longer default value
!!!183451.java!!!	slots() : ObjectSlot
        return slotsToSerialize;
