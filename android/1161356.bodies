class DrmManagerClient
!!!6337804.java!!!	notify(inout thisReference : Object, in uniqueId : int, in infoType : int, in message : String) : void
        DrmManagerClient instance = (DrmManagerClient)((WeakReference)thisReference).get();

        if (null != instance && null != instance.mInfoHandler) {
            Message m = instance.mInfoHandler.obtainMessage(
                InfoHandler.INFO_EVENT_TYPE, uniqueId, infoType, message);
            instance.mInfoHandler.sendMessage(m);
        }
!!!6338188.java!!!	DrmManagerClient(inout context : Context)
        mContext = context;
        mReleased = false;
        createEventThreads();

        // save the unique id
        mUniqueId = _initialize();
!!!6338316.java!!!	finalize() : void
        if (!mReleased) {
            Log.w(TAG, "You should have called release()");
            release();
        }
!!!6338444.java!!!	release() : void
        if (mReleased) {
            Log.w(TAG, "You have already called release()");
            return;
        }
        mReleased = true;
        if (mEventHandler != null) {
            mEventThread.quit();
            mEventThread = null;
        }
        if (mInfoHandler != null) {
            mInfoThread.quit();
            mInfoThread = null;
        }
        mEventHandler = null;
        mInfoHandler = null;
        mOnEventListener = null;
        mOnInfoListener = null;
        mOnErrorListener = null;
        _release(mUniqueId);
!!!6338572.java!!!	setOnInfoListener(inout infoListener : OnInfoListener) : void
        mOnInfoListener = infoListener;
        if (null != infoListener) {
            createListeners();
        }
!!!6338700.java!!!	setOnEventListener(inout eventListener : OnEventListener) : void
        mOnEventListener = eventListener;
        if (null != eventListener) {
            createListeners();
        }
!!!6338828.java!!!	setOnErrorListener(inout errorListener : OnErrorListener) : void
        mOnErrorListener = errorListener;
        if (null != errorListener) {
            createListeners();
        }
!!!6338956.java!!!	getAvailableDrmEngines() : String
        DrmSupportInfo[] supportInfos = _getAllSupportInfo(mUniqueId);
        ArrayList<String> descriptions = new ArrayList<String>();

        for (int i = 0; i < supportInfos.length; i++) {
            descriptions.add(supportInfos[i].getDescriprition());
        }

        String[] drmEngines = new String[descriptions.size()];
        return descriptions.toArray(drmEngines);
!!!6339084.java!!!	getConstraints(in path : String, in action : int) : ContentValues
        if (null == path || path.equals("") || !DrmStore.Action.isValid(action)) {
            throw new IllegalArgumentException("Given usage or path is invalid/null");
        }
        return _getConstraints(mUniqueId, path, action);
!!!6339212.java!!!	getMetadata(in path : String) : ContentValues
        if (null == path || path.equals("")) {
            throw new IllegalArgumentException("Given path is invalid/null");
        }
        return _getMetadata(mUniqueId, path);
!!!6339340.java!!!	getConstraints(inout uri : Uri, in action : int) : ContentValues
        if (null == uri || Uri.EMPTY == uri) {
            throw new IllegalArgumentException("Uri should be non null");
        }
        return getConstraints(convertUriToPath(uri), action);
!!!6339468.java!!!	getMetadata(inout uri : Uri) : ContentValues
        if (null == uri || Uri.EMPTY == uri) {
            throw new IllegalArgumentException("Uri should be non null");
        }
        return getMetadata(convertUriToPath(uri));
!!!6339596.java!!!	saveRights(inout drmRights : DrmRights, in rightsPath : String, in contentPath : String) : int
        if (null == drmRights || !drmRights.isValid()) {
            throw new IllegalArgumentException("Given drmRights or contentPath is not valid");
        }
        if (null != rightsPath && !rightsPath.equals("")) {
            DrmUtils.writeToFile(rightsPath, drmRights.getData());
        }
        return _saveRights(mUniqueId, drmRights, rightsPath, contentPath);
!!!6339724.java!!!	installDrmEngine(in engineFilePath : String) : void
        if (null == engineFilePath || engineFilePath.equals("")) {
            throw new IllegalArgumentException(
                "Given engineFilePath: "+ engineFilePath + "is not valid");
        }
        _installDrmEngine(mUniqueId, engineFilePath);
!!!6339852.java!!!	canHandle(in path : String, in mimeType : String) : boolean
        if ((null == path || path.equals("")) && (null == mimeType || mimeType.equals(""))) {
            throw new IllegalArgumentException("Path or the mimetype should be non null");
        }
        return _canHandle(mUniqueId, path, mimeType);
!!!6339980.java!!!	canHandle(inout uri : Uri, in mimeType : String) : boolean
        if ((null == uri || Uri.EMPTY == uri) && (null == mimeType || mimeType.equals(""))) {
            throw new IllegalArgumentException("Uri or the mimetype should be non null");
        }
        return canHandle(convertUriToPath(uri), mimeType);
!!!6340108.java!!!	processDrmInfo(inout drmInfo : DrmInfo) : int
        if (null == drmInfo || !drmInfo.isValid()) {
            throw new IllegalArgumentException("Given drmInfo is invalid/null");
        }
        int result = ERROR_UNKNOWN;
        if (null != mEventHandler) {
            Message msg = mEventHandler.obtainMessage(ACTION_PROCESS_DRM_INFO, drmInfo);
            result = (mEventHandler.sendMessage(msg)) ? ERROR_NONE : result;
        }
        return result;
!!!6340236.java!!!	acquireDrmInfo(inout drmInfoRequest : DrmInfoRequest) : DrmInfo
        if (null == drmInfoRequest || !drmInfoRequest.isValid()) {
            throw new IllegalArgumentException("Given drmInfoRequest is invalid/null");
        }
        return _acquireDrmInfo(mUniqueId, drmInfoRequest);
!!!6340364.java!!!	acquireRights(inout drmInfoRequest : DrmInfoRequest) : int
        DrmInfo drmInfo = acquireDrmInfo(drmInfoRequest);
        if (null == drmInfo) {
            return ERROR_UNKNOWN;
        }
        return processDrmInfo(drmInfo);
!!!6340492.java!!!	getDrmObjectType(in path : String, in mimeType : String) : int
        if ((null == path || path.equals("")) && (null == mimeType || mimeType.equals(""))) {
            throw new IllegalArgumentException("Path or the mimetype should be non null");
        }
        return _getDrmObjectType(mUniqueId, path, mimeType);
!!!6340620.java!!!	getDrmObjectType(inout uri : Uri, in mimeType : String) : int
        if ((null == uri || Uri.EMPTY == uri) && (null == mimeType || mimeType.equals(""))) {
            throw new IllegalArgumentException("Uri or the mimetype should be non null");
        }
        String path = "";
        try {
            path = convertUriToPath(uri);
        } catch (Exception e) {
            // Even uri is invalid the mimetype shall be valid, so allow to proceed further.
            Log.w(TAG, "Given Uri could not be found in media store");
        }
        return getDrmObjectType(path, mimeType);
!!!6340748.java!!!	getOriginalMimeType(in path : String) : String
        if (null == path || path.equals("")) {
            throw new IllegalArgumentException("Given path should be non null");
        }

        String mime = null;

        FileInputStream is = null;
        try {
            FileDescriptor fd = null;
            File file = new File(path);
            if (file.exists()) {
                is = new FileInputStream(file);
                fd = is.getFD();
            }
            mime = _getOriginalMimeType(mUniqueId, path, fd);
        } catch (IOException ioe) {
        } finally {
            if (is != null) {
                try {
                    is.close();
                } catch(IOException e) {}
            }
        }

        return mime;
!!!6340876.java!!!	getOriginalMimeType(inout uri : Uri) : String
        if (null == uri || Uri.EMPTY == uri) {
            throw new IllegalArgumentException("Given uri is not valid");
        }
        return getOriginalMimeType(convertUriToPath(uri));
!!!6341004.java!!!	checkRightsStatus(in path : String) : int
        return checkRightsStatus(path, DrmStore.Action.DEFAULT);
!!!6341132.java!!!	checkRightsStatus(inout uri : Uri) : int
        if (null == uri || Uri.EMPTY == uri) {
            throw new IllegalArgumentException("Given uri is not valid");
        }
        return checkRightsStatus(convertUriToPath(uri));
!!!6341260.java!!!	checkRightsStatus(in path : String, in action : int) : int
        if (null == path || path.equals("") || !DrmStore.Action.isValid(action)) {
            throw new IllegalArgumentException("Given path or action is not valid");
        }
        return _checkRightsStatus(mUniqueId, path, action);
!!!6341388.java!!!	checkRightsStatus(inout uri : Uri, in action : int) : int
        if (null == uri || Uri.EMPTY == uri) {
            throw new IllegalArgumentException("Given uri is not valid");
        }
        return checkRightsStatus(convertUriToPath(uri), action);
!!!6341516.java!!!	removeRights(in path : String) : int
        if (null == path || path.equals("")) {
            throw new IllegalArgumentException("Given path should be non null");
        }
        return _removeRights(mUniqueId, path);
!!!6341644.java!!!	removeRights(inout uri : Uri) : int
        if (null == uri || Uri.EMPTY == uri) {
            throw new IllegalArgumentException("Given uri is not valid");
        }
        return removeRights(convertUriToPath(uri));
!!!6341772.java!!!	removeAllRights() : int
        int result = ERROR_UNKNOWN;
        if (null != mEventHandler) {
            Message msg = mEventHandler.obtainMessage(ACTION_REMOVE_ALL_RIGHTS);
            result = (mEventHandler.sendMessage(msg)) ? ERROR_NONE : result;
        }
        return result;
!!!6341900.java!!!	openConvertSession(in mimeType : String) : int
        if (null == mimeType || mimeType.equals("")) {
            throw new IllegalArgumentException("Path or the mimeType should be non null");
        }
        return _openConvertSession(mUniqueId, mimeType);
!!!6342028.java!!!	convertData(in convertId : int, inout inputData : byte) : DrmConvertedStatus
        if (null == inputData || 0 >= inputData.length) {
            throw new IllegalArgumentException("Given inputData should be non null");
        }
        return _convertData(mUniqueId, convertId, inputData);
!!!6342156.java!!!	closeConvertSession(in convertId : int) : DrmConvertedStatus
        return _closeConvertSession(mUniqueId, convertId);
!!!6342284.java!!!	getEventType(in infoType : int) : int
        int eventType = -1;

        switch (infoType) {
        case DrmInfoRequest.TYPE_REGISTRATION_INFO:
        case DrmInfoRequest.TYPE_UNREGISTRATION_INFO:
        case DrmInfoRequest.TYPE_RIGHTS_ACQUISITION_INFO:
            eventType = DrmEvent.TYPE_DRM_INFO_PROCESSED;
            break;
        }
        return eventType;
!!!6342412.java!!!	getErrorType(in infoType : int) : int
        int error = -1;

        switch (infoType) {
        case DrmInfoRequest.TYPE_REGISTRATION_INFO:
        case DrmInfoRequest.TYPE_UNREGISTRATION_INFO:
        case DrmInfoRequest.TYPE_RIGHTS_ACQUISITION_INFO:
            error = DrmErrorEvent.TYPE_PROCESS_DRM_INFO_FAILED;
            break;
        }
        return error;
!!!6342540.java!!!	convertUriToPath(inout uri : Uri) : String
        String path = null;
        if (null != uri) {
            String scheme = uri.getScheme();
            if (null == scheme || scheme.equals("") ||
                    scheme.equals(ContentResolver.SCHEME_FILE)) {
                path = uri.getPath();

            } else if (scheme.equals("http")) {
                path = uri.toString();

            } else if (scheme.equals(ContentResolver.SCHEME_CONTENT)) {
                String[] projection = new String[] {MediaStore.MediaColumns.DATA};
                Cursor cursor = null;
                try {
                    cursor = mContext.getContentResolver().query(uri, projection, null,
                            null, null);
                    if (null == cursor || 0 == cursor.getCount() || !cursor.moveToFirst()) {
                        throw new IllegalArgumentException("Given Uri could not be found" +
                                " in media store");
                    }
                    int pathIndex = cursor.getColumnIndexOrThrow(MediaStore.MediaColumns.DATA);
                    path = cursor.getString(pathIndex);
                } catch (SQLiteException e) {
                    throw new IllegalArgumentException("Given Uri is not formatted in a way " +
                            "so that it can be found in media store.");
                } finally {
                    if (null != cursor) {
                        cursor.close();
                    }
                }
            } else {
                throw new IllegalArgumentException("Given Uri scheme is not supported");
            }
        }
        return path;
!!!6345100.java!!!	createEventThreads() : void
        if (mEventHandler == null && mInfoHandler == null) {
            mInfoThread = new HandlerThread("DrmManagerClient.InfoHandler");
            mInfoThread.start();
            mInfoHandler = new InfoHandler(mInfoThread.getLooper());

            mEventThread = new HandlerThread("DrmManagerClient.EventHandler");
            mEventThread.start();
            mEventHandler = new EventHandler(mEventThread.getLooper());
        }
!!!6345228.java!!!	createListeners() : void
        _setListeners(mUniqueId, new WeakReference<DrmManagerClient>(this));
