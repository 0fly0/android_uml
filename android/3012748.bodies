class ShutdownTimerService
!!!12299660.java!!!	onBind(inout arg0 : Intent) : IBinder
        return null;
!!!12299788.java!!!	onCreate() : void
        super.onCreate();
        Log.d(TAG, "onCreate");
        mContext = getApplicationContext();

        mRefreshReceiver = new BroadcastReceiver() {
            @Override
            public void onReceive(Context context, Intent intent) {
                if (intent.getAction().equals(getRefreshAction())) {
                    refreshTimer();
                } else if (intent.getAction().equals(getStopAction())) {
                    stopTimer();
                }
            }
        };

        final IntentFilter filter = new IntentFilter();
        filter.addAction(getRefreshAction());
        filter.addAction(getStopAction());
        registerReceiver(mRefreshReceiver, filter);
!!!12299916.java!!!	onStartCommand(inout intent : Intent, in flags : int, in startId : int) : int
        Log.d(TAG, "onStartCommand");

        if (intent != null) {
            mTimerValue = intent.getIntExtra(EXTRA_TIMER_VALUE, 2 * Utils.ONE_MINUTE);
            startTimer();
        }
        return super.onStartCommand(intent, flags, startId);
!!!12300044.java!!!	onDestroy() : void
        Log.d(TAG, "onDestroy");

        super.onDestroy();
        stopTimer();
        unregisterReceiver(mRefreshReceiver);
!!!12300172.java!!!	getRefreshAction() : String
        return "com.marvell.willowtv.REFRESH_SHUTDOWN_TIMER";
!!!12300300.java!!!	getStopAction() : String
        return "com.marvell.willowtv.STOP_SHUTDOWN_TIMER";
!!!12300428.java!!!	getCancelAction() : String
        return getStopAction();
!!!12300556.java!!!	isTimerActive() : boolean
        return isTimerActive;
!!!12300684.java!!!	startTimer() : void
        Log.d(TAG, "start Timer");
        isTimerActive = true;
        mHandler.removeCallbacks(mTimerExpiredRunnable);
        mHandler.postDelayed(mTimerExpiredRunnable, mTimerValue);
!!!12300812.java!!!	refreshTimer() : void
        Log.d(TAG, "refresh Timer");
        isTimerActive = true;
        mHandler.removeCallbacks(mTimerExpiredRunnable);
        mHandler.removeCallbacks(mShutdownRunnable);
        mHandler.postDelayed(mTimerExpiredRunnable, mTimerValue);
!!!12300940.java!!!	stopTimer() : void
        Log.d(TAG, "stop Timer");
        isTimerActive = false;
        mHandler.removeCallbacks(mTimerExpiredRunnable);
        mHandler.removeCallbacks(mShutdownRunnable);
