class TtmlFragmentParser
!!!13322508.java!!!	setTtmlFragment(in ttmlFragment : String) : boolean
        reset();
        return loadParser(ttmlFragment) && parseHead() && parseBody();
!!!13322636.java!!!	getResult() : StyledText
        return mResult;
!!!13322764.java!!!	reset() : void
        mParser = null;
        mStyleMap = new HashMap<String, Style>();
        mRegionMap = new HashMap<String, Style>();
        mResult = new LinkedList<StyledText>();
!!!13322892.java!!!	loadParser(in ttmlFragment : String) : boolean
        XmlPullParserFactory factory = XmlPullParserFactory.newInstance();
        factory.setNamespaceAware(true);
        mParser = factory.newPullParser();
        StringReader in = new StringReader(ttmlFragment);
        mParser.setInput(in);
        return true;
!!!13323020.java!!!	parseHead() : boolean
        while (!isStartOfTag(TAG_BODY) && !isEndOfDoc()) {
            if (isStartOfTag(TAG_STYLE)) {
                registerStyle(mParser);
            } else if (isStartOfTag(TAG_REGION)) {
                registerRegion(mParser);
            }
            mParser.nextTag();
        }
        if (isEndOfDoc()) {
            return false;
        }
        return true;
!!!13323148.java!!!	parseBody() : boolean
        if (!isStartOfTag(TAG_BODY)) {
            return false;
        }

        boolean isInPTag = false;
        LinkedList<Style> styleStack = new LinkedList<Style>();
        Style currentStyle = new Style();
        styleStack.add(currentStyle);

        while (!isEndOfTag(TAG_P) && !isEndOfDoc()) {
            int eventType = mParser.getEventType();
            if (eventType == XmlPullParser.START_TAG
                    && isContentTag(mParser.getName())) {
                currentStyle = extractStyleForElement(
                        styleStack.getLast(), mParser);
                styleStack.addLast(currentStyle);
                if (mParser.getName().equals(TAG_P)) {
                    isInPTag = true;
                }
            } else if (eventType == XmlPullParser.END_TAG
                    && isContentTag(mParser.getName())) {
                styleStack.removeLast();
                currentStyle = styleStack.getLast();
                if (mParser.getName().equals(TAG_P)) {
                    isInPTag = false;
                }
            } else if (isStartOfTag(TAG_BR)) {
                if (mResult.isEmpty()){
                    mResult.addLast(new StyledText(currentStyle, ""));
                }
                mResult.getLast().text += "<br/>";
            } else if (isInPTag && eventType == XmlPullParser.TEXT) {
                mResult.addLast(
                        new StyledText(currentStyle, mParser.getText()));
            }
            mParser.next();
        }

        if (mResult.isEmpty()) {
            return false;
        }
        return true;
!!!13323276.java!!!	extractStyleForElement(inout baseStyle : Style, inout elem : XmlPullParser) : Style
        Style styleFromElem = extractStyleAttr(elem);
        // Apply styles with the following order.
        // 1. inherited style from parent.
        Style style = new Style(baseStyle);
        // 2. style from region id.
        String regionId = elem.getAttributeValue(null, ATTR_REGION);
        if (regionId != null) {
            Style registerdRegion = getRegisteredRegion(regionId);
            if (registerdRegion != null) {
                style = mergeStyles(style, registerdRegion);
            }
        }
        // 3. style from style id.
        if (styleFromElem.parentStyleId != null) {
            Style registerdStyle =
                    getRegisteredStyle(styleFromElem.parentStyleId);
            if (registerdStyle != null) {
                style = mergeStyles(style, registerdStyle);
            }
        }
        // 4. style from the current node's attributes.
        return mergeStyles(style, styleFromElem);
!!!13323404.java!!!	getRegisteredRegion(in regionId : String) : Style
        Style region = mRegionMap.get(regionId);
        if (region != null && region.parentStyleId != null) {
            Style parent = getRegisteredStyle(region.parentStyleId);
            if (parent != null) {
                region = mergeStyles(parent, region);
            }
        }
        return region;
!!!13323532.java!!!	getRegisteredStyle(in styleId : String) : Style
        // TODO: need to check cycle in order to prevent the stack overflow.
        Style style = mStyleMap.get(styleId);
        if (style != null && style.parentStyleId != null) {
            Style parent = getRegisteredStyle(style.parentStyleId);
            if (parent != null) {
                style = mergeStyles(parent, style);
            }
        }
        return style;
!!!13323660.java!!!	mergeStyles(inout baseStyle : Style, inout styleToProject : Style) : Style
        Style mergedStyle = new Style(baseStyle);
        if (styleToProject.backgroundColor != null) {
            mergedStyle.backgroundColor = styleToProject.backgroundColor;
        }
        if (styleToProject.color != null) {
            mergedStyle.color = styleToProject.color;
        }
        if (styleToProject.displayAlign != null) {
            mergedStyle.displayAlign = styleToProject.displayAlign;
        }
        if (styleToProject.extent != null) {
            mergedStyle.extent = styleToProject.extent;
        }
        if (styleToProject.fontFamily != null) {
            mergedStyle.fontFamily = styleToProject.fontFamily;
        }
        if (styleToProject.fontWeight != null) {
            mergedStyle.fontWeight = styleToProject.fontWeight;
        }
        if (styleToProject.fontStyle != null) {
            mergedStyle.fontStyle = styleToProject.fontStyle;
        }
        if (styleToProject.fontSize != null) {
            mergedStyle.fontSize = styleToProject.fontSize;
        }
        if (styleToProject.origin != null) {
            mergedStyle.origin = styleToProject.origin;
        }
        if (styleToProject.parentStyleId != null) {
            mergedStyle.parentStyleId = styleToProject.parentStyleId;
        }
        if (styleToProject.textAlign != null) {
            mergedStyle.textAlign = styleToProject.textAlign;
        }
        return mergedStyle;
!!!13323788.java!!!	registerStyle(inout styleElem : XmlPullParser) : boolean
        Style style = extractStyleAttr(styleElem);
        if (style.id != null) {
            mStyleMap.put(style.id, style);
        } else {
            Log.w(TAG, "style tag without id is not allowed.");
            // TODO: Support style tag without id.
            //       This would be style tags included in a region tag.
            //       An example can be found at:
            // http://www.w3.org/TR/ttaf1-dfxp/#region-mapping-example-1-s
            return false;
        }
        return true;
!!!13323916.java!!!	registerRegion(inout regionElem : XmlPullParser) : boolean
        Style style = extractStyleAttr(regionElem);
        if (style.id != null) {
            mRegionMap.put(style.id, style);
        } else {
            Log.w(TAG, "region tag without id is not allowed.");
            return false;
        }
        return true;
!!!13324044.java!!!	extractStyleAttr(inout styleElem : XmlPullParser) : Style
        Style style = new Style();
        for (int i = 0; i < styleElem.getAttributeCount(); ++i) {
            String attrName = styleElem.getAttributeName(i);
            if (attrName.equals(ATTR_BACKGROUNDCOLOR)) {
                style.backgroundColor = styleElem.getAttributeValue(i);
            } else if (attrName.equals(ATTR_COLOR)) {
                style.color = styleElem.getAttributeValue(i);
            } else if (attrName.equals(ATTR_DISPLAYALIGN)) {
                style.displayAlign = styleElem.getAttributeValue(i);
            } else if (attrName.equals(ATTR_EXTENT)) {
                style.extent = styleElem.getAttributeValue(i);
            } else if (attrName.equals(ATTR_FONTFAMILY)) {
                style.fontFamily = styleElem.getAttributeValue(i);
            } else if (attrName.equals(ATTR_FONTWEIGHT)) {
                style.fontWeight = styleElem.getAttributeValue(i);
            } else if (attrName.equals(ATTR_FONTSTYLE)) {
                style.fontStyle = styleElem.getAttributeValue(i);
            } else if (attrName.equals(ATTR_FONTSIZE)) {
                style.fontSize = styleElem.getAttributeValue(i);
            } else if (attrName.equals(ATTR_ID)) {
                style.id = styleElem.getAttributeValue(i);
            } else if (attrName.equals(ATTR_ORIGIN)) {
                style.origin = styleElem.getAttributeValue(i);
            } else if (attrName.equals(ATTR_STYLE)) {
                style.parentStyleId = styleElem.getAttributeValue(i);
            } else if (attrName.equals(ATTR_TEXTALIGN)) {
                style.textAlign = styleElem.getAttributeValue(i);
            }
        }
        return style;
!!!13324172.java!!!	isStartOfTag(in tag : String) : boolean
        return (mParser.getEventType() == XmlPullParser.START_TAG
                && mParser.getName().equals(tag));
!!!13324300.java!!!	isEndOfTag(in tag : String) : boolean
        return (mParser.getEventType() == XmlPullParser.END_TAG
                && mParser.getName().equals(tag));
!!!13324428.java!!!	isEndOfDoc() : boolean
        return (mParser.getEventType() == XmlPullParser.END_DOCUMENT);
!!!13324556.java!!!	isContentTag(in tag : String) : boolean
        if (tag.equals(TAG_BODY)
                || tag.equals(TAG_DIV)
                || tag.equals(TAG_P)
                || tag.equals(TAG_SPAN)) {
            return true;
        }
        return false;
