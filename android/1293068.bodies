class NotificationData
!!!7639692.java!!!	size() : int
        return mEntries.size();
!!!7639820.java!!!	get(in i : int) : Entry
        return mEntries.get(i);
!!!7639948.java!!!	findByKey(inout key : IBinder) : Entry
        for (Entry e : mEntries) {
            if (e.key == key) {
                return e;
            }
        }
        return null;
!!!7640076.java!!!	add(inout entry : Entry) : int
        int i;
        int N = mEntries.size();
        for (i=0; i<N; i++) {
            if (mEntryCmp.compare(mEntries.get(i), entry) > 0) {
                break;
            }
        }
        mEntries.add(i, entry);
        return i;
!!!7640204.java!!!	add(inout key : IBinder, inout notification : StatusBarNotification, inout row : View, inout content : View, inout expanded : View, inout icon : StatusBarIconView) : int
        Entry entry = new Entry();
        entry.key = key;
        entry.notification = notification;
        entry.row = row;
        entry.content = content;
        entry.expanded = expanded;
        entry.icon = icon;
        entry.largeIcon = null; // TODO add support for large icons
        return add(entry);
!!!7640332.java!!!	remove(inout key : IBinder) : Entry
        Entry e = findByKey(key);
        if (e != null) {
            mEntries.remove(e);
        }
        return e;
!!!7640460.java!!!	hasVisibleItems() : boolean
        for (Entry e : mEntries) {
            if (e.expanded != null) { // the view successfully inflated
                return true;
            }
        }
        return false;
!!!7640588.java!!!	hasClearableItems() : boolean
        for (Entry e : mEntries) {
            if (e.expanded != null) { // the view successfully inflated
                if (e.notification.isClearable()) {
                    return true;
                }
            }
        }
        return false;
!!!7640716.java!!!	readBooleanTag(inout view : View, in id : int) : boolean
        if (view != null) {
            Object value = view.getTag(id);
            return value != null && value instanceof Boolean && ((Boolean) value).booleanValue();
        }
        return false;
!!!7640844.java!!!	writeBooleanTag(inout view : View, in id : int, inout value : boolean) : boolean
        if (view != null) {
            view.setTag(id, Boolean.valueOf(value));
            return value;
        }
        return false;
!!!7640972.java!!!	getIsExpandable(inout row : View) : boolean
        return readBooleanTag(row, R.id.expandable_tag);
!!!7641100.java!!!	getUserExpanded(inout row : View) : boolean
        return readBooleanTag(row, R.id.user_expanded_tag);
!!!7641228.java!!!	setUserExpanded(inout row : View, inout userExpanded : boolean) : boolean
        return writeBooleanTag(row, R.id.user_expanded_tag, userExpanded);
!!!7641356.java!!!	getUserLocked(inout row : View) : boolean
        return readBooleanTag(row, R.id.user_lock_tag);
!!!7641484.java!!!	setUserLocked(inout row : View, inout userLocked : boolean) : boolean
        return writeBooleanTag(row, R.id.user_lock_tag, userLocked);
