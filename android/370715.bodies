class OpenSSLX509CertificateFactory
!!!2474523.java!!!	engineGenerateCertificate(inout inStream : InputStream) : Certificate
        try {
            return certificateParser.generateItem(inStream);
        } catch (ParsingException e) {
            throw new CertificateException(e);
        }
!!!2474651.java!!!	engineGenerateCertificates(inout inStream : InputStream) : Collection
        try {
            return certificateParser.generateItems(inStream);
        } catch (ParsingException e) {
            throw new CertificateException(e);
        }
!!!2474779.java!!!	engineGenerateCRL(inout inStream : InputStream) : CRL
        try {
            return crlParser.generateItem(inStream);
        } catch (ParsingException e) {
            throw new CRLException(e);
        }
!!!2474907.java!!!	engineGenerateCRLs(inout inStream : InputStream) : Collection
        if (inStream == null) {
            return Collections.emptyList();
        }

        try {
            return crlParser.generateItems(inStream);
        } catch (ParsingException e) {
            throw new CRLException(e);
        }
!!!2475035.java!!!	engineGetCertPathEncodings() : Iterator
        return OpenSSLX509CertPath.getEncodingsIterator();
!!!2475163.java!!!	engineGenerateCertPath(inout inStream : InputStream) : CertPath
        return OpenSSLX509CertPath.fromEncoding(inStream);
!!!2475291.java!!!	engineGenerateCertPath(inout inStream : InputStream, inout encoding : String) : CertPath
        return OpenSSLX509CertPath.fromEncoding(inStream, encoding);
!!!2475419.java!!!	engineGenerateCertPath(inout certificates : List) : CertPath
        final List<X509Certificate> filtered = new ArrayList<X509Certificate>(certificates.size());
        for (int i = 0; i < certificates.size(); i++) {
            final Certificate c = certificates.get(i);

            if (!(c instanceof X509Certificate)) {
                throw new CertificateException("Certificate not X.509 type at index " + i);
            }

            filtered.add((X509Certificate) c);
        }

        return new OpenSSLX509CertPath(filtered);
