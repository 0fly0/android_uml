class Point
!!!7058444.java!!!	Point(in x : float, in y : float)
        this.x = x;
        this.y = y;
!!!7058572.java!!!	set(in x : float, in y : float) : void
        this.x = x;
        this.y = y;
!!!7058700.java!!!	IsInUnitRange() : boolean
        return x >= 0.0f && x <= 1.0f &&
               y >= 0.0f && y <= 1.0f;
!!!7058828.java!!!	plus(in x : float, in y : float) : Point
        return new Point(this.x + x, this.y + y);
!!!7058956.java!!!	plus(inout point : Point) : Point
        return this.plus(point.x, point.y);
!!!7059084.java!!!	minus(in x : float, in y : float) : Point
        return new Point(this.x - x, this.y - y);
!!!7059212.java!!!	minus(inout point : Point) : Point
        return this.minus(point.x, point.y);
!!!7059340.java!!!	times(in s : float) : Point
        return new Point(this.x * s, this.y * s);
!!!7059468.java!!!	mult(in x : float, in y : float) : Point
        return new Point(this.x * x, this.y * y);
!!!7059596.java!!!	length() : float
        return (float)Math.sqrt(x*x + y*y);
!!!7059724.java!!!	distanceTo(inout p : Point) : float
        return p.minus(this).length();
!!!7059852.java!!!	scaledTo(in length : float) : Point
        return this.times(length / this.length());
!!!7059980.java!!!	normalize() : Point
        return this.scaledTo(1.0f);
!!!7060108.java!!!	rotated90(in count : int) : Point
        float nx = this.x;
        float ny = this.y;
        for (int i = 0; i < count; ++i) {
            float ox = nx;
            nx = ny;
            ny = -ox;
        }
        return new Point(nx, ny);
!!!7060236.java!!!	rotated(in radians : float) : Point
        // TODO(renn): Optimize: Keep cache of cos/sin values
        return new Point((float)(Math.cos(radians) * x - Math.sin(radians) * y),
                         (float)(Math.sin(radians) * x + Math.cos(radians) * y));
!!!7060364.java!!!	rotatedAround(inout center : Point, in radians : float) : Point
        return this.minus(center).rotated(radians).plus(center);
!!!7060492.java!!!	toString() : String
        return "(" + x + ", " + y + ")";
