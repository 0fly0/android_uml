class Picture
!!!6407564.java!!!	Picture()
        this(nativeConstructor(0), false);
!!!6407692.java!!!	Picture(inout src : Picture)
        this(nativeConstructor(src != null ? src.mNativePicture : 0), false);
!!!6407820.java!!!	beginRecording(in width : int, in height : int) : Canvas
        int ni = nativeBeginRecording(mNativePicture, width, height);
        mRecordingCanvas = new RecordingCanvas(this, ni);
        return mRecordingCanvas;
!!!6407948.java!!!	endRecording() : void
        if (mRecordingCanvas != null) {
            mRecordingCanvas = null;
            nativeEndRecording(mNativePicture);
        }
!!!6408332.java!!!	draw(inout canvas : Canvas) : void
        if (mRecordingCanvas != null) {
            endRecording();
        }
        nativeDraw(canvas.mNativeCanvas, mNativePicture);
!!!6408460.java!!!	createFromStream(inout stream : InputStream) : Picture
        return new Picture(nativeCreateFromStream(stream, new byte[WORKING_STREAM_STORAGE]), true);
!!!6408588.java!!!	writeToStream(inout stream : OutputStream) : void
        // do explicit check before calling the native method
        if (stream == null) {
            throw new NullPointerException();
        }
        if (!nativeWriteToStream(mNativePicture, stream,
                             new byte[WORKING_STREAM_STORAGE])) {
            throw new RuntimeException();
        }
!!!6408716.java!!!	finalize() : void
        try {
            nativeDestructor(mNativePicture);
        } finally {
            super.finalize();
        }
!!!6408844.java!!!	ni() : int
        return mNativePicture;
!!!6408972.java!!!	Picture(in nativePicture : int, inout fromStream : boolean)
        if (nativePicture == 0) {
            throw new RuntimeException();
        }
        mNativePicture = nativePicture;
        createdFromStream = fromStream;
