class DuotoneFilter
!!!7086604.java!!!	DuotoneFilter(in name : String)
      super(name);
!!!7086732.java!!!	setupPorts() : void
        addMaskedInputPort("image", ImageFormat.create(ImageFormat.COLORSPACE_RGBA));
        addOutputBasedOnInput("image", "image");
!!!7086860.java!!!	getOutputFormat(in portName : String, inout inputFormat : FrameFormat) : FrameFormat
        return inputFormat;
!!!7086988.java!!!	initProgram(inout context : FilterContext, in target : int) : void
        switch (target) {
            case FrameFormat.TARGET_GPU:
                ShaderProgram shaderProgram = new ShaderProgram(context, mDuotoneShader);
                shaderProgram.setMaximumTileSize(mTileSize);
                mProgram = shaderProgram;
                break;

            default:
                throw new RuntimeException("Filter Duotone does not support frames of " +
                    "target " + target + "!");
        }
        mTarget = target;
!!!7087116.java!!!	process(inout context : FilterContext) : void
        // Get input frame
        Frame input = pullInput("image");
        FrameFormat inputFormat = input.getFormat();

        // Create output frame
        Frame output = context.getFrameManager().newFrame(inputFormat);

        // Create program if not created already
        if (mProgram == null || inputFormat.getTarget() != mTarget) {
            initProgram(context, inputFormat.getTarget());
        }
        updateParameters();

        // Process
        mProgram.process(input, output);

        // Push output
        pushOutput("image", output);

        // Release pushed frame
        output.release();
!!!7087244.java!!!	updateParameters() : void
        float first[] = { Color.red(mFirstColor)/255f,
                Color.green(mFirstColor)/255f,
                Color.blue(mFirstColor)/255f };
        float second[] = { Color.red(mSecondColor)/255f,
                Color.green(mSecondColor)/255f,
                Color.blue(mSecondColor)/255f };

        mProgram.setHostValue("first", first);
        mProgram.setHostValue("second", second);
