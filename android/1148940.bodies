class TouchModeFocusableTest
!!!6294028.java!!!	TouchModeFocusableTest()
        super("com.android.frameworks.coretests", LLEditTextThenButton.class);
!!!6294156.java!!!	setUp() : void
        super.setUp();

        mEditText = getActivity().getEditText();
        mButton = getActivity().getButton();
!!!6294284.java!!!	testPreconditions() : void
        assertFalse("should not be in touch mode to start off", mButton.isInTouchMode());
        assertTrue("edit text should have focus", mEditText.isFocused());
        assertTrue("edit text should be focusable in touch mode", mEditText.isFocusableInTouchMode());
!!!6294412.java!!!	testClickButtonEditTextKeepsFocus() : void
        assertInTouchModeAfterTap(this, mButton);
        assertTrue("should be in touch mode", mButton.isInTouchMode());
        assertTrue("edit text should still have focus", mEditText.isFocused());
!!!6294540.java!!!	testClickEditTextGivesItFocus() : void
        // go down to button
        sendKeys(KeyEvent.KEYCODE_DPAD_DOWN);
        assertTrue("button should have focus", mButton.isFocused());

        assertInTouchModeAfterClick(this, mEditText);
        assertTrue("clicking edit text should have entered touch mode", mButton.isInTouchMode());
        assertTrue("clicking edit text should have given it focus", mEditText.isFocused());
!!!6294668.java!!!	testEnterTouchModeGivesFocusBackToFocusableInTouchMode() : void
        sendKeys(KeyEvent.KEYCODE_DPAD_DOWN);

        assertTrue("button should have focus",
                mButton.isFocused());
        
        assertInTouchModeAfterClick(this, mButton);
        assertTrue("should be in touch mode", mButton.isInTouchMode());
        assertNull("nothing should have focus", getActivity().getCurrentFocus());
        assertFalse("layout should not have focus",
                getActivity().getLayout().hasFocus());
