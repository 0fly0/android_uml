class Connection
!!!4171276.java!!!	onServiceConnected(inout name : ComponentName, inout service : IBinder) : void
            Log.i(TAG, "Connected to " + name);
            synchronized(mStartLock) {
                if (mServiceConnection != null) {
                    // Disconnect any previous service connection
                    mServiceConnection.disconnect();
                }
                mServiceConnection = this;
                mService = ITextToSpeechService.Stub.asInterface(service);
                try {
                    mService.setCallback(getCallerIdentity(), mCallback);
                    dispatchOnInit(SUCCESS);
                } catch (RemoteException re) {
                    Log.e(TAG, "Error connecting to service, setCallback() failed");
                    dispatchOnInit(ERROR);
                }
            }
!!!4171404.java!!!	getCallerIdentity() : IBinder
            return mCallback;
!!!4171532.java!!!	onServiceDisconnected(inout name : ComponentName) : void
            synchronized(mStartLock) {
                mService = null;
                // If this is the active connection, clear it
                if (mServiceConnection == this) {
                    mServiceConnection = null;
                }
            }
!!!4171660.java!!!	disconnect() : void
            mContext.unbindService(this);

            synchronized (mStartLock) {
                mService = null;
                // If this is the active connection, clear it
                if (mServiceConnection == this) {
                    mServiceConnection = null;
                }

            }
!!!4171788.java!!!	runAction(inout action : Action, inout errorResult : R, in method : String, inout reconnect : boolean) : R
            synchronized (mStartLock) {
                try {
                    if (mService == null) {
                        Log.w(TAG, method + " failed: not connected to TTS engine");
                        return errorResult;
                    }
                    return action.run(mService);
                } catch (RemoteException ex) {
                    Log.e(TAG, method + " failed", ex);
                    if (reconnect) {
                        disconnect();
                        initTts();
                    }
                    return errorResult;
                }
            }
