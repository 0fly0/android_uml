class SqliteProviderHelper
!!!13283340.java!!!	SqliteProviderHelper(inout databaseHelper : SQLiteOpenHelper, in tableName : String, in defaultSortOrder : String, in mimeSubType : String, inout projectionMap : Map<String, String>, inout mutable : boolean)
        this(new SqliteDatabaseProxy(databaseHelper), tableName, null, defaultSortOrder,
                mimeSubType, projectionMap, mutable);
!!!13283468.java!!!	SqliteProviderHelper(inout databaseHelper : SQLiteOpenHelper, in tableName : String, in defaultGroupBy : String, in defaultSortOrder : String, in mimeSubType : String, inout projectionMap : Map<String, String>, inout mutable : boolean)
        this(new SqliteDatabaseProxy(databaseHelper), tableName, defaultGroupBy, defaultSortOrder,
                mimeSubType, projectionMap, mutable);
!!!13283596.java!!!	SqliteProviderHelper(inout databaseProxy : DatabaseProxy, in tableName : String, in defaultGroupBy : String, in defaultSortOrder : String, in mimeSubType : String, inout projectionMap : Map<String, String>, inout mutable : boolean)
        mDatabaseProxy = databaseProxy;
        mTableName = tableName;
        mDefaultGroupBy = defaultGroupBy;
        mDefaultSortOrder = defaultSortOrder;
        mMimeSubType = mimeSubType;
        mProjectionMap = projectionMap;
        mMutable = mutable;
!!!13283724.java!!!	getMimeSubType() : String
        return mMimeSubType;
!!!13283852.java!!!	query(inout uri : Uri, inout projection : String, in selection : String, inout selectionArgs : String, in sortOrder : String, in limit : String) : Cursor
        SQLiteQueryBuilder builder = new SQLiteQueryBuilder();
        builder.setTables(mTableName);
        builder.setProjectionMap(mProjectionMap);
        if (sortOrder == null) {
            sortOrder = mDefaultSortOrder;
        }
        String sql = builder.buildQuery(projection, selection, mDefaultGroupBy, null, sortOrder,
                limit);

        return mDatabaseProxy.query(sql, selectionArgs);
!!!13283980.java!!!	insert(inout values : ContentValues) : long
        checkMutability();
        long id = mDatabaseProxy.insert(mTableName, values);
        afterMutation(1);
        return id;
!!!13284108.java!!!	update(inout values : ContentValues, in where : String, inout whereArgs : String) : int
        checkMutability();
        int count = mDatabaseProxy.update(mTableName, values, where, whereArgs);
        afterMutation(count);
        return count;
!!!13284236.java!!!	delete(in where : String, inout whereArgs : String) : int
        checkMutability();
        int count = mDatabaseProxy.delete(mTableName, where, whereArgs);
        afterMutation(count);
        return count;
!!!13284492.java!!!	checkMutability() : void
        if (!mMutable || mProjectionMap != null) {
            throw new UnsupportedOperationException(
                    "Provider does not support mutation.");
        }
