class IssuingDistributionPoint
!!!2234907.java!!!	IssuingDistributionPoint(inout distributionPoint : DistributionPointName, inout onlySomeReasons : ReasonFlags)
        this.distributionPoint = distributionPoint;
        this.onlySomeReasons = onlySomeReasons;
!!!2235035.java!!!	decode(inout encoding : byte) : IssuingDistributionPoint
        IssuingDistributionPoint idp =
            (IssuingDistributionPoint) ASN1.decode(encoding);
        idp.encoding = encoding;
        return idp;
!!!2235163.java!!!	setOnlyContainsUserCerts(inout onlyContainsUserCerts : boolean) : void
        this.onlyContainsUserCerts = onlyContainsUserCerts;
!!!2235291.java!!!	setOnlyContainsCACerts(inout onlyContainsCACerts : boolean) : void
        this.onlyContainsCACerts = onlyContainsCACerts;
!!!2235419.java!!!	setIndirectCRL(inout indirectCRL : boolean) : void
        this.indirectCRL = indirectCRL;
!!!2235547.java!!!	setOnlyContainsAttributeCerts(inout onlyContainsAttributeCerts : boolean) : void
        this.onlyContainsAttributeCerts = onlyContainsAttributeCerts;
!!!2235675.java!!!	getEncoded() : byte
        if (encoding == null) {
            encoding = ASN1.encode(this);
        }
        return encoding;
!!!2235803.java!!!	dumpValue(inout sb : StringBuilder, inout prefix : String) : void
        sb.append(prefix).append("Issuing Distribution Point: [\n");
        if (distributionPoint != null) {
            distributionPoint.dumpValue(sb, "  " + prefix);
        }
        sb.append(prefix).append("  onlyContainsUserCerts: ").append(onlyContainsUserCerts).append('\n');
        sb.append(prefix).append("  onlyContainsCACerts: ").append(onlyContainsCACerts).append('\n');
        if (onlySomeReasons != null) {
            onlySomeReasons.dumpValue(sb, prefix + "  ");
        }
        sb.append(prefix).append("  indirectCRL: ").append(indirectCRL).append('\n');
        sb.append(prefix).append("  onlyContainsAttributeCerts: ").append(onlyContainsAttributeCerts).append('\n');
