class SensorDescriptor
!!!13072524.java!!!	SensorDescriptor(in id : int, inout type : SensorType, in range : float, in resolution : float, in minDelay : int, in description : String)
    mSensorId = id;
    mSensorType = type;
    mRange = range;
    mResolution = resolution;
    mMinDelay = minDelay;
    mDescription = description;
!!!13072652.java!!!	getId() : int
    return mSensorId;
!!!13072780.java!!!	getType() : SensorType
    return mSensorType;
!!!13072908.java!!!	getRange() : float
    return mRange;
!!!13073036.java!!!	getResolution() : float
    return mResolution;
!!!13073164.java!!!	getMinDelay() : int
    return mMinDelay;
!!!13073292.java!!!	getDescription() : String
    return mDescription;
!!!13073420.java!!!	hashCode() : int
    final int prime = 31;
    int result = 1;
    result = prime + ((mDescription == null) ? 0 : mDescription.hashCode());
    result = prime * result + mMinDelay;
    result = prime * result + Float.floatToIntBits(mRange);
    result = prime * result + Float.floatToIntBits(mResolution);
    result = prime * result + mSensorId;
    return result;
!!!13073548.java!!!	equals(inout obj : Object) : boolean
    if (this == obj)
      return true;
    if (obj == null)
      return false;
    if (getClass() != obj.getClass())
      return false;
    SensorDescriptor other = (SensorDescriptor) obj;
    if (mDescription == null) {
      if (other.mDescription != null)
        return false;
    } else if (!mDescription.equals(other.mDescription))
      return false;
    if (mMinDelay != other.mMinDelay)
      return false;
    if (Float.floatToIntBits(mRange) != Float.floatToIntBits(other.mRange))
      return false;
    if (Float.floatToIntBits(mResolution) != Float.floatToIntBits(other.mResolution))
      return false;
    if (mSensorId != other.mSensorId)
      return false;
    return true;
!!!13073676.java!!!	toString() : String
    return "SensorDescriptor ["
        + (mDescription != null ? "mDescription=" + mDescription + ", " : "")
        + "mSensorId=" + mSensorId + "]";
