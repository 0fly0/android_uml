class SecureClassLoader
!!!633499.java!!!	SecureClassLoader(inout parent : ClassLoader)
        super(parent);
!!!633627.java!!!	getPermissions(inout codesource : CodeSource) : PermissionCollection
        // Do nothing by default, ProtectionDomain will take care about
        // permissions in dynamic
        return new Permissions();
!!!633755.java!!!	defineClass(inout name : String, inout b : byte, in off : int, in len : int, inout cs : CodeSource) : Class
        return cs == null ? defineClass(name, b, off, len) : defineClass(name,
                b, off, len, getPD(cs));
!!!633883.java!!!	defineClass(inout name : String, inout b : ByteBuffer, inout cs : CodeSource) : Class
        //FIXME 1.5 - remove b.array(), call super.defineClass(,ByteBuffer,)
        // directly
        byte[] data = b.array();
        return cs == null ? defineClass(name, data, 0, data.length)
                : defineClass(name, data, 0, data.length, getPD(cs));
!!!634011.java!!!	getPD(inout cs : CodeSource) : ProtectionDomain
        if (cs == null) {
            return null;
        }
        // need to cache PDs, otherwise every class from a given CodeSource
        // will have it's own ProtectionDomain, which does not look right.
        ProtectionDomain pd;
        synchronized (pds) {
            if ((pd = pds.get(cs)) != null) {
                return pd;
            }
            PermissionCollection perms = getPermissions(cs);
            pd = new ProtectionDomain(cs, perms, this, null);
            pds.put(cs, pd);
        }
        return pd;
