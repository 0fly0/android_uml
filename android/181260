format 74
"accessibilityservice" // framework::base::core::java::android::accessibilityservice
  revision 3
  modified_by 12 "shchen"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "/home/shchen/work/jellybean/framework/base/core/java/android/accessibilityservice/"
  java_package "android.accessibilityservice"
  classview 163212 "accessibilityservice"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 684428 "AccessibilityService"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "An accessibility service runs in the background and receives callbacks by the system
when {@link AccessibilityEvent}s are fired. Such events denote some state transition
in the user interface, for example, the focus has changed, a button has been clicked,
etc. Such a service can optionally request the capability for querying the content
of the active window. Development of an accessibility service requires extending this
class and implementing its abstract methods.

<div class=\"special reference\">
<h3>Developer Guides</h3>
<p>For more information about creating AccessibilityServices, read the
<a href=\"{@docRoot}guide/topics/ui/accessibility/index.html\">Accessibility</a>
developer guide.</p>
</div>

<h3>Lifecycle</h3>
<p>
The lifecycle of an accessibility service is managed exclusively by the system and
follows the established service life cycle. Additionally, starting or stopping an
accessibility service is triggered exclusively by an explicit user action through
enabling or disabling it in the device settings. After the system binds to a service it
calls {@link AccessibilityService#onServiceConnected()}. This method can be
overriden by clients that want to perform post binding setup.
</p>
<h3>Declaration</h3>
<p>
An accessibility is declared as any other service in an AndroidManifest.xml but it
must also specify that it handles the \"android.accessibilityservice.AccessibilityService\"
{@link android.content.Intent}. Failure to declare this intent will cause the system to
ignore the accessibility service. Additionally an accessibility service must request the
{@link android.Manifest.permission#BIND_ACCESSIBILITY_SERVICE} permission to ensure
that only the system
can bind to it. Failure to declare this intent will cause the system to ignore the
accessibility service. Following is an example declaration:
</p>
<pre> &lt;service android:name=\".MyAccessibilityService\"
        android:permission=\"android.permission.BIND_ACCESSIBILITY_SERVICE\"&gt;
    &lt;intent-filter&gt;
        &lt;action android:name=\"android.accessibilityservice.AccessibilityService\" /&gt;
    &lt;/intent-filter&gt;
    . . .
&lt;/service&gt;</pre>
<h3>Configuration</h3>
<p>
An accessibility service can be configured to receive specific types of accessibility events,
listen only to specific packages, get events from each type only once in a given time frame,
retrieve window content, specify a settings activity, etc.
</p>
<p>
There are two approaches for configuring an accessibility service:
</p>
<ul>
<li>
Providing a {@link #SERVICE_META_DATA meta-data} entry in the manifest when declaring
the service. A service declaration with a meta-data tag is presented below:
<pre> &lt;service android:name=\".MyAccessibilityService\"&gt;
    &lt;intent-filter&gt;
        &lt;action android:name=\"android.accessibilityservice.AccessibilityService\" /&gt;
    &lt;/intent-filter&gt;
    &lt;meta-data android:name=\"android.accessibilityservice\" android:resource=\"@xml/accessibilityservice\" /&gt;
&lt;/service&gt;</pre>
<p class=\"note\">
<strong>Note:</strong> This approach enables setting all properties.
</p>
<p>
For more details refer to {@link #SERVICE_META_DATA} and
<code>&lt;{@link android.R.styleable#AccessibilityService accessibility-service}&gt;</code>.
</p>
</li>
<li>
Calling {@link AccessibilityService#setServiceInfo(AccessibilityServiceInfo)}. Note
that this method can be called any time to dynamically change the service configuration.
<p class=\"note\">
<strong>Note:</strong> This approach enables setting only dynamically configurable properties:
{@link AccessibilityServiceInfo#eventTypes},
{@link AccessibilityServiceInfo#feedbackType},
{@link AccessibilityServiceInfo#flags},
{@link AccessibilityServiceInfo#notificationTimeout},
{@link AccessibilityServiceInfo#packageNames}
</p>
<p>
For more details refer to {@link AccessibilityServiceInfo}.
</p>
</li>
</ul>
<h3>Retrieving window content</h3>
<p>
A service can specify in its declaration that it can retrieve the active window
content which is represented as a tree of {@link AccessibilityNodeInfo}. Note that
declaring this capability requires that the service declares its configuration via
an XML resource referenced by {@link #SERVICE_META_DATA}.
</p>
<p>
For security purposes an accessibility service can retrieve only the content of the
currently active window. The currently active window is defined as the window from
which was fired the last event of the following types:
{@link AccessibilityEvent#TYPE_WINDOW_STATE_CHANGED},
{@link AccessibilityEvent#TYPE_VIEW_HOVER_ENTER},
{@link AccessibilityEvent#TYPE_VIEW_HOVER_EXIT},
In other words, the last window that was shown or the last window that the user has touched
during touch exploration.
</p>
<p>
The entry point for retrieving window content is through calling
{@link AccessibilityEvent#getSource() AccessibilityEvent.getSource()} of the last received
event of the above types or a previous event from the same window
(see {@link AccessibilityEvent#getWindowId() AccessibilityEvent.getWindowId()}). Invoking
this method will return an {@link AccessibilityNodeInfo} that can be used to traverse the
window content which represented as a tree of such objects.
</p>
<p class=\"note\">
<strong>Note</strong> An accessibility service may have requested to be notified for
a subset of the event types, thus be unaware that the active window has changed. Therefore
accessibility service that would like to retrieve window content should:
<ul>
<li>
Register for all event types with no notification timeout and keep track for the active
window by calling {@link AccessibilityEvent#getWindowId()} of the last received event and
compare this with the {@link AccessibilityNodeInfo#getWindowId()} before calling retrieval
methods on the latter.
</li>
<li>
Prepare that a retrieval method on {@link AccessibilityNodeInfo} may fail since the
active window has changed and the service did not get the accessibility event yet. Note
that it is possible to have a retrieval method failing even adopting the strategy
specified in the previous bullet because the accessibility event dispatch is asynchronous
and crosses process boundaries.
</li>
</ul>
</p>
<h3>Notification strategy</h3>
<p>
For each feedback type only one accessibility service is notified. Services are notified
in the order of registration. Hence, if two services are registered for the same
feedback type in the same package the first one wins. It is possible however, to
register a service as the default one for a given feedback type. In such a case this
service is invoked if no other service was interested in the event. In other words, default
services do not compete with other services and are notified last regardless of the
registration order. This enables \"generic\" accessibility services that work reasonably
well with most applications to coexist with \"polished\" ones that are targeted for
specific applications.
</p>
<p class=\"note\">
<strong>Note:</strong> The event notification timeout is useful to avoid propagating
events to the client too frequently since this is accomplished via an expensive
interprocess call. One can think of the timeout as a criteria to determine when
event generation has settled down.</p>
<h3>Event types</h3>
<ul>
<li>{@link AccessibilityEvent#TYPE_VIEW_CLICKED}
<li>{@link AccessibilityEvent#TYPE_VIEW_LONG_CLICKED}
<li>{@link AccessibilityEvent#TYPE_VIEW_FOCUSED}
<li>{@link AccessibilityEvent#TYPE_VIEW_SELECTED}
<li>{@link AccessibilityEvent#TYPE_VIEW_TEXT_CHANGED}
<li>{@link AccessibilityEvent#TYPE_WINDOW_STATE_CHANGED}
<li>{@link AccessibilityEvent#TYPE_NOTIFICATION_STATE_CHANGED}
<li>{@link AccessibilityEvent#TYPE_TOUCH_EXPLORATION_GESTURE_START}
<li>{@link AccessibilityEvent#TYPE_TOUCH_EXPLORATION_GESTURE_END}
<li>{@link AccessibilityEvent#TYPE_VIEW_HOVER_ENTER}
<li>{@link AccessibilityEvent#TYPE_VIEW_HOVER_EXIT}
<li>{@link AccessibilityEvent#TYPE_VIEW_SCROLLED}
<li>{@link AccessibilityEvent#TYPE_VIEW_TEXT_SELECTION_CHANGED}
<li>{@link AccessibilityEvent#TYPE_WINDOW_CONTENT_CHANGED}
</ul>
<h3>Feedback types</h3>
<ul>
<li>{@link AccessibilityServiceInfo#FEEDBACK_AUDIBLE}
<li>{@link AccessibilityServiceInfo#FEEDBACK_HAPTIC}
<li>{@link AccessibilityServiceInfo#FEEDBACK_AUDIBLE}
<li>{@link AccessibilityServiceInfo#FEEDBACK_VISUAL}
<li>{@link AccessibilityServiceInfo#FEEDBACK_GENERIC}
</ul>
@see AccessibilityEvent
@see AccessibilityServiceInfo
@see android.view.accessibility.AccessibilityManager"
      classrelation 1402124 // <generalisation>
	relation 1402124 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 1402124 // <generalisation>
	  b parent class_ref 684556 // Service
      end

      attribute 1827852 "GESTURE_SWIPE_UP"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The user has performed a swipe up gesture on the touch screen.
"
      end

      attribute 1827980 "GESTURE_SWIPE_DOWN"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The user has performed a swipe down gesture on the touch screen.
"
      end

      attribute 1828108 "GESTURE_SWIPE_LEFT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The user has performed a swipe left gesture on the touch screen.
"
      end

      attribute 1828236 "GESTURE_SWIPE_RIGHT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The user has performed a swipe right gesture on the touch screen.
"
      end

      attribute 1828364 "GESTURE_SWIPE_LEFT_AND_RIGHT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 5"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The user has performed a swipe left and right gesture on the touch screen.
"
      end

      attribute 1828492 "GESTURE_SWIPE_RIGHT_AND_LEFT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 6"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The user has performed a swipe right and left gesture on the touch screen.
"
      end

      attribute 1828620 "GESTURE_SWIPE_UP_AND_DOWN"
	class_attribute const_attribute public explicit_type "int"
	init_value " 7"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The user has performed a swipe up and down gesture on the touch screen.
"
      end

      attribute 1828748 "GESTURE_SWIPE_DOWN_AND_UP"
	class_attribute const_attribute public explicit_type "int"
	init_value " 8"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The user has performed a swipe down and up gesture on the touch screen.
"
      end

      attribute 1828876 "GESTURE_SWIPE_LEFT_AND_UP"
	class_attribute const_attribute public explicit_type "int"
	init_value " 9"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The user has performed a left and up gesture on the touch screen.
"
      end

      attribute 1829004 "GESTURE_SWIPE_LEFT_AND_DOWN"
	class_attribute const_attribute public explicit_type "int"
	init_value " 10"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The user has performed a left and down gesture on the touch screen.
"
      end

      attribute 1829132 "GESTURE_SWIPE_RIGHT_AND_UP"
	class_attribute const_attribute public explicit_type "int"
	init_value " 11"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The user has performed a right and up gesture on the touch screen.
"
      end

      attribute 1829260 "GESTURE_SWIPE_RIGHT_AND_DOWN"
	class_attribute const_attribute public explicit_type "int"
	init_value " 12"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The user has performed a right and down gesture on the touch screen.
"
      end

      attribute 1829388 "GESTURE_SWIPE_UP_AND_LEFT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 13"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The user has performed an up and left gesture on the touch screen.
"
      end

      attribute 1829516 "GESTURE_SWIPE_UP_AND_RIGHT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 14"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The user has performed an up and right gesture on the touch screen.
"
      end

      attribute 1829644 "GESTURE_SWIPE_DOWN_AND_LEFT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 15"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The user has performed an down and left gesture on the touch screen.
"
      end

      attribute 1829772 "GESTURE_SWIPE_DOWN_AND_RIGHT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 16"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The user has performed an down and right gesture on the touch screen.
"
      end

      attribute 1829900 "SERVICE_INTERFACE"
	class_attribute const_attribute public explicit_type "String"
	init_value "
        \"android.accessibilityservice.AccessibilityService\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The {@link Intent} that must be declared as handled by the service.
"
      end

      attribute 1830028 "SERVICE_META_DATA"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.accessibilityservice\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Name under which an AccessibilityService component publishes information
about itself. This meta-data must reference an XML resource containing an
<code>&lt;{@link android.R.styleable#AccessibilityService accessibility-service}&gt;</code>
tag. This is a a sample XML file configuring an accessibility service:
<pre> &lt;accessibility-service
    android:accessibilityEventTypes=\"typeViewClicked|typeViewFocused\"
    android:packageNames=\"foo.bar, foo.baz\"
    android:accessibilityFeedbackType=\"feedbackSpoken\"
    android:notificationTimeout=\"100\"
    android:accessibilityFlags=\"flagDefault\"
    android:settingsActivity=\"foo.bar.TestBackActivity\"
    android:canRetrieveWindowContent=\"true\"
    . . .
/&gt;</pre>
"
      end

      attribute 1830156 "GLOBAL_ACTION_BACK"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Action to go back.
"
      end

      attribute 1830284 "GLOBAL_ACTION_HOME"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Action to go home.
"
      end

      attribute 1830412 "GLOBAL_ACTION_RECENTS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Action to open the recent apps.
"
      end

      attribute 1830540 "GLOBAL_ACTION_NOTIFICATIONS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Action to open the notifications.
"
      end

      attribute 1830668 "GLOBAL_ACTION_QUICK_SETTINGS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 5"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Action to open the quick settings.
"
      end

      attribute 1830796 "LOG_TAG"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"AccessibilityService\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      class 689036 "Callbacks"
	visibility package stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 2135820 "onAccessibilityEvent"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "event" type class_ref 689164 // AccessibilityEvent
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2135948 "onInterrupt"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2136076 "onServiceConnected"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2136204 "onSetConnectionId"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "connectionId" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2136332 "onGesture"
	  public explicit_return_type "boolean"
	  nparams 1
	    param in name "gestureId" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      attribute 1830924 "mConnectionId"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1402252 // mInfo (<unidirectional association>)
	relation 1402252 --->
	  a role_name "mInfo" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1402252 // mInfo (<unidirectional association>)
	  b parent class_ref 689292 // AccessibilityServiceInfo
      end

      operation 2136460 "onAccessibilityEvent"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "event" type class_ref 689164 // AccessibilityEvent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Callback for {@link android.view.accessibility.AccessibilityEvent}s.

@param event An event."
      end

      operation 2136588 "onInterrupt"
	abstract public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Callback for interrupting the accessibility feedback."
      end

      operation 2136716 "onServiceConnected"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is a part of the {@link AccessibilityService} lifecycle and is
called after the system has successfully bound to the service. If is
convenient to use this method for setting the {@link AccessibilityServiceInfo}.

@see AccessibilityServiceInfo
@see #setServiceInfo(AccessibilityServiceInfo)"
      end

      operation 2136844 "onGesture"
	protected explicit_return_type "boolean"
	nparams 1
	  param in name "gestureId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called by the system when the user performs a specific gesture on the
touch screen.

<strong>Note:</strong> To receive gestures an accessibility service must
request that the device is in touch exploration mode by setting the
{@link android.accessibilityservice.AccessibilityServiceInfo#FLAG_REQUEST_TOUCH_EXPLORATION_MODE}
flag.

@param gestureId The unique id of the performed gesture.

@return Whether the gesture was handled.

@see #GESTURE_SWIPE_UP
@see #GESTURE_SWIPE_UP_AND_LEFT
@see #GESTURE_SWIPE_UP_AND_DOWN
@see #GESTURE_SWIPE_UP_AND_RIGHT
@see #GESTURE_SWIPE_DOWN
@see #GESTURE_SWIPE_DOWN_AND_LEFT
@see #GESTURE_SWIPE_DOWN_AND_UP
@see #GESTURE_SWIPE_DOWN_AND_RIGHT
@see #GESTURE_SWIPE_LEFT
@see #GESTURE_SWIPE_LEFT_AND_UP
@see #GESTURE_SWIPE_LEFT_AND_RIGHT
@see #GESTURE_SWIPE_LEFT_AND_DOWN
@see #GESTURE_SWIPE_RIGHT
@see #GESTURE_SWIPE_RIGHT_AND_UP
@see #GESTURE_SWIPE_RIGHT_AND_LEFT
@see #GESTURE_SWIPE_RIGHT_AND_DOWN"
      end

      operation 2136972 "getRootInActiveWindow"
	public return_type class_ref 689420 // AccessibilityNodeInfo
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the root node in the currently active window if this service
can retrieve window content.

@return The root node if this service can retrieve window content."
      end

      operation 2137100 "performGlobalAction"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "action" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Performs a global action. Such an action can be performed
at any moment regardless of the current application or user
location in that application. For example going back, going
home, opening recents, etc.

@param action The action to perform.
@return Whether the action was successfully performed.

@see #GLOBAL_ACTION_BACK
@see #GLOBAL_ACTION_HOME
@see #GLOBAL_ACTION_NOTIFICATIONS
@see #GLOBAL_ACTION_RECENTS"
      end

      operation 2137228 "getServiceInfo"
	public return_type class_ref 689292 // AccessibilityServiceInfo
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the an {@link AccessibilityServiceInfo} describing this
{@link AccessibilityService}. This method is useful if one wants
to change some of the dynamically configurable properties at
runtime.

@return The accessibility service info.

@see AccessibilityNodeInfo"
      end

      operation 2137356 "setServiceInfo"
	public explicit_return_type "void"
	nparams 1
	  param inout name "info" type class_ref 689292 // AccessibilityServiceInfo
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the {@link AccessibilityServiceInfo} that describes this service.
<p>
Note: You can call this method any time but the info will be picked up after
      the system has bound to this service and when this method is called thereafter.

@param info The info."
      end

      operation 2137484 "sendServiceInfo"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the {@link AccessibilityServiceInfo} for this service if the latter is
properly set and there is an {@link IAccessibilityServiceConnection} to the
AccessibilityManagerService."
      end

      operation 2137612 "onBind"
	public return_type class_ref 688652 // IBinder
	nparams 1
	  param inout name "intent" type class_ref 678156 // Intent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Implement to return the implementation of the internal accessibility
service interface."
      end

      class 689548 "IAccessibilityServiceClientWrapper"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 1403788 // <realization>
	  relation 1403788 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 1403788 // <realization>
	    b parent class_ref 689932 // Callback
	end

	attribute 1831820 "NO_ID"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " -1"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1831948 "DO_SET_SET_CONNECTION"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 10"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1832076 "DO_ON_INTERRUPT"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 20"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1832204 "DO_ON_ACCESSIBILITY_EVENT"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 30"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1832332 "DO_ON_GESTURE"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 40"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 1403916 // mCaller (<unidirectional association>)
	  relation 1403916 --->
	    a role_name "mCaller" const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1403916 // mCaller (<unidirectional association>)
	    b parent class_ref 689804 // HandlerCaller
	end

	classrelation 1404044 // mCallback (<unidirectional association>)
	  relation 1404044 --->
	    a role_name "mCallback" const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 1404044 // mCallback (<unidirectional association>)
	    b parent class_ref 689036 // Callbacks
	end

	operation 2147340 "IAccessibilityServiceClientWrapper"
	  public explicit_return_type ""
	  nparams 3
	    param inout name "context" type class_ref 684812 // Context
	    param inout name "looper" type class_ref 685324 // Looper
	    param inout name "callback" type class_ref 689036 // Callbacks
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2147468 "setConnection"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "connection" explicit_type "IAccessibilityServiceConnection"
	    param in name "connectionId" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2147596 "onInterrupt"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2147724 "onAccessibilityEvent"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "event" type class_ref 689164 // AccessibilityEvent
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2147852 "onGesture"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "gestureId" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 2147980 "executeMessage"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "message" type class_ref 690316 // Message
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end
    end

    class 689292 "AccessibilityServiceInfo"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class describes an {@link AccessibilityService}. The system notifies an
{@link AccessibilityService} for {@link android.view.accessibility.AccessibilityEvent}s
according to the information encapsulated in this class.

<div class=\"special reference\">
<h3>Developer Guides</h3>
<p>For more information about creating AccessibilityServices, read the
<a href=\"{@docRoot}guide/topics/ui/accessibility/index.html\">Accessibility</a>
developer guide.</p>
</div>

@see AccessibilityService
@see android.view.accessibility.AccessibilityEvent
@see android.view.accessibility.AccessibilityManager"
      classrelation 1404300 // <realization>
	relation 1404300 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 1404300 // <realization>
	  b parent class_ref 691212 // Parcelable
      end

      attribute 1832716 "TAG_ACCESSIBILITY_SERVICE"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"accessibility-service\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1832844 "FEEDBACK_SPOKEN"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0000001"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Denotes spoken feedback.
"
      end

      attribute 1832972 "FEEDBACK_HAPTIC"
	class_attribute const_attribute public explicit_type "int"
	init_value "  0x0000002"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Denotes haptic feedback.
"
      end

      attribute 1833100 "FEEDBACK_AUDIBLE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0000004"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Denotes audible (not spoken) feedback.
"
      end

      attribute 1833228 "FEEDBACK_VISUAL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0000008"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Denotes visual feedback.
"
      end

      attribute 1833356 "FEEDBACK_GENERIC"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0000010"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Denotes generic feedback.
"
      end

      attribute 1833484 "FEEDBACK_BRAILLE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0000020"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Denotes braille feedback.
"
      end

      attribute 1833612 "FEEDBACK_ALL_MASK"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xFFFFFFFF"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Mask for all feedback types.

@see #FEEDBACK_SPOKEN
@see #FEEDBACK_HAPTIC
@see #FEEDBACK_AUDIBLE
@see #FEEDBACK_VISUAL
@see #FEEDBACK_GENERIC
@see #FEEDBACK_BRAILLE
"
      end

      attribute 1833740 "DEFAULT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0000001"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "If an {@link AccessibilityService} is the default for a given type.
Default service is invoked only if no package specific one exists. In case of
more than one package specific service only the earlier registered is notified.
"
      end

      attribute 1833868 "FLAG_INCLUDE_NOT_IMPORTANT_VIEWS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0000002"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "If this flag is set the system will regard views that are not important
for accessibility in addition to the ones that are important for accessibility.
That is, views that are marked as not important for accessibility via
{@link View#IMPORTANT_FOR_ACCESSIBILITY_NO} and views that are marked as
potentially important for accessibility via
{@link View#IMPORTANT_FOR_ACCESSIBILITY_AUTO} for which the system has determined
that are not important for accessibility, are both reported while querying the
window content and also the accessibility service will receive accessibility events
from them.
<p>
<strong>Note:</strong> For accessibility services targeting API version
{@link Build.VERSION_CODES#JELLY_BEAN} or higher this flag has to be explicitly
set for the system to regard views that are not important for accessibility. For
accessibility services targeting API version lower than
{@link Build.VERSION_CODES#JELLY_BEAN} this flag is ignored and all views are
regarded for accessibility purposes.
</p>
<p>
Usually views not important for accessibility are layout managers that do not
react to user actions, do not draw any content, and do not have any special
semantics in the context of the screen content. For example, a three by three
grid can be implemented as three horizontal linear layouts and one vertical,
or three vertical linear layouts and one horizontal, or one grid layout, etc.
In this context the actual layout mangers used to achieve the grid configuration
are not important, rather it is important that there are nine evenly distributed
elements.
</p>
"
      end

      attribute 1833996 "FLAG_REQUEST_TOUCH_EXPLORATION_MODE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0000004"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "This flag requests that the system gets into touch exploration mode.
In this mode a single finger moving on the screen behaves as a mouse
pointer hovering over the user interface. The system will also detect
certain gestures performed on the touch screen and notify this service.
The system will enable touch exploration mode if there is at least one
accessibility service that has this flag set. Hence, clearing this
flag does not guarantee that the device will not be in touch exploration
mode since there may be another enabled service that requested it.
"
      end

      attribute 1834124 "eventTypes"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The event types an {@link AccessibilityService} is interested in.
<p>
  <strong>Can be dynamically set at runtime.</strong>
</p>
@see android.view.accessibility.AccessibilityEvent#TYPE_VIEW_CLICKED
@see android.view.accessibility.AccessibilityEvent#TYPE_VIEW_LONG_CLICKED
@see android.view.accessibility.AccessibilityEvent#TYPE_VIEW_FOCUSED
@see android.view.accessibility.AccessibilityEvent#TYPE_VIEW_SELECTED
@see android.view.accessibility.AccessibilityEvent#TYPE_VIEW_TEXT_CHANGED
@see android.view.accessibility.AccessibilityEvent#TYPE_WINDOW_STATE_CHANGED
@see android.view.accessibility.AccessibilityEvent#TYPE_NOTIFICATION_STATE_CHANGED
@see android.view.accessibility.AccessibilityEvent#TYPE_TOUCH_EXPLORATION_GESTURE_START
@see android.view.accessibility.AccessibilityEvent#TYPE_TOUCH_EXPLORATION_GESTURE_END
@see android.view.accessibility.AccessibilityEvent#TYPE_VIEW_HOVER_ENTER
@see android.view.accessibility.AccessibilityEvent#TYPE_VIEW_HOVER_EXIT
@see android.view.accessibility.AccessibilityEvent#TYPE_VIEW_SCROLLED
@see android.view.accessibility.AccessibilityEvent#TYPE_VIEW_TEXT_SELECTION_CHANGED
@see android.view.accessibility.AccessibilityEvent#TYPE_WINDOW_CONTENT_CHANGED
"
      end

      attribute 1834252 "packageNames"
	public explicit_type "String"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The package names an {@link AccessibilityService} is interested in. Setting
to <code>null</code> is equivalent to all packages.
<p>
  <strong>Can be dynamically set at runtime.</strong>
</p>
"
      end

      attribute 1834380 "feedbackType"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The feedback type an {@link AccessibilityService} provides.
<p>
  <strong>Can be dynamically set at runtime.</strong>
</p>
@see #FEEDBACK_AUDIBLE
@see #FEEDBACK_GENERIC
@see #FEEDBACK_HAPTIC
@see #FEEDBACK_SPOKEN
@see #FEEDBACK_VISUAL
@see #FEEDBACK_BRAILLE
"
      end

      attribute 1834508 "notificationTimeout"
	public explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The timeout after the most recent event of a given type before an
{@link AccessibilityService} is notified.
<p>
  <strong>Can be dynamically set at runtime.</strong>.
</p>
<p>
<strong>Note:</strong> The event notification timeout is useful to avoid propagating
      events to the client too frequently since this is accomplished via an expensive
      interprocess call. One can think of the timeout as a criteria to determine when
      event generation has settled down.
"
      end

      attribute 1834636 "flags"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "This field represents a set of flags used for configuring an
{@link AccessibilityService}.
<p>
  <strong>Can be dynamically set at runtime.</strong>
</p>
@see #DEFAULT
@see #FLAG_INCLUDE_NOT_IMPORTANT_VIEWS
@see #FLAG_REQUEST_TOUCH_EXPLORATION_MODE
"
      end

      attribute 1834764 "mId"
	private explicit_type "String"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The unique string Id to identify the accessibility service.
"
      end

      classrelation 1404428 // mResolveInfo (<unidirectional association>)
	relation 1404428 --->
	  a role_name "mResolveInfo" private
	    comment "
The Service that implements this accessibility service component.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1404428 // mResolveInfo (<unidirectional association>)
	  b parent class_ref 691724 // ResolveInfo
      end

      attribute 1834892 "mSettingsActivityName"
	private explicit_type "String"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The accessibility service setting activity's name, used by the system
settings to launch the setting activity of this accessibility service.
"
      end

      attribute 1835020 "mCanRetrieveWindowContent"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Flag whether this accessibility service can retrieve window content.
"
      end

      attribute 1835148 "mDescriptionResId"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Resource id of the description of the accessibility service.
"
      end

      attribute 1835276 "mNonLocalizedDescription"
	private explicit_type "String"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Non localized description of the accessibility service.
"
      end

      operation 2148748 "AccessibilityServiceInfo"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new instance."
      end

      operation 2148876 "AccessibilityServiceInfo"
	public explicit_return_type ""
	nparams 2
	  param inout name "resolveInfo" type class_ref 691724 // ResolveInfo
	  param inout name "context" type class_ref 684812 // Context
	nexceptions 2
	  explicit_exception "XmlPullParserException"
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new instance.

@param resolveInfo The service resolve info.
@param context Context for accessing resources.
@throws XmlPullParserException If a XML parsing error occurs.
@throws IOException If a XML parsing error occurs.

@hide"
      end

      operation 2149004 "updateDynamicallyConfigurableProperties"
	public explicit_return_type "void"
	nparams 1
	  param inout name "other" type class_ref 689292 // AccessibilityServiceInfo
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Updates the properties that an AccessibilitySerivice can change dynamically.

@param other The info from which to update the properties.

@hide"
      end

      operation 2149132 "getId"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The accessibility service id.
<p>
  <strong>Generated by the system.</strong>
</p>
@return The id."
      end

      operation 2149260 "getResolveInfo"
	public return_type class_ref 691724 // ResolveInfo
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The service {@link ResolveInfo}.
<p>
  <strong>Generated by the system.</strong>
</p>
@return The info."
      end

      operation 2149388 "getSettingsActivityName"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The settings activity name.
<p>
   <strong>Statically set from
   {@link AccessibilityService#SERVICE_META_DATA meta-data}.</strong>
</p>
@return The settings activity name."
      end

      operation 2149516 "getCanRetrieveWindowContent"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Whether this service can retrieve the current window's content.
<p>
   <strong>Statically set from
   {@link AccessibilityService#SERVICE_META_DATA meta-data}.</strong>
</p>
@return True if window content can be retrieved."
      end

      operation 2149644 "getDescription"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the non-localized description of the accessibility service.
<p>
   <strong>Statically set from
   {@link AccessibilityService#SERVICE_META_DATA meta-data}.</strong>
</p>
@return The description.

@deprecated Use {@link #loadDescription(PackageManager)}."
      end

      operation 2149772 "loadDescription"
	public explicit_return_type "String"
	nparams 1
	  param inout name "packageManager" type class_ref 685068 // PackageManager
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The localized description of the accessibility service.
<p>
   <strong>Statically set from
   {@link AccessibilityService#SERVICE_META_DATA meta-data}.</strong>
</p>
@return The localized description."
      end

      operation 2149900 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}"
      end

      operation 2150028 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "parcel" type class_ref 691340 // Parcel
	  param in name "flagz" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2150156 "initFromParcel"
	private explicit_return_type "void"
	nparams 1
	  param inout name "parcel" type class_ref 691340 // Parcel
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2150284 "toString"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 2150412 "appendFeedbackTypes"
	class_operation private explicit_return_type "void"
	nparams 2
	  param inout name "stringBuilder" explicit_type "StringBuilder"
	  param in name "feedbackTypes" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2150540 "appendPackageNames"
	class_operation private explicit_return_type "void"
	nparams 2
	  param inout name "stringBuilder" explicit_type "StringBuilder"
	  param inout name "packageNames" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2150668 "appendEventTypes"
	class_operation private explicit_return_type "void"
	nparams 2
	  param inout name "stringBuilder" explicit_type "StringBuilder"
	  param in name "eventTypes" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2150796 "appendFlags"
	class_operation private explicit_return_type "void"
	nparams 2
	  param inout name "stringBuilder" explicit_type "StringBuilder"
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 2150924 "feedbackTypeToString"
	class_operation public explicit_return_type "String"
	nparams 1
	  param in name "feedbackType" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the string representation of a feedback type. For example,
{@link #FEEDBACK_SPOKEN} is represented by the string FEEDBACK_SPOKEN.

@param feedbackType The feedback type.
@return The string representation."
      end

      operation 2151052 "flagToString"
	class_operation public explicit_return_type "String"
	nparams 1
	  param in name "flag" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the string representation of a flag. For example,
{@link #DEFAULT} is represented by the string DEFAULT.

@param flag The flag.
@return The string representation."
      end

      classrelation 1404556 // CREATOR (<unidirectional association>)
	relation 1404556 --->
	  a role_name "CREATOR" init_value "
            new Parcelable.Creator<AccessibilityServiceInfo>() {
        public AccessibilityServiceInfo createFromParcel(Parcel parcel) {
            AccessibilityServiceInfo info = new AccessibilityServiceInfo();
            info.initFromParcel(parcel);
            return info;
        }

        public AccessibilityServiceInfo[] newArray(int size) {
            return new AccessibilityServiceInfo[size];
        }
    }" class_relation const_relation public
	    comment "
@see Parcelable.Creator

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<AccessibilityServiceInfo> ${name}${value};
"
	    classrelation_ref 1404556 // CREATOR (<unidirectional association>)
	  b parent class_ref 691468 // Creator
      end
    end

    class 691852 "UiTestAutomationBridge"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class represents a bridge that can be used for UI test
automation. It is responsible for connecting to the system,
keeping track of the last accessibility event, and exposing
window content querying APIs. This class is designed to be
used from both an Android application and a Java program
run from the shell.

@hide"
      attribute 1835404 "LOG_TAG"
	class_attribute const_attribute private explicit_type "String"
	init_value " UiTestAutomationBridge.class.getSimpleName()"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1835532 "TIMEOUT_REGISTER_SERVICE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 5000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1835660 "ACTIVE_WINDOW_ID"
	class_attribute const_attribute public explicit_type "int"
	init_value " AccessibilityNodeInfo.ACTIVE_WINDOW_ID"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1835788 "ROOT_NODE_ID"
	class_attribute const_attribute public explicit_type "long"
	init_value " AccessibilityNodeInfo.ROOT_NODE_ID"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1835916 "UNDEFINED"
	class_attribute const_attribute public explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1836044 "FIND_ACCESSIBILITY_NODE_INFO_PREFETCH_FLAGS"
	class_attribute const_attribute private explicit_type "int"
	init_value "
        AccessibilityNodeInfo.FLAG_PREFETCH_PREDECESSORS
        | AccessibilityNodeInfo.FLAG_PREFETCH_SIBLINGS
        | AccessibilityNodeInfo.FLAG_PREFETCH_DESCENDANTS"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1836172 "mLock"
	const_attribute private explicit_type "Object"
	init_value " new Object()"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1836300 "mConnectionId"
	volatile private explicit_type "int"
	init_value " AccessibilityInteractionClient.NO_ID"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1404684 // mListener (<unidirectional association>)
	relation 1404684 --->
	  a role_name "mListener" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1404684 // mListener (<unidirectional association>)
	  b parent class_ref 689548 // IAccessibilityServiceClientWrapper
      end

      classrelation 1404812 // mLastEvent (<unidirectional association>)
	relation 1404812 --->
	  a role_name "mLastEvent" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1404812 // mLastEvent (<unidirectional association>)
	  b parent class_ref 689164 // AccessibilityEvent
      end

      attribute 1836428 "mWaitingForEventDelivery"
	volatile private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1836556 "mUnprocessedEventAvailable"
	volatile private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1404940 // mHandlerThread (<unidirectional association>)
	relation 1404940 --->
	  a role_name "mHandlerThread" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 1404940 // mHandlerThread (<unidirectional association>)
	  b parent class_ref 691980 // HandlerThread
      end

      operation 2151180 "getLastAccessibilityEvent"
	public return_type class_ref 689164 // AccessibilityEvent
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the last received {@link AccessibilityEvent}.

@return The event."
      end

      operation 2151308 "onAccessibilityEvent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "event" type class_ref 689164 // AccessibilityEvent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Callback for receiving an {@link AccessibilityEvent}.

<strong>Note:</strong> This method is <strong>NOT</strong>
executed on the application main thread. The client are
responsible for proper synchronization.

@param event The received event."
      end

      operation 2151436 "onInterrupt"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Callback for requests to stop feedback.

<strong>Note:</strong> This method is <strong>NOT</strong>
executed on the application main thread. The client are
responsible for proper synchronization."
      end

      operation 2151564 "connect"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Connects this service.

@throws IllegalStateException If already connected."
      end

      operation 2151692 "disconnect"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Disconnects this service.

@throws IllegalStateException If already disconnected."
      end

      operation 2151820 "isConnected"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets whether this service is connected.

@return True if connected."
      end

      operation 2151948 "executeCommandAndWaitForAccessibilityEvent"
	public return_type class_ref 689164 // AccessibilityEvent
	nparams 3
	  param inout name "command" explicit_type "Runnable"
	  param inout name "predicate" type class_ref 692108 // Predicate
	  param in name "timeoutMillis" explicit_type "long"
	nexceptions 2
	  explicit_exception "TimeoutException"
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<AccessibilityEvent> ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Executes a command and waits for a specific accessibility event type up
to a given timeout.

@param command The command to execute before starting to wait for the event.
@param predicate Predicate for recognizing the awaited event.
@param timeoutMillis The max wait time in milliseconds."
      end

      operation 2152076 "waitForIdle"
	public explicit_return_type "void"
	nparams 2
	  param in name "idleTimeout" explicit_type "long"
	  param in name "globalTimeout" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Waits for the accessibility event stream to become idle, which is not to
have received a new accessibility event within <code>idleTimeout</code>,
and do so within a maximal global timeout as specified by
<code>globalTimeout</code>.

@param idleTimeout The timeout between two event to consider the device idle.
@param globalTimeout The maximal global timeout in which to wait for idle."
      end

      operation 2152204 "findAccessibilityNodeInfoByAccessibilityIdInActiveWindow"
	public return_type class_ref 689420 // AccessibilityNodeInfo
	nparams 1
	  param in name "accessibilityNodeId" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finds an {@link AccessibilityNodeInfo} by accessibility id in the active
window. The search is performed from the root node.

@param accessibilityNodeId A unique view id or virtual descendant id for
    which to search.
@return The current window scale, where zero means a failure."
      end

      operation 2152332 "findAccessibilityNodeInfoByAccessibilityId"
	public return_type class_ref 689420 // AccessibilityNodeInfo
	nparams 2
	  param in name "accessibilityWindowId" explicit_type "int"
	  param in name "accessibilityNodeId" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finds an {@link AccessibilityNodeInfo} by accessibility id.

@param accessibilityWindowId A unique window id. Use {@link #ACTIVE_WINDOW_ID} to query
    the currently active window.
@param accessibilityNodeId A unique view id or virtual descendant id for
    which to search.
@return The current window scale, where zero means a failure."
      end

      operation 2152460 "findAccessibilityNodeInfoByViewIdInActiveWindow"
	public return_type class_ref 689420 // AccessibilityNodeInfo
	nparams 1
	  param in name "viewId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finds an {@link AccessibilityNodeInfo} by View id in the active
window. The search is performed from the root node.

@param viewId The id of a View.
@return The current window scale, where zero means a failure."
      end

      operation 2152588 "findAccessibilityNodeInfoByViewId"
	public return_type class_ref 689420 // AccessibilityNodeInfo
	nparams 3
	  param in name "accessibilityWindowId" explicit_type "int"
	  param in name "accessibilityNodeId" explicit_type "long"
	  param in name "viewId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finds an {@link AccessibilityNodeInfo} by View id. The search is performed in
the window whose id is specified and starts from the node whose accessibility
id is specified.

@param accessibilityWindowId A unique window id. Use
    {@link  #ACTIVE_WINDOW_ID} to query the currently active window.
@param accessibilityNodeId A unique view id or virtual descendant id from
    where to start the search. Use {@link  #ROOT_NODE_ID} to start from the root.
@param viewId The id of a View.
@return The current window scale, where zero means a failure."
      end

      operation 2152716 "findAccessibilityNodeInfosByTextInActiveWindow"
	public return_type class_ref 689420 // AccessibilityNodeInfo
	nparams 1
	  param in name "text" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finds {@link AccessibilityNodeInfo}s by View text in the active
window. The search is performed from the root node.

@param text The searched text.
@return The current window scale, where zero means a failure."
      end

      operation 2152844 "findAccessibilityNodeInfosByText"
	public return_type class_ref 689420 // AccessibilityNodeInfo
	nparams 3
	  param in name "accessibilityWindowId" explicit_type "int"
	  param in name "accessibilityNodeId" explicit_type "long"
	  param in name "text" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finds {@link AccessibilityNodeInfo}s by View text. The match is case
insensitive containment. The search is performed in the window whose
id is specified and starts from the node whose accessibility id is
specified.

@param accessibilityWindowId A unique window id. Use
    {@link #ACTIVE_WINDOW_ID} to query the currently active window.
@param accessibilityNodeId A unique view id or virtual descendant id from
    where to start the search. Use {@link #ROOT_NODE_ID} to start from the root.
@param text The searched text.
@return The current window scale, where zero means a failure."
      end

      operation 2152972 "performAccessibilityActionInActiveWindow"
	public explicit_return_type "boolean"
	nparams 3
	  param in name "accessibilityNodeId" explicit_type "long"
	  param in name "action" explicit_type "int"
	  param inout name "arguments" type class_ref 678924 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Performs an accessibility action on an {@link AccessibilityNodeInfo}
in the active window.

@param accessibilityNodeId A unique node id (accessibility and virtual descendant id).
@param action The action to perform.
@param arguments Optional action arguments.
@return Whether the action was performed."
      end

      operation 2153100 "performAccessibilityAction"
	public explicit_return_type "boolean"
	nparams 4
	  param in name "accessibilityWindowId" explicit_type "int"
	  param in name "accessibilityNodeId" explicit_type "long"
	  param in name "action" explicit_type "int"
	  param inout name "arguments" type class_ref 678924 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Performs an accessibility action on an {@link AccessibilityNodeInfo}.

@param accessibilityWindowId A unique window id. Use
    {@link #ACTIVE_WINDOW_ID} to query the currently active window.
@param accessibilityNodeId A unique node id (accessibility and virtual descendant id).
@param action The action to perform.
@param arguments Optional action arguments.
@return Whether the action was performed."
      end

      operation 2153228 "getRootAccessibilityNodeInfoInActiveWindow"
	public return_type class_ref 689420 // AccessibilityNodeInfo
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the root {@link AccessibilityNodeInfo} in the active window.

@return The root info."
      end

      operation 2153356 "ensureValidConnection"
	private explicit_return_type "void"
	nparams 1
	  param in name "connectionId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 1067020 "InterrogationActivity"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Activity for testing the accessibility APIs for \"interrogation\" of
the screen content. These APIs allow exploring the screen and
requesting an action to be performed on a given view from an
AccessiiblityService."
      classrelation 2207628 // <generalisation>
	relation 2207628 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 2207628 // <generalisation>
	  b parent class_ref 693260 // Activity
      end

      operation 5826828 "onCreate"
	public explicit_return_type "void"
	nparams 1
	  param inout name "savedInstanceState" type class_ref 678924 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 1067148 "InterrogationActivityTest"
      visibility public 
      nactuals 2
      actual class class_ref 1064076 // ActivityInstrumentationTestCase2
        rank 0 explicit_value ""
      actual class class_ref 1064076 // ActivityInstrumentationTestCase2
        rank 1 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Activity for testing the accessibility APIs for \"interrogation\" of
the screen content. These APIs allow exploring the screen and
requesting an action to be performed on a given view from an
AccessiiblityService."
      classrelation 2207756 // <realization>
	relation 2207756 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 2207756 // <realization>
	  b parent class_ref 1064076 // ActivityInstrumentationTestCase2
      end

      attribute 3965580 "DEBUG"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3965708 "LOG_TAG"
	class_attribute private explicit_type "String"
	init_value " \"InterrogationActivityTest\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 3965836 "TIMEOUT_PROPAGATE_ACCESSIBILITY_EVENT_MILLIS"
	class_attribute const_attribute private explicit_type "int"
	init_value " 5000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Timeout for the accessibility state of an Activity to be fully initialized."
      end

      attribute 3965964 "IDLE_EVENT_TIME_DELTA_MILLIS"
	class_attribute const_attribute private explicit_type "long"
	init_value " 200"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Timeout for which non getting accessibility events considers the app idle."
      end

      attribute 3966092 "GLOBAL_IDLE_DETECTION_TIMEOUT_MILLIS"
	class_attribute const_attribute private explicit_type "long"
	init_value " 1000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Timeout in which to wait for idle device."
      end

      classrelation 2207884 // mUiTestAutomationBridge (<unidirectional association>)
	relation 2207884 --->
	  a role_name "mUiTestAutomationBridge" private
	    comment " Handle to a connection to the AccessibilityManagerService
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 2207884 // mUiTestAutomationBridge (<unidirectional association>)
	  b parent class_ref 691852 // UiTestAutomationBridge
      end

      operation 5826956 "InterrogationActivityTest"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 5827084 "setUp"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 5827212 "tearDown"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 5827340 "testFindAccessibilityNodeInfoByViewId"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@LargeTest
"
	
	
	
      end

      operation 5827468 "testFindAccessibilityNodeInfoByViewText"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@LargeTest
"
	
	
	
      end

      operation 5827596 "testFindAccessibilityNodeInfoByViewTextContentDescription"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@LargeTest
"
	
	
	
      end

      operation 5827724 "testTraverseAllViews"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@LargeTest
"
	
	
	
      end

      operation 5827852 "testPerformAccessibilityActionFocus"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@LargeTest
"
	
	
	
      end

      operation 5827980 "testPerformAccessibilityActionClearFocus"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@LargeTest
"
	
	
	
      end

      operation 5828108 "testPerformAccessibilityActionSelect"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@LargeTest
"
	
	
	
      end

      operation 5828236 "testPerformAccessibilityActionClearSelection"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@LargeTest
"
	
	
	
      end

      operation 5828364 "testAccessibilityEventGetSource"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@LargeTest
"
	
	
	
      end

      operation 5828492 "testObjectContract"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@LargeTest
"
	
	
	
      end

      operation 5828620 "testGetRootAccessibilityNodeInfoInActiveWindow"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Exception"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@LargeTest
"
	
	
	
      end
    end

    class 2267020 "IAccessibilityServiceClient"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Top-level interface to an accessibility service component.

@hide"
      classrelation 4405516 // <generalisation>
	relation 4405388 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 4405516 // <generalisation>
	  b parent class_ref 716940 // IInterface
      end

      class 2267148 "Stub"
	abstract visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 4405644 // <generalisation>
	  relation 4405516 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 4405644 // <generalisation>
	    b parent class_ref 729100 // Binder
	end

	classrelation 4405772 // <realization>
	  relation 4405644 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 4405772 // <realization>
	    b parent class_ref 2267020 // IAccessibilityServiceClient
	end

	attribute 8304780 "DESCRIPTOR"
	  class_attribute const_attribute private explicit_type "java.lang.String"
	  init_value " \"android.accessibilityservice.IAccessibilityServiceClient\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 10381068 "Stub"
	  public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Construct the stub at attach it to the interface. "
	end

	operation 10381196 "asInterface"
	  class_operation public return_type class_ref 2267020 // IAccessibilityServiceClient
	  nparams 1
	    param inout name "obj" explicit_type "android.os.IBinder"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Cast an IBinder object into an android.accessibilityservice.IAccessibilityServiceClient interface,
generating a proxy if needed."
	end

	operation 10381324 "asBinder"
	  public explicit_return_type "android.os.IBinder"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 10381452 "onTransact"
	  public explicit_return_type "boolean"
	  nparams 4
	    param in name "code" explicit_type "int"
	    param inout name "data" explicit_type "android.os.Parcel"
	    param inout name "reply" explicit_type "android.os.Parcel"
	    param in name "flags" explicit_type "int"
	  nexceptions 1
	    explicit_exception "android.os.RemoteException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	class 2267276 "Proxy"
	  visibility private 
	  cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	  java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  
	  classrelation 4405900 // <realization>
	    relation 4405772 -_-|>
	      a public
		cpp default "${type}"
		java "${type}"
		classrelation_ref 4405900 // <realization>
	      b parent class_ref 2267020 // IAccessibilityServiceClient
	  end

	  attribute 8304908 "mRemote"
	    private explicit_type "android.os.IBinder"
	    cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	  end

	  operation 10381580 "Proxy"
	    package explicit_return_type ""
	    nparams 1
	      param inout name "remote" explicit_type "android.os.IBinder"
	    cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	    cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 10381708 "asBinder"
	    public explicit_return_type "android.os.IBinder"
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 10381836 "getInterfaceDescriptor"
	    public explicit_return_type "java.lang.String"
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 10381964 "setConnection"
	    public explicit_return_type "void"
	    nparams 2
	      param inout name "connection" type class_ref 2267404 // IAccessibilityServiceConnection
	      param in name "connectionId" explicit_type "int"
	    nexceptions 1
	      explicit_exception "android.os.RemoteException"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 10382092 "onAccessibilityEvent"
	    public explicit_return_type "void"
	    nparams 1
	      param inout name "event" explicit_type "android.view.accessibility.AccessibilityEvent"
	    nexceptions 1
	      explicit_exception "android.os.RemoteException"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 10382220 "onInterrupt"
	    public explicit_return_type "void"
	    nparams 0
	    nexceptions 1
	      explicit_exception "android.os.RemoteException"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 10382348 "onGesture"
	    public explicit_return_type "void"
	    nparams 1
	      param in name "gesture" explicit_type "int"
	    nexceptions 1
	      explicit_exception "android.os.RemoteException"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end
	end

	attribute 8305036 "TRANSACTION_setConnection"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 0)"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 8305164 "TRANSACTION_onAccessibilityEvent"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 1)"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 8305292 "TRANSACTION_onInterrupt"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 2)"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 8305420 "TRANSACTION_onGesture"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 3)"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      operation 10382476 "setConnection"
	public explicit_return_type "void"
	nparams 2
	  param inout name "connection" type class_ref 2267404 // IAccessibilityServiceConnection
	  param in name "connectionId" explicit_type "int"
	nexceptions 1
	  explicit_exception "android.os.RemoteException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10382604 "onAccessibilityEvent"
	public explicit_return_type "void"
	nparams 1
	  param inout name "event" explicit_type "android.view.accessibility.AccessibilityEvent"
	nexceptions 1
	  explicit_exception "android.os.RemoteException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10382732 "onInterrupt"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "android.os.RemoteException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10382860 "onGesture"
	public explicit_return_type "void"
	nparams 1
	  param in name "gesture" explicit_type "int"
	nexceptions 1
	  explicit_exception "android.os.RemoteException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 2267404 "IAccessibilityServiceConnection"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Interface given to an AccessibilitySerivce to talk to the AccessibilityManagerService.

@hide"
      classrelation 4406028 // <generalisation>
	relation 4405900 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 4406028 // <generalisation>
	  b parent class_ref 716940 // IInterface
      end

      class 2267532 "Stub"
	abstract visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 4406156 // <generalisation>
	  relation 4406028 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 4406156 // <generalisation>
	    b parent class_ref 729100 // Binder
	end

	classrelation 4406284 // <realization>
	  relation 4406156 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 4406284 // <realization>
	    b parent class_ref 2267404 // IAccessibilityServiceConnection
	end

	attribute 8305548 "DESCRIPTOR"
	  class_attribute const_attribute private explicit_type "java.lang.String"
	  init_value " \"android.accessibilityservice.IAccessibilityServiceConnection\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 10382988 "Stub"
	  public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Construct the stub at attach it to the interface. "
	end

	operation 10383116 "asInterface"
	  class_operation public return_type class_ref 2267404 // IAccessibilityServiceConnection
	  nparams 1
	    param inout name "obj" explicit_type "android.os.IBinder"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Cast an IBinder object into an android.accessibilityservice.IAccessibilityServiceConnection interface,
generating a proxy if needed."
	end

	operation 10383244 "asBinder"
	  public explicit_return_type "android.os.IBinder"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 10383372 "onTransact"
	  public explicit_return_type "boolean"
	  nparams 4
	    param in name "code" explicit_type "int"
	    param inout name "data" explicit_type "android.os.Parcel"
	    param inout name "reply" explicit_type "android.os.Parcel"
	    param in name "flags" explicit_type "int"
	  nexceptions 1
	    explicit_exception "android.os.RemoteException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	class 2267660 "Proxy"
	  visibility private 
	  cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	  java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  
	  classrelation 4406412 // <realization>
	    relation 4406284 -_-|>
	      a public
		cpp default "${type}"
		java "${type}"
		classrelation_ref 4406412 // <realization>
	      b parent class_ref 2267404 // IAccessibilityServiceConnection
	  end

	  attribute 8305676 "mRemote"
	    private explicit_type "android.os.IBinder"
	    cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	  end

	  operation 10383500 "Proxy"
	    package explicit_return_type ""
	    nparams 1
	      param inout name "remote" explicit_type "android.os.IBinder"
	    cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	    cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 10383628 "asBinder"
	    public explicit_return_type "android.os.IBinder"
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 10383756 "getInterfaceDescriptor"
	    public explicit_return_type "java.lang.String"
	    nparams 0
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    
	    
	    
	  end

	  operation 10383884 "setServiceInfo"
	    public explicit_return_type "void"
	    nparams 1
	      param inout name "info" explicit_type "android.accessibilityservice.AccessibilityServiceInfo"
	    nexceptions 1
	      explicit_exception "android.os.RemoteException"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	  end

	  operation 10384012 "findAccessibilityNodeInfoByAccessibilityId"
	    public explicit_return_type "float"
	    nparams 6
	      param in name "accessibilityWindowId" explicit_type "int"
	      param in name "accessibilityNodeId" explicit_type "long"
	      param in name "interactionId" explicit_type "int"
	      param inout name "callback" type class_ref 2267788 // IAccessibilityInteractionConnectionCallback
	      param in name "flags" explicit_type "int"
	      param in name "threadId" explicit_type "long"
	    nexceptions 1
	      explicit_exception "android.os.RemoteException"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Finds an {@link android.view.accessibility.AccessibilityNodeInfo} by accessibility id.

@param accessibilityWindowId A unique window id. Use
    {@link android.view.accessibility.AccessibilityNodeInfo#ACTIVE_WINDOW_ID}
    to query the currently active window.
@param accessibilityNodeId A unique view id or virtual descendant id from
    where to start the search. Use
    {@link android.view.accessibility.AccessibilityNodeInfo#ROOT_NODE_ID}
    to start from the root.
@param interactionId The id of the interaction for matching with the callback result.
@param callback Callback which to receive the result.
@param flags Additional flags.
@param threadId The id of the calling thread.
@return The current window scale, where zero means a failure."
	  end

	  operation 10384140 "findAccessibilityNodeInfosByText"
	    public explicit_return_type "float"
	    nparams 6
	      param in name "accessibilityWindowId" explicit_type "int"
	      param in name "accessibilityNodeId" explicit_type "long"
	      param inout name "text" explicit_type "java.lang.String"
	      param in name "interactionId" explicit_type "int"
	      param inout name "callback" type class_ref 2267788 // IAccessibilityInteractionConnectionCallback
	      param in name "threadId" explicit_type "long"
	    nexceptions 1
	      explicit_exception "android.os.RemoteException"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Finds {@link android.view.accessibility.AccessibilityNodeInfo}s by View text.
The match is case insensitive containment. The search is performed in the window
whose id is specified and starts from the node whose accessibility id is specified.

@param accessibilityWindowId A unique window id. Use
    {@link android.view.accessibility.AccessibilityNodeInfo#ACTIVE_WINDOW_ID}
    to query the currently active window.
@param accessibilityNodeId A unique view id or virtual descendant id from
    where to start the search. Use
    {@link android.view.accessibility.AccessibilityNodeInfo#ROOT_NODE_ID}
    to start from the root.
@param text The searched text.
@param interactionId The id of the interaction for matching with the callback result.
@param callback Callback which to receive the result.
@param threadId The id of the calling thread.
@return The current window scale, where zero means a failure."
	  end

	  operation 10384268 "findAccessibilityNodeInfoByViewId"
	    public explicit_return_type "float"
	    nparams 6
	      param in name "accessibilityWindowId" explicit_type "int"
	      param in name "accessibilityNodeId" explicit_type "long"
	      param in name "viewId" explicit_type "int"
	      param in name "interactionId" explicit_type "int"
	      param inout name "callback" type class_ref 2267788 // IAccessibilityInteractionConnectionCallback
	      param in name "threadId" explicit_type "long"
	    nexceptions 1
	      explicit_exception "android.os.RemoteException"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Finds an {@link android.view.accessibility.AccessibilityNodeInfo} by View id. The search
is performed in the window whose id is specified and starts from the node whose
accessibility id is specified.

@param accessibilityWindowId A unique window id. Use
    {@link android.view.accessibility.AccessibilityNodeInfo#ACTIVE_WINDOW_ID}
    to query the currently active window.
@param accessibilityNodeId A unique view id or virtual descendant id from
    where to start the search. Use
    {@link android.view.accessibility.AccessibilityNodeInfo#ROOT_NODE_ID}
    to start from the root.
@param id The id of the node.
@param interactionId The id of the interaction for matching with the callback result.
@param callback Callback which to receive the result.
@param threadId The id of the calling thread.
@return The current window scale, where zero means a failure."
	  end

	  operation 10384396 "findFocus"
	    public explicit_return_type "float"
	    nparams 6
	      param in name "accessibilityWindowId" explicit_type "int"
	      param in name "accessibilityNodeId" explicit_type "long"
	      param in name "focusType" explicit_type "int"
	      param in name "interactionId" explicit_type "int"
	      param inout name "callback" type class_ref 2267788 // IAccessibilityInteractionConnectionCallback
	      param in name "threadId" explicit_type "long"
	    nexceptions 1
	      explicit_exception "android.os.RemoteException"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Finds the {@link android.view.accessibility.AccessibilityNodeInfo} that has the specified
focus type. The search is performed in the window whose id is specified and starts from
the node whose accessibility id is specified.

@param accessibilityWindowId A unique window id. Use
    {@link android.view.accessibility.AccessibilityNodeInfo#ACTIVE_WINDOW_ID}
    to query the currently active window.
@param accessibilityNodeId A unique view id or virtual descendant id from
    where to start the search. Use
    {@link android.view.accessibility.AccessibilityNodeInfo#ROOT_NODE_ID}
    to start from the root.
@param focusType The type of focus to find.
@param interactionId The id of the interaction for matching with the callback result.
@param callback Callback which to receive the result.
@param threadId The id of the calling thread.
@return The current window scale, where zero means a failure."
	  end

	  operation 10384524 "focusSearch"
	    public explicit_return_type "float"
	    nparams 6
	      param in name "accessibilityWindowId" explicit_type "int"
	      param in name "accessibilityNodeId" explicit_type "long"
	      param in name "direction" explicit_type "int"
	      param in name "interactionId" explicit_type "int"
	      param inout name "callback" type class_ref 2267788 // IAccessibilityInteractionConnectionCallback
	      param in name "threadId" explicit_type "long"
	    nexceptions 1
	      explicit_exception "android.os.RemoteException"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Finds an {@link android.view.accessibility.AccessibilityNodeInfo} to take accessibility
focus in the given direction. The search is performed in the window whose id is
specified and starts from the node whose accessibility id is specified.

@param accessibilityWindowId A unique window id. Use
    {@link android.view.accessibility.AccessibilityNodeInfo#ACTIVE_WINDOW_ID}
    to query the currently active window.
@param accessibilityNodeId A unique view id or virtual descendant id from
    where to start the search. Use
    {@link android.view.accessibility.AccessibilityNodeInfo#ROOT_NODE_ID}
    to start from the root.
@param direction The direction in which to search for focusable.
@param interactionId The id of the interaction for matching with the callback result.
@param callback Callback which to receive the result.
@param threadId The id of the calling thread.
@return The current window scale, where zero means a failure."
	  end

	  operation 10384652 "performAccessibilityAction"
	    public explicit_return_type "boolean"
	    nparams 7
	      param in name "accessibilityWindowId" explicit_type "int"
	      param in name "accessibilityNodeId" explicit_type "long"
	      param in name "action" explicit_type "int"
	      param inout name "arguments" explicit_type "android.os.Bundle"
	      param in name "interactionId" explicit_type "int"
	      param inout name "callback" type class_ref 2267788 // IAccessibilityInteractionConnectionCallback
	      param in name "threadId" explicit_type "long"
	    nexceptions 1
	      explicit_exception "android.os.RemoteException"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Performs an accessibility action on an
{@link android.view.accessibility.AccessibilityNodeInfo}.

@param accessibilityWindowId A unique window id. Use
    {@link android.view.accessibility.AccessibilityNodeInfo#ACTIVE_WINDOW_ID}
    to query the currently active window.
@param accessibilityNodeId A unique view id or virtual descendant id from
    where to start the search. Use
    {@link android.view.accessibility.AccessibilityNodeInfo#ROOT_NODE_ID}
    to start from the root.
@param action The action to perform.
@param arguments Optional action arguments.
@param interactionId The id of the interaction for matching with the callback result.
@param callback Callback which to receive the result.
@param threadId The id of the calling thread.
@return Whether the action was performed."
	  end

	  operation 10384780 "getServiceInfo"
	    public explicit_return_type "android.accessibilityservice.AccessibilityServiceInfo"
	    nparams 0
	    nexceptions 1
	      explicit_exception "android.os.RemoteException"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "@return The associated accessibility service info."
	  end

	  operation 10384908 "performGlobalAction"
	    public explicit_return_type "boolean"
	    nparams 1
	      param in name "action" explicit_type "int"
	    nexceptions 1
	      explicit_exception "android.os.RemoteException"
	    cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	    cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	    preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	    java_annotation "@Override
"
	    
	    
	    
	    comment "Performs a global action, such as going home, going back, etc.

@param action The action to perform.
@return Whether the action was performed."
	  end
	end

	attribute 8305804 "TRANSACTION_setServiceInfo"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 0)"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 8305932 "TRANSACTION_findAccessibilityNodeInfoByAccessibilityId"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 1)"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 8306060 "TRANSACTION_findAccessibilityNodeInfosByText"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 2)"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 8306188 "TRANSACTION_findAccessibilityNodeInfoByViewId"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 3)"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 8306316 "TRANSACTION_findFocus"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 4)"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 8306444 "TRANSACTION_focusSearch"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 5)"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 8306572 "TRANSACTION_performAccessibilityAction"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 6)"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 8306700 "TRANSACTION_getServiceInfo"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 7)"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 8306828 "TRANSACTION_performGlobalAction"
	  class_attribute const_attribute package explicit_type "int"
	  init_value " (android.os.IBinder.FIRST_CALL_TRANSACTION + 8)"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      operation 10385036 "setServiceInfo"
	public explicit_return_type "void"
	nparams 1
	  param inout name "info" explicit_type "android.accessibilityservice.AccessibilityServiceInfo"
	nexceptions 1
	  explicit_exception "android.os.RemoteException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 10385164 "findAccessibilityNodeInfoByAccessibilityId"
	public explicit_return_type "float"
	nparams 6
	  param in name "accessibilityWindowId" explicit_type "int"
	  param in name "accessibilityNodeId" explicit_type "long"
	  param in name "interactionId" explicit_type "int"
	  param inout name "callback" type class_ref 2267788 // IAccessibilityInteractionConnectionCallback
	  param in name "flags" explicit_type "int"
	  param in name "threadId" explicit_type "long"
	nexceptions 1
	  explicit_exception "android.os.RemoteException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finds an {@link android.view.accessibility.AccessibilityNodeInfo} by accessibility id.

@param accessibilityWindowId A unique window id. Use
    {@link android.view.accessibility.AccessibilityNodeInfo#ACTIVE_WINDOW_ID}
    to query the currently active window.
@param accessibilityNodeId A unique view id or virtual descendant id from
    where to start the search. Use
    {@link android.view.accessibility.AccessibilityNodeInfo#ROOT_NODE_ID}
    to start from the root.
@param interactionId The id of the interaction for matching with the callback result.
@param callback Callback which to receive the result.
@param flags Additional flags.
@param threadId The id of the calling thread.
@return The current window scale, where zero means a failure."
      end

      operation 10385292 "findAccessibilityNodeInfosByText"
	public explicit_return_type "float"
	nparams 6
	  param in name "accessibilityWindowId" explicit_type "int"
	  param in name "accessibilityNodeId" explicit_type "long"
	  param inout name "text" explicit_type "java.lang.String"
	  param in name "interactionId" explicit_type "int"
	  param inout name "callback" type class_ref 2267788 // IAccessibilityInteractionConnectionCallback
	  param in name "threadId" explicit_type "long"
	nexceptions 1
	  explicit_exception "android.os.RemoteException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finds {@link android.view.accessibility.AccessibilityNodeInfo}s by View text.
The match is case insensitive containment. The search is performed in the window
whose id is specified and starts from the node whose accessibility id is specified.

@param accessibilityWindowId A unique window id. Use
    {@link android.view.accessibility.AccessibilityNodeInfo#ACTIVE_WINDOW_ID}
    to query the currently active window.
@param accessibilityNodeId A unique view id or virtual descendant id from
    where to start the search. Use
    {@link android.view.accessibility.AccessibilityNodeInfo#ROOT_NODE_ID}
    to start from the root.
@param text The searched text.
@param interactionId The id of the interaction for matching with the callback result.
@param callback Callback which to receive the result.
@param threadId The id of the calling thread.
@return The current window scale, where zero means a failure."
      end

      operation 10385420 "findAccessibilityNodeInfoByViewId"
	public explicit_return_type "float"
	nparams 6
	  param in name "accessibilityWindowId" explicit_type "int"
	  param in name "accessibilityNodeId" explicit_type "long"
	  param in name "viewId" explicit_type "int"
	  param in name "interactionId" explicit_type "int"
	  param inout name "callback" type class_ref 2267788 // IAccessibilityInteractionConnectionCallback
	  param in name "threadId" explicit_type "long"
	nexceptions 1
	  explicit_exception "android.os.RemoteException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finds an {@link android.view.accessibility.AccessibilityNodeInfo} by View id. The search
is performed in the window whose id is specified and starts from the node whose
accessibility id is specified.

@param accessibilityWindowId A unique window id. Use
    {@link android.view.accessibility.AccessibilityNodeInfo#ACTIVE_WINDOW_ID}
    to query the currently active window.
@param accessibilityNodeId A unique view id or virtual descendant id from
    where to start the search. Use
    {@link android.view.accessibility.AccessibilityNodeInfo#ROOT_NODE_ID}
    to start from the root.
@param id The id of the node.
@param interactionId The id of the interaction for matching with the callback result.
@param callback Callback which to receive the result.
@param threadId The id of the calling thread.
@return The current window scale, where zero means a failure."
      end

      operation 10385548 "findFocus"
	public explicit_return_type "float"
	nparams 6
	  param in name "accessibilityWindowId" explicit_type "int"
	  param in name "accessibilityNodeId" explicit_type "long"
	  param in name "focusType" explicit_type "int"
	  param in name "interactionId" explicit_type "int"
	  param inout name "callback" type class_ref 2267788 // IAccessibilityInteractionConnectionCallback
	  param in name "threadId" explicit_type "long"
	nexceptions 1
	  explicit_exception "android.os.RemoteException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finds the {@link android.view.accessibility.AccessibilityNodeInfo} that has the specified
focus type. The search is performed in the window whose id is specified and starts from
the node whose accessibility id is specified.

@param accessibilityWindowId A unique window id. Use
    {@link android.view.accessibility.AccessibilityNodeInfo#ACTIVE_WINDOW_ID}
    to query the currently active window.
@param accessibilityNodeId A unique view id or virtual descendant id from
    where to start the search. Use
    {@link android.view.accessibility.AccessibilityNodeInfo#ROOT_NODE_ID}
    to start from the root.
@param focusType The type of focus to find.
@param interactionId The id of the interaction for matching with the callback result.
@param callback Callback which to receive the result.
@param threadId The id of the calling thread.
@return The current window scale, where zero means a failure."
      end

      operation 10385676 "focusSearch"
	public explicit_return_type "float"
	nparams 6
	  param in name "accessibilityWindowId" explicit_type "int"
	  param in name "accessibilityNodeId" explicit_type "long"
	  param in name "direction" explicit_type "int"
	  param in name "interactionId" explicit_type "int"
	  param inout name "callback" type class_ref 2267788 // IAccessibilityInteractionConnectionCallback
	  param in name "threadId" explicit_type "long"
	nexceptions 1
	  explicit_exception "android.os.RemoteException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finds an {@link android.view.accessibility.AccessibilityNodeInfo} to take accessibility
focus in the given direction. The search is performed in the window whose id is
specified and starts from the node whose accessibility id is specified.

@param accessibilityWindowId A unique window id. Use
    {@link android.view.accessibility.AccessibilityNodeInfo#ACTIVE_WINDOW_ID}
    to query the currently active window.
@param accessibilityNodeId A unique view id or virtual descendant id from
    where to start the search. Use
    {@link android.view.accessibility.AccessibilityNodeInfo#ROOT_NODE_ID}
    to start from the root.
@param direction The direction in which to search for focusable.
@param interactionId The id of the interaction for matching with the callback result.
@param callback Callback which to receive the result.
@param threadId The id of the calling thread.
@return The current window scale, where zero means a failure."
      end

      operation 10385804 "performAccessibilityAction"
	public explicit_return_type "boolean"
	nparams 7
	  param in name "accessibilityWindowId" explicit_type "int"
	  param in name "accessibilityNodeId" explicit_type "long"
	  param in name "action" explicit_type "int"
	  param inout name "arguments" explicit_type "android.os.Bundle"
	  param in name "interactionId" explicit_type "int"
	  param inout name "callback" type class_ref 2267788 // IAccessibilityInteractionConnectionCallback
	  param in name "threadId" explicit_type "long"
	nexceptions 1
	  explicit_exception "android.os.RemoteException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Performs an accessibility action on an
{@link android.view.accessibility.AccessibilityNodeInfo}.

@param accessibilityWindowId A unique window id. Use
    {@link android.view.accessibility.AccessibilityNodeInfo#ACTIVE_WINDOW_ID}
    to query the currently active window.
@param accessibilityNodeId A unique view id or virtual descendant id from
    where to start the search. Use
    {@link android.view.accessibility.AccessibilityNodeInfo#ROOT_NODE_ID}
    to start from the root.
@param action The action to perform.
@param arguments Optional action arguments.
@param interactionId The id of the interaction for matching with the callback result.
@param callback Callback which to receive the result.
@param threadId The id of the calling thread.
@return Whether the action was performed."
      end

      operation 10385932 "getServiceInfo"
	public explicit_return_type "android.accessibilityservice.AccessibilityServiceInfo"
	nparams 0
	nexceptions 1
	  explicit_exception "android.os.RemoteException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return The associated accessibility service info."
      end

      operation 10386060 "performGlobalAction"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "action" explicit_type "int"
	nexceptions 1
	  explicit_exception "android.os.RemoteException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Performs a global action, such as going home, going back, etc.

@param action The action to perform.
@return Whether the action was performed."
      end
    end
  end

  deploymentview 166668 "accessibilityservice"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 322828 "AccessibilityService"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.app.Service;
import android.content.Context;
import android.content.Intent;
import android.os.IBinder;
import android.os.Looper;
import android.os.Message;
import android.os.RemoteException;
import android.util.Log;
import android.view.accessibility.AccessibilityEvent;
import android.view.accessibility.AccessibilityInteractionClient;
import android.view.accessibility.AccessibilityNodeInfo;
import com.android.internal.os.HandlerCaller;
${definition}"
      associated_classes
	class_ref 684428 // AccessibilityService
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 323084 "AccessibilityServiceInfo"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.content.ComponentName;
import android.content.Context;
import android.content.pm.PackageManager;
import android.content.pm.PackageManager.NameNotFoundException;
import android.content.pm.ResolveInfo;
import android.content.pm.ServiceInfo;
import android.content.res.Resources;
import android.content.res.TypedArray;
import android.content.res.XmlResourceParser;
import android.os.Build;
import android.os.Parcel;
import android.os.Parcelable;
import android.util.AttributeSet;
import android.util.TypedValue;
import android.util.Xml;
import android.view.View;
import android.view.accessibility.AccessibilityEvent;
import org.xmlpull.v1.XmlPullParser;
import org.xmlpull.v1.XmlPullParserException;
import java.io.IOException;
${definition}"
      associated_classes
	class_ref 689292 // AccessibilityServiceInfo
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 323212 "UiTestAutomationBridge"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.accessibilityservice.AccessibilityService.Callbacks;
import android.accessibilityservice.AccessibilityService.IAccessibilityServiceClientWrapper;
import android.content.Context;
import android.os.Bundle;
import android.os.HandlerThread;
import android.os.Looper;
import android.os.RemoteException;
import android.os.ServiceManager;
import android.os.SystemClock;
import android.util.Log;
import android.view.accessibility.AccessibilityEvent;
import android.view.accessibility.AccessibilityInteractionClient;
import android.view.accessibility.AccessibilityNodeInfo;
import android.view.accessibility.IAccessibilityManager;
import com.android.internal.util.Predicate;
import java.util.List;
import java.util.concurrent.TimeoutException;
${definition}"
      associated_classes
	class_ref 691852 // UiTestAutomationBridge
      end
      comment "Copyright (C) 2012 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 493964 "InterrogationActivity"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.app.Activity;
import android.os.Bundle;
import android.view.View;
import com.android.frameworks.coretests.R;
${definition}"
      associated_classes
	class_ref 1067020 // InterrogationActivity
      end
      comment "Copyright (C) 2011 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except
in compliance with the License. You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software distributed under the
License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
express or implied. See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 494092 "InterrogationActivityTest"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.graphics.Rect;
import android.os.SystemClock;
import android.test.ActivityInstrumentationTestCase2;
import android.test.suitebuilder.annotation.LargeTest;
import android.util.Log;
import android.view.accessibility.AccessibilityEvent;
import android.view.accessibility.AccessibilityNodeInfo;
import com.android.frameworks.coretests.R;
import com.android.internal.util.Predicate;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Queue;
import static android.view.accessibility.AccessibilityNodeInfo.ACTION_FOCUS;
import static android.view.accessibility.AccessibilityNodeInfo.ACTION_CLEAR_FOCUS;
import static android.view.accessibility.AccessibilityNodeInfo.ACTION_SELECT;
import static android.view.accessibility.AccessibilityNodeInfo.ACTION_CLEAR_SELECTION;
${definition}"
      associated_classes
	class_ref 1067148 // InterrogationActivityTest
      end
      comment "Copyright (C) 2011 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except
in compliance with the License. You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software distributed under the
License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
express or implied. See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 956428 "IAccessibilityServiceClient"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2267020 // IAccessibilityServiceClient
      end
      comment "This file is auto-generated.  DO NOT MODIFY.
Original file: frameworks/base/core/java/android/accessibilityservice/IAccessibilityServiceClient.aidl"
    end

    artifact 956556 "IAccessibilityServiceConnection"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2267404 // IAccessibilityServiceConnection
      end
      comment "This file is auto-generated.  DO NOT MODIFY.
Original file: frameworks/base/core/java/android/accessibilityservice/IAccessibilityServiceConnection.aidl"
    end
  end
end
