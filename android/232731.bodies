class SubAbstractListIterator
!!!1163035.java!!!	SubAbstractListIterator(inout it : ListIterator, inout list : SubAbstractList, in offset : int, in length : int)
                iterator = it;
                subList = list;
                start = offset;
                end = start + length;
!!!1163163.java!!!	add(inout object : E) : void
                iterator.add(object);
                subList.sizeChanged(true);
                end++;
!!!1163291.java!!!	hasNext() : boolean
                return iterator.nextIndex() < end;
!!!1163419.java!!!	hasPrevious() : boolean
                return iterator.previousIndex() >= start;
!!!1163547.java!!!	next() : E
                if (iterator.nextIndex() < end) {
                    return iterator.next();
                }
                throw new NoSuchElementException();
!!!1163675.java!!!	nextIndex() : int
                return iterator.nextIndex() - start;
!!!1163803.java!!!	previous() : E
                if (iterator.previousIndex() >= start) {
                    return iterator.previous();
                }
                throw new NoSuchElementException();
!!!1163931.java!!!	previousIndex() : int
                int previous = iterator.previousIndex();
                if (previous >= start) {
                    return previous - start;
                }
                return -1;
!!!1164059.java!!!	remove() : void
                iterator.remove();
                subList.sizeChanged(false);
                end--;
!!!1164187.java!!!	set(inout object : E) : void
                iterator.set(object);
