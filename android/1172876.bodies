class ScaleDrawable
!!!6499596.java!!!	ScaleDrawable()
        this(null, null);
!!!6499724.java!!!	ScaleDrawable(inout drawable : Drawable, in gravity : int, in scaleWidth : float, in scaleHeight : float)
        this(null, null);

        mScaleState.mDrawable = drawable;
        mScaleState.mGravity = gravity;
        mScaleState.mScaleWidth = scaleWidth;
        mScaleState.mScaleHeight = scaleHeight;

        if (drawable != null) {
            drawable.setCallback(this);
        }
!!!6499852.java!!!	getDrawable() : Drawable
        return mScaleState.mDrawable;
!!!6499980.java!!!	getPercent(inout a : TypedArray, in name : int) : float
        String s = a.getString(name);
        if (s != null) {
            if (s.endsWith("%")) {
                String f = s.substring(0, s.length() - 1);
                return Float.parseFloat(f) / 100.0f;
            }
        }
        return -1;
!!!6500108.java!!!	inflate(inout r : Resources, inout parser : XmlPullParser, inout attrs : AttributeSet) : void
        super.inflate(r, parser, attrs);

        int type;

        TypedArray a = r.obtainAttributes(attrs, com.android.internal.R.styleable.ScaleDrawable);

        float sw = getPercent(a, com.android.internal.R.styleable.ScaleDrawable_scaleWidth);
        float sh = getPercent(a, com.android.internal.R.styleable.ScaleDrawable_scaleHeight);
        int g = a.getInt(com.android.internal.R.styleable.ScaleDrawable_scaleGravity, Gravity.LEFT);
        boolean min = a.getBoolean(
                com.android.internal.R.styleable.ScaleDrawable_useIntrinsicSizeAsMinimum, false);
        Drawable dr = a.getDrawable(com.android.internal.R.styleable.ScaleDrawable_drawable);

        a.recycle();

        final int outerDepth = parser.getDepth();
        while ((type = parser.next()) != XmlPullParser.END_DOCUMENT
                && (type != XmlPullParser.END_TAG || parser.getDepth() > outerDepth)) {
            if (type != XmlPullParser.START_TAG) {
                continue;
            }
            dr = Drawable.createFromXmlInner(r, parser, attrs);
        }

        if (dr == null) {
            throw new IllegalArgumentException("No drawable specified for <scale>");
        }

        mScaleState.mDrawable = dr;
        mScaleState.mScaleWidth = sw;
        mScaleState.mScaleHeight = sh;
        mScaleState.mGravity = g;
        mScaleState.mUseIntrinsicSizeAsMin = min;
        if (dr != null) {
            dr.setCallback(this);
        }
!!!6500236.java!!!	invalidateDrawable(inout who : Drawable) : void
        if (getCallback() != null) {
            getCallback().invalidateDrawable(this);
        }
!!!6500364.java!!!	scheduleDrawable(inout who : Drawable, inout what : Runnable, in when : long) : void
        if (getCallback() != null) {
            getCallback().scheduleDrawable(this, what, when);
        }
!!!6500492.java!!!	unscheduleDrawable(inout who : Drawable, inout what : Runnable) : void
        if (getCallback() != null) {
            getCallback().unscheduleDrawable(this, what);
        }
!!!6500620.java!!!	draw(inout canvas : Canvas) : void
        if (mScaleState.mDrawable.getLevel() != 0)
            mScaleState.mDrawable.draw(canvas);
!!!6500748.java!!!	getChangingConfigurations() : int
        return super.getChangingConfigurations()
                | mScaleState.mChangingConfigurations
                | mScaleState.mDrawable.getChangingConfigurations();
!!!6500876.java!!!	getPadding(inout padding : Rect) : boolean
        // XXX need to adjust padding!
        return mScaleState.mDrawable.getPadding(padding);
!!!6501004.java!!!	setVisible(inout visible : boolean, inout restart : boolean) : boolean
        mScaleState.mDrawable.setVisible(visible, restart);
        return super.setVisible(visible, restart);
!!!6501132.java!!!	setAlpha(in alpha : int) : void
        mScaleState.mDrawable.setAlpha(alpha);
!!!6501260.java!!!	setColorFilter(inout cf : ColorFilter) : void
        mScaleState.mDrawable.setColorFilter(cf);
!!!6501388.java!!!	getOpacity() : int
        return mScaleState.mDrawable.getOpacity();
!!!6501516.java!!!	isStateful() : boolean
        return mScaleState.mDrawable.isStateful();
!!!6501644.java!!!	onStateChange(inout state : int) : boolean
        boolean changed = mScaleState.mDrawable.setState(state);
        onBoundsChange(getBounds());
        return changed;
!!!6501772.java!!!	onLevelChange(in level : int) : boolean
        mScaleState.mDrawable.setLevel(level);
        onBoundsChange(getBounds());
        invalidateSelf();
        return true;
!!!6501900.java!!!	onBoundsChange(inout bounds : Rect) : void
        final Rect r = mTmpRect;
        final boolean min = mScaleState.mUseIntrinsicSizeAsMin;
        int level = getLevel();
        int w = bounds.width();
        if (mScaleState.mScaleWidth > 0) {
            final int iw = min ? mScaleState.mDrawable.getIntrinsicWidth() : 0;
            w -= (int) ((w - iw) * (10000 - level) * mScaleState.mScaleWidth / 10000);
        }
        int h = bounds.height();
        if (mScaleState.mScaleHeight > 0) {
            final int ih = min ? mScaleState.mDrawable.getIntrinsicHeight() : 0;
            h -= (int) ((h - ih) * (10000 - level) * mScaleState.mScaleHeight / 10000);
        }
        final int layoutDirection = getLayoutDirection();
        Gravity.apply(mScaleState.mGravity, w, h, bounds, r, layoutDirection);

        if (w > 0 && h > 0) {
            mScaleState.mDrawable.setBounds(r.left, r.top, r.right, r.bottom);
        }
!!!6502028.java!!!	getIntrinsicWidth() : int
        return mScaleState.mDrawable.getIntrinsicWidth();
!!!6502156.java!!!	getIntrinsicHeight() : int
        return mScaleState.mDrawable.getIntrinsicHeight();
!!!6502284.java!!!	getConstantState() : ConstantState
        if (mScaleState.canConstantState()) {
            mScaleState.mChangingConfigurations = getChangingConfigurations();
            return mScaleState;
        }
        return null;
!!!6502412.java!!!	mutate() : Drawable
        if (!mMutated && super.mutate() == this) {
            mScaleState.mDrawable.mutate();
            mMutated = true;
        }
        return this;
!!!6503180.java!!!	ScaleDrawable(inout state : ScaleState, inout res : Resources)
        mScaleState = new ScaleState(state, this, res);
