class LinkPropertiesTest
!!!5995660.java!!!	testEqualsNull() : void
        LinkProperties source = new LinkProperties();
        LinkProperties target = new LinkProperties();

        assertFalse(source == target);
        assertTrue(source.equals(target));
        assertTrue(source.hashCode() == target.hashCode());
!!!5995788.java!!!	testEqualsSameOrder() : void
        try {
            LinkProperties source = new LinkProperties();
            source.setInterfaceName(NAME);
            // set 2 link addresses
            source.addLinkAddress(new LinkAddress(
                    NetworkUtils.numericToInetAddress(ADDRV4), 32));
            source.addLinkAddress(new LinkAddress(
                    NetworkUtils.numericToInetAddress(ADDRV6), 128));
            // set 2 dnses
            source.addDns(NetworkUtils.numericToInetAddress(DNS1));
            source.addDns(NetworkUtils.numericToInetAddress(DNS2));
            // set 2 gateways
            source.addRoute(new RouteInfo(NetworkUtils.numericToInetAddress(GATEWAY1)));
            source.addRoute(new RouteInfo(NetworkUtils.numericToInetAddress(GATEWAY2)));

            LinkProperties target = new LinkProperties();

            // All fields are same
            target.setInterfaceName(NAME);
            target.addLinkAddress(new LinkAddress(
                    NetworkUtils.numericToInetAddress(ADDRV4), 32));
            target.addLinkAddress(new LinkAddress(
                    NetworkUtils.numericToInetAddress(ADDRV6), 128));
            target.addDns(NetworkUtils.numericToInetAddress(DNS1));
            target.addDns(NetworkUtils.numericToInetAddress(DNS2));
            target.addRoute(new RouteInfo(NetworkUtils.numericToInetAddress(GATEWAY1)));
            target.addRoute(new RouteInfo(NetworkUtils.numericToInetAddress(GATEWAY2)));

            assertTrue(source.equals(target));
            assertTrue(source.hashCode() == target.hashCode());

            target.clear();
            // change Interface Name
            target.setInterfaceName("qmi1");
            target.addLinkAddress(new LinkAddress(
                    NetworkUtils.numericToInetAddress(ADDRV4), 32));
            target.addLinkAddress(new LinkAddress(
                    NetworkUtils.numericToInetAddress(ADDRV6), 128));
            target.addDns(NetworkUtils.numericToInetAddress(DNS1));
            target.addDns(NetworkUtils.numericToInetAddress(DNS2));
            target.addRoute(new RouteInfo(NetworkUtils.numericToInetAddress(GATEWAY1)));
            target.addRoute(new RouteInfo(NetworkUtils.numericToInetAddress(GATEWAY2)));
            assertFalse(source.equals(target));

            target.clear();
            target.setInterfaceName(NAME);
            // change link addresses
            target.addLinkAddress(new LinkAddress(
                    NetworkUtils.numericToInetAddress("75.208.6.2"), 32));
            target.addLinkAddress(new LinkAddress(
                    NetworkUtils.numericToInetAddress(ADDRV6), 128));
            target.addDns(NetworkUtils.numericToInetAddress(DNS1));
            target.addDns(NetworkUtils.numericToInetAddress(DNS2));
            target.addRoute(new RouteInfo(NetworkUtils.numericToInetAddress(GATEWAY1)));
            target.addRoute(new RouteInfo(NetworkUtils.numericToInetAddress(GATEWAY2)));
            assertFalse(source.equals(target));

            target.clear();
            target.setInterfaceName(NAME);
            target.addLinkAddress(new LinkAddress(
                    NetworkUtils.numericToInetAddress(ADDRV4), 32));
            target.addLinkAddress(new LinkAddress(
                    NetworkUtils.numericToInetAddress(ADDRV6), 128));
            // change dnses
            target.addDns(NetworkUtils.numericToInetAddress("75.208.7.2"));
            target.addDns(NetworkUtils.numericToInetAddress(DNS2));
            target.addRoute(new RouteInfo(NetworkUtils.numericToInetAddress(GATEWAY1)));
            target.addRoute(new RouteInfo(NetworkUtils.numericToInetAddress(GATEWAY2)));
            assertFalse(source.equals(target));

            target.clear();
            target.setInterfaceName(NAME);
            target.addLinkAddress(new LinkAddress(
                    NetworkUtils.numericToInetAddress(ADDRV4), 32));
            target.addLinkAddress(new LinkAddress(
                    NetworkUtils.numericToInetAddress(ADDRV6), 128));
            target.addDns(NetworkUtils.numericToInetAddress(DNS1));
            target.addDns(NetworkUtils.numericToInetAddress(DNS2));
            // change gateway
            target.addRoute(new RouteInfo(NetworkUtils.numericToInetAddress("75.208.8.2")));
            target.addRoute(new RouteInfo(NetworkUtils.numericToInetAddress(GATEWAY2)));
            assertFalse(source.equals(target));

        } catch (Exception e) {
            throw new RuntimeException(e.toString());
            //fail();
        }
!!!5995916.java!!!	testEqualsDifferentOrder() : void
        try {
            LinkProperties source = new LinkProperties();
            source.setInterfaceName(NAME);
            // set 2 link addresses
            source.addLinkAddress(new LinkAddress(
                    NetworkUtils.numericToInetAddress(ADDRV4), 32));
            source.addLinkAddress(new LinkAddress(
                    NetworkUtils.numericToInetAddress(ADDRV6), 128));
            // set 2 dnses
            source.addDns(NetworkUtils.numericToInetAddress(DNS1));
            source.addDns(NetworkUtils.numericToInetAddress(DNS2));
            // set 2 gateways
            source.addRoute(new RouteInfo(NetworkUtils.numericToInetAddress(GATEWAY1)));
            source.addRoute(new RouteInfo(NetworkUtils.numericToInetAddress(GATEWAY2)));

            LinkProperties target = new LinkProperties();
            // Exchange order
            target.setInterfaceName(NAME);
            target.addLinkAddress(new LinkAddress(
                    NetworkUtils.numericToInetAddress(ADDRV6), 128));
            target.addLinkAddress(new LinkAddress(
                    NetworkUtils.numericToInetAddress(ADDRV4), 32));
            target.addDns(NetworkUtils.numericToInetAddress(DNS2));
            target.addDns(NetworkUtils.numericToInetAddress(DNS1));
            target.addRoute(new RouteInfo(NetworkUtils.numericToInetAddress(GATEWAY2)));
            target.addRoute(new RouteInfo(NetworkUtils.numericToInetAddress(GATEWAY1)));

            assertTrue(source.equals(target));
            assertTrue(source.hashCode() == target.hashCode());
        } catch (Exception e) {
            fail();
        }
!!!5996044.java!!!	testEqualsDuplicated() : void
        try {
            LinkProperties source = new LinkProperties();
            // set 3 link addresses, eg, [A, A, B]
            source.addLinkAddress(new LinkAddress(
                    NetworkUtils.numericToInetAddress(ADDRV4), 32));
            source.addLinkAddress(new LinkAddress(
                    NetworkUtils.numericToInetAddress(ADDRV4), 32));
            source.addLinkAddress(new LinkAddress(
                    NetworkUtils.numericToInetAddress(ADDRV6), 128));

            LinkProperties target = new LinkProperties();
            // set 3 link addresses, eg, [A, B, B]
            target.addLinkAddress(new LinkAddress(
                    NetworkUtils.numericToInetAddress(ADDRV4), 32));
            target.addLinkAddress(new LinkAddress(
                    NetworkUtils.numericToInetAddress(ADDRV6), 128));
            target.addLinkAddress(new LinkAddress(
                    NetworkUtils.numericToInetAddress(ADDRV6), 128));

            assertTrue(source.equals(target));
            assertTrue(source.hashCode() == target.hashCode());
        } catch (Exception e) {
            fail();
        }
