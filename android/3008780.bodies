class ExternalInputController
!!!12281100.java!!!	ExternalInputController(inout context : DeviceControllerContext, inout settings : MediaDeviceSettings, in deviceId : String)
        super(context, settings, deviceId);
        // OEM NOTE:
        // Do native resource allocation here.
!!!12281228.java!!!	destroy() : void
        // OEM NOTE:
        // Release native resources here.
        super.destroy();
!!!12281356.java!!!	performAction(inout event : ActionEvent) : void
        // OEM NOTE:
        // Implement CEC/IR key pass through here.
        try {
            // For HDMI-CEC key pass through
            if (CecUtils.isSupportedByKeyPassthrough(event)) {
                int deviceAddr = CecUtils.shouldKeyPassthrough(mContext);
                if (deviceAddr > 0) {
                    try {
                        int keyPressMode = CecUtils.getKeyPressMode(event);
                        ITvCecService iTvCecService = CecUtils.getITvCecService();
                        if (CecUtils.getITvCecService() != null) {
                            // int deviceAddr =
                            // CecUtils.getITvCecService().getActiveSourceAddress();
                            int userKeyCode = mkeyMap.getNativeCode(event.getAction().toString());
                            Log.d("ExternalInputController", "performAction deviceAddr="
                                    + deviceAddr
                                    + "  keyPressMode=" + keyPressMode
                                    + "  userKeyCode=" + userKeyCode);
                            if (iTvCecService.sendUserControl(deviceAddr, keyPressMode,
                                    userKeyCode) == 0) {
                                return;
                            }
                        }
                    } catch (RemoteException e) {
                        e.printStackTrace();
                    }
                }
            }

            if (event.getState() == State.DOWN) {
                /**
                 * Dismiss Event Alert dialog such as No Signal dialog when entering
                 * any key, this will avoid No Signal dialog overlay on USDTV menus
                 */
                WidgetManager.dismissEventAlert(mContext);
            }

            // device specific OSD
            if (event.getState() == State.UP) {
                if (Action.INFO.equals(event.getAction())) {
                    WidgetManager.showInputBanner(mContext, true, true);
                }
            }

            super.performAction(event);
        } catch (NullPointerException e) {
            Log.e(LOG_TAG, "performAction exception" + e);
            e.printStackTrace();
        }
!!!12281484.java!!!	sendChannelCommand(in majorNumber : int, in minorNumber : int) : void
        // OEM NOTE:
        // Implement IR blasting here.
        // If the minor number != 0, add a delimiter character between the
        // numbers.
        // If the minor number == 0, then just send the major number.
        // TODO: possibly use ChannelNumber instead.
        StringBuilder channelString = new StringBuilder();
        channelString.append(majorNumber);
        if (minorNumber != 0) {
            channelString.append("-");
            channelString.append(minorNumber);
        }
        if (DEBUG) {
            Log.d(LOG_TAG, "Sending channel command " + channelString);
        }

        int sendKeyRet = -1;
        if (0 == minorNumber) {
            sendChannelNumber(majorNumber);
        } else {
            sendChannelNumber(majorNumber);

            if (DEBUG) {
                Log.d(LOG_TAG, "Send delimiter, ret = " + sendKeyRet);
            }
            sendChannelNumber(minorNumber);
        }
!!!12281612.java!!!	sendChannelNumber(in number : int) : void
        // Translate channel number to UEIKeys, and send them.
        ArrayList<Integer> digits = new ArrayList<Integer>();
        do {
            digits.add(new Integer(number % 10));
            number /= 10;
        } while (number != 0);

        for (int i = digits.size() - 1; i >= 0; i--) {

        }
