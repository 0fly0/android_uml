class SoftOMXComponent
!!!661516.cpp!!!	SoftOMXComponent(in name : char, in callbacks : OMX_CALLBACKTYPE, in appData : OMX_PTR, inout component : OMX_COMPONENTTYPE)
    mComponent->nSize = sizeof(*mComponent);
    mComponent->nVersion.s.nVersionMajor = 1;
    mComponent->nVersion.s.nVersionMinor = 0;
    mComponent->nVersion.s.nRevision = 0;
    mComponent->nVersion.s.nStep = 0;
    mComponent->pComponentPrivate = this;
    mComponent->pApplicationPrivate = appData;

    mComponent->GetComponentVersion = NULL;
    mComponent->SendCommand = SendCommandWrapper;
    mComponent->GetParameter = GetParameterWrapper;
    mComponent->SetParameter = SetParameterWrapper;
    mComponent->GetConfig = GetConfigWrapper;
    mComponent->SetConfig = SetConfigWrapper;
    mComponent->GetExtensionIndex = GetExtensionIndexWrapper;
    mComponent->GetState = GetStateWrapper;
    mComponent->ComponentTunnelRequest = NULL;
    mComponent->UseBuffer = UseBufferWrapper;
    mComponent->AllocateBuffer = AllocateBufferWrapper;
    mComponent->FreeBuffer = FreeBufferWrapper;
    mComponent->EmptyThisBuffer = EmptyThisBufferWrapper;
    mComponent->FillThisBuffer = FillThisBufferWrapper;
    mComponent->SetCallbacks = NULL;
    mComponent->ComponentDeInit = NULL;
    mComponent->UseEGLImage = NULL;
    mComponent->ComponentRoleEnum = NULL;

    *component = mComponent;
!!!661644.cpp!!!	initCheck() : OMX_ERRORTYPE
    return OMX_ErrorNone;
!!!661772.cpp!!!	setLibHandle(inout libHandle : void) : void
    CHECK(libHandle != NULL);
    mLibHandle = libHandle;
!!!661900.cpp!!!	libHandle() : void
    return mLibHandle;
!!!662156.cpp!!!	~SoftOMXComponent()
    delete mComponent;
    mComponent = NULL;
!!!662284.cpp!!!	name() : char
    return mName.c_str();
!!!662412.cpp!!!	notify(in event : OMX_EVENTTYPE, in data1 : OMX_U32, in data2 : OMX_U32, in data : OMX_PTR) : void
    (*mCallbacks->EventHandler)(
            mComponent,
            mComponent->pApplicationPrivate,
            event,
            data1,
            data2,
            data);
!!!662540.cpp!!!	notifyEmptyBufferDone(inout header : OMX_BUFFERHEADERTYPE) : void
    (*mCallbacks->EmptyBufferDone)(
            mComponent, mComponent->pApplicationPrivate, header);
!!!662668.cpp!!!	notifyFillBufferDone(inout header : OMX_BUFFERHEADERTYPE) : void
    (*mCallbacks->FillBufferDone)(
            mComponent, mComponent->pApplicationPrivate, header);
!!!662796.cpp!!!	sendCommand(in cmd : OMX_COMMANDTYPE, in param : OMX_U32, in data : OMX_PTR) : OMX_ERRORTYPE
    return OMX_ErrorUndefined;
!!!662924.cpp!!!	getParameter(in index : OMX_INDEXTYPE, in params : OMX_PTR) : OMX_ERRORTYPE
    return OMX_ErrorUndefined;
!!!663052.cpp!!!	setParameter(in index : OMX_INDEXTYPE, in params : OMX_PTR) : OMX_ERRORTYPE
    return OMX_ErrorUndefined;
!!!663180.cpp!!!	getConfig(in index : OMX_INDEXTYPE, in params : OMX_PTR) : OMX_ERRORTYPE
    return OMX_ErrorUndefined;
!!!663308.cpp!!!	setConfig(in index : OMX_INDEXTYPE, in params : OMX_PTR) : OMX_ERRORTYPE
    return OMX_ErrorUndefined;
!!!663436.cpp!!!	getExtensionIndex(in name : char, inout index : OMX_INDEXTYPE) : OMX_ERRORTYPE
    return OMX_ErrorUndefined;
!!!663564.cpp!!!	useBuffer(inout buffer : OMX_BUFFERHEADERTYPE, in portIndex : OMX_U32, in appPrivate : OMX_PTR, in size : OMX_U32, inout ptr : OMX_U8) : OMX_ERRORTYPE
    return OMX_ErrorUndefined;
!!!663692.cpp!!!	allocateBuffer(inout buffer : OMX_BUFFERHEADERTYPE, in portIndex : OMX_U32, in appPrivate : OMX_PTR, in size : OMX_U32) : OMX_ERRORTYPE
    return OMX_ErrorUndefined;
!!!663820.cpp!!!	freeBuffer(in portIndex : OMX_U32, inout buffer : OMX_BUFFERHEADERTYPE) : OMX_ERRORTYPE
    return OMX_ErrorUndefined;
!!!663948.cpp!!!	emptyThisBuffer(inout buffer : OMX_BUFFERHEADERTYPE) : OMX_ERRORTYPE
    return OMX_ErrorUndefined;
!!!664076.cpp!!!	fillThisBuffer(inout buffer : OMX_BUFFERHEADERTYPE) : OMX_ERRORTYPE
    return OMX_ErrorUndefined;
!!!664204.cpp!!!	getState(inout state : OMX_STATETYPE) : OMX_ERRORTYPE
    return OMX_ErrorUndefined;
!!!664332.cpp!!!	SendCommandWrapper(in component : OMX_HANDLETYPE, in cmd : OMX_COMMANDTYPE, in param : OMX_U32, in data : OMX_PTR) : OMX_ERRORTYPE
    SoftOMXComponent *me =
        (SoftOMXComponent *)
            ((OMX_COMPONENTTYPE *)component)->pComponentPrivate;

    return me->sendCommand(cmd, param, data);
!!!664460.cpp!!!	GetParameterWrapper(in component : OMX_HANDLETYPE, in index : OMX_INDEXTYPE, in params : OMX_PTR) : OMX_ERRORTYPE
    SoftOMXComponent *me =
        (SoftOMXComponent *)
            ((OMX_COMPONENTTYPE *)component)->pComponentPrivate;

    return me->getParameter(index, params);
!!!664588.cpp!!!	SetParameterWrapper(in component : OMX_HANDLETYPE, in index : OMX_INDEXTYPE, in params : OMX_PTR) : OMX_ERRORTYPE
    SoftOMXComponent *me =
        (SoftOMXComponent *)
            ((OMX_COMPONENTTYPE *)component)->pComponentPrivate;

    return me->setParameter(index, params);
!!!664716.cpp!!!	GetConfigWrapper(in component : OMX_HANDLETYPE, in index : OMX_INDEXTYPE, in params : OMX_PTR) : OMX_ERRORTYPE
    SoftOMXComponent *me =
        (SoftOMXComponent *)
            ((OMX_COMPONENTTYPE *)component)->pComponentPrivate;

    return me->getConfig(index, params);
!!!664844.cpp!!!	SetConfigWrapper(in component : OMX_HANDLETYPE, in index : OMX_INDEXTYPE, in params : OMX_PTR) : OMX_ERRORTYPE
    SoftOMXComponent *me =
        (SoftOMXComponent *)
            ((OMX_COMPONENTTYPE *)component)->pComponentPrivate;

    return me->setConfig(index, params);
!!!664972.cpp!!!	GetExtensionIndexWrapper(in component : OMX_HANDLETYPE, in name : OMX_STRING, inout index : OMX_INDEXTYPE) : OMX_ERRORTYPE
    SoftOMXComponent *me =
        (SoftOMXComponent *)
            ((OMX_COMPONENTTYPE *)component)->pComponentPrivate;

    return me->getExtensionIndex(name, index);
!!!665100.cpp!!!	UseBufferWrapper(in component : OMX_HANDLETYPE, inout buffer : OMX_BUFFERHEADERTYPE, in portIndex : OMX_U32, in appPrivate : OMX_PTR, in size : OMX_U32, inout ptr : OMX_U8) : OMX_ERRORTYPE
    SoftOMXComponent *me =
        (SoftOMXComponent *)
            ((OMX_COMPONENTTYPE *)component)->pComponentPrivate;

    return me->useBuffer(buffer, portIndex, appPrivate, size, ptr);
!!!665228.cpp!!!	AllocateBufferWrapper(in component : OMX_HANDLETYPE, inout buffer : OMX_BUFFERHEADERTYPE, in portIndex : OMX_U32, in appPrivate : OMX_PTR, in size : OMX_U32) : OMX_ERRORTYPE
    SoftOMXComponent *me =
        (SoftOMXComponent *)
            ((OMX_COMPONENTTYPE *)component)->pComponentPrivate;

    return me->allocateBuffer(buffer, portIndex, appPrivate, size);
!!!665356.cpp!!!	FreeBufferWrapper(in component : OMX_HANDLETYPE, in portIndex : OMX_U32, inout buffer : OMX_BUFFERHEADERTYPE) : OMX_ERRORTYPE
    SoftOMXComponent *me =
        (SoftOMXComponent *)
            ((OMX_COMPONENTTYPE *)component)->pComponentPrivate;

    return me->freeBuffer(portIndex, buffer);
!!!665484.cpp!!!	EmptyThisBufferWrapper(in component : OMX_HANDLETYPE, inout buffer : OMX_BUFFERHEADERTYPE) : OMX_ERRORTYPE
    SoftOMXComponent *me =
        (SoftOMXComponent *)
            ((OMX_COMPONENTTYPE *)component)->pComponentPrivate;

    return me->emptyThisBuffer(buffer);
!!!665612.cpp!!!	FillThisBufferWrapper(in component : OMX_HANDLETYPE, inout buffer : OMX_BUFFERHEADERTYPE) : OMX_ERRORTYPE
    SoftOMXComponent *me =
        (SoftOMXComponent *)
            ((OMX_COMPONENTTYPE *)component)->pComponentPrivate;

    return me->fillThisBuffer(buffer);
!!!665740.cpp!!!	GetStateWrapper(in component : OMX_HANDLETYPE, inout state : OMX_STATETYPE) : OMX_ERRORTYPE
    SoftOMXComponent *me =
        (SoftOMXComponent *)
            ((OMX_COMPONENTTYPE *)component)->pComponentPrivate;

    return me->getState(state);
