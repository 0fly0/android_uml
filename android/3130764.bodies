class DiscoveryProxy
!!!13193740.java!!!	DiscoveryProxy(inout context : Context)
        mListeners = new HashMap<RecordType, Transport>();
        mAdvertisers = new HashMap<RecordType, AdvertisedService>();
        mQueuedAdvertisers = new ArrayList<ServiceRecord>();
        mQueuedListeners = new HashMap<RecordType, DiscoveryListener>();
        mContext = context;
!!!13193868.java!!!	bind() : void
        Log.v(TAG, "bind");

        if (mIsBound) {
            throw new DiscoveryException("already bound");
        }

        mIsBound = mContext.bindService(new Intent("com.google.android.tv.discovery.IDiscoveryService"),
                mConnection, Context.BIND_AUTO_CREATE);
        if (!mIsBound) {
            throw new DiscoveryException("binding failed");
        }
!!!13193996.java!!!	unbind() : void
        Log.v(TAG, "unbind");

        if (!mIsBound) {
            throw new DiscoveryException("not bound");
        }

        /* unregistered active advertisers */
        synchronized (mAdvertisers) {
            for (RecordType key: mAdvertisers.keySet()) {
                unregisterAdvertiserRemote(key);
            }
        }

        /* unregistered active listeners */
        synchronized (mListeners) {
            for (RecordType key: mListeners.keySet()) {
                unregisterListenerRemote(key);
            }
        }
        mContext.unbindService(mConnection);
        mService = null;
        mIsBound = false;
!!!13194124.java!!!	registerAdvertiser(inout record : ServiceRecord) : void
        Log.v(TAG, "registerAdvertiser: record " + record);

        if (record == null) {
            throw new IllegalArgumentException("Null record.");
        }

        if (!mIsBound) {
            throw new DiscoveryException("Service not bound.");
        }

        synchronized (mQueuedAdvertisers) {
            /**
             * if connected to remote service, send the advertiser to remote.
             * else queue the advertiser record.
             */
            if (mService == null) {
                Log.v(TAG, "mService null, queueing record " + record);
                mQueuedAdvertisers.add(record);
            }
            else {
                Log.v(TAG, "mService " + mService + " registeringing record " + record);
                registerAdvertiserRemote(record);
            }
        }
!!!13194252.java!!!	unregisterAdvertiser(inout type : RecordType) : void
        Log.v(TAG, "unregisterAdvertiser: record " + type);

        if (type == null) {
            throw new IllegalArgumentException("Null type.");
        }

        if (!mIsBound) {
            throw new DiscoveryException("Service not bound.");
        }

        synchronized (mQueuedAdvertisers) {
            if (mService == null) {
                 if (mQueuedAdvertisers.contains(type)) {
                     Log.v(TAG, "mService null, dequeueing record " + type);
                     mQueuedAdvertisers.remove(type);
                 }
                 else {
                     throw new DiscoveryException("advertiser " + type + " not registered");
                 }
            }
            else {
                Log.v(TAG, "unregisteringing advertiser " + type);
                unregisterAdvertiserRemote(type);
            }
        }
!!!13194380.java!!!	registerListener(inout type : RecordType, inout listener : DiscoveryListener) : void
        Log.v(TAG, "registerListener: " + " RecordType " + type + " DiscoveryListener "
            + listener);

        if (type == null) {
            throw new IllegalArgumentException("Null record.");
        }

        if (listener == null) {
            throw new IllegalArgumentException("Null listener.");
        }

        if (!mIsBound) {
            throw new DiscoveryException("Service not bound.");
        }

        synchronized (mQueuedListeners) {
            if (mService == null) {
                Log.v(TAG, "mService null, queueing type " + type + " listener " + listener);
                mQueuedListeners.put(type,  listener);
            }
            else {
                Log.v(TAG, "mService " + mService + " registerListenerRemote type " + type
                    + " listener " + listener);
                registerListenerRemote(type, listener);
            }
        }
!!!13194508.java!!!	unregisterListener(inout type : RecordType) : void
        Log.v(TAG, "unregisterListener: " + " RecordType ");

        if (type == null) {
            throw new IllegalArgumentException("Null record.");
        }

        if (!mIsBound) {
            throw new DiscoveryException("Service not bound.");
        }

        synchronized (mQueuedListeners) {
            if (mService == null) {
                if (mQueuedListeners.containsKey(type)) {
                    Log.v(TAG, "mService null, dequeueing record " + type);
                    mQueuedListeners.remove(type);
                }
                else {
                    throw new DiscoveryException("listener type " + type + " not registered");
                }
            }
            else {
                Log.v(TAG, "unregistering listener type " + type);
                unregisterListenerRemote(type);
            }
        }
!!!13194636.java!!!	registerAdvertiserRemote(inout record : ServiceRecord) : void
        Log.e(TAG, "registerAdvertiserRemote: record " + record);

        RecordType type = record.getType();
        synchronized (mAdvertisers) {
            if (mAdvertisers.containsKey(type)) {
                        throw new DiscoveryException("Already advertising service"
                        + " of type '" + type + "'.");
            }
            Binder token = new Binder();
            try {
                getDiscoveryService().registerAdvertiser(record, token);
            } catch (RemoteException e) {
                throw new DiscoveryException(e);
            }
            mAdvertisers.put(type, new AdvertisedService(record, token));
        }
!!!13194764.java!!!	unregisterAdvertiserRemote(inout type : RecordType) : void
        Log.e(TAG, "unregisterAdvertiserRemote: type " + type);

        synchronized (mAdvertisers) {
            if (!mAdvertisers.containsKey(type)) {
                throw new DiscoveryException("Not advertising service"
                        + " of type '" + type + "'.");
            }
            AdvertisedService service = mAdvertisers.remove(type);
            try {
                getDiscoveryService().unregisterAdvertiser(
                        service.getRecord(), service.getToken());
            } catch (RemoteException e) {
                throw new DiscoveryException(e);
            }
        }
!!!13194892.java!!!	registerListenerRemote(inout type : RecordType, inout listener : DiscoveryListener) : void
        Log.v(TAG, "registerListenerRemote: type " + type + " listener " + listener);

        synchronized (mListeners) {
            if (mListeners.containsKey(type)) {
                throw new DiscoveryException("Already monitoring services"
                        + " of type '" + type + "'.");
            }
            Transport transport = new Transport(listener);
            try {
                getDiscoveryService().registerListener(type, transport);
            } catch (RemoteException e) {
                throw new DiscoveryException(e);
            }
            mListeners.put(type, transport);
        }
!!!13195020.java!!!	unregisterListenerRemote(inout type : RecordType) : void
        Log.v(TAG, "unregisterListenerRemote: type " + type);

        synchronized (mListeners) {
            if (!mListeners.containsKey(type)) {
                throw new DiscoveryException("Not monitoring services"
                        + " of type '" + type + "'.");
            }
            Transport transport = mListeners.remove(type);
            try {
                getDiscoveryService().unregisterListener(type, transport);
            } catch (RemoteException e) {
                throw new DiscoveryException(e);
            }
        }
!!!13195148.java!!!	getUniqueDeviceName() : String
        try {
            return getDiscoveryService().getUniqueDeviceName();
        } catch (RemoteException e) {
            throw new DiscoveryException(e);
        }
!!!13195276.java!!!	isMonitoring(inout type : RecordType) : boolean
        if (type == null) {
            return false;
        }
        synchronized (mListeners) {
            return mListeners.containsKey(type);
        }
!!!13195404.java!!!	getDiscoveryService() : IDiscoveryService
        if (mService == null) {
            throw new DiscoveryException("DiscoveryService is not available.");
        }
        return mService;
