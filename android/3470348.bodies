class Annotation
!!!15032332.java!!!	Annotation(inout buffer : DexBuffer, in visibility : byte, in typeIndex : int, inout names : int, inout values : EncodedValue)
        this.buffer = buffer;
        this.visibility = visibility;
        this.typeIndex = typeIndex;
        this.names = names;
        this.values = values;
!!!15032460.java!!!	getVisibility() : byte
        return visibility;
!!!15032588.java!!!	getTypeIndex() : int
        return typeIndex;
!!!15032716.java!!!	getNames() : int
        return names;
!!!15032844.java!!!	getValues() : EncodedValue
        return values;
!!!15032972.java!!!	writeTo(inout out : Section) : void
        out.writeByte(visibility);
        out.writeUleb128(typeIndex);
        out.writeUleb128(names.length);
        for (int i = 0; i < names.length; i++) {
            out.writeUleb128(names[i]);
            values[i].writeTo(out);
        }
!!!15033100.java!!!	compareTo(inout other : Annotation) : int
        if (typeIndex != other.typeIndex) {
            return Unsigned.compare(typeIndex, other.typeIndex);
        }
        int size = Math.min(names.length, other.names.length);
        for (int i = 0; i < size; i++) {
            if (names[i] != other.names[i]) {
                return Unsigned.compare(names[i], other.names[i]);
            }
            int compare = values[i].compareTo(other.values[i]);
            if (compare != 0) {
                return compare;
            }
        }
        return names.length - other.names.length;
!!!15033228.java!!!	toString() : String
        if (buffer == null) {
            return visibility + " " + typeIndex;
        }

        StringBuilder result = new StringBuilder();
        result.append(visibility);
        result.append(" ");
        result.append(buffer.typeNames().get(typeIndex));
        result.append("[");
        for (int i = 0; i < names.length; i++) {
            if (i > 0) {
                result.append(", ");
            }
            result.append(buffer.strings().get(names[i]));
            result.append("=");
            result.append(values[i]);
        }
        result.append("]");
        return result.toString();
