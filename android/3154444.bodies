class TvWindowManager
!!!13360268.java!!!	init(inout context : Context, inout windowManager : IWindowManager, inout windowManagerFuncs : WindowManagerFuncs) : void
        super.init(context, windowManager, windowManagerFuncs);

        mTvSettingsObserver = new TvSettingsObserver(mHandler);
        mTvSettingsObserver.observe();
!!!13360396.java!!!	systemReady() : void
        try {
            Slog.i(TAG, "Global Key Service");
            ServiceManager.addService(GlobalKeyManager.GLOBAL_KEY_SERVICE,
                    new GlobalKeyService(mContext));
        } catch (Throwable e) {
            Log.e(TAG, "Failure starting Global Key Service", e);
        }

        super.systemReady();
!!!13360524.java!!!	interceptKeyBeforeDispatching(inout win : WindowState, inout event : KeyEvent, in policyFlags : int) : long
        final int keyCode = event.getKeyCode();
        final int scanCode = event.getScanCode();
        final int repeatCount = event.getRepeatCount();
        final int metaState = event.getMetaState();
        final boolean down = event.getAction() == KeyEvent.ACTION_DOWN;

        if (keyCode == KeyEvent.KEYCODE_MENU) {
            if (down && repeatCount == 0 && Platform.isUserInitiatedFeedbackEnabled(mContext)) {
                /* Invokes the feedback client for user initiated feedback when the user
                 * presses on Alt-Shift-Menu or Ctrl-Shift-Menu. */
                final int chordFeedback = KeyEvent.META_SHIFT_ON | KeyEvent.META_CTRL_ON;
                final int altChordFeedback = KeyEvent.META_SHIFT_ON | KeyEvent.META_ALT_ON;

                if ((metaState & chordFeedback) == chordFeedback
                     || (metaState & altChordFeedback) == altChordFeedback) {
                    mContext.startServiceAsUser(
                            new Intent(TvIntent.ACTION_FEEDBACK), UserHandle.CURRENT);
                    return -1;
                }
            }
        } else if (keyCode == KeyEvent.KEYCODE_UNKNOWN) {
            if (scanCode == SCANCODE_VOICE_SEARCH) {
                if (down && repeatCount == 0 && !Platform.isNotSetup(mContext)) {
                    launchTvVoiceSearch();
                }
                return -1;
            }
        } else if (keyCode == KeyEvent.KEYCODE_ASSIST) {
            if (down) {
                if (repeatCount == 0) {
                    mAssistKeyLongPressed = false;
                } else if (repeatCount == 1) {
                    mAssistKeyLongPressed = true;
                    launchTvVoiceSearch();
                }
            } else {
                if (mAssistKeyLongPressed) {
                    mAssistKeyLongPressed = false;
                } else {
                    launchGlobalSearch();
                }
            }
            return -1;
        }

        return super.interceptKeyBeforeDispatching(win, event, policyFlags);
!!!13360652.java!!!	launchTvVoiceSearch() : void
        try {
            Platform.launch(mContext,
                    new Intent(TvIntent.ACTION_TV_VOICE_SEARCH), true, null);
        } catch (RuntimeException e) {
            Log.d(TAG, "voice search launch failed", e);
        }
!!!13360780.java!!!	launchGlobalSearch() : void
        sendCloseSystemWindows(SYSTEM_DIALOG_REASON_ASSIST);

        SearchManager searchManager =
                (SearchManager) mContext.getSystemService(Context.SEARCH_SERVICE);
        searchManager.startSearch(null, false, null, null, true /* global */);
!!!13360908.java!!!	rotationForOrientationLw(in orientation : int, in lastRotation : int) : int
        if (!TvSettings.Secure.getBoolean(mContext.getContentResolver(),
                TvSettings.Secure.PORTRAIT_MODE_IN_LANDSCAPE, false)) {
            return super.rotationForOrientationLw(orientation, lastRotation);
        }

        if (false) {
            Slog.v(TAG, "rotationForOrientationLw(orient="
                        + orientation + ", last=" + lastRotation
                        + "); user=" + mUserRotation + " "
                        + ((mUserRotationMode == WindowManagerPolicy.USER_ROTATION_LOCKED)
                            ? "USER_ROTATION_LOCKED" : "")
                        );
        }

        // Disable rotation on Google TV
        return Surface.ROTATION_0;
