class SourceHandler
!!!12702476.java!!!	SourceHandler(inout source : MediaSource)
            mSource = new WeakReference<MediaSource>(source);
!!!12702604.java!!!	handleMessage(inout msg : Message) : void
            MediaSource source = mSource.get();
            if (source != null) {
                switch (msg.what) {
                    case MSG_START:
                        if (source.mIsStarted == false) {
                            source.mMediaInfo = new MediaInfo();
                            source.onStart(source.mMediaInfo);
                            source.startCompleted(source.mMediaInfo);
                            source.mIsSelectedTrack = new boolean[source.getNumberOfTracks()];
                            source.mIsStarted = true;
                        } else {
                            Log.i(TAG, "MediaSource is already started. If you want to restart"
                                    + "the source, please call the function end() first.");
                        }
                        break;
                    case MSG_END:
                        if (source.mIsStarted == true) {
                            if (source.mSourceLooper != null) {
                                source.mSourceLooper.quit();
                            }
                            source.mIsStarted = false;
                        }
                        break;
                    case MSG_SELECT_TRACK:
                        if (source.mIsSelectedTrack[msg.arg1] == false) {
                            TrackMetadata track = source.mMediaInfo.getTrackById(msg.arg1);
                            source.onSelectTrack(track);
                            //TODO: move this into ElementaryStreamReceiver.cpp
                            try {
                                if (track.getBoolean(TrackMetadata.KEY_IS_DRM) == true) {
                                    track.setByteArray(TrackMetadata.KEY_DRM_ID,
                                            source.mMediaInfo.mDrmUuid);
                                }
                            } catch (IllegalArgumentException e) {
                                Log.v(TAG, e.toString());
                            }
                            source.selectTrackCompleted(msg.arg1,
                                    source.mMediaInfo.getParcelTrackMetadata(msg.arg1));
                            source.mIsSelectedTrack[msg.arg1] = true;
                        }
                        break;
                    case MSG_DESELECT_TRACK:
                        if (source.mIsSelectedTrack[msg.arg1] == true) {
                            source.onDeselectTrack(source.mMediaInfo.getTrackById(msg.arg1));
                            source.mIsSelectedTrack[msg.arg1] = false;
                        }
                        break;
                    case MSG_SEEK_TO:
                        if (source.mIsStarted == true) {
                            source.onSeekTo(((Long) msg.obj).longValue());
                            source.seekCompleted();
                        } else {
                            Log.e(TAG,"MediaSource is not started.");
                        }
                        break;
                    case MSG_DISCONTINUITY:
                        source.onHandleDiscontinuity(source.mMediaInfo.getTrackById(msg.arg1));
                        source.selectTrackCompleted(
                                msg.arg1, source.mMediaInfo.getParcelTrackMetadata(msg.arg1));
                        break;
                    default:
                        throw new AssertionError("Invalid message.");
                }
            }
