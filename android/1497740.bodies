class FBOSyncView
!!!9195916.java!!!	FBOSyncView(inout context : Context)
        super(context);
        ensureRenderScript();
        mScaleDetector = new ScaleGestureDetector(context, new ScaleListener());
!!!9196044.java!!!	ensureRenderScript() : void
        if (mRS == null) {
            RenderScriptGL.SurfaceConfig sc = new RenderScriptGL.SurfaceConfig();
            sc.setDepth(16, 24);
            mRS = createRenderScriptGL(sc);
            mRender = new FBOSyncRS();
            mRender.init(mRS, getResources());
        }
!!!9196172.java!!!	onAttachedToWindow() : void
        super.onAttachedToWindow();
        ensureRenderScript();
!!!9196300.java!!!	surfaceChanged(inout holder : SurfaceHolder, in format : int, in w : int, in h : int) : void
        super.surfaceChanged(holder, format, w, h);
        mRender.surfaceChanged();
!!!9196428.java!!!	onDetachedFromWindow() : void
        mRender = null;
        if (mRS != null) {
            mRS = null;
            destroyRenderScriptGL();
        }
!!!9196556.java!!!	loadA3DFile(in path : String) : void
        mRender.loadA3DFile(path);
!!!9196684.java!!!	onTouchEvent(inout ev : MotionEvent) : boolean
        mScaleDetector.onTouchEvent(ev);

        boolean ret = false;
        float x = ev.getX();
        float y = ev.getY();

        final int action = ev.getAction();

        switch (action & MotionEvent.ACTION_MASK) {
        case MotionEvent.ACTION_DOWN: {
            mRender.onActionDown(x, y);
            mActivePointerId = ev.getPointerId(0);
            ret = true;
            break;
        }
        case MotionEvent.ACTION_MOVE: {
            if (!mScaleDetector.isInProgress()) {
                mRender.onActionMove(x, y);
            }
            mRender.onActionDown(x, y);
            ret = true;
            break;
        }

        case MotionEvent.ACTION_UP: {
            mActivePointerId = INVALID_POINTER_ID;
            break;
        }

        case MotionEvent.ACTION_CANCEL: {
            mActivePointerId = INVALID_POINTER_ID;
            break;
        }

        case MotionEvent.ACTION_POINTER_UP: {
            final int pointerIndex = (ev.getAction() & MotionEvent.ACTION_POINTER_INDEX_MASK)
                    >> MotionEvent.ACTION_POINTER_INDEX_SHIFT;
            final int pointerId = ev.getPointerId(pointerIndex);
            if (pointerId == mActivePointerId) {
                // This was our active pointer going up. Choose a new
                // active pointer and adjust accordingly.
                final int newPointerIndex = pointerIndex == 0 ? 1 : 0;
                x = ev.getX(newPointerIndex);
                y = ev.getY(newPointerIndex);
                mRender.onActionDown(x, y);
                mActivePointerId = ev.getPointerId(newPointerIndex);
            }
            break;
        }
        }

        return ret;
