class UninstallShortcutReceiver
!!!13698060.java!!!	onReceive(inout context : Context, inout data : Intent) : void
        if (!ACTION_UNINSTALL_SHORTCUT.equals(data.getAction())) {
            return;
        }

        PendingUninstallShortcutInfo info = new PendingUninstallShortcutInfo(data);
        if (mUseUninstallQueue) {
            mUninstallQueue.add(info);
        } else {
            processUninstallShortcut(context, info);
        }
!!!13698188.java!!!	enableUninstallQueue() : void
        mUseUninstallQueue = true;
!!!13698316.java!!!	disableAndFlushUninstallQueue(inout context : Context) : void
        mUseUninstallQueue = false;
        Iterator<PendingUninstallShortcutInfo> iter = mUninstallQueue.iterator();
        while (iter.hasNext()) {
            processUninstallShortcut(context, iter.next());
            iter.remove();
        }
!!!13698444.java!!!	processUninstallShortcut(inout context : Context, inout pendingInfo : PendingUninstallShortcutInfo) : void
        String spKey = LauncherApplication.getSharedPreferencesKey();
        SharedPreferences sharedPrefs = context.getSharedPreferences(spKey, Context.MODE_PRIVATE);

        final Intent data = pendingInfo.data;

        LauncherApplication app = (LauncherApplication) context.getApplicationContext();
        synchronized (app) {
            removeShortcut(context, data, sharedPrefs);
        }
!!!13698572.java!!!	removeShortcut(inout context : Context, inout data : Intent, in sharedPrefs : SharedPreferences) : void
        Intent intent = data.getParcelableExtra(Intent.EXTRA_SHORTCUT_INTENT);
        String name = data.getStringExtra(Intent.EXTRA_SHORTCUT_NAME);
        boolean duplicate = data.getBooleanExtra(Launcher.EXTRA_SHORTCUT_DUPLICATE, true);

        if (intent != null && name != null) {
            final ContentResolver cr = context.getContentResolver();
            Cursor c = cr.query(LauncherSettings.Favorites.CONTENT_URI,
                new String[] { LauncherSettings.Favorites._ID, LauncherSettings.Favorites.INTENT },
                LauncherSettings.Favorites.TITLE + "=?", new String[] { name }, null);

            final int intentIndex = c.getColumnIndexOrThrow(LauncherSettings.Favorites.INTENT);
            final int idIndex = c.getColumnIndexOrThrow(LauncherSettings.Favorites._ID);

            boolean changed = false;

            try {
                while (c.moveToNext()) {
                    try {
                        if (intent.filterEquals(Intent.parseUri(c.getString(intentIndex), 0))) {
                            final long id = c.getLong(idIndex);
                            final Uri uri = LauncherSettings.Favorites.getContentUri(id, false);
                            cr.delete(uri, null, null);
                            changed = true;
                            if (!duplicate) {
                                break;
                            }
                        }
                    } catch (URISyntaxException e) {
                        // Ignore
                    }
                }
            } finally {
                c.close();
            }

            if (changed) {
                cr.notifyChange(LauncherSettings.Favorites.CONTENT_URI, null);
                Toast.makeText(context, context.getString(R.string.shortcut_uninstalled, name),
                        Toast.LENGTH_SHORT).show();
            }

            // Remove any items due to be animated
            boolean appRemoved;
            Set<String> newApps = new HashSet<String>();
            newApps = sharedPrefs.getStringSet(InstallShortcutReceiver.NEW_APPS_LIST_KEY, newApps);
            synchronized (newApps) {
                do {
                    appRemoved = newApps.remove(intent.toUri(0).toString());
                } while (appRemoved);
            }
            if (appRemoved) {
                final Set<String> savedNewApps = newApps;
                new Thread("setNewAppsThread-remove") {
                    public void run() {
                        synchronized (savedNewApps) {
                            SharedPreferences.Editor editor = sharedPrefs.edit();
                            editor.putStringSet(InstallShortcutReceiver.NEW_APPS_LIST_KEY,
                                    savedNewApps);
                            if (savedNewApps.isEmpty()) {
                                // Reset the page index if there are no more items
                                editor.putInt(InstallShortcutReceiver.NEW_APPS_PAGE_KEY, -1);
                            }
                            editor.commit();
                        }
                    }
                }.start();
            }
        }
