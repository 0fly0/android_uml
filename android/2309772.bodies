class Proxy
!!!10730380.java!!!	Proxy(inout remote : android.os.IBinder)
mRemote = remote;
!!!10730508.java!!!	asBinder() : android.os.IBinder
return mRemote;
!!!10730636.java!!!	getInterfaceDescriptor() : java.lang.String
return DESCRIPTOR;
!!!10730764.java!!!	copyResourceToContainer(inout packageURI : android.net.Uri, inout containerId : java.lang.String, inout key : java.lang.String, inout resFileName : java.lang.String, inout publicResFileName : java.lang.String, inout isExternal : boolean, inout isForwardLocked : boolean) : java.lang.String
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
java.lang.String _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
if ((packageURI!=null)) {
_data.writeInt(1);
packageURI.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
_data.writeString(containerId);
_data.writeString(key);
_data.writeString(resFileName);
_data.writeString(publicResFileName);
_data.writeInt(((isExternal)?(1):(0)));
_data.writeInt(((isForwardLocked)?(1):(0)));
mRemote.transact(Stub.TRANSACTION_copyResourceToContainer, _data, _reply, 0);
_reply.readException();
_result = _reply.readString();
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!10730892.java!!!	copyResource(inout packageURI : android.net.Uri, inout encryptionParams : android.content.pm.ContainerEncryptionParams, inout outStream : android.os.ParcelFileDescriptor) : int
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
int _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
if ((packageURI!=null)) {
_data.writeInt(1);
packageURI.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
if ((encryptionParams!=null)) {
_data.writeInt(1);
encryptionParams.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
if ((outStream!=null)) {
_data.writeInt(1);
outStream.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
mRemote.transact(Stub.TRANSACTION_copyResource, _data, _reply, 0);
_reply.readException();
_result = _reply.readInt();
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!10731020.java!!!	getMinimalPackageInfo(inout packagePath : java.lang.String, in flags : int, in threshold : long) : android.content.pm.PackageInfoLite
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
android.content.pm.PackageInfoLite _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeString(packagePath);
_data.writeInt(flags);
_data.writeLong(threshold);
mRemote.transact(Stub.TRANSACTION_getMinimalPackageInfo, _data, _reply, 0);
_reply.readException();
if ((0!=_reply.readInt())) {
_result = android.content.pm.PackageInfoLite.CREATOR.createFromParcel(_reply);
}
else {
_result = null;
}
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!10731148.java!!!	checkInternalFreeStorage(inout fileUri : android.net.Uri, inout isForwardLocked : boolean, in threshold : long) : boolean
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
boolean _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
if ((fileUri!=null)) {
_data.writeInt(1);
fileUri.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
_data.writeInt(((isForwardLocked)?(1):(0)));
_data.writeLong(threshold);
mRemote.transact(Stub.TRANSACTION_checkInternalFreeStorage, _data, _reply, 0);
_reply.readException();
_result = (0!=_reply.readInt());
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!10731276.java!!!	checkExternalFreeStorage(inout fileUri : android.net.Uri, inout isForwardLocked : boolean) : boolean
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
boolean _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
if ((fileUri!=null)) {
_data.writeInt(1);
fileUri.writeToParcel(_data, 0);
}
else {
_data.writeInt(0);
}
_data.writeInt(((isForwardLocked)?(1):(0)));
mRemote.transact(Stub.TRANSACTION_checkExternalFreeStorage, _data, _reply, 0);
_reply.readException();
_result = (0!=_reply.readInt());
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!10731404.java!!!	getObbInfo(inout filename : java.lang.String) : android.content.res.ObbInfo
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
android.content.res.ObbInfo _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeString(filename);
mRemote.transact(Stub.TRANSACTION_getObbInfo, _data, _reply, 0);
_reply.readException();
if ((0!=_reply.readInt())) {
_result = android.content.res.ObbInfo.CREATOR.createFromParcel(_reply);
}
else {
_result = null;
}
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!10731532.java!!!	calculateDirectorySize(inout directory : java.lang.String) : long
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
long _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeString(directory);
mRemote.transact(Stub.TRANSACTION_calculateDirectorySize, _data, _reply, 0);
_reply.readException();
_result = _reply.readLong();
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!10731660.java!!!	getFileSystemStats(inout path : java.lang.String) : long
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
long[] _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeString(path);
mRemote.transact(Stub.TRANSACTION_getFileSystemStats, _data, _reply, 0);
_reply.readException();
_result = _reply.createLongArray();
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
!!!10731788.java!!!	clearDirectory(inout directory : java.lang.String) : void
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeString(directory);
mRemote.transact(Stub.TRANSACTION_clearDirectory, _data, _reply, 0);
_reply.readException();
}
finally {
_reply.recycle();
_data.recycle();
}
!!!10731916.java!!!	calculateInstalledSize(inout packagePath : java.lang.String, inout isForwardLocked : boolean) : long
android.os.Parcel _data = android.os.Parcel.obtain();
android.os.Parcel _reply = android.os.Parcel.obtain();
long _result;
try {
_data.writeInterfaceToken(DESCRIPTOR);
_data.writeString(packagePath);
_data.writeInt(((isForwardLocked)?(1):(0)));
mRemote.transact(Stub.TRANSACTION_calculateInstalledSize, _data, _reply, 0);
_reply.readException();
_result = _reply.readLong();
}
finally {
_reply.recycle();
_data.recycle();
}
return _result;
