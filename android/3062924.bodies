class SmoothStreamMediaParser
!!!12669196.java!!!	parseStartTag(inout parser : XmlPullParser) : ElementBase
            mMeta = new SmoothStreamingMedia();
            String value;

            try {
                // Required
                value = parser.getAttributeValue(null, SmoothStreamingConstants.KEY_MAJOR_VERSION);
                if (value != null) {
                    mMeta.setMajorVersion(Integer.parseInt(value));
                } else {
                    throw new SmoothStreamingMissingFieldException(
                            SmoothStreamingConstants.KEY_MAJOR_VERSION);
                }

                // Required
                value = parser.getAttributeValue(null, SmoothStreamingConstants.KEY_MINOR_VERSION);
                if (value != null) {
                    mMeta.setMinorVersion(Integer.parseInt(value));
                } else {
                    throw new SmoothStreamingMissingFieldException(
                            SmoothStreamingConstants.KEY_MINOR_VERSION);
                }

                // Required
                value = parser.getAttributeValue(null, SmoothStreamingConstants.KEY_DURATION);
                if (value != null) {
                    mMeta.setDuration(Long.parseLong(value));
                } else {
                    throw new SmoothStreamingMissingFieldException(
                            SmoothStreamingConstants.KEY_DURATION);
                }

                value = parser.getAttributeValue(null, SmoothStreamingConstants.KEY_TIME_SCALE);
                if (value != null) {
                    mMeta.setTimeScale(Long.parseLong(value));
                }

                value = parser.getAttributeValue(null, SmoothStreamingConstants.KEY_IS_LIVE);
                if (value != null) {
                    if (SmoothStreamingConstants.KEY_TRUE.equals(value)) {
                        mMeta.setLive(true);
                    } else if (SmoothStreamingConstants.KEY_FALSE.equals(value)) {
                        mMeta.setLive(false);
                    } else {
                        throw new SmoothStreamingParseException("Invalid boolean value["
                                + SmoothStreamingConstants.KEY_IS_LIVE + "]");
                    }
                }

                value = parser.getAttributeValue(
                        null, SmoothStreamingConstants.KEY_LOOKAHEAD_COUNT);
                if (value != null) {
                    mMeta.setLookAheadCount(Integer.parseInt(value));
                }

                value = parser.getAttributeValue(
                        null, SmoothStreamingConstants.KEY_DVR_WINDOW_LENGTH);
                if (value != null) {
                    mMeta.setDvrWindowLength(Integer.parseInt(value));
                }

                // Vendor extension here.
            } catch (NumberFormatException e) {
                throw new SmoothStreamingParseException(e);
            }

            return mMeta;
!!!12669324.java!!!	parseText(inout parser : XmlPullParser) : void
            // No text data.
!!!12669452.java!!!	parseEndTag(inout parser : XmlPullParser) : ElementBase
            return mMeta;
