format 74
"datatype" // framework::base::opengl::java::javax::xml::datatype
  revision 1
  modified_by 27 "shchen"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "/home/shchen/work/android-x86/libcore/luni/src/main/java/javax/xml/datatype/"
  java_package "javax.xml.datatype"
  classview 134811 "datatype"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 301723 "DatatypeConfigurationException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>Indicates a serious configuration error.</p>

@author <a href=\"mailto:Jeff.Suttor@Sun.com\">Jeff Suttor</a>
@version $Revision: 569987 $, $Date: 2007-08-26 21:08:46 -0700 (Sun, 26 Aug 2007) $
@since 1.5"
      classrelation 537883 // <generalisation>
	relation 537883 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 537883 // <generalisation>
	  b parent class_ref 132251 // Exception
      end

      attribute 449691 "serialVersionUID"
	class_attribute const_attribute private explicit_type "long"
	init_value " -1699373159027047238L"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Stream Unique Identifier. "
      end

      classrelation 538011 // causeOnJDK13OrBelow (<unidirectional association>)
	relation 538011 --->
	  a role_name "causeOnJDK13OrBelow" private
	    comment " This field is required to store the cause on JDK 1.3 and below. 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 538011 // causeOnJDK13OrBelow (<unidirectional association>)
	  b parent class_ref 134683 // Throwable
      end

      attribute 449819 "isJDK14OrAbove"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	transient java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Indicates whether this class is being used in a JDK 1.4 context. "
      end

      operation 1889947 "DatatypeConfigurationException"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Create a new <code>DatatypeConfigurationException</code> with
no specified detail message and cause.</p>"
      end

      operation 1890075 "DatatypeConfigurationException"
	public explicit_return_type ""
	nparams 1
	  param inout name "message" type class_ref 3399692 // String
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Create a new <code>DatatypeConfigurationException</code> with
the specified detail message.</p>

@param message The detail message."
      end

      operation 1890203 "DatatypeConfigurationException"
	public explicit_return_type ""
	nparams 2
	  param inout name "message" type class_ref 3399692 // String
	  param inout name "cause" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Create a new <code>DatatypeConfigurationException</code> with
the specified detail message and cause.</p>

@param message The detail message.
@param cause The cause.  A <code>null</code> value is permitted, and indicates that the cause is nonexistent or unknown."
      end

      operation 1890331 "DatatypeConfigurationException"
	public explicit_return_type ""
	nparams 1
	  param inout name "cause" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Create a new <code>DatatypeConfigurationException</code> with
the specified cause.</p>

@param cause The cause.  A <code>null</code> value is permitted, and indicates that the cause is nonexistent or unknown."
      end

      operation 1890459 "printStackTrace"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Print the the trace of methods from where the error
originated.  This will trace all nested exception
objects, as well as this object."
      end

      operation 1890587 "printStackTrace"
	public explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 134939 // PrintStream
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Print the the trace of methods from where the error
originated.  This will trace all nested exception
objects, as well as this object.
@param s The stream where the dump will be sent to."
      end

      operation 1890715 "printStackTrace"
	public explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 135067 // PrintWriter
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Print the the trace of methods from where the error
originated.  This will trace all nested exception
objects, as well as this object.
@param s The writer where the dump will be sent to."
      end

      operation 1890843 "printStackTrace0"
	private explicit_return_type "void"
	nparams 1
	  param inout name "s" type class_ref 135067 // PrintWriter
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1890971 "initCauseByReflection"
	private explicit_return_type "void"
	nparams 1
	  param inout name "cause" type class_ref 134683 // Throwable
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1891099 "readObject"
	private explicit_return_type "void"
	nparams 1
	  param inout name "in" type class_ref 128667 // ObjectInputStream
	nexceptions 2
	  exception class_ref 128539 // IOException
	  exception class_ref 128795 // ClassNotFoundException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 301851 "DatatypeConstants"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>Utility class to contain basic Datatype values as constants.</p>

@author <a href=\"mailto:Jeff.Suttor@Sun.com\">Jeff Suttor</a>
@version $Revision: 446598 $, $Date: 2006-09-15 05:55:40 -0700 (Fri, 15 Sep 2006) $
@since 1.5"
      operation 1891227 "DatatypeConstants"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Private constructor to prevent instantiation.</p>"
      end

      attribute 449947 "JANUARY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Value for first month of year.
"
      end

      attribute 450075 "FEBRUARY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Value for second month of year.
"
      end

      attribute 450203 "MARCH"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Value for third month of year.
"
      end

      attribute 450331 "APRIL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Value for fourth month of year.
"
      end

      attribute 450459 "MAY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 5"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Value for fifth month of year.
"
      end

      attribute 450587 "JUNE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 6"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Value for sixth month of year.
"
      end

      attribute 450715 "JULY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 7"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Value for seventh month of year.
"
      end

      attribute 450843 "AUGUST"
	class_attribute const_attribute public explicit_type "int"
	init_value " 8"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Value for eighth month of year.
"
      end

      attribute 450971 "SEPTEMBER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 9"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Value for ninth month of year.
"
      end

      attribute 451099 "OCTOBER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 10"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Value for tenth month of year.
"
      end

      attribute 451227 "NOVEMBER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 11"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Value for eleven month of year.
"
      end

      attribute 451355 "DECEMBER"
	class_attribute const_attribute public explicit_type "int"
	init_value " 12"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Value for twelve month of year.
"
      end

      attribute 451483 "LESSER"
	class_attribute const_attribute public explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "<p>Comparison result.</p>
"
      end

      attribute 451611 "EQUAL"
	class_attribute const_attribute public explicit_type "int"
	init_value "  0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "<p>Comparison result.</p>
"
      end

      attribute 451739 "GREATER"
	class_attribute const_attribute public explicit_type "int"
	init_value "  1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "<p>Comparison result.</p>
"
      end

      attribute 451867 "INDETERMINATE"
	class_attribute const_attribute public explicit_type "int"
	init_value "  2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "<p>Comparison result.</p>
"
      end

      attribute 451995 "FIELD_UNDEFINED"
	class_attribute const_attribute public explicit_type "int"
	init_value " Integer.MIN_VALUE"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Designation that an \"int\" field is not set.
"
      end

      class 301979 "Field"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 538907 // str (<unidirectional association>)
	  relation 538907 --->
	    a role_name "str" const_relation private
	      comment "
<p><code>String</code> representation of <ode>Field</code>.</p>

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 538907 // str (<unidirectional association>)
	    b parent class_ref 3399692 // String
	end

	attribute 452123 "id"
	  const_attribute private explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "<p>Unique id of the field.</p>

<p>This value allows the {@link Duration} class to use switch
statements to process fields.</p>
"
	end

	operation 1891355 "Field"
	  private explicit_return_type ""
	  nparams 2
	    param in name "str" type class_ref 3399692 // String
	    param in name "id" explicit_type "int"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}final ${t0} ${p0}, final ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "<p>Construct a <code>Field</code> with specified values.</p>
@param str <code>String</code> representation of <code>Field</code>
@param id  <code>int</code> representation of <code>Field</code>"
	end

	operation 1891483 "toString"
	  public return_type class_ref 3399692 // String
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Returns a field name in English. This method
is intended to be used for debugging/diagnosis
and not for display to end-users.

@return
     a non-null valid String constant."
	end

	operation 1891611 "getId"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "<p>Get id of this Field.</p>

@return Id of field."
	end
      end

      classrelation 538139 // YEARS (<unidirectional association>)
	relation 538139 --->
	  a role_name "YEARS" init_value " new Field(\"YEARS\", 0)" class_relation const_relation public
	    comment "
<p>A constant that represents the years field.</p>

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 538139 // YEARS (<unidirectional association>)
	  b parent class_ref 301979 // Field
      end

      classrelation 538267 // MONTHS (<unidirectional association>)
	relation 538267 --->
	  a role_name "MONTHS" init_value " new Field(\"MONTHS\", 1)" class_relation const_relation public
	    comment "
<p>A constant that represents the months field.</p>

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 538267 // MONTHS (<unidirectional association>)
	  b parent class_ref 301979 // Field
      end

      classrelation 538395 // DAYS (<unidirectional association>)
	relation 538395 --->
	  a role_name "DAYS" init_value " new Field(\"DAYS\", 2)" class_relation const_relation public
	    comment "
<p>A constant that represents the days field.</p>

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 538395 // DAYS (<unidirectional association>)
	  b parent class_ref 301979 // Field
      end

      classrelation 538523 // HOURS (<unidirectional association>)
	relation 538523 --->
	  a role_name "HOURS" init_value " new Field(\"HOURS\", 3)" class_relation const_relation public
	    comment "
<p>A constant that represents the hours field.</p>

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 538523 // HOURS (<unidirectional association>)
	  b parent class_ref 301979 // Field
      end

      classrelation 538651 // MINUTES (<unidirectional association>)
	relation 538651 --->
	  a role_name "MINUTES" init_value " new Field(\"MINUTES\", 4)" class_relation const_relation public
	    comment "
<p>A constant that represents the minutes field.</p>

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 538651 // MINUTES (<unidirectional association>)
	  b parent class_ref 301979 // Field
      end

      classrelation 538779 // SECONDS (<unidirectional association>)
	relation 538779 --->
	  a role_name "SECONDS" init_value " new Field(\"SECONDS\", 5)" class_relation const_relation public
	    comment "
<p>A constant that represents the seconds field.</p>

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 538779 // SECONDS (<unidirectional association>)
	  b parent class_ref 301979 // Field
      end

      classrelation 539035 // DATETIME (<unidirectional association>)
	relation 539035 --->
	  a role_name "DATETIME" init_value " new QName(XMLConstants.W3C_XML_SCHEMA_NS_URI, \"dateTime\")" class_relation const_relation public
	    comment "
<p>Fully qualified name for W3C XML Schema 1.0 datatype <code>dateTime</code>.</p>

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 539035 // DATETIME (<unidirectional association>)
	  b parent class_ref 302107 // QName
      end

      classrelation 539163 // TIME (<unidirectional association>)
	relation 539163 --->
	  a role_name "TIME" init_value " new QName(XMLConstants.W3C_XML_SCHEMA_NS_URI, \"time\")" class_relation const_relation public
	    comment "
<p>Fully qualified name for W3C XML Schema 1.0 datatype <code>time</code>.</p>

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 539163 // TIME (<unidirectional association>)
	  b parent class_ref 302107 // QName
      end

      classrelation 539291 // DATE (<unidirectional association>)
	relation 539291 --->
	  a role_name "DATE" init_value " new QName(XMLConstants.W3C_XML_SCHEMA_NS_URI, \"date\")" class_relation const_relation public
	    comment "
<p>Fully qualified name for W3C XML Schema 1.0 datatype <code>date</code>.</p>

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 539291 // DATE (<unidirectional association>)
	  b parent class_ref 302107 // QName
      end

      classrelation 539419 // GYEARMONTH (<unidirectional association>)
	relation 539419 --->
	  a role_name "GYEARMONTH" init_value " new QName(XMLConstants.W3C_XML_SCHEMA_NS_URI, \"gYearMonth\")" class_relation const_relation public
	    comment "
<p>Fully qualified name for W3C XML Schema 1.0 datatype <code>gYearMonth</code>.</p>

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 539419 // GYEARMONTH (<unidirectional association>)
	  b parent class_ref 302107 // QName
      end

      classrelation 539547 // GMONTHDAY (<unidirectional association>)
	relation 539547 --->
	  a role_name "GMONTHDAY" init_value " new QName(XMLConstants.W3C_XML_SCHEMA_NS_URI, \"gMonthDay\")" class_relation const_relation public
	    comment "
<p>Fully qualified name for W3C XML Schema 1.0 datatype <code>gMonthDay</code>.</p>

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 539547 // GMONTHDAY (<unidirectional association>)
	  b parent class_ref 302107 // QName
      end

      classrelation 539675 // GYEAR (<unidirectional association>)
	relation 539675 --->
	  a role_name "GYEAR" init_value " new QName(XMLConstants.W3C_XML_SCHEMA_NS_URI, \"gYear\")" class_relation const_relation public
	    comment "
<p>Fully qualified name for W3C XML Schema 1.0 datatype <code>gYear</code>.</p>

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 539675 // GYEAR (<unidirectional association>)
	  b parent class_ref 302107 // QName
      end

      classrelation 539803 // GMONTH (<unidirectional association>)
	relation 539803 --->
	  a role_name "GMONTH" init_value " new QName(XMLConstants.W3C_XML_SCHEMA_NS_URI, \"gMonth\")" class_relation const_relation public
	    comment "
<p>Fully qualified name for W3C XML Schema 1.0 datatype <code>gMonth</code>.</p>

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 539803 // GMONTH (<unidirectional association>)
	  b parent class_ref 302107 // QName
      end

      classrelation 539931 // GDAY (<unidirectional association>)
	relation 539931 --->
	  a role_name "GDAY" init_value " new QName(XMLConstants.W3C_XML_SCHEMA_NS_URI, \"gDay\")" class_relation const_relation public
	    comment "
<p>Fully qualified name for W3C XML Schema 1.0 datatype <code>gDay</code>.</p>

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 539931 // GDAY (<unidirectional association>)
	  b parent class_ref 302107 // QName
      end

      classrelation 540059 // DURATION (<unidirectional association>)
	relation 540059 --->
	  a role_name "DURATION" init_value " new QName(XMLConstants.W3C_XML_SCHEMA_NS_URI, \"duration\")" class_relation const_relation public
	    comment "
<p>Fully qualified name for W3C XML Schema datatype <code>duration</code>.</p>

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 540059 // DURATION (<unidirectional association>)
	  b parent class_ref 302107 // QName
      end

      classrelation 540187 // DURATION_DAYTIME (<unidirectional association>)
	relation 540187 --->
	  a role_name "DURATION_DAYTIME" init_value " new QName(XMLConstants.W3C_XPATH_DATATYPE_NS_URI, \"dayTimeDuration\")" class_relation const_relation public
	    comment "
<p>Fully qualified name for XQuery 1.0 and XPath 2.0 datatype <code>dayTimeDuration</code>.</p>

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 540187 // DURATION_DAYTIME (<unidirectional association>)
	  b parent class_ref 302107 // QName
      end

      classrelation 540315 // DURATION_YEARMONTH (<unidirectional association>)
	relation 540315 --->
	  a role_name "DURATION_YEARMONTH" init_value " new QName(XMLConstants.W3C_XPATH_DATATYPE_NS_URI, \"yearMonthDuration\")" class_relation const_relation public
	    comment "
<p>Fully qualified name for XQuery 1.0 and XPath 2.0 datatype <code>yearMonthDuration</code>.</p>

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 540315 // DURATION_YEARMONTH (<unidirectional association>)
	  b parent class_ref 302107 // QName
      end

      attribute 452251 "MAX_TIMEZONE_OFFSET"
	class_attribute const_attribute public explicit_type "int"
	init_value " -14 * 60"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "W3C XML Schema max timezone offset is -14:00. Zone offset is in minutes.
"
      end

      attribute 452379 "MIN_TIMEZONE_OFFSET"
	class_attribute const_attribute public explicit_type "int"
	init_value " 14 * 60"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "W3C XML Schema min timezone offset is +14:00. Zone offset is in minutes.
"
      end
    end

    class 302235 "DatatypeFactory"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>Factory that creates new <code>javax.xml.datatype</code> <code>Object</code>s that map XML to/from Java <code>Object</code>s.</p>

<p id=\"DatatypeFactory.newInstance\">{@link #newInstance()} is used to create a new <code>DatatypeFactory</code>.
The following implementation resolution mechanisms are used in the following order:</p>
<ol>
   <li>
     If the system property specified by {@link #DATATYPEFACTORY_PROPERTY}, \"<code>javax.xml.datatype.DatatypeFactory</code>\",
     exists, a class with the name of the property's value is instantiated.
     Any Exception thrown during the instantiation process is wrapped as a {@link DatatypeConfigurationException}.
   </li>
   <li>
     If the file ${JAVA_HOME}/lib/jaxp.properties exists, it is loaded in a {@link java.util.Properties} <code>Object</code>.
     The <code>Properties</code> <code>Object </code> is then queried for the property as documented in the prior step
     and processed as documented in the prior step.
   </li>
   <li>
     The services resolution mechanism is used, e.g. <code>META-INF/services/java.xml.datatype.DatatypeFactory</code>.
     Any Exception thrown during the instantiation process is wrapped as a {@link DatatypeConfigurationException}.
   </li>
   <li>
     The final mechanism is to attempt to instantiate the <code>Class</code> specified by
     {@link #DATATYPEFACTORY_IMPLEMENTATION_CLASS}, \"<code>javax.xml.datatype.DatatypeFactoryImpl</code>\".
     Any Exception thrown during the instantiation process is wrapped as a {@link DatatypeConfigurationException}.
   </li>
</ol>

<p>Note that you must supply your own implementation (such as Xerces); Android does not ship with a default implementation.

@author <a href=\"mailto:Joseph.Fialli@Sun.COM\">Joseph Fialli</a>
@author <a href=\"mailto:Jeff.Suttor@Sun.com\">Jeff Suttor</a>
@version $Revision: 884950 $, $Date: 2009-11-27 10:46:18 -0800 (Fri, 27 Nov 2009) $
@since 1.5"
      classrelation 540443 // DATATYPEFACTORY_PROPERTY (<unidirectional association>)
	relation 540443 --->
	  a role_name "DATATYPEFACTORY_PROPERTY" init_value " \"javax.xml.datatype.DatatypeFactory\"" class_relation const_relation public
	    comment "
<p>Default property name as defined in JSR 206: Java(TM) API for XML Processing (JAXP) 1.3.</p>

<p>Default value is <code>javax.xml.datatype.DatatypeFactory</code>.</p>

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 540443 // DATATYPEFACTORY_PROPERTY (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 540571 // DATATYPEFACTORY_IMPLEMENTATION_CLASS (<unidirectional association>)
	relation 540571 --->
	  a role_name "DATATYPEFACTORY_IMPLEMENTATION_CLASS" init_value " new String(\"org.apache.xerces.jaxp.datatype.DatatypeFactoryImpl\")" class_relation const_relation public
	    comment "
<p>Default implementation class name as defined in JSR 206: Java(TM) API for XML Processing (JAXP) 1.3.</p>

<p>Default value is <code>org.apache.xerces.jaxp.datatype.DatatypeFactoryImpl</code>.</p>

 This uses \"new String\" to avoid being inlined as a constant.
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 540571 // DATATYPEFACTORY_IMPLEMENTATION_CLASS (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      operation 1891739 "DatatypeFactory"
	protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Protected constructor to prevent instantiation outside of package.</p>

<p>Use {@link #newInstance()} to create a <code>DatatypeFactory</code>.</p>"
      end

      operation 1891867 "newInstance"
	class_operation public return_type class_ref 302235 // DatatypeFactory
	nparams 0
	nexceptions 1
	  exception class_ref 301723 // DatatypeConfigurationException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Obtain a new instance of a <code>DatatypeFactory</code>.</p>

<p>The implementation resolution mechanisms are <a href=\"#DatatypeFactory.newInstance\">defined</a> in this
<code>Class</code>'s documentation.</p>
<p>Note that you must supply your own implementation (such as Xerces); Android does not ship with a default implementation.

@return New instance of a <code>DocumentBuilderFactory</code>

@throws DatatypeConfigurationException If the implementation is not
  available or cannot be instantiated."
      end

      operation 1891995 "newInstance"
	class_operation public return_type class_ref 302235 // DatatypeFactory
	nparams 2
	  param inout name "factoryClassName" type class_ref 3399692 // String
	  param inout name "classLoader" type class_ref 138523 // ClassLoader
	nexceptions 1
	  exception class_ref 301723 // DatatypeConfigurationException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an instance of the named implementation of {@code DatatypeFactory}.

@throws DatatypeConfigurationException if {@code factoryClassName} is not available or cannot
    be instantiated.
@since 1.6"
      end

      operation 1892123 "newDuration"
	abstract public return_type class_ref 302363 // Duration
	nparams 1
	  param in name "lexicalRepresentation" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Obtain a new instance of a <code>Duration</code>
specifying the <code>Duration</code> as its string representation, \"PnYnMnDTnHnMnS\",
as defined in XML Schema 1.0 section 3.2.6.1.</p>

<p>XML Schema Part 2: Datatypes, 3.2.6 duration, defines <code>duration</code> as:</p>
<blockquote>
duration represents a duration of time.
The value space of duration is a six-dimensional space where the coordinates designate the
Gregorian year, month, day, hour, minute, and second components defined in Section 5.5.3.2 of [ISO 8601], respectively.
These components are ordered in their significance by their order of appearance i.e. as
year, month, day, hour, minute, and second.
</blockquote>
<p>All six values are set and available from the created {@link Duration}</p>

<p>The XML Schema specification states that values can be of an arbitrary size.
Implementations may chose not to or be incapable of supporting arbitrarily large and/or small values.
An {@link UnsupportedOperationException} will be thrown with a message indicating implementation limits
if implementation capacities are exceeded.</p>

@param lexicalRepresentation <code>String</code> representation of a <code>Duration</code>.

@return New <code>Duration</code> created from parsing the <code>lexicalRepresentation</code>.

@throws IllegalArgumentException If <code>lexicalRepresentation</code> is not a valid representation of a <code>Duration</code>.
@throws UnsupportedOperationException If implementation cannot support requested values.
@throws NullPointerException if <code>lexicalRepresentation</code> is <code>null</code>."
      end

      operation 1892251 "newDuration"
	abstract public return_type class_ref 302363 // Duration
	nparams 1
	  param in name "durationInMilliSeconds" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Obtain a new instance of a <code>Duration</code>
specifying the <code>Duration</code> as milliseconds.</p>

<p>XML Schema Part 2: Datatypes, 3.2.6 duration, defines <code>duration</code> as:</p>
<blockquote>
duration represents a duration of time.
The value space of duration is a six-dimensional space where the coordinates designate the
Gregorian year, month, day, hour, minute, and second components defined in Section 5.5.3.2 of [ISO 8601], respectively.
These components are ordered in their significance by their order of appearance i.e. as
year, month, day, hour, minute, and second.
</blockquote>
<p>All six values are set by computing their values from the specified milliseconds
and are available using the <code>get</code> methods of  the created {@link Duration}.
The values conform to and are defined by:</p>
<ul>
  <li>ISO 8601:2000(E) Section 5.5.3.2 Alternative format</li>
  <li><a href=\"http://www.w3.org/TR/xmlschema-2/#isoformats\">
    W3C XML Schema 1.0 Part 2, Appendix D, ISO 8601 Date and Time Formats</a>
  </li>
  <li>{@link XMLGregorianCalendar}  Date/Time Datatype Field Mapping Between XML Schema 1.0 and Java Representation</li>
</ul>

<p>The default start instance is defined by {@link GregorianCalendar}'s use of the start of the epoch: i.e.,
{@link java.util.Calendar#YEAR} = 1970,
{@link java.util.Calendar#MONTH} = {@link java.util.Calendar#JANUARY},
{@link java.util.Calendar#DATE} = 1, etc.
This is important as there are variations in the Gregorian Calendar,
e.g. leap years have different days in the month = {@link java.util.Calendar#FEBRUARY}
so the result of {@link Duration#getMonths()} and {@link Duration#getDays()} can be influenced.</p>

@param durationInMilliSeconds Duration in milliseconds to create.

@return New <code>Duration</code> representing <code>durationInMilliSeconds</code>."
      end

      operation 1892379 "newDuration"
	abstract public return_type class_ref 302363 // Duration
	nparams 7
	  param in name "isPositive" explicit_type "boolean"
	  param in name "years" type class_ref 166299 // BigInteger
	  param in name "months" type class_ref 166299 // BigInteger
	  param in name "days" type class_ref 166299 // BigInteger
	  param in name "hours" type class_ref 166299 // BigInteger
	  param in name "minutes" type class_ref 166299 // BigInteger
	  param in name "seconds" type class_ref 166171 // BigDecimal
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}, final ${t2} ${p2}, final ${t3} ${p3}, final ${t4} ${p4}, final ${t5} ${p5}, final ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Obtain a new instance of a <code>Duration</code>
specifying the <code>Duration</code> as isPositive, years, months, days, hours, minutes, seconds.</p>

<p>The XML Schema specification states that values can be of an arbitrary size.
Implementations may chose not to or be incapable of supporting arbitrarily large and/or small values.
An {@link UnsupportedOperationException} will be thrown with a message indicating implementation limits
if implementation capacities are exceeded.</p>

<p>A <code>null</code> value indicates that field is not set.</p>

@param isPositive Set to <code>false</code> to create a negative duration. When the length
  of the duration is zero, this parameter will be ignored.
@param years of this <code>Duration</code>
@param months of this <code>Duration</code>
@param days of this <code>Duration</code>
@param hours of this <code>Duration</code>
@param minutes of this <code>Duration</code>
@param seconds of this <code>Duration</code>

@return New <code>Duration</code> created from the specified values.

@throws IllegalArgumentException If values are not a valid representation of a <code>Duration</code>.
@throws UnsupportedOperationException If implementation cannot support requested values."
      end

      operation 1892507 "newDuration"
	public return_type class_ref 302363 // Duration
	nparams 7
	  param in name "isPositive" explicit_type "boolean"
	  param in name "years" explicit_type "int"
	  param in name "months" explicit_type "int"
	  param in name "days" explicit_type "int"
	  param in name "hours" explicit_type "int"
	  param in name "minutes" explicit_type "int"
	  param in name "seconds" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}, final ${t2} ${p2}, final ${t3} ${p3}, final ${t4} ${p4}, final ${t5} ${p5}, final ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Obtain a new instance of a <code>Duration</code>
specifying the <code>Duration</code> as isPositive, years, months, days, hours, minutes, seconds.</p>

<p>A {@link DatatypeConstants#FIELD_UNDEFINED} value indicates that field is not set.</p>

@param isPositive Set to <code>false</code> to create a negative duration. When the length
  of the duration is zero, this parameter will be ignored.
@param years of this <code>Duration</code>
@param months of this <code>Duration</code>
@param days of this <code>Duration</code>
@param hours of this <code>Duration</code>
@param minutes of this <code>Duration</code>
@param seconds of this <code>Duration</code>

@return New <code>Duration</code> created from the specified values.

@throws IllegalArgumentException If values are not a valid representation of a <code>Duration</code>.

@see #newDuration(
  boolean isPositive,
  BigInteger years,
  BigInteger months,
  BigInteger days,
  BigInteger hours,
  BigInteger minutes,
  BigDecimal seconds)"
      end

      operation 1892635 "newDurationDayTime"
	public return_type class_ref 302363 // Duration
	nparams 1
	  param in name "lexicalRepresentation" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Create a <code>Duration</code> of type <code>xdt:dayTimeDuration</code> by parsing its <code>String</code> representation,
\"<em>PnDTnHnMnS</em>\", <a href=\"http://www.w3.org/TR/xpath-datamodel#dt-dayTimeDuration\">
  XQuery 1.0 and XPath 2.0 Data Model, xdt:dayTimeDuration</a>.</p>

<p>The datatype <code>xdt:dayTimeDuration</code> is a subtype of <code>xs:duration</code>
whose lexical representation contains only day, hour, minute, and second components.
This datatype resides in the namespace <code>http://www.w3.org/2003/11/xpath-datatypes</code>.</p>

<p>All four values are set and available from the created {@link Duration}</p>

<p>The XML Schema specification states that values can be of an arbitrary size.
Implementations may chose not to or be incapable of supporting arbitrarily large and/or small values.
An {@link UnsupportedOperationException} will be thrown with a message indicating implementation limits
if implementation capacities are exceeded.</p>

@param lexicalRepresentation Lexical representation of a duration.

@return New <code>Duration</code> created using the specified <code>lexicalRepresentation</code>.

@throws IllegalArgumentException If the given string does not conform to the aforementioned specification.
@throws UnsupportedOperationException If implementation cannot support requested values.
@throws NullPointerException If <code>lexicalRepresentation</code> is <code>null</code>."
      end

      operation 1892763 "newDurationDayTime"
	public return_type class_ref 302363 // Duration
	nparams 1
	  param in name "durationInMilliseconds" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Create a <code>Duration</code> of type <code>xdt:dayTimeDuration</code> using the specified milliseconds as defined in
<a href=\"http://www.w3.org/TR/xpath-datamodel#dt-dayTimeDuration\">
  XQuery 1.0 and XPath 2.0 Data Model, xdt:dayTimeDuration</a>.</p>

<p>The datatype <code>xdt:dayTimeDuration</code> is a subtype of <code>xs:duration</code>
whose lexical representation contains only day, hour, minute, and second components.
This datatype resides in the namespace <code>http://www.w3.org/2003/11/xpath-datatypes</code>.</p>

<p>All four values are set by computing their values from the specified milliseconds
and are available using the <code>get</code> methods of  the created {@link Duration}.
The values conform to and are defined by:</p>
<ul>
  <li>ISO 8601:2000(E) Section 5.5.3.2 Alternative format</li>
  <li><a href=\"http://www.w3.org/TR/xmlschema-2/#isoformats\">
    W3C XML Schema 1.0 Part 2, Appendix D, ISO 8601 Date and Time Formats</a>
  </li>
  <li>{@link XMLGregorianCalendar}  Date/Time Datatype Field Mapping Between XML Schema 1.0 and Java Representation</li>
</ul>

<p>The default start instance is defined by {@link GregorianCalendar}'s use of the start of the epoch: i.e.,
{@link java.util.Calendar#YEAR} = 1970,
{@link java.util.Calendar#MONTH} = {@link java.util.Calendar#JANUARY},
{@link java.util.Calendar#DATE} = 1, etc.
This is important as there are variations in the Gregorian Calendar,
e.g. leap years have different days in the month = {@link java.util.Calendar#FEBRUARY}
so the result of {@link Duration#getDays()} can be influenced.</p>

<p>Any remaining milliseconds after determining the day, hour, minute and second are discarded.</p>

@param durationInMilliseconds Milliseconds of <code>Duration</code> to create.

@return New <code>Duration</code> created with the specified <code>durationInMilliseconds</code>.

@see <a href=\"http://www.w3.org/TR/xpath-datamodel#dt-dayTimeDuration\">
  XQuery 1.0 and XPath 2.0 Data Model, xdt:dayTimeDuration</a>"
      end

      operation 1892891 "newDurationDayTime"
	public return_type class_ref 302363 // Duration
	nparams 5
	  param in name "isPositive" explicit_type "boolean"
	  param in name "day" type class_ref 166299 // BigInteger
	  param in name "hour" type class_ref 166299 // BigInteger
	  param in name "minute" type class_ref 166299 // BigInteger
	  param in name "second" type class_ref 166299 // BigInteger
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}, final ${t2} ${p2}, final ${t3} ${p3}, final ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Create a <code>Duration</code> of type <code>xdt:dayTimeDuration</code> using the specified
<code>day</code>, <code>hour</code>, <code>minute</code> and <code>second</code> as defined in
<a href=\"http://www.w3.org/TR/xpath-datamodel#dt-dayTimeDuration\">
  XQuery 1.0 and XPath 2.0 Data Model, xdt:dayTimeDuration</a>.</p>

<p>The datatype <code>xdt:dayTimeDuration</code> is a subtype of <code>xs:duration</code>
whose lexical representation contains only day, hour, minute, and second components.
This datatype resides in the namespace <code>http://www.w3.org/2003/11/xpath-datatypes</code>.</p>

<p>The XML Schema specification states that values can be of an arbitrary size.
Implementations may chose not to or be incapable of supporting arbitrarily large and/or small values.
An {@link UnsupportedOperationException} will be thrown with a message indicating implementation limits
if implementation capacities are exceeded.</p>

<p>A <code>null</code> value indicates that field is not set.</p>

@param isPositive Set to <code>false</code> to create a negative duration. When the length
  of the duration is zero, this parameter will be ignored.
@param day Day of <code>Duration</code>.
@param hour Hour of <code>Duration</code>.
@param minute Minute of <code>Duration</code>.
@param second Second of <code>Duration</code>.

@return New <code>Duration</code> created with the specified <code>day</code>, <code>hour</code>, <code>minute</code>
and <code>second</code>.

@throws IllegalArgumentException If any values would create an invalid <code>Duration</code>.
@throws UnsupportedOperationException If implementation cannot support requested values."
      end

      operation 1893019 "newDurationDayTime"
	public return_type class_ref 302363 // Duration
	nparams 5
	  param in name "isPositive" explicit_type "boolean"
	  param in name "day" explicit_type "int"
	  param in name "hour" explicit_type "int"
	  param in name "minute" explicit_type "int"
	  param in name "second" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}, final ${t2} ${p2}, final ${t3} ${p3}, final ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Create a <code>Duration</code> of type <code>xdt:dayTimeDuration</code> using the specified
<code>day</code>, <code>hour</code>, <code>minute</code> and <code>second</code> as defined in
<a href=\"http://www.w3.org/TR/xpath-datamodel#dt-dayTimeDuration\">
  XQuery 1.0 and XPath 2.0 Data Model, xdt:dayTimeDuration</a>.</p>

<p>The datatype <code>xdt:dayTimeDuration</code> is a subtype of <code>xs:duration</code>
whose lexical representation contains only day, hour, minute, and second components.
This datatype resides in the namespace <code>http://www.w3.org/2003/11/xpath-datatypes</code>.</p>

<p>A {@link DatatypeConstants#FIELD_UNDEFINED} value indicates that field is not set.</p>

@param isPositive Set to <code>false</code> to create a negative duration. When the length
  of the duration is zero, this parameter will be ignored.
@param day Day of <code>Duration</code>.
@param hour Hour of <code>Duration</code>.
@param minute Minute of <code>Duration</code>.
@param second Second of <code>Duration</code>.

@return New <code>Duration</code> created with the specified <code>day</code>, <code>hour</code>, <code>minute</code>
and <code>second</code>.

@throws IllegalArgumentException If any values would create an invalid <code>Duration</code>."
      end

      operation 1893147 "newDurationYearMonth"
	public return_type class_ref 302363 // Duration
	nparams 1
	  param in name "lexicalRepresentation" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Create a <code>Duration</code> of type <code>xdt:yearMonthDuration</code> by parsing its <code>String</code> representation,
\"<em>PnYnM</em>\", <a href=\"http://www.w3.org/TR/xpath-datamodel#dt-yearMonthDuration\">
  XQuery 1.0 and XPath 2.0 Data Model, xdt:yearMonthDuration</a>.</p>

<p>The datatype <code>xdt:yearMonthDuration</code> is a subtype of <code>xs:duration</code>
whose lexical representation contains only year and month components.
This datatype resides in the namespace {@link javax.xml.XMLConstants#W3C_XPATH_DATATYPE_NS_URI}.</p>

<p>Both values are set and available from the created {@link Duration}</p>

<p>The XML Schema specification states that values can be of an arbitrary size.
Implementations may chose not to or be incapable of supporting arbitrarily large and/or small values.
An {@link UnsupportedOperationException} will be thrown with a message indicating implementation limits
if implementation capacities are exceeded.</p>

@param lexicalRepresentation Lexical representation of a duration.

@return New <code>Duration</code> created using the specified <code>lexicalRepresentation</code>.

@throws IllegalArgumentException If the <code>lexicalRepresentation</code> does not conform to the specification.
@throws UnsupportedOperationException If implementation cannot support requested values.
@throws NullPointerException If <code>lexicalRepresentation</code> is <code>null</code>."
      end

      operation 1893275 "newDurationYearMonth"
	public return_type class_ref 302363 // Duration
	nparams 1
	  param in name "durationInMilliseconds" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Create a <code>Duration</code> of type <code>xdt:yearMonthDuration</code> using the specified milliseconds as defined in
<a href=\"http://www.w3.org/TR/xpath-datamodel#dt-yearMonthDuration\">
  XQuery 1.0 and XPath 2.0 Data Model, xdt:yearMonthDuration</a>.</p>

<p>The datatype <code>xdt:yearMonthDuration</code> is a subtype of <code>xs:duration</code>
whose lexical representation contains only year and month components.
This datatype resides in the namespace {@link javax.xml.XMLConstants#W3C_XPATH_DATATYPE_NS_URI}.</p>

<p>Both values are set by computing their values from the specified milliseconds
and are available using the <code>get</code> methods of  the created {@link Duration}.
The values conform to and are defined by:</p>
<ul>
  <li>ISO 8601:2000(E) Section 5.5.3.2 Alternative format</li>
  <li><a href=\"http://www.w3.org/TR/xmlschema-2/#isoformats\">
    W3C XML Schema 1.0 Part 2, Appendix D, ISO 8601 Date and Time Formats</a>
  </li>
  <li>{@link XMLGregorianCalendar}  Date/Time Datatype Field Mapping Between XML Schema 1.0 and Java Representation</li>
</ul>

<p>The default start instance is defined by {@link GregorianCalendar}'s use of the start of the epoch: i.e.,
{@link java.util.Calendar#YEAR} = 1970,
{@link java.util.Calendar#MONTH} = {@link java.util.Calendar#JANUARY},
{@link java.util.Calendar#DATE} = 1, etc.
This is important as there are variations in the Gregorian Calendar,
e.g. leap years have different days in the month = {@link java.util.Calendar#FEBRUARY}
so the result of {@link Duration#getMonths()} can be influenced.</p>

<p>Any remaining milliseconds after determining the year and month are discarded.</p>

@param durationInMilliseconds Milliseconds of <code>Duration</code> to create.

@return New <code>Duration</code> created using the specified <code>durationInMilliseconds</code>."
      end

      operation 1893403 "newDurationYearMonth"
	public return_type class_ref 302363 // Duration
	nparams 3
	  param in name "isPositive" explicit_type "boolean"
	  param in name "year" type class_ref 166299 // BigInteger
	  param in name "month" type class_ref 166299 // BigInteger
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}, final ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Create a <code>Duration</code> of type <code>xdt:yearMonthDuration</code> using the specified
<code>year</code> and <code>month</code> as defined in
<a href=\"http://www.w3.org/TR/xpath-datamodel#dt-yearMonthyDuration\">
  XQuery 1.0 and XPath 2.0 Data Model, xdt:yearMonthDuration</a>.</p>

<p>The XML Schema specification states that values can be of an arbitrary size.
Implementations may chose not to or be incapable of supporting arbitrarily large and/or small values.
An {@link UnsupportedOperationException} will be thrown with a message indicating implementation limits
if implementation capacities are exceeded.</p>

<p>A <code>null</code> value indicates that field is not set.</p>

@param isPositive Set to <code>false</code> to create a negative duration. When the length
  of the duration is zero, this parameter will be ignored.
@param year Year of <code>Duration</code>.
@param month Month of <code>Duration</code>.

@return New <code>Duration</code> created using the specified <code>year</code> and <code>month</code>.

@throws IllegalArgumentException If any values would create an invalid <code>Duration</code>.
@throws UnsupportedOperationException If implementation cannot support requested values."
      end

      operation 1893531 "newDurationYearMonth"
	public return_type class_ref 302363 // Duration
	nparams 3
	  param in name "isPositive" explicit_type "boolean"
	  param in name "year" explicit_type "int"
	  param in name "month" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}, final ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Create a <code>Duration</code> of type <code>xdt:yearMonthDuration</code> using the specified
<code>year</code> and <code>month</code> as defined in
<a href=\"http://www.w3.org/TR/xpath-datamodel#dt-yearMonthyDuration\">
  XQuery 1.0 and XPath 2.0 Data Model, xdt:yearMonthDuration</a>.</p>

<p>A {@link DatatypeConstants#FIELD_UNDEFINED} value indicates that field is not set.</p>

@param isPositive Set to <code>false</code> to create a negative duration. When the length
  of the duration is zero, this parameter will be ignored.
@param year Year of <code>Duration</code>.
@param month Month of <code>Duration</code>.

@return New <code>Duration</code> created using the specified <code>year</code> and <code>month</code>.

@throws IllegalArgumentException If any values would create an invalid <code>Duration</code>."
      end

      operation 1893659 "newXMLGregorianCalendar"
	abstract public return_type class_ref 302491 // XMLGregorianCalendar
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Create a new instance of an <code>XMLGregorianCalendar</code>.</p>

<p>All date/time datatype fields set to {@link DatatypeConstants#FIELD_UNDEFINED} or null.</p>

@return New <code>XMLGregorianCalendar</code> with all date/time datatype fields set to
  {@link DatatypeConstants#FIELD_UNDEFINED} or null."
      end

      operation 1893787 "newXMLGregorianCalendar"
	abstract public return_type class_ref 302491 // XMLGregorianCalendar
	nparams 1
	  param in name "lexicalRepresentation" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Create a new XMLGregorianCalendar by parsing the String as a lexical representation.</p>

<p>Parsing the lexical string representation is defined in
<a href=\"http://www.w3.org/TR/xmlschema-2/#dateTime-order\">XML Schema 1.0 Part 2, Section 3.2.[7-14].1,
<em>Lexical Representation</em>.</a></p>

<p>The string representation may not have any leading and trailing whitespaces.</p>

<p>The parsing is done field by field so that
the following holds for any lexically correct String x:</p>
<pre>
newXMLGregorianCalendar(x).toXMLFormat().equals(x)
</pre>
<p>Except for the noted lexical/canonical representation mismatches
listed in <a href=\"http://www.w3.org/2001/05/xmlschema-errata#e2-45\">
XML Schema 1.0 errata, Section 3.2.7.2</a>.</p>

@param lexicalRepresentation Lexical representation of one the eight XML Schema date/time datatypes.

@return <code>XMLGregorianCalendar</code> created from the <code>lexicalRepresentation</code>.

@throws IllegalArgumentException If the <code>lexicalRepresentation</code> is not a valid <code>XMLGregorianCalendar</code>.
@throws NullPointerException If <code>lexicalRepresentation</code> is <code>null</code>."
      end

      operation 1893915 "newXMLGregorianCalendar"
	abstract public return_type class_ref 302491 // XMLGregorianCalendar
	nparams 1
	  param in name "cal" type class_ref 242075 // GregorianCalendar
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Create an <code>XMLGregorianCalendar</code> from a {@link GregorianCalendar}.</p>

<table border=\"2\" rules=\"all\" cellpadding=\"2\">
  <thead>
    <tr>
      <th align=\"center\" colspan=\"2\">
         Field by Field Conversion from
         {@link GregorianCalendar} to an {@link XMLGregorianCalendar}
      </th>
    </tr>
    <tr>
       <th><code>java.util.GregorianCalendar</code> field</th>
       <th><code>javax.xml.datatype.XMLGregorianCalendar</code> field</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code>ERA == GregorianCalendar.BC ? -YEAR : YEAR</code></td>
      <td>{@link XMLGregorianCalendar#setYear(int year)}</td>
    </tr>
    <tr>
      <td><code>MONTH + 1</code></td>
      <td>{@link XMLGregorianCalendar#setMonth(int month)}</td>
    </tr>
    <tr>
      <td><code>DAY_OF_MONTH</code></td>
      <td>{@link XMLGregorianCalendar#setDay(int day)}</td>
    </tr>
    <tr>
      <td><code>HOUR_OF_DAY, MINUTE, SECOND, MILLISECOND</code></td>
      <td>{@link XMLGregorianCalendar#setTime(int hour, int minute, int second, BigDecimal fractional)}</td>
    </tr>
    <tr>
      <td>
        <code>(ZONE_OFFSET + DST_OFFSET) / (60*1000)</code><br/>
        <em>(in minutes)</em>
      </td>
      <td>{@link XMLGregorianCalendar#setTimezone(int offset)}<sup><em>*</em></sup>
      </td>
    </tr>
  </tbody>
</table>
<p><em>*</em>conversion loss of information. It is not possible to represent
a <code>java.util.GregorianCalendar</code> daylight savings timezone id in the
XML Schema 1.0 date/time datatype representation.</p>

<p>To compute the return value's <code>TimeZone</code> field,
<ul>
<li>when <code>this.getTimezone() != FIELD_UNDEFINED</code>,
create a <code>java.util.TimeZone</code> with a custom timezone id
using the <code>this.getTimezone()</code>.</li>
<li>else use the <code>GregorianCalendar</code> default timezone value
for the host is defined as specified by
<code>java.util.TimeZone.getDefault()</code>.</li></p>

@param cal <code>java.util.GregorianCalendar</code> used to create <code>XMLGregorianCalendar</code>

@return <code>XMLGregorianCalendar</code> created from <code>java.util.GregorianCalendar</code>

@throws NullPointerException If <code>cal</code> is <code>null</code>."
      end

      operation 1894043 "newXMLGregorianCalendar"
	abstract public return_type class_ref 302491 // XMLGregorianCalendar
	nparams 8
	  param in name "year" type class_ref 166299 // BigInteger
	  param in name "month" explicit_type "int"
	  param in name "day" explicit_type "int"
	  param in name "hour" explicit_type "int"
	  param in name "minute" explicit_type "int"
	  param in name "second" explicit_type "int"
	  param in name "fractionalSecond" type class_ref 166171 // BigDecimal
	  param in name "timezone" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}, final ${t2} ${p2}, final ${t3} ${p3}, final ${t4} ${p4}, final ${t5} ${p5}, final ${t6} ${p6}, final ${t7} ${p7}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Constructor allowing for complete value spaces allowed by
W3C XML Schema 1.0 recommendation for xsd:dateTime and related
builtin datatypes. Note that <code>year</code> parameter supports
arbitrarily large numbers and fractionalSecond has infinite
precision.</p>

<p>A <code>null</code> value indicates that field is not set.</p>

@param year of <code>XMLGregorianCalendar</code> to be created.
@param month of <code>XMLGregorianCalendar</code> to be created.
@param day of <code>XMLGregorianCalendar</code> to be created.
@param hour of <code>XMLGregorianCalendar</code> to be created.
@param minute of <code>XMLGregorianCalendar</code> to be created.
@param second of <code>XMLGregorianCalendar</code> to be created.
@param fractionalSecond of <code>XMLGregorianCalendar</code> to be created.
@param timezone of <code>XMLGregorianCalendar</code> to be created.

@return <code>XMLGregorianCalendar</code> created from specified values.

@throws IllegalArgumentException If any individual parameter's value is outside the maximum value constraint for the field
  as determined by the Date/Time Data Mapping table in {@link XMLGregorianCalendar}
  or if the composite values constitute an invalid <code>XMLGregorianCalendar</code> instance
  as determined by {@link XMLGregorianCalendar#isValid()}."
      end

      operation 1894171 "newXMLGregorianCalendar"
	public return_type class_ref 302491 // XMLGregorianCalendar
	nparams 8
	  param in name "year" explicit_type "int"
	  param in name "month" explicit_type "int"
	  param in name "day" explicit_type "int"
	  param in name "hour" explicit_type "int"
	  param in name "minute" explicit_type "int"
	  param in name "second" explicit_type "int"
	  param in name "millisecond" explicit_type "int"
	  param in name "timezone" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}, final ${t2} ${p2}, final ${t3} ${p3}, final ${t4} ${p4}, final ${t5} ${p5}, final ${t6} ${p6}, final ${t7} ${p7}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Constructor of value spaces that a
<code>java.util.GregorianCalendar</code> instance would need to convert to an
<code>XMLGregorianCalendar</code> instance.</p>

<p><code>XMLGregorianCalendar eon</code> and
<code>fractionalSecond</code> are set to <code>null</code></p>

<p>A {@link DatatypeConstants#FIELD_UNDEFINED} value indicates that field is not set.</p>

@param year of <code>XMLGregorianCalendar</code> to be created.
@param month of <code>XMLGregorianCalendar</code> to be created.
@param day of <code>XMLGregorianCalendar</code> to be created.
@param hour of <code>XMLGregorianCalendar</code> to be created.
@param minute of <code>XMLGregorianCalendar</code> to be created.
@param second of <code>XMLGregorianCalendar</code> to be created.
@param millisecond of <code>XMLGregorianCalendar</code> to be created.
@param timezone of <code>XMLGregorianCalendar</code> to be created.

@return <code>XMLGregorianCalendar</code> created from specified values.

@throws IllegalArgumentException If any individual parameter's value is outside the maximum value constraint for the field
  as determined by the Date/Time Data Mapping table in {@link XMLGregorianCalendar}
  or if the composite values constitute an invalid <code>XMLGregorianCalendar</code> instance
  as determined by {@link XMLGregorianCalendar#isValid()}."
      end

      operation 1894299 "newXMLGregorianCalendarDate"
	public return_type class_ref 302491 // XMLGregorianCalendar
	nparams 4
	  param in name "year" explicit_type "int"
	  param in name "month" explicit_type "int"
	  param in name "day" explicit_type "int"
	  param in name "timezone" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}, final ${t2} ${p2}, final ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Create a Java representation of XML Schema builtin datatype <code>date</code> or <code>g*</code>.</p>

<p>For example, an instance of <code>gYear</code> can be created invoking this factory
with <code>month</code> and <code>day</code> parameters set to
{@link DatatypeConstants#FIELD_UNDEFINED}.</p>

<p>A {@link DatatypeConstants#FIELD_UNDEFINED} value indicates that field is not set.</p>

@param year of <code>XMLGregorianCalendar</code> to be created.
@param month of <code>XMLGregorianCalendar</code> to be created.
@param day of <code>XMLGregorianCalendar</code> to be created.
@param timezone offset in minutes. {@link DatatypeConstants#FIELD_UNDEFINED} indicates optional field is not set.

@return <code>XMLGregorianCalendar</code> created from parameter values.

@see DatatypeConstants#FIELD_UNDEFINED

@throws IllegalArgumentException If any individual parameter's value is outside the maximum value constraint for the field
  as determined by the Date/Time Data Mapping table in {@link XMLGregorianCalendar}
  or if the composite values constitute an invalid <code>XMLGregorianCalendar</code> instance
  as determined by {@link XMLGregorianCalendar#isValid()}."
      end

      operation 1894427 "newXMLGregorianCalendarTime"
	public return_type class_ref 302491 // XMLGregorianCalendar
	nparams 4
	  param in name "hours" explicit_type "int"
	  param in name "minutes" explicit_type "int"
	  param in name "seconds" explicit_type "int"
	  param in name "timezone" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}, final ${t2} ${p2}, final ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Create a Java instance of XML Schema builtin datatype <code>time</code>.</p>

<p>A {@link DatatypeConstants#FIELD_UNDEFINED} value indicates that field is not set.</p>

@param hours number of hours
@param minutes number of minutes
@param seconds number of seconds
@param timezone offset in minutes. {@link DatatypeConstants#FIELD_UNDEFINED} indicates optional field is not set.

@return <code>XMLGregorianCalendar</code> created from parameter values.

@throws IllegalArgumentException If any individual parameter's value is outside the maximum value constraint for the field
  as determined by the Date/Time Data Mapping table in {@link XMLGregorianCalendar}
  or if the composite values constitute an invalid <code>XMLGregorianCalendar</code> instance
  as determined by {@link XMLGregorianCalendar#isValid()}.

@see DatatypeConstants#FIELD_UNDEFINED"
      end

      operation 1894555 "newXMLGregorianCalendarTime"
	public return_type class_ref 302491 // XMLGregorianCalendar
	nparams 5
	  param in name "hours" explicit_type "int"
	  param in name "minutes" explicit_type "int"
	  param in name "seconds" explicit_type "int"
	  param in name "fractionalSecond" type class_ref 166171 // BigDecimal
	  param in name "timezone" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}, final ${t2} ${p2}, final ${t3} ${p3}, final ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Create a Java instance of XML Schema builtin datatype time.</p>

<p>A <code>null</code> value indicates that field is not set.</p>
<p>A {@link DatatypeConstants#FIELD_UNDEFINED} value indicates that field is not set.</p>

@param hours number of hours
@param minutes number of minutes
@param seconds number of seconds
@param fractionalSecond value of <code>null</code> indicates that this optional field is not set.
@param timezone offset in minutes. {@link DatatypeConstants#FIELD_UNDEFINED} indicates optional field is not set.

@return <code>XMLGregorianCalendar</code> created from parameter values.

@see DatatypeConstants#FIELD_UNDEFINED

@throws IllegalArgumentException If any individual parameter's value is outside the maximum value constraint for the field
  as determined by the Date/Time Data Mapping table in {@link XMLGregorianCalendar}
  or if the composite values constitute an invalid <code>XMLGregorianCalendar</code> instance
  as determined by {@link XMLGregorianCalendar#isValid()}."
      end

      operation 1894683 "newXMLGregorianCalendarTime"
	public return_type class_ref 302491 // XMLGregorianCalendar
	nparams 5
	  param in name "hours" explicit_type "int"
	  param in name "minutes" explicit_type "int"
	  param in name "seconds" explicit_type "int"
	  param in name "milliseconds" explicit_type "int"
	  param in name "timezone" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}, final ${t2} ${p2}, final ${t3} ${p3}, final ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Create a Java instance of XML Schema builtin datatype time.</p>

<p>A {@link DatatypeConstants#FIELD_UNDEFINED} value indicates that field is not set.</p>

@param hours number of hours
@param minutes number of minutes
@param seconds number of seconds
@param milliseconds number of milliseconds
@param timezone offset in minutes. {@link DatatypeConstants#FIELD_UNDEFINED} indicates optional field is not set.

@return <code>XMLGregorianCalendar</code> created from parameter values.

@see DatatypeConstants#FIELD_UNDEFINED

@throws IllegalArgumentException If any individual parameter's value is outside the maximum value constraint for the field
  as determined by the Date/Time Data Mapping table in {@link XMLGregorianCalendar}
  or if the composite values constitute an invalid <code>XMLGregorianCalendar</code> instance
  as determined by {@link XMLGregorianCalendar#isValid()}."
      end
    end

    class 302363 "Duration"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>Immutable representation of a time span as defined in
the W3C XML Schema 1.0 specification.</p>

<p>A Duration object represents a period of Gregorian time,
which consists of six fields (years, months, days, hours,
minutes, and seconds) plus a sign (+/-) field.</p>

<p>The first five fields have non-negative (>=0) integers or null
(which represents that the field is not set),
and the seconds field has a non-negative decimal or null.
A negative sign indicates a negative duration.</p>

<p>This class provides a number of methods that make it easy
to use for the duration datatype of XML Schema 1.0 with
the errata.</p>

<h2>Order relationship</h2>
<p>Duration objects only have partial order, where two values A and B
maybe either:</p>
<ol>
 <li>A&lt;B (A is shorter than B)
 <li>A&gt;B (A is longer than B)
 <li>A==B   (A and B are of the same duration)
 <li>A&lt;>B (Comparison between A and B is indeterminate)
</ol>

<p>For example, 30 days cannot be meaningfully compared to one month.
The {@link #compare(Duration duration)} method implements this
relationship.</p>

<p>See the {@link #isLongerThan(Duration)} method for details about
the order relationship among <code>Duration</code> objects.</p>

<h2>Operations over Duration</h2>
<p>This class provides a set of basic arithmetic operations, such
as addition, subtraction and multiplication.
Because durations don't have total order, an operation could
fail for some combinations of operations. For example, you cannot
subtract 15 days from 1 month. See the javadoc of those methods
for detailed conditions where this could happen.</p>

<p>Also, division of a duration by a number is not provided because
the <code>Duration</code> class can only deal with finite precision
decimal numbers. For example, one cannot represent 1 sec divided by 3.</p>

<p>However, you could substitute a division by 3 with multiplying
by numbers such as 0.3 or 0.333.</p>

<h2>Range of allowed values</h2>
<p>
Because some operations of <code>Duration</code> rely on {@link Calendar}
even though {@link Duration} can hold very large or very small values,
some of the methods may not work correctly on such <code>Duration</code>s.
The impacted methods document their dependency on {@link Calendar}.


@author <a href=\"mailto:Joseph.Fialli@Sun.COM\">Joseph Fialli</a>
@author <a href=\"mailto:Kohsuke.Kawaguchi@Sun.com\">Kohsuke Kawaguchi</a>
@author <a href=\"mailto:Jeff.Suttor@Sun.com\">Jeff Suttor</a>
@version $Revision: 759828 $, $Date: 2009-03-29 18:26:29 -0700 (Sun, 29 Mar 2009) $
@see XMLGregorianCalendar#add(Duration)
@since 1.5"
      operation 1894811 "getXMLSchemaType"
	public return_type class_ref 302107 // QName
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Return the name of the XML Schema date/time type that this instance
maps to. Type is computed based on fields that are set,
i.e. {@link #isSet(DatatypeConstants.Field field)} == <code>true</code>.</p>

<table border=\"2\" rules=\"all\" cellpadding=\"2\">
  <thead>
    <tr>
      <th align=\"center\" colspan=\"7\">
        Required fields for XML Schema 1.0 Date/Time Datatypes.<br/>
        <i>(timezone is optional for all date/time datatypes)</i>
      </th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Datatype</td>
      <td>year</td>
      <td>month</td>
      <td>day</td>
      <td>hour</td>
      <td>minute</td>
      <td>second</td>
    </tr>
    <tr>
      <td>{@link DatatypeConstants#DURATION}</td>
      <td>X</td>
      <td>X</td>
      <td>X</td>
      <td>X</td>
      <td>X</td>
      <td>X</td>
    </tr>
    <tr>
      <td>{@link DatatypeConstants#DURATION_DAYTIME}</td>
      <td></td>
      <td></td>
      <td>X</td>
      <td>X</td>
      <td>X</td>
      <td>X</td>
    </tr>
    <tr>
      <td>{@link DatatypeConstants#DURATION_YEARMONTH}</td>
      <td>X</td>
      <td>X</td>
      <td></td>
      <td></td>
      <td></td>
      <td></td>
    </tr>
  </tbody>
</table>

@return one of the following constants:
  {@link DatatypeConstants#DURATION},
  {@link DatatypeConstants#DURATION_DAYTIME} or
  {@link DatatypeConstants#DURATION_YEARMONTH}.

@throws IllegalStateException If the combination of set fields does not match one of the XML Schema date/time datatypes."
      end

      operation 1894939 "getSign"
	abstract public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the sign of this duration in -1,0, or 1.

@return
     -1 if this duration is negative, 0 if the duration is zero,
     and 1 if the duration is positive."
      end

      operation 1895067 "getYears"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Get the years value of this <code>Duration</code> as an <code>int</code> or <code>0</code> if not present.</p>

<p><code>getYears()</code> is a convenience method for
{@link #getField(DatatypeConstants.Field field) getField(DatatypeConstants.YEARS)}.</p>

<p>As the return value is an <code>int</code>, an incorrect value will be returned for <code>Duration</code>s
with years that go beyond the range of an <code>int</code>.
Use {@link #getField(DatatypeConstants.Field field) getField(DatatypeConstants.YEARS)} to avoid possible loss of precision.</p>

@return If the years field is present, return its value as an <code>int</code>, else return <code>0</code>."
      end

      operation 1895195 "getMonths"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Obtains the value of the MONTHS field as an integer value,
or 0 if not present.

This method works just like {@link #getYears()} except
that this method works on the MONTHS field.

@return Months of this <code>Duration</code>."
      end

      operation 1895323 "getDays"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Obtains the value of the DAYS field as an integer value,
or 0 if not present.

This method works just like {@link #getYears()} except
that this method works on the DAYS field.

@return Days of this <code>Duration</code>."
      end

      operation 1895451 "getHours"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Obtains the value of the HOURS field as an integer value,
or 0 if not present.

This method works just like {@link #getYears()} except
that this method works on the HOURS field.

@return Hours of this <code>Duration</code>.
"
      end

      operation 1895579 "getMinutes"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Obtains the value of the MINUTES field as an integer value,
or 0 if not present.

This method works just like {@link #getYears()} except
that this method works on the MINUTES field.

@return Minutes of this <code>Duration</code>.
"
      end

      operation 1895707 "getSeconds"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Obtains the value of the SECONDS field as an integer value,
or 0 if not present.

This method works just like {@link #getYears()} except
that this method works on the SECONDS field.

@return seconds in the integer value. The fraction of seconds
  will be discarded (for example, if the actual value is 2.5,
  this method returns 2)"
      end

      operation 1895835 "getTimeInMillis"
	public explicit_return_type "long"
	nparams 1
	  param in name "startInstant" type class_ref 221979 // Calendar
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Returns the length of the duration in milliseconds.</p>

<p>If the seconds field carries more digits than millisecond order,
those will be simply discarded (or in other words, rounded to zero.)
For example, for any Calendar value <code>x</code>,</p>
<pre>
<code>new Duration(\"PT10.00099S\").getTimeInMills(x) == 10000</code>.
<code>new Duration(\"-PT10.00099S\").getTimeInMills(x) == -10000</code>.
</pre>

<p>
Note that this method uses the {@link #addTo(Calendar)} method,
which may work incorrectly with <code>Duration</code> objects with
very large values in its fields. See the {@link #addTo(Calendar)}
method for details.

@param startInstant
     The length of a month/year varies. The <code>startInstant</code> is
     used to disambiguate this variance. Specifically, this method
     returns the difference between <code>startInstant</code> and
     <code>startInstant+duration</code>

@return milliseconds between <code>startInstant</code> and
  <code>startInstant</code> plus this <code>Duration</code>

@throws NullPointerException if <code>startInstant</code> parameter
is null.
"
      end

      operation 1895963 "getTimeInMillis"
	public explicit_return_type "long"
	nparams 1
	  param in name "startInstant" type class_ref 171931 // Date
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Returns the length of the duration in milliseconds.</p>

<p>If the seconds field carries more digits than millisecond order,
those will be simply discarded (or in other words, rounded to zero.)
For example, for any <code>Date</code> value <code>x</code>,</p>
<pre>
<code>new Duration(\"PT10.00099S\").getTimeInMills(x) == 10000</code>.
<code>new Duration(\"-PT10.00099S\").getTimeInMills(x) == -10000</code>.
</pre>

<p>
Note that this method uses the {@link #addTo(Date)} method,
which may work incorrectly with <code>Duration</code> objects with
very large values in its fields. See the {@link #addTo(Date)}
method for details.

@param startInstant
     The length of a month/year varies. The <code>startInstant</code> is
     used to disambiguate this variance. Specifically, this method
     returns the difference between <code>startInstant</code> and
     <code>startInstant+duration</code>.

@throws NullPointerException
     If the startInstant parameter is null.

@return milliseconds between <code>startInstant</code> and
  <code>startInstant</code> plus this <code>Duration</code>

@see #getTimeInMillis(Calendar)"
      end

      operation 1896091 "getField"
	abstract public return_type class_ref 148379 // Number
	nparams 1
	  param in name "field" type class_ref 301979 // Field
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the value of a field.

Fields of a duration object may contain arbitrary large value.
Therefore this method is designed to return a {@link Number} object.

In case of YEARS, MONTHS, DAYS, HOURS, and MINUTES, the returned
number will be a non-negative integer. In case of seconds,
the returned number may be a non-negative decimal value.

@param field
     one of the six Field constants (YEARS,MONTHS,DAYS,HOURS,
     MINUTES, or SECONDS.)
@return
     If the specified field is present, this method returns
     a non-null non-negative {@link Number} object that
     represents its value. If it is not present, return null.
     For YEARS, MONTHS, DAYS, HOURS, and MINUTES, this method
     returns a {@link java.math.BigInteger} object. For SECONDS, this
     method returns a {@link java.math.BigDecimal}.

@throws NullPointerException If the <code>field</code> is <code>null</code>."
      end

      operation 1896219 "getFieldValueAsInt"
	private explicit_return_type "int"
	nparams 1
	  param in name "field" type class_ref 301979 // Field
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the value of a field as an <code>int</code>.

@param field
     one of the six Field constants (YEARS,MONTHS,DAYS,HOURS,
     MINUTES, or SECONDS.)
@return
     If the field is present, return its value as an <code>int</code>,
     else return <code>0</code>."
      end

      operation 1896347 "isSet"
	abstract public explicit_return_type "boolean"
	nparams 1
	  param in name "field" type class_ref 301979 // Field
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks if a field is set.

A field of a duration object may or may not be present.
This method can be used to test if a field is present.

@param field
     one of the six Field constants (YEARS,MONTHS,DAYS,HOURS,
     MINUTES, or SECONDS.)
@return
     true if the field is present. false if not.

@throws NullPointerException
     If the field parameter is null."
      end

      operation 1896475 "add"
	abstract public return_type class_ref 302363 // Duration
	nparams 1
	  param in name "rhs" type class_ref 302363 // Duration
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Computes a new duration whose value is <code>this+rhs</code>.</p>

<p>For example,</p>
<pre>
\"1 day\" + \"-3 days\" = \"-2 days\"
\"1 year\" + \"1 day\" = \"1 year and 1 day\"
\"-(1 hour,50 minutes)\" + \"-20 minutes\" = \"-(1 hours,70 minutes)\"
\"15 hours\" + \"-3 days\" = \"-(2 days,9 hours)\"
\"1 year\" + \"-1 day\" = IllegalStateException
</pre>

<p>Since there's no way to meaningfully subtract 1 day from 1 month,
there are cases where the operation fails in
{@link IllegalStateException}.</p>

<p>
Formally, the computation is defined as follows.</p>
<p>
Firstly, we can assume that two <code>Duration</code>s to be added
are both positive without losing generality (i.e.,
<code>(-X)+Y=Y-X</code>, <code>X+(-Y)=X-Y</code>,
<code>(-X)+(-Y)=-(X+Y)</code>)

<p>
Addition of two positive <code>Duration</code>s are simply defined as
field by field addition where missing fields are treated as 0.
<p>
A field of the resulting <code>Duration</code> will be unset if and
only if respective fields of two input <code>Duration</code>s are unset.
<p>
Note that <code>lhs.add(rhs)</code> will be always successful if
<code>lhs.signum()*rhs.signum()!=-1</code> or both of them are
normalized.</p>

@param rhs <code>Duration</code> to add to this <code>Duration</code>

@return
     non-null valid Duration object.

@throws NullPointerException
     If the rhs parameter is null.
@throws IllegalStateException
     If two durations cannot be meaningfully added. For
     example, adding negative one day to one month causes
     this exception.


@see #subtract(Duration)"
      end

      operation 1896603 "addTo"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "calendar" type class_ref 221979 // Calendar
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds this duration to a {@link Calendar} object.

<p>
Calls {@link java.util.Calendar#add(int,int)} in the
order of YEARS, MONTHS, DAYS, HOURS, MINUTES, SECONDS, and MILLISECONDS
if those fields are present. Because the {@link Calendar} class
uses int to hold values, there are cases where this method
won't work correctly (for example if values of fields
exceed the range of int.)
</p>

<p>
Also, since this duration class is a Gregorian duration, this
method will not work correctly if the given {@link Calendar}
object is based on some other calendar systems.
</p>

<p>
Any fractional parts of this <code>Duration</code> object
beyond milliseconds will be simply ignored. For example, if
this duration is \"P1.23456S\", then 1 is added to SECONDS,
234 is added to MILLISECONDS, and the rest will be unused.
</p>

<p>
Note that because {@link Calendar#add(int, int)} is using
<tt>int</tt>, <code>Duration</code> with values beyond the
range of <tt>int</tt> in its fields
will cause overflow/underflow to the given {@link Calendar}.
{@link XMLGregorianCalendar#add(Duration)} provides the same
basic operation as this method while avoiding
the overflow/underflow issues.

@param calendar
     A calendar object whose value will be modified.
@throws NullPointerException
     if the calendar parameter is null."
      end

      operation 1896731 "addTo"
	public explicit_return_type "void"
	nparams 1
	  param inout name "date" type class_ref 171931 // Date
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds this duration to a {@link Date} object.

<p>
The given date is first converted into
a {@link java.util.GregorianCalendar}, then the duration
is added exactly like the {@link #addTo(Calendar)} method.

<p>
The updated time instant is then converted back into a
{@link Date} object and used to update the given {@link Date} object.

<p>
This somewhat redundant computation is necessary to unambiguously
determine the duration of months and years.

@param date
     A date object whose value will be modified.
@throws NullPointerException
     if the date parameter is null."
      end

      operation 1896859 "subtract"
	public return_type class_ref 302363 // Duration
	nparams 1
	  param in name "rhs" type class_ref 302363 // Duration
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Computes a new duration whose value is <code>this-rhs</code>.</p>

<p>For example:</p>
<pre>
\"1 day\" - \"-3 days\" = \"4 days\"
\"1 year\" - \"1 day\" = IllegalStateException
\"-(1 hour,50 minutes)\" - \"-20 minutes\" = \"-(1hours,30 minutes)\"
\"15 hours\" - \"-3 days\" = \"3 days and 15 hours\"
\"1 year\" - \"-1 day\" = \"1 year and 1 day\"
</pre>

<p>Since there's no way to meaningfully subtract 1 day from 1 month,
there are cases where the operation fails in {@link IllegalStateException}.</p>

<p>Formally the computation is defined as follows.
First, we can assume that two <code>Duration</code>s are both positive
without losing generality.  (i.e.,
<code>(-X)-Y=-(X+Y)</code>, <code>X-(-Y)=X+Y</code>,
<code>(-X)-(-Y)=-(X-Y)</code>)</p>

<p>Then two durations are subtracted field by field.
If the sign of any non-zero field <tt>F</tt> is different from
the sign of the most significant field,
1 (if <tt>F</tt> is negative) or -1 (otherwise)
will be borrowed from the next bigger unit of <tt>F</tt>.</p>

<p>This process is repeated until all the non-zero fields have
the same sign.</p>

<p>If a borrow occurs in the days field (in other words, if
the computation needs to borrow 1 or -1 month to compensate
days), then the computation fails by throwing an
{@link IllegalStateException}.</p>

@param rhs <code>Duration</code> to subtract from this <code>Duration</code>.

@return New <code>Duration</code> created from subtracting <code>rhs</code> from this <code>Duration</code>.

@throws IllegalStateException
     If two durations cannot be meaningfully subtracted. For
     example, subtracting one day from one month causes
     this exception.

@throws NullPointerException
     If the rhs parameter is null.

@see #add(Duration)"
      end

      operation 1896987 "multiply"
	public return_type class_ref 302363 // Duration
	nparams 1
	  param in name "factor" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Computes a new duration whose value is <code>factor</code> times
longer than the value of this duration.</p>

<p>This method is provided for the convenience.
It is functionally equivalent to the following code:</p>
<pre>
multiply(new BigDecimal(String.valueOf(factor)))
</pre>

@param factor Factor times longer of new <code>Duration</code> to create.

@return New <code>Duration</code> that is <code>factor</code>times longer than this <code>Duration</code>.

@see #multiply(BigDecimal)"
      end

      operation 1897115 "multiply"
	abstract public return_type class_ref 302363 // Duration
	nparams 1
	  param in name "factor" type class_ref 166171 // BigDecimal
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Computes a new duration whose value is <code>factor</code> times
longer than the value of this duration.

<p>
For example,
<pre>
\"P1M\" (1 month) * \"12\" = \"P12M\" (12 months)
\"PT1M\" (1 min) * \"0.3\" = \"PT18S\" (18 seconds)
\"P1M\" (1 month) * \"1.5\" = IllegalStateException
</pre>

<p>
Since the <code>Duration</code> class is immutable, this method
doesn't change the value of this object. It simply computes
a new Duration object and returns it.

<p>
The operation will be performed field by field with the precision
of {@link BigDecimal}. Since all the fields except seconds are
restricted to hold integers,
any fraction produced by the computation will be
carried down toward the next lower unit. For example,
if you multiply \"P1D\" (1 day) with \"0.5\", then it will be 0.5 day,
which will be carried down to \"PT12H\" (12 hours).
When fractions of month cannot be meaningfully carried down
to days, or year to months, this will cause an
{@link IllegalStateException} to be thrown.
For example if you multiple one month by 0.5.</p>

<p>
To avoid {@link IllegalStateException}, use
the {@link #normalizeWith(Calendar)} method to remove the years
and months fields.

@param factor to multiply by

@return
     returns a non-null valid <code>Duration</code> object

@throws IllegalStateException if operation produces fraction in
the months field.

@throws NullPointerException if the <code>factor</code> parameter is
<code>null</code>.
"
      end

      operation 1897243 "negate"
	abstract public return_type class_ref 302363 // Duration
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a new <code>Duration</code> object whose
value is <code>-this</code>.

<p>
Since the <code>Duration</code> class is immutable, this method
doesn't change the value of this object. It simply computes
a new Duration object and returns it.

@return
     always return a non-null valid <code>Duration</code> object."
      end

      operation 1897371 "normalizeWith"
	abstract public return_type class_ref 302363 // Duration
	nparams 1
	  param in name "startTimeInstant" type class_ref 221979 // Calendar
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Converts the years and months fields into the days field
by using a specific time instant as the reference point.</p>

<p>For example, duration of one month normalizes to 31 days
given the start time instance \"July 8th 2003, 17:40:32\".</p>

<p>Formally, the computation is done as follows:</p>
<ol>
 <li>the given Calendar object is cloned</li>
 <li>the years, months and days fields will be added to the {@link Calendar} object
     by using the {@link Calendar#add(int,int)} method</li>
 <li>the difference between the two Calendars in computed in milliseconds and converted to days,
    if a remainder occurs due to Daylight Savings Time, it is discarded</li>
 <li>the computed days, along with the hours, minutes and seconds
     fields of this duration object is used to construct a new
     Duration object.</li>
</ol>

<p>Note that since the Calendar class uses <code>int</code> to
hold the value of year and month, this method may produce
an unexpected result if this duration object holds
a very large value in the years or months fields.</p>

@param startTimeInstant <code>Calendar</code> reference point.

@return <code>Duration</code> of years and months of this <code>Duration</code> as days.

@throws NullPointerException If the startTimeInstant parameter is null."
      end

      operation 1897499 "compare"
	abstract public explicit_return_type "int"
	nparams 1
	  param in name "duration" type class_ref 302363 // Duration
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Partial order relation comparison with this <code>Duration</code> instance.</p>

<p>Comparison result must be in accordance with
<a href=\"http://www.w3.org/TR/xmlschema-2/#duration-order\">W3C XML Schema 1.0 Part 2, Section 3.2.7.6.2,
<i>Order relation on duration</i></a>.</p>

<p>Return:</p>
<ul>
  <li>{@link DatatypeConstants#LESSER} if this <code>Duration</code> is shorter than <code>duration</code> parameter</li>
  <li>{@link DatatypeConstants#EQUAL} if this <code>Duration</code> is equal to <code>duration</code> parameter</li>
  <li>{@link DatatypeConstants#GREATER} if this <code>Duration</code> is longer than <code>duration</code> parameter</li>
  <li>{@link DatatypeConstants#INDETERMINATE} if a conclusive partial order relation cannot be determined</li>
</ul>

@param duration to compare

@return the relationship between <code>this</code> <code>Duration</code>and <code>duration</code> parameter as
  {@link DatatypeConstants#LESSER}, {@link DatatypeConstants#EQUAL}, {@link DatatypeConstants#GREATER}
  or {@link DatatypeConstants#INDETERMINATE}.

@throws UnsupportedOperationException If the underlying implementation
  cannot reasonably process the request, e.g. W3C XML Schema allows for
  arbitrarily large/small/precise values, the request may be beyond the
  implementations capability.
@throws NullPointerException if <code>duration</code> is <code>null</code>.

@see #isShorterThan(Duration)
@see #isLongerThan(Duration)"
      end

      operation 1897627 "isLongerThan"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "duration" type class_ref 302363 // Duration
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Checks if this duration object is strictly longer than
another <code>Duration</code> object.</p>

<p>Duration X is \"longer\" than Y if and only if X>Y
as defined in the section 3.2.6.2 of the XML Schema 1.0
specification.</p>

<p>For example, \"P1D\" (one day) > \"PT12H\" (12 hours) and
\"P2Y\" (two years) > \"P23M\" (23 months).</p>

@param duration <code>Duration</code> to test this <code>Duration</code> against.

@throws UnsupportedOperationException If the underlying implementation
  cannot reasonably process the request, e.g. W3C XML Schema allows for
  arbitrarily large/small/precise values, the request may be beyond the
  implementations capability.
@throws NullPointerException If <code>duration</code> is null.

@return
     true if the duration represented by this object
     is longer than the given duration. false otherwise.

@see #isShorterThan(Duration)
@see #compare(Duration duration)"
      end

      operation 1897755 "isShorterThan"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "duration" type class_ref 302363 // Duration
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Checks if this duration object is strictly shorter than
another <code>Duration</code> object.</p>

@param duration <code>Duration</code> to test this <code>Duration</code> against.

@return <code>true</code> if <code>duration</code> parameter is shorter than this <code>Duration</code>,
  else <code>false</code>.

@throws UnsupportedOperationException If the underlying implementation
  cannot reasonably process the request, e.g. W3C XML Schema allows for
  arbitrarily large/small/precise values, the request may be beyond the
  implementations capability.
@throws NullPointerException if <code>duration</code> is null.

@see #isLongerThan(Duration duration)
@see #compare(Duration duration)"
      end

      operation 1897883 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "duration" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Checks if this duration object has the same duration
as another <code>Duration</code> object.</p>

<p>For example, \"P1D\" (1 day) is equal to \"PT24H\" (24 hours).</p>

<p>Duration X is equal to Y if and only if time instant
t+X and t+Y are the same for all the test time instants
specified in the section 3.2.6.2 of the XML Schema 1.0
specification.</p>

<p>Note that there are cases where two <code>Duration</code>s are
\"incomparable\" to each other, like one month and 30 days.
For example,</p>
<pre>
!new Duration(\"P1M\").isShorterThan(new Duration(\"P30D\"))
!new Duration(\"P1M\").isLongerThan(new Duration(\"P30D\"))
!new Duration(\"P1M\").equals(new Duration(\"P30D\"))
</pre>

@param duration
     A non-null valid <code>Duration</code> object.

@return
     <code>true</code> if this duration is the same length as
        <code>duration</code>.
     <code>false</code> if <code>duration</code> is not a
        <code>Duration</code> object, is <code>null</code>,
        or its length is different from this duration.

@throws UnsupportedOperationException If the underlying implementation
  cannot reasonably process the request, e.g. W3C XML Schema allows for
  arbitrarily large/small/precise values, the request may be beyond the
  implementations capability.

@see #compare(Duration duration)"
      end

      operation 1898011 "hashCode"
	abstract public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a hash code consistent with the definition of the equals method.

@see Object#hashCode()"
      end

      operation 1898139 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Returns a <code>String</code> representation of this <code>Duration</code> <code>Object</code>.</p>

<p>The result is formatted according to the XML Schema 1.0 specification and can be always parsed back later into the
equivalent <code>Duration</code> <code>Object</code> by {@link DatatypeFactory#newDuration(String  lexicalRepresentation)}.</p>

<p>Formally, the following holds for any <code>Duration</code>
<code>Object</code> x:</p>
<pre>
new Duration(x.toString()).equals(x)
</pre>

@return A non-<code>null</code> valid <code>String</code> representation of this <code>Duration</code>."
      end

      operation 1898267 "toString"
	private return_type class_ref 3399692 // String
	nparams 1
	  param inout name "bd" type class_ref 166171 // BigDecimal
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Turns {@link BigDecimal} to a string representation.</p>

<p>Due to a behavior change in the {@link BigDecimal#toString()}
method in JDK1.5, this had to be implemented here.</p>

@param bd <code>BigDecimal</code> to format as a <code>String</code>

@return  <code>String</code> representation of <code>BigDecimal</code>"
      end

      operation 1898395 "getCalendarTimeInMillis"
	class_operation private explicit_return_type "long"
	nparams 1
	  param in name "cal" type class_ref 221979 // Calendar
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Calls the {@link Calendar#getTimeInMillis} method.
Prior to JDK1.4, this method was protected and therefore
cannot be invoked directly.</p>

<p>TODO: In future, this should be replaced by <code>cal.getTimeInMillis()</code>.</p>

@param cal <code>Calendar</code> to get time in milliseconds.

@return Milliseconds of <code>cal</code>."
      end
    end

    class 302491 "XMLGregorianCalendar"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>Representation for W3C XML Schema 1.0 date/time datatypes.
Specifically, these date/time datatypes are
<a href=\"#DATETIME\"><code>dateTime</code></a>,
<a href=\"#TIME\"><code>time</code></a>,
<a href=\"#DATE\"><code>date</code></a>,
<a href=\"#GYEARMONTH\"><code>gYearMonth</code></a>,
<a href=\"#GMONTHDAY\"><code>gMonthDay</code></a>,
<a href=\"#GYEAR\"><code>gYear</code></a>
<a href=\"#GMONTH\"><code>gMonth</code></a> and
<a href=\"#GDAY\"><code>gDay</code></a> defined in the XML Namespace
<code>\"http://www.w3.org/2001/XMLSchema\"</code>.
These datatypes are normatively defined in
<a href=\"http://www.w3.org/TR/xmlschema-2/#dateTime\">W3C XML Schema 1.0 Part 2, Section 3.2.7-14</a>.</p>

<p>The table below defines the mapping between XML Schema 1.0
date/time datatype fields and this class' fields. It also summarizes
the value constraints for the date and time fields defined in
<a href=\"http://www.w3.org/TR/xmlschema-2/#isoformats\">W3C XML Schema 1.0 Part 2, Appendix D,
<i>ISO 8601 Date and Time Formats</i></a>.</p>

<a name=\"datetimefieldsmapping\"/>
<table border=\"2\" rules=\"all\" cellpadding=\"2\">
  <thead>
    <tr>
      <th align=\"center\" colspan=\"3\">
        Date/Time Datatype Field Mapping Between XML Schema 1.0 and Java Representation
      </th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>XML Schema 1.0<br/>
          datatype<br/>
           field</th>
      <th>Related<br/>XMLGregorianCalendar<br/>Accessor(s)</th>
      <th>Value Range</th>
    </tr>
    <a name=\"datetimefield-year\"/>
    <tr>
      <td> year </td>
      <td> {@link #getYear()} + {@link #getEon()} or<br/>
           {@link #getEonAndYear}
      </td>
      <td> <code>getYear()</code> is a value between -(10^9-1) to (10^9)-1
           or {@link DatatypeConstants#FIELD_UNDEFINED}.<br/>
           {@link #getEon()} is high order year value in billion of years.<br/>
           <code>getEon()</code> has values greater than or equal to (10^9) or less than or equal to -(10^9).
           A value of null indicates field is undefined.</br>
           Given that <a href=\"http://www.w3.org/2001/05/xmlschema-errata#e2-63\">XML Schema 1.0 errata</a> states that the year zero
           will be a valid lexical value in a future version of XML Schema,
           this class allows the year field to be set to zero. Otherwise,
           the year field value is handled exactly as described
           in the errata and [ISO-8601-1988]. Note that W3C XML Schema 1.0
           validation does not allow for the year field to have a value of zero.
           </td>
    </tr>
    <a name=\"datetimefield-month\"/>
    <tr>
      <td> month </td>
      <td> {@link #getMonth()} </td>
      <td> 1 to 12 or {@link DatatypeConstants#FIELD_UNDEFINED} </td>
    </tr>
    <a name=\"datetimefield-day\"/>
    <tr>
      <td> day </td>
      <td> {@link #getDay()} </td>
      <td> Independent of month, max range is 1 to 31 or {@link DatatypeConstants#FIELD_UNDEFINED}.<br/>
           The normative value constraint stated relative to month
           field's value is in <a href=\"http://www.w3.org/TR/xmlschema-2/#isoformats\">W3C XML Schema 1.0 Part 2, Appendix D</a>.
      </td>
    </tr>
    <tr id=\"datetimefield-hour\">
      <td>hour</td>
      <td>{@link #getHour()}</td>
      <td>
        0 to 24 or {@link DatatypeConstants#FIELD_UNDEFINED}.
        For a value of 24, the minute and second field must be zero per
        <a href=\"http://www.w3.org/2001/05/xmlschema-errata#e2-45\">XML Schema Errata</a>.
      </td>
    </tr>
    <a name=\"datetimefield-minute\"/>
    <tr>
      <td> minute </td>
      <td> {@link #getMinute()} </td>
      <td> 0 to 59 or {@link DatatypeConstants#FIELD_UNDEFINED} </td>
    </tr>
    <a name=\"datetimefield-second\"/>
    <tr>
      <td>second</td>
      <td>
        {@link #getSecond()} + {@link #getMillisecond()}/1000 or<br/>
        {@link #getSecond()} + {@link #getFractionalSecond()}
      </td>
      <td>
        {@link #getSecond()} from 0 to 60 or {@link DatatypeConstants#FIELD_UNDEFINED}.<br/>
        <i>(Note: 60 only allowable for leap second.)</i><br/>
        {@link #getFractionalSecond()} allows for infinite precision over the range from 0.0 to 1.0 when
        the {@link #getSecond()} is defined.<br/>
        <code>FractionalSecond</code> is optional and has a value of <code>null</code> when it is undefined.<br />
           {@link #getMillisecond()} is the convenience
           millisecond precision of value of {@link #getFractionalSecond()}.
      </td>
    </tr>
    <tr id=\"datetimefield-timezone\">
      <td> timezone </td>
      <td> {@link #getTimezone()} </td>
      <td> Number of minutes or {@link DatatypeConstants#FIELD_UNDEFINED}.
        Value range from -14 hours (-14 * 60 minutes) to 14 hours (14 * 60 minutes).
      </td>
    </tr>
  </tbody>
 </table>

<p>All maximum value space constraints listed for the fields in the table
above are checked by factory methods, @{link DatatypeFactory},
setter methods and parse methods of
this class. <code>IllegalArgumentException</code> is thrown when a
parameter's value is outside the value constraint for the field or
if the composite
values constitute an invalid XMLGregorianCalendar instance (for example, if
the 31st of June is specified).
</p>

<p>The following operations are defined for this class:
<ul>
  <li>accessors/mutators for independent date/time fields</li>
  <li>conversion between this class and W3C XML Schema 1.0 lexical representation,
    {@link #toString()}, {@link DatatypeFactory#newXMLGregorianCalendar(String lexicalRepresentation)}</li>
  <li>conversion between this class and {@link GregorianCalendar},
    {@link #toGregorianCalendar(java.util.TimeZone timezone, java.util.Locale aLocale, XMLGregorianCalendar defaults)},
    {@link DatatypeFactory}</li>
  <li>partial order relation comparator method, {@link #compare(XMLGregorianCalendar xmlGregorianCalendar)}</li>
  <li>{@link #equals(Object)} defined relative to {@link #compare(XMLGregorianCalendar xmlGregorianCalendar)}.</li>
  <li>addition operation with {@link Duration}
     instance as defined in <a href=\"http://www.w3.org/TR/xmlschema-2/#adding-durations-to-dateTimes\">
     W3C XML Schema 1.0 Part 2, Appendix E, <i>Adding durations to dateTimes</i></a>.
  </li>
</ul>
</p>

@author <a href=\"mailto:Joseph.Fialli@Sun.com\">Joseph Fialli</a>
@author <a href=\"mailto:Kohsuke.Kawaguchi@Sun.com\">Kohsuke Kawaguchi</a>
@author <a href=\"mailto:Jeff.Suttor@Sun.com\">Jeff Suttor</a>
@version $Revision: 759822 $, $Date: 2009-03-29 18:15:11 -0700 (Sun, 29 Mar 2009) $
@see Duration
@see DatatypeFactory
@since 1.5"
      classrelation 541211 // <realization>
	relation 541211 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 541211 // <realization>
	  b parent class_ref 129435 // Cloneable
      end

      operation 1899675 "clear"
	abstract public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Unset all fields to undefined.</p>

<p>Set all int fields to {@link DatatypeConstants#FIELD_UNDEFINED} and reference fields
to null.</p>"
      end

      operation 1899803 "reset"
	abstract public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Reset this <code>XMLGregorianCalendar</code> to its original values.</p>

<p><code>XMLGregorianCalendar</code> is reset to the same values as when it was created with
{@link DatatypeFactory#newXMLGregorianCalendar()},
{@link DatatypeFactory#newXMLGregorianCalendar(String lexicalRepresentation)},
{@link DatatypeFactory#newXMLGregorianCalendar(
  BigInteger year,
  int month,
  int day,
  int hour,
  int minute,
  int second,
  BigDecimal fractionalSecond,
  int timezone)},
{@link DatatypeFactory#newXMLGregorianCalendar(
  int year,
  int month,
  int day,
  int hour,
  int minute,
  int second,
  int millisecond,
  int timezone)},
{@link DatatypeFactory#newXMLGregorianCalendar(GregorianCalendar cal)},
{@link DatatypeFactory#newXMLGregorianCalendarDate(
  int year,
  int month,
  int day,
  int timezone)},
{@link DatatypeFactory#newXMLGregorianCalendarTime(
  int hours,
  int minutes,
  int seconds,
  int timezone)},
{@link DatatypeFactory#newXMLGregorianCalendarTime(
  int hours,
  int minutes,
  int seconds,
  BigDecimal fractionalSecond,
  int timezone)} or
{@link DatatypeFactory#newXMLGregorianCalendarTime(
  int hours,
  int minutes,
  int seconds,
  int milliseconds,
  int timezone)}.
</p>

<p><code>reset()</code> is designed to allow the reuse of existing <code>XMLGregorianCalendar</code>s
thus saving resources associated with the creation of new <code>XMLGregorianCalendar</code>s.</p>"
      end

      operation 1899931 "setYear"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "year" type class_ref 166299 // BigInteger
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Set low and high order component of XSD <code>dateTime</code> year field.</p>

<p>Unset this field by invoking the setter with a parameter value of <code>null</code>.</p>

@param year value constraints summarized in <a href=\"#datetimefield-year\">year field of date/time field mapping table</a>.

@throws IllegalArgumentException if <code>year</code> parameter is
outside value constraints for the field as specified in
<a href=\"#datetimefieldmapping\">date/time field mapping table</a>."
      end

      operation 1900059 "setYear"
	abstract public explicit_return_type "void"
	nparams 1
	  param in name "year" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Set year of XSD <code>dateTime</code> year field.</p>

<p>Unset this field by invoking the setter with a parameter value of
{@link DatatypeConstants#FIELD_UNDEFINED}.</p>

<p>Note: if the absolute value of the <code>year</code> parameter
is less than 10^9, the eon component of the XSD year field is set to
<code>null</code> by this method.</p>

@param year value constraints are summarized in <a href=\"#datetimefield-year\">year field of date/time field mapping table</a>.
  If year is {@link DatatypeConstants#FIELD_UNDEFINED}, then eon is set to <code>null</code>."
      end

      operation 1900187 "setMonth"
	abstract public explicit_return_type "void"
	nparams 1
	  param in name "month" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Set month.</p>

<p>Unset this field by invoking the setter with a parameter value of {@link DatatypeConstants#FIELD_UNDEFINED}.</p>

@param month value constraints summarized in <a href=\"#datetimefield-month\">month field of date/time field mapping table</a>.

@throws IllegalArgumentException if <code>month</code> parameter is
outside value constraints for the field as specified in
<a href=\"#datetimefieldmapping\">date/time field mapping table</a>."
      end

      operation 1900315 "setDay"
	abstract public explicit_return_type "void"
	nparams 1
	  param in name "day" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Set days in month.</p>

<p>Unset this field by invoking the setter with a parameter value of {@link DatatypeConstants#FIELD_UNDEFINED}.</p>

@param day value constraints summarized in <a href=\"#datetimefield-day\">day field of date/time field mapping table</a>.

@throws IllegalArgumentException if <code>day</code> parameter is
outside value constraints for the field as specified in
<a href=\"#datetimefieldmapping\">date/time field mapping table</a>."
      end

      operation 1900443 "setTimezone"
	abstract public explicit_return_type "void"
	nparams 1
	  param in name "offset" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Set the number of minutes in the timezone offset.</p>

<p>Unset this field by invoking the setter with a parameter value of {@link DatatypeConstants#FIELD_UNDEFINED}.</p>

@param offset value constraints summarized in <a href=\"#datetimefield-timezone\">
  timezone field of date/time field mapping table</a>.

@throws IllegalArgumentException if <code>offset</code> parameter is
outside value constraints for the field as specified in
<a href=\"#datetimefieldmapping\">date/time field mapping table</a>."
      end

      operation 1900571 "setTime"
	public explicit_return_type "void"
	nparams 3
	  param in name "hour" explicit_type "int"
	  param in name "minute" explicit_type "int"
	  param in name "second" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Set time as one unit.</p>

@param hour value constraints are summarized in
<a href=\"#datetimefield-hour\">hour field of date/time field mapping table</a>.
@param minute value constraints are summarized in
<a href=\"#datetimefield-minute\">minute field of date/time field mapping table</a>.
@param second value constraints are summarized in
<a href=\"#datetimefield-second\">second field of date/time field mapping table</a>.

@see #setTime(int, int, int, BigDecimal)

@throws IllegalArgumentException if any parameter is
outside value constraints for the field as specified in
<a href=\"#datetimefieldmapping\">date/time field mapping table</a>."
      end

      operation 1900699 "setHour"
	abstract public explicit_return_type "void"
	nparams 1
	  param in name "hour" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Set hours.</p>

<p>Unset this field by invoking the setter with a parameter value of {@link DatatypeConstants#FIELD_UNDEFINED}.</p>

@param hour value constraints summarized in <a href=\"#datetimefield-hour\">hour field of date/time field mapping table</a>.

@throws IllegalArgumentException if <code>hour</code> parameter is outside value constraints for the field as specified in
  <a href=\"#datetimefieldmapping\">date/time field mapping table</a>."
      end

      operation 1900827 "setMinute"
	abstract public explicit_return_type "void"
	nparams 1
	  param in name "minute" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Set minutes.</p>

<p>Unset this field by invoking the setter with a parameter value of {@link DatatypeConstants#FIELD_UNDEFINED}.</p>

@param minute value constraints summarized in <a href=\"#datetimefield-minute\">minute field of date/time field mapping table</a>.

@throws IllegalArgumentException if <code>minute</code> parameter is outside value constraints for the field as specified in
  <a href=\"#datetimefieldmapping\">date/time field mapping table</a>."
      end

      operation 1900955 "setSecond"
	abstract public explicit_return_type "void"
	nparams 1
	  param in name "second" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Set seconds.</p>

<p>Unset this field by invoking the setter with a parameter value of {@link DatatypeConstants#FIELD_UNDEFINED}.</p>

@param second value constraints summarized in <a href=\"#datetimefield-second\">second field of date/time field mapping table</a>.

@throws IllegalArgumentException if <code>second</code> parameter is outside value constraints for the field as specified in
  <a href=\"#datetimefieldmapping\">date/time field mapping table</a>."
      end

      operation 1901083 "setMillisecond"
	abstract public explicit_return_type "void"
	nparams 1
	  param in name "millisecond" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Set milliseconds.</p>

<p>Unset this field by invoking the setter with a parameter value of {@link DatatypeConstants#FIELD_UNDEFINED}.</p>

@param millisecond value constraints summarized in
  <a href=\"#datetimefield-millisecond\">millisecond field of date/time field mapping table</a>.

@throws IllegalArgumentException if <code>millisecond</code> parameter is outside value constraints for the field as specified
  in <a href=\"#datetimefieldmapping\">date/time field mapping table</a>."
      end

      operation 1901211 "setFractionalSecond"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "fractional" type class_ref 166171 // BigDecimal
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Set fractional seconds.</p>

<p>Unset this field by invoking the setter with a parameter value of <code>null</code>.</p>

@param fractional value constraints summarized in
  <a href=\"#datetimefield-fractional\">fractional field of date/time field mapping table</a>.

@throws IllegalArgumentException if <code>fractional</code> parameter is outside value constraints for the field as specified
  in <a href=\"#datetimefieldmapping\">date/time field mapping table</a>."
      end

      operation 1901339 "setTime"
	public explicit_return_type "void"
	nparams 4
	  param in name "hour" explicit_type "int"
	  param in name "minute" explicit_type "int"
	  param in name "second" explicit_type "int"
	  param inout name "fractional" type class_ref 166171 // BigDecimal
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Set time as one unit, including the optional infinite precision
fractional seconds.</p>

@param hour value constraints are summarized in
<a href=\"#datetimefield-hour\">hour field of date/time field mapping table</a>.
@param minute value constraints are summarized in
<a href=\"#datetimefield-minute\">minute field of date/time field mapping table</a>.
@param second value constraints are summarized in
<a href=\"#datetimefield-second\">second field of date/time field mapping table</a>.
@param fractional value of <code>null</code> indicates this optional
  field is not set.

@throws IllegalArgumentException if any parameter is
outside value constraints for the field as specified in
<a href=\"#datetimefieldmapping\">date/time field mapping table</a>."
      end

      operation 1901467 "setTime"
	public explicit_return_type "void"
	nparams 4
	  param in name "hour" explicit_type "int"
	  param in name "minute" explicit_type "int"
	  param in name "second" explicit_type "int"
	  param in name "millisecond" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Set time as one unit, including optional milliseconds.</p>

@param hour value constraints are summarized in
<a href=\"#datetimefield-hour\">hour field of date/time field mapping table</a>.
@param minute value constraints are summarized in
<a href=\"#datetimefield-minute\">minute field of date/time field mapping table</a>.
@param second value constraints are summarized in
<a href=\"#datetimefield-second\">second field of date/time field mapping table</a>.
@param millisecond value of {@link DatatypeConstants#FIELD_UNDEFINED} indicates this
                   optional field is not set.

@throws IllegalArgumentException if any parameter is
outside value constraints for the field as specified in
<a href=\"#datetimefieldmapping\">date/time field mapping table</a>."
      end

      operation 1901595 "getEon"
	abstract public return_type class_ref 166299 // BigInteger
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Return high order component for XML Schema 1.0 dateTime datatype field for
<code>year</code>.
<code>null</code> if this optional part of the year field is not defined.</p>

<p>Value constraints for this value are summarized in
<a href=\"#datetimefield-year\">year field of date/time field mapping table</a>.</p>
@return eon of this <code>XMLGregorianCalendar</code>. The value
returned is an integer multiple of 10^9.

@see #getYear()
@see #getEonAndYear()"
      end

      operation 1901723 "getYear"
	abstract public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Return low order component for XML Schema 1.0 dateTime datatype field for
<code>year</code> or {@link DatatypeConstants#FIELD_UNDEFINED}.</p>

<p>Value constraints for this value are summarized in
<a href=\"#datetimefield-year\">year field of date/time field mapping table</a>.</p>

@return year  of this <code>XMLGregorianCalendar</code>.

@see #getEon()
@see #getEonAndYear()"
      end

      operation 1901851 "getEonAndYear"
	abstract public return_type class_ref 166299 // BigInteger
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Return XML Schema 1.0 dateTime datatype field for
<code>year</code>.</p>

<p>Value constraints for this value are summarized in
<a href=\"#datetimefield-year\">year field of date/time field mapping table</a>.</p>

@return sum of <code>eon</code> and <code>BigInteger.valueOf(year)</code>
when both fields are defined. When only <code>year</code> is defined,
return it. When both <code>eon</code> and <code>year</code> are not
defined, return <code>null</code>.

@see #getEon()
@see #getYear()"
      end

      operation 1901979 "getMonth"
	abstract public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Return number of month or {@link DatatypeConstants#FIELD_UNDEFINED}.</p>

<p>Value constraints for this value are summarized in
<a href=\"#datetimefield-month\">month field of date/time field mapping table</a>.</p>

@return year  of this <code>XMLGregorianCalendar</code>.
"
      end

      operation 1902107 "getDay"
	abstract public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return day in month or {@link DatatypeConstants#FIELD_UNDEFINED}.</p>

<p>Value constraints for this value are summarized in
<a href=\"#datetimefield-day\">day field of date/time field mapping table</a>.</p>

@see #setDay(int)"
      end

      operation 1902235 "getTimezone"
	abstract public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return timezone offset in minutes or
{@link DatatypeConstants#FIELD_UNDEFINED} if this optional field is not defined.

<p>Value constraints for this value are summarized in
<a href=\"#datetimefield-timezone\">timezone field of date/time field mapping table</a>.</p>

@see #setTimezone(int)"
      end

      operation 1902363 "getHour"
	abstract public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return hours or {@link DatatypeConstants#FIELD_UNDEFINED}.
Returns {@link DatatypeConstants#FIELD_UNDEFINED} if this field is not defined.

<p>Value constraints for this value are summarized in
<a href=\"#datetimefield-hour\">hour field of date/time field mapping table</a>.</p>
@see #setTime(int, int, int)"
      end

      operation 1902491 "getMinute"
	abstract public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return minutes or {@link DatatypeConstants#FIELD_UNDEFINED}.</p>
Returns {@link DatatypeConstants#FIELD_UNDEFINED} if this field is not defined.

<p>Value constraints for this value are summarized in
<a href=\"#datetimefield-minute\">minute field of date/time field mapping table</a>.</p>
@see #setTime(int, int, int)"
      end

      operation 1902619 "getSecond"
	abstract public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Return seconds or {@link DatatypeConstants#FIELD_UNDEFINED}.</p>

<p>Returns {@link DatatypeConstants#FIELD_UNDEFINED} if this field is not defined.
When this field is not defined, the optional xs:dateTime
fractional seconds field, represented by
{@link #getFractionalSecond()} and {@link #getMillisecond()},
must not be defined.</p>

<p>Value constraints for this value are summarized in
<a href=\"#datetimefield-second\">second field of date/time field mapping table</a>.</p>

@return Second  of this <code>XMLGregorianCalendar</code>.

@see #getFractionalSecond()
@see #getMillisecond()
@see #setTime(int, int, int)"
      end

      operation 1902747 "getMillisecond"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Return millisecond precision of {@link #getFractionalSecond()}.</p>

<p>This method represents a convenience accessor to infinite
precision fractional second value returned by
{@link #getFractionalSecond()}. The returned value is the rounded
down to milliseconds value of
{@link #getFractionalSecond()}. When {@link #getFractionalSecond()}
returns <code>null</code>, this method must return
{@link DatatypeConstants#FIELD_UNDEFINED}.</p>

<p>Value constraints for this value are summarized in
<a href=\"#datetimefield-second\">second field of date/time field mapping table</a>.</p>

@return Millisecond  of this <code>XMLGregorianCalendar</code>.

@see #getFractionalSecond()
@see #setTime(int, int, int)"
      end

      operation 1902875 "getFractionalSecond"
	abstract public return_type class_ref 166171 // BigDecimal
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Return fractional seconds.</p>

<p><code>null</code> is returned when this optional field is not defined.</p>

<p>Value constraints are detailed in
<a href=\"#datetimefield-second\">second field of date/time field mapping table</a>.</p>

<p>This optional field can only have a defined value when the
xs:dateTime second field, represented by {@link #getSecond()},
does not return {@link DatatypeConstants#FIELD_UNDEFINED}.</p>

@return fractional seconds  of this <code>XMLGregorianCalendar</code>.

@see #getSecond()
@see #setTime(int, int, int, BigDecimal)"
      end

      operation 1903003 "compare"
	abstract public explicit_return_type "int"
	nparams 1
	  param inout name "xmlGregorianCalendar" type class_ref 302491 // XMLGregorianCalendar
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " comparisons

<p>Compare two instances of W3C XML Schema 1.0 date/time datatypes
according to partial order relation defined in
<a href=\"http://www.w3.org/TR/xmlschema-2/#dateTime-order\">W3C XML Schema 1.0 Part 2, Section 3.2.7.3,
<i>Order relation on dateTime</i></a>.</p>

<p><code>xsd:dateTime</code> datatype field mapping to accessors of
this class are defined in
<a href=\"#datetimefieldmapping\">date/time field mapping table</a>.</p>

@param xmlGregorianCalendar Instance of <code>XMLGregorianCalendar</code> to compare

@return The relationship between <code>this</code> <code>XMLGregorianCalendar</code> and
  the specified <code>xmlGregorianCalendar</code> as
  {@link DatatypeConstants#LESSER},
  {@link DatatypeConstants#EQUAL},
  {@link DatatypeConstants#GREATER} or
  {@link DatatypeConstants#INDETERMINATE}.

@throws NullPointerException if <code>xmlGregorianCalendar</code> is null."
      end

      operation 1903131 "normalize"
	abstract public return_type class_ref 302491 // XMLGregorianCalendar
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Normalize this instance to UTC.</p>

<p>2000-03-04T23:00:00+03:00 normalizes to 2000-03-04T20:00:00Z</p>
<p>Implements W3C XML Schema Part 2, Section 3.2.7.3 (A).</p>

@return <code>this</code> <code>XMLGregorianCalendar</code> normalized to UTC."
      end

      operation 1903259 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" type class_ref 3401484 // Object
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Indicates whether parameter <code>obj</code> is \"equal to\" this one.</p>

@param obj to compare.

@return <code>true</code> when <code>obj</code> is an instance of <code>XMLGregorianCalendar</code>
  and  {@link #compare(XMLGregorianCalendar obj)} returns {@link DatatypeConstants#EQUAL}, otherwise <code>false</code>."
      end

      operation 1903387 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Returns a hash code consistent with the definition of the equals method.</p>

@return hash code of this object."
      end

      operation 1903515 "toXMLFormat"
	abstract public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Return the lexical representation of <code>this</code> instance.
The format is specified in
<a href=\"http://www.w3.org/TR/xmlschema-2/#dateTime-order\">XML Schema 1.0 Part 2, Section 3.2.[7-14].1,
<i>Lexical Representation</i>\".</a></p>

<p>Specific target lexical representation format is determined by
{@link #getXMLSchemaType()}.</p>

@return XML, as <code>String</code>, representation of this <code>XMLGregorianCalendar</code>

@throws IllegalStateException if the combination of set fields
   does not match one of the eight defined XML Schema builtin date/time datatypes."
      end

      operation 1903643 "getXMLSchemaType"
	abstract public return_type class_ref 302107 // QName
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Return the name of the XML Schema date/time type that this instance
maps to. Type is computed based on fields that are set.</p>

<table border=\"2\" rules=\"all\" cellpadding=\"2\">
  <thead>
    <tr>
      <th align=\"center\" colspan=\"7\">
        Required fields for XML Schema 1.0 Date/Time Datatypes.<br/>
        <i>(timezone is optional for all date/time datatypes)</i>
      </th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Datatype</td>
      <td>year</td>
      <td>month</td>
      <td>day</td>
      <td>hour</td>
      <td>minute</td>
      <td>second</td>
    </tr>
    <tr>
      <td>{@link DatatypeConstants#DATETIME}</td>
      <td>X</td>
      <td>X</td>
      <td>X</td>
      <td>X</td>
      <td>X</td>
      <td>X</td>
    </tr>
    <tr>
      <td>{@link DatatypeConstants#DATE}</td>
      <td>X</td>
      <td>X</td>
      <td>X</td>
      <td></td>
      <td></td>
      <td></td>
    </tr>
    <tr>
      <td>{@link DatatypeConstants#TIME}</td>
      <td></td>
      <td></td>
      <td></td>
      <td>X</td>
      <td>X</td>
      <td>X</td>
    </tr>
    <tr>
      <td>{@link DatatypeConstants#GYEARMONTH}</td>
      <td>X</td>
      <td>X</td>
      <td></td>
      <td></td>
      <td></td>
      <td></td>
    </tr>
    <tr>
      <td>{@link DatatypeConstants#GMONTHDAY}</td>
      <td></td>
      <td>X</td>
      <td>X</td>
      <td></td>
      <td></td>
      <td></td>
    </tr>
    <tr>
      <td>{@link DatatypeConstants#GYEAR}</td>
      <td>X</td>
      <td></td>
      <td></td>
      <td></td>
      <td></td>
      <td></td>
    </tr>
    <tr>
      <td>{@link DatatypeConstants#GMONTH}</td>
      <td></td>
      <td>X</td>
      <td></td>
      <td></td>
      <td></td>
      <td></td>
    </tr>
    <tr>
      <td>{@link DatatypeConstants#GDAY}</td>
      <td></td>
      <td></td>
      <td>X</td>
      <td></td>
      <td></td>
      <td></td>
    </tr>
  </tbody>
</table>

@throws java.lang.IllegalStateException if the combination of set fields
   does not match one of the eight defined XML Schema builtin
   date/time datatypes.
@return One of the following class constants:
  {@link DatatypeConstants#DATETIME},
  {@link DatatypeConstants#TIME},
  {@link DatatypeConstants#DATE},
  {@link DatatypeConstants#GYEARMONTH},
  {@link DatatypeConstants#GMONTHDAY},
  {@link DatatypeConstants#GYEAR},
  {@link DatatypeConstants#GMONTH} or
  {@link DatatypeConstants#GDAY}."
      end

      operation 1903771 "toString"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Returns a <code>String</code> representation of this <code>XMLGregorianCalendar</code> <code>Object</code>.</p>

<p>The result is a lexical representation generated by {@link #toXMLFormat()}.</p>

@return A non-<code>null</code> valid <code>String</code> representation of this <code>XMLGregorianCalendar</code>.

@throws IllegalStateException if the combination of set fields
   does not match one of the eight defined XML Schema builtin date/time datatypes.

@see #toXMLFormat()"
      end

      operation 1903899 "isValid"
	abstract public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Validate instance by <code>getXMLSchemaType()</code> constraints.
@return true if data values are valid."
      end

      operation 1904027 "add"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "duration" type class_ref 302363 // Duration
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Add <code>duration</code> to this instance.</p>

<p>The computation is specified in
<a href=\"http://www.w3.org/TR/xmlschema-2/#adding-durations-to-dateTimes\">XML Schema 1.0 Part 2, Appendix E,
<i>Adding durations to dateTimes</i>></a>.
<a href=\"#datetimefieldsmapping\">date/time field mapping table</a>
defines the mapping from XML Schema 1.0 <code>dateTime</code> fields
to this class' representation of those fields.</p>

@param duration Duration to add to this <code>XMLGregorianCalendar</code>.

@throws NullPointerException  when <code>duration</code> parameter is <code>null</code>."
      end

      operation 1904155 "toGregorianCalendar"
	abstract public return_type class_ref 242075 // GregorianCalendar
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Convert this <code>XMLGregorianCalendar</code> to a {@link GregorianCalendar}.</p>

<p>When <code>this</code> instance has an undefined field, this
conversion relies on the <code>java.util.GregorianCalendar</code> default
for its corresponding field. A notable difference between
XML Schema 1.0 date/time datatypes and <code>java.util.GregorianCalendar</code>
is that Timezone value is optional for date/time datatypes and it is
a required field for <code>java.util.GregorianCalendar</code>. See javadoc
for <code>java.util.TimeZone.getDefault()</code> on how the default
is determined. To explicitly specify the <code>TimeZone</code>
instance, see
{@link #toGregorianCalendar(TimeZone, Locale, XMLGregorianCalendar)}.</p>

<table border=\"2\" rules=\"all\" cellpadding=\"2\">
  <thead>
    <tr>
      <th align=\"center\" colspan=\"2\">
         Field by Field Conversion from this class to
         <code>java.util.GregorianCalendar</code>
      </th>
    </tr>
  </thead>
  <tbody>
    <tr>
       <td><code>java.util.GregorianCalendar</code> field</td>
       <td><code>javax.xml.datatype.XMLGregorianCalendar</code> field</td>
    </tr>
    <tr>
      <td><code>ERA</code></td>
      <td>{@link #getEonAndYear()}<code>.signum() < 0 ? GregorianCalendar.BC : GregorianCalendar.AD</code></td>
    </tr>
    <tr>
      <td><code>YEAR</code></td>
      <td>{@link #getEonAndYear()}<code>.abs().intValue()</code><i>*</i></td>
    </tr>
    <tr>
      <td><code>MONTH</code></td>
      <td>{@link #getMonth()} - {@link DatatypeConstants#JANUARY} + {@link GregorianCalendar#JANUARY}</td>
    </tr>
    <tr>
      <td><code>DAY_OF_MONTH</code></td>
      <td>{@link #getDay()}</td>
    </tr>
    <tr>
      <td><code>HOUR_OF_DAY</code></td>
      <td>{@link #getHour()}</td>
    </tr>
    <tr>
      <td><code>MINUTE</code></td>
      <td>{@link #getMinute()}</td>
    </tr>
    <tr>
      <td><code>SECOND</code></td>
      <td>{@link #getSecond()}</td>
    </tr>
    <tr>
      <td><code>MILLISECOND</code></td>
      <td>get millisecond order from {@link #getFractionalSecond()}<i>*</i> </td>
    </tr>
    <tr>
      <td><code>GregorianCalendar.setTimeZone(TimeZone)</code></td>
      <td>{@link #getTimezone()} formatted into Custom timezone id</td>
    </tr>
  </tbody>
</table>
<i>*</i> designates possible loss of precision during the conversion due
to source datatype having higher precision than target datatype.

<p>To ensure consistency in conversion implementations, the new
<code>GregorianCalendar</code> should be instantiated in following
manner.
<ul>
  <li>Using <code>timeZone</code> value as defined above, create a new
<code>java.util.GregorianCalendar(timeZone,Locale.getDefault())</code>.
  </li>
  <li>Initialize all GregorianCalendar fields by calling {(@link GegorianCalendar#clear()}.</li>
  <li>Obtain a pure Gregorian Calendar by invoking
  <code>GregorianCalendar.setGregorianChange(
  new Date(Long.MIN_VALUE))</code>.</li>
  <li>Its fields ERA, YEAR, MONTH, DAY_OF_MONTH, HOUR_OF_DAY,
      MINUTE, SECOND and MILLISECOND are set using the method
      <code>Calendar.set(int,int)</code></li>
</ul>
</p>

@see #toGregorianCalendar(java.util.TimeZone, java.util.Locale, XMLGregorianCalendar)"
      end

      operation 1904283 "toGregorianCalendar"
	abstract public return_type class_ref 242075 // GregorianCalendar
	nparams 3
	  param inout name "timezone" type class_ref 229147 // TimeZone
	  param inout name "aLocale" type class_ref 135835 // Locale
	  param inout name "defaults" type class_ref 302491 // XMLGregorianCalendar
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Convert this <code>XMLGregorianCalendar</code> along with provided parameters
to a {@link GregorianCalendar} instance.</p>

<p> Since XML Schema 1.0 date/time datetypes has no concept of
timezone ids or daylight savings timezone ids, this conversion operation
allows the user to explicitly specify one with
<code>timezone</code> parameter.</p>

<p>To compute the return value's <code>TimeZone</code> field,
<ul>
<li>when parameter <code>timeZone</code> is non-null,
it is the timezone field.</li>
<li>else when <code>this.getTimezone() != FIELD_UNDEFINED</code>,
create a <code>java.util.TimeZone</code> with a custom timezone id
using the <code>this.getTimezone()</code>.</li>
<li>else when <code>defaults.getTimezone() != FIELD_UNDEFINED</code>,
create a <code>java.util.TimeZone</code> with a custom timezone id
using <code>defaults.getTimezone()</code>.</li>
<li>else use the <code>GregorianCalendar</code> default timezone value
for the host is defined as specified by
<code>java.util.TimeZone.getDefault()</code>.</li></ul></p>

<p>To ensure consistency in conversion implementations, the new
<code>GregorianCalendar</code> should be instantiated in following
manner.
<ul>
  <li>Create a new <code>java.util.GregorianCalendar(TimeZone,
      Locale)</code> with TimeZone set as specified above and the
      <code>Locale</code> parameter.
  </li>
  <li>Initialize all GregorianCalendar fields by calling {@link GregorianCalendar#clear()}</li>
  <li>Obtain a pure Gregorian Calendar by invoking
  <code>GregorianCalendar.setGregorianChange(
  new Date(Long.MIN_VALUE))</code>.</li>
  <li>Its fields ERA, YEAR, MONTH, DAY_OF_MONTH, HOUR_OF_DAY,
      MINUTE, SECOND and MILLISECOND are set using the method
      <code>Calendar.set(int,int)</code></li>
</ul></p>

@param timezone provide Timezone. <code>null</code> is a legal value.
@param aLocale  provide explicit Locale. Use default GregorianCalendar locale if
                value is <code>null</code>.
@param defaults provide default field values to use when corresponding
                field for this instance is FIELD_UNDEFINED or null.
                If <code>defaults</code>is <code>null</code> or a field
                within the specified <code>defaults</code> is undefined,
                just use <code>java.util.GregorianCalendar</code> defaults.
@return a java.util.GregorianCalendar conversion of this instance."
      end

      operation 1904411 "getTimeZone"
	abstract public return_type class_ref 229147 // TimeZone
	nparams 1
	  param in name "defaultZoneoffset" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Returns a <code>java.util.TimeZone</code> for this class.</p>

<p>If timezone field is defined for this instance,
returns TimeZone initialized with custom timezone id
of zoneoffset. If timezone field is undefined,
try the defaultZoneoffset that was passed in.
If defaultZoneoffset is FIELD_UNDEFINED, return
default timezone for this host.
(Same default as java.util.GregorianCalendar).</p>

@param defaultZoneoffset default zoneoffset if this zoneoffset is
{@link DatatypeConstants#FIELD_UNDEFINED}.

@return TimeZone for this."
      end

      operation 1904539 "clone"
	abstract public return_type class_ref 3401484 // Object
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Creates and returns a copy of this object.</p>

@return copy of this <code>Object</code>"
      end
    end

    class 302619 "FactoryFinder"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>Implement pluggable data types.</p>

<p>This class is duplicated for each JAXP subpackage so keep it in
sync.  It is package private for secure class loading.</p>

@author <a href=\"mailto:Jeff.Suttor@Sun.com\">Jeff Suttor</a>
@version $Revision: 670432 $, $Date: 2008-06-22 19:02:08 -0700 (Sun, 22 Jun 2008) $
@since 1.5"
      classrelation 540699 // CLASS_NAME (<unidirectional association>)
	relation 540699 --->
	  a role_name "CLASS_NAME" init_value " \"javax.xml.datatype.FactoryFinder\"" class_relation const_relation private
	    comment " <p>Name of class to display in output messages.</p> 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 540699 // CLASS_NAME (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      attribute 452507 "debug"
	class_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " <p>Debug flag to trace loading process.</p> "
      end

      classrelation 540827 // cacheProps (<unidirectional association>)
	relation 540827 --->
	  a role_name "cacheProps" init_value " new Properties()" class_relation private
	    comment " <p>Cache properties for performance.</p> 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 540827 // cacheProps (<unidirectional association>)
	  b parent class_ref 160027 // Properties
      end

      attribute 452635 "firstTime"
	class_attribute private explicit_type "boolean"
	init_value " true"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " <p>First time requires initialization overhead.</p> "
      end

      attribute 452763 "DEFAULT_LINE_LENGTH"
	class_attribute const_attribute private explicit_type "int"
	init_value " 80"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Default columns per line. "
      end

      extra_member 135707 "initialization"
	
	cpp "" ""
	java "  static {
        String val = System.getProperty(\"jaxp.debug\");
        // Allow simply setting the prop to turn on debug
        debug = val != null && (! \"false\".equals(val));
    }"
	php ""
	python ""
	idl ""
      end

      operation 1898523 "FactoryFinder"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 1898651 "debugPrintln"
	class_operation private explicit_return_type "void"
	nparams 1
	  param inout name "msg" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Output debugging messages.</p>

@param msg <code>String</code> to print to <code>stderr</code>."
      end

      operation 1898779 "findClassLoader"
	class_operation private return_type class_ref 138523 // ClassLoader
	nparams 0
	nexceptions 1
	  exception class_ref 302747 // ConfigurationError
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Find the appropriate <code>ClassLoader</code> to use.</p>

<p>The context ClassLoader is preferred.</p>

@return <code>ClassLoader</code> to use.

@throws ConfigurationError If a valid <code>ClassLoader</code> cannot be identified."
      end

      class 302747 "ConfigurationError"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 540955 // <generalisation>
	  relation 540955 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 540955 // <generalisation>
	    b parent class_ref 143643 // Error
	end

	attribute 452891 "serialVersionUID"
	  class_attribute const_attribute private explicit_type "long"
	  init_value " -3644413026244211347L"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 541083 // exception (<unidirectional association>)
	  relation 541083 --->
	    a role_name "exception" private
	      comment "
<p>Exception that caused the error.</p>

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 541083 // exception (<unidirectional association>)
	    b parent class_ref 132251 // Exception
	end

	operation 1899291 "ConfigurationError"
	  package explicit_return_type ""
	  nparams 2
	    param inout name "msg" type class_ref 3399692 // String
	    param inout name "x" type class_ref 132251 // Exception
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "<p>Construct a new instance with the specified detail string and
exception.</p>

@param msg Detail message for this error.
@param x Exception that caused the error."
	end

	operation 1899419 "getException"
	  package return_type class_ref 132251 // Exception
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "<p>Get the Exception that caused the error.</p>

@return Exception that caused the error."
	end
      end

      operation 1898907 "newInstance"
	class_operation package return_type class_ref 3401484 // Object
	nparams 2
	  param inout name "className" type class_ref 3399692 // String
	  param inout name "classLoader" type class_ref 138523 // ClassLoader
	nexceptions 1
	  exception class_ref 302747 // ConfigurationError
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Create an instance of a class using the specified ClassLoader.</p>

@param className Name of class to create.
@param classLoader ClassLoader to use to create named class.

@return New instance of specified class created using the specified ClassLoader.

@throws ConfigurationError If class could not be created."
      end

      operation 1899035 "find"
	class_operation package return_type class_ref 3401484 // Object
	nparams 2
	  param inout name "factoryId" type class_ref 3399692 // String
	  param inout name "fallbackClassName" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 302747 // ConfigurationError
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finds the implementation Class object in the specified order.  Main
entry point.
Package private so this code can be shared.

@param factoryId Name of the factory to find, same as a property name
@param fallbackClassName Implementation class name, if nothing else is found.  Use null to mean no fallback.

@return Class Object of factory, never null

@throws ConfigurationError If Class cannot be found."
      end

      operation 1899163 "findJarServiceProvider"
	class_operation private return_type class_ref 3401484 // Object
	nparams 1
	  param inout name "factoryId" type class_ref 3399692 // String
	nexceptions 1
	  exception class_ref 302747 // ConfigurationError
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Try to find provider using Jar Service Provider Mechanism

@return instance of provider class if found or null"
      end

      operation 1899547 "which"
	class_operation private return_type class_ref 3399692 // String
	nparams 1
	  param inout name "clazz" type class_ref 3421708 // Class
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the location where the given Class is loaded from."
      end
    end
  end

  deploymentview 133915 "datatype"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 257307 "DatatypeConfigurationException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.PrintStream;
import java.io.PrintWriter;
import java.lang.reflect.Method;
${definition}"
      associated_classes
	class_ref 301723 // DatatypeConfigurationException
      end
      comment "Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

 $Id: DatatypeConfigurationException.java 569987 2007-08-27 04:08:46Z mrglavas $"
    end

    artifact 257435 "DatatypeConstants"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import javax.xml.XMLConstants;
import javax.xml.namespace.QName;
${definition}"
      associated_classes
	class_ref 301851 // DatatypeConstants
      end
      comment "Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

 $Id: DatatypeConstants.java 446598 2006-09-15 12:55:40Z jeremias $"
    end

    artifact 257563 "DatatypeFactory"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.GregorianCalendar;
${definition}"
      associated_classes
	class_ref 302235 // DatatypeFactory
      end
      comment "Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

$Id: DatatypeFactory.java 884950 2009-11-27 18:46:18Z mrglavas $"
    end

    artifact 257691 "Duration"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import javax.xml.namespace.QName;
${definition}"
      associated_classes
	class_ref 302363 // Duration
      end
      comment "Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

$Id: Duration.java 759828 2009-03-30 01:26:29Z mrglavas $"
    end

    artifact 257819 "FactoryFinder"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.URL;
import java.util.Properties;
import libcore.io.IoUtils;
${definition}"
      associated_classes
	class_ref 302619 // FactoryFinder
      end
      comment "Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

 $Id: FactoryFinder.java 670432 2008-06-23 02:02:08Z mrglavas $"
    end

    artifact 257947 "XMLGregorianCalendar"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.GregorianCalendar;
import java.util.TimeZone;
import javax.xml.namespace.QName;
${definition}"
      associated_classes
	class_ref 302491 // XMLGregorianCalendar
      end
      comment "Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

 $Id: XMLGregorianCalendar.java 759822 2009-03-30 01:15:11Z mrglavas $"
    end
  end
end
