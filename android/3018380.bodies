class NotifyShutdownActivity
!!!12346764.java!!!	onCreate(inout arg0 : Bundle) : void
        super.onCreate(arg0);
        requestWindowFeature(Window.FEATURE_NO_TITLE);
        setContentView(R.layout.alert_dialog);
        setTimeOut(0);

        Intent intent = getIntent();
        if (intent != null) {
            mActionCancel = intent.getStringExtra(EXTRA_ACTION_CANCEL);
        }

        Button button_ok = (Button) findViewById(R.id.ok);
        Button button_cancel = (Button) findViewById(R.id.cancel);
        button_ok.setOnClickListener(new OnClickListener() {
            @Override
            public void onClick(View arg0) {
                NotifyShutdownActivity.this.finish();

                Utils.doShutdown(NotifyShutdownActivity.this);
            }
        });
        button_cancel.setOnClickListener(new OnClickListener() {
            @Override
            public void onClick(View arg0) {
                NotifyShutdownActivity.this.finish();
                if (mActionCancel != null) {
                    Log.d(TAG, "broadcast cancel intent:" + mActionCancel);
                    Intent intent = new Intent().setAction(mActionCancel);
                    sendBroadcast(intent);
                }
            }
        });

        // display default text
        final TextView tv = (TextView) findViewById(R.id.alert_dialog_view_tv);
        final String str = getResources().getString(R.string.shutdown_time_expire,
                getResources().getString(R.string.one_minute));
        tv.setText(str);

        // Start counting down
        final Handler handler = new Handler() {
            @Override
            public void handleMessage(Message msg) {
                super.handleMessage(msg);
                int countdown = msg.getData().getInt("countdown");
                String str = getResources().getString(R.string.shutdown_time_expire,
                        countdown / 1000);
                tv.setText(str);
            }
        };
        Timer timer = new Timer();
        final Bundle bundle = new Bundle();
        timer.schedule(new TimerTask() {
            @Override
            public void run() {
                mCountDown -= ONE_SECOND;
                bundle.putInt("countdown", mCountDown);
                Message message = handler.obtainMessage();
                message.setData(bundle);
                handler.sendMessage(message);
                if (mCountDown == 0) {
                    cancel();
                }
            }
        }, 0, ONE_SECOND);
