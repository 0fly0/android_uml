class GLMessage
!!!1697292.cpp!!!	GLMessage()
  SharedCtor();
!!!1697420.cpp!!!	~GLMessage()
  SharedDtor();
!!!1697548.cpp!!!	GLMessage(in from : GLMessage)
  SharedCtor();
  MergeFrom(from);
!!!1697804.cpp!!!	default_instance() : GLMessage
  if (default_instance_ == NULL) protobuf_AddDesc_gltrace_2eproto();  return *default_instance_;
!!!1697932.cpp!!!	Swap(inout other : GLMessage) : void
  if (other != this) {
    std::swap(context_id_, other->context_id_);
    std::swap(start_time_, other->start_time_);
    std::swap(duration_, other->duration_);
    std::swap(function_, other->function_);
    args_.Swap(&other->args_);
    std::swap(returnvalue_, other->returnvalue_);
    std::swap(fb_, other->fb_);
    std::swap(threadtime_, other->threadtime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    std::swap(_cached_size_, other->_cached_size_);
  }
!!!1698060.cpp!!!	New() : GLMessage
  return new GLMessage;
!!!1698188.cpp!!!	CheckTypeAndMergeFrom(in from : ::google::protobuf::MessageLite) : void
  MergeFrom(*::google::protobuf::down_cast<const GLMessage*>(&from));
!!!1698316.cpp!!!	CopyFrom(in from : GLMessage) : void
  if (&from == this) return;
  Clear();
  MergeFrom(from);
!!!1698444.cpp!!!	MergeFrom(in from : GLMessage) : void
  GOOGLE_CHECK_NE(&from, this);
  args_.MergeFrom(from.args_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_context_id(from.context_id());
    }
    if (from._has_bit(1)) {
      set_start_time(from.start_time());
    }
    if (from._has_bit(2)) {
      set_duration(from.duration());
    }
    if (from._has_bit(3)) {
      set_function(from.function());
    }
    if (from._has_bit(5)) {
      mutable_returnvalue()->::android::gltrace::GLMessage_DataType::MergeFrom(from.returnvalue());
    }
    if (from._has_bit(6)) {
      mutable_fb()->::android::gltrace::GLMessage_FrameBuffer::MergeFrom(from.fb());
    }
    if (from._has_bit(7)) {
      set_threadtime(from.threadtime());
    }
  }
!!!1698572.cpp!!!	Clear() : void
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    context_id_ = 0;
    start_time_ = GOOGLE_LONGLONG(0);
    duration_ = 0;
    function_ = 3000;
    if (_has_bit(5)) {
      if (returnvalue_ != NULL) returnvalue_->::android::gltrace::GLMessage_DataType::Clear();
    }
    if (_has_bit(6)) {
      if (fb_ != NULL) fb_->::android::gltrace::GLMessage_FrameBuffer::Clear();
    }
    threadtime_ = 0;
  }
  args_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
!!!1698700.cpp!!!	IsInitialized() : bool
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  
  for (int i = 0; i < args_size(); i++) {
    if (!this->args(i).IsInitialized()) return false;
  }
  if (has_returnvalue()) {
    if (!this->returnvalue().IsInitialized()) return false;
  }
  if (has_fb()) {
    if (!this->fb().IsInitialized()) return false;
  }
  return true;
!!!1698828.cpp!!!	ByteSize() : int
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 context_id = 1;
    if (has_context_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->context_id());
    }
    
    // required int64 start_time = 2;
    if (has_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start_time());
    }
    
    // required int32 duration = 3;
    if (has_duration()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->duration());
    }
    
    // required .android.gltrace.GLMessage.Function function = 4 [default = invalid];
    if (has_function()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->function());
    }
    
    // optional .android.gltrace.GLMessage.DataType returnValue = 6;
    if (has_returnvalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->returnvalue());
    }
    
    // optional .android.gltrace.GLMessage.FrameBuffer fb = 7;
    if (has_fb()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->fb());
    }
    
    // optional int32 threadtime = 8;
    if (has_threadtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->threadtime());
    }
    
  }
  // repeated .android.gltrace.GLMessage.DataType args = 5;
  total_size += 1 * this->args_size();
  for (int i = 0; i < this->args_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->args(i));
  }
  
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
!!!1698956.cpp!!!	MergePartialFromCodedStream(inout input : ::google::protobuf::io::CodedInputStream) : bool
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 context_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &context_id_)));
          _set_bit(0);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_start_time;
        break;
      }
      
      // required int64 start_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_start_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_time_)));
          _set_bit(1);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_duration;
        break;
      }
      
      // required int32 duration = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_duration:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &duration_)));
          _set_bit(2);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_function;
        break;
      }
      
      // required .android.gltrace.GLMessage.Function function = 4 [default = invalid];
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_function:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::android::gltrace::GLMessage_Function_IsValid(value)) {
            set_function(static_cast< ::android::gltrace::GLMessage_Function >(value));
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_args;
        break;
      }
      
      // repeated .android.gltrace.GLMessage.DataType args = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_args:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_args()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_args;
        if (input->ExpectTag(50)) goto parse_returnValue;
        break;
      }
      
      // optional .android.gltrace.GLMessage.DataType returnValue = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_returnValue:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_returnvalue()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_fb;
        break;
      }
      
      // optional .android.gltrace.GLMessage.FrameBuffer fb = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_fb:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_fb()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_threadtime;
        break;
      }
      
      // optional int32 threadtime = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_threadtime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &threadtime_)));
          _set_bit(7);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
  return true;
#undef DO_
!!!1699084.cpp!!!	SerializeWithCachedSizes(inout output : ::google::protobuf::io::CodedOutputStream) : void
  // required int32 context_id = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->context_id(), output);
  }
  
  // required int64 start_time = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->start_time(), output);
  }
  
  // required int32 duration = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->duration(), output);
  }
  
  // required .android.gltrace.GLMessage.Function function = 4 [default = invalid];
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->function(), output);
  }
  
  // repeated .android.gltrace.GLMessage.DataType args = 5;
  for (int i = 0; i < this->args_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      5, this->args(i), output);
  }
  
  // optional .android.gltrace.GLMessage.DataType returnValue = 6;
  if (_has_bit(5)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      6, this->returnvalue(), output);
  }
  
  // optional .android.gltrace.GLMessage.FrameBuffer fb = 7;
  if (_has_bit(6)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      7, this->fb(), output);
  }
  
  // optional int32 threadtime = 8;
  if (_has_bit(7)) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->threadtime(), output);
  }
  
!!!1699340.cpp!!!	SharedCtor() : void
  _cached_size_ = 0;
  context_id_ = 0;
  start_time_ = GOOGLE_LONGLONG(0);
  duration_ = 0;
  function_ = 3000;
  returnvalue_ = NULL;
  fb_ = NULL;
  threadtime_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
!!!1699468.cpp!!!	SharedDtor() : void
  if (this != default_instance_) {
    delete returnvalue_;
    delete fb_;
  }
!!!1699596.cpp!!!	SetCachedSize(in size : int) : void
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
!!!1699724.cpp!!!	GetTypeName() : ::std::string
  return "android.gltrace.GLMessage";
!!!1699980.cpp!!!	has_context_id() : bool
  return _has_bit(0);
!!!1700108.cpp!!!	clear_context_id() : void
  context_id_ = 0;
  _clear_bit(0);
!!!1700236.cpp!!!	context_id() : ::google::protobuf::int32
  return context_id_;
!!!1700364.cpp!!!	set_context_id(in value : ::google::protobuf::int32) : void
  _set_bit(0);
  context_id_ = value;
!!!1700492.cpp!!!	has_start_time() : bool
  return _has_bit(1);
!!!1700620.cpp!!!	clear_start_time() : void
  start_time_ = GOOGLE_LONGLONG(0);
  _clear_bit(1);
!!!1700748.cpp!!!	start_time() : ::google::protobuf::int64
  return start_time_;
!!!1700876.cpp!!!	set_start_time(in value : ::google::protobuf::int64) : void
  _set_bit(1);
  start_time_ = value;
!!!1701004.cpp!!!	has_duration() : bool
  return _has_bit(2);
!!!1701132.cpp!!!	clear_duration() : void
  duration_ = 0;
  _clear_bit(2);
!!!1701260.cpp!!!	duration() : ::google::protobuf::int32
  return duration_;
!!!1701388.cpp!!!	set_duration(in value : ::google::protobuf::int32) : void
  _set_bit(2);
  duration_ = value;
!!!1701516.cpp!!!	has_function() : bool
  return _has_bit(3);
!!!1701644.cpp!!!	clear_function() : void
  function_ = 3000;
  _clear_bit(3);
!!!1701772.cpp!!!	function() : GLMessage_Function
  return static_cast< ::android::gltrace::GLMessage_Function >(function_);
!!!1701900.cpp!!!	set_function(in value : GLMessage_Function) : void
  GOOGLE_DCHECK(::android::gltrace::GLMessage_Function_IsValid(value));
  _set_bit(3);
  function_ = value;
!!!1702028.cpp!!!	args_size() : int
  return args_.size();
!!!1702156.cpp!!!	clear_args() : void
  args_.Clear();
!!!1702284.cpp!!!	args(in index : int) : GLMessage_DataType
  return args_.Get(index);
!!!1702412.cpp!!!	mutable_args(in index : int) : GLMessage_DataType
  return args_.Mutable(index);
!!!1702540.cpp!!!	add_args() : GLMessage_DataType
  return args_.Add();
!!!1702668.cpp!!!	args() : ::google::protobuf::RepeatedPtrField< ::android::gltrace::GLMessage_DataType >
  return args_;
!!!1702796.cpp!!!	mutable_args() : ::google::protobuf::RepeatedPtrField< ::android::gltrace::GLMessage_DataType >
  return &args_;
!!!1702924.cpp!!!	has_returnvalue() : bool
  return _has_bit(5);
!!!1703052.cpp!!!	clear_returnvalue() : void
  if (returnvalue_ != NULL) returnvalue_->::android::gltrace::GLMessage_DataType::Clear();
  _clear_bit(5);
!!!1703180.cpp!!!	returnvalue() : GLMessage_DataType
  return returnvalue_ != NULL ? *returnvalue_ : *default_instance_->returnvalue_;
!!!1703308.cpp!!!	mutable_returnvalue() : GLMessage_DataType
  _set_bit(5);
  if (returnvalue_ == NULL) returnvalue_ = new ::android::gltrace::GLMessage_DataType;
  return returnvalue_;
!!!1703436.cpp!!!	has_fb() : bool
  return _has_bit(6);
!!!1703564.cpp!!!	clear_fb() : void
  if (fb_ != NULL) fb_->::android::gltrace::GLMessage_FrameBuffer::Clear();
  _clear_bit(6);
!!!1703692.cpp!!!	fb() : GLMessage_FrameBuffer
  return fb_ != NULL ? *fb_ : *default_instance_->fb_;
!!!1703820.cpp!!!	mutable_fb() : GLMessage_FrameBuffer
  _set_bit(6);
  if (fb_ == NULL) fb_ = new ::android::gltrace::GLMessage_FrameBuffer;
  return fb_;
!!!1703948.cpp!!!	has_threadtime() : bool
  return _has_bit(7);
!!!1704076.cpp!!!	clear_threadtime() : void
  threadtime_ = 0;
  _clear_bit(7);
!!!1704204.cpp!!!	threadtime() : ::google::protobuf::int32
  return threadtime_;
!!!1704332.cpp!!!	set_threadtime(in value : ::google::protobuf::int32) : void
  _set_bit(7);
  threadtime_ = value;
!!!1705228.cpp!!!	InitAsDefaultInstance() : void
  returnvalue_ = const_cast< ::android::gltrace::GLMessage_DataType*>(&::android::gltrace::GLMessage_DataType::default_instance());
  fb_ = const_cast< ::android::gltrace::GLMessage_FrameBuffer*>(&::android::gltrace::GLMessage_FrameBuffer::default_instance());
