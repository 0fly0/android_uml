class ArrayInitializerFormatter
!!!13037324.java!!!	ArrayInitializerFormatter(inout out : PrintStream, in width : int, in indent : String)
        mOut = out;
        mMaxWidth = width - indent.length();
        mIndent = indent;
!!!13037452.java!!!	flush() : void
        if (mBuffer.length() == 0) {
            return;
        }
        final int lastIndex = mCurrentIndex - 1;
        if (mBufferedIndex == lastIndex) {
            mOut.format("%s/* %d */ %s\n", mIndent, mBufferedIndex, mBuffer);
        } else if (mBufferedIndex == lastIndex - 1) {
            final String[] elements = mBuffer.toString().split(" ");
            mOut.format("%s/* %d */ %s\n"
                    + "%s/* %d */ %s\n",
                    mIndent, mBufferedIndex, elements[0],
                    mIndent, lastIndex, elements[1]);
        } else {
            mOut.format("%s/* %d~ */\n"
                    + "%s%s\n"
                    + "%s/* ~%d */\n", mIndent, mBufferedIndex,
                    mIndent, mBuffer,
                    mIndent, lastIndex);
        }
        mBuffer.setLength(0);
        mBufferedLen = 0;
!!!13037580.java!!!	outCommentLines(in lines : String) : void
        flush();
        mOut.print(lines);
        mFixedElement = null;
!!!13037708.java!!!	outElement(in element : String) : void
        if (!element.equals(mFixedElement)) {
            flush();
            mBufferedIndex = mCurrentIndex;
        }
        final int nextLen = mBufferedLen + " ".length() + element.length();
        if (mBufferedLen != 0 && nextLen < mMaxWidth) {
            mBuffer.append(' ');
            mBuffer.append(element);
            mBufferedLen = nextLen;
        } else {
            if (mBufferedLen != 0) {
                mBuffer.append('\n');
                mBuffer.append(mIndent);
            }
            mBuffer.append(element);
            mBufferedLen = element.length();
        }
        mCurrentIndex++;
        mFixedElement = element;
