class MyMethodVisitor
!!!9573516.java!!!	MyMethodVisitor()
                super(Opcodes.ASM4);
!!!9573644.java!!!	visitAnnotationDefault() : AnnotationVisitor
                return new MyAnnotationVisitor();
!!!9573772.java!!!	visitCode() : void
                // pass
!!!9573900.java!!!	visitFieldInsn(in opcode : int, in owner : String, in name : String, in desc : String) : void
                // name is the field's name.
                considerName(name);
                // desc is the field's descriptor (see Type).
                considerDesc(desc);
!!!9574028.java!!!	visitFrame(in type : int, in local : int, inout local2 : Object, in stack : int, inout stack2 : Object) : void
                // pass
!!!9574156.java!!!	visitIincInsn(in var : int, in increment : int) : void
                // pass -- an IINC instruction
!!!9574284.java!!!	visitInsn(in opcode : int) : void
                // pass -- a zero operand instruction
!!!9574412.java!!!	visitIntInsn(in opcode : int, in operand : int) : void
                // pass -- a single int operand instruction
!!!9574540.java!!!	visitJumpInsn(in opcode : int, inout label : Label) : void
                // pass -- a jump instruction
!!!9574668.java!!!	visitLabel(inout label : Label) : void
                // pass -- a label target
!!!9574796.java!!!	visitLdcInsn(inout cst : Object) : void
                if (cst instanceof Type) {
                    considerType((Type) cst);
                }
!!!9574924.java!!!	visitLineNumber(in line : int, inout start : Label) : void
                // pass
!!!9575052.java!!!	visitLocalVariable(in name : String, in desc : String, in signature : String, inout start : Label, inout end : Label, in index : int) : void
                // desc is the type descriptor of this local variable.
                considerDesc(desc);
                // signature is the type signature of this local variable. May be null if the local
                // variable type does not use generic types.
                considerSignature(signature);
!!!9575180.java!!!	visitLookupSwitchInsn(inout dflt : Label, inout keys : int, inout labels : Label) : void
                // pass -- a lookup switch instruction
!!!9575308.java!!!	visitMaxs(in maxStack : int, in maxLocals : int) : void
                // pass
!!!9575436.java!!!	visitMethodInsn(in opcode : int, in owner : String, in name : String, in desc : String) : void

                // owner is the internal name of the method's owner class
                considerName(owner);
                // desc is the method's descriptor (see Type).
                considerDesc(desc);
!!!9575564.java!!!	visitMultiANewArrayInsn(in desc : String, in dims : int) : void

                // desc an array type descriptor.
                considerDesc(desc);
!!!9575692.java!!!	visitParameterAnnotation(in parameter : int, in desc : String, inout visible : boolean) : AnnotationVisitor
                // desc is the class descriptor of the annotation class.
                considerDesc(desc);
                return new MyAnnotationVisitor();
!!!9575820.java!!!	visitTableSwitchInsn(in min : int, in max : int, inout dflt : Label, inout labels : Label) : void
                // pass -- table switch instruction

!!!9575948.java!!!	visitTryCatchBlock(inout start : Label, inout end : Label, inout handler : Label, in type : String) : void
                // type is the internal name of the type of exceptions handled by the handler,
                // or null to catch any exceptions (for "finally" blocks).
                considerName(type);
!!!9576076.java!!!	visitTypeInsn(in opcode : int, in type : String) : void
                // type is the operand of the instruction to be visited. This operand must be the
                // internal name of an object or array class.
                considerName(type);
!!!9576204.java!!!	visitVarInsn(in opcode : int, in var : int) : void
                // pass -- local variable instruction
