class ByteArrayOutputStream
!!!153883.java!!!	ByteArrayOutputStream()
        buf = new byte[32];
!!!154011.java!!!	ByteArrayOutputStream(in size : int)
        if (size >= 0) {
            buf = new byte[size];
        } else {
            throw new IllegalArgumentException("size < 0");
        }
!!!154139.java!!!	close() : void
        /**
         * Although the spec claims "A closed stream cannot perform output
         * operations and cannot be reopened.", this implementation must do
         * nothing.
         */
        super.close();
!!!154267.java!!!	expand(in i : int) : void
        /* Can the buffer handle @i more bytes, if not expand it */
        if (count + i <= buf.length) {
            return;
        }

        byte[] newbuf = new byte[(count + i) * 2];
        System.arraycopy(buf, 0, newbuf, 0, count);
        buf = newbuf;
!!!154395.java!!!	reset() : void
        count = 0;
!!!154523.java!!!	size() : int
        return count;
!!!154651.java!!!	toByteArray() : byte
        byte[] newArray = new byte[count];
        System.arraycopy(buf, 0, newArray, 0, count);
        return newArray;
!!!154779.java!!!	toString() : String
        return new String(buf, 0, count);
!!!154907.java!!!	toString(in hibyte : int) : String
        char[] newBuf = new char[size()];
        for (int i = 0; i < newBuf.length; i++) {
            newBuf[i] = (char) (((hibyte & 0xff) << 8) | (buf[i] & 0xff));
        }
        return new String(newBuf);
!!!155035.java!!!	toString(inout charsetName : String) : String
        return new String(buf, 0, count, charsetName);
!!!155163.java!!!	write(inout buffer : byte, in offset : int, in len : int) : void
        Arrays.checkOffsetAndCount(buffer.length, offset, len);
        if (len == 0) {
            return;
        }
        expand(len);
        System.arraycopy(buffer, offset, buf, this.count, len);
        this.count += len;
!!!155291.java!!!	write(in oneByte : int) : void
        if (count == buf.length) {
            expand(1);
        }
        buf[count++] = (byte) oneByte;
!!!155419.java!!!	writeTo(inout out : OutputStream) : void
        out.write(buf, 0, count);
