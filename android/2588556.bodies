class PlatformOutputSettingsHandler
!!!10992012.cpp!!!	StaticInit(in av_settings : sp<AVSettings>) : PlatformOutputSettingsHandler
  ALOGD("StaticInit");
  PlatformOutputSettingsHandler* output_handler = new berlin::BerlinOutputHandler();
  CHECK(output_handler != 0);
  if (!output_handler->Init(av_settings)) {
      ALOGE("Output handler init fail");
      return NULL;
  }
  return output_handler;
!!!10993036.cpp!!!	setParameter(in key : int32_t, in request : Parcel) : status_t
    return android::INVALID_OPERATION;
!!!10993164.cpp!!!	getParameter(in key : int32_t, inout reply : Parcel) : status_t
    if (key == GET_UI_REC) {
        int32_t left, right, top, bottom;
        getUIRectangle(&left, &right, &top, &bottom);
        reply->writeInt32(left);
        reply->writeInt32(top);
        reply->writeInt32(right);
        reply->writeInt32(bottom);
        ALOGD("getParameter ui rectangle (%d,%d,%d,%d)", left, top, right, bottom);
        return android::OK;
    }

    return android::INVALID_OPERATION;
!!!10993292.cpp!!!	invoke(in request : Parcel, inout reply : Parcel) : status_t
    return android::INVALID_OPERATION;
!!!10993676.cpp!!!	binderDied(in who : wp<IBinder>) : void
    ALOGD("binderDied");
!!!10993804.cpp!!!	getUIRectangle(inout left : int32_t, inout right : int32_t, inout top : int32_t, inout bottom : int32_t) : status_t
    *left = 0; *right = 0; *top = 0; *bottom = 0;
    char property[PROPERTY_VALUE_MAX];
    property_get("ro.sf.ui_xres", property, "0");
    *right = atoi(property);
    property_get("ro.sf.ui_yres", property, "0");
    *bottom = atoi(property);
    if (*right && *bottom) {
        // Do nothing
    } else {
        // Compute UI rectangle based on ro.sf.lcd_density.
        // TODO: Fix this on JB
        if (property_get("ro.sf.lcd_density", property, "320") <= 0) {
            ALOGW("ro.sf.lcd_density not defined, using 320 dpi by default.");
            strcpy(property, "320");
        }
        double density = atof(property);
        *right = (1920.0 / 320.0) * density + 0.5;
        *bottom =  (1080.0 / 320.0) * density + 0.5;
    }
    return android::OK;
