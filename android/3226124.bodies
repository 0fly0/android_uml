class PrivacySafetySettings
!!!13865228.java!!!	onCreate(inout icicle : Bundle) : void
        super.onCreate(icicle);
        addPreferencesFromResource(R.xml.privacy_safety_settings);

        final PreferenceScreen screen = getPreferenceScreen();

        initUI();
!!!13865356.java!!!	initUI() : void
        mCheckinLoggingEnabled = findPreference(CHECKIN_LOGGING_ENABLED_KEY);
        mSafeSearchLevel = (ListPreference) findPreference(SAFE_SEARCH_LEVEL_KEY);
!!!13865484.java!!!	onResume() : void
        super.onResume();
        final Activity activity = getActivity();
        if (Secure.isCheckinUsageLoggingEnabled(getContentResolver())) {
            mCheckinLoggingEnabled.setSummary(R.string.checkin_logging_enabled_summary_on);
        } else {
            mCheckinLoggingEnabled.setSummary(R.string.checkin_logging_enabled_summary_off);
        }
        mSafeSearchLevel.setValue(Preferences.getSafeSearchLevel(activity).name());
        getPreferenceScreen().getSharedPreferences()
                .registerOnSharedPreferenceChangeListener(this);
!!!13865612.java!!!	onPause() : void
        super.onPause();
        getPreferenceScreen().getSharedPreferences()
                .unregisterOnSharedPreferenceChangeListener(this);
!!!13865740.java!!!	onSharedPreferenceChanged(inout preferences : SharedPreferences, in key : String) : void
        if (key.equals(SAFE_SEARCH_LEVEL_KEY)) {
            final String levelName = mSafeSearchLevel.getValue();
            Preferences.SafeSearchLevel levelEnum;
            try {
                levelEnum = Preferences.SafeSearchLevel.valueOf(levelName);
            } catch (IllegalArgumentException e) {
                levelEnum = Preferences.DEFAULT_SAFE_SEARCH_LEVEL;
            }
            Preferences.setSafeSearchLevel(getActivity(), levelEnum);
        }
