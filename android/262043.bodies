class CopyOnWriteArraySet
!!!1518363.java!!!	CopyOnWriteArraySet()
        al = new CopyOnWriteArrayList<E>();
!!!1518491.java!!!	CopyOnWriteArraySet(inout c : Collection)
        al = new CopyOnWriteArrayList<E>();
        al.addAllAbsent(c);
!!!1518619.java!!!	size() : int
        return al.size();
!!!1518747.java!!!	isEmpty() : boolean
        return al.isEmpty();
!!!1518875.java!!!	contains(inout o : Object) : boolean
        return al.contains(o);
!!!1519003.java!!!	toArray() : Object
        return al.toArray();
!!!1519131.java!!!	toArray(inout a : T) : T
        return al.toArray(a);
!!!1519259.java!!!	clear() : void
        al.clear();
!!!1519387.java!!!	remove(inout o : Object) : boolean
        return al.remove(o);
!!!1519515.java!!!	add(inout e : E) : boolean
        return al.addIfAbsent(e);
!!!1519643.java!!!	containsAll(inout c : Collection) : boolean
        return al.containsAll(c);
!!!1519771.java!!!	addAll(inout c : Collection) : boolean
        return al.addAllAbsent(c) > 0;
!!!1519899.java!!!	removeAll(inout c : Collection) : boolean
        return al.removeAll(c);
!!!1520027.java!!!	retainAll(inout c : Collection) : boolean
        return al.retainAll(c);
!!!1520155.java!!!	iterator() : Iterator
        return al.iterator();
!!!1520283.java!!!	equals(inout o : Object) : boolean
        if (o == this)
            return true;
        if (!(o instanceof Set))
            return false;
        Set<?> set = (Set<?>)(o);
        Iterator<?> it = set.iterator();

        // Uses O(n^2) algorithm that is only appropriate
        // for small sets, which CopyOnWriteArraySets should be.

        //  Use a single snapshot of underlying array
        Object[] elements = al.getArray();
        int len = elements.length;
        // Mark matched elements to avoid re-checking
        boolean[] matched = new boolean[len];
        int k = 0;
        outer: while (it.hasNext()) {
            if (++k > len)
                return false;
            Object x = it.next();
            for (int i = 0; i < len; ++i) {
                if (!matched[i] && eq(x, elements[i])) {
                    matched[i] = true;
                    continue outer;
                }
            }
            return false;
        }
        return k == len;
!!!1520411.java!!!	eq(inout o1 : Object, inout o2 : Object) : boolean
        return (o1 == null) ? o2 == null : o1.equals(o2);
