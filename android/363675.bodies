class OpenSSLDSAKeyPairGenerator
!!!2412827.java!!!	generateKeyPair() : KeyPair
        final byte[] seed;
        if (random == null) {
            seed = null;
        } else {
            seed = new byte[20];
            random.nextBytes(seed);
        }

        final OpenSSLKey key = new OpenSSLKey(NativeCrypto.DSA_generate_key(primeBits, seed, g, p,
                q));

        final OpenSSLDSAPrivateKey privKey = new OpenSSLDSAPrivateKey(key);
        final OpenSSLDSAPublicKey pubKey = new OpenSSLDSAPublicKey(key);

        return new KeyPair(pubKey, privKey);
!!!2412955.java!!!	initialize(in keysize : int, inout random : SecureRandom) : void
        primeBits = keysize;
        this.random = random;
!!!2413083.java!!!	initialize(inout params : AlgorithmParameterSpec, inout random : SecureRandom) : void
        this.random = random;

        if (params instanceof DSAParameterSpec) {
            DSAParameterSpec dsaParams = (DSAParameterSpec) params;

            BigInteger gInt = dsaParams.getG();
            if (gInt != null) {
                g = gInt.toByteArray();
            }

            BigInteger pInt = dsaParams.getP();
            if (pInt != null) {
                p = pInt.toByteArray();
            }

            BigInteger qInt = dsaParams.getQ();
            if (qInt != null) {
                q = qInt.toByteArray();
            }
        } else if (params != null) {
            throw new InvalidAlgorithmParameterException("Params must be DSAParameterSpec");
        }
