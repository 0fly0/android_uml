class DynamicOmxCore
!!!11178892.cpp!!!	DynamicOmxCore(in coreName : OMX_STRING)
  mCoreHandle = dlopen(coreName, RTLD_NOW);
!!!11179020.cpp!!!	~DynamicOmxCore()
  if (mCoreHandle != NULL) {
    if (mInited) {
      (*mDeinitFunc)();
      mInited = OMX_FALSE;
    }
    dlclose(mCoreHandle);
    mCoreHandle = NULL;
  }
!!!11179148.cpp!!!	init() : OMX_ERRORTYPE
  OMX_ERRORTYPE err = OMX_ErrorNone;
  if (NULL == mCoreHandle) {
    return OMX_ErrorUndefined;
  }
  if (OMX_FALSE == mInited) {
    mInitFunc = (InitFunc)dlsym(mCoreHandle, "OMX_Init");
    mDeinitFunc = (DeinitFunc)dlsym(mCoreHandle, "OMX_Deinit");
    mComponentNameEnumFunc =
        (ComponentNameEnumFunc)dlsym(mCoreHandle, "OMX_ComponentNameEnum");
    mGetHandleFunc = (GetHandleFunc)dlsym(mCoreHandle, "OMX_GetHandle");
    mFreeHandleFunc = (FreeHandleFunc)dlsym(mCoreHandle, "OMX_FreeHandle");
    mGetRolesOfComponentFunc =
        (GetRolesOfComponentFunc)dlsym(mCoreHandle, "OMX_GetRolesOfComponent");
    mGetComponentsOfRoleFunc =
        (GetComponentsOfRoleFunc)dlsym(mCoreHandle, "OMX_GetComponentsOfRole");
    mSetupTunnelFunc = (SetupTunnelFunc)dlsym(mCoreHandle, "OMX_SetupTunnel");
    err = (*mInitFunc)();
    if (err == OMX_ErrorNone)  {
      mInited = OMX_TRUE;
    }
  }
  return err;
!!!11179276.cpp!!!	deinit() : OMX_ERRORTYPE
  OMX_ERRORTYPE err = OMX_ErrorNone;
  if (mCoreHandle != NULL) {
    if (mInited) {
      err = (*mDeinitFunc)();
      mInited = OMX_FALSE;
    }
  }
  return err;
!!!11179404.cpp!!!	getHandle(inout handle : OMX_HANDLETYPE, in componentName : OMX_STRING, in appData : OMX_PTR, inout callBacks : OMX_CALLBACKTYPE) : OMX_ERRORTYPE
  return (*mGetHandleFunc)(handle, componentName, appData, callBacks);
!!!11179532.cpp!!!	freeHandle(in hComponent : OMX_HANDLETYPE) : OMX_ERRORTYPE
  return (*mFreeHandleFunc)(hComponent);
!!!11179660.cpp!!!	setupTunnel(in hOutput : OMX_HANDLETYPE, in nPortOutput : OMX_U32, in hInput : OMX_HANDLETYPE, in nPortInput : OMX_U32) : OMX_ERRORTYPE
  return (*mSetupTunnelFunc)(hOutput, nPortOutput, hInput, nPortInput);
!!!11179788.cpp!!!	componentNameEnum(in componentName : OMX_STRING, in nameLength : OMX_U32, in index : OMX_U32) : OMX_ERRORTYPE
  return (*mComponentNameEnumFunc)(componentName, nameLength, index);
!!!11179916.cpp!!!	getComponentsOfRole(in role : OMX_STRING, inout pNumComps : OMX_U32, inout compNames : OMX_U8) : OMX_ERRORTYPE
  return (*mGetComponentsOfRoleFunc)(role, pNumComps, compNames);
!!!11180044.cpp!!!	getRolesOfComponent(in compName : OMX_STRING, inout pNumRoles : OMX_U32, inout roles : OMX_U8) : OMX_ERRORTYPE
  return (*mGetRolesOfComponentFunc)(compName, pNumRoles, roles);
!!!11180172.cpp!!!	getContentPipe(inout hPipe : OMX_HANDLETYPE, in szURI : OMX_STRING) : OMX_ERRORTYPE
  return OMX_ErrorNone;
!!!11180300.cpp!!!	teardownTunnel(in hOutput : OMX_HANDLETYPE, in nPortOutput : OMX_U32, in hInput : OMX_HANDLETYPE, in nPortInput : OMX_U32) : OMX_ERRORTYPE
  return OMX_ErrorNone;
!!!11180428.cpp!!!	enumComponentOfRole(in compName : OMX_STRING, in role : OMX_STRING, in nIndex : OMX_U32) : OMX_ERRORTYPE
  return OMX_ErrorNone;
!!!11180556.cpp!!!	enumRoleOfComponent(in role : OMX_STRING, in compName : OMX_STRING, in nIndex : OMX_U32) : OMX_ERRORTYPE
  return OMX_ErrorNone;
