class GLES20TextureLayer
!!!4515084.java!!!	GLES20TextureLayer(inout isOpaque : boolean)
        int[] layerInfo = new int[2];
        mLayer = GLES20Canvas.nCreateTextureLayer(isOpaque, layerInfo);

        if (mLayer != 0) {
            mTexture = layerInfo[0];
            mFinalizer = new Finalizer(mLayer);
        } else {
            mFinalizer = null;
        }
!!!4515212.java!!!	isValid() : boolean
        return mLayer != 0 && mTexture != 0;
!!!4515340.java!!!	resize(in width : int, in height : int) : boolean
        return isValid();
!!!4515468.java!!!	getCanvas() : HardwareCanvas
        return null;
!!!4515596.java!!!	start(inout currentCanvas : Canvas) : HardwareCanvas
        return null;
!!!4515852.java!!!	getSurfaceTexture() : SurfaceTexture
        if (mSurface == null) {
            mSurface = new SurfaceTexture(mTexture, false);
        }
        return mSurface;
!!!4515980.java!!!	setSurfaceTexture(inout surfaceTexture : SurfaceTexture) : void
        if (mSurface != null) {
            mSurface.release();
        }
        mSurface = surfaceTexture;
        mSurface.attachToGLContext(mTexture);
!!!4516108.java!!!	update(in width : int, in height : int, inout isOpaque : boolean) : void
        super.update(width, height, isOpaque);
        GLES20Canvas.nUpdateTextureLayer(mLayer, width, height, isOpaque, mSurface);
!!!4516236.java!!!	setOpaque(inout isOpaque : boolean) : void
        throw new UnsupportedOperationException("Use update(int, int, boolean) instead");
!!!4516364.java!!!	setTransform(inout matrix : Matrix) : void
        GLES20Canvas.nSetTextureLayerTransform(mLayer, matrix.native_instance);
