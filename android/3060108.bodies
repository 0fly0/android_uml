class InfoListener
!!!12661132.java!!!	onInfo(inout mp : MediaPlayer, in what : int, in extra : int) : boolean
            GtvMediaPlayer gmp = null;
            if (mp instanceof GtvMediaPlayer) {
                gmp = (GtvMediaPlayer) mp;
            } else {
                Log.e(TAG, "mp should be an instance of GtvMediaPlayer in GtvVideoViewTest.");
                return false;
            }
            int intValue;
            Log.i(TAG, "Got Info: " + what + " " + extra);
            switch (what) {
                case GtvMediaPlayer.MEDIA_INFO_NETWORK_BANDWIDTH:
                    Log.d(TAG, "bandwidth: " + extra + " kbps");
                    mStatusNetworkBandwidthStr = String.format("%10d kbps", extra);
                    break;
                case GtvMediaPlayer.MEDIA_INFO_SEGMENT_DOWNLOADED:
                    try {
                        Log.d(TAG, "url: " + gmp.getOnInfoMetadata().getString(
                                OnInfoMetadata.MEDIA_INFO_META_SEGMENT_URL));
                    } catch (IllegalArgumentException e) {
                        Log.e(TAG, "There is no information for MEDIA_INFO_META_SEGMENT_URL" +
                                " in MEDIA_INFO_SEGMENT_DOWNLOADED notification");
                    }
                    try {
                        Log.d(TAG, "download duration (us): " + gmp.getOnInfoMetadata().getLong(
                                OnInfoMetadata.MEDIA_INFO_META_DOWNLOAD_DURATION_US));
                    } catch (IllegalArgumentException e) {
                        Log.e(TAG,
                                "There is no information for MEDIA_INFO_META_DOWNLOAD_DURATION_US" +
                                " in MEDIA_INFO_SEGMENT_DOWNLOADED notification");
                    }
                    try {
                        Log.d(TAG, "segment size: " + gmp.getOnInfoMetadata().getInteger(
                                OnInfoMetadata.MEDIA_INFO_META_SEGMENT_SIZE));
                    } catch (IllegalArgumentException e) {
                        Log.e(TAG, "There is no information for MEDIA_INFO_META_SEGMENT_SIZE" +
                                " in MEDIA_INFO_SEGMENT_DOWNLOADED notification");
                    }
                    break;
                case GtvMediaPlayer.MEDIA_INFO_MAX_BUFFER_SIZE:
                    mMaxBufferSize = extra;
                    break;
                case GtvMediaPlayer.MEDIA_INFO_FPS:
                    mStatusFpsStr = String.format("%4d", extra);
                    try {
                        mStatusDroppedFpsStr = String.format("%4d",
                                gmp.getOnInfoMetadata().getInteger(
                                        OnInfoMetadata.MEDIA_INFO_META_DROPPED_FPS));
                    } catch (IllegalArgumentException e) {
                        Log.w(TAG, "Dropped FPS is missing.");
                    }
                    break;
                case GtvMediaPlayer.MEDIA_INFO_AUDIO:
                    OnInfoMetadata meta = gmp.getOnInfoMetadata();
                    try {
                        mStatusAudioBitrateStr = String.format("%10d",
                                gmp.getOnInfoMetadata().getInteger(
                                        OnInfoMetadata.MEDIA_INFO_META_BITRATE));
                    } catch (IllegalArgumentException e) {
                        Log.w(TAG, "Audio bitrate is missing.");
                    }
                    try {
                        mStatusAudioChannelCountStr = String.format("%10d",
                                gmp.getOnInfoMetadata().getInteger(
                                        OnInfoMetadata.MEDIA_INFO_META_CHANNEL_COUNT));
                    } catch (IllegalArgumentException e) {
                        Log.w(TAG, "Channel count is missing.");
                    }
                    try {
                        mStatusAudioSamplingRateStr = String.format("%10d",
                                gmp.getOnInfoMetadata().getInteger(
                                        OnInfoMetadata.MEDIA_INFO_META_SAMPLE_RATE));
                    } catch (IllegalArgumentException e) {
                        Log.w(TAG, "Sampling rate is missing.");
                    }
                    break;
                case GtvMediaPlayer.MEDIA_INFO_VIDEO_BITRATE_CHANGED:
                    Log.d(TAG, "Video bitrate " + extra);
                    mStatusVideoBitrateStr = String.format("%10d", extra);
                    break;
                case GtvMediaPlayer.MEDIA_INFO_AUDIO_BITRATE_CHANGED:
                    Log.d(TAG, "Audio bitrate " + extra);
                    mStatusAudioBitrateStr = String.format("%10d", extra);
                    break;
                case GtvMediaPlayer.MEDIA_INFO_MEDIA_BITRATE_CHANGED:
                    Log.d(TAG, "Media bitrate " + extra);
                    mStatusMediaBitrateStr = String.format("%10d", extra);
                    break;
                case GtvMediaPlayer.MEDIA_INFO_MAX_BUFFERED_MEDIA_DURATION_MS:
                    mMaxBufferDuration = extra;
                    break;
                case GtvMediaPlayer.MEDIA_INFO_BUFFERING_START:
                    if (extra == GtvMediaPlayer.MEDIA_INFO_BUFFERING_WHEN_START) {
                        Log.d(TAG, "Start buffering at the begninning.");
                    } else if(extra == GtvMediaPlayer.MEDIA_INFO_BUFFERING_WHEN_SEEK) {
                        Log.d(TAG, "Start buffering after seek.");
                    } else if (extra == GtvMediaPlayer.MEDIA_INFO_BUFFERING_WHEN_PLAY) {
                        Toast.makeText(GtvVideoViewTest.this,
                                "Buffring", Toast.LENGTH_SHORT).show();
                        Log.d(TAG, "Start buffering while playing.");
                    }
                    break;
                case GtvMediaPlayer.MEDIA_INFO_BUFFERING_END:
                    Log.d(TAG, "End buffering.");
                    break;
            }

            return false;
