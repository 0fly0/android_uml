class AccessibilityService
!!!2136716.java!!!	onServiceConnected() : void

!!!2136844.java!!!	onGesture(in gestureId : int) : boolean
        return false;
!!!2136972.java!!!	getRootInActiveWindow() : AccessibilityNodeInfo
        return AccessibilityInteractionClient.getInstance().getRootInActiveWindow(mConnectionId);
!!!2137100.java!!!	performGlobalAction(in action : int) : boolean
        IAccessibilityServiceConnection connection =
            AccessibilityInteractionClient.getInstance().getConnection(mConnectionId);
        if (connection != null) {
            try {
                return connection.performGlobalAction(action);
            } catch (RemoteException re) {
                Log.w(LOG_TAG, "Error while calling performGlobalAction", re);
            }
        }
        return false;
!!!2137228.java!!!	getServiceInfo() : AccessibilityServiceInfo
        IAccessibilityServiceConnection connection =
            AccessibilityInteractionClient.getInstance().getConnection(mConnectionId);
        if (connection != null) {
            try {
                return connection.getServiceInfo();
            } catch (RemoteException re) {
                Log.w(LOG_TAG, "Error while getting AccessibilityServiceInfo", re);
            }
        }
        return null;
!!!2137356.java!!!	setServiceInfo(inout info : AccessibilityServiceInfo) : void
        mInfo = info;
        sendServiceInfo();
!!!2137484.java!!!	sendServiceInfo() : void
        IAccessibilityServiceConnection connection =
            AccessibilityInteractionClient.getInstance().getConnection(mConnectionId);
        if (mInfo != null && connection != null) {
            try {
                connection.setServiceInfo(mInfo);
                mInfo = null;
                AccessibilityInteractionClient.getInstance().clearCache();
            } catch (RemoteException re) {
                Log.w(LOG_TAG, "Error while setting AccessibilityServiceInfo", re);
            }
        }
!!!2137612.java!!!	onBind(inout intent : Intent) : IBinder
        return new IAccessibilityServiceClientWrapper(this, getMainLooper(), new Callbacks() {
            @Override
            public void onServiceConnected() {
                AccessibilityService.this.onServiceConnected();
            }

            @Override
            public void onInterrupt() {
                AccessibilityService.this.onInterrupt();
            }

            @Override
            public void onAccessibilityEvent(AccessibilityEvent event) {
                AccessibilityService.this.onAccessibilityEvent(event);
            }

            @Override
            public void onSetConnectionId( int connectionId) {
                mConnectionId = connectionId;
            }

            @Override
            public boolean onGesture(int gestureId) {
                return AccessibilityService.this.onGesture(gestureId);
            }
        });
