class NotificationRowLayout
!!!7705868.java!!!	NotificationRowLayout(inout context : Context, inout attrs : AttributeSet)
        this(context, attrs, 0);
!!!7705996.java!!!	NotificationRowLayout(inout context : Context, inout attrs : AttributeSet, in defStyle : int)
        super(context, attrs, defStyle);

        mRealLayoutTransition = new LayoutTransition();
        mRealLayoutTransition.setAnimateParentHierarchy(true);
        setLayoutTransitionsEnabled(true);
        
        setOrientation(LinearLayout.VERTICAL);

        if (DEBUG) {
            setOnHierarchyChangeListener(new ViewGroup.OnHierarchyChangeListener() {
                @Override
                public void onChildViewAdded(View parent, View child) {
                    Slog.d(TAG, "view added: " + child + "; new count: " + getChildCount());
                }
                @Override
                public void onChildViewRemoved(View parent, View child) {
                    Slog.d(TAG, "view removed: " + child + "; new count: " + (getChildCount() - 1));
                }
            });

            setBackgroundColor(0x80FF8000);
        }

        float densityScale = getResources().getDisplayMetrics().density;
        float pagingTouchSlop = ViewConfiguration.get(mContext).getScaledPagingTouchSlop();
        mSwipeHelper = new SwipeHelper(SwipeHelper.X, this, densityScale, pagingTouchSlop);
!!!7706124.java!!!	setLongPressListener(inout listener : OnLongClickListener) : void
        mSwipeHelper.setLongPressListener(listener);
!!!7706252.java!!!	setOnSizeChangedListener(inout l : OnSizeChangedListener) : void
        mOnSizeChangedListener = l;
!!!7706380.java!!!	onWindowFocusChanged(inout hasWindowFocus : boolean) : void
        super.onWindowFocusChanged(hasWindowFocus);
        if (!hasWindowFocus) {
            mSwipeHelper.removeLongPressCallback();
        }
!!!7706508.java!!!	setAnimateBounds(inout anim : boolean) : void
        mAnimateBounds = anim;
!!!7706636.java!!!	logLayoutTransition() : void
        Log.v(TAG, "layout " +
              (mRealLayoutTransition.isChangingLayout() ? "is " : "is not ") +
              "in transition and animations " +
              (mRealLayoutTransition.isRunning() ? "are " : "are not ") +
              "running.");
!!!7706764.java!!!	onInterceptTouchEvent(inout ev : MotionEvent) : boolean
        if (DEBUG) Log.v(TAG, "onInterceptTouchEvent()");
        if (DEBUG) logLayoutTransition();

        return mSwipeHelper.onInterceptTouchEvent(ev) ||
                super.onInterceptTouchEvent(ev);
!!!7706892.java!!!	onTouchEvent(inout ev : MotionEvent) : boolean
        if (DEBUG) Log.v(TAG, "onTouchEvent()");
        if (DEBUG) logLayoutTransition();

        return mSwipeHelper.onTouchEvent(ev) ||
                super.onTouchEvent(ev);
!!!7707020.java!!!	canChildBeDismissed(inout v : View) : boolean
        final View veto = v.findViewById(R.id.veto);
        return (veto != null && veto.getVisibility() != View.GONE);
!!!7707148.java!!!	canChildBeExpanded(inout v : View) : boolean
        return NotificationData.getIsExpandable(v);
!!!7707276.java!!!	setUserExpandedChild(inout v : View, inout userExpanded : boolean) : boolean
        return NotificationData.setUserExpanded(v, userExpanded);
!!!7707404.java!!!	setUserLockedChild(inout v : View, inout userLocked : boolean) : boolean
        return NotificationData.setUserLocked(v, userLocked);
!!!7707532.java!!!	onChildDismissed(inout v : View) : void
        if (DEBUG) Slog.v(TAG, "onChildDismissed: " + v + " mRemoveViews=" + mRemoveViews);
        final View veto = v.findViewById(R.id.veto);
        if (veto != null && veto.getVisibility() != View.GONE && mRemoveViews) {
            veto.performClick();
        }
!!!7707660.java!!!	onBeginDrag(inout v : View) : void
        // We need to prevent the surrounding ScrollView from intercepting us now;
        // the scroll position will be locked while we swipe
        requestDisallowInterceptTouchEvent(true);
!!!7707916.java!!!	getChildAtPosition(inout ev : MotionEvent) : View
        return getChildAtPosition(ev.getX(), ev.getY());
!!!7708044.java!!!	getChildAtRawPosition(in touchX : float, in touchY : float) : View
        int[] location = new int[2];
        getLocationOnScreen(location);
        return getChildAtPosition((float) (touchX - location[0]), (float) (touchY - location[1]));
!!!7708172.java!!!	getChildAtPosition(in touchX : float, in touchY : float) : View
        // find the view under the pointer, accounting for GONE views
        final int count = getChildCount();
        int y = 0;
        int childIdx = 0;
        View slidingChild;
        for (; childIdx < count; childIdx++) {
            slidingChild = getChildAt(childIdx);
            if (slidingChild.getVisibility() == GONE) {
                continue;
            }
            y += slidingChild.getMeasuredHeight();
            if (touchY < y) return slidingChild;
        }
        return null;
!!!7708300.java!!!	getChildContentView(inout v : View) : View
        return v;
!!!7708428.java!!!	onConfigurationChanged(inout newConfig : Configuration) : void
        super.onConfigurationChanged(newConfig);
        float densityScale = getResources().getDisplayMetrics().density;
        mSwipeHelper.setDensityScale(densityScale);
        float pagingTouchSlop = ViewConfiguration.get(mContext).getScaledPagingTouchSlop();
        mSwipeHelper.setPagingTouchSlop(pagingTouchSlop);
!!!7708556.java!!!	setViewRemoval(inout removeViews : boolean) : void
        if (DEBUG) Slog.v(TAG, "setViewRemoval: " + removeViews);
        mRemoveViews = removeViews;
!!!7708684.java!!!	setLayoutTransitionsEnabled(inout b : boolean) : void
        if (b) {
            setLayoutTransition(mRealLayoutTransition);
        } else {
            if (mRealLayoutTransition.isRunning()) {
                mRealLayoutTransition.cancel();
            }
            setLayoutTransition(null);
        }
!!!7708812.java!!!	dismissRowAnimated(inout child : View) : void
        dismissRowAnimated(child, 0);
!!!7708940.java!!!	dismissRowAnimated(inout child : View, in vel : int) : void
        mSwipeHelper.dismissChild(child, vel);
!!!7709068.java!!!	onFinishInflate() : void
        super.onFinishInflate();
        if (DEBUG) setWillNotDraw(false);
!!!7709196.java!!!	onDraw(inout c : Canvas) : void
        super.onDraw(c);
        if (DEBUG) logLayoutTransition();
        if (DEBUG) {
            //Slog.d(TAG, "onDraw: canvas height: " + c.getHeight() + "px; measured height: "
            //        + getMeasuredHeight() + "px");
            c.save();
            c.clipRect(6, 6, c.getWidth() - 6, getMeasuredHeight() - 6,
                    android.graphics.Region.Op.DIFFERENCE);
            c.drawColor(0xFFFF8000);
            c.restore();
        }
!!!7709324.java!!!	onSizeChanged(in w : int, in h : int, in oldw : int, in oldh : int) : void
        if (mOnSizeChangedListener != null) {
            mOnSizeChangedListener.onSizeChanged(this, w, h, oldw, oldh);
        }
