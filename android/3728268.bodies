class DrmOutputStream
!!!15851788.java!!!	DrmOutputStream(inout client : DrmManagerClient, inout file : RandomAccessFile, inout mimeType : String)
        mClient = client;
        mFile = file;

        mSessionId = mClient.openConvertSession(mimeType);
        if (mSessionId == INVALID_SESSION) {
            throw new UnknownServiceException("Failed to open DRM session for " + mimeType);
        }
!!!15851916.java!!!	finish() : void
        final DrmConvertedStatus status = mClient.closeConvertSession(mSessionId);
        if (status.statusCode == STATUS_OK) {
            mFile.seek(status.offset);
            mFile.write(status.convertedData);
            mSessionId = INVALID_SESSION;
        } else {
            throw new IOException("Unexpected DRM status: " + status.statusCode);
        }
!!!15852044.java!!!	close() : void
        if (mSessionId == INVALID_SESSION) {
            Log.w(TAG, "Closing stream without finishing");
        }

        mFile.close();
!!!15852172.java!!!	write(inout buffer : byte, in offset : int, in count : int) : void
        Arrays.checkOffsetAndCount(buffer.length, offset, count);

        final byte[] exactBuffer;
        if (count == buffer.length) {
            exactBuffer = buffer;
        } else {
            exactBuffer = new byte[count];
            System.arraycopy(buffer, offset, exactBuffer, 0, count);
        }

        final DrmConvertedStatus status = mClient.convertData(mSessionId, exactBuffer);
        if (status.statusCode == STATUS_OK) {
            mFile.write(status.convertedData);
        } else {
            throw new IOException("Unexpected DRM status: " + status.statusCode);
        }
!!!15852300.java!!!	write(in oneByte : int) : void
        Streams.writeSingleByte(this, oneByte);
