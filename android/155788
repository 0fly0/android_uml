format 74
"hwui" // framework::base::libs::hwui
  revision 4
  modified_by 27 "shchen"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  cpp_h_dir "/home/shchen/work/jellybean/framework/base/libs/hwui/"
  cpp_src_dir "/home/shchen/work/jellybean/framework/base/libs/hwui/"
  classview 146572 "hwui"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 430220 "CacheLogger"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "/////////////////////////////////////////////////////////////////////////////
 Debug
/////////////////////////////////////////////////////////////////////////////"
      operation 1045772 "CacheLogger"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} {
        INIT_LOGD(\"Creating OpenGL renderer caches\");
    };
"
	
	
	
	
      end
    end

    class 430348 "DisplayListLogBuffer"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 895756 // <generalisation>
	relation 895756 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 895756 // <generalisation>
	  b parent class_ref 430476 // typedef25
      end

      operation 1045900 "DisplayListLogBuffer"
	preserve_cpp_body_indent private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 1046028 "~DisplayListLogBuffer"
	preserve_cpp_body_indent private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      extra_member 136972 "friend"
	
	cpp "
    friend class Singleton<DisplayListLogBuffer>;" ""
	java ""
	php ""
	python ""
	idl ""
      end

      operation 1046156 "writeCommand"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 2
	  param in name "level" explicit_type "int"
	  param in name "op" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1046284 "writeInt"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "value" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//*
// * Store the given value in the buffer and increment/wrap the mEnd
// * and mStart values as appropriate.

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1046412 "outputCommands"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 2
	  param inout name "file" explicit_type "FILE"
	  param in name "opNames" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, const ${t1} * ${p1}[]${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//*
// * Called from DisplayListRenderer to output the current buffer into the
// * specified FILE. This only happens in a dumpsys/bugreport operation.

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, const ${t1} * ${p1}[]${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1046540 "isEmpty"
	cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return (mStart == mEnd);
    };
"
	
	
	
	
      end

      attribute 965644 "mBufferFirst"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " where the memory starts"
      end

      attribute 965772 "mStart"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " where the current command stream starts"
      end

      attribute 965900 "mEnd"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " where the current commands end"
      end

      attribute 966028 "mBufferLast"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " where the buffer memory ends"
      end
    end

    class 430476 "typedef25"
      visibility package stereotype "typedef" explicit_base_type "Singleton<DisplayListLogBuffer>"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
    end

    class 430604 "DisplayList"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * Replays recorded drawing commands."
      operation 1046668 "DisplayList"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 1
	  param in name "recorder" type class_ref 430732 // DisplayListRenderer
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}const ${t0} & ${p0}${)} :
    mTransformMatrix(NULL), mTransformCamera(NULL), mTransformMatrix3D(NULL),
    mStaticMatrix(NULL), mAnimationMatrix(NULL) ${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 1046796 "DisplayList"
	public explicit_return_type "ANDROID_API"
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      class 430860 "Op"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum ${name} {
${items}
};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 966156 "Save"
	  public type class_ref 430860 // Op
	  init_value " 0"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 966284 "Restore"
	  public type class_ref 430860 // Op
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 966412 "RestoreToCount"
	  public type class_ref 430860 // Op
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 966540 "SaveLayer"
	  public type class_ref 430860 // Op
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 966668 "SaveLayerAlpha"
	  public type class_ref 430860 // Op
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 966796 "Translate"
	  public type class_ref 430860 // Op
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 966924 "Rotate"
	  public type class_ref 430860 // Op
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 967052 "Scale"
	  public type class_ref 430860 // Op
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 967180 "Skew"
	  public type class_ref 430860 // Op
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 967308 "SetMatrix"
	  public type class_ref 430860 // Op
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 967436 "ConcatMatrix"
	  public type class_ref 430860 // Op
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 967564 "ClipRect"
	  public type class_ref 430860 // Op
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 967692 "DrawDisplayList"
	  public type class_ref 430860 // Op
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 967820 "DrawLayer"
	  public type class_ref 430860 // Op
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 967948 "DrawBitmap"
	  public type class_ref 430860 // Op
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 968076 "DrawBitmapMatrix"
	  public type class_ref 430860 // Op
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 968204 "DrawBitmapRect"
	  public type class_ref 430860 // Op
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 968332 "DrawBitmapData"
	  public type class_ref 430860 // Op
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 968460 "DrawBitmapMesh"
	  public type class_ref 430860 // Op
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 968588 "DrawPatch"
	  public type class_ref 430860 // Op
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 968716 "DrawColor"
	  public type class_ref 430860 // Op
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 968844 "DrawRect"
	  public type class_ref 430860 // Op
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 968972 "DrawRoundRect"
	  public type class_ref 430860 // Op
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 969100 "DrawCircle"
	  public type class_ref 430860 // Op
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 969228 "DrawOval"
	  public type class_ref 430860 // Op
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 969356 "DrawArc"
	  public type class_ref 430860 // Op
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 969484 "DrawPath"
	  public type class_ref 430860 // Op
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 969612 "DrawLines"
	  public type class_ref 430860 // Op
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 969740 "DrawPoints"
	  public type class_ref 430860 // Op
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 969868 "DrawTextOnPath"
	  public type class_ref 430860 // Op
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 969996 "DrawPosText"
	  public type class_ref 430860 // Op
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 970124 "DrawText"
	  public type class_ref 430860 // Op
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 970252 "ResetShader"
	  public type class_ref 430860 // Op
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 970380 "SetupShader"
	  public type class_ref 430860 // Op
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 970508 "ResetColorFilter"
	  public type class_ref 430860 // Op
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 970636 "SetupColorFilter"
	  public type class_ref 430860 // Op
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 970764 "ResetShadow"
	  public type class_ref 430860 // Op
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 970892 "SetupShadow"
	  public type class_ref 430860 // Op
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 971020 "ResetPaintFilter"
	  public type class_ref 430860 // Op
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 971148 "SetupPaintFilter"
	  public type class_ref 430860 // Op
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 971276 "DrawGLFunction"
	  public type class_ref 430860 // Op
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      class 430988 "ReplayFlag"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum ${name} {
${items}
};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 971404 "kReplayFlag_ClipChildren"
	  public type class_ref 430988 // ReplayFlag
	  init_value " 0x1
    "
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      attribute 971532 "OP_NAMES"
	class_attribute const_attribute public explicit_type "char"
	multiplicity "[]"
	init_value "= {
    \"Save\",
    \"Restore\",
    \"RestoreToCount\",
    \"SaveLayer\",
    \"SaveLayerAlpha\",
    \"Translate\",
    \"Rotate\",
    \"Scale\",
    \"Skew\",
    \"SetMatrix\",
    \"ConcatMatrix\",
    \"ClipRect\",
    \"DrawDisplayList\",
    \"DrawLayer\",
    \"DrawBitmap\",
    \"DrawBitmapMatrix\",
    \"DrawBitmapRect\",
    \"DrawBitmapData\",
    \"DrawBitmapMesh\",
    \"DrawPatch\",
    \"DrawColor\",
    \"DrawRect\",
    \"DrawRoundRect\",
    \"DrawCircle\",
    \"DrawOval\",
    \"DrawArc\",
    \"DrawPath\",
    \"DrawLines\",
    \"DrawPoints\",
    \"DrawTextOnPath\",
    \"DrawPosText\",
    \"DrawText\",
    \"ResetShader\",
    \"SetupShader\",
    \"ResetColorFilter\",
    \"SetupColorFilter\",
    \"ResetShadow\",
    \"SetupShadow\",
    \"ResetPaintFilter\",
    \"SetupPaintFilter\",
    \"DrawGLFunction\"
}"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${multiplicity}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 1046924 "setViewProperties"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 2
	  param inout name "renderer" type class_ref 431116 // OpenGLRenderer
	  param in name "level" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1047052 "outputViewProperties"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 2
	  param inout name "renderer" type class_ref 431116 // OpenGLRenderer
	  param inout name "indent" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1047180 "destroyDisplayListDeferred"
	class_operation preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param inout name "displayList" type class_ref 430604 // DisplayList
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1047308 "outputLogBuffer"
	class_operation preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "fd" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1047436 "initFromDisplayListRenderer"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 2
	  param in name "recorder" type class_ref 430732 // DisplayListRenderer
	  param in name "reusing" explicit_type "bool"
	    defaultvalue "false"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1047564 "replay"
	preserve_cpp_body_indent public return_type class_ref 128268 // status_t
	nparams 4
	  param inout name "renderer" type class_ref 431116 // OpenGLRenderer
	  param inout name "dirty" type class_ref 431244 // Rect
	  param in name "flags" explicit_type "int32_t"
	  param in name "level" explicit_type "uint32_t"
	    defaultvalue "0"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} & ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//*
// * Changes to replay(), specifically those involving opcode or parameter changes, should be mimicked
// * in the output() function, since that function processes the same list of opcodes for the
// * purposes of logging display list info for a given view.

${inline}${type} ${class}::${name}${(}${t0} & ${p0}, ${t1} & ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1047692 "output"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 2
	  param inout name "renderer" type class_ref 431116 // OpenGLRenderer
	  param in name "level" explicit_type "uint32_t"
	    defaultvalue "0"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//*
// * This function is a simplified version of replay(), where we simply retrieve and log the
// * display list. This function should remain in sync with the replay() function.

${inline}${type} ${class}::${name}${(}${t0} & ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1047820 "reset"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1047948 "setRenderable"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "renderable" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        mIsRenderable = renderable;
    };
"
	
	
	
	
      end

      operation 1048076 "isRenderable"
	const cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return mIsRenderable;
    };
"
	
	
	
	
      end

      operation 1048204 "setName"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "name" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        if (name) {
            mName.setTo(name);
        }
    };
"
	
	
	
	
      end

      operation 1048332 "setClipChildren"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "clipChildren" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        mClipChildren = clipChildren;
    };
"
	
	
	
	
      end

      operation 1048460 "setStaticMatrix"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "matrix" explicit_type "SkMatrix"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        delete mStaticMatrix;
        mStaticMatrix = new SkMatrix(*matrix);
    };
"
	
	
	
	
      end

      operation 1048588 "setAnimationMatrix"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "matrix" explicit_type "SkMatrix"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        delete mAnimationMatrix;
        if (matrix) {
            mAnimationMatrix = new SkMatrix(*matrix);
        } else {
            mAnimationMatrix = NULL;
        }
    };
"
	
	
	
	
      end

      operation 1048716 "setAlpha"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "alpha" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        alpha = fminf(1.0f, fmaxf(0.0f, alpha));
        if (alpha != mAlpha) {
            mAlpha = alpha;
            mMultipliedAlpha = (int) (255 * alpha);
        }
    };
"
	
	
	
	
      end

      operation 1048844 "setHasOverlappingRendering"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "hasOverlappingRendering" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        mHasOverlappingRendering = hasOverlappingRendering;
    };
"
	
	
	
	
      end

      operation 1048972 "setTranslationX"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "translationX" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        if (translationX != mTranslationX) {
            mTranslationX = translationX;
            mMatrixDirty = true;
            if (mTranslationX == 0.0f && mTranslationY == 0.0f) {
                mMatrixFlags &= ~TRANSLATION;
            } else {
                mMatrixFlags |= TRANSLATION;
            }
        }
    };
"
	
	
	
	
      end

      operation 1049100 "setTranslationY"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "translationY" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        if (translationY != mTranslationY) {
            mTranslationY = translationY;
            mMatrixDirty = true;
            if (mTranslationX == 0.0f && mTranslationY == 0.0f) {
                mMatrixFlags &= ~TRANSLATION;
            } else {
                mMatrixFlags |= TRANSLATION;
            }
        }
    };
"
	
	
	
	
      end

      operation 1049228 "setRotation"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "rotation" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        if (rotation != mRotation) {
            mRotation = rotation;
            mMatrixDirty = true;
            if (mRotation == 0.0f) {
                mMatrixFlags &= ~ROTATION;
            } else {
                mMatrixFlags |= ROTATION;
            }
        }
    };
"
	
	
	
	
      end

      operation 1049356 "setRotationX"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "rotationX" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        if (rotationX != mRotationX) {
            mRotationX = rotationX;
            mMatrixDirty = true;
            if (mRotationX == 0.0f && mRotationY == 0.0f) {
                mMatrixFlags &= ~ROTATION_3D;
            } else {
                mMatrixFlags |= ROTATION_3D;
            }
        }
    };
"
	
	
	
	
      end

      operation 1049484 "setRotationY"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "rotationY" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        if (rotationY != mRotationY) {
            mRotationY = rotationY;
            mMatrixDirty = true;
            if (mRotationX == 0.0f && mRotationY == 0.0f) {
                mMatrixFlags &= ~ROTATION_3D;
            } else {
                mMatrixFlags |= ROTATION_3D;
            }
        }
    };
"
	
	
	
	
      end

      operation 1049612 "setScaleX"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "scaleX" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        if (scaleX != mScaleX) {
            mScaleX = scaleX;
            mMatrixDirty = true;
            if (mScaleX == 1.0f && mScaleY == 1.0f) {
                mMatrixFlags &= ~SCALE;
            } else {
                mMatrixFlags |= SCALE;
            }
        }
    };
"
	
	
	
	
      end

      operation 1049740 "setScaleY"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "scaleY" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        if (scaleY != mScaleY) {
            mScaleY = scaleY;
            mMatrixDirty = true;
            if (mScaleX == 1.0f && mScaleY == 1.0f) {
                mMatrixFlags &= ~SCALE;
            } else {
                mMatrixFlags |= SCALE;
            }
        }
    };
"
	
	
	
	
      end

      operation 1049868 "setPivotX"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "pivotX" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        mPivotX = pivotX;
        mMatrixDirty = true;
        if (mPivotX == 0.0f && mPivotY == 0.0f) {
            mMatrixFlags &= ~PIVOT;
        } else {
            mMatrixFlags |= PIVOT;
        }
        mPivotExplicitlySet = true;
    };
"
	
	
	
	
      end

      operation 1049996 "setPivotY"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "pivotY" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        mPivotY = pivotY;
        mMatrixDirty = true;
        if (mPivotX == 0.0f && mPivotY == 0.0f) {
            mMatrixFlags &= ~PIVOT;
        } else {
            mMatrixFlags |= PIVOT;
        }
        mPivotExplicitlySet = true;
    };
"
	
	
	
	
      end

      operation 1050124 "setCameraDistance"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "distance" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        if (distance != mCameraDistance) {
            mCameraDistance = distance;
            mMatrixDirty = true;
            if (!mTransformCamera) {
                mTransformCamera = new Sk3DView();
                mTransformMatrix3D = new SkMatrix();
            }
            mTransformCamera->setCameraLocation(0, 0, distance);
        }
    };
"
	
	
	
	
      end

      operation 1050252 "setLeft"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "left" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        if (left != mLeft) {
            mLeft = left;
            mWidth = mRight - mLeft;
            if (mMatrixFlags > TRANSLATION && !mPivotExplicitlySet) {
                mMatrixDirty = true;
            }
        }
    };
"
	
	
	
	
      end

      operation 1050380 "setTop"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "top" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        if (top != mTop) {
            mTop = top;
            mHeight = mBottom - mTop;
            if (mMatrixFlags > TRANSLATION && !mPivotExplicitlySet) {
                mMatrixDirty = true;
            }
        }
    };
"
	
	
	
	
      end

      operation 1050508 "setRight"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "right" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        if (right != mRight) {
            mRight = right;
            mWidth = mRight - mLeft;
            if (mMatrixFlags > TRANSLATION && !mPivotExplicitlySet) {
                mMatrixDirty = true;
            }
        }
    };
"
	
	
	
	
      end

      operation 1050636 "setBottom"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "bottom" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        if (bottom != mBottom) {
            mBottom = bottom;
            mHeight = mBottom - mTop;
            if (mMatrixFlags > TRANSLATION && !mPivotExplicitlySet) {
                mMatrixDirty = true;
            }
        }
    };
"
	
	
	
	
      end

      operation 1050764 "setLeftTop"
	cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "left" explicit_type "int"
	  param in name "top" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        if (left != mLeft || top != mTop) {
            mLeft = left;
            mTop = top;
            mWidth = mRight - mLeft;
            mHeight = mBottom - mTop;
            if (mMatrixFlags > TRANSLATION && !mPivotExplicitlySet) {
                mMatrixDirty = true;
            }
        }
    };
"
	
	
	
	
      end

      operation 1050892 "setLeftTopRightBottom"
	cpp_inline public explicit_return_type "void"
	nparams 4
	  param in name "left" explicit_type "int"
	  param in name "top" explicit_type "int"
	  param in name "right" explicit_type "int"
	  param in name "bottom" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract} {
        if (left != mLeft || top != mTop || right != mRight || bottom != mBottom) {
            mLeft = left;
            mTop = top;
            mRight = right;
            mBottom = bottom;
            mWidth = mRight - mLeft;
            mHeight = mBottom - mTop;
            if (mMatrixFlags > TRANSLATION && !mPivotExplicitlySet) {
                mMatrixDirty = true;
            }
        }
    };
"
	
	
	
	
      end

      operation 1051020 "offsetLeftRight"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "offset" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        if (offset != 0) {
            mLeft += offset;
            mRight += offset;
            if (mMatrixFlags > TRANSLATION && !mPivotExplicitlySet) {
                mMatrixDirty = true;
            }
        }
    };
"
	
	
	
	
      end

      operation 1051148 "offsetTopBottom"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "offset" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        if (offset != 0) {
            mTop += offset;
            mBottom += offset;
            if (mMatrixFlags > TRANSLATION && !mPivotExplicitlySet) {
                mMatrixDirty = true;
            }
        }
    };
"
	
	
	
	
      end

      operation 1051276 "setCaching"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "caching" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        mCaching = caching;
    };
"
	
	
	
	
      end

      operation 1051404 "getWidth"
	cpp_inline public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return mWidth;
    };
"
	
	
	
	
      end

      operation 1051532 "getHeight"
	cpp_inline public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return mHeight;
    };
"
	
	
	
	
      end

      operation 1051660 "init"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1051788 "clearResources"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1051916 "updateMatrix"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      class 431372 "TextContainer"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 1052044 "length"
	  const cpp_inline public explicit_return_type "size_t"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
            return mByteLength;
        };
"
	  
	  
	  
	  
	end

	operation 1052172 "text"
	  const cpp_inline public explicit_return_type "char"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} {
            return (const char*) mText;
        };
"
	  
	  
	  
	  
	end

	attribute 971660 "mByteLength"
	  public explicit_type "size_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 971788 "mText"
	  const_attribute public explicit_type "char"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      operation 1052300 "getBitmap"
	cpp_inline private explicit_return_type "SkBitmap"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return (SkBitmap*) getInt();
    };
"
	
	
	
	
      end

      operation 1052428 "getBitmapData"
	cpp_inline private explicit_return_type "SkBitmap"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return (SkBitmap*) getInt();
    };
"
	
	
	
	
      end

      operation 1052556 "getShader"
	cpp_inline private return_type class_ref 431500 // SkiaShader
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return (SkiaShader*) getInt();
    };
"
	
	
	
	
      end

      operation 1052684 "getColorFilter"
	cpp_inline private return_type class_ref 431628 // SkiaColorFilter
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return (SkiaColorFilter*) getInt();
    };
"
	
	
	
	
      end

      operation 1052812 "getIndex"
	cpp_inline private explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return mReader.readInt();
    };
"
	
	
	
	
      end

      operation 1052940 "getInt"
	cpp_inline private explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return mReader.readInt();
    };
"
	
	
	
	
      end

      operation 1053068 "getUInt"
	cpp_inline private explicit_return_type "uint32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return mReader.readU32();
    };
"
	
	
	
	
      end

      operation 1053196 "getMatrix"
	cpp_inline private explicit_return_type "SkMatrix"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return (SkMatrix*) getInt();
    };
"
	
	
	
	
      end

      operation 1053324 "getPath"
	cpp_inline private explicit_return_type "SkPath"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return (SkPath*) getInt();
    };
"
	
	
	
	
      end

      operation 1053452 "getPaint"
	cpp_inline private explicit_return_type "SkPaint"
	nparams 1
	  param inout name "renderer" type class_ref 431116 // OpenGLRenderer
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        return renderer.filterPaint((SkPaint*) getInt());
    };
"
	
	
	
	
      end

      operation 1053580 "getDisplayList"
	cpp_inline private return_type class_ref 430604 // DisplayList
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return (DisplayList*) getInt();
    };
"
	
	
	
	
      end

      operation 1053708 "getFloat"
	cpp_inline private explicit_return_type "float"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return mReader.readScalar();
    };
"
	
	
	
	
      end

      operation 1053836 "getInts"
	cpp_inline private explicit_return_type "int32_t"
	nparams 1
	  param inout name "count" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        count = getInt();
        return (int32_t*) mReader.skip(count * sizeof(int32_t));
    };
"
	
	
	
	
      end

      operation 1053964 "getUInts"
	cpp_inline private explicit_return_type "uint32_t"
	nparams 1
	  param inout name "count" explicit_type "int8_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        count = getInt();
        return (uint32_t*) mReader.skip(count * sizeof(uint32_t));
    };
"
	
	
	
	
      end

      operation 1054092 "getFloats"
	cpp_inline private explicit_return_type "float"
	nparams 1
	  param inout name "count" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        count = getInt();
        return (float*) mReader.skip(count * sizeof(float));
    };
"
	
	
	
	
      end

      operation 1054220 "getText"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param inout name "text" type class_ref 431372 // TextContainer
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        size_t length = text->mByteLength = getInt();
        text->mText = (const char*) mReader.skip(length);
    };
"
	
	
	
	
      end

      attribute 971916 "mBitmapResources"
	private explicit_type "SkBitmap*"
	stereotype "Vector"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 972044 "mOwnedBitmapResources"
	private explicit_type "SkBitmap*"
	stereotype "Vector"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 895884 // mFilterResources (<unidirectional association>)
	relation 895884 --->
	  stereotype "Vector"
	  a role_name "mFilterResources" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}*> ${name}${value};
"
	    classrelation_ref 895884 // mFilterResources (<unidirectional association>)
	  b parent class_ref 431628 // SkiaColorFilter
      end

      attribute 972172 "mPaints"
	private explicit_type "SkPaint*"
	stereotype "Vector"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 972300 "mPaths"
	private explicit_type "SkPath*"
	stereotype "Vector"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 972428 "mSourcePaths"
	private explicit_type "SkPath*"
	stereotype "SortedVector"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 972556 "mMatrices"
	private explicit_type "SkMatrix*"
	stereotype "Vector"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 896012 // mShaders (<unidirectional association>)
	relation 896012 --->
	  stereotype "Vector"
	  a role_name "mShaders" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}*> ${name}${value};
"
	    classrelation_ref 896012 // mShaders (<unidirectional association>)
	  b parent class_ref 431500 // SkiaShader
      end

      classrelation 896140 // mLayers (<unidirectional association>)
	relation 896140 --->
	  stereotype "Vector"
	  a role_name "mLayers" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}*> ${name}${value};
"
	    classrelation_ref 896140 // mLayers (<unidirectional association>)
	  b parent class_ref 431756 // Layer
      end

      attribute 972684 "mReader"
	private explicit_type "SkFlattenableReadBuffer"
	cpp_mutable cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 972812 "mSize"
	private explicit_type "size_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 972940 "mIsRenderable"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 973068 "mFunctorCount"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 896268 // mName (<directional composition>)
	relation 896268 *-->
	  a role_name "mName" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 896268 // mName (<directional composition>)
	  b parent class_ref 131340 // String8
      end

      attribute 973196 "mClipChildren"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 973324 "mAlpha"
	private explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 973452 "mMultipliedAlpha"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 973580 "mHasOverlappingRendering"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 973708 "mCameraDistance"
	private explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 973836 "mPivotExplicitlySet"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 973964 "mMatrixDirty"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 974092 "mMatrixIsIdentity"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 974220 "mMatrixFlags"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 974348 "mTransformMatrix"
	private explicit_type "SkMatrix"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 974476 "mTransformCamera"
	private explicit_type "Sk3DView"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 974604 "mTransformMatrix3D"
	private explicit_type "SkMatrix"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 974732 "mStaticMatrix"
	private explicit_type "SkMatrix"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 974860 "mAnimationMatrix"
	private explicit_type "SkMatrix"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 974988 "mCaching"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 897947 // mDisplayListData (<unidirectional association>)
	relation 897947 --->
	  a role_name "mDisplayListData" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 897947 // mDisplayListData (<unidirectional association>)
	  b parent class_ref 3701388 // DisplayListData
      end
    end

    class 430732 "DisplayListRenderer"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "/////////////////////////////////////////////////////////////////////////////
 Renderer
/////////////////////////////////////////////////////////////////////////////
*
 * Records drawing commands in a display list for latter playback."
      classrelation 896396 // <generalisation>
	relation 896396 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 896396 // <generalisation>
	  b parent class_ref 431116 // OpenGLRenderer
      end

      operation 1054348 "DisplayListRenderer"
	preserve_cpp_body_indent public explicit_return_type "ANDROID_API"
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "///////////////////////////////////////////////////////////////////////////////
// Base structure
///////////////////////////////////////////////////////////////////////////////

${inline}${class}::${name}${(}${)}:
        mCaches(Caches::getInstance()), mWriter(MIN_WRITER_SIZE),
        mTranslateX(0.0f), mTranslateY(0.0f), mHasTranslate(false),
        mHasDrawOps(false), mFunctorCount(0) ${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 1054476 "~DisplayListRenderer"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 1054604 "isDeferred"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1054732 "setViewport"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 2
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1054860 "prepareDirty"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 128268 // status_t
	nparams 5
	  param in name "left" explicit_type "float"
	  param in name "top" explicit_type "float"
	  param in name "right" explicit_type "float"
	  param in name "bottom" explicit_type "float"
	  param in name "opaque" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1054988 "finish"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1055116 "callDrawGLFunction"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 128268 // status_t
	nparams 2
	  param inout name "functor" type class_ref 431884 // Functor
	  param inout name "dirty" type class_ref 431244 // Rect
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1055244 "interrupt"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1055372 "resume"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1055500 "save"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int"
	nparams 1
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1055628 "restore"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1055756 "restoreToCount"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "saveCount" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1055884 "saveLayer"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int"
	nparams 6
	  param in name "left" explicit_type "float"
	  param in name "top" explicit_type "float"
	  param in name "right" explicit_type "float"
	  param in name "bottom" explicit_type "float"
	  param inout name "p" explicit_type "SkPaint"
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} * ${p4}${v4}, ${t5} ${p5}${v5}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} * ${p4}, ${t5} ${p5}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1056012 "saveLayerAlpha"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int"
	nparams 6
	  param in name "left" explicit_type "float"
	  param in name "top" explicit_type "float"
	  param in name "right" explicit_type "float"
	  param in name "bottom" explicit_type "float"
	  param in name "alpha" explicit_type "int"
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} ${p5}${v5}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1056140 "translate"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 2
	  param in name "dx" explicit_type "float"
	  param in name "dy" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1056268 "rotate"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "degrees" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1056396 "scale"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 2
	  param in name "sx" explicit_type "float"
	  param in name "sy" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1056524 "skew"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 2
	  param in name "sx" explicit_type "float"
	  param in name "sy" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1056652 "setMatrix"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "matrix" explicit_type "SkMatrix"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1056780 "concatMatrix"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "matrix" explicit_type "SkMatrix"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1056908 "clipRect"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "bool"
	nparams 5
	  param in name "left" explicit_type "float"
	  param in name "top" explicit_type "float"
	  param in name "right" explicit_type "float"
	  param in name "bottom" explicit_type "float"
	  param in name "op" explicit_type "SkRegion::Op"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1057036 "drawDisplayList"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 128268 // status_t
	nparams 4
	  param inout name "displayList" type class_ref 430604 // DisplayList
	  param inout name "dirty" type class_ref 431244 // Rect
	  param in name "flags" explicit_type "int32_t"
	  param in name "level" explicit_type "uint32_t"
	    defaultvalue "0"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} & ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} & ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1057164 "drawLayer"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 128268 // status_t
	nparams 4
	  param inout name "layer" type class_ref 431756 // Layer
	  param in name "x" explicit_type "float"
	  param in name "y" explicit_type "float"
	  param inout name "paint" explicit_type "SkPaint"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} * ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} * ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1057292 "drawBitmap"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 128268 // status_t
	nparams 4
	  param inout name "bitmap" explicit_type "SkBitmap"
	  param in name "left" explicit_type "float"
	  param in name "top" explicit_type "float"
	  param inout name "paint" explicit_type "SkPaint"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} * ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} * ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1057420 "drawBitmap"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 128268 // status_t
	nparams 3
	  param inout name "bitmap" explicit_type "SkBitmap"
	  param inout name "matrix" explicit_type "SkMatrix"
	  param inout name "paint" explicit_type "SkPaint"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1057548 "drawBitmap"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 128268 // status_t
	nparams 10
	  param inout name "bitmap" explicit_type "SkBitmap"
	  param in name "srcLeft" explicit_type "float"
	  param in name "srcTop" explicit_type "float"
	  param in name "srcRight" explicit_type "float"
	  param in name "srcBottom" explicit_type "float"
	  param in name "dstLeft" explicit_type "float"
	  param in name "dstTop" explicit_type "float"
	  param in name "dstRight" explicit_type "float"
	  param in name "dstBottom" explicit_type "float"
	  param inout name "paint" explicit_type "SkPaint"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} ${p5}${v5}, ${t6} ${p6}${v6}, ${t7} ${p7}${v7}, ${t8} ${p8}${v8}, ${t9} * ${p9}${v9}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}, ${t9} * ${p9}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1057676 "drawBitmapData"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 128268 // status_t
	nparams 4
	  param inout name "bitmap" explicit_type "SkBitmap"
	  param in name "left" explicit_type "float"
	  param in name "top" explicit_type "float"
	  param inout name "paint" explicit_type "SkPaint"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} * ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} * ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1057804 "drawBitmapMesh"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 128268 // status_t
	nparams 6
	  param inout name "bitmap" explicit_type "SkBitmap"
	  param in name "meshWidth" explicit_type "int"
	  param in name "meshHeight" explicit_type "int"
	  param inout name "vertices" explicit_type "float"
	  param inout name "colors" explicit_type "int"
	  param inout name "paint" explicit_type "SkPaint"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} * ${p3}${v3}, ${t4} * ${p4}${v4}, ${t5} * ${p5}${v5}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} * ${p3}, ${t4} * ${p4}, ${t5} * ${p5}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1057932 "drawPatch"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 128268 // status_t
	nparams 12
	  param inout name "bitmap" explicit_type "SkBitmap"
	  param in name "xDivs" explicit_type "int32_t"
	  param in name "yDivs" explicit_type "int32_t"
	  param in name "colors" explicit_type "uint32_t"
	  param in name "width" explicit_type "uint32_t"
	  param in name "height" explicit_type "uint32_t"
	  param in name "numColors" explicit_type "int8_t"
	  param in name "left" explicit_type "float"
	  param in name "top" explicit_type "float"
	  param in name "right" explicit_type "float"
	  param in name "bottom" explicit_type "float"
	  param inout name "paint" explicit_type "SkPaint"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, const ${t1} * ${p1}${v1}, const ${t2} * ${p2}${v2}, const ${t3} * ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} ${p5}${v5}, ${t6} ${p6}${v6}, ${t7} ${p7}${v7}, ${t8} ${p8}${v8}, ${t9} ${p9}${v9}, ${t10} ${p10}${v10}, ${t11} * ${p11}${v11}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, const ${t1} * ${p1}, const ${t2} * ${p2}, const ${t3} * ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}, ${t9} ${p9}, ${t10} ${p10}, ${t11} * ${p11}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1058060 "drawColor"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 128268 // status_t
	nparams 2
	  param in name "color" explicit_type "int"
	  param in name "mode" explicit_type "SkXfermode::Mode"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1058188 "drawRect"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 128268 // status_t
	nparams 5
	  param in name "left" explicit_type "float"
	  param in name "top" explicit_type "float"
	  param in name "right" explicit_type "float"
	  param in name "bottom" explicit_type "float"
	  param inout name "paint" explicit_type "SkPaint"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} * ${p4}${v4}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} * ${p4}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1058316 "drawRoundRect"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 128268 // status_t
	nparams 7
	  param in name "left" explicit_type "float"
	  param in name "top" explicit_type "float"
	  param in name "right" explicit_type "float"
	  param in name "bottom" explicit_type "float"
	  param in name "rx" explicit_type "float"
	  param in name "ry" explicit_type "float"
	  param inout name "paint" explicit_type "SkPaint"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} ${p5}${v5}, ${t6} * ${p6}${v6}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} * ${p6}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1058444 "drawCircle"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 128268 // status_t
	nparams 4
	  param in name "x" explicit_type "float"
	  param in name "y" explicit_type "float"
	  param in name "radius" explicit_type "float"
	  param inout name "paint" explicit_type "SkPaint"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} * ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} * ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1058572 "drawOval"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 128268 // status_t
	nparams 5
	  param in name "left" explicit_type "float"
	  param in name "top" explicit_type "float"
	  param in name "right" explicit_type "float"
	  param in name "bottom" explicit_type "float"
	  param inout name "paint" explicit_type "SkPaint"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} * ${p4}${v4}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} * ${p4}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1058700 "drawArc"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 128268 // status_t
	nparams 8
	  param in name "left" explicit_type "float"
	  param in name "top" explicit_type "float"
	  param in name "right" explicit_type "float"
	  param in name "bottom" explicit_type "float"
	  param in name "startAngle" explicit_type "float"
	  param in name "sweepAngle" explicit_type "float"
	  param in name "useCenter" explicit_type "bool"
	  param inout name "paint" explicit_type "SkPaint"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} ${p5}${v5}, ${t6} ${p6}${v6}, ${t7} * ${p7}${v7}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} * ${p7}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1058828 "drawPath"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 128268 // status_t
	nparams 2
	  param inout name "path" explicit_type "SkPath"
	  param inout name "paint" explicit_type "SkPaint"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1058956 "drawLines"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 128268 // status_t
	nparams 3
	  param inout name "points" explicit_type "float"
	  param in name "count" explicit_type "int"
	  param inout name "paint" explicit_type "SkPaint"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1059084 "drawPoints"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 128268 // status_t
	nparams 3
	  param inout name "points" explicit_type "float"
	  param in name "count" explicit_type "int"
	  param inout name "paint" explicit_type "SkPaint"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1059212 "drawTextOnPath"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 128268 // status_t
	nparams 7
	  param in name "text" explicit_type "char"
	  param in name "bytesCount" explicit_type "int"
	  param in name "count" explicit_type "int"
	  param inout name "path" explicit_type "SkPath"
	  param in name "hOffset" explicit_type "float"
	  param in name "vOffset" explicit_type "float"
	  param inout name "paint" explicit_type "SkPaint"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} * ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} ${p5}${v5}, ${t6} * ${p6}${v6}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} * ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} * ${p6}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1059340 "drawPosText"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 128268 // status_t
	nparams 5
	  param in name "text" explicit_type "char"
	  param in name "bytesCount" explicit_type "int"
	  param in name "count" explicit_type "int"
	  param in name "positions" explicit_type "float"
	  param inout name "paint" explicit_type "SkPaint"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, const ${t3} * ${p3}${v3}, ${t4} * ${p4}${v4}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, ${t1} ${p1}, ${t2} ${p2}, const ${t3} * ${p3}, ${t4} * ${p4}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1059468 "drawText"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 128268 // status_t
	nparams 8
	  param in name "text" explicit_type "char"
	  param in name "bytesCount" explicit_type "int"
	  param in name "count" explicit_type "int"
	  param in name "x" explicit_type "float"
	  param in name "y" explicit_type "float"
	  param in name "positions" explicit_type "float"
	  param inout name "paint" explicit_type "SkPaint"
	  param in name "length" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, const ${t5} * ${p5}${v5}, ${t6} * ${p6}${v6}, ${t7} ${p7}${v7}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, const ${t5} * ${p5}, ${t6} * ${p6}, ${t7} ${p7}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1059596 "resetShader"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1059724 "setupShader"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "shader" type class_ref 431500 // SkiaShader
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1059852 "resetColorFilter"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1059980 "setupColorFilter"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "filter" type class_ref 431628 // SkiaColorFilter
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1060108 "resetShadow"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1060236 "setupShadow"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 4
	  param in name "radius" explicit_type "float"
	  param in name "dx" explicit_type "float"
	  param in name "dy" explicit_type "float"
	  param in name "color" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1060364 "resetPaintFilter"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1060492 "setupPaintFilter"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 2
	  param in name "clearBits" explicit_type "int"
	  param in name "setBits" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1060620 "reset"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1060748 "writeStream"
	const cpp_inline public explicit_return_type "SkWriter32"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return mWriter;
    };
"
	
	
	
	
      end

      operation 1060876 "getBitmapResources"
	const cpp_inline public explicit_return_type "Vector<SkBitmap*>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return mBitmapResources;
    };
"
	
	
	
	
      end

      operation 1061004 "getOwnedBitmapResources"
	const cpp_inline public explicit_return_type "Vector<SkBitmap*>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return mOwnedBitmapResources;
    };
"
	
	
	
	
      end

      operation 1061132 "getFilterResources"
	const cpp_inline public explicit_return_type "Vector<SkiaColorFilter*>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return mFilterResources;
    };
"
	
	
	
	
      end

      operation 1061260 "getShaders"
	const cpp_inline public explicit_return_type "Vector<SkiaShader*>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return mShaders;
    };
"
	
	
	
	
      end

      operation 1061388 "getPaints"
	const cpp_inline public explicit_return_type "Vector<SkPaint*>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return mPaints;
    };
"
	
	
	
	
      end

      operation 1061516 "getPaths"
	const cpp_inline public explicit_return_type "Vector<SkPath*>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return mPaths;
    };
"
	
	
	
	
      end

      operation 1061644 "getSourcePaths"
	const cpp_inline public explicit_return_type "SortedVector<SkPath*>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return mSourcePaths;
    };
"
	
	
	
	
      end

      operation 1061772 "getLayers"
	const cpp_inline public explicit_return_type "Vector<Layer*>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return mLayers;
    };
"
	
	
	
	
      end

      operation 1061900 "getMatrices"
	const cpp_inline public explicit_return_type "Vector<SkMatrix*>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return mMatrices;
    };
"
	
	
	
	
      end

      operation 1062028 "getFunctorCount"
	const cpp_inline public explicit_return_type "uint32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return mFunctorCount;
    };
"
	
	
	
	
      end

      operation 1062156 "insertRestoreToCount"
	cpp_inline private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        if (mRestoreSaveCount >= 0) {
            mWriter.writeInt(DisplayList::RestoreToCount);
            addInt(mRestoreSaveCount);
            mRestoreSaveCount = -1;
        }
    };
"
	
	
	
	
      end

      operation 1062284 "insertTranlate"
	cpp_inline private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        if (mHasTranslate) {
            if (mTranslateX != 0.0f || mTranslateY != 0.0f) {
                mWriter.writeInt(DisplayList::Translate);
                addPoint(mTranslateX, mTranslateY);
                mTranslateX = mTranslateY = 0.0f;
            }
            mHasTranslate = false;
        }
    };
"
	
	
	
	
      end

      operation 1062412 "addOp"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param in name "drawOp" type class_ref 430860 // Op
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        insertRestoreToCount();
        insertTranlate();
        mWriter.writeInt(drawOp);
        mHasDrawOps = mHasDrawOps || drawOp >= DisplayList::DrawDisplayList;
    };
"
	
	
	
	
      end

      operation 1062540 "addOp"
	cpp_inline private explicit_return_type "uint32_t"
	nparams 2
	  param in name "drawOp" type class_ref 430860 // Op
	  param in name "reject" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}const ${t0} ${p0}${v0}, const ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        insertRestoreToCount();
        insertTranlate();
        mHasDrawOps = mHasDrawOps || drawOp >= DisplayList::DrawDisplayList;
        if (reject) {
            mWriter.writeInt(OP_MAY_BE_SKIPPED_MASK | drawOp);
            mWriter.writeInt(0xdeaddead);
            mBufferSize = mWriter.size();
            return mWriter.peek32(mBufferSize - sizeof(int32_t));
        }
        mWriter.writeInt(drawOp);
        return NULL;
    };
"
	
	
	
	
      end

      operation 1062668 "addSkip"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param inout name "location" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        if (location) {
            *location = (int32_t) (mWriter.size() - mBufferSize);
        }
    };
"
	
	
	
	
      end

      operation 1062796 "addInt"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param in name "value" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        mWriter.writeInt(value);
    };
"
	
	
	
	
      end

      operation 1062924 "addSize"
	cpp_inline private explicit_return_type "void"
	nparams 2
	  param in name "w" explicit_type "uint32_t"
	  param in name "h" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        mWriter.writeInt(w);
        mWriter.writeInt(h);
    };
"
	
	
	
	
      end

      operation 1063052 "addInts"
	cpp_inline private explicit_return_type "void"
	nparams 2
	  param in name "values" explicit_type "int32_t"
	  param in name "count" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        mWriter.writeInt(count);
        mWriter.write(values, count * sizeof(int32_t));
    };
"
	
	
	
	
      end

      operation 1063180 "addUInts"
	cpp_inline private explicit_return_type "void"
	nparams 2
	  param in name "values" explicit_type "uint32_t"
	  param in name "count" explicit_type "int8_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        mWriter.writeInt(count);
        mWriter.write(values, count * sizeof(uint32_t));
    };
"
	
	
	
	
      end

      operation 1063308 "addFloat"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param in name "value" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        mWriter.writeScalar(value);
    };
"
	
	
	
	
      end

      operation 1063436 "addFloats"
	cpp_inline private explicit_return_type "void"
	nparams 2
	  param in name "values" explicit_type "float"
	  param in name "count" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        mWriter.writeInt(count);
        mWriter.write(values, count * sizeof(float));
    };
"
	
	
	
	
      end

      operation 1063564 "addPoint"
	cpp_inline private explicit_return_type "void"
	nparams 2
	  param in name "x" explicit_type "float"
	  param in name "y" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        mWriter.writeScalar(x);
        mWriter.writeScalar(y);
    };
"
	
	
	
	
      end

      operation 1063692 "addBounds"
	cpp_inline private explicit_return_type "void"
	nparams 4
	  param in name "left" explicit_type "float"
	  param in name "top" explicit_type "float"
	  param in name "right" explicit_type "float"
	  param in name "bottom" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract} {
        mWriter.writeScalar(left);
        mWriter.writeScalar(top);
        mWriter.writeScalar(right);
        mWriter.writeScalar(bottom);
    };
"
	
	
	
	
      end

      operation 1063820 "addText"
	cpp_inline private explicit_return_type "void"
	nparams 2
	  param in name "text" explicit_type "void"
	  param in name "byteLength" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        mWriter.writeInt(byteLength);
        mWriter.writePad(text, byteLength);
    };
"
	
	
	
	
      end

      operation 1063948 "addPath"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param inout name "path" explicit_type "SkPath"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        if (!path) {
            addInt((int) NULL);
            return;
        }

        SkPath* pathCopy = mPathMap.valueFor(path);
        if (pathCopy == NULL || pathCopy->getGenerationID() != path->getGenerationID()) {
            pathCopy = new SkPath(*path);
            pathCopy->setSourcePath(path);
            // replaceValueFor() performs an add if the entry doesn't exist
            mPathMap.replaceValueFor(path, pathCopy);
            mPaths.add(pathCopy);
        }
        if (mSourcePaths.indexOf(path) < 0) {
            mCaches.resourceCache.incrementRefcount(path);
            mSourcePaths.add(path);
        }

        addInt((int) pathCopy);
    };
"
	
	
	
	
      end

      operation 1064076 "addPaint"
	cpp_inline private explicit_return_type "SkPaint"
	nparams 1
	  param inout name "paint" explicit_type "SkPaint"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        if (!paint) {
            addInt((int) NULL);
            return paint;
        }

        SkPaint* paintCopy = mPaintMap.valueFor(paint);
        if (paintCopy == NULL || paintCopy->getGenerationID() != paint->getGenerationID()) {
            paintCopy = new SkPaint(*paint);
            // replaceValueFor() performs an add if the entry doesn't exist
            mPaintMap.replaceValueFor(paint, paintCopy);
            mPaints.add(paintCopy);
        }

        addInt((int) paintCopy);

        return paintCopy;
    };
"
	
	
	
	
      end

      operation 1064204 "addDisplayList"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param inout name "displayList" type class_ref 430604 // DisplayList
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        // TODO: To be safe, the display list should be ref-counted in the
        //       resources cache, but we rely on the caller (UI toolkit) to
        //       do the right thing for now
        addInt((int) displayList);
    };
"
	
	
	
	
      end

      operation 1064332 "addMatrix"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param inout name "matrix" explicit_type "SkMatrix"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        // Copying the matrix is cheap and prevents against the user changing the original
        // matrix before the operation that uses it
        SkMatrix* copy = new SkMatrix(*matrix);
        addInt((int) copy);
        mMatrices.add(copy);
    };
"
	
	
	
	
      end

      operation 1064460 "addLayer"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param inout name "layer" type class_ref 431756 // Layer
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        addInt((int) layer);
        mLayers.add(layer);
        mCaches.resourceCache.incrementRefcount(layer);
    };
"
	
	
	
	
      end

      operation 1064588 "addBitmap"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param inout name "bitmap" explicit_type "SkBitmap"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        // Note that this assumes the bitmap is immutable. There are cases this won't handle
        // correctly, such as creating the bitmap from scratch, drawing with it, changing its
        // contents, and drawing again. The only fix would be to always copy it the first time,
        // which doesn't seem worth the extra cycles for this unlikely case.
        addInt((int) bitmap);
        mBitmapResources.add(bitmap);
        mCaches.resourceCache.incrementRefcount(bitmap);
    };
"
	
	
	
	
      end

      operation 1064716 "addBitmapData"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param inout name "bitmap" explicit_type "SkBitmap"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        addInt((int) bitmap);
        mOwnedBitmapResources.add(bitmap);
        mCaches.resourceCache.incrementRefcount(bitmap);
    };
"
	
	
	
	
      end

      operation 1064844 "addShader"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param inout name "shader" type class_ref 431500 // SkiaShader
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        if (!shader) {
            addInt((int) NULL);
            return;
        }

        SkiaShader* shaderCopy = mShaderMap.valueFor(shader);
        // TODO: We also need to handle generation ID changes in compose shaders
        if (shaderCopy == NULL || shaderCopy->getGenerationId() != shader->getGenerationId()) {
            shaderCopy = shader->copy();
            // replaceValueFor() performs an add if the entry doesn't exist
            mShaderMap.replaceValueFor(shader, shaderCopy);
            mShaders.add(shaderCopy);
            mCaches.resourceCache.incrementRefcount(shaderCopy);
        }

        addInt((int) shaderCopy);
    };
"
	
	
	
	
      end

      operation 1064972 "addColorFilter"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param inout name "colorFilter" type class_ref 431628 // SkiaColorFilter
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        addInt((int) colorFilter);
        mFilterResources.add(colorFilter);
        mCaches.resourceCache.incrementRefcount(colorFilter);
    };
"
	
	
	
	
      end

      attribute 975116 "mBitmapResources"
	private explicit_type "SkBitmap*"
	stereotype "Vector"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 975244 "mOwnedBitmapResources"
	private explicit_type "SkBitmap*"
	stereotype "Vector"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 896524 // mFilterResources (<unidirectional association>)
	relation 896524 --->
	  stereotype "Vector"
	  a role_name "mFilterResources" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}*> ${name}${value};
"
	    classrelation_ref 896524 // mFilterResources (<unidirectional association>)
	  b parent class_ref 431628 // SkiaColorFilter
      end

      attribute 975372 "mPaints"
	private explicit_type "SkPaint*"
	stereotype "Vector"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 975500 "mPaintMap"
	private explicit_type "SkPaint*, SkPaint*"
	stereotype "DefaultKeyedVector"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 975628 "mPaths"
	private explicit_type "SkPath*"
	stereotype "Vector"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 975756 "mPathMap"
	private explicit_type "SkPath*, SkPath*"
	stereotype "DefaultKeyedVector"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 975884 "mSourcePaths"
	private explicit_type "SkPath*"
	stereotype "SortedVector"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 896652 // mShaders (<unidirectional association>)
	relation 896652 --->
	  stereotype "Vector"
	  a role_name "mShaders" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}*> ${name}${value};
"
	    classrelation_ref 896652 // mShaders (<unidirectional association>)
	  b parent class_ref 431500 // SkiaShader
      end

      classrelation 896780 // mShaderMap (<unidirectional association>)
	relation 896780 --->
	  stereotype "DefaultKeyedVector"
	  a role_name "mShaderMap" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}*,SkiaShader*> ${name}${value};
"
	    classrelation_ref 896780 // mShaderMap (<unidirectional association>)
	  b parent class_ref 431500 // SkiaShader
      end

      attribute 976012 "mMatrices"
	private explicit_type "SkMatrix*"
	stereotype "Vector"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 896908 // mLayers (<unidirectional association>)
	relation 896908 --->
	  stereotype "Vector"
	  a role_name "mLayers" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}*> ${name}${value};
"
	    classrelation_ref 896908 // mLayers (<unidirectional association>)
	  b parent class_ref 431756 // Layer
      end

      attribute 976140 "mBufferSize"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 976268 "mRestoreSaveCount"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 976396 "mCaches"
	private explicit_type "Caches"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} & ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 976524 "mWriter"
	private explicit_type "SkWriter32"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 976652 "mTranslateX"
	private explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 976780 "mTranslateY"
	private explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 976908 "mHasTranslate"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 977036 "mHasDrawOps"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 977164 "mFunctorCount"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 897036 // <dependency>
	relation 897036 -_->
	  stereotype "friend"
	  a default
	    cpp default "${type}"
	    classrelation_ref 897036 // <dependency>
	  b parent class_ref 430604 // DisplayList
      end

      classrelation 898075 // <unidirectional association>
	relation 898075 --->
	  a role_name "" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 898075 // <unidirectional association>
	  b parent class_ref 3701388 // DisplayListData
      end
    end

    class 431116 "OpenGLRenderer"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * OpenGL renderer used to draw accelerated 2D graphics. The API is a
 * simplified version of Skia's Canvas API."
      operation 1089036 "OpenGLRenderer"
	preserve_cpp_body_indent public explicit_return_type "ANDROID_API"
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "///////////////////////////////////////////////////////////////////////////////
// Constructors/destructor
///////////////////////////////////////////////////////////////////////////////

${inline}${class}::${name}${(}${)}: mCaches(Caches::getInstance()) ${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 1089164 "~OpenGLRenderer"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 1089292 "initProperties"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Read externally defined properties to control the behavior
     * of the renderer."
      end

      operation 1089420 "isDeferred"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "///////////////////////////////////////////////////////////////////////////////
// Setup
///////////////////////////////////////////////////////////////////////////////

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Indicates whether this renderer executes drawing commands immediately.
     * If this method returns true, the drawing commands will be executed
     * later."
      end

      operation 1089548 "setViewport"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 2
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Sets the dimension of the underlying drawing surface. This method must
     * be called at least once every time the drawing surface changes size.
     *
     * @param width The width in pixels of the underlysing surface
     * @param height The height in pixels of the underlysing surface"
      end

      operation 1089676 "prepareDirty"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 128268 // status_t
	nparams 5
	  param in name "left" explicit_type "float"
	  param in name "top" explicit_type "float"
	  param in name "right" explicit_type "float"
	  param in name "bottom" explicit_type "float"
	  param in name "opaque" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Prepares the renderer to draw a frame. This method must be invoked
     * at the beginning of each frame. Only the specified rectangle of the
     * frame is assumed to be dirty. A clip will automatically be set to
     * the specified rectangle.
     *
     * @param left The left coordinate of the dirty rectangle
     * @param top The top coordinate of the dirty rectangle
     * @param right The right coordinate of the dirty rectangle
     * @param bottom The bottom coordinate of the dirty rectangle
     * @param opaque If true, the target surface is considered opaque
     *               and will not be cleared. If false, the target surface
     *               will be cleared in the specified dirty rectangle"
      end

      operation 1089804 "finish"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Indicates the end of a frame. This method must be invoked whenever
     * the caller is done rendering a frame."
      end

      operation 1089932 "interrupt"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * This method must be invoked before handing control over to a draw functor.
     * See callDrawGLFunction() for instance.
     *
     * This command must not be recorded inside display lists."
      end

      operation 1090060 "resume"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * This method must be invoked after getting control back from a draw functor.
     *
     * This command must not be recorded inside display lists."
      end

      operation 1090188 "detachFunctor"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param inout name "functor" type class_ref 431884 // Functor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1090316 "attachFunctor"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param inout name "functor" type class_ref 431884 // Functor
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1090444 "callDrawGLFunction"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 128268 // status_t
	nparams 2
	  param inout name "functor" type class_ref 431884 // Functor
	  param inout name "dirty" type class_ref 431244 // Rect
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1090572 "pushLayerUpdate"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param inout name "layer" type class_ref 431756 // Layer
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1090700 "clearLayerUpdates"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1090828 "getSaveCount"
	preserve_cpp_body_indent const public explicit_return_type "ANDROID_API int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "///////////////////////////////////////////////////////////////////////////////
// State management
///////////////////////////////////////////////////////////////////////////////

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1090956 "save"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int"
	nparams 1
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1091084 "restore"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1091212 "restoreToCount"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "saveCount" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1091340 "saveLayer"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int"
	nparams 6
	  param in name "left" explicit_type "float"
	  param in name "top" explicit_type "float"
	  param in name "right" explicit_type "float"
	  param in name "bottom" explicit_type "float"
	  param inout name "p" explicit_type "SkPaint"
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} * ${p4}${v4}, ${t5} ${p5}${v5}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "///////////////////////////////////////////////////////////////////////////////
// Layers
///////////////////////////////////////////////////////////////////////////////

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} * ${p4}, ${t5} ${p5}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1091468 "saveLayerAlpha"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int"
	nparams 6
	  param in name "left" explicit_type "float"
	  param in name "top" explicit_type "float"
	  param in name "right" explicit_type "float"
	  param in name "bottom" explicit_type "float"
	  param in name "alpha" explicit_type "int"
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} ${p5}${v5}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1091596 "translate"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 2
	  param in name "dx" explicit_type "float"
	  param in name "dy" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "///////////////////////////////////////////////////////////////////////////////
// Transforms
///////////////////////////////////////////////////////////////////////////////

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1091724 "rotate"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "degrees" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1091852 "scale"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 2
	  param in name "sx" explicit_type "float"
	  param in name "sy" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1091980 "skew"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 2
	  param in name "sx" explicit_type "float"
	  param in name "sy" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1092108 "getMatrix"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param inout name "matrix" explicit_type "SkMatrix"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1092236 "setMatrix"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "matrix" explicit_type "SkMatrix"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1092364 "concatMatrix"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "matrix" explicit_type "SkMatrix"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1092492 "quickReject"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 4
	  param in name "left" explicit_type "float"
	  param in name "top" explicit_type "float"
	  param in name "right" explicit_type "float"
	  param in name "bottom" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1092620 "quickRejectNoScissor"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 4
	  param in name "left" explicit_type "float"
	  param in name "top" explicit_type "float"
	  param in name "right" explicit_type "float"
	  param in name "bottom" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1092748 "clipRect"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "bool"
	nparams 5
	  param in name "left" explicit_type "float"
	  param in name "top" explicit_type "float"
	  param in name "right" explicit_type "float"
	  param in name "bottom" explicit_type "float"
	  param in name "op" explicit_type "SkRegion::Op"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1092876 "getClipRect"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 431244 // Rect
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1093004 "drawDisplayList"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 128268 // status_t
	nparams 4
	  param inout name "displayList" type class_ref 430604 // DisplayList
	  param inout name "dirty" type class_ref 431244 // Rect
	  param in name "flags" explicit_type "int32_t"
	  param in name "level" explicit_type "uint32_t"
	    defaultvalue "0"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} & ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "///////////////////////////////////////////////////////////////////////////////
// Drawing
///////////////////////////////////////////////////////////////////////////////

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} & ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1093132 "outputDisplayList"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 2
	  param inout name "displayList" type class_ref 430604 // DisplayList
	  param in name "level" explicit_type "uint32_t"
	    defaultvalue "0"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1093260 "drawLayer"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 128268 // status_t
	nparams 4
	  param inout name "layer" type class_ref 431756 // Layer
	  param in name "x" explicit_type "float"
	  param in name "y" explicit_type "float"
	  param inout name "paint" explicit_type "SkPaint"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} * ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} * ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1093388 "drawBitmap"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 128268 // status_t
	nparams 4
	  param inout name "bitmap" explicit_type "SkBitmap"
	  param in name "left" explicit_type "float"
	  param in name "top" explicit_type "float"
	  param inout name "paint" explicit_type "SkPaint"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} * ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} * ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1093516 "drawBitmap"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 128268 // status_t
	nparams 3
	  param inout name "bitmap" explicit_type "SkBitmap"
	  param inout name "matrix" explicit_type "SkMatrix"
	  param inout name "paint" explicit_type "SkPaint"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1093644 "drawBitmap"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 128268 // status_t
	nparams 10
	  param inout name "bitmap" explicit_type "SkBitmap"
	  param in name "srcLeft" explicit_type "float"
	  param in name "srcTop" explicit_type "float"
	  param in name "srcRight" explicit_type "float"
	  param in name "srcBottom" explicit_type "float"
	  param in name "dstLeft" explicit_type "float"
	  param in name "dstTop" explicit_type "float"
	  param in name "dstRight" explicit_type "float"
	  param in name "dstBottom" explicit_type "float"
	  param inout name "paint" explicit_type "SkPaint"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} ${p5}${v5}, ${t6} ${p6}${v6}, ${t7} ${p7}${v7}, ${t8} ${p8}${v8}, ${t9} * ${p9}${v9}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}, ${t9} * ${p9}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1093772 "drawBitmapData"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 128268 // status_t
	nparams 4
	  param inout name "bitmap" explicit_type "SkBitmap"
	  param in name "left" explicit_type "float"
	  param in name "top" explicit_type "float"
	  param inout name "paint" explicit_type "SkPaint"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} * ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} * ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1093900 "drawBitmapMesh"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 128268 // status_t
	nparams 6
	  param inout name "bitmap" explicit_type "SkBitmap"
	  param in name "meshWidth" explicit_type "int"
	  param in name "meshHeight" explicit_type "int"
	  param inout name "vertices" explicit_type "float"
	  param inout name "colors" explicit_type "int"
	  param inout name "paint" explicit_type "SkPaint"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} * ${p3}${v3}, ${t4} * ${p4}${v4}, ${t5} * ${p5}${v5}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} * ${p3}, ${t4} * ${p4}, ${t5} * ${p5}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1094028 "drawPatch"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 128268 // status_t
	nparams 12
	  param inout name "bitmap" explicit_type "SkBitmap"
	  param in name "xDivs" explicit_type "int32_t"
	  param in name "yDivs" explicit_type "int32_t"
	  param in name "colors" explicit_type "uint32_t"
	  param in name "width" explicit_type "uint32_t"
	  param in name "height" explicit_type "uint32_t"
	  param in name "numColors" explicit_type "int8_t"
	  param in name "left" explicit_type "float"
	  param in name "top" explicit_type "float"
	  param in name "right" explicit_type "float"
	  param in name "bottom" explicit_type "float"
	  param inout name "paint" explicit_type "SkPaint"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, const ${t1} * ${p1}${v1}, const ${t2} * ${p2}${v2}, const ${t3} * ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} ${p5}${v5}, ${t6} ${p6}${v6}, ${t7} ${p7}${v7}, ${t8} ${p8}${v8}, ${t9} ${p9}${v9}, ${t10} ${p10}${v10}, ${t11} * ${p11}${v11}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, const ${t1} * ${p1}, const ${t2} * ${p2}, const ${t3} * ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}, ${t9} ${p9}, ${t10} ${p10}, ${t11} * ${p11}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1094156 "drawPatch"
	preserve_cpp_body_indent public return_type class_ref 128268 // status_t
	nparams 13
	  param inout name "bitmap" explicit_type "SkBitmap"
	  param in name "xDivs" explicit_type "int32_t"
	  param in name "yDivs" explicit_type "int32_t"
	  param in name "colors" explicit_type "uint32_t"
	  param in name "width" explicit_type "uint32_t"
	  param in name "height" explicit_type "uint32_t"
	  param in name "numColors" explicit_type "int8_t"
	  param in name "left" explicit_type "float"
	  param in name "top" explicit_type "float"
	  param in name "right" explicit_type "float"
	  param in name "bottom" explicit_type "float"
	  param in name "alpha" explicit_type "int"
	  param in name "mode" explicit_type "SkXfermode::Mode"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, const ${t1} * ${p1}${v1}, const ${t2} * ${p2}${v2}, const ${t3} * ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} ${p5}${v5}, ${t6} ${p6}${v6}, ${t7} ${p7}${v7}, ${t8} ${p8}${v8}, ${t9} ${p9}${v9}, ${t10} ${p10}${v10}, ${t11} ${p11}${v11}, ${t12} ${p12}${v12}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, const ${t1} * ${p1}, const ${t2} * ${p2}, const ${t3} * ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}, ${t9} ${p9}, ${t10} ${p10}, ${t11} ${p11}, ${t12} ${p12}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1094284 "drawColor"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 128268 // status_t
	nparams 2
	  param in name "color" explicit_type "int"
	  param in name "mode" explicit_type "SkXfermode::Mode"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1094412 "drawRect"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 128268 // status_t
	nparams 5
	  param in name "left" explicit_type "float"
	  param in name "top" explicit_type "float"
	  param in name "right" explicit_type "float"
	  param in name "bottom" explicit_type "float"
	  param inout name "p" explicit_type "SkPaint"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} * ${p4}${v4}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} * ${p4}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1094540 "drawRoundRect"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 128268 // status_t
	nparams 7
	  param in name "left" explicit_type "float"
	  param in name "top" explicit_type "float"
	  param in name "right" explicit_type "float"
	  param in name "bottom" explicit_type "float"
	  param in name "rx" explicit_type "float"
	  param in name "ry" explicit_type "float"
	  param inout name "p" explicit_type "SkPaint"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} ${p5}${v5}, ${t6} * ${p6}${v6}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} * ${p6}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1094668 "drawCircle"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 128268 // status_t
	nparams 4
	  param in name "x" explicit_type "float"
	  param in name "y" explicit_type "float"
	  param in name "radius" explicit_type "float"
	  param inout name "p" explicit_type "SkPaint"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} * ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} * ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1094796 "drawOval"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 128268 // status_t
	nparams 5
	  param in name "left" explicit_type "float"
	  param in name "top" explicit_type "float"
	  param in name "right" explicit_type "float"
	  param in name "bottom" explicit_type "float"
	  param inout name "p" explicit_type "SkPaint"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} * ${p4}${v4}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} * ${p4}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1094924 "drawArc"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 128268 // status_t
	nparams 8
	  param in name "left" explicit_type "float"
	  param in name "top" explicit_type "float"
	  param in name "right" explicit_type "float"
	  param in name "bottom" explicit_type "float"
	  param in name "startAngle" explicit_type "float"
	  param in name "sweepAngle" explicit_type "float"
	  param in name "useCenter" explicit_type "bool"
	  param inout name "p" explicit_type "SkPaint"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} ${p5}${v5}, ${t6} ${p6}${v6}, ${t7} * ${p7}${v7}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} * ${p7}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1095052 "drawPath"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 128268 // status_t
	nparams 2
	  param inout name "path" explicit_type "SkPath"
	  param inout name "paint" explicit_type "SkPaint"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1095180 "drawLines"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 128268 // status_t
	nparams 3
	  param inout name "points" explicit_type "float"
	  param in name "count" explicit_type "int"
	  param inout name "paint" explicit_type "SkPaint"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//*
// * We draw lines as quads (tristrips). Using GL_LINES can be difficult because the rasterization
// * rules for those lines produces some unexpected results, and may vary between hardware devices.
// * The basics of lines-as-quads is easy; we simply find the normal to the line and position the
// * corners of the quads on either side of each line endpoint, separated by the strokeWidth
// * of the line. Hairlines are more involved because we need to account for transform scaling
// * to end up with a one-pixel-wide line in screen space..
// * Anti-aliased lines add another factor to the approach. We use a specialized fragment shader
// * in combination with values that we calculate and pass down in this method. The basic approach
// * is that the quad we create contains both the core line area plus a bounding area in which
// * the translucent/AA pixels are drawn. The values we calculate tell the shader what
// * proportion of the width and the length of a given segment is represented by the boundary
// * region. The quad ends up being exactly .5 pixel larger in all directions than the non-AA quad.
// * The bounding region is actually 1 pixel wide on all sides (half pixel on the outside, half pixel
// * on the inside). This ends up giving the result we want, with pixels that are completely
// * 'inside' the line area being filled opaquely and the other pixels being filled according to
// * how far into the boundary region they are, which is determined by shader interpolation.

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1095308 "drawPoints"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 128268 // status_t
	nparams 3
	  param inout name "points" explicit_type "float"
	  param in name "count" explicit_type "int"
	  param inout name "paint" explicit_type "SkPaint"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1095436 "drawTextOnPath"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 128268 // status_t
	nparams 7
	  param in name "text" explicit_type "char"
	  param in name "bytesCount" explicit_type "int"
	  param in name "count" explicit_type "int"
	  param inout name "path" explicit_type "SkPath"
	  param in name "hOffset" explicit_type "float"
	  param in name "vOffset" explicit_type "float"
	  param inout name "paint" explicit_type "SkPaint"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} * ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} ${p5}${v5}, ${t6} * ${p6}${v6}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} * ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} * ${p6}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1095564 "drawPosText"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 128268 // status_t
	nparams 5
	  param in name "text" explicit_type "char"
	  param in name "bytesCount" explicit_type "int"
	  param in name "count" explicit_type "int"
	  param in name "positions" explicit_type "float"
	  param inout name "paint" explicit_type "SkPaint"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, const ${t3} * ${p3}${v3}, ${t4} * ${p4}${v4}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, ${t1} ${p1}, ${t2} ${p2}, const ${t3} * ${p3}, ${t4} * ${p4}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1095692 "drawText"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 128268 // status_t
	nparams 8
	  param in name "text" explicit_type "char"
	  param in name "bytesCount" explicit_type "int"
	  param in name "count" explicit_type "int"
	  param in name "x" explicit_type "float"
	  param in name "y" explicit_type "float"
	  param in name "positions" explicit_type "float"
	  param inout name "paint" explicit_type "SkPaint"
	  param in name "length" explicit_type "float"
	    defaultvalue "-1.0f"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, const ${t5} * ${p5}${v5}, ${t6} * ${p6}${v6}, ${t7} ${p7}${v7}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, const ${t5} * ${p5}, ${t6} * ${p6}, ${t7} ${p7}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1095820 "resetShader"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "///////////////////////////////////////////////////////////////////////////////
// Shaders
///////////////////////////////////////////////////////////////////////////////

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1095948 "setupShader"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "shader" type class_ref 431500 // SkiaShader
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1096076 "resetColorFilter"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "///////////////////////////////////////////////////////////////////////////////
// Color filters
///////////////////////////////////////////////////////////////////////////////

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1096204 "setupColorFilter"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "filter" type class_ref 431628 // SkiaColorFilter
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1096332 "resetShadow"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "///////////////////////////////////////////////////////////////////////////////
// Drop shadow
///////////////////////////////////////////////////////////////////////////////

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1096460 "setupShadow"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 4
	  param in name "radius" explicit_type "float"
	  param in name "dx" explicit_type "float"
	  param in name "dy" explicit_type "float"
	  param in name "color" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1096588 "resetPaintFilter"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "///////////////////////////////////////////////////////////////////////////////
// Draw filters
///////////////////////////////////////////////////////////////////////////////

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1096716 "setupPaintFilter"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 2
	  param in name "clearBits" explicit_type "int"
	  param in name "setBits" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1096844 "filterPaint"
	preserve_cpp_body_indent public explicit_return_type "SkPaint"
	nparams 1
	  param inout name "paint" explicit_type "SkPaint"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1096972 "setAlpha"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "alpha" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        mSnapshot->alpha = alpha;
    };
"
	
	
	
	
	comment "*
     * Sets the alpha on the current snapshot. This alpha value will be modulated
     * with other alpha values when drawing primitives."
      end

      operation 1097100 "startMark"
	preserve_cpp_body_indent const public explicit_return_type "void"
	nparams 1
	  param in name "name" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "///////////////////////////////////////////////////////////////////////////////
// Debug
///////////////////////////////////////////////////////////////////////////////

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Inserts a named group marker in the stream of GL commands. This marker
     * can be used by tools to group commands into logical groups. A call to
     * this method must always be followed later on by a call to endMark()."
      end

      operation 1097228 "endMark"
	preserve_cpp_body_indent const public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Closes the last group marker opened by startMark()."
      end

      operation 1097356 "getAlphaAndModeDirect"
	class_operation cpp_inline public explicit_return_type "void"
	nparams 3
	  param inout name "paint" explicit_type "SkPaint"
	  param inout name "alpha" explicit_type "int"
	  param inout name "mode" explicit_type "SkXfermode::Mode"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract} {
        if (paint) {
            *mode = getXfermode(paint->getXfermode());

            // Skia draws using the color's alpha channel if < 255
            // Otherwise, it uses the paint's alpha
            int color = paint->getColor();
            *alpha = (color >> 24) & 0xFF;
            if (*alpha == 255) {
                *alpha = paint->getAlpha();
            }
        } else {
            *mode = SkXfermode::kSrcOver_Mode;
            *alpha = 255;
        }
    };
"
	
	
	
	
	comment "*
     * Gets the alpha and xfermode out of a paint object. If the paint is null
     * alpha will be 255 and the xfermode will be SRC_OVER. This method does
     * not multiply the paint's alpha by the current snapshot's alpha.
     *
     * @param paint The paint to extract values from
     * @param alpha Where to store the resulting alpha
     * @param mode Where to store the resulting xfermode"
      end

      operation 1097484 "initViewport"
	preserve_cpp_body_indent protected explicit_return_type "void"
	nparams 2
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Computes the projection matrix, initialize the first snapshot
     * and stores the dimensions of the render target."
      end

      operation 1097612 "clear"
	preserve_cpp_body_indent cpp_virtual protected return_type class_ref 128268 // status_t
	nparams 5
	  param in name "left" explicit_type "float"
	  param in name "top" explicit_type "float"
	  param in name "right" explicit_type "float"
	  param in name "bottom" explicit_type "float"
	  param in name "opaque" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Clears the underlying surface if needed."
      end

      operation 1097740 "resumeAfterLayer"
	preserve_cpp_body_indent protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Call this method after updating a layer during a drawing pass."
      end

      operation 1097868 "composeLayer"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "void"
	nparams 2
	  param in name "current" explicit_type "sp<Snapshot>"
	  param in name "previous" explicit_type "sp<Snapshot>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//*
// * Read the documentation of createLayer() before doing anything in this method.

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Compose the layer defined in the current snapshot with the layer
     * defined by the previous snapshot.
     *
     * The current snapshot *must* be a layer (flag kFlagIsLayer set.)
     *
     * @param curent The current snapshot containing the layer to compose
     * @param previous The previous snapshot to compose the current layer with"
      end

      operation 1097996 "dirtyLayerUnchecked"
	preserve_cpp_body_indent protected explicit_return_type "void"
	nparams 2
	  param inout name "bounds" type class_ref 431244 // Rect
	  param inout name "region" type class_ref 434572 // Region
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Marks the specified region as dirty at the specified bounds."
      end

      operation 1098124 "getSnapshot"
	cpp_inline protected explicit_return_type "sp<Snapshot>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return mSnapshot;
    };
"
	
	
	
	
	comment "*
     * Returns the current snapshot."
      end

      operation 1098252 "getRegion"
	cpp_virtual cpp_inline protected return_type class_ref 434572 // Region
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return mSnapshot->region;
    };
"
	
	
	
	
	comment "*
     * Returns the region of the current layer."
      end

      operation 1098380 "hasLayer"
	cpp_virtual cpp_inline protected explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return (mSnapshot->flags & Snapshot::kFlagFboTarget) && mSnapshot->region;
    };
"
	
	
	
	
	comment "*
     * Indicates whether rendering is currently targeted at a layer."
      end

      operation 1098508 "getTargetFbo"
	cpp_virtual cpp_inline protected return_type class_ref 191116 // GLint
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return 0;
    };
"
	
	
	
	
	comment "*
     * Returns the name of the FBO this renderer is rendering into."
      end

      operation 1098636 "drawTextureLayer"
	preserve_cpp_body_indent protected explicit_return_type "void"
	nparams 2
	  param inout name "layer" type class_ref 431756 // Layer
	  param in name "rect" type class_ref 431244 // Rect
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Renders the specified layer as a textured quad.
     *
     * @param layer The layer to render
     * @param rect The bounds of the layer"
      end

      operation 1098764 "getAlphaAndMode"
	preserve_cpp_body_indent cpp_inline protected explicit_return_type "void"
	nparams 3
	  param inout name "paint" explicit_type "SkPaint"
	  param inout name "alpha" explicit_type "int"
	  param inout name "mode" explicit_type "SkXfermode::Mode"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Gets the alpha and xfermode out of a paint object. If the paint is null
     * alpha will be 255 and the xfermode will be SRC_OVER.
     *
     * @param paint The paint to extract values from
     * @param alpha Where to store the resulting alpha
     * @param mode Where to store the resulting xfermode"
      end

      operation 1098892 "getXfermode"
	class_operation cpp_inline protected explicit_return_type "SkXfermode::Mode"
	nparams 1
	  param inout name "mode" explicit_type "SkXfermode"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        SkXfermode::Mode resultMode;
        if (!SkXfermode::AsMode(mode, &resultMode)) {
            resultMode = SkXfermode::kSrcOver_Mode;
        }
        return resultMode;
    };
"
	
	
	
	
	comment "*
     * Safely retrieves the mode from the specified xfermode. If the specified
     * xfermode is null, the mode is assumed to be SkXfermode::kSrcOver_Mode."
      end

      operation 1099020 "suppressErrorChecks"
	cpp_virtual cpp_inline protected explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return false;
    };
"
	
	
	
	
	comment "*
     * Set to true to suppress error checks at the end of a frame."
      end

      operation 1099148 "getCaches"
	cpp_inline protected explicit_return_type "Caches"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return mCaches;
    };
"
	
	
	
	
      end

      operation 1099276 "syncState"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Ensures the state of the renderer is the same as the state of
     * the GL context."
      end

      operation 1099404 "startTiling"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 2
	  param in name "s" explicit_type "sp<Snapshot>"
	  param in name "opaque" explicit_type "bool"
	    defaultvalue "false"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Tells the GPU what part of the screen is about to be redrawn.
     * This method needs to be invoked every time getTargetFbo() is
     * bound again."
      end

      operation 1099532 "endTiling"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Tells the GPU that we are done drawing the frame or that we
     * are switching to another render target."
      end

      operation 1099660 "saveSnapshot"
	preserve_cpp_body_indent private explicit_return_type "int"
	nparams 1
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Saves the current state of the renderer as a new snapshot.
     * The new snapshot is saved in mSnapshot and the previous snapshot
     * is linked from mSnapshot->previous.
     *
     * @param flags The save flags; see SkCanvas for more information
     *
     * @return The new save count. This value can be passed to #restoreToCount()"
      end

      operation 1099788 "restoreSnapshot"
	preserve_cpp_body_indent private explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Restores the current snapshot; mSnapshot becomes mSnapshot->previous.
     *
     * @return True if the clip was modified."
      end

      operation 1099916 "setScissorFromClip"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "///////////////////////////////////////////////////////////////////////////////
// Clipping
///////////////////////////////////////////////////////////////////////////////

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Sets the clipping rectangle using glScissor. The clip is defined by
     * the current snapshot's clipRect member."
      end

      operation 1100044 "quickRejectNoScissor"
	preserve_cpp_body_indent private explicit_return_type "bool"
	nparams 6
	  param in name "left" explicit_type "float"
	  param in name "top" explicit_type "float"
	  param in name "right" explicit_type "float"
	  param in name "bottom" explicit_type "float"
	  param inout name "transformed" type class_ref 431244 // Rect
	  param inout name "clip" type class_ref 431244 // Rect
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} & ${p4}${v4}, ${t5} & ${p5}${v5}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} & ${p4}, ${t5} & ${p5}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Performs a quick reject but does not affect the scissor. Returns
     * the transformed rect to test and the current clip."
      end

      operation 1100172 "quickRejectPreStroke"
	preserve_cpp_body_indent private explicit_return_type "bool"
	nparams 5
	  param in name "left" explicit_type "float"
	  param in name "top" explicit_type "float"
	  param in name "right" explicit_type "float"
	  param in name "bottom" explicit_type "float"
	  param inout name "paint" explicit_type "SkPaint"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} * ${p4}${v4}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} * ${p4}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Performs a quick reject but adjust the bounds to account for stroke width if necessary"
      end

      operation 1100300 "createLayer"
	preserve_cpp_body_indent private explicit_return_type "bool"
	nparams 8
	  param in name "left" explicit_type "float"
	  param in name "top" explicit_type "float"
	  param in name "right" explicit_type "float"
	  param in name "bottom" explicit_type "float"
	  param in name "alpha" explicit_type "int"
	  param in name "mode" explicit_type "SkXfermode::Mode"
	  param in name "flags" explicit_type "int"
	  param in name "previousFbo" type class_ref 190220 // GLuint
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} ${p5}${v5}, ${t6} ${p6}${v6}, ${t7} ${p7}${v7}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//*
// * Layers are viewed by Skia are slightly different than layers in image editing
// * programs (for instance.) When a layer is created, previously created layers
// * and the frame buffer still receive every drawing command. For instance, if a
// * layer is created and a shape intersecting the bounds of the layers and the
// * framebuffer is draw, the shape will be drawn on both (unless the layer was
// * created with the SkCanvas::kClipToLayer_SaveFlag flag.)
// *
// * A way to implement layers is to create an FBO for each layer, backed by an RGBA
// * texture. Unfortunately, this is inefficient as it requires every primitive to
// * be drawn n + 1 times, where n is the number of active layers. In practice this
// * means, for every primitive:
// *   - Switch active frame buffer
// *   - Change viewport, clip and projection matrix
// *   - Issue the drawing
// *
// * Switching rendering target n + 1 times per drawn primitive is extremely costly.
// * To avoid this, layers are implemented in a different way here, at least in the
// * general case. FBOs are used, as an optimization, when the \"clip to layer\" flag
// * is set. When this flag is set we can redirect all drawing operations into a
// * single FBO.
// *
// * This implementation relies on the frame buffer being at least RGBA 8888. When
// * a layer is created, only a texture is created, not an FBO. The content of the
// * frame buffer contained within the layer's bounds is copied into this texture
// * using glCopyTexImage2D(). The layer's region is then cleared(1) in the frame
// * buffer and drawing continues as normal. This technique therefore treats the
// * frame buffer as a scratch buffer for the layers.
// *
// * To compose the layers back onto the frame buffer, each layer texture
// * (containing the original frame buffer data) is drawn as a simple quad over
// * the frame buffer. The trick is that the quad is set as the composition
// * destination in the blending equation, and the frame buffer becomes the source
// * of the composition.
// *
// * Drawing layers with an alpha value requires an extra step before composition.
// * An empty quad is drawn over the layer's region in the frame buffer. This quad
// * is drawn with the rgba color (0,0,0,alpha). The alpha value offered by the
// * quad is used to multiply the colors in the frame buffer. This is achieved by
// * changing the GL blend functions for the GL_FUNC_ADD blend equation to
// * GL_ZERO, GL_SRC_ALPHA.
// *
// * Because glCopyTexImage2D() can be slow, an alternative implementation might
// * be use to draw a single clipped layer. The implementation described above
// * is correct in every case.
// *
// * (1) The frame buffer is actually not cleared right away. To allow the GPU
// *     to potentially optimize series of calls to glCopyTexImage2D, the frame
// *     buffer is left untouched until the first drawing operation. Only when
// *     something actually gets drawn are the layers regions cleared.

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Creates a new layer stored in the specified snapshot.
     *
     * @param snapshot The snapshot associated with the new layer
     * @param left The left coordinate of the layer
     * @param top The top coordinate of the layer
     * @param right The right coordinate of the layer
     * @param bottom The bottom coordinate of the layer
     * @param alpha The translucency of the layer
     * @param mode The blending mode of the layer
     * @param flags The layer save flags
     * @param previousFbo The name of the current framebuffer
     *
     * @return True if the layer was successfully created, false otherwise"
      end

      operation 1100428 "createFboLayer"
	preserve_cpp_body_indent private explicit_return_type "bool"
	nparams 4
	  param inout name "layer" type class_ref 431756 // Layer
	  param inout name "bounds" type class_ref 431244 // Rect
	  param inout name "clip" type class_ref 431244 // Rect
	  param in name "previousFbo" type class_ref 190220 // GLuint
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} & ${p1}${v1}, ${t2} & ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} & ${p1}, ${t2} & ${p2}, ${t3} ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Creates a new layer stored in the specified snapshot as an FBO.
     *
     * @param layer The layer to store as an FBO
     * @param snapshot The snapshot associated with the new layer
     * @param bounds The bounds of the layer
     * @param previousFbo The name of the current framebuffer"
      end

      operation 1100556 "composeLayerRegion"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 2
	  param inout name "layer" type class_ref 431756 // Layer
	  param in name "rect" type class_ref 431244 // Rect
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Compose the specified layer as a region.
     *
     * @param layer The layer to compose
     * @param rect The layer's bounds"
      end

      operation 1100684 "composeLayerRect"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 3
	  param inout name "layer" type class_ref 431756 // Layer
	  param in name "rect" type class_ref 431244 // Rect
	  param in name "swap" explicit_type "bool"
	    defaultvalue "false"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, const ${t1} & ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Compose the specified layer as a simple rectangle.
     *
     * @param layer The layer to compose
     * @param rect The layer's bounds
     * @param swap If true, the source and destination are swapped"
      end

      operation 1100812 "clearLayerRegions"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Clears all the regions corresponding to the current list of layers.
     * This method MUST be invoked before any drawing operation."
      end

      operation 1100940 "dirtyLayer"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 5
	  param in name "left" explicit_type "float"
	  param in name "top" explicit_type "float"
	  param in name "right" explicit_type "float"
	  param in name "bottom" explicit_type "float"
	  param in name "transform" type class_ref 434444 // mat4
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} ${p0}${v0}, const ${t1} ${p1}${v1}, const ${t2} ${p2}${v2}, const ${t3} ${p3}${v3}, const ${t4} ${p4}${v4}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} ${p0}, const ${t1} ${p1}, const ${t2} ${p2}, const ${t3} ${p3}, const ${t4} ${p4}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Mark the layer as dirty at the specified coordinates. The coordinates
     * are transformed with the supplied matrix."
      end

      operation 1101068 "dirtyLayer"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 4
	  param in name "left" explicit_type "float"
	  param in name "top" explicit_type "float"
	  param in name "right" explicit_type "float"
	  param in name "bottom" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} ${p0}${v0}, const ${t1} ${p1}${v1}, const ${t2} ${p2}${v2}, const ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} ${p0}, const ${t1} ${p1}, const ${t2} ${p2}, const ${t3} ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Mark the layer as dirty at the specified coordinates."
      end

      operation 1101196 "drawColorRect"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 7
	  param in name "left" explicit_type "float"
	  param in name "top" explicit_type "float"
	  param in name "right" explicit_type "float"
	  param in name "bottom" explicit_type "float"
	  param in name "color" explicit_type "int"
	  param in name "mode" explicit_type "SkXfermode::Mode"
	  param in name "ignoreTransform" explicit_type "bool"
	    defaultvalue "false"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} ${p5}${v5}, ${t6} ${p6}${v6}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Draws a colored rectangle with the specified color. The specified coordinates
     * are transformed by the current snapshot's transform matrix.
     *
     * @param left The left coordinate of the rectangle
     * @param top The top coordinate of the rectangle
     * @param right The right coordinate of the rectangle
     * @param bottom The bottom coordinate of the rectangle
     * @param color The rectangle's ARGB color, defined as a packed 32 bits word
     * @param mode The Skia xfermode to use
     * @param ignoreTransform True if the current transform should be ignored"
      end

      operation 1101324 "drawShape"
	preserve_cpp_body_indent private return_type class_ref 128268 // status_t
	nparams 4
	  param in name "left" explicit_type "float"
	  param in name "top" explicit_type "float"
	  param in name "texture" type class_ref 435340 // PathTexture
	  param inout name "paint" explicit_type "SkPaint"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, const ${t2} * ${p2}${v2}, ${t3} * ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, const ${t2} * ${p2}, ${t3} * ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Draws the shape represented by the specified path texture.
     * This method invokes drawPathTexture() but takes into account
     * the extra left/top offset and the texture offset to correctly
     * position the final shape.
     *
     * @param left The left coordinate of the shape to render
     * @param top The top coordinate of the shape to render
     * @param texture The texture reprsenting the shape
     * @param paint The paint to draw the shape with"
      end

      operation 1101452 "drawAlphaBitmap"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 4
	  param inout name "texture" type class_ref 434188 // Texture
	  param in name "left" explicit_type "float"
	  param in name "top" explicit_type "float"
	  param inout name "paint" explicit_type "SkPaint"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} * ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} * ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Draws the specified texture as an alpha bitmap. Alpha bitmaps obey
     * different compositing rules.
     *
     * @param texture The texture to draw with
     * @param left The x coordinate of the bitmap
     * @param top The y coordinate of the bitmap
     * @param paint The paint to render with"
      end

      operation 1101580 "drawConvexPath"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 2
	  param in name "path" explicit_type "SkPath"
	  param inout name "paint" explicit_type "SkPaint"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//*
// * Renders a convex path via tessellation. For AA paths, this function uses a similar approach to
// * that of AA lines in the drawLines() function.  We expand the convex path by a half pixel in
// * screen space in all directions. However, instead of using a fragment shader to compute the
// * translucency of the color from its position, we simply use a varying parameter to define how far
// * a given pixel is from the edge. For non-AA paths, the expansion and alpha varying are not used.
// *
// * Doesn't yet support joins, caps, or path effects.

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Renders the convex hull defined by the specified path as a strip of polygons.
     *
     * @param path The hull of the path to draw
     * @param paint The paint to render with"
      end

      operation 1101708 "drawTextureRect"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 8
	  param in name "left" explicit_type "float"
	  param in name "top" explicit_type "float"
	  param in name "right" explicit_type "float"
	  param in name "bottom" explicit_type "float"
	  param in name "texture" type class_ref 190220 // GLuint
	  param in name "alpha" explicit_type "float"
	  param in name "mode" explicit_type "SkXfermode::Mode"
	  param in name "blend" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} ${p5}${v5}, ${t6} ${p6}${v6}, ${t7} ${p7}${v7}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Draws a textured rectangle with the specified texture. The specified coordinates
     * are transformed by the current snapshot's transform matrix.
     *
     * @param left The left coordinate of the rectangle
     * @param top The top coordinate of the rectangle
     * @param right The right coordinate of the rectangle
     * @param bottom The bottom coordinate of the rectangle
     * @param texture The texture name to map onto the rectangle
     * @param alpha An additional translucency parameter, between 0.0f and 1.0f
     * @param mode The blending mode
     * @param blend True if the texture contains an alpha channel"
      end

      operation 1101836 "drawTextureRect"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 6
	  param in name "left" explicit_type "float"
	  param in name "top" explicit_type "float"
	  param in name "right" explicit_type "float"
	  param in name "bottom" explicit_type "float"
	  param inout name "texture" type class_ref 434188 // Texture
	  param inout name "paint" explicit_type "SkPaint"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} * ${p4}${v4}, ${t5} * ${p5}${v5}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} * ${p4}, ${t5} * ${p5}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Draws a textured rectangle with the specified texture. The specified coordinates
     * are transformed by the current snapshot's transform matrix.
     *
     * @param left The left coordinate of the rectangle
     * @param top The top coordinate of the rectangle
     * @param right The right coordinate of the rectangle
     * @param bottom The bottom coordinate of the rectangle
     * @param texture The texture to use
     * @param paint The paint containing the alpha, blending mode, etc."
      end

      operation 1101964 "drawTextureMesh"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 17
	  param in name "left" explicit_type "float"
	  param in name "top" explicit_type "float"
	  param in name "right" explicit_type "float"
	  param in name "bottom" explicit_type "float"
	  param in name "texture" type class_ref 190220 // GLuint
	  param in name "alpha" explicit_type "float"
	  param in name "mode" explicit_type "SkXfermode::Mode"
	  param in name "blend" explicit_type "bool"
	  param inout name "vertices" type class_ref 435468 // GLvoid
	  param inout name "texCoords" type class_ref 435468 // GLvoid
	  param in name "drawMode" type class_ref 190348 // GLenum
	  param in name "elementsCount" type class_ref 434828 // GLsizei
	  param in name "swapSrcDst" explicit_type "bool"
	    defaultvalue "false"
	  param in name "ignoreTransform" explicit_type "bool"
	    defaultvalue "false"
	  param in name "vbo" type class_ref 190220 // GLuint
	    defaultvalue "0"
	  param in name "ignoreScale" explicit_type "bool"
	    defaultvalue "false"
	  param in name "dirty" explicit_type "bool"
	    defaultvalue "true"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} ${p5}${v5}, ${t6} ${p6}${v6}, ${t7} ${p7}${v7}, ${t8} * ${p8}${v8}, ${t9} * ${p9}${v9}, ${t10} ${p10}${v10}, ${t11} ${p11}${v11}, ${t12} ${p12}${v12}, ${t13} ${p13}${v13}, ${t14} ${p14}${v14}, ${t15} ${p15}${v15}, ${t16} ${p16}${v16}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} * ${p8}, ${t9} * ${p9}, ${t10} ${p10}, ${t11} ${p11}, ${t12} ${p12}, ${t13} ${p13}, ${t14} ${p14}, ${t15} ${p15}, ${t16} ${p16}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Draws a textured mesh with the specified texture. If the indices are omitted,
     * the mesh is drawn as a simple quad. The mesh pointers become offsets when a
     * VBO is bound.
     *
     * @param left The left coordinate of the rectangle
     * @param top The top coordinate of the rectangle
     * @param right The right coordinate of the rectangle
     * @param bottom The bottom coordinate of the rectangle
     * @param texture The texture name to map onto the rectangle
     * @param alpha An additional translucency parameter, between 0.0f and 1.0f
     * @param mode The blending mode
     * @param blend True if the texture contains an alpha channel
     * @param vertices The vertices that define the mesh
     * @param texCoords The texture coordinates of each vertex
     * @param elementsCount The number of elements in the mesh, required by indices
     * @param swapSrcDst Whether or not the src and dst blending operations should be swapped
     * @param ignoreTransform True if the current transform should be ignored
     * @param vbo The VBO used to draw the mesh
     * @param ignoreScale True if the model view matrix should not be scaled
     * @param dirty True if calling this method should dirty the current layer"
      end

      operation 1102092 "drawTextDecorations"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 6
	  param in name "text" explicit_type "char"
	  param in name "bytesCount" explicit_type "int"
	  param in name "length" explicit_type "float"
	  param in name "x" explicit_type "float"
	  param in name "y" explicit_type "float"
	  param inout name "paint" explicit_type "SkPaint"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} * ${p5}${v5}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} * ${p5}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Draws text underline and strike-through if needed.
     *
     * @param text The text to decor
     * @param bytesCount The number of bytes in the text
     * @param length The length in pixels of the text, can be <= 0.0f to force a measurement
     * @param x The x coordinate where the text will be drawn
     * @param y The y coordinate where the text will be drawn
     * @param paint The paint to draw the text with"
      end

      operation 1102220 "drawTextShadow"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 10
	  param inout name "paint" explicit_type "SkPaint"
	  param in name "text" explicit_type "char"
	  param in name "bytesCount" explicit_type "int"
	  param in name "count" explicit_type "int"
	  param in name "positions" explicit_type "float"
	  param inout name "fontRenderer" type class_ref 432524 // FontRenderer
	  param in name "alpha" explicit_type "int"
	  param in name "mode" explicit_type "SkXfermode::Mode"
	  param in name "x" explicit_type "float"
	  param in name "y" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, const ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, const ${t4} * ${p4}${v4}, ${t5} & ${p5}${v5}, ${t6} ${p6}${v6}, ${t7} ${p7}${v7}, ${t8} ${p8}${v8}, ${t9} ${p9}${v9}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, const ${t1} * ${p1}, ${t2} ${p2}, ${t3} ${p3}, const ${t4} * ${p4}, ${t5} & ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}, ${t9} ${p9}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Draws shadow layer on text (with optional positions).
     *
     * @param paint The paint to draw the shadow with
     * @param text The text to draw
     * @param bytesCount The number of bytes in the text
     * @param count The number of glyphs in the text
     * @param positions The x, y positions of individual glyphs (or NULL)
     * @param fontRenderer The font renderer object
     * @param alpha The alpha value for drawing the shadow
     * @param mode The xfermode for drawing the shadow
     * @param x The x coordinate where the shadow will be drawn
     * @param y The y coordinate where the shadow will be drawn"
      end

      operation 1102348 "drawPathTexture"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 4
	  param in name "texture" type class_ref 435340 // PathTexture
	  param in name "x" explicit_type "float"
	  param in name "y" explicit_type "float"
	  param inout name "paint" explicit_type "SkPaint"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} * ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "///////////////////////////////////////////////////////////////////////////////
// Drawing implementation
///////////////////////////////////////////////////////////////////////////////

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} * ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Draws a path texture. Path textures are alpha8 bitmaps that need special
     * compositing to apply colors/filters/etc.
     *
     * @param texture The texture to render
     * @param x The x coordinate where the texture will be drawn
     * @param y The y coordinate where the texture will be drawn
     * @param paint The paint to draw the texture with"
      end

      operation 1102476 "resetDrawTextureTexCoords"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 4
	  param in name "u1" explicit_type "float"
	  param in name "v1" explicit_type "float"
	  param in name "u2" explicit_type "float"
	  param in name "v2" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Resets the texture coordinates stored in mMeshVertices. Setting the values
     * back to default is achieved by calling:
     *
     * resetDrawTextureTexCoords(0.0f, 0.0f, 1.0f, 1.0f);
     *
     * @param u1 The left coordinate of the texture
     * @param v1 The bottom coordinate of the texture
     * @param u2 The right coordinate of the texture
     * @param v2 The top coordinate of the texture"
      end

      operation 1102604 "bindTexture"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param in name "texture" type class_ref 190220 // GLuint
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        glBindTexture(GL_TEXTURE_2D, texture);
    };
"
	
	
	
	
	comment "*
     * Binds the specified texture. The texture unit must have been selected
     * prior to calling this method."
      end

      operation 1102732 "bindExternalTexture"
	cpp_inline private explicit_return_type "void"
	nparams 1
	  param in name "texture" type class_ref 190220 // GLuint
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        glBindTexture(GL_TEXTURE_EXTERNAL_OES, texture);
    };
"
	
	
	
	
	comment "*
     * Binds the specified EGLImage texture. The texture unit must have been selected
     * prior to calling this method."
      end

      operation 1102860 "chooseBlending"
	preserve_cpp_body_indent cpp_inline private explicit_return_type "void"
	nparams 4
	  param in name "blend" explicit_type "bool"
	  param in name "mode" explicit_type "SkXfermode::Mode"
	  param inout name "description" type class_ref 433292 // ProgramDescription
	  param in name "swapSrcDst" explicit_type "bool"
	    defaultvalue "false"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} & ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} & ${p2}, ${t3} ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Enable or disable blending as necessary. This function sets the appropriate
     * blend function based on the specified xfermode."
      end

      operation 1102988 "useProgram"
	preserve_cpp_body_indent cpp_inline private explicit_return_type "bool"
	nparams 1
	  param inout name "program" type class_ref 432140 // Program
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Use the specified program with the current GL context. If the program is already
     * in use, it will not be bound again. If it is not in use, the current program is
     * marked unused and the specified program becomes used and becomes the new
     * current program.
     *
     * @param program The program to use
     *
     * @return true If the specified program was already in use, false otherwise."
      end

      operation 1103116 "setupDraw"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 1
	  param in name "clear" explicit_type "bool"
	    defaultvalue "true"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "///////////////////////////////////////////////////////////////////////////////
// Drawing commands
///////////////////////////////////////////////////////////////////////////////

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Invoked before any drawing operation. This sets required state."
      end

      operation 1103244 "setupDrawWithTexture"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 1
	  param in name "isAlpha8" explicit_type "bool"
	    defaultvalue "false"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Various methods to setup OpenGL rendering."
      end

      operation 1103372 "setupDrawWithExternalTexture"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1103500 "setupDrawNoTexture"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1103628 "setupDrawAA"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1103756 "setupDrawVertexShape"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1103884 "setupDrawPoint"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 1
	  param in name "pointSize" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1104012 "setupDrawColor"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 1
	  param in name "color" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1104140 "setupDrawColor"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 2
	  param in name "color" explicit_type "int"
	  param in name "alpha" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1104268 "setupDrawColor"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 4
	  param in name "r" explicit_type "float"
	  param in name "g" explicit_type "float"
	  param in name "b" explicit_type "float"
	  param in name "a" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1104396 "setupDrawAlpha8Color"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 2
	  param in name "color" explicit_type "int"
	  param in name "alpha" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1104524 "setupDrawTextGamma"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 1
	  param in name "paint" explicit_type "SkPaint"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1104652 "setupDrawShader"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1104780 "setupDrawColorFilter"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1104908 "setupDrawBlending"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 2
	  param in name "mode" explicit_type "SkXfermode::Mode"
	    defaultvalue "SkXfermode::kSrcOver_Mode"
	  param in name "swapSrcDst" explicit_type "bool"
	    defaultvalue "false"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1105036 "setupDrawBlending"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 3
	  param in name "blend" explicit_type "bool"
	    defaultvalue "true"
	  param in name "mode" explicit_type "SkXfermode::Mode"
	    defaultvalue "SkXfermode::kSrcOver_Mode"
	  param in name "swapSrcDst" explicit_type "bool"
	    defaultvalue "false"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1105164 "setupDrawProgram"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1105292 "setupDrawDirtyRegionsDisabled"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1105420 "setupDrawModelViewIdentity"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 1
	  param in name "offset" explicit_type "bool"
	    defaultvalue "false"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1105548 "setupDrawModelView"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 6
	  param in name "left" explicit_type "float"
	  param in name "top" explicit_type "float"
	  param in name "right" explicit_type "float"
	  param in name "bottom" explicit_type "float"
	  param in name "ignoreTransform" explicit_type "bool"
	    defaultvalue "false"
	  param in name "ignoreModelView" explicit_type "bool"
	    defaultvalue "false"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} ${p5}${v5}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1105676 "setupDrawModelViewTranslate"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 5
	  param in name "left" explicit_type "float"
	  param in name "top" explicit_type "float"
	  param in name "right" explicit_type "float"
	  param in name "bottom" explicit_type "float"
	  param in name "ignoreTransform" explicit_type "bool"
	    defaultvalue "false"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1105804 "setupDrawPointUniforms"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1105932 "setupDrawColorUniforms"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1106060 "setupDrawPureColorUniforms"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1106188 "setupDrawShaderIdentityUniforms"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1106316 "setupDrawShaderUniforms"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 1
	  param in name "ignoreTransform" explicit_type "bool"
	    defaultvalue "false"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1106444 "setupDrawColorFilterUniforms"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1106572 "setupDrawSimpleMesh"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1106700 "setupDrawTexture"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 1
	  param in name "texture" type class_ref 190220 // GLuint
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1106828 "setupDrawExternalTexture"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 1
	  param in name "texture" type class_ref 190220 // GLuint
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1106956 "setupDrawTextureTransform"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1107084 "setupDrawTextureTransformUniforms"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 1
	  param inout name "transform" type class_ref 434444 // mat4
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1107212 "setupDrawTextGammaUniforms"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1107340 "setupDrawMesh"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 3
	  param inout name "vertices" type class_ref 435468 // GLvoid
	  param inout name "texCoords" type class_ref 435468 // GLvoid
	    defaultvalue "NULL"
	  param in name "vbo" type class_ref 190220 // GLuint
	    defaultvalue "0"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1107468 "setupDrawMeshIndices"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 2
	  param inout name "vertices" type class_ref 435468 // GLvoid
	  param inout name "texCoords" type class_ref 435468 // GLvoid
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1107596 "setupDrawVertices"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 1
	  param inout name "vertices" type class_ref 435468 // GLvoid
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1107724 "setupDrawAALine"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 6
	  param inout name "vertices" type class_ref 435468 // GLvoid
	  param inout name "widthCoords" type class_ref 435468 // GLvoid
	  param inout name "lengthCoords" type class_ref 435468 // GLvoid
	  param in name "boundaryWidthProportion" explicit_type "float"
	  param inout name "widthSlot" explicit_type "int"
	  param inout name "lengthSlot" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} & ${p4}${v4}, ${t5} & ${p5}${v5}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//*
// * Sets up the shader to draw an AA line. We draw AA lines with quads, where there is an
// * outer boundary that fades out to 0. The variables set in the shader define the proportion of
// * the width and length of the primitive occupied by the AA region. The vtxWidth and vtxLength
// * attributes (one per vertex) are values from zero to one that tells the fragment
// * shader where the fragment is in relation to the line width/length overall; these values are
// * then used to compute the proper color, based on whether the fragment lies in the fading AA
// * region of the line.
// * Note that we only pass down the width values in this setup function. The length coordinates
// * are set up for each individual segment.

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} * ${p2}, ${t3} ${p3}, ${t4} & ${p4}, ${t5} & ${p5}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1107852 "finishDrawAALine"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 2
	  param in name "widthSlot" explicit_type "int"
	  param in name "lengthSlot" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} ${p0}${v0}, const ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} ${p0}, const ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1107980 "finishDrawTexture"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1108108 "accountForClear"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 1
	  param in name "mode" explicit_type "SkXfermode::Mode"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1108236 "updateLayer"
	preserve_cpp_body_indent private explicit_return_type "bool"
	nparams 2
	  param inout name "layer" type class_ref 431756 // Layer
	  param in name "inFrame" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "///////////////////////////////////////////////////////////////////////////////
// Layers
///////////////////////////////////////////////////////////////////////////////

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1108364 "updateLayers"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1108492 "drawRegionRects"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 1
	  param in name "region" type class_ref 434572 // Region
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Renders the specified region as a series of rectangles. This method
     * is used for debugging only."
      end

      operation 1108620 "debugOverdraw"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 2
	  param in name "enable" explicit_type "bool"
	  param in name "clear" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1108748 "renderOverdraw"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1108876 "dirtyClip"
	cpp_inline private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        mDirtyClip = true;
    };
"
	
	
	
	
	comment "*
     * Should be invoked every time the glScissor is modified."
      end

      classrelation 902668 // mOrthoMatrix (<directional composition>)
	relation 902668 *-->
	  a role_name "mOrthoMatrix" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 902668 // mOrthoMatrix (<directional composition>)
	  b parent class_ref 434444 // mat4
      end

      classrelation 902796 // mModelView (<directional composition>)
	relation 902796 *-->
	  a role_name "mModelView" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 902796 // mModelView (<directional composition>)
	  b parent class_ref 434444 // mat4
      end

      attribute 984844 "mSaveCount"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 902924 // mFirstSnapshot (<directional composition>)
	relation 902924 *-->
	  stereotype "sp"
	  a role_name "mFirstSnapshot" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 902924 // mFirstSnapshot (<directional composition>)
	  b parent class_ref 435596 // Snapshot
      end

      classrelation 903052 // mSnapshot (<directional composition>)
	relation 903052 *-->
	  stereotype "sp"
	  a role_name "mSnapshot" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 903052 // mSnapshot (<directional composition>)
	  b parent class_ref 435596 // Snapshot
      end

      classrelation 903180 // mTilingSnapshot (<directional composition>)
	relation 903180 *-->
	  stereotype "sp"
	  a role_name "mTilingSnapshot" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 903180 // mTilingSnapshot (<directional composition>)
	  b parent class_ref 435596 // Snapshot
      end

      classrelation 903308 // mShader (<unidirectional association>)
	relation 903308 --->
	  a role_name "mShader" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 903308 // mShader (<unidirectional association>)
	  b parent class_ref 431500 // SkiaShader
      end

      classrelation 903436 // mColorFilter (<unidirectional association>)
	relation 903436 --->
	  a role_name "mColorFilter" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 903436 // mColorFilter (<unidirectional association>)
	  b parent class_ref 431628 // SkiaColorFilter
      end

      classrelation 903564 // mMeshVertices (<directional composition>)
	relation 903564 *-->
	  a role_name "mMeshVertices" multiplicity "[4]" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	    classrelation_ref 903564 // mMeshVertices (<directional composition>)
	  b parent class_ref 434700 // TextureVertex
      end

      attribute 984972 "mHasShadow"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 985100 "mShadowRadius"
	private explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 985228 "mShadowDx"
	private explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 985356 "mShadowDy"
	private explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 985484 "mShadowColor"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 985612 "mHasDrawFilter"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 985740 "mPaintFilterClearBits"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 985868 "mPaintFilterSetBits"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 985996 "mFilteredPaint"
	private explicit_type "SkPaint"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 986124 "mCaches"
	private explicit_type "Caches"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} & ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 903692 // mLayers (<unidirectional association>)
	relation 903692 --->
	  stereotype "Vector"
	  a role_name "mLayers" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}*> ${name}${value};
"
	    classrelation_ref 903692 // mLayers (<unidirectional association>)
	  b parent class_ref 431244 // Rect
      end

      classrelation 903820 // mFunctors (<unidirectional association>)
	relation 903820 --->
	  stereotype "SortedVector"
	  a role_name "mFunctors" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}*> ${name}${value};
"
	    classrelation_ref 903820 // mFunctors (<unidirectional association>)
	  b parent class_ref 431884 // Functor
      end

      classrelation 903948 // mLayerUpdates (<unidirectional association>)
	relation 903948 --->
	  stereotype "Vector"
	  a role_name "mLayerUpdates" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}*> ${name}${value};
"
	    classrelation_ref 903948 // mLayerUpdates (<unidirectional association>)
	  b parent class_ref 431756 // Layer
      end

      classrelation 904076 // mIdentity (<directional composition>)
	relation 904076 *-->
	  a role_name "mIdentity" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 904076 // mIdentity (<directional composition>)
	  b parent class_ref 434444 // mat4
      end

      attribute 986252 "mDirtyClip"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 904204 // mDescription (<directional composition>)
	relation 904204 *-->
	  a role_name "mDescription" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 904204 // mDescription (<directional composition>)
	  b parent class_ref 433292 // ProgramDescription
      end

      attribute 986380 "mColorSet"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 986508 "mSetShaderColor"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 904332 // mTextureUnit (<directional composition>)
	relation 904332 *-->
	  a role_name "mTextureUnit" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 904332 // mTextureUnit (<directional composition>)
	  b parent class_ref 190220 // GLuint
      end

      attribute 986636 "mTrackDirtyRegions"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 986764 "mOpaqueFrame"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 986892 "mScissorOptimizationDisabled"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 987020 "mSuppressTiling"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 904460 // <dependency>
	relation 904460 -_->
	  stereotype "friend"
	  a default
	    cpp default "${type}"
	    classrelation_ref 904460 // <dependency>
	  b parent class_ref 430732 // DisplayListRenderer
      end
    end

    class 431244 "Rect"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "/////////////////////////////////////////////////////////////////////////////
 Structs
/////////////////////////////////////////////////////////////////////////////"
      attribute 995724 "left"
	public explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 995852 "top"
	public explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 995980 "right"
	public explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 996108 "bottom"
	public explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      class 437644 "value_type"
	visibility package stereotype "typedef" explicit_base_type "float"
	cpp_decl "${comment}typedef ${type} ${name};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
      end

      operation 1117836 "Rect"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} :
            left(0),
            top(0),
            right(0),
            bottom(0) {
    };
"
	
	
	
	
	comment " we don't provide copy-ctor and operator= on purpose
 because we want the compiler generated versions"
      end

      operation 1117964 "Rect"
	cpp_inline public explicit_return_type ""
	nparams 4
	  param in name "left" explicit_type "float"
	  param in name "top" explicit_type "float"
	  param in name "right" explicit_type "float"
	  param in name "bottom" explicit_type "float"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${volatile}${throw} :
            left(left),
            top(top),
            right(right),
            bottom(bottom) {
    };
"
	
	
	
	
      end

      operation 1118092 "Rect"
	cpp_inline public explicit_return_type ""
	nparams 2
	  param in name "width" explicit_type "float"
	  param in name "height" explicit_type "float"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${volatile}${throw} :
            left(0.0f),
            top(0.0f),
            right(width),
            bottom(height) {
    };
"
	
	
	
	
      end

      operation 1118220 "operator =="
	friend cpp_inline public explicit_return_type "int"
	nparams 2
	  param in name "a" type class_ref 431244 // Rect
	  param in name "b" type class_ref 431244 // Rect
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        return !memcmp(&a, &b, sizeof(a));
    };
"
	
	
	
	
      end

      operation 1118348 "operator !="
	friend cpp_inline public explicit_return_type "int"
	nparams 2
	  param in name "a" type class_ref 431244 // Rect
	  param in name "b" type class_ref 431244 // Rect
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        return memcmp(&a, &b, sizeof(a));
    };
"
	
	
	
	
      end

      operation 1118476 "clear"
	cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        left = top = right = bottom = 0.0f;
    };
"
	
	
	
	
      end

      operation 1118604 "isEmpty"
	const cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        // this is written in such way this it'll handle NANs to return
        // true (empty)
        return !((left < right) && (top < bottom));
    };
"
	
	
	
	
      end

      operation 1118732 "setEmpty"
	cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        left = top = right = bottom = 0.0f;
    };
"
	
	
	
	
      end

      operation 1118860 "set"
	cpp_inline public explicit_return_type "void"
	nparams 4
	  param in name "left" explicit_type "float"
	  param in name "top" explicit_type "float"
	  param in name "right" explicit_type "float"
	  param in name "bottom" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract} {
        this->left = left;
        this->right = right;
        this->top = top;
        this->bottom = bottom;
    };
"
	
	
	
	
      end

      operation 1118988 "set"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "r" type class_ref 431244 // Rect
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        set(r.left, r.top, r.right, r.bottom);
    };
"
	
	
	
	
      end

      operation 1119116 "getWidth"
	const cpp_inline public explicit_return_type "float"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return right - left;
    };
"
	
	
	
	
      end

      operation 1119244 "getHeight"
	const cpp_inline public explicit_return_type "float"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return bottom - top;
    };
"
	
	
	
	
      end

      operation 1119372 "intersects"
	const cpp_inline public explicit_return_type "bool"
	nparams 4
	  param in name "l" explicit_type "float"
	  param in name "t" explicit_type "float"
	  param in name "r" explicit_type "float"
	  param in name "b" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract} {
        return !intersectWith(l, t, r, b).isEmpty();
    };
"
	
	
	
	
      end

      operation 1119500 "intersects"
	const cpp_inline public explicit_return_type "bool"
	nparams 1
	  param in name "r" type class_ref 431244 // Rect
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        return intersects(r.left, r.top, r.right, r.bottom);
    };
"
	
	
	
	
      end

      operation 1119628 "intersect"
	cpp_inline public explicit_return_type "bool"
	nparams 4
	  param in name "l" explicit_type "float"
	  param in name "t" explicit_type "float"
	  param in name "r" explicit_type "float"
	  param in name "b" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract} {
        Rect tmp(l, t, r, b);
        intersectWith(tmp);
        if (!tmp.isEmpty()) {
            set(tmp);
            return true;
        }
        return false;
    };
"
	
	
	
	
      end

      operation 1119756 "intersect"
	cpp_inline public explicit_return_type "bool"
	nparams 1
	  param in name "r" type class_ref 431244 // Rect
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        return intersect(r.left, r.top, r.right, r.bottom);
    };
"
	
	
	
	
      end

      operation 1119884 "contains"
	cpp_inline public explicit_return_type "bool"
	nparams 4
	  param in name "l" explicit_type "float"
	  param in name "t" explicit_type "float"
	  param in name "r" explicit_type "float"
	  param in name "b" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract} {
        return l >= left && t >= top && r <= right && b <= bottom;
    };
"
	
	
	
	
      end

      operation 1120012 "contains"
	cpp_inline public explicit_return_type "bool"
	nparams 1
	  param in name "r" type class_ref 431244 // Rect
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        return contains(r.left, r.top, r.right, r.bottom);
    };
"
	
	
	
	
      end

      operation 1120140 "unionWith"
	cpp_inline public explicit_return_type "bool"
	nparams 1
	  param in name "r" type class_ref 431244 // Rect
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        if (r.left < r.right && r.top < r.bottom) {
            if (left < right && top < bottom) {
                if (left > r.left) left = r.left;
                if (top > r.top) top = r.top;
                if (right < r.right) right = r.right;
                if (bottom < r.bottom) bottom = r.bottom;
                return true;
            } else {
                left = r.left;
                top = r.top;
                right = r.right;
                bottom = r.bottom;
                return true;
            }
        }
        return false;
    };
"
	
	
	
	
      end

      operation 1120268 "translate"
	cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "dx" explicit_type "float"
	  param in name "dy" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        left += dx;
        right += dx;
        top += dy;
        bottom += dy;
    };
"
	
	
	
	
      end

      operation 1120396 "snapToPixelBoundaries"
	cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        left = floorf(left + 0.5f);
        top = floorf(top + 0.5f);
        right = floorf(right + 0.5f);
        bottom = floorf(bottom + 0.5f);
    };
"
	
	
	
	
      end

      operation 1120524 "dump"
	const cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        ALOGD(\"Rect[l=%f t=%f r=%f b=%f]\", left, top, right, bottom);
    };
"
	
	
	
	
      end

      operation 1120652 "min"
	class_operation cpp_inline private explicit_return_type "float"
	nparams 2
	  param in name "a" explicit_type "float"
	  param in name "b" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} { return (a < b) ? a : b; };
"
	
	
	
	
      end

      operation 1120780 "max"
	class_operation cpp_inline private explicit_return_type "float"
	nparams 2
	  param in name "a" explicit_type "float"
	  param in name "b" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} { return (a > b) ? a : b; };
"
	
	
	
	
      end

      operation 1120908 "intersectWith"
	const cpp_inline private explicit_return_type "void"
	nparams 1
	  param inout name "tmp" type class_ref 431244 // Rect
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        tmp.left = max(left, tmp.left);
        tmp.top = max(top, tmp.top);
        tmp.right = min(right, tmp.right);
        tmp.bottom = min(bottom, tmp.bottom);
    };
"
	
	
	
	
      end

      operation 1121036 "intersectWith"
	const cpp_inline private return_type class_ref 431244 // Rect
	nparams 4
	  param in name "l" explicit_type "float"
	  param in name "t" explicit_type "float"
	  param in name "r" explicit_type "float"
	  param in name "b" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract} {
        Rect tmp;
        tmp.left = max(left, l);
        tmp.top = max(top, t);
        tmp.right = min(right, r);
        tmp.bottom = min(bottom, b);
        return tmp;
    };
"
	
	
	
	
      end
    end

    class 431500 "SkiaShader"
      abstract visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "/////////////////////////////////////////////////////////////////////////////
 Base shader
/////////////////////////////////////////////////////////////////////////////
*
 * Represents a Skia shader. A shader will modify the GL context and active
 * program to recreate the original effect."
      class 440076 "Type"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum ${name} {
${items}
};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 1002892 "kNone"
	  public type class_ref 440076 // Type
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1003020 "kBitmap"
	  public type class_ref 440076 // Type
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1003148 "kLinearGradient"
	  public type class_ref 440076 // Type
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1003276 "kCircularGradient"
	  public type class_ref 440076 // Type
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1003404 "kSweepGradient"
	  public type class_ref 440076 // Type
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1003532 "kCompose"
	  public type class_ref 440076 // Type
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      operation 1129868 "SkiaShader"
	preserve_cpp_body_indent public explicit_return_type "ANDROID_API"
	nparams 6
	  param in name "type" type class_ref 440076 // Type
	  param inout name "key" explicit_type "SkShader"
	  param in name "tileX" explicit_type "SkShader::TileMode"
	  param in name "tileY" explicit_type "SkShader::TileMode"
	  param inout name "matrix" explicit_type "SkMatrix"
	  param in name "blend" explicit_type "bool"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} * ${p4}${v4}, ${t5} ${p5}${v5}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} * ${p4}, ${t5} ${p5}${)}:
        mType(type), mKey(key), mTileX(tileX), mTileY(tileY), mBlend(blend) ${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 1129996 "~SkiaShader"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 1130124 "copy"
	abstract cpp_virtual public return_type class_ref 431500 // SkiaShader
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
      end

      operation 1130252 "copyFrom"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "shader" type class_ref 431500 // SkiaShader
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "///////////////////////////////////////////////////////////////////////////////
// Base shader
///////////////////////////////////////////////////////////////////////////////

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1130380 "describe"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 2
	  param inout name "description" type class_ref 433292 // ProgramDescription
	  param in name "extensions" type class_ref 432268 // Extensions
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1130508 "setupProgram"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 4
	  param inout name "program" type class_ref 432140 // Program
	  param in name "modelView" type class_ref 434444 // mat4
	  param in name "snapshot" type class_ref 435596 // Snapshot
	  param inout name "textureUnit" type class_ref 190220 // GLuint
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, const ${t1} & ${p1}${v1}, const ${t2} & ${p2}${v2}, ${t3} * ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, const ${t1} & ${p1}, const ${t2} & ${p2}, ${t3} * ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1130636 "getSkShader"
	cpp_inline public explicit_return_type "SkShader"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return mKey;
    };
"
	
	
	
	
      end

      operation 1130764 "blend"
	const cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return mBlend;
    };
"
	
	
	
	
      end

      operation 1130892 "type"
	const cpp_inline public return_type class_ref 440076 // Type
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return mType;
    };
"
	
	
	
	
      end

      operation 1131020 "set"
	cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 2
	  param inout name "textureCache" type class_ref 440204 // TextureCache
	  param inout name "gradientCache" type class_ref 434060 // GradientCache
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        mTextureCache = textureCache;
        mGradientCache = gradientCache;
    };
"
	
	
	
	
      end

      operation 1131148 "getGenerationId"
	cpp_inline public explicit_return_type "uint32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return mGenerationId;
    };
"
	
	
	
	
      end

      operation 1131276 "setMatrix"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "matrix" explicit_type "SkMatrix"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        updateLocalMatrix(matrix);
        mGenerationId++;
    };
"
	
	
	
	
      end

      operation 1131404 "updateLocalMatrix"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "matrix" explicit_type "SkMatrix"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        if (matrix) {
            mat4 localMatrix(*matrix);
            mShaderMatrix.loadInverse(localMatrix);
        } else {
            mShaderMatrix.loadIdentity();
        }
    };
"
	
	
	
	
      end

      operation 1131532 "computeScreenSpaceMatrix"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 2
	  param inout name "screenSpace" type class_ref 434444 // mat4
	  param in name "modelView" type class_ref 434444 // mat4
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1131660 "SkiaShader"
	cpp_inline protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} {
    };
"
	
	
	
	
      end

      operation 1131788 "bindTexture"
	preserve_cpp_body_indent cpp_inline protected explicit_return_type "void"
	nparams 3
	  param inout name "texture" type class_ref 434188 // Texture
	  param in name "wrapS" type class_ref 190348 // GLenum
	  param in name "wrapT" type class_ref 190348 // GLenum
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * The appropriate texture unit must have been activated prior to invoking
     * this method."
      end

      classrelation 908940 // mType (<directional composition>)
	relation 908940 *-->
	  a role_name "mType" protected
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 908940 // mType (<directional composition>)
	  b parent class_ref 440076 // Type
      end

      attribute 1003660 "mKey"
	protected explicit_type "SkShader"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1003788 "mTileX"
	protected explicit_type "SkShader::TileMode"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1003916 "mTileY"
	protected explicit_type "SkShader::TileMode"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1004044 "mBlend"
	protected explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 909068 // mTextureCache (<unidirectional association>)
	relation 909068 --->
	  a role_name "mTextureCache" protected
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 909068 // mTextureCache (<unidirectional association>)
	  b parent class_ref 440204 // TextureCache
      end

      classrelation 909196 // mGradientCache (<unidirectional association>)
	relation 909196 --->
	  a role_name "mGradientCache" protected
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 909196 // mGradientCache (<unidirectional association>)
	  b parent class_ref 434060 // GradientCache
      end

      classrelation 909324 // mUnitMatrix (<directional composition>)
	relation 909324 *-->
	  a role_name "mUnitMatrix" protected
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 909324 // mUnitMatrix (<directional composition>)
	  b parent class_ref 434444 // mat4
      end

      classrelation 909452 // mShaderMatrix (<directional composition>)
	relation 909452 *-->
	  a role_name "mShaderMatrix" protected
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 909452 // mShaderMatrix (<directional composition>)
	  b parent class_ref 434444 // mat4
      end

      attribute 1004172 "mGenerationId"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 431628 "SkiaColorFilter"
      abstract visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "/////////////////////////////////////////////////////////////////////////////
 Base color filter
/////////////////////////////////////////////////////////////////////////////
*
 * Represents a Skia color filter. A color filter modifies a ProgramDescription
 * and sets uniforms on the resulting shaders."
      class 439564 "Type"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum ${name} {
${items}
};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 1001740 "kNone"
	  public type class_ref 439564 // Type
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1001868 "kColorMatrix"
	  public type class_ref 439564 // Type
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1001996 "kLighting"
	  public type class_ref 439564 // Type
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1002124 "kBlend"
	  public type class_ref 439564 // Type
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      operation 1127692 "SkiaColorFilter"
	preserve_cpp_body_indent public explicit_return_type "ANDROID_API"
	nparams 3
	  param inout name "skFilter" explicit_type "SkColorFilter"
	  param in name "type" type class_ref 439564 // Type
	  param in name "blend" explicit_type "bool"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${volatile}${throw};
"
	cpp_def "///////////////////////////////////////////////////////////////////////////////
// Base color filter
///////////////////////////////////////////////////////////////////////////////

${inline}${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}:
        mType(type), mBlend(blend), mSkFilter(skFilter) ${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 1127820 "~SkiaColorFilter"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 1127948 "describe"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 2
	  param inout name "description" type class_ref 433292 // ProgramDescription
	  param in name "extensions" type class_ref 432268 // Extensions
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
      end

      operation 1128076 "setupProgram"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "program" type class_ref 432140 // Program
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
      end

      operation 1128204 "blend"
	const cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return mBlend;
    };
"
	
	
	
	
      end

      operation 1128332 "type"
	const cpp_inline public return_type class_ref 439564 // Type
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return mType;
    };
"
	
	
	
	
      end

      operation 1128460 "getSkColorFilter"
	cpp_inline public explicit_return_type "SkColorFilter"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return mSkFilter;
    };
"
	
	
	
	
      end

      classrelation 908428 // mType (<directional composition>)
	relation 908428 *-->
	  a role_name "mType" protected
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 908428 // mType (<directional composition>)
	  b parent class_ref 439564 // Type
      end

      attribute 1002252 "mBlend"
	protected explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1002380 "mSkFilter"
	private explicit_type "SkColorFilter"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 431756 "Layer"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * A layer has dimensions and is backed by an OpenGL texture or FBO."
      operation 1079692 "Layer"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 2
	  param in name "layerWidth" explicit_type "uint32_t"
	  param in name "layerHeight" explicit_type "uint32_t"
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} ${p0}${v0}, const ${t1} ${p1}${v1}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}const ${t0} ${p0}, const ${t1} ${p1}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 1079820 "~Layer"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 1079948 "removeFbo"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1080076 "setRegionAsRect"
	cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        const android::Rect& bounds = region.getBounds();
        regionRect.set(bounds.leftTop().x, bounds.leftTop().y,
               bounds.rightBottom().x, bounds.rightBottom().y);

        const float texX = 1.0f / float(texture.width);
        const float texY = 1.0f / float(texture.height);
        const float height = layer.getHeight();
        texCoords.set(
               regionRect.left * texX, (height - regionRect.top) * texY,
               regionRect.right * texX, (height - regionRect.bottom) * texY);

        regionRect.translate(layer.left, layer.top);
    };
"
	
	
	
	
	comment "*
     * Sets this layer's region to a rectangle. Computes the appropriate
     * texture coordinates."
      end

      operation 1080204 "updateDeferred"
	cpp_inline public explicit_return_type "void"
	nparams 6
	  param inout name "renderer" type class_ref 431116 // OpenGLRenderer
	  param inout name "displayList" type class_ref 430604 // DisplayList
	  param in name "left" explicit_type "int"
	  param in name "top" explicit_type "int"
	  param in name "right" explicit_type "int"
	  param in name "bottom" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} ${p5}${v5}${)}${const}${volatile}${throw}${abstract} {
        this->renderer = renderer;
        this->displayList = displayList;
        const Rect r(left, top, right, bottom);
        dirtyRect.unionWith(r);
        deferredUpdateScheduled = true;
    };
"
	
	
	
	
      end

      operation 1080332 "getWidth"
	cpp_inline public explicit_return_type "uint32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return texture.width;
    };
"
	
	
	
	
      end

      operation 1080460 "getHeight"
	cpp_inline public explicit_return_type "uint32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return texture.height;
    };
"
	
	
	
	
      end

      operation 1080588 "setSize"
	cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "width" explicit_type "uint32_t"
	  param in name "height" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        texture.width = width;
        texture.height = height;
    };
"
	
	
	
	
      end

      operation 1080716 "setPaint"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param inout name "paint" explicit_type "SkPaint"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1080844 "setBlend"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "blend" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        texture.blend = blend;
    };
"
	
	
	
	
      end

      operation 1080972 "isBlend"
	cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return texture.blend;
    };
"
	
	
	
	
      end

      operation 1081100 "setAlpha"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "alpha" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        this->alpha = alpha;
    };
"
	
	
	
	
      end

      operation 1081228 "setAlpha"
	cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "alpha" explicit_type "int"
	  param in name "mode" explicit_type "SkXfermode::Mode"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        this->alpha = alpha;
        this->mode = mode;
    };
"
	
	
	
	
      end

      operation 1081356 "getAlpha"
	cpp_inline public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return alpha;
    };
"
	
	
	
	
      end

      operation 1081484 "getMode"
	cpp_inline public explicit_return_type "SkXfermode::Mode"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return mode;
    };
"
	
	
	
	
      end

      operation 1081612 "setEmpty"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "empty" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        this->empty = empty;
    };
"
	
	
	
	
      end

      operation 1081740 "isEmpty"
	cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return empty;
    };
"
	
	
	
	
      end

      operation 1081868 "setFbo"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "fbo" type class_ref 190220 // GLuint
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        this->fbo = fbo;
    };
"
	
	
	
	
      end

      operation 1081996 "getFbo"
	cpp_inline public return_type class_ref 190220 // GLuint
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return fbo;
    };
"
	
	
	
	
      end

      operation 1082124 "getTexture"
	cpp_inline public return_type class_ref 190220 // GLuint
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return texture.id;
    };
"
	
	
	
	
      end

      operation 1082252 "getRenderTarget"
	cpp_inline public return_type class_ref 190348 // GLenum
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return renderTarget;
    };
"
	
	
	
	
      end

      operation 1082380 "setRenderTarget"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "renderTarget" type class_ref 190348 // GLenum
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        this->renderTarget = renderTarget;
    };
"
	
	
	
	
      end

      operation 1082508 "setWrap"
	cpp_inline public explicit_return_type "void"
	nparams 3
	  param in name "wrap" type class_ref 190348 // GLenum
	  param in name "bindTexture" explicit_type "bool"
	    defaultvalue "false"
	  param in name "force" explicit_type "bool"
	    defaultvalue "false"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract} {
        texture.setWrap(wrap, bindTexture, force, renderTarget);
    };
"
	
	
	
	
      end

      operation 1082636 "setFilter"
	cpp_inline public explicit_return_type "void"
	nparams 3
	  param in name "filter" type class_ref 190348 // GLenum
	  param in name "bindTexture" explicit_type "bool"
	    defaultvalue "false"
	  param in name "force" explicit_type "bool"
	    defaultvalue "false"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract} {
        texture.setFilter(filter, bindTexture, force, renderTarget);
    };
"
	
	
	
	
      end

      operation 1082764 "isCacheable"
	cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return cacheable;
    };
"
	
	
	
	
      end

      operation 1082892 "setCacheable"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "cacheable" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        this->cacheable = cacheable;
    };
"
	
	
	
	
      end

      operation 1083020 "isDirty"
	cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return dirty;
    };
"
	
	
	
	
      end

      operation 1083148 "setDirty"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "dirty" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        this->dirty = dirty;
    };
"
	
	
	
	
      end

      operation 1083276 "isTextureLayer"
	cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return textureLayer;
    };
"
	
	
	
	
      end

      operation 1083404 "setTextureLayer"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "textureLayer" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        this->textureLayer = textureLayer;
    };
"
	
	
	
	
      end

      operation 1083532 "getColorFilter"
	cpp_inline public return_type class_ref 431628 // SkiaColorFilter
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return colorFilter;
    };
"
	
	
	
	
      end

      operation 1083660 "setColorFilter"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param inout name "filter" type class_ref 431628 // SkiaColorFilter
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1083788 "bindTexture"
	cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        if (texture.id) {
            glBindTexture(renderTarget, texture.id);
        }
    };
"
	
	
	
	
      end

      operation 1083916 "generateTexture"
	cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        if (!texture.id) {
            glGenTextures(1, &texture.id);
        }
    };
"
	
	
	
	
      end

      operation 1084044 "deleteTexture"
	cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        if (texture.id) {
            glDeleteTextures(1, &texture.id);
            texture.id = 0;
        }
    };
"
	
	
	
	
      end

      operation 1084172 "clearTexture"
	cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        texture.id = 0;
    };
"
	
	
	
	
	comment "*
     * When the caller frees the texture itself, the caller
     * must call this method to tell this layer that it lost
     * the texture."
      end

      operation 1084300 "deleteFbo"
	cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        if (fbo) glDeleteFramebuffers(1, &fbo);
    };
"
	
	
	
	
      end

      operation 1084428 "allocateTexture"
	cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "format" type class_ref 190348 // GLenum
	  param in name "storage" type class_ref 190348 // GLenum
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
#if DEBUG_LAYERS
        ALOGD(\"  Allocate layer: %dx%d\", getWidth(), getHeight());
#endif
        glTexImage2D(renderTarget, 0, format, getWidth(), getHeight(), 0, format, storage, NULL);
    };
"
	
	
	
	
      end

      operation 1084556 "getTexTransform"
	cpp_inline public return_type class_ref 434444 // mat4
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return texTransform;
    };
"
	
	
	
	
      end

      operation 1084684 "getTransform"
	cpp_inline public return_type class_ref 434444 // mat4
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return transform;
    };
"
	
	
	
	
      end

      classrelation 900236 // layer (<directional composition>)
	relation 900236 *-->
	  a role_name "layer" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 900236 // layer (<directional composition>)
	  b parent class_ref 431244 // Rect
      end

      classrelation 900364 // texCoords (<directional composition>)
	relation 900364 *-->
	  a role_name "texCoords" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 900364 // texCoords (<directional composition>)
	  b parent class_ref 431244 // Rect
      end

      classrelation 900492 // region (<directional composition>)
	relation 900492 *-->
	  a role_name "region" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 900492 // region (<directional composition>)
	  b parent class_ref 434572 // Region
      end

      classrelation 900620 // regionRect (<directional composition>)
	relation 900620 *-->
	  a role_name "regionRect" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 900620 // regionRect (<directional composition>)
	  b parent class_ref 431244 // Rect
      end

      classrelation 900748 // mesh (<unidirectional association>)
	relation 900748 --->
	  a role_name "mesh" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 900748 // mesh (<unidirectional association>)
	  b parent class_ref 434700 // TextureVertex
      end

      attribute 983308 "meshIndices"
	public explicit_type "uint16_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 900876 // meshElementCount (<directional composition>)
	relation 900876 *-->
	  a role_name "meshElementCount" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 900876 // meshElementCount (<directional composition>)
	  b parent class_ref 434828 // GLsizei
      end

      attribute 983436 "deferredUpdateScheduled"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 901004 // renderer (<unidirectional association>)
	relation 901004 --->
	  a role_name "renderer" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 901004 // renderer (<unidirectional association>)
	  b parent class_ref 431116 // OpenGLRenderer
      end

      classrelation 901132 // displayList (<unidirectional association>)
	relation 901132 --->
	  a role_name "displayList" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 901132 // displayList (<unidirectional association>)
	  b parent class_ref 430604 // DisplayList
      end

      classrelation 901260 // dirtyRect (<directional composition>)
	relation 901260 *-->
	  a role_name "dirtyRect" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 901260 // dirtyRect (<directional composition>)
	  b parent class_ref 431244 // Rect
      end

      classrelation 901388 // fbo (<directional composition>)
	relation 901388 *-->
	  a role_name "fbo" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 901388 // fbo (<directional composition>)
	  b parent class_ref 190220 // GLuint
      end

      attribute 983564 "empty"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 901516 // texture (<directional composition>)
	relation 901516 *-->
	  a role_name "texture" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 901516 // texture (<directional composition>)
	  b parent class_ref 434188 // Texture
      end

      attribute 983692 "cacheable"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 983820 "textureLayer"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 983948 "dirty"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 901644 // renderTarget (<directional composition>)
	relation 901644 *-->
	  a role_name "renderTarget" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 901644 // renderTarget (<directional composition>)
	  b parent class_ref 190348 // GLenum
      end

      classrelation 901772 // colorFilter (<unidirectional association>)
	relation 901772 --->
	  a role_name "colorFilter" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 901772 // colorFilter (<unidirectional association>)
	  b parent class_ref 431628 // SkiaColorFilter
      end

      attribute 984076 "alpha"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 984204 "mode"
	private explicit_type "SkXfermode::Mode"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 901900 // texTransform (<directional composition>)
	relation 901900 *-->
	  a role_name "texTransform" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 901900 // texTransform (<directional composition>)
	  b parent class_ref 434444 // mat4
      end

      classrelation 902028 // transform (<directional composition>)
	relation 902028 *-->
	  a role_name "transform" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 902028 // transform (<directional composition>)
	  b parent class_ref 434444 // mat4
      end
    end

    class 432012 "Dither"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * Handles dithering for programs."
      operation 1065100 "Dither"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} : mInitialized(false), mDitherTexture(0) { };
"
	
	
	
	
      end

      operation 1065228 "clear"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1065356 "setupProgram"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 2
	  param inout name "program" type class_ref 432140 // Program
	  param inout name "textureUnit" type class_ref 190220 // GLuint
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "///////////////////////////////////////////////////////////////////////////////
// Program management
///////////////////////////////////////////////////////////////////////////////

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1065484 "bindDitherTexture"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "///////////////////////////////////////////////////////////////////////////////
// Lifecycle
///////////////////////////////////////////////////////////////////////////////

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      attribute 977292 "mInitialized"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 897164 // mDitherTexture (<directional composition>)
	relation 897164 *-->
	  a role_name "mDitherTexture" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 897164 // mDitherTexture (<directional composition>)
	  b parent class_ref 190220 // GLuint
      end
    end

    class 432140 "Program"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " struct ProgramDescription
*
 * A program holds a vertex and a fragment shader. It offers several utility
 * methods to query attributes and uniforms."
      class 437260 "ShaderBindings"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum ${name} {
${items}
};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 993548 "kBindingPosition"
	  public type class_ref 437260 // ShaderBindings
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 993676 "kBindingTexCoords"
	  public type class_ref 437260 // ShaderBindings
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      operation 1114764 "Program"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 3
	  param in name "description" type class_ref 433292 // ProgramDescription
	  param in name "vertex" explicit_type "char"
	  param in name "fragment" explicit_type "char"
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}, const ${t1} * ${p1}${v1}, const ${t2} * ${p2}${v2}${)}${volatile}${throw};
"
	cpp_def "///////////////////////////////////////////////////////////////////////////////
// Base program
///////////////////////////////////////////////////////////////////////////////
// TODO: Program instance should be created from a factory method

${inline}${class}::${name}${(}const ${t0} & ${p0}, const ${t1} * ${p1}, const ${t2} * ${p2}${)}${throw}{
  ${body}}
"
	
	
	
	
	comment "*
     * Creates a new program with the specified vertex and fragment
     * shaders sources."
      end

      operation 1114892 "~Program"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 1115020 "use"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Binds this program to the GL context."
      end

      operation 1115148 "remove"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Marks this program as unused. This will not unbind
     * the program from the GL context."
      end

      operation 1115276 "getAttrib"
	preserve_cpp_body_indent public explicit_return_type "int"
	nparams 1
	  param in name "name" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Returns the OpenGL name of the specified attribute."
      end

      operation 1115404 "getUniform"
	preserve_cpp_body_indent public explicit_return_type "int"
	nparams 1
	  param in name "name" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Returns the OpenGL name of the specified uniform."
      end

      operation 1115532 "isInUse"
	const cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return mUse;
    };
"
	
	
	
	
	comment "*
     * Indicates whether this program is currently in use with
     * the GL context."
      end

      operation 1115660 "isInitialized"
	const cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return mInitialized;
    };
"
	
	
	
	
	comment "*
     * Indicates whether this program was correctly compiled and linked."
      end

      operation 1115788 "set"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 4
	  param in name "projectionMatrix" type class_ref 434444 // mat4
	  param in name "modelViewMatrix" type class_ref 434444 // mat4
	  param in name "transformMatrix" type class_ref 434444 // mat4
	  param in name "offset" explicit_type "bool"
	    defaultvalue "false"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, const ${t2} & ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}, const ${t2} & ${p2}, ${t3} ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Binds the program with the specified projection, modelView and
     * transform matrices."
      end

      operation 1115916 "setColor"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 4
	  param in name "r" explicit_type "float"
	  param in name "g" explicit_type "float"
	  param in name "b" explicit_type "float"
	  param in name "a" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} ${p0}${v0}, const ${t1} ${p1}${v1}, const ${t2} ${p2}${v2}, const ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} ${p0}, const ${t1} ${p1}, const ${t2} ${p2}, const ${t3} ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Sets the color associated with this shader."
      end

      attribute 993804 "position"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 993932 "texCoords"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 994060 "transform"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 994188 "projection"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 1116044 "addAttrib"
	preserve_cpp_body_indent protected explicit_return_type "int"
	nparams 1
	  param in name "name" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Adds an attribute with the specified name.
     *
     * @return The OpenGL name of the attribute."
      end

      operation 1116172 "bindAttrib"
	preserve_cpp_body_indent protected explicit_return_type "int"
	nparams 2
	  param in name "name" explicit_type "char"
	  param in name "bindingSlot" type class_ref 437260 // ShaderBindings
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Binds the specified attribute name to the specified slot."
      end

      operation 1116300 "addUniform"
	preserve_cpp_body_indent protected explicit_return_type "int"
	nparams 1
	  param in name "name" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Adds a uniform with the specified name.
     *
     * @return The OpenGL name of the uniform."
      end

      operation 1116428 "buildShader"
	preserve_cpp_body_indent private return_type class_ref 190220 // GLuint
	nparams 2
	  param in name "source" explicit_type "char"
	  param in name "type" type class_ref 190348 // GLenum
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Compiles the specified shader of the specified type.
     *
     * @return The name of the compiled shader."
      end

      classrelation 905996 // mProgramId (<directional composition>)
	relation 905996 *-->
	  a role_name "mProgramId" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 905996 // mProgramId (<directional composition>)
	  b parent class_ref 190220 // GLuint
      end

      classrelation 906124 // mVertexShader (<directional composition>)
	relation 906124 *-->
	  a role_name "mVertexShader" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 906124 // mVertexShader (<directional composition>)
	  b parent class_ref 190220 // GLuint
      end

      classrelation 906252 // mFragmentShader (<directional composition>)
	relation 906252 *-->
	  a role_name "mFragmentShader" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 906252 // mFragmentShader (<directional composition>)
	  b parent class_ref 190220 // GLuint
      end

      attribute 994316 "mAttributes"
	private explicit_type "const char*, int"
	stereotype "KeyedVector"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 994444 "mUniforms"
	private explicit_type "const char*, int"
	stereotype "KeyedVector"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 994572 "mUse"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 994700 "mInitialized"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 994828 "mHasColorUniform"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 994956 "mColorUniform"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 995084 "mHasSampler"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 432268 "Extensions"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "/////////////////////////////////////////////////////////////////////////////
 Classes
/////////////////////////////////////////////////////////////////////////////"
      operation 1065612 "Extensions"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} {
        const char* buffer = (const char*) glGetString(GL_EXTENSIONS);
        const char* current = buffer;
        const char* head = current;
        EXT_LOGD(\"Available GL extensions:\");
        do {
            head = strchr(current, ' ');
            String8 s(current, head ? head - current : strlen(current));
            if (s.length()) {
                mExtensionList.add(s);
                EXT_LOGD(\"  %s\", s.string());
            }
            current = head + 1;
        } while (head);

        mHasNPot = hasExtension(\"GL_OES_texture_npot\");
        mHasFramebufferFetch = hasExtension(\"GL_NV_shader_framebuffer_fetch\");
        mHasDiscardFramebuffer = hasExtension(\"GL_EXT_discard_framebuffer\");
        mHasDebugMarker = hasExtension(\"GL_EXT_debug_marker\");
        mHasDebugLabel = hasExtension(\"GL_EXT_debug_label\");
        mHasTiledRendering = hasExtension(\"GL_QCOM_tiled_rendering\");

        mExtensions = strdup(buffer);
    };
"
	
	
	
	
      end

      operation 1065740 "~Extensions"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {
        free(mExtensions);
    };
"
	
	
	
	
      end

      operation 1065868 "hasNPot"
	const cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return mHasNPot; };
"
	
	
	
	
      end

      operation 1065996 "hasFramebufferFetch"
	const cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return mHasFramebufferFetch; };
"
	
	
	
	
      end

      operation 1066124 "hasDiscardFramebuffer"
	const cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return mHasDiscardFramebuffer; };
"
	
	
	
	
      end

      operation 1066252 "hasDebugMarker"
	const cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return mHasDebugMarker; };
"
	
	
	
	
      end

      operation 1066380 "hasDebugLabel"
	const cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return mHasDebugLabel; };
"
	
	
	
	
      end

      operation 1066508 "hasTiledRendering"
	const cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return mHasTiledRendering; };
"
	
	
	
	
      end

      operation 1066636 "hasExtension"
	const cpp_inline public explicit_return_type "bool"
	nparams 1
	  param in name "extension" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        const String8 s(extension);
        return mExtensionList.indexOf(s) >= 0;
    };
"
	
	
	
	
      end

      operation 1066764 "dump"
	cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        ALOGD(\"Supported extensions:\\n%s\", mExtensions);
    };
"
	
	
	
	
      end

      classrelation 897292 // mExtensionList (<directional composition>)
	relation 897292 *-->
	  stereotype "SortedVector"
	  a role_name "mExtensionList" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 897292 // mExtensionList (<directional composition>)
	  b parent class_ref 131340 // String8
      end

      attribute 977420 "mExtensions"
	private explicit_type "char"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 977548 "mHasNPot"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 977676 "mHasFramebufferFetch"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 977804 "mHasDiscardFramebuffer"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 977932 "mHasDebugMarker"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 978060 "mHasDebugLabel"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 978188 "mHasTiledRendering"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 432396 "FboCache"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "/////////////////////////////////////////////////////////////////////////////
 Cache
/////////////////////////////////////////////////////////////////////////////"
      operation 1066892 "FboCache"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "///////////////////////////////////////////////////////////////////////////////
// Constructors/destructor
///////////////////////////////////////////////////////////////////////////////

${inline}${class}::${name}${(}${)}: mMaxSize(DEFAULT_FBO_CACHE_SIZE) ${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 1067020 "~FboCache"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 1067148 "get"
	preserve_cpp_body_indent public return_type class_ref 190220 // GLuint
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Returns an FBO from the cache. If no FBO is available, a new one
     * is created. If creating a new FBO fails, 0 is returned.
     *
     * When an FBO is obtained from the cache, it is removed and the
     * total number of FBOs available in the cache decreases.
     *
     * @return The name of the FBO, or 0 if no FBO can be obtained."
      end

      operation 1067276 "put"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 1
	  param in name "fbo" type class_ref 190220 // GLuint
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Adds the specified FBO to the cache.
     *
     * @param fbo The FBO to add to the cache.
     *
     * @return True if the FBO was added, false otherwise."
      end

      operation 1067404 "clear"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "///////////////////////////////////////////////////////////////////////////////
// Caching
///////////////////////////////////////////////////////////////////////////////

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Clears the cache. This causes all FBOs to be deleted."
      end

      operation 1067532 "getSize"
	preserve_cpp_body_indent public explicit_return_type "uint32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "///////////////////////////////////////////////////////////////////////////////
// Size management
///////////////////////////////////////////////////////////////////////////////

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Returns the current size of the cache."
      end

      operation 1067660 "getMaxSize"
	preserve_cpp_body_indent public explicit_return_type "uint32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Returns the maximum number of FBOs that the cache can hold."
      end

      classrelation 897420 // mCache (<directional composition>)
	relation 897420 *-->
	  stereotype "SortedVector"
	  a role_name "mCache" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 897420 // mCache (<directional composition>)
	  b parent class_ref 190220 // GLuint
      end

      attribute 978316 "mMaxSize"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 432524 "FontRenderer"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "/////////////////////////////////////////////////////////////////////////////
 Renderer
/////////////////////////////////////////////////////////////////////////////"
      operation 1067788 "FontRenderer"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 1067916 "~FontRenderer"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 1068044 "flushLargeCaches"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1068172 "setGammaTable"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "gammaTable" explicit_type "uint8_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        mGammaTable = gammaTable;
    };
"
	
	
	
	
      end

      operation 1068300 "setFont"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 3
	  param inout name "paint" explicit_type "SkPaint"
	  param in name "fontId" explicit_type "uint32_t"
	  param in name "fontSize" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1068428 "precache"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 3
	  param inout name "paint" explicit_type "SkPaint"
	  param in name "text" explicit_type "char"
	  param in name "numGlyphs" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, const ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, const ${t1} * ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1068556 "renderText"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 9
	  param inout name "paint" explicit_type "SkPaint"
	  param in name "clip" type class_ref 431244 // Rect
	  param in name "text" explicit_type "char"
	  param in name "startIndex" explicit_type "uint32_t"
	  param in name "len" explicit_type "uint32_t"
	  param in name "numGlyphs" explicit_type "int"
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param inout name "bounds" type class_ref 431244 // Rect
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, const ${t1} * ${p1}${v1}, const ${t2} * ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} ${p5}${v5}, ${t6} ${p6}${v6}, ${t7} ${p7}${v7}, ${t8} * ${p8}${v8}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, const ${t1} * ${p1}, const ${t2} * ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} * ${p8}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " bounds is an out parameter"
      end

      operation 1068684 "renderPosText"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 10
	  param inout name "paint" explicit_type "SkPaint"
	  param in name "clip" type class_ref 431244 // Rect
	  param in name "text" explicit_type "char"
	  param in name "startIndex" explicit_type "uint32_t"
	  param in name "len" explicit_type "uint32_t"
	  param in name "numGlyphs" explicit_type "int"
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "positions" explicit_type "float"
	  param inout name "bounds" type class_ref 431244 // Rect
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, const ${t1} * ${p1}${v1}, const ${t2} * ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} ${p5}${v5}, ${t6} ${p6}${v6}, ${t7} ${p7}${v7}, const ${t8} * ${p8}${v8}, ${t9} * ${p9}${v9}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, const ${t1} * ${p1}, const ${t2} * ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, const ${t8} * ${p8}, ${t9} * ${p9}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " bounds is an out parameter"
      end

      operation 1068812 "renderTextOnPath"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 10
	  param inout name "paint" explicit_type "SkPaint"
	  param in name "clip" type class_ref 431244 // Rect
	  param in name "text" explicit_type "char"
	  param in name "startIndex" explicit_type "uint32_t"
	  param in name "len" explicit_type "uint32_t"
	  param in name "numGlyphs" explicit_type "int"
	  param inout name "path" explicit_type "SkPath"
	  param in name "hOffset" explicit_type "float"
	  param in name "vOffset" explicit_type "float"
	  param inout name "bounds" type class_ref 431244 // Rect
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, const ${t1} * ${p1}${v1}, const ${t2} * ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} ${p5}${v5}, ${t6} * ${p6}${v6}, ${t7} ${p7}${v7}, ${t8} ${p8}${v8}, ${t9} * ${p9}${v9}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, const ${t1} * ${p1}, const ${t2} * ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} * ${p6}, ${t7} ${p7}, ${t8} ${p8}, ${t9} * ${p9}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " bounds is an out parameter"
      end

      class 432652 "DropShadow"
	visibility package stereotype "struct"
	cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 1068940 "DropShadow"
	  cpp_inline public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} { };
"
	  
	  
	  
	  
	end

	operation 1069068 "DropShadow"
	  cpp_inline public explicit_return_type ""
	  nparams 1
	    param in name "dropShadow" type class_ref 432652 // DropShadow
	  cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}${)}${volatile}${throw} :
            width(dropShadow.width), height(dropShadow.height),
            image(dropShadow.image), penX(dropShadow.penX),
            penY(dropShadow.penY) {
        };
"
	  
	  
	  
	  
	end

	attribute 978444 "width"
	  public explicit_type "uint32_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 978572 "height"
	  public explicit_type "uint32_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 978700 "image"
	  public explicit_type "uint8_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 978828 "penX"
	  public explicit_type "int32_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 978956 "penY"
	  public explicit_type "int32_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      operation 1069196 "renderDropShadow"
	preserve_cpp_body_indent public return_type class_ref 432652 // DropShadow
	nparams 7
	  param inout name "paint" explicit_type "SkPaint"
	  param in name "text" explicit_type "char"
	  param in name "startIndex" explicit_type "uint32_t"
	  param in name "len" explicit_type "uint32_t"
	  param in name "numGlyphs" explicit_type "int"
	  param in name "radius" explicit_type "uint32_t"
	  param in name "positions" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, const ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} ${p5}${v5}, const ${t6} * ${p6}${v6}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, const ${t1} * ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, const ${t6} * ${p6}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " After renderDropShadow returns, the called owns the memory in DropShadow.image
 and is responsible for releasing it when it's done with it"
      end

      operation 1069324 "getTexture"
	cpp_inline public return_type class_ref 190220 // GLuint
	nparams 1
	  param in name "linearFiltering" explicit_type "bool"
	    defaultvalue "false"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        checkInit();

        mCurrentCacheTexture->setLinearFiltering(linearFiltering);
        mLinearFiltering = linearFiltering;

        return mCurrentCacheTexture->getTextureId();
    };
"
	
	
	
	
      end

      operation 1069452 "getCacheSize"
	const cpp_inline public explicit_return_type "uint32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        uint32_t size = 0;
        for (uint32_t i = 0; i < mCacheTextures.size(); i++) {
            CacheTexture* cacheTexture = mCacheTextures[i];
            if (cacheTexture && cacheTexture->getTexture()) {
                size += cacheTexture->getWidth() * cacheTexture->getHeight();
            }
        }
        return size;
    };
"
	
	
	
	
      end

      classrelation 897548 // <dependency>
	relation 897548 -_->
	  stereotype "friend"
	  a default
	    cpp default "${type}"
	    classrelation_ref 897548 // <dependency>
	  b parent class_ref 432780 // Font
      end

      attribute 979084 "mGammaTable"
	const_attribute private explicit_type "uint8_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 1069580 "allocateTextureMemory"
	private explicit_return_type "void"
	nparams 1
	  param inout name "cacheTexture" type class_ref 432908 // CacheTexture
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1069708 "deallocateTextureMemory"
	private explicit_return_type "void"
	nparams 1
	  param inout name "cacheTexture" type class_ref 432908 // CacheTexture
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1069836 "initTextTexture"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1069964 "createCacheTexture"
	preserve_cpp_body_indent private return_type class_ref 432908 // CacheTexture
	nparams 3
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	  param in name "allocate" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1070092 "cacheBitmap"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 5
	  param in name "glyph" explicit_type "SkGlyph"
	  param inout name "cachedGlyph" type class_ref 433036 // CachedGlyphInfo
	  param inout name "retOriginX" explicit_type "uint32_t"
	  param inout name "retOriginY" explicit_type "uint32_t"
	  param in name "precaching" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}, ${t3} * ${p3}${v3}, ${t4} ${p4}${v4}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} * ${p1}, ${t2} * ${p2}, ${t3} * ${p3}, ${t4} ${p4}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1070220 "cacheBitmapInTexture"
	preserve_cpp_body_indent private return_type class_ref 432908 // CacheTexture
	nparams 3
	  param in name "glyph" explicit_type "SkGlyph"
	  param inout name "startX" explicit_type "uint32_t"
	  param inout name "startY" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}const ${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}const ${t0} & ${p0}, ${t1} * ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1070348 "flushAllAndInvalidate"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1070476 "initVertexArrayBuffers"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "// Avoid having to reallocate memory and render quad by quad

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1070604 "checkInit"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "// We don't want to allocate anything unless we actually draw text

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1070732 "initRender"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 2
	  param in name "clip" type class_ref 431244 // Rect
	  param inout name "bounds" type class_ref 431244 // Rect
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1070860 "finishRender"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1070988 "issueDrawCommand"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1071116 "appendMeshQuadNoClip"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 17
	  param in name "x1" explicit_type "float"
	  param in name "y1" explicit_type "float"
	  param in name "u1" explicit_type "float"
	  param in name "v1" explicit_type "float"
	  param in name "x2" explicit_type "float"
	  param in name "y2" explicit_type "float"
	  param in name "u2" explicit_type "float"
	  param in name "v2" explicit_type "float"
	  param in name "x3" explicit_type "float"
	  param in name "y3" explicit_type "float"
	  param in name "u3" explicit_type "float"
	  param in name "v3" explicit_type "float"
	  param in name "x4" explicit_type "float"
	  param in name "y4" explicit_type "float"
	  param in name "u4" explicit_type "float"
	  param in name "v4" explicit_type "float"
	  param inout name "texture" type class_ref 432908 // CacheTexture
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} ${p5}${v5}, ${t6} ${p6}${v6}, ${t7} ${p7}${v7}, ${t8} ${p8}${v8}, ${t9} ${p9}${v9}, ${t10} ${p10}${v10}, ${t11} ${p11}${v11}, ${t12} ${p12}${v12}, ${t13} ${p13}${v13}, ${t14} ${p14}${v14}, ${t15} ${p15}${v15}, ${t16} * ${p16}${v16}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}, ${t9} ${p9}, ${t10} ${p10}, ${t11} ${p11}, ${t12} ${p12}, ${t13} ${p13}, ${t14} ${p14}, ${t15} ${p15}, ${t16} * ${p16}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1071244 "appendMeshQuad"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 17
	  param in name "x1" explicit_type "float"
	  param in name "y1" explicit_type "float"
	  param in name "u1" explicit_type "float"
	  param in name "v1" explicit_type "float"
	  param in name "x2" explicit_type "float"
	  param in name "y2" explicit_type "float"
	  param in name "u2" explicit_type "float"
	  param in name "v2" explicit_type "float"
	  param in name "x3" explicit_type "float"
	  param in name "y3" explicit_type "float"
	  param in name "u3" explicit_type "float"
	  param in name "v3" explicit_type "float"
	  param in name "x4" explicit_type "float"
	  param in name "y4" explicit_type "float"
	  param in name "u4" explicit_type "float"
	  param in name "v4" explicit_type "float"
	  param inout name "texture" type class_ref 432908 // CacheTexture
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} ${p5}${v5}, ${t6} ${p6}${v6}, ${t7} ${p7}${v7}, ${t8} ${p8}${v8}, ${t9} ${p9}${v9}, ${t10} ${p10}${v10}, ${t11} ${p11}${v11}, ${t12} ${p12}${v12}, ${t13} ${p13}${v13}, ${t14} ${p14}${v14}, ${t15} ${p15}${v15}, ${t16} * ${p16}${v16}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}, ${t9} ${p9}, ${t10} ${p10}, ${t11} ${p11}, ${t12} ${p12}, ${t13} ${p13}, ${t14} ${p14}, ${t15} ${p15}, ${t16} * ${p16}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1071372 "appendRotatedMeshQuad"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 17
	  param in name "x1" explicit_type "float"
	  param in name "y1" explicit_type "float"
	  param in name "u1" explicit_type "float"
	  param in name "v1" explicit_type "float"
	  param in name "x2" explicit_type "float"
	  param in name "y2" explicit_type "float"
	  param in name "u2" explicit_type "float"
	  param in name "v2" explicit_type "float"
	  param in name "x3" explicit_type "float"
	  param in name "y3" explicit_type "float"
	  param in name "u3" explicit_type "float"
	  param in name "v3" explicit_type "float"
	  param in name "x4" explicit_type "float"
	  param in name "y4" explicit_type "float"
	  param in name "u4" explicit_type "float"
	  param in name "v4" explicit_type "float"
	  param inout name "texture" type class_ref 432908 // CacheTexture
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} ${p5}${v5}, ${t6} ${p6}${v6}, ${t7} ${p7}${v7}, ${t8} ${p8}${v8}, ${t9} ${p9}${v9}, ${t10} ${p10}${v10}, ${t11} ${p11}${v11}, ${t12} ${p12}${v12}, ${t13} ${p13}${v13}, ${t14} ${p14}${v14}, ${t15} ${p15}${v15}, ${t16} * ${p16}${v16}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}, ${t9} ${p9}, ${t10} ${p10}, ${t11} ${p11}, ${t12} ${p12}, ${t13} ${p13}, ${t14} ${p14}, ${t15} ${p15}, ${t16} * ${p16}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1071500 "removeFont"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 1
	  param in name "font" type class_ref 432780 // Font
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1071628 "checkTextureUpdate"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1071756 "setTextureDirty"
	cpp_inline private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        mUploadTexture = true;
    };
"
	
	
	
	
      end

      attribute 979212 "mSmallCacheWidth"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 979340 "mSmallCacheHeight"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 979468 "mLargeCacheWidth"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 979596 "mLargeCacheHeight"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 897676 // mCacheTextures (<unidirectional association>)
	relation 897676 --->
	  stereotype "Vector"
	  a role_name "mCacheTextures" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}*> ${name}${value};
"
	    classrelation_ref 897676 // mCacheTextures (<unidirectional association>)
	  b parent class_ref 432908 // CacheTexture
      end

      classrelation 897804 // mCurrentFont (<unidirectional association>)
	relation 897804 --->
	  a role_name "mCurrentFont" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 897804 // mCurrentFont (<unidirectional association>)
	  b parent class_ref 432780 // Font
      end

      classrelation 897932 // mActiveFonts (<unidirectional association>)
	relation 897932 --->
	  stereotype "Vector"
	  a role_name "mActiveFonts" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}*> ${name}${value};
"
	    classrelation_ref 897932 // mActiveFonts (<unidirectional association>)
	  b parent class_ref 432780 // Font
      end

      classrelation 898060 // mCurrentCacheTexture (<unidirectional association>)
	relation 898060 --->
	  a role_name "mCurrentCacheTexture" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 898060 // mCurrentCacheTexture (<unidirectional association>)
	  b parent class_ref 432908 // CacheTexture
      end

      classrelation 898188 // mLastCacheTexture (<unidirectional association>)
	relation 898188 --->
	  a role_name "mLastCacheTexture" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 898188 // mLastCacheTexture (<unidirectional association>)
	  b parent class_ref 432908 // CacheTexture
      end

      attribute 979724 "mUploadTexture"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 979852 "mTextMesh"
	private explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 979980 "mCurrentQuadIndex"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 980108 "mMaxNumberOfQuads"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 980236 "mIndexBufferID"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 898316 // mClip (<unidirectional association>)
	relation 898316 --->
	  a role_name "mClip" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 898316 // mClip (<unidirectional association>)
	  b parent class_ref 431244 // Rect
      end

      classrelation 898444 // mBounds (<unidirectional association>)
	relation 898444 --->
	  a role_name "mBounds" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 898444 // mBounds (<unidirectional association>)
	  b parent class_ref 431244 // Rect
      end

      attribute 980364 "mDrawn"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 980492 "mInitialized"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 980620 "mLinearFiltering"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 1071884 "computeGaussianWeights"
	class_operation preserve_cpp_body_indent private explicit_return_type "void"
	nparams 2
	  param inout name "weights" explicit_type "float"
	  param in name "radius" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "* We should consider multi-threading this code or using Renderscript *"
      end

      operation 1072012 "horizontalBlur"
	class_operation preserve_cpp_body_indent private explicit_return_type "void"
	nparams 6
	  param inout name "weights" explicit_type "float"
	  param in name "radius" explicit_type "int32_t"
	  param in name "source" explicit_type "uint8_t"
	  param inout name "dest" explicit_type "uint8_t"
	  param in name "width" explicit_type "int32_t"
	  param in name "height" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, const ${t2} * ${p2}${v2}, ${t3} * ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} ${p5}${v5}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}, const ${t2} * ${p2}, ${t3} * ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1072140 "verticalBlur"
	class_operation preserve_cpp_body_indent private explicit_return_type "void"
	nparams 6
	  param inout name "weights" explicit_type "float"
	  param in name "radius" explicit_type "int32_t"
	  param in name "source" explicit_type "uint8_t"
	  param inout name "dest" explicit_type "uint8_t"
	  param in name "width" explicit_type "int32_t"
	  param in name "height" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, const ${t2} * ${p2}${v2}, ${t3} * ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} ${p5}${v5}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}, const ${t2} * ${p2}, ${t3} * ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1072268 "blurImage"
	class_operation preserve_cpp_body_indent private explicit_return_type "void"
	nparams 4
	  param inout name "image" explicit_type "uint8_t"
	  param in name "width" explicit_type "int32_t"
	  param in name "height" explicit_type "int32_t"
	  param in name "radius" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end
    end

    class 433164 "GammaFontRenderer"
      abstract visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      operation 1072396 "~GammaFontRenderer"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 1072524 "clear"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
      end

      operation 1072652 "flush"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
      end

      operation 1072780 "getFontRenderer"
	abstract cpp_virtual public return_type class_ref 432524 // FontRenderer
	nparams 1
	  param in name "paint" explicit_type "SkPaint"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
      end

      operation 1072908 "getFontRendererCount"
	abstract const cpp_virtual public explicit_return_type "uint32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
      end

      operation 1073036 "getFontRendererSize"
	abstract const cpp_virtual public explicit_return_type "uint32_t"
	nparams 1
	  param in name "fontRenderer" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
      end

      operation 1073164 "describe"
	abstract const cpp_virtual public explicit_return_type "void"
	nparams 2
	  param inout name "description" type class_ref 433292 // ProgramDescription
	  param in name "paint" explicit_type "SkPaint"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, const ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
      end

      operation 1073292 "setupProgram"
	abstract const cpp_virtual public explicit_return_type "void"
	nparams 2
	  param inout name "description" type class_ref 433292 // ProgramDescription
	  param inout name "program" type class_ref 432140 // Program
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
      end

      operation 1073420 "createRenderer"
	class_operation preserve_cpp_body_indent public return_type class_ref 433164 // GammaFontRenderer
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "///////////////////////////////////////////////////////////////////////////////
// Base class GammaFontRenderer
///////////////////////////////////////////////////////////////////////////////

${inline}${type} * ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1073548 "GammaFontRenderer"
	preserve_cpp_body_indent protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      attribute 980748 "mBlackThreshold"
	protected explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 980876 "mWhiteThreshold"
	protected explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 981004 "mGamma"
	protected explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 433292 "ProgramDescription"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "/////////////////////////////////////////////////////////////////////////////
 Program description
/////////////////////////////////////////////////////////////////////////////
*
 * Describe the features required for a given program. The features
 * determine the generation of both the vertex and fragment shaders.
 * A ProgramDescription must be used in conjunction with a ProgramCache."
      class 437004 "ColorModifier"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum ${name} {
${items}
};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 990092 "kColorNone"
	  public type class_ref 437004 // ColorModifier
	  init_value " 0"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 990220 "kColorMatrix"
	  public type class_ref 437004 // ColorModifier
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 990348 "kColorLighting"
	  public type class_ref 437004 // ColorModifier
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 990476 "kColorBlend"
	  public type class_ref 437004 // ColorModifier
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      class 437132 "Gradient"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum ${name} {
${items}
};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 990604 "kGradientLinear"
	  public type class_ref 437132 // Gradient
	  init_value " 0"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 990732 "kGradientCircular"
	  public type class_ref 437132 // Gradient
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 990860 "kGradientSweep"
	  public type class_ref 437132 // Gradient
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      operation 1113868 "ProgramDescription"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} {
        reset();
    };
"
	
	
	
	
      end

      attribute 990988 "hasTexture"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 991116 "hasAlpha8Texture"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 991244 "hasExternalTexture"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 991372 "hasTextureTransform"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 991500 "modulate"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 991628 "hasBitmap"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 991756 "isBitmapNpot"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 991884 "isAA"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 992012 "isVertexShape"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 992140 "hasGradient"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 905484 // gradientType (<directional composition>)
	relation 905484 *-->
	  a role_name "gradientType" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 905484 // gradientType (<directional composition>)
	  b parent class_ref 437132 // Gradient
      end

      attribute 992268 "isSimpleGradient"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 992396 "shadersMode"
	public explicit_type "SkXfermode::Mode"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 992524 "isBitmapFirst"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 905612 // bitmapWrapS (<directional composition>)
	relation 905612 *-->
	  a role_name "bitmapWrapS" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 905612 // bitmapWrapS (<directional composition>)
	  b parent class_ref 190348 // GLenum
      end

      classrelation 905740 // bitmapWrapT (<directional composition>)
	relation 905740 *-->
	  a role_name "bitmapWrapT" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 905740 // bitmapWrapT (<directional composition>)
	  b parent class_ref 190348 // GLenum
      end

      classrelation 905868 // colorOp (<directional composition>)
	relation 905868 *-->
	  a role_name "colorOp" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 905868 // colorOp (<directional composition>)
	  b parent class_ref 437004 // ColorModifier
      end

      attribute 992652 "colorMode"
	public explicit_type "SkXfermode::Mode"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 992780 "framebufferMode"
	public explicit_type "SkXfermode::Mode"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 992908 "swapSrcDst"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 993036 "isPoint"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 993164 "pointSize"
	public explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 993292 "hasGammaCorrection"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 993420 "gamma"
	public explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 1113996 "reset"
	cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        hasTexture = false;
        hasAlpha8Texture = false;
        hasExternalTexture = false;
        hasTextureTransform = false;

        isAA = false;
        isVertexShape = false;

        modulate = false;

        hasBitmap = false;
        isBitmapNpot = false;

        hasGradient = false;
        gradientType = kGradientLinear;
        isSimpleGradient = false;

        shadersMode = SkXfermode::kClear_Mode;

        isBitmapFirst = false;
        bitmapWrapS = GL_CLAMP_TO_EDGE;
        bitmapWrapT = GL_CLAMP_TO_EDGE;

        colorOp = kColorNone;
        colorMode = SkXfermode::kClear_Mode;

        framebufferMode = SkXfermode::kClear_Mode;
        swapSrcDst = false;

        isPoint = false;
        pointSize = 0.0f;

        hasGammaCorrection = false;
        gamma = 2.2f;
    };
"
	
	
	
	
	comment "*
     * Resets this description. All fields are reset back to the default
     * values they hold after building a new instance."
      end

      operation 1114124 "setColor"
	cpp_inline public explicit_return_type "bool"
	nparams 4
	  param in name "r" explicit_type "float"
	  param in name "g" explicit_type "float"
	  param in name "b" explicit_type "float"
	  param in name "a" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} ${p0}${v0}, const ${t1} ${p1}${v1}, const ${t2} ${p2}${v2}, const ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract} {
        modulate = a < COLOR_COMPONENT_THRESHOLD;
        return modulate;
    };
"
	
	
	
	
	comment "*
     * Indicates, for a given color, whether color modulation is required in
     * the fragment shader. When this method returns true, the program should
     * be provided with a modulation color."
      end

      operation 1114252 "setAlpha8Color"
	cpp_inline public explicit_return_type "bool"
	nparams 4
	  param in name "r" explicit_type "float"
	  param in name "g" explicit_type "float"
	  param in name "b" explicit_type "float"
	  param in name "a" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} ${p0}${v0}, const ${t1} ${p1}${v1}, const ${t2} ${p2}${v2}, const ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract} {
        modulate = a < COLOR_COMPONENT_THRESHOLD || r > COLOR_COMPONENT_INV_THRESHOLD ||
                g > COLOR_COMPONENT_INV_THRESHOLD || b > COLOR_COMPONENT_INV_THRESHOLD;
        return modulate;
    };
"
	
	
	
	
	comment "*
     * Indicates, for a given color, whether color modulation is required in
     * the fragment shader. When this method returns true, the program should
     * be provided with a modulation color."
      end

      operation 1114380 "key"
	const cpp_inline public return_type class_ref 436876 // programid
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        programid key = 0;
        if (hasTexture) key |= PROGRAM_KEY_TEXTURE;
        if (hasAlpha8Texture) key |= PROGRAM_KEY_A8_TEXTURE;
        if (hasBitmap) {
            key |= PROGRAM_KEY_BITMAP;
            if (isBitmapNpot) {
                key |= PROGRAM_KEY_BITMAP_NPOT;
                key |= getEnumForWrap(bitmapWrapS) << PROGRAM_BITMAP_WRAPS_SHIFT;
                key |= getEnumForWrap(bitmapWrapT) << PROGRAM_BITMAP_WRAPT_SHIFT;
            }
        }
        if (hasGradient) key |= PROGRAM_KEY_GRADIENT;
        key |= programid(gradientType) << PROGRAM_GRADIENT_TYPE_SHIFT;
        if (isBitmapFirst) key |= PROGRAM_KEY_BITMAP_FIRST;
        if (hasBitmap && hasGradient) {
            key |= (shadersMode & PROGRAM_MAX_XFERMODE) << PROGRAM_XFERMODE_SHADER_SHIFT;
        }
        switch (colorOp) {
            case kColorMatrix:
                key |= PROGRAM_KEY_COLOR_MATRIX;
                break;
            case kColorLighting:
                key |= PROGRAM_KEY_COLOR_LIGHTING;
                break;
            case kColorBlend:
                key |= PROGRAM_KEY_COLOR_BLEND;
                key |= (colorMode & PROGRAM_MAX_XFERMODE) << PROGRAM_XFERMODE_COLOR_OP_SHIFT;
                break;
            case kColorNone:
                break;
        }
        key |= (framebufferMode & PROGRAM_MAX_XFERMODE) << PROGRAM_XFERMODE_FRAMEBUFFER_SHIFT;
        if (swapSrcDst) key |= PROGRAM_KEY_SWAP_SRC_DST;
        if (modulate) key |= programid(0x1) << PROGRAM_MODULATE_SHIFT;
        if (isPoint) key |= programid(0x1) << PROGRAM_IS_POINT_SHIFT;
        if (isAA) key |= programid(0x1) << PROGRAM_HAS_AA_SHIFT;
        if (hasExternalTexture) key |= programid(0x1) << PROGRAM_HAS_EXTERNAL_TEXTURE_SHIFT;
        if (hasTextureTransform) key |= programid(0x1) << PROGRAM_HAS_TEXTURE_TRANSFORM_SHIFT;
        if (hasGammaCorrection) key |= programid(0x1) << PROGRAM_HAS_GAMMA_CORRECTION;
        if (isSimpleGradient) key |= programid(0x1) << PROGRAM_IS_SIMPLE_GRADIENT;
        if (isVertexShape) key |= programid(0x1) << PROGRAM_IS_VERTEX_SHAPE_SHIFT;
        return key;
    };
"
	
	
	
	
	comment "*
     * Computes the unique key identifying this program."
      end

      operation 1114508 "log"
	const cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "message" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
#if DEBUG_PROGRAMS
        programid k = key();
        PROGRAM_LOGD(\"%s (key = 0x%.8x%.8x)\", message, uint32_t(k >> 32),
                uint32_t(k & 0xffffffff));
#endif
    };
"
	
	
	
	
	comment "*
     * Logs the specified message followed by the key identifying this program."
      end

      operation 1114636 "getEnumForWrap"
	class_operation cpp_inline private explicit_return_type "uint32_t"
	nparams 1
	  param in name "wrap" type class_ref 190348 // GLenum
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        switch (wrap) {
            case GL_CLAMP_TO_EDGE:
                return 0;
            case GL_REPEAT:
                return 1;
            case GL_MIRRORED_REPEAT:
                return 2;
        }
        return 0;
    };
"
	
	
	
	
      end
    end

    class 433420 "ShaderGammaFontRenderer"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 898572 // <generalisation>
	relation 898572 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 898572 // <generalisation>
	  b parent class_ref 433164 // GammaFontRenderer
      end

      operation 1073676 "~ShaderGammaFontRenderer"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {
        delete mRenderer;
    };
"
	
	
	
	
      end

      operation 1073804 "clear"
	cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        delete mRenderer;
        mRenderer = NULL;
    };
"
	
	
	
	
      end

      operation 1073932 "flush"
	cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        if (mRenderer) {
            mRenderer->flushLargeCaches();
        }
    };
"
	
	
	
	
      end

      operation 1074060 "getFontRenderer"
	cpp_inline public return_type class_ref 432524 // FontRenderer
	nparams 1
	  param in name "paint" explicit_type "SkPaint"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        if (!mRenderer) {
            mRenderer = new FontRenderer;
        }
        return *mRenderer;
    };
"
	
	
	
	
      end

      operation 1074188 "getFontRendererCount"
	const cpp_inline public explicit_return_type "uint32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return 1;
    };
"
	
	
	
	
      end

      operation 1074316 "getFontRendererSize"
	const cpp_inline public explicit_return_type "uint32_t"
	nparams 1
	  param in name "fontRenderer" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        return mRenderer ? mRenderer->getCacheSize() : 0;
    };
"
	
	
	
	
      end

      operation 1074444 "describe"
	preserve_cpp_body_indent const public explicit_return_type "void"
	nparams 2
	  param inout name "description" type class_ref 433292 // ProgramDescription
	  param in name "paint" explicit_type "SkPaint"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, const ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}, const ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1074572 "setupProgram"
	preserve_cpp_body_indent const public explicit_return_type "void"
	nparams 2
	  param inout name "description" type class_ref 433292 // ProgramDescription
	  param inout name "program" type class_ref 432140 // Program
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1074700 "ShaderGammaFontRenderer"
	preserve_cpp_body_indent private explicit_return_type ""
	nparams 1
	  param in name "multiGamma" explicit_type "bool"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}${)}${volatile}${throw};
"
	cpp_def "///////////////////////////////////////////////////////////////////////////////
// Shader-based renderer
///////////////////////////////////////////////////////////////////////////////

${inline}${class}::${name}${(}${t0} ${p0}${)}: GammaFontRenderer() ${throw}{
  ${body}}
"
	
	
	
	
      end

      classrelation 898700 // mRenderer (<unidirectional association>)
	relation 898700 --->
	  a role_name "mRenderer" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 898700 // mRenderer (<unidirectional association>)
	  b parent class_ref 432524 // FontRenderer
      end

      attribute 981132 "mMultiGamma"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 898828 // <dependency>
	relation 898828 -_->
	  stereotype "friend"
	  a default
	    cpp default "${type}"
	    classrelation_ref 898828 // <dependency>
	  b parent class_ref 433164 // GammaFontRenderer
      end
    end

    class 433548 "LookupGammaFontRenderer"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 898956 // <generalisation>
	relation 898956 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 898956 // <generalisation>
	  b parent class_ref 433164 // GammaFontRenderer
      end

      operation 1074828 "~LookupGammaFontRenderer"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {
        delete mRenderer;
    };
"
	
	
	
	
      end

      operation 1074956 "clear"
	cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        delete mRenderer;
        mRenderer = NULL;
    };
"
	
	
	
	
      end

      operation 1075084 "flush"
	cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        if (mRenderer) {
            mRenderer->flushLargeCaches();
        }
    };
"
	
	
	
	
      end

      operation 1075212 "getFontRenderer"
	cpp_inline public return_type class_ref 432524 // FontRenderer
	nparams 1
	  param in name "paint" explicit_type "SkPaint"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        if (!mRenderer) {
            mRenderer = new FontRenderer;
            mRenderer->setGammaTable(&mGammaTable[0]);
        }
        return *mRenderer;
    };
"
	
	
	
	
      end

      operation 1075340 "getFontRendererCount"
	const cpp_inline public explicit_return_type "uint32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return 1;
    };
"
	
	
	
	
      end

      operation 1075468 "getFontRendererSize"
	const cpp_inline public explicit_return_type "uint32_t"
	nparams 1
	  param in name "fontRenderer" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        return mRenderer ? mRenderer->getCacheSize() : 0;
    };
"
	
	
	
	
      end

      operation 1075596 "describe"
	const cpp_inline public explicit_return_type "void"
	nparams 2
	  param inout name "description" type class_ref 433292 // ProgramDescription
	  param in name "paint" explicit_type "SkPaint"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, const ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
    };
"
	
	
	
	
      end

      operation 1075724 "setupProgram"
	const cpp_inline public explicit_return_type "void"
	nparams 2
	  param inout name "description" type class_ref 433292 // ProgramDescription
	  param inout name "program" type class_ref 432140 // Program
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
    };
"
	
	
	
	
      end

      operation 1075852 "LookupGammaFontRenderer"
	preserve_cpp_body_indent private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "///////////////////////////////////////////////////////////////////////////////
// Lookup-based renderer
///////////////////////////////////////////////////////////////////////////////

${inline}${class}::${name}${(}${)}: GammaFontRenderer() ${throw}{
  ${body}}
"
	
	
	
	
      end

      classrelation 899084 // mRenderer (<unidirectional association>)
	relation 899084 --->
	  a role_name "mRenderer" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 899084 // mRenderer (<unidirectional association>)
	  b parent class_ref 432524 // FontRenderer
      end

      attribute 981260 "mGammaTable"
	private explicit_type "uint8_t"
	multiplicity "[256]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 899212 // <dependency>
	relation 899212 -_->
	  stereotype "friend"
	  a default
	    cpp default "${type}"
	    classrelation_ref 899212 // <dependency>
	  b parent class_ref 433164 // GammaFontRenderer
      end
    end

    class 433676 "Lookup3GammaFontRenderer"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 899340 // <generalisation>
	relation 899340 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 899340 // <generalisation>
	  b parent class_ref 433164 // GammaFontRenderer
      end

      operation 1075980 "~Lookup3GammaFontRenderer"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 1076108 "clear"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1076236 "flush"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1076364 "getFontRenderer"
	preserve_cpp_body_indent public return_type class_ref 432524 // FontRenderer
	nparams 1
	  param in name "paint" explicit_type "SkPaint"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} & ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1076492 "getFontRendererCount"
	const cpp_inline public explicit_return_type "uint32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return kGammaCount;
    };
"
	
	
	
	
      end

      operation 1076620 "getFontRendererSize"
	const cpp_inline public explicit_return_type "uint32_t"
	nparams 1
	  param in name "fontRenderer" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        if (fontRenderer >= kGammaCount) return 0;

        FontRenderer* renderer = mRenderers[fontRenderer];
        if (!renderer) return 0;

        return renderer->getCacheSize();
    };
"
	
	
	
	
      end

      operation 1076748 "describe"
	const cpp_inline public explicit_return_type "void"
	nparams 2
	  param inout name "description" type class_ref 433292 // ProgramDescription
	  param in name "paint" explicit_type "SkPaint"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, const ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
    };
"
	
	
	
	
      end

      operation 1076876 "setupProgram"
	const cpp_inline public explicit_return_type "void"
	nparams 2
	  param inout name "description" type class_ref 433292 // ProgramDescription
	  param inout name "program" type class_ref 432140 // Program
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
    };
"
	
	
	
	
      end

      operation 1077004 "Lookup3GammaFontRenderer"
	preserve_cpp_body_indent private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "///////////////////////////////////////////////////////////////////////////////
// Lookup-based renderer, using 3 different correction tables
///////////////////////////////////////////////////////////////////////////////

${inline}${class}::${name}${(}${)}: GammaFontRenderer() ${throw}{
  ${body}}
"
	
	
	
	
      end

      class 433804 "Gamma"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum ${name} {
${items}
};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 981388 "kGammaDefault"
	  public type class_ref 433804 // Gamma
	  init_value " 0"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 981516 "kGammaBlack"
	  public type class_ref 433804 // Gamma
	  init_value " 1"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 981644 "kGammaWhite"
	  public type class_ref 433804 // Gamma
	  init_value " 2"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 981772 "kGammaCount"
	  public type class_ref 433804 // Gamma
	  init_value " 3
    "
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      operation 1077132 "getRenderer"
	preserve_cpp_body_indent private return_type class_ref 432524 // FontRenderer
	nparams 1
	  param in name "gamma" type class_ref 433804 // Gamma
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      attribute 981900 "mRenderersUsageCount"
	private explicit_type "uint32_t"
	multiplicity "[kGammaCount]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 899468 // mRenderers (<unidirectional association>)
	relation 899468 --->
	  a role_name "mRenderers" multiplicity "[kGammaCount]" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${multiplicity}${value};
"
	    classrelation_ref 899468 // mRenderers (<unidirectional association>)
	  b parent class_ref 432524 // FontRenderer
      end

      attribute 982028 "mGammaTable"
	private explicit_type "uint8_t"
	multiplicity "[256 * kGammaCount]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 899596 // <dependency>
	relation 899596 -_->
	  stereotype "friend"
	  a default
	    cpp default "${type}"
	    classrelation_ref 899596 // <dependency>
	  b parent class_ref 433164 // GammaFontRenderer
      end
    end

    class 433932 "GradientCacheEntry"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      operation 1077260 "GradientCacheEntry"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} {
        count = 0;
        colors = NULL;
        positions = NULL;
    };
"
	
	
	
	
      end

      operation 1077388 "GradientCacheEntry"
	cpp_inline public explicit_return_type ""
	nparams 3
	  param inout name "colors" explicit_type "uint32_t"
	  param inout name "positions" explicit_type "float"
	  param in name "count" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}${)}${volatile}${throw} {
        copy(colors, positions, count);
    };
"
	
	
	
	
      end

      operation 1077516 "GradientCacheEntry"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param in name "entry" type class_ref 433932 // GradientCacheEntry
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}${)}${volatile}${throw} {
        copy(entry.colors, entry.positions, entry.count);
    };
"
	
	
	
	
      end

      operation 1077644 "~GradientCacheEntry"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {
        delete[] colors;
        delete[] positions;
    };
"
	
	
	
	
      end

      operation 1077772 "operator ="
	cpp_inline public return_type class_ref 433932 // GradientCacheEntry
	nparams 1
	  param in name "entry" type class_ref 433932 // GradientCacheEntry
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        if (this != &entry) {
            delete[] colors;
            delete[] positions;

            copy(entry.colors, entry.positions, entry.count);
        }

        return *this;
    };
"
	
	
	
	
      end

      operation 1077900 "operator <"
	const cpp_inline public explicit_return_type "bool"
	nparams 1
	  param in name "r" type class_ref 433932 // GradientCacheEntry
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        const GradientCacheEntry& rhs = (const GradientCacheEntry&) r;
        LTE_INT(count) {
            int result = memcmp(colors, rhs.colors, count * sizeof(uint32_t));
            if (result< 0) return true;
            else if (result == 0) {
                result = memcmp(positions, rhs.positions, count * sizeof(float));
                if (result < 0) return true;
            }
        }
        return false;
    };
"
	
	
	
	
      end

      attribute 982156 "colors"
	public explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 982284 "positions"
	public explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 982412 "count"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 982540 "tileMode"
	public explicit_type "SkShader::TileMode"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 1078028 "copy"
	cpp_inline private explicit_return_type "void"
	nparams 3
	  param inout name "colors" explicit_type "uint32_t"
	  param inout name "positions" explicit_type "float"
	  param in name "count" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract} {
        this->count = count;
        this->colors = new uint32_t[count];
        this->positions = new float[count];

        memcpy(this->colors, colors, count * sizeof(uint32_t));
        memcpy(this->positions, positions, count * sizeof(float));
    };
"
	
	
	
	
      end
    end

    class 434060 "GradientCache"
      visibility package 
      nactuals 2
      actual class class_ref 407180 // OnEntryRemoved
        rank 0 value class_ref 433932 // GradientCacheEntry
      actual class class_ref 407180 // OnEntryRemoved
        rank 1 explicit_value "Texture*"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " GradientCacheEntry
*
 * A simple LRU gradient cache. The cache has a maximum size expressed in bytes.
 * Any texture added to the cache causing the cache to grow beyond the maximum
 * allowed size will also cause the oldest texture to be kicked out."
      classrelation 899724 // <realization>
	relation 899724 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    classrelation_ref 899724 // <realization>
	  b parent class_ref 407180 // OnEntryRemoved
      end

      operation 1078156 "GradientCache"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "///////////////////////////////////////////////////////////////////////////////
// Constructors/destructor
///////////////////////////////////////////////////////////////////////////////

${inline}${class}::${name}${(}${)}:
        mCache(GenerationCache<GradientCacheEntry, Texture*>::kUnlimitedCapacity),
        mSize(0), mMaxSize(MB(DEFAULT_GRADIENT_CACHE_SIZE)) ${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 1078284 "GradientCache"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 1
	  param in name "maxByteSize" explicit_type "uint32_t"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} ${p0}${)}:
        mCache(GenerationCache<GradientCacheEntry, Texture*>::kUnlimitedCapacity),
        mSize(0), mMaxSize(maxByteSize) ${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 1078412 "~GradientCache"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 1078540 "operator ()"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 2
	  param inout name "shader" type class_ref 433932 // GradientCacheEntry
	  param inout name "texture" type class_ref 434188 // Texture
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} * & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "///////////////////////////////////////////////////////////////////////////////
// Callbacks
///////////////////////////////////////////////////////////////////////////////

${inline}${type} ${class}::${name}${(}${t0} & ${p0}, ${t1} * & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Used as a callback when an entry is removed from the cache.
     * Do not invoke directly."
      end

      operation 1078668 "get"
	preserve_cpp_body_indent public return_type class_ref 434188 // Texture
	nparams 3
	  param inout name "colors" explicit_type "uint32_t"
	  param inout name "positions" explicit_type "float"
	  param in name "count" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "///////////////////////////////////////////////////////////////////////////////
// Caching
///////////////////////////////////////////////////////////////////////////////

${inline}${type} * ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Returns the texture associated with the specified shader."
      end

      operation 1078796 "clear"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Clears the cache. This causes all textures to be deleted."
      end

      operation 1078924 "setMaxSize"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "maxSize" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Sets the maximum size of the cache in bytes."
      end

      operation 1079052 "getMaxSize"
	preserve_cpp_body_indent public explicit_return_type "uint32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Returns the maximum size of the cache in bytes."
      end

      operation 1079180 "getSize"
	preserve_cpp_body_indent public explicit_return_type "uint32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "///////////////////////////////////////////////////////////////////////////////
// Size management
///////////////////////////////////////////////////////////////////////////////

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Returns the current size of the cache in bytes."
      end

      operation 1079308 "addLinearGradient"
	preserve_cpp_body_indent private return_type class_ref 434188 // Texture
	nparams 4
	  param inout name "gradient" type class_ref 433932 // GradientCacheEntry
	  param inout name "colors" explicit_type "uint32_t"
	  param inout name "positions" explicit_type "float"
	  param in name "count" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${t0} & ${p0}, ${t1} * ${p1}, ${t2} * ${p2}, ${t3} ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Adds a new linear gradient to the cache. The generated texture is
     * returned."
      end

      operation 1079436 "generateTexture"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 4
	  param inout name "colors" explicit_type "uint32_t"
	  param inout name "positions" explicit_type "float"
	  param in name "count" explicit_type "int"
	  param inout name "texture" type class_ref 434188 // Texture
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} * ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} ${p2}, ${t3} * ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      class 434316 "GradientInfo"
	visibility package stereotype "struct"
	cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 982668 "width"
	  public explicit_type "uint32_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 982796 "hasAlpha"
	  public explicit_type "bool"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      operation 1079564 "getGradientInfo"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 3
	  param in name "colors" explicit_type "uint32_t"
	  param in name "count" explicit_type "int"
	  param inout name "info" type class_ref 434316 // GradientInfo
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, const ${t1} ${p1}${v1}, ${t2} & ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, const ${t1} ${p1}, ${t2} & ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      classrelation 899852 // mCache (<directional composition>)
	relation 899852 *-->
	  stereotype "GenerationCache"
	  a role_name "mCache" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type},Texture*> ${name}${value};
"
	    classrelation_ref 899852 // mCache (<directional composition>)
	  b parent class_ref 433932 // GradientCacheEntry
      end

      attribute 982924 "mSize"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 983052 "mMaxSize"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 899980 // mMaxTextureSize (<directional composition>)
	relation 899980 *-->
	  a role_name "mMaxTextureSize" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 899980 // mMaxTextureSize (<directional composition>)
	  b parent class_ref 191116 // GLint
      end

      attribute 983180 "mGarbage"
	private explicit_type "SkShader*"
	stereotype "Vector"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 900108 // mLock (<directional composition>)
	relation 900108 *-->
	  a role_name "mLock" private
	    cpp mutable default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 900108 // mLock (<directional composition>)
	  b parent class_ref 133132 // Mutex
      end
    end

    class 434188 "Texture"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * Represents an OpenGL texture."
      operation 1139596 "Texture"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} {
        cleanup = false;
        bitmapSize = 0;

        wrapS = GL_CLAMP_TO_EDGE;
        wrapT = GL_CLAMP_TO_EDGE;

        minFilter = GL_NEAREST;
        magFilter = GL_NEAREST;

        mipMap = false;

        firstFilter = true;
        firstWrap = true;

        id = 0;
    };
"
	
	
	
	
      end

      operation 1139724 "setWrap"
	cpp_inline public explicit_return_type "void"
	nparams 4
	  param in name "wrap" type class_ref 190348 // GLenum
	  param in name "bindTexture" explicit_type "bool"
	    defaultvalue "false"
	  param in name "force" explicit_type "bool"
	    defaultvalue "false"
	  param in name "renderTarget" type class_ref 190348 // GLenum
	    defaultvalue "GL_TEXTURE_2D"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract} {
        setWrapST(wrap, wrap, bindTexture, force, renderTarget);
    };
"
	
	
	
	
      end

      operation 1139852 "setWrapST"
	cpp_inline public explicit_return_type "void"
	nparams 5
	  param in name "wrapS" type class_ref 190348 // GLenum
	  param in name "wrapT" type class_ref 190348 // GLenum
	  param in name "bindTexture" explicit_type "bool"
	    defaultvalue "false"
	  param in name "force" explicit_type "bool"
	    defaultvalue "false"
	  param in name "renderTarget" type class_ref 190348 // GLenum
	    defaultvalue "GL_TEXTURE_2D"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}${)}${const}${volatile}${throw}${abstract} {

        if (firstWrap || force || wrapS != this->wrapS || wrapT != this->wrapT) {
            firstWrap = false;

            this->wrapS = wrapS;
            this->wrapT = wrapT;

            if (bindTexture) {
                glBindTexture(renderTarget, id);
            }

            glTexParameteri(renderTarget, GL_TEXTURE_WRAP_S, wrapS);
            glTexParameteri(renderTarget, GL_TEXTURE_WRAP_T, wrapT);
        }
    };
"
	
	
	
	
      end

      operation 1139980 "setFilter"
	cpp_inline public explicit_return_type "void"
	nparams 4
	  param in name "filter" type class_ref 190348 // GLenum
	  param in name "bindTexture" explicit_type "bool"
	    defaultvalue "false"
	  param in name "force" explicit_type "bool"
	    defaultvalue "false"
	  param in name "renderTarget" type class_ref 190348 // GLenum
	    defaultvalue "GL_TEXTURE_2D"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract} {
        setFilterMinMag(filter, filter, bindTexture, force, renderTarget);
    };
"
	
	
	
	
      end

      operation 1140108 "setFilterMinMag"
	cpp_inline public explicit_return_type "void"
	nparams 5
	  param in name "min" type class_ref 190348 // GLenum
	  param in name "mag" type class_ref 190348 // GLenum
	  param in name "bindTexture" explicit_type "bool"
	    defaultvalue "false"
	  param in name "force" explicit_type "bool"
	    defaultvalue "false"
	  param in name "renderTarget" type class_ref 190348 // GLenum
	    defaultvalue "GL_TEXTURE_2D"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}${)}${const}${volatile}${throw}${abstract} {

        if (firstFilter || force || min != minFilter || mag != magFilter) {
            firstFilter = false;

            minFilter = min;
            magFilter = mag;

            if (bindTexture) {
                glBindTexture(renderTarget, id);
            }

            if (mipMap && min == GL_LINEAR) min = GL_LINEAR_MIPMAP_LINEAR;

            glTexParameteri(renderTarget, GL_TEXTURE_MIN_FILTER, min);
            glTexParameteri(renderTarget, GL_TEXTURE_MAG_FILTER, mag);
        }
    };
"
	
	
	
	
      end

      classrelation 913164 // id (<directional composition>)
	relation 913164 *-->
	  a role_name "id" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 913164 // id (<directional composition>)
	  b parent class_ref 190220 // GLuint
      end

      attribute 1009164 "generation"
	public explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1009292 "blend"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1009420 "width"
	public explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1009548 "height"
	public explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1009676 "cleanup"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1009804 "bitmapSize"
	public explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1009932 "mipMap"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 913292 // wrapS (<directional composition>)
	relation 913292 *-->
	  a role_name "wrapS" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 913292 // wrapS (<directional composition>)
	  b parent class_ref 190348 // GLenum
      end

      classrelation 913420 // wrapT (<directional composition>)
	relation 913420 *-->
	  a role_name "wrapT" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 913420 // wrapT (<directional composition>)
	  b parent class_ref 190348 // GLenum
      end

      classrelation 913548 // minFilter (<directional composition>)
	relation 913548 *-->
	  a role_name "minFilter" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 913548 // minFilter (<directional composition>)
	  b parent class_ref 190348 // GLenum
      end

      classrelation 913676 // magFilter (<directional composition>)
	relation 913676 *-->
	  a role_name "magFilter" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 913676 // magFilter (<directional composition>)
	  b parent class_ref 190348 // GLenum
      end

      attribute 1010060 "firstFilter"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1010188 "firstWrap"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 434444 "mat4"
      visibility package stereotype "typedef" explicit_base_type "Matrix4"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " class Matrix4
/////////////////////////////////////////////////////////////////////////////
 Types
/////////////////////////////////////////////////////////////////////////////"
    end

    class 434700 "TextureVertex"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " struct Vertex
*
 * Simple structure to describe a vertex with a position and a texture."
      attribute 1011340 "position"
	public explicit_type "float"
	multiplicity "[2]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1011468 "texture"
	public explicit_type "float"
	multiplicity "[2]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 1145228 "set"
	class_operation cpp_inline public explicit_return_type "void"
	nparams 5
	  param inout name "vertex" type class_ref 434700 // TextureVertex
	  param in name "x" explicit_type "float"
	  param in name "y" explicit_type "float"
	  param in name "u" explicit_type "float"
	  param in name "v" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}${)}${const}${volatile}${throw}${abstract} {
        vertex[0].position[0] = x;
        vertex[0].position[1] = y;
        vertex[0].texture[0] = u;
        vertex[0].texture[1] = v;
    };
"
	
	
	
	
      end

      operation 1145356 "setUV"
	class_operation cpp_inline public explicit_return_type "void"
	nparams 3
	  param inout name "vertex" type class_ref 434700 // TextureVertex
	  param in name "u" explicit_type "float"
	  param in name "v" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract} {
        vertex[0].texture[0] = u;
        vertex[0].texture[1] = v;
    };
"
	
	
	
	
      end
    end

    class 434956 "LayerCache"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "/////////////////////////////////////////////////////////////////////////////
 Cache
/////////////////////////////////////////////////////////////////////////////"
      operation 1084812 "LayerCache"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "///////////////////////////////////////////////////////////////////////////////
// Constructors/destructor
///////////////////////////////////////////////////////////////////////////////

${inline}${class}::${name}${(}${)}: mSize(0), mMaxSize(MB(DEFAULT_LAYER_CACHE_SIZE)) ${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 1084940 "~LayerCache"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 1085068 "get"
	preserve_cpp_body_indent public return_type class_ref 431756 // Layer
	nparams 2
	  param in name "width" explicit_type "uint32_t"
	  param in name "height" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}const ${t0} ${p0}${v0}, const ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}const ${t0} ${p0}, const ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Returns a layer large enough for the specified dimensions. If no suitable
     * layer can be found, a new one is created and returned. If creating a new
     * layer fails, NULL is returned.
     *
     * When a layer is obtained from the cache, it is removed and the total
     * size of the cache goes down.
     *
     * @param width The desired width of the layer
     * @param width The desired height of the layer"
      end

      operation 1085196 "put"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 1
	  param inout name "layer" type class_ref 431756 // Layer
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Adds the layer to the cache. The layer will not be added if there is
     * not enough space available. Adding a layer can cause other layers to
     * be removed from the cache.
     *
     * @param layer The layer to add to the cache
     *
     * @return True if the layer was added, false otherwise."
      end

      operation 1085324 "clear"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Clears the cache. This causes all layers to be deleted."
      end

      operation 1085452 "resize"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 3
	  param inout name "layer" type class_ref 431756 // Layer
	  param in name "width" explicit_type "uint32_t"
	  param in name "height" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, const ${t1} ${p1}${v1}, const ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, const ${t1} ${p1}, const ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Resize the specified layer if needed.
     *
     * @param layer The layer to resize
     * @param width The new width of the layer
     * @param height The new height of the layer
     *
     * @return True if the layer was resized or nothing happened, false if
     *         a failure occurred during the resizing operation"
      end

      operation 1085580 "setMaxSize"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "maxSize" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Sets the maximum size of the cache in bytes."
      end

      operation 1085708 "getMaxSize"
	preserve_cpp_body_indent public explicit_return_type "uint32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Returns the maximum size of the cache in bytes."
      end

      operation 1085836 "getSize"
	preserve_cpp_body_indent public explicit_return_type "uint32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "///////////////////////////////////////////////////////////////////////////////
// Size management
///////////////////////////////////////////////////////////////////////////////

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Returns the current size of the cache in bytes."
      end

      operation 1085964 "dump"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Prints out the content of the cache."
      end

      operation 1086092 "deleteLayer"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 1
	  param inout name "layer" type class_ref 431756 // Layer
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "///////////////////////////////////////////////////////////////////////////////
// Caching
///////////////////////////////////////////////////////////////////////////////

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      class 435084 "LayerEntry"
	visibility package stereotype "struct"
	cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 1086220 "LayerEntry"
	  cpp_inline public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} :
            mLayer(NULL), mWidth(0), mHeight(0) {
        };
"
	  
	  
	  
	  
	end

	operation 1086348 "LayerEntry"
	  cpp_inline public explicit_return_type ""
	  nparams 2
	    param in name "layerWidth" explicit_type "uint32_t"
	    param in name "layerHeight" explicit_type "uint32_t"
	  cpp_decl "    ${comment}${inline}${name}${(}const ${t0} ${p0}${v0}, const ${t1} ${p1}${v1}${)}${volatile}${throw} : mLayer(NULL) {
            mWidth = uint32_t(ceilf(layerWidth / float(LAYER_SIZE)) * LAYER_SIZE);
            mHeight = uint32_t(ceilf(layerHeight / float(LAYER_SIZE)) * LAYER_SIZE);
        };
"
	  
	  
	  
	  
	end

	operation 1086476 "LayerEntry"
	  cpp_inline public explicit_return_type ""
	  nparams 1
	    param inout name "layer" type class_ref 431756 // Layer
	  cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}${)}${volatile}${throw} :
            mLayer(layer), mWidth(layer->getWidth()), mHeight(layer->getHeight()) {
        };
"
	  
	  
	  
	  
	end

	operation 1086604 "operator <"
	  const cpp_inline public explicit_return_type "bool"
	  nparams 1
	    param in name "rhs" type class_ref 435084 // LayerEntry
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
            if (mWidth == rhs.mWidth) {
                return mHeight < rhs.mHeight;
            }
            return mWidth < rhs.mWidth;
        };
"
	  
	  
	  
	  
	end

	operation 1086732 "operator =="
	  const cpp_inline public explicit_return_type "bool"
	  nparams 1
	    param in name "rhs" type class_ref 435084 // LayerEntry
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
            return mWidth == rhs.mWidth && mHeight == rhs.mHeight;
        };
"
	  
	  
	  
	  
	end

	classrelation 902156 // mLayer (<unidirectional association>)
	  relation 902156 --->
	    a role_name "mLayer" public
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      classrelation_ref 902156 // mLayer (<unidirectional association>)
	    b parent class_ref 431756 // Layer
	end

	attribute 984332 "mWidth"
	  public explicit_type "uint32_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 984460 "mHeight"
	  public explicit_type "uint32_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      classrelation 902284 // mCache (<directional composition>)
	relation 902284 *-->
	  stereotype "SortedList"
	  a role_name "mCache" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 902284 // mCache (<directional composition>)
	  b parent class_ref 435084 // LayerEntry
      end

      attribute 984588 "mSize"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 984716 "mMaxSize"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 7294732 // <directional composition>
	relation 7294604 *-->
	  a role_name "" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7294732 // <directional composition>
	  b parent class_ref 431756 // Layer
      end
    end

    class 435212 "LayerRenderer"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "/////////////////////////////////////////////////////////////////////////////
 Renderer
/////////////////////////////////////////////////////////////////////////////"
      classrelation 902412 // <generalisation>
	relation 902412 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 902412 // <generalisation>
	  b parent class_ref 431116 // OpenGLRenderer
      end

      operation 1086860 "LayerRenderer"
	preserve_cpp_body_indent public explicit_return_type "ANDROID_API"
	nparams 1
	  param inout name "layer" type class_ref 431756 // Layer
	cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}${)}${volatile}${throw};
"
	cpp_def "///////////////////////////////////////////////////////////////////////////////
// Rendering
///////////////////////////////////////////////////////////////////////////////

${inline}${class}::${name}${(}${t0} * ${p0}${)}: mLayer(layer) ${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 1086988 "~LayerRenderer"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 1087116 "setViewport"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 2
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1087244 "prepareDirty"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 128268 // status_t
	nparams 5
	  param in name "left" explicit_type "float"
	  param in name "top" explicit_type "float"
	  param in name "right" explicit_type "float"
	  param in name "bottom" explicit_type "float"
	  param in name "opaque" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1087372 "clear"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 128268 // status_t
	nparams 5
	  param in name "left" explicit_type "float"
	  param in name "top" explicit_type "float"
	  param in name "right" explicit_type "float"
	  param in name "bottom" explicit_type "float"
	  param in name "opaque" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1087500 "finish"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1087628 "resizeLayer"
	class_operation preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 3
	  param inout name "layer" type class_ref 431756 // Layer
	  param in name "width" explicit_type "uint32_t"
	  param in name "height" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1087756 "updateTextureLayer"
	class_operation preserve_cpp_body_indent public explicit_return_type "void"
	nparams 6
	  param inout name "layer" type class_ref 431756 // Layer
	  param in name "width" explicit_type "uint32_t"
	  param in name "height" explicit_type "uint32_t"
	  param in name "isOpaque" explicit_type "bool"
	  param in name "renderTarget" type class_ref 190348 // GLenum
	  param inout name "transform" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} * ${p5}${v5}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} * ${p5}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1087884 "destroyLayer"
	class_operation preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param inout name "layer" type class_ref 431756 // Layer
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1088012 "destroyLayerDeferred"
	class_operation preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param inout name "layer" type class_ref 431756 // Layer
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1088140 "copyLayer"
	class_operation preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 2
	  param inout name "layer" type class_ref 431756 // Layer
	  param inout name "bitmap" explicit_type "SkBitmap"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1088268 "flushLayer"
	class_operation preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param inout name "layer" type class_ref 431756 // Layer
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1088396 "hasLayer"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "///////////////////////////////////////////////////////////////////////////////
// Dirty region tracking
///////////////////////////////////////////////////////////////////////////////

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1088524 "getRegion"
	preserve_cpp_body_indent cpp_virtual protected return_type class_ref 434572 // Region
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1088652 "getTargetFbo"
	preserve_cpp_body_indent cpp_virtual protected return_type class_ref 191116 // GLint
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1088780 "suppressErrorChecks"
	preserve_cpp_body_indent cpp_virtual protected explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1088908 "generateMesh"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "// TODO: This implementation is flawed and can generate T-junctions
//       in the mesh, which will in turn produce cracks when the
//       mesh is rotated/skewed. The easiest way to fix this would
//       be, for each row, to add new vertices shared with the previous
//       row when the two rows share an edge.
//       In practice, T-junctions do not appear often so this has yet
//       to be fixed.

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      classrelation 902540 // mLayer (<unidirectional association>)
	relation 902540 --->
	  a role_name "mLayer" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 902540 // mLayer (<unidirectional association>)
	  b parent class_ref 431756 // Layer
      end

      operation 16222604 "createLayer"
	class_operation public explicit_return_type ""
	nparams 3
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	  param in name "isOpaque" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 7294604 // <dependency>
	relation 7294476 -_->
	  a default
	    cpp default "#include in source"
	    classrelation_ref 7294604 // <dependency>
	  b parent class_ref 3838092 // Caches
      end
    end

    class 435340 "PathTexture"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "/////////////////////////////////////////////////////////////////////////////
 Classes
/////////////////////////////////////////////////////////////////////////////
*
 * Alpha texture used to represent a path."
      classrelation 906636 // <generalisation>
	relation 906636 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 906636 // <generalisation>
	  b parent class_ref 434188 // Texture
      end

      operation 1121420 "PathTexture"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} : Texture() {
    };
"
	
	
	
	
      end

      attribute 997260 "left"
	public explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 997388 "top"
	public explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 997516 "offset"
	public explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 435596 "Snapshot"
      visibility package 
      nactuals 1
      actual class class_ref 441100 // LightRefBase
        rank 0 value class_ref 435596 // Snapshot
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * A snapshot holds information about the current state of the rendering
 * surface. A snapshot is usually created whenever the user calls save()
 * and discarded when the user calls restore(). Once a snapshot is created,
 * it can hold information for deferred rendering.
 *
 * Each snapshot has a link to a previous snapshot, indicating the previous
 * state of the renderer."
      classrelation 910860 // <realization>
	relation 910860 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    classrelation_ref 910860 // <realization>
	  b parent class_ref 441100 // LightRefBase
      end

      operation 1135756 "Snapshot"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "///////////////////////////////////////////////////////////////////////////////
// Constructors
///////////////////////////////////////////////////////////////////////////////

${inline}${class}::${name}${(}${)}: flags(0), previous(NULL), layer(NULL), fbo(0),
        invisible(false), empty(false), alpha(1.0f) ${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 1135884 "Snapshot"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 2
	  param in name "s" explicit_type "sp<Snapshot>"
	  param in name "saveFlags" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${volatile}${throw};
"
	cpp_def "//*
// * Copies the specified snapshot/ The specified snapshot is stored as
// * the previous snapshot.

${inline}${class}::${name}${(}const ${t0} & ${p0}, ${t1} ${p1}${)}:
        flags(0), previous(s), layer(NULL), fbo(s->fbo),
        invisible(s->invisible), empty(false),
        viewport(s->viewport), height(s->height), alpha(s->alpha) ${throw}{
  ${body}}
"
	
	
	
	
      end

      class 441228 "Flags"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum ${name} {
${items}
};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 1005836 "kFlagClipSet"
	  public type class_ref 441228 // Flags
	  init_value " 0x1"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1005964 "kFlagIsLayer"
	  public type class_ref 441228 // Flags
	  init_value " 0x2"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1006092 "kFlagIsFboLayer"
	  public type class_ref 441228 // Flags
	  init_value " 0x4"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1006220 "kFlagDirtyOrtho"
	  public type class_ref 441228 // Flags
	  init_value " 0x8"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 1006348 "kFlagFboTarget"
	  public type class_ref 441228 // Flags
	  init_value " 0x10
    "
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      operation 1136012 "clip"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 5
	  param in name "left" explicit_type "float"
	  param in name "top" explicit_type "float"
	  param in name "right" explicit_type "float"
	  param in name "bottom" explicit_type "float"
	  param in name "op" explicit_type "SkRegion::Op"
	    defaultvalue "SkRegion::kIntersect_Op"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Modifies the current clip with the new clip rectangle and
     * the specified operation. The specified rectangle is transformed
     * by this snapshot's trasnformation."
      end

      operation 1136140 "clipTransformed"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 2
	  param in name "r" type class_ref 431244 // Rect
	  param in name "op" explicit_type "SkRegion::Op"
	    defaultvalue "SkRegion::kIntersect_Op"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Modifies the current clip with the new clip rectangle and
     * the specified operation. The specified rectangle is considered
     * already transformed."
      end

      operation 1136268 "setClip"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 4
	  param in name "left" explicit_type "float"
	  param in name "top" explicit_type "float"
	  param in name "right" explicit_type "float"
	  param in name "bottom" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Sets the current clip."
      end

      operation 1136396 "getLocalClip"
	preserve_cpp_body_indent public return_type class_ref 431244 // Rect
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}const ${type} & ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Returns the current clip in local coordinates. The clip rect is
     * transformed by the inverse transform matrix."
      end

      operation 1136524 "resetClip"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 4
	  param in name "left" explicit_type "float"
	  param in name "top" explicit_type "float"
	  param in name "right" explicit_type "float"
	  param in name "bottom" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Resets the clip to the specified rect."
      end

      operation 1136652 "resetTransform"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 3
	  param in name "x" explicit_type "float"
	  param in name "y" explicit_type "float"
	  param in name "z" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "///////////////////////////////////////////////////////////////////////////////
// Transforms
///////////////////////////////////////////////////////////////////////////////

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Resets the current transform to a pure 3D translation."
      end

      operation 1136780 "isIgnored"
	preserve_cpp_body_indent const public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "///////////////////////////////////////////////////////////////////////////////
// Queries
///////////////////////////////////////////////////////////////////////////////

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Indicates whether this snapshot should be ignored. A snapshot
     * is typicalled ignored if its layer is invisible or empty."
      end

      operation 1136908 "hasPerspectiveTransform"
	preserve_cpp_body_indent const public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Indicates whether the current transform has perspective components."
      end

      attribute 1006476 "flags"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 910988 // previous (<directional composition>)
	relation 910988 *-->
	  stereotype "sp"
	  a role_name "previous" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 910988 // previous (<directional composition>)
	  b parent class_ref 435596 // Snapshot
      end

      classrelation 911116 // layer (<unidirectional association>)
	relation 911116 --->
	  a role_name "layer" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 911116 // layer (<unidirectional association>)
	  b parent class_ref 431756 // Layer
      end

      classrelation 911244 // fbo (<directional composition>)
	relation 911244 *-->
	  a role_name "fbo" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 911244 // fbo (<directional composition>)
	  b parent class_ref 190220 // GLuint
      end

      attribute 1006604 "invisible"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1006732 "empty"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 911372 // viewport (<directional composition>)
	relation 911372 *-->
	  a role_name "viewport" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 911372 // viewport (<directional composition>)
	  b parent class_ref 431244 // Rect
      end

      attribute 1006860 "height"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 911500 // orthoMatrix (<directional composition>)
	relation 911500 *-->
	  a role_name "orthoMatrix" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 911500 // orthoMatrix (<directional composition>)
	  b parent class_ref 434444 // mat4
      end

      classrelation 911628 // transform (<unidirectional association>)
	relation 911628 --->
	  a role_name "transform" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 911628 // transform (<unidirectional association>)
	  b parent class_ref 434444 // mat4
      end

      classrelation 911756 // clipRect (<unidirectional association>)
	relation 911756 --->
	  a role_name "clipRect" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 911756 // clipRect (<unidirectional association>)
	  b parent class_ref 431244 // Rect
      end

      attribute 1006988 "clipRegion"
	public explicit_type "SkRegion"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 911884 // region (<unidirectional association>)
	relation 911884 --->
	  a role_name "region" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 911884 // region (<unidirectional association>)
	  b parent class_ref 434572 // Region
      end

      attribute 1007116 "alpha"
	public explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 1137036 "ensureClipRegion"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "///////////////////////////////////////////////////////////////////////////////
// Clipping
///////////////////////////////////////////////////////////////////////////////

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1137164 "copyClipRectFromRegion"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1137292 "clipRegionOp"
	preserve_cpp_body_indent private explicit_return_type "bool"
	nparams 5
	  param in name "left" explicit_type "float"
	  param in name "top" explicit_type "float"
	  param in name "right" explicit_type "float"
	  param in name "bottom" explicit_type "float"
	  param in name "op" explicit_type "SkRegion::Op"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      classrelation 912012 // mTransformRoot (<directional composition>)
	relation 912012 *-->
	  a role_name "mTransformRoot" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 912012 // mTransformRoot (<directional composition>)
	  b parent class_ref 434444 // mat4
      end

      classrelation 912140 // mClipRectRoot (<directional composition>)
	relation 912140 *-->
	  a role_name "mClipRectRoot" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 912140 // mClipRectRoot (<directional composition>)
	  b parent class_ref 431244 // Rect
      end

      classrelation 912268 // mLocalClip (<directional composition>)
	relation 912268 *-->
	  a role_name "mLocalClip" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 912268 // mLocalClip (<directional composition>)
	  b parent class_ref 431244 // Rect
      end

      attribute 1007244 "mClipRegionRoot"
	private explicit_type "SkRegion"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 435724 "Patch"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "/////////////////////////////////////////////////////////////////////////////
 9-patch structures
/////////////////////////////////////////////////////////////////////////////
*
 * An OpenGL patch. This contains an array of vertices and an array of
 * indices to render the vertices."
      operation 1109004 "Patch"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 3
	  param in name "xCount" explicit_type "uint32_t"
	  param in name "yCount" explicit_type "uint32_t"
	  param in name "emptyQuads" explicit_type "int8_t"
	    defaultvalue "0"
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} ${p0}${v0}, const ${t1} ${p1}${v1}, const ${t2} ${p2}${v2}${)}${volatile}${throw};
"
	cpp_def "///////////////////////////////////////////////////////////////////////////////
// Constructors/destructor
///////////////////////////////////////////////////////////////////////////////

${inline}${class}::${name}${(}const ${t0} ${p0}, const ${t1} ${p1}, const ${t2} ${p2}${)}:
        mXCount(xCount), mYCount(yCount), mEmptyQuads(emptyQuads) ${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 1109132 "~Patch"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 1109260 "updateVertices"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 6
	  param in name "bitmapWidth" explicit_type "float"
	  param in name "bitmapHeight" explicit_type "float"
	  param in name "left" explicit_type "float"
	  param in name "top" explicit_type "float"
	  param in name "right" explicit_type "float"
	  param in name "bottom" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} ${p0}${v0}, const ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} ${p5}${v5}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "///////////////////////////////////////////////////////////////////////////////
// Vertices management
///////////////////////////////////////////////////////////////////////////////

${inline}${type} ${class}::${name}${(}const ${t0} ${p0}, const ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1109388 "updateColorKey"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "colorKey" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1109516 "copy"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 2
	  param in name "xDivs" explicit_type "int32_t"
	  param in name "yDivs" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, const ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "///////////////////////////////////////////////////////////////////////////////
// Patch management
///////////////////////////////////////////////////////////////////////////////

${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, const ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1109644 "matches"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 3
	  param in name "xDivs" explicit_type "int32_t"
	  param in name "yDivs" explicit_type "int32_t"
	  param in name "colorKey" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, const ${t1} * ${p1}${v1}, const ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, const ${t1} * ${p1}, const ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      classrelation 904588 // meshBuffer (<directional composition>)
	relation 904588 *-->
	  a role_name "meshBuffer" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 904588 // meshBuffer (<directional composition>)
	  b parent class_ref 190220 // GLuint
      end

      attribute 987148 "verticesCount"
	public explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 987276 "hasEmptyQuads"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 904716 // quads (<directional composition>)
	relation 904716 *-->
	  stereotype "Vector"
	  a role_name "quads" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 904716 // quads (<directional composition>)
	  b parent class_ref 431244 // Rect
      end

      classrelation 904844 // mVertices (<unidirectional association>)
	relation 904844 --->
	  a role_name "mVertices" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 904844 // mVertices (<unidirectional association>)
	  b parent class_ref 434700 // TextureVertex
      end

      attribute 987404 "mUploaded"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 987532 "mXDivs"
	private explicit_type "int32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 987660 "mYDivs"
	private explicit_type "int32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 987788 "mColorKey"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 987916 "mXCount"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 988044 "mYCount"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 988172 "mEmptyQuads"
	private explicit_type "int8_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 1109772 "copy"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 1
	  param in name "yDivs" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1109900 "generateRow"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 10
	  param inout name "vertex" type class_ref 434700 // TextureVertex
	  param in name "y1" explicit_type "float"
	  param in name "y2" explicit_type "float"
	  param in name "v1" explicit_type "float"
	  param in name "v2" explicit_type "float"
	  param in name "stretchX" explicit_type "float"
	  param in name "rescaleX" explicit_type "float"
	  param in name "width" explicit_type "float"
	  param in name "bitmapWidth" explicit_type "float"
	  param inout name "quadCount" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * & ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} ${p5}${v5}, ${t6} ${p6}${v6}, ${t7} ${p7}${v7}, ${t8} ${p8}${v8}, ${t9} & ${p9}${v9}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * & ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}, ${t9} & ${p9}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1110028 "generateQuad"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 10
	  param inout name "vertex" type class_ref 434700 // TextureVertex
	  param in name "x1" explicit_type "float"
	  param in name "y1" explicit_type "float"
	  param in name "x2" explicit_type "float"
	  param in name "y2" explicit_type "float"
	  param in name "u1" explicit_type "float"
	  param in name "v1" explicit_type "float"
	  param in name "u2" explicit_type "float"
	  param in name "v2" explicit_type "float"
	  param inout name "quadCount" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * & ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} ${p5}${v5}, ${t6} ${p6}${v6}, ${t7} ${p7}${v7}, ${t8} ${p8}${v8}, ${t9} & ${p9}${v9}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * & ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}, ${t9} & ${p9}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end
    end

    class 435852 "PatchCache"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "/////////////////////////////////////////////////////////////////////////////
 Cache
/////////////////////////////////////////////////////////////////////////////"
      operation 1110156 "PatchCache"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "///////////////////////////////////////////////////////////////////////////////
// Constructors/destructor
///////////////////////////////////////////////////////////////////////////////

${inline}${class}::${name}${(}${)}: mMaxEntries(DEFAULT_PATCH_CACHE_SIZE) ${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 1110284 "PatchCache"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 1
	  param in name "maxEntries" explicit_type "uint32_t"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} ${p0}${)}: mMaxEntries(maxEntries) ${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 1110412 "~PatchCache"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 1110540 "get"
	preserve_cpp_body_indent public return_type class_ref 435724 // Patch
	nparams 10
	  param in name "bitmapWidth" explicit_type "float"
	  param in name "bitmapHeight" explicit_type "float"
	  param in name "pixelWidth" explicit_type "float"
	  param in name "pixelHeight" explicit_type "float"
	  param in name "xDivs" explicit_type "int32_t"
	  param in name "yDivs" explicit_type "int32_t"
	  param in name "colors" explicit_type "uint32_t"
	  param in name "width" explicit_type "uint32_t"
	  param in name "height" explicit_type "uint32_t"
	  param in name "numColors" explicit_type "int8_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}const ${t0} ${p0}${v0}, const ${t1} ${p1}${v1}, const ${t2} ${p2}${v2}, const ${t3} ${p3}${v3}, const ${t4} * ${p4}${v4}, const ${t5} * ${p5}${v5}, const ${t6} * ${p6}${v6}, const ${t7} ${p7}${v7}, const ${t8} ${p8}${v8}, const ${t9} ${p9}${v9}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}const ${t0} ${p0}, const ${t1} ${p1}, const ${t2} ${p2}, const ${t3} ${p3}, const ${t4} * ${p4}, const ${t5} * ${p5}, const ${t6} * ${p6}, const ${t7} ${p7}, const ${t8} ${p8}, const ${t9} ${p9}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1110668 "clear"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "///////////////////////////////////////////////////////////////////////////////
// Caching
///////////////////////////////////////////////////////////////////////////////

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1110796 "getSize"
	const cpp_inline public explicit_return_type "uint32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return mCache.size();
    };
"
	
	
	
	
      end

      operation 1110924 "getMaxSize"
	const cpp_inline public explicit_return_type "uint32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return mMaxEntries;
    };
"
	
	
	
	
      end

      class 435980 "PatchDescription"
	visibility package stereotype "struct"
	cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 1111052 "PatchDescription"
	  cpp_inline public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} : bitmapWidth(0), bitmapHeight(0), pixelWidth(0), pixelHeight(0),
                xCount(0), yCount(0), emptyCount(0), colorKey(0) {
        };
"
	  
	  
	  
	  
	end

	operation 1111180 "PatchDescription"
	  cpp_inline public explicit_return_type ""
	  nparams 8
	    param in name "bitmapWidth" explicit_type "float"
	    param in name "bitmapHeight" explicit_type "float"
	    param in name "pixelWidth" explicit_type "float"
	    param in name "pixelHeight" explicit_type "float"
	    param in name "xCount" explicit_type "uint32_t"
	    param in name "yCount" explicit_type "uint32_t"
	    param in name "emptyCount" explicit_type "int8_t"
	    param in name "colorKey" explicit_type "uint32_t"
	  cpp_decl "    ${comment}${inline}${name}${(}const ${t0} ${p0}${v0}, const ${t1} ${p1}${v1}, const ${t2} ${p2}${v2}, const ${t3} ${p3}${v3}, const ${t4} ${p4}${v4}, const ${t5} ${p5}${v5}, const ${t6} ${p6}${v6}, const ${t7} ${p7}${v7}${)}${volatile}${throw} :
                bitmapWidth(bitmapWidth), bitmapHeight(bitmapHeight),
                pixelWidth(pixelWidth), pixelHeight(pixelHeight),
                xCount(xCount), yCount(yCount),
                emptyCount(emptyCount), colorKey(colorKey) {
        };
"
	  
	  
	  
	  
	end

	operation 1111308 "operator <"
	  const cpp_inline public explicit_return_type "bool"
	  nparams 1
	    param in name "rhs" type class_ref 435980 // PatchDescription
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
            LTE_FLOAT(bitmapWidth) {
                LTE_FLOAT(bitmapHeight) {
                    LTE_FLOAT(pixelWidth) {
                        LTE_FLOAT(pixelHeight) {
                            LTE_INT(xCount) {
                                LTE_INT(yCount) {
                                    LTE_INT(emptyCount) {
                                        LTE_INT(colorKey) return false;
                                    }
                                }
                            }
                        }
                    }
                }
            }
            return false;
        };
"
	  
	  
	  
	  
	end

	attribute 988300 "bitmapWidth"
	  private explicit_type "float"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 988428 "bitmapHeight"
	  private explicit_type "float"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 988556 "pixelWidth"
	  private explicit_type "float"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 988684 "pixelHeight"
	  private explicit_type "float"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 988812 "xCount"
	  private explicit_type "uint32_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 988940 "yCount"
	  private explicit_type "uint32_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 989068 "emptyCount"
	  private explicit_type "int8_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 989196 "colorKey"
	  private explicit_type "uint32_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      attribute 989324 "mMaxEntries"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 904972 // mCache (<directional composition>)
	relation 904972 *-->
	  stereotype "KeyedVector"
	  a role_name "mCache" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type},Patch*> ${name}${value};
"
	    classrelation_ref 904972 // mCache (<directional composition>)
	  b parent class_ref 435980 // PatchDescription
      end
    end

    class 436108 "PathCacheEntry"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "/////////////////////////////////////////////////////////////////////////////
 Classes
/////////////////////////////////////////////////////////////////////////////"
      classrelation 905100 // <generalisation>
	relation 905100 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 905100 // <generalisation>
	  b parent class_ref 436236 // ShapeCacheEntry
      end

      operation 1111436 "PathCacheEntry"
	cpp_inline public explicit_return_type ""
	nparams 2
	  param inout name "path" explicit_type "SkPath"
	  param inout name "paint" explicit_type "SkPaint"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${volatile}${throw} :
            ShapeCacheEntry(ShapeCacheEntry::kShapePath, paint) {
        this->path = path;
    };
"
	
	
	
	
      end

      operation 1111564 "PathCacheEntry"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} : ShapeCacheEntry() {
        path = NULL;
    };
"
	
	
	
	
      end

      operation 1111692 "lessThan"
	const cpp_inline public explicit_return_type "bool"
	nparams 1
	  param in name "r" type class_ref 436236 // ShapeCacheEntry
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        const PathCacheEntry& rhs = (const PathCacheEntry&) r;
        LTE_INT(path) {
            return false;
        }
        return false;
    };
"
	
	
	
	
      end

      attribute 989452 "path"
	public explicit_type "SkPath"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 436236 "ShapeCacheEntry"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " struct PathTexture
*
 * Describe a shape in the shape cache."
      class 438028 "ShapeType"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum ${name} {
${items}
};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 997644 "kShapeNone"
	  public type class_ref 438028 // ShapeType
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 997772 "kShapeRect"
	  public type class_ref 438028 // ShapeType
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 997900 "kShapeRoundRect"
	  public type class_ref 438028 // ShapeType
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 998028 "kShapeCircle"
	  public type class_ref 438028 // ShapeType
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 998156 "kShapeOval"
	  public type class_ref 438028 // ShapeType
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 998284 "kShapeArc"
	  public type class_ref 438028 // ShapeType
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 998412 "kShapePath"
	  public type class_ref 438028 // ShapeType
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      operation 1121548 "ShapeCacheEntry"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} {
        shapeType = kShapeNone;
        join = SkPaint::kDefault_Join;
        cap = SkPaint::kDefault_Cap;
        style = SkPaint::kFill_Style;
        float v = 4.0f;
        miter = *(uint32_t*) &v;
        v = 1.0f;
        strokeWidth = *(uint32_t*) &v;
        pathEffect = NULL;
    };
"
	
	
	
	
      end

      operation 1121676 "ShapeCacheEntry"
	cpp_inline public explicit_return_type ""
	nparams 2
	  param in name "type" type class_ref 438028 // ShapeType
	  param inout name "paint" explicit_type "SkPaint"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}${)}${volatile}${throw} {
        shapeType = type;
        join = paint->getStrokeJoin();
        cap = paint->getStrokeCap();
        float v = paint->getStrokeMiter();
        miter = *(uint32_t*) &v;
        v = paint->getStrokeWidth();
        strokeWidth = *(uint32_t*) &v;
        style = paint->getStyle();
        pathEffect = paint->getPathEffect();
    };
"
	
	
	
	
      end

      operation 1121804 "~ShapeCacheEntry"
	cpp_virtual cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {
    };
"
	
	
	
	
      end

      classrelation 906764 // shapeType (<directional composition>)
	relation 906764 *-->
	  a role_name "shapeType" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 906764 // shapeType (<directional composition>)
	  b parent class_ref 438028 // ShapeType
      end

      attribute 998540 "join"
	public explicit_type "SkPaint::Join"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 998668 "cap"
	public explicit_type "SkPaint::Cap"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 998796 "style"
	public explicit_type "SkPaint::Style"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 998924 "miter"
	public explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 999052 "strokeWidth"
	public explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 999180 "pathEffect"
	public explicit_type "SkPathEffect"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 1121932 "operator <"
	const cpp_inline public explicit_return_type "bool"
	nparams 1
	  param in name "rhs" type class_ref 436236 // ShapeCacheEntry
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        LTE_INT(shapeType) {
            LTE_INT(join) {
                LTE_INT(cap) {
                    LTE_INT(style) {
                        LTE_INT(miter) {
                            LTE_INT(strokeWidth) {
                                LTE_INT(pathEffect) {
                                    return lessThan(rhs);
                                }
                            }
                        }
                    }
                }
            }
        }
        return false;
    };
"
	
	
	
	
      end

      operation 1122060 "lessThan"
	const cpp_virtual cpp_inline protected explicit_return_type "bool"
	nparams 1
	  param in name "rhs" type class_ref 436236 // ShapeCacheEntry
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        return false;
    };
"
	
	
	
	
      end
    end

    class 436364 "PathCache"
      visibility package 
      nactuals 1
      actual class class_ref 436492 // ShapeCache
        rank 0 value class_ref 436108 // PathCacheEntry
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " PathCacheEntry
*
 * A simple LRU path cache. The cache has a maximum size expressed in bytes.
 * Any texture added to the cache causing the cache to grow beyond the maximum
 * allowed size will also cause the oldest texture to be kicked out."
      classrelation 905228 // <realization>
	relation 905228 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    classrelation_ref 905228 // <realization>
	  b parent class_ref 436492 // ShapeCache
      end

      operation 1111820 "PathCache"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "///////////////////////////////////////////////////////////////////////////////
// Path cache
///////////////////////////////////////////////////////////////////////////////

${inline}${class}::${name}${(}${)}: ShapeCache<PathCacheEntry>(\"path\",
        PROPERTY_PATH_CACHE_SIZE, DEFAULT_PATH_CACHE_SIZE) ${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 1111948 "get"
	preserve_cpp_body_indent public return_type class_ref 435340 // PathTexture
	nparams 2
	  param inout name "path" explicit_type "SkPath"
	  param inout name "paint" explicit_type "SkPaint"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Returns the texture associated with the specified path. If the texture
     * cannot be found in the cache, a new texture is generated."
      end

      operation 1112076 "remove"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param inout name "path" explicit_type "SkPath"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Removes an entry."
      end

      operation 1112204 "removeDeferred"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param inout name "path" explicit_type "SkPath"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Removes the specified path. This is meant to be called from threads
     * that are not the EGL context thread."
      end

      operation 1112332 "clearGarbage"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Process deferred removals."
      end

      attribute 989580 "mGarbage"
	private explicit_type "SkPath*"
	stereotype "Vector"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 905356 // mLock (<directional composition>)
	relation 905356 *-->
	  a role_name "mLock" private
	    cpp mutable default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 905356 // mLock (<directional composition>)
	  b parent class_ref 133132 // Mutex
      end
    end

    class 436492 "ShapeCache"
      visibility package 
      nformals 1
      formal name "Entry" type "typename" explicit_default_value ""
        explicit_extends ""
      nactuals 2
      actual class class_ref 407180 // OnEntryRemoved
        rank 0 explicit_value "Entry"
      actual class class_ref 407180 // OnEntryRemoved
        rank 1 explicit_value "PathTexture*"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " ArcShapeCacheEntry
*
 * A simple LRU shape cache. The cache has a maximum size expressed in bytes.
 * Any texture added to the cache causing the cache to grow beyond the maximum
 * allowed size will also cause the oldest texture to be kicked out."
      classrelation 907532 // <realization>
	relation 907532 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    classrelation_ref 907532 // <realization>
	  b parent class_ref 407180 // OnEntryRemoved
      end

      operation 1124108 "ShapeCache"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 3
	  param in name "name" explicit_type "char"
	  param in name "propertyName" explicit_type "char"
	  param in name "defaultSize" explicit_type "float"
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} * ${p0}${v0}, const ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}${)}${volatile}${throw};
"
	cpp_def "// class ArcShapeCache
///////////////////////////////////////////////////////////////////////////////
// Constructors/destructor
///////////////////////////////////////////////////////////////////////////////

${inline}${class}::${name}${(}const ${t0} * ${p0}, const ${t1} * ${p1}, ${t2} ${p2}${)}:
        mCache(GenerationCache<ShapeCacheEntry, PathTexture*>::kUnlimitedCapacity),
        mSize(0), mMaxSize(MB(defaultSize)) ${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 1124236 "~ShapeCache"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 1124364 "operator ()"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 2
	  param inout name "path" explicit_type "Entry"
	  param inout name "texture" type class_ref 435340 // PathTexture
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} * & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "///////////////////////////////////////////////////////////////////////////////
// Callbacks
///////////////////////////////////////////////////////////////////////////////

${inline}${type} ${class}::${name}${(}${t0} & ${p0}, ${t1} * & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Used as a callback when an entry is removed from the cache.
     * Do not invoke directly."
      end

      operation 1124492 "clear"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Clears the cache. This causes all textures to be deleted."
      end

      operation 1124620 "setMaxSize"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "maxSize" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Sets the maximum size of the cache in bytes."
      end

      operation 1124748 "getMaxSize"
	preserve_cpp_body_indent public explicit_return_type "uint32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Returns the maximum size of the cache in bytes."
      end

      operation 1124876 "getSize"
	preserve_cpp_body_indent public explicit_return_type "uint32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "///////////////////////////////////////////////////////////////////////////////
// Size management
///////////////////////////////////////////////////////////////////////////////

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Returns the current size of the cache in bytes."
      end

      operation 1125004 "addTexture"
	preserve_cpp_body_indent protected return_type class_ref 435340 // PathTexture
	nparams 3
	  param in name "entry" explicit_type "Entry"
	  param in name "path" explicit_type "SkPath"
	  param in name "paint" explicit_type "SkPaint"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} * ${p1}${v1}, const ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} * ${p1}, const ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1125132 "addTexture"
	protected return_type class_ref 435340 // PathTexture
	nparams 2
	  param in name "entry" explicit_type "Entry"
	  param inout name "bitmap" explicit_type "SkBitmap"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}const ${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}const ${t0} & ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1125260 "addTexture"
	preserve_cpp_body_indent protected explicit_return_type "void"
	nparams 3
	  param in name "entry" explicit_type "Entry"
	  param inout name "bitmap" explicit_type "SkBitmap"
	  param inout name "texture" type class_ref 435340 // PathTexture
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} * ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1125388 "purgeCache"
	preserve_cpp_body_indent protected explicit_return_type "void"
	nparams 2
	  param in name "width" explicit_type "uint32_t"
	  param in name "height" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Ensures there is enough space in the cache for a texture of the specified
     * dimensions."
      end

      operation 1125516 "initBitmap"
	preserve_cpp_body_indent protected explicit_return_type "void"
	nparams 3
	  param inout name "bitmap" explicit_type "SkBitmap"
	  param in name "width" explicit_type "uint32_t"
	  param in name "height" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1125644 "initPaint"
	preserve_cpp_body_indent protected explicit_return_type "void"
	nparams 1
	  param inout name "paint" explicit_type "SkPaint"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1125772 "checkTextureSize"
	preserve_cpp_body_indent protected explicit_return_type "bool"
	nparams 2
	  param in name "width" explicit_type "uint32_t"
	  param in name "height" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1125900 "get"
	cpp_inline protected return_type class_ref 435340 // PathTexture
	nparams 1
	  param in name "entry" explicit_type "Entry"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        return mCache.get(entry);
    };
"
	
	
	
	
      end

      operation 1126028 "removeTexture"
	preserve_cpp_body_indent protected explicit_return_type "void"
	nparams 1
	  param inout name "texture" type class_ref 435340 // PathTexture
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "///////////////////////////////////////////////////////////////////////////////
// Caching
///////////////////////////////////////////////////////////////////////////////

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      attribute 1001100 "mCache"
	protected explicit_type "Entry, PathTexture*"
	stereotype "GenerationCache"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1001228 "mSize"
	protected explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1001356 "mMaxSize"
	protected explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 907660 // mMaxTextureSize (<directional composition>)
	relation 907660 *-->
	  a role_name "mMaxTextureSize" protected
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 907660 // mMaxTextureSize (<directional composition>)
	  b parent class_ref 190220 // GLuint
      end

      attribute 1001484 "mName"
	protected explicit_type "char"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1001612 "mDebugEnabled"
	protected explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 1126156 "generateTexture"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 2
	  param inout name "bitmap" explicit_type "SkBitmap"
	  param inout name "texture" type class_ref 434188 // Texture
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Generates the texture from a bitmap into the specified texture structure."
      end

      operation 1126284 "init"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end
    end

    class 436620 "VertexBuffer"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      operation 1112460 "VertexBuffer"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} :
        mBuffer(0),
        mSize(0),
        mCleanupMethod(0)
    {};
"
	
	
	
	
      end

      operation 1112588 "~VertexBuffer"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {
        if (mCleanupMethod)
            mCleanupMethod(mBuffer);
    };
"
	
	
	
	
      end

      operation 1112716 "alloc"
	stereotype "template"
	cpp_inline public explicit_return_type "TYPE"
	nparams 1
	  param in name "size" explicit_type "int"
	cpp_decl "    ${comment}template<class TYPE>
  ${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        mSize = size;
        mBuffer = (void*)new TYPE[size];
        mCleanupMethod = &(cleanup<TYPE>);

        return (TYPE*)mBuffer;
    };
"
	
	
	
	
      end

      operation 1112844 "getBuffer"
	cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} { return mBuffer; };
"
	
	
	
	
      end

      operation 1112972 "getSize"
	cpp_inline public explicit_return_type "uint"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return mSize; };
"
	
	
	
	
      end

      operation 1113100 "cleanup"
	stereotype "template"
	class_operation cpp_inline private explicit_return_type "void"
	nparams 1
	  param inout name "buffer" explicit_type "void"
	cpp_decl "    ${comment}template<class TYPE>
  ${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        delete[] (TYPE*)buffer;
    };
"
	
	
	
	
      end

      attribute 989708 "mBuffer"
	private explicit_type "void"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 989836 "mSize"
	private explicit_type "uint"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 989964 "mCleanupMethod"
	private explicit_type "void (*)(void*)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}    void (*${name})(void*)${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 436748 "PathRenderer"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      operation 1113228 "computePathBounds"
	class_operation preserve_cpp_body_indent public explicit_return_type "SkRect"
	nparams 2
	  param in name "path" explicit_type "SkPath"
	  param in name "paint" explicit_type "SkPaint"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1113356 "convexPathVertices"
	class_operation preserve_cpp_body_indent public explicit_return_type "void"
	nparams 4
	  param in name "path" explicit_type "SkPath"
	  param in name "paint" explicit_type "SkPaint"
	  param in name "transform" type class_ref 434444 // mat4
	  param inout name "vertexBuffer" type class_ref 436620 // VertexBuffer
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} * ${p1}${v1}, const ${t2} * ${p2}${v2}, ${t3} & ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} * ${p1}, const ${t2} * ${p2}, ${t3} & ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1113484 "convexPathPerimeterVertices"
	class_operation preserve_cpp_body_indent private explicit_return_type "bool"
	nparams 5
	  param in name "path" explicit_type "SkPath"
	  param in name "forceClose" explicit_type "bool"
	  param in name "sqrInvScaleX" explicit_type "float"
	  param in name "sqrInvScaleY" explicit_type "float"
	  param inout name "outputVertices" explicit_type "Vector<Vertex>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} & ${p4}${v4}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} & ${p4}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1113612 "recursiveQuadraticBezierVertices"
	class_operation preserve_cpp_body_indent private explicit_return_type "void"
	nparams 9
	  param in name "ax" explicit_type "float"
	  param in name "ay" explicit_type "float"
	  param in name "bx" explicit_type "float"
	  param in name "by" explicit_type "float"
	  param in name "cx" explicit_type "float"
	  param in name "cy" explicit_type "float"
	  param in name "sqrInvScaleX" explicit_type "float"
	  param in name "sqrInvScaleY" explicit_type "float"
	  param inout name "outputVertices" explicit_type "Vector<Vertex>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} ${p5}${v5}, ${t6} ${p6}${v6}, ${t7} ${p7}${v7}, ${t8} & ${p8}${v8}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} & ${p8}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "  endpoints a & b,
  control c"
      end

      operation 1113740 "recursiveCubicBezierVertices"
	class_operation preserve_cpp_body_indent private explicit_return_type "void"
	nparams 11
	  param in name "p1x" explicit_type "float"
	  param in name "p1y" explicit_type "float"
	  param in name "c1x" explicit_type "float"
	  param in name "c1y" explicit_type "float"
	  param in name "p2x" explicit_type "float"
	  param in name "p2y" explicit_type "float"
	  param in name "c2x" explicit_type "float"
	  param in name "c2y" explicit_type "float"
	  param in name "sqrInvScaleX" explicit_type "float"
	  param in name "sqrInvScaleY" explicit_type "float"
	  param inout name "outputVertices" explicit_type "Vector<Vertex>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} ${p5}${v5}, ${t6} ${p6}${v6}, ${t7} ${p7}${v7}, ${t8} ${p8}${v8}, ${t9} ${p9}${v9}, ${t10} & ${p10}${v10}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, ${t8} ${p8}, ${t9} ${p9}, ${t10} & ${p10}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "  endpoints p1, p2
  control c1, c2"
      end
    end

    class 436876 "programid"
      visibility package stereotype "typedef" explicit_base_type "uint64_t"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "/////////////////////////////////////////////////////////////////////////////
 Types
/////////////////////////////////////////////////////////////////////////////"
    end

    class 437388 "ProgramCache"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "/////////////////////////////////////////////////////////////////////////////
 Cache
/////////////////////////////////////////////////////////////////////////////
*
 * Generates and caches program. Programs are generated based on
 * ProgramDescriptions."
      operation 1116556 "ProgramCache"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "// Clear
// Src
// Dst
// SrcOver
// DstOver
// SrcIn
// DstIn
// SrcOut
// DstOut
// SrcAtop
// DstAtop
// Xor
// Add
// Multiply
// Screen
// Overlay
// Darken
// Lighten
///////////////////////////////////////////////////////////////////////////////
// Constructors/destructors
///////////////////////////////////////////////////////////////////////////////

${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 1116684 "~ProgramCache"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 1116812 "get"
	preserve_cpp_body_indent public return_type class_ref 432140 // Program
	nparams 1
	  param in name "description" type class_ref 433292 // ProgramDescription
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1116940 "clear"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "///////////////////////////////////////////////////////////////////////////////
// Cache management
///////////////////////////////////////////////////////////////////////////////

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1117068 "generateProgram"
	preserve_cpp_body_indent private return_type class_ref 432140 // Program
	nparams 2
	  param in name "description" type class_ref 433292 // ProgramDescription
	  param in name "key" type class_ref 436876 // programid
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "///////////////////////////////////////////////////////////////////////////////
// Program generation
///////////////////////////////////////////////////////////////////////////////

${inline}${type} * ${class}::${name}${(}const ${t0} & ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1117196 "generateVertexShader"
	preserve_cpp_body_indent private return_type class_ref 131340 // String8
	nparams 1
	  param in name "description" type class_ref 433292 // ProgramDescription
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1117324 "generateFragmentShader"
	preserve_cpp_body_indent private return_type class_ref 131340 // String8
	nparams 1
	  param in name "description" type class_ref 433292 // ProgramDescription
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1117452 "generateBlend"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 3
	  param inout name "shader" type class_ref 131340 // String8
	  param in name "name" explicit_type "char"
	  param in name "mode" explicit_type "SkXfermode::Mode"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, const ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}, const ${t1} * ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1117580 "generateTextureWrap"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 3
	  param inout name "shader" type class_ref 131340 // String8
	  param in name "wrapS" type class_ref 190348 // GLenum
	  param in name "wrapT" type class_ref 190348 // GLenum
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1117708 "printLongString"
	preserve_cpp_body_indent const private explicit_return_type "void"
	nparams 1
	  param in name "shader" type class_ref 131340 // String8
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      classrelation 906380 // mCache (<directional composition>)
	relation 906380 *-->
	  stereotype "KeyedVector"
	  a role_name "mCache" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type},Program*> ${name}${value};
"
	    classrelation_ref 906380 // mCache (<directional composition>)
	  b parent class_ref 436876 // programid
      end
    end

    class 437772 "ResourceType"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}
};
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * Type of Resource being cached"
      attribute 996236 "kBitmap"
	public type class_ref 437772 // ResourceType
	cpp_decl "  ${name}${value},${comment}"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 996364 "kShader"
	public type class_ref 437772 // ResourceType
	cpp_decl "  ${name}${value},${comment}"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 996492 "kColorFilter"
	public type class_ref 437772 // ResourceType
	cpp_decl "  ${name}${value},${comment}"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 996620 "kPath"
	public type class_ref 437772 // ResourceType
	cpp_decl "  ${name}${value},${comment}"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 996748 "kLayer"
	public type class_ref 437772 // ResourceType
	cpp_decl "  ${name}${value},${comment}"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 437900 "ResourceReference"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      operation 1121164 "ResourceReference"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} { refCount = 0; recycled = false; destroyed = false;};
"
	
	
	
	
      end

      operation 1121292 "ResourceReference"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param in name "type" type class_ref 437772 // ResourceType
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}${)}${volatile}${throw} {
        refCount = 0; recycled = false; destroyed = false; resourceType = type;
    };
"
	
	
	
	
      end

      attribute 996876 "refCount"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 997004 "recycled"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 997132 "destroyed"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 906508 // resourceType (<directional composition>)
	relation 906508 *-->
	  a role_name "resourceType" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 906508 // resourceType (<directional composition>)
	  b parent class_ref 437772 // ResourceType
      end
    end

    class 438156 "RoundRectShapeCacheEntry"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " struct ShapeCacheEntry"
      classrelation 906892 // <generalisation>
	relation 906892 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 906892 // <generalisation>
	  b parent class_ref 436236 // ShapeCacheEntry
      end

      operation 1122188 "RoundRectShapeCacheEntry"
	cpp_inline public explicit_return_type ""
	nparams 5
	  param in name "width" explicit_type "float"
	  param in name "height" explicit_type "float"
	  param in name "rx" explicit_type "float"
	  param in name "ry" explicit_type "float"
	  param inout name "paint" explicit_type "SkPaint"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} * ${p4}${v4}${)}${volatile}${throw} :
            ShapeCacheEntry(ShapeCacheEntry::kShapeRoundRect, paint) {
        mWidth = *(uint32_t*) &width;
        mHeight = *(uint32_t*) &height;
        mRx = *(uint32_t*) &rx;
        mRy = *(uint32_t*) &ry;
    };
"
	
	
	
	
      end

      operation 1122316 "RoundRectShapeCacheEntry"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} : ShapeCacheEntry() {
        mWidth = 0;
        mHeight = 0;
        mRx = 0;
        mRy = 0;
    };
"
	
	
	
	
      end

      operation 1122444 "lessThan"
	const cpp_inline public explicit_return_type "bool"
	nparams 1
	  param in name "r" type class_ref 436236 // ShapeCacheEntry
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        const RoundRectShapeCacheEntry& rhs = (const RoundRectShapeCacheEntry&) r;
        LTE_INT(mWidth) {
            LTE_INT(mHeight) {
                LTE_INT(mRx) {
                    LTE_INT(mRy) {
                        return false;
                    }
                }
            }
        }
        return false;
    };
"
	
	
	
	
      end

      attribute 999308 "mWidth"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 999436 "mHeight"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 999564 "mRx"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 999692 "mRy"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 438284 "CircleShapeCacheEntry"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " RoundRectShapeCacheEntry"
      classrelation 907020 // <generalisation>
	relation 907020 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 907020 // <generalisation>
	  b parent class_ref 436236 // ShapeCacheEntry
      end

      operation 1122572 "CircleShapeCacheEntry"
	cpp_inline public explicit_return_type ""
	nparams 2
	  param in name "radius" explicit_type "float"
	  param inout name "paint" explicit_type "SkPaint"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}${)}${volatile}${throw} :
            ShapeCacheEntry(ShapeCacheEntry::kShapeCircle, paint) {
        mRadius = *(uint32_t*) &radius;
    };
"
	
	
	
	
      end

      operation 1122700 "CircleShapeCacheEntry"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} : ShapeCacheEntry() {
        mRadius = 0;
    };
"
	
	
	
	
      end

      operation 1122828 "lessThan"
	const cpp_inline public explicit_return_type "bool"
	nparams 1
	  param in name "r" type class_ref 436236 // ShapeCacheEntry
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        const CircleShapeCacheEntry& rhs = (const CircleShapeCacheEntry&) r;
        LTE_INT(mRadius) {
            return false;
        }
        return false;
    };
"
	
	
	
	
      end

      attribute 999820 "mRadius"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 438412 "OvalShapeCacheEntry"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " CircleShapeCacheEntry"
      classrelation 907148 // <generalisation>
	relation 907148 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 907148 // <generalisation>
	  b parent class_ref 436236 // ShapeCacheEntry
      end

      operation 1122956 "OvalShapeCacheEntry"
	cpp_inline public explicit_return_type ""
	nparams 3
	  param in name "width" explicit_type "float"
	  param in name "height" explicit_type "float"
	  param inout name "paint" explicit_type "SkPaint"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * ${p2}${v2}${)}${volatile}${throw} :
            ShapeCacheEntry(ShapeCacheEntry::kShapeOval, paint) {
        mWidth = *(uint32_t*) &width;
        mHeight = *(uint32_t*) &height;
    };
"
	
	
	
	
      end

      operation 1123084 "OvalShapeCacheEntry"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} : ShapeCacheEntry() {
        mWidth = mHeight = 0;
    };
"
	
	
	
	
      end

      operation 1123212 "lessThan"
	const cpp_inline public explicit_return_type "bool"
	nparams 1
	  param in name "r" type class_ref 436236 // ShapeCacheEntry
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        const OvalShapeCacheEntry& rhs = (const OvalShapeCacheEntry&) r;
        LTE_INT(mWidth) {
            LTE_INT(mHeight) {
                return false;
            }
        }
        return false;
    };
"
	
	
	
	
      end

      attribute 999948 "mWidth"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1000076 "mHeight"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 438540 "RectShapeCacheEntry"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " OvalShapeCacheEntry"
      classrelation 907276 // <generalisation>
	relation 907276 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 907276 // <generalisation>
	  b parent class_ref 436236 // ShapeCacheEntry
      end

      operation 1123340 "RectShapeCacheEntry"
	cpp_inline public explicit_return_type ""
	nparams 3
	  param in name "width" explicit_type "float"
	  param in name "height" explicit_type "float"
	  param inout name "paint" explicit_type "SkPaint"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * ${p2}${v2}${)}${volatile}${throw} :
            ShapeCacheEntry(ShapeCacheEntry::kShapeRect, paint) {
        mWidth = *(uint32_t*) &width;
        mHeight = *(uint32_t*) &height;
    };
"
	
	
	
	
      end

      operation 1123468 "RectShapeCacheEntry"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} : ShapeCacheEntry() {
        mWidth = mHeight = 0;
    };
"
	
	
	
	
      end

      operation 1123596 "lessThan"
	const cpp_inline public explicit_return_type "bool"
	nparams 1
	  param in name "r" type class_ref 436236 // ShapeCacheEntry
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        const RectShapeCacheEntry& rhs = (const RectShapeCacheEntry&) r;
        LTE_INT(mWidth) {
            LTE_INT(mHeight) {
                return false;
            }
        }
        return false;
    };
"
	
	
	
	
      end

      attribute 1000204 "mWidth"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1000332 "mHeight"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 438668 "ArcShapeCacheEntry"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " RectShapeCacheEntry"
      classrelation 907404 // <generalisation>
	relation 907404 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 907404 // <generalisation>
	  b parent class_ref 436236 // ShapeCacheEntry
      end

      operation 1123724 "ArcShapeCacheEntry"
	cpp_inline public explicit_return_type ""
	nparams 6
	  param in name "width" explicit_type "float"
	  param in name "height" explicit_type "float"
	  param in name "startAngle" explicit_type "float"
	  param in name "sweepAngle" explicit_type "float"
	  param in name "useCenter" explicit_type "bool"
	  param inout name "paint" explicit_type "SkPaint"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} * ${p5}${v5}${)}${volatile}${throw} :
            ShapeCacheEntry(ShapeCacheEntry::kShapeArc, paint) {
        mWidth = *(uint32_t*) &width;
        mHeight = *(uint32_t*) &height;
        mStartAngle = *(uint32_t*) &startAngle;
        mSweepAngle = *(uint32_t*) &sweepAngle;
        mUseCenter = useCenter ? 1 : 0;
    };
"
	
	
	
	
      end

      operation 1123852 "ArcShapeCacheEntry"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} : ShapeCacheEntry() {
        mWidth = 0;
        mHeight = 0;
        mStartAngle = 0;
        mSweepAngle = 0;
        mUseCenter = 0;
    };
"
	
	
	
	
      end

      operation 1123980 "lessThan"
	const cpp_inline public explicit_return_type "bool"
	nparams 1
	  param in name "r" type class_ref 436236 // ShapeCacheEntry
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        const ArcShapeCacheEntry& rhs = (const ArcShapeCacheEntry&) r;
        LTE_INT(mWidth) {
            LTE_INT(mHeight) {
                LTE_INT(mStartAngle) {
                    LTE_INT(mSweepAngle) {
                        LTE_INT(mUseCenter) {
                            return false;
                        }
                    }
                }
            }
        }
        return false;
    };
"
	
	
	
	
      end

      attribute 1000460 "mWidth"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1000588 "mHeight"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1000716 "mStartAngle"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1000844 "mSweepAngle"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1000972 "mUseCenter"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 438924 "RoundRectShapeCache"
      visibility package 
      nactuals 1
      actual class class_ref 436492 // ShapeCache
        rank 0 value class_ref 438156 // RoundRectShapeCacheEntry
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " class ShapeCache"
      classrelation 907788 // <realization>
	relation 907788 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    classrelation_ref 907788 // <realization>
	  b parent class_ref 436492 // ShapeCache
      end

      operation 1126412 "RoundRectShapeCache"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "///////////////////////////////////////////////////////////////////////////////
// Rounded rects
///////////////////////////////////////////////////////////////////////////////

${inline}${class}::${name}${(}${)}: ShapeCache<RoundRectShapeCacheEntry>(
        \"round rect\", PROPERTY_SHAPE_CACHE_SIZE, DEFAULT_SHAPE_CACHE_SIZE) ${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 1126540 "getRoundRect"
	preserve_cpp_body_indent public return_type class_ref 435340 // PathTexture
	nparams 5
	  param in name "width" explicit_type "float"
	  param in name "height" explicit_type "float"
	  param in name "rx" explicit_type "float"
	  param in name "ry" explicit_type "float"
	  param inout name "paint" explicit_type "SkPaint"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} * ${p4}${v4}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} * ${p4}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end
    end

    class 439052 "CircleShapeCache"
      visibility package 
      nactuals 1
      actual class class_ref 436492 // ShapeCache
        rank 0 value class_ref 438284 // CircleShapeCacheEntry
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " class RoundRectShapeCache"
      classrelation 907916 // <realization>
	relation 907916 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    classrelation_ref 907916 // <realization>
	  b parent class_ref 436492 // ShapeCache
      end

      operation 1126668 "CircleShapeCache"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "///////////////////////////////////////////////////////////////////////////////
// Circles
///////////////////////////////////////////////////////////////////////////////

${inline}${class}::${name}${(}${)}: ShapeCache<CircleShapeCacheEntry>(
        \"circle\", PROPERTY_SHAPE_CACHE_SIZE, DEFAULT_SHAPE_CACHE_SIZE) ${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 1126796 "getCircle"
	preserve_cpp_body_indent public return_type class_ref 435340 // PathTexture
	nparams 2
	  param in name "radius" explicit_type "float"
	  param inout name "paint" explicit_type "SkPaint"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end
    end

    class 439180 "OvalShapeCache"
      visibility package 
      nactuals 1
      actual class class_ref 436492 // ShapeCache
        rank 0 value class_ref 438412 // OvalShapeCacheEntry
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " class CircleShapeCache"
      classrelation 908044 // <realization>
	relation 908044 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    classrelation_ref 908044 // <realization>
	  b parent class_ref 436492 // ShapeCache
      end

      operation 1126924 "OvalShapeCache"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "///////////////////////////////////////////////////////////////////////////////
// Ovals
///////////////////////////////////////////////////////////////////////////////

${inline}${class}::${name}${(}${)}: ShapeCache<OvalShapeCacheEntry>(
        \"oval\", PROPERTY_SHAPE_CACHE_SIZE, DEFAULT_SHAPE_CACHE_SIZE) ${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 1127052 "getOval"
	preserve_cpp_body_indent public return_type class_ref 435340 // PathTexture
	nparams 3
	  param in name "width" explicit_type "float"
	  param in name "height" explicit_type "float"
	  param inout name "paint" explicit_type "SkPaint"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end
    end

    class 439308 "RectShapeCache"
      visibility package 
      nactuals 1
      actual class class_ref 436492 // ShapeCache
        rank 0 value class_ref 438540 // RectShapeCacheEntry
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " class OvalShapeCache"
      classrelation 908172 // <realization>
	relation 908172 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    classrelation_ref 908172 // <realization>
	  b parent class_ref 436492 // ShapeCache
      end

      operation 1127180 "RectShapeCache"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "///////////////////////////////////////////////////////////////////////////////
// Rects
///////////////////////////////////////////////////////////////////////////////

${inline}${class}::${name}${(}${)}: ShapeCache<RectShapeCacheEntry>(
        \"rect\", PROPERTY_SHAPE_CACHE_SIZE, DEFAULT_SHAPE_CACHE_SIZE) ${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 1127308 "getRect"
	preserve_cpp_body_indent public return_type class_ref 435340 // PathTexture
	nparams 3
	  param in name "width" explicit_type "float"
	  param in name "height" explicit_type "float"
	  param inout name "paint" explicit_type "SkPaint"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end
    end

    class 439436 "ArcShapeCache"
      visibility package 
      nactuals 1
      actual class class_ref 436492 // ShapeCache
        rank 0 value class_ref 438668 // ArcShapeCacheEntry
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " class RectShapeCache"
      classrelation 908300 // <realization>
	relation 908300 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    classrelation_ref 908300 // <realization>
	  b parent class_ref 436492 // ShapeCache
      end

      operation 1127436 "ArcShapeCache"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "///////////////////////////////////////////////////////////////////////////////
// Arcs
///////////////////////////////////////////////////////////////////////////////

${inline}${class}::${name}${(}${)}: ShapeCache<ArcShapeCacheEntry>(
        \"arc\", PROPERTY_SHAPE_CACHE_SIZE, DEFAULT_SHAPE_CACHE_SIZE) ${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 1127564 "getArc"
	preserve_cpp_body_indent public return_type class_ref 435340 // PathTexture
	nparams 6
	  param in name "width" explicit_type "float"
	  param in name "height" explicit_type "float"
	  param in name "startAngle" explicit_type "float"
	  param in name "sweepAngle" explicit_type "float"
	  param in name "useCenter" explicit_type "bool"
	  param inout name "paint" explicit_type "SkPaint"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} * ${p5}${v5}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} * ${p5}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end
    end

    class 439692 "SkiaColorMatrixFilter"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " struct SkiaColorFilter
/////////////////////////////////////////////////////////////////////////////
 Implementations
/////////////////////////////////////////////////////////////////////////////
*
 * A color filter that multiplies the source color with a matrix and adds a vector."
      classrelation 908556 // <generalisation>
	relation 908556 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 908556 // <generalisation>
	  b parent class_ref 431628 // SkiaColorFilter
      end

      operation 1128588 "SkiaColorMatrixFilter"
	preserve_cpp_body_indent public explicit_return_type "ANDROID_API"
	nparams 3
	  param inout name "skFilter" explicit_type "SkColorFilter"
	  param inout name "matrix" explicit_type "float"
	  param inout name "vector" explicit_type "float"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}${)}${volatile}${throw};
"
	cpp_def "///////////////////////////////////////////////////////////////////////////////
// Color matrix filter
///////////////////////////////////////////////////////////////////////////////

${inline}${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} * ${p2}${)}:
        SkiaColorFilter(skFilter, kColorMatrix, true), mMatrix(matrix), mVector(vector) ${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 1128716 "~SkiaColorMatrixFilter"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 1128844 "describe"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 2
	  param inout name "description" type class_ref 433292 // ProgramDescription
	  param in name "extensions" type class_ref 432268 // Extensions
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1128972 "setupProgram"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param inout name "program" type class_ref 432140 // Program
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      attribute 1002508 "mMatrix"
	private explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1002636 "mVector"
	private explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 439820 "SkiaLightingFilter"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " struct SkiaColorMatrixFilter
*
 * A color filters that multiplies the source color with a fixed value and adds
 * another fixed value. Ignores the alpha channel of both arguments."
      classrelation 908684 // <generalisation>
	relation 908684 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 908684 // <generalisation>
	  b parent class_ref 431628 // SkiaColorFilter
      end

      operation 1129100 "SkiaLightingFilter"
	preserve_cpp_body_indent public explicit_return_type "ANDROID_API"
	nparams 3
	  param inout name "skFilter" explicit_type "SkColorFilter"
	  param in name "multiply" explicit_type "int"
	  param in name "add" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${volatile}${throw};
"
	cpp_def "///////////////////////////////////////////////////////////////////////////////
// Lighting color filter
///////////////////////////////////////////////////////////////////////////////

${inline}${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}:
        SkiaColorFilter(skFilter, kLighting, true) ${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 1129228 "describe"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 2
	  param inout name "description" type class_ref 433292 // ProgramDescription
	  param in name "extensions" type class_ref 432268 // Extensions
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1129356 "setupProgram"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param inout name "program" type class_ref 432140 // Program
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end
    end

    class 439948 "SkiaBlendFilter"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " struct SkiaLightingFilter
*
 * A color filters that blends the source color with a specified destination color
 * and PorterDuff blending mode."
      classrelation 908812 // <generalisation>
	relation 908812 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 908812 // <generalisation>
	  b parent class_ref 431628 // SkiaColorFilter
      end

      operation 1129484 "SkiaBlendFilter"
	preserve_cpp_body_indent public explicit_return_type "ANDROID_API"
	nparams 3
	  param inout name "skFilter" explicit_type "SkColorFilter"
	  param in name "color" explicit_type "int"
	  param in name "mode" explicit_type "SkXfermode::Mode"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${volatile}${throw};
"
	cpp_def "///////////////////////////////////////////////////////////////////////////////
// Blend color filter
///////////////////////////////////////////////////////////////////////////////

${inline}${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}:
        SkiaColorFilter(skFilter, kBlend, true), mMode(mode) ${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 1129612 "describe"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 2
	  param inout name "description" type class_ref 433292 // ProgramDescription
	  param in name "extensions" type class_ref 432268 // Extensions
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1129740 "setupProgram"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param inout name "program" type class_ref 432140 // Program
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      attribute 1002764 "mMode"
	private explicit_type "SkXfermode::Mode"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 440204 "TextureCache"
      visibility package 
      nactuals 2
      actual class class_ref 407180 // OnEntryRemoved
        rank 0 explicit_value "SkBitmap*"
      actual class class_ref 407180 // OnEntryRemoved
        rank 1 explicit_value "Texture*"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "/////////////////////////////////////////////////////////////////////////////
 Classes
/////////////////////////////////////////////////////////////////////////////
*
 * A simple LRU texture cache. The cache has a maximum size expressed in bytes.
 * Any texture added to the cache causing the cache to grow beyond the maximum
 * allowed size will also cause the oldest texture to be kicked out."
      classrelation 913932 // <realization>
	relation 913932 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    classrelation_ref 913932 // <realization>
	  b parent class_ref 407180 // OnEntryRemoved
      end

      operation 1140492 "TextureCache"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "///////////////////////////////////////////////////////////////////////////////
// Constructors/destructor
///////////////////////////////////////////////////////////////////////////////

${inline}${class}::${name}${(}${)}:
        mCache(GenerationCache<SkBitmap*, Texture*>::kUnlimitedCapacity),
        mSize(0), mMaxSize(MB(DEFAULT_TEXTURE_CACHE_SIZE)),
        mFlushRate(DEFAULT_TEXTURE_CACHE_FLUSH_RATE) ${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 1140620 "TextureCache"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 1
	  param in name "maxByteSize" explicit_type "uint32_t"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} ${p0}${)}:
        mCache(GenerationCache<SkBitmap*, Texture*>::kUnlimitedCapacity),
        mSize(0), mMaxSize(maxByteSize) ${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 1140748 "~TextureCache"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 1140876 "operator ()"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 2
	  param inout name "bitmap" explicit_type "SkBitmap"
	  param inout name "texture" type class_ref 434188 // Texture
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * & ${p0}${v0}, ${t1} * & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "///////////////////////////////////////////////////////////////////////////////
// Callbacks
///////////////////////////////////////////////////////////////////////////////

${inline}${type} ${class}::${name}${(}${t0} * & ${p0}, ${t1} * & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Used as a callback when an entry is removed from the cache.
     * Do not invoke directly."
      end

      operation 1141004 "get"
	preserve_cpp_body_indent public return_type class_ref 434188 // Texture
	nparams 1
	  param inout name "bitmap" explicit_type "SkBitmap"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "///////////////////////////////////////////////////////////////////////////////
// Caching
///////////////////////////////////////////////////////////////////////////////

${inline}${type} * ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Returns the texture associated with the specified bitmap. If the texture
     * cannot be found in the cache, a new texture is generated."
      end

      operation 1141132 "getTransient"
	preserve_cpp_body_indent public return_type class_ref 434188 // Texture
	nparams 1
	  param inout name "bitmap" explicit_type "SkBitmap"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Returns the texture associated with the specified bitmap. The generated
     * texture is not kept in the cache. The caller must destroy the texture."
      end

      operation 1141260 "remove"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param inout name "bitmap" explicit_type "SkBitmap"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Removes the texture associated with the specified bitmap.
     * Upon remove the texture is freed."
      end

      operation 1141388 "removeDeferred"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param inout name "bitmap" explicit_type "SkBitmap"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Removes the texture associated with the specified bitmap. This is meant
     * to be called from threads that are not the EGL context thread."
      end

      operation 1141516 "clearGarbage"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Process deferred removals."
      end

      operation 1141644 "clear"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Clears the cache. This causes all textures to be deleted."
      end

      operation 1141772 "setMaxSize"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "maxSize" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Sets the maximum size of the cache in bytes."
      end

      operation 1141900 "getMaxSize"
	preserve_cpp_body_indent public explicit_return_type "uint32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Returns the maximum size of the cache in bytes."
      end

      operation 1142028 "getSize"
	preserve_cpp_body_indent public explicit_return_type "uint32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "///////////////////////////////////////////////////////////////////////////////
// Size management
///////////////////////////////////////////////////////////////////////////////

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Returns the current size of the cache in bytes."
      end

      operation 1142156 "flush"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Partially flushes the cache. The amount of memory freed by a flush
     * is defined by the flush rate."
      end

      operation 1142284 "setFlushRate"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "flushRate" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Indicates the percentage of the cache to retain when a
     * memory trim is requested (see Caches::flush)."
      end

      operation 1142412 "generateTexture"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 3
	  param inout name "bitmap" explicit_type "SkBitmap"
	  param inout name "texture" type class_ref 434188 // Texture
	  param in name "regenerate" explicit_type "bool"
	    defaultvalue "false"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Generates the texture from a bitmap into the specified texture structure.
     *
     * @param regenerate If true, the bitmap data is reuploaded into the texture, but
     *        no new texture is generated."
      end

      operation 1142540 "uploadLoFiTexture"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 4
	  param in name "resize" explicit_type "bool"
	  param inout name "bitmap" explicit_type "SkBitmap"
	  param in name "width" explicit_type "uint32_t"
	  param in name "height" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1142668 "uploadToTexture"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 6
	  param in name "resize" explicit_type "bool"
	  param in name "format" type class_ref 190348 // GLenum
	  param in name "width" type class_ref 434828 // GLsizei
	  param in name "height" type class_ref 434828 // GLsizei
	  param in name "type" type class_ref 190348 // GLenum
	  param in name "data" type class_ref 435468 // GLvoid
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, const ${t5} * ${p5}${v5}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, const ${t5} * ${p5}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1142796 "init"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      classrelation 914060 // mCache (<unidirectional association>)
	relation 914060 --->
	  stereotype "GenerationCache"
	  a role_name "mCache" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<SkBitmap*,${type}*> ${name}${value};
"
	    classrelation_ref 914060 // mCache (<unidirectional association>)
	  b parent class_ref 434188 // Texture
      end

      attribute 1010316 "mSize"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1010444 "mMaxSize"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 914188 // mMaxTextureSize (<directional composition>)
	relation 914188 *-->
	  a role_name "mMaxTextureSize" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 914188 // mMaxTextureSize (<directional composition>)
	  b parent class_ref 191116 // GLint
      end

      attribute 1010572 "mFlushRate"
	private explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1010700 "mDebugEnabled"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1010828 "mGarbage"
	private explicit_type "SkBitmap*"
	stereotype "Vector"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 914316 // mLock (<directional composition>)
	relation 914316 *-->
	  a role_name "mLock" private
	    cpp mutable default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 914316 // mLock (<directional composition>)
	  b parent class_ref 133132 // Mutex
      end
    end

    class 440332 "SkiaBitmapShader"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " struct SkiaShader
/////////////////////////////////////////////////////////////////////////////
 Implementations
/////////////////////////////////////////////////////////////////////////////
*
 * A shader that draws a bitmap."
      classrelation 909580 // <generalisation>
	relation 909580 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 909580 // <generalisation>
	  b parent class_ref 431500 // SkiaShader
      end

      operation 1131916 "SkiaBitmapShader"
	preserve_cpp_body_indent public explicit_return_type "ANDROID_API"
	nparams 6
	  param inout name "bitmap" explicit_type "SkBitmap"
	  param inout name "key" explicit_type "SkShader"
	  param in name "tileX" explicit_type "SkShader::TileMode"
	  param in name "tileY" explicit_type "SkShader::TileMode"
	  param inout name "matrix" explicit_type "SkMatrix"
	  param in name "blend" explicit_type "bool"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} * ${p4}${v4}, ${t5} ${p5}${v5}${)}${volatile}${throw};
"
	cpp_def "///////////////////////////////////////////////////////////////////////////////
// Bitmap shader
///////////////////////////////////////////////////////////////////////////////

${inline}${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} * ${p4}, ${t5} ${p5}${)}:
        SkiaShader(kBitmap, key, tileX, tileY, matrix, blend), mBitmap(bitmap), mTexture(NULL) ${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 1132044 "copy"
	preserve_cpp_body_indent public return_type class_ref 431500 // SkiaShader
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1132172 "describe"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 2
	  param inout name "description" type class_ref 433292 // ProgramDescription
	  param in name "extensions" type class_ref 432268 // Extensions
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1132300 "setupProgram"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 4
	  param inout name "program" type class_ref 432140 // Program
	  param in name "modelView" type class_ref 434444 // mat4
	  param in name "snapshot" type class_ref 435596 // Snapshot
	  param inout name "textureUnit" type class_ref 190220 // GLuint
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, const ${t1} & ${p1}${v1}, const ${t2} & ${p2}${v2}, ${t3} * ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, const ${t1} & ${p1}, const ${t2} & ${p2}, ${t3} * ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1132428 "SkiaBitmapShader"
	cpp_inline private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} {
    };
"
	
	
	
	
      end

      attribute 1004300 "mBitmap"
	private explicit_type "SkBitmap"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 909708 // mTexture (<unidirectional association>)
	relation 909708 --->
	  a role_name "mTexture" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 909708 // mTexture (<unidirectional association>)
	  b parent class_ref 434188 // Texture
      end

      classrelation 909836 // mWrapS (<directional composition>)
	relation 909836 *-->
	  a role_name "mWrapS" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 909836 // mWrapS (<directional composition>)
	  b parent class_ref 190348 // GLenum
      end

      classrelation 909964 // mWrapT (<directional composition>)
	relation 909964 *-->
	  a role_name "mWrapT" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 909964 // mWrapT (<directional composition>)
	  b parent class_ref 190348 // GLenum
      end
    end

    class 440460 "SkiaLinearGradientShader"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " struct SkiaBitmapShader
*
 * A shader that draws a linear gradient."
      classrelation 910092 // <generalisation>
	relation 910092 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 910092 // <generalisation>
	  b parent class_ref 431500 // SkiaShader
      end

      operation 1132556 "SkiaLinearGradientShader"
	preserve_cpp_body_indent public explicit_return_type "ANDROID_API"
	nparams 8
	  param inout name "bounds" explicit_type "float"
	  param inout name "colors" explicit_type "uint32_t"
	  param inout name "positions" explicit_type "float"
	  param in name "count" explicit_type "int"
	  param inout name "key" explicit_type "SkShader"
	  param in name "tileMode" explicit_type "SkShader::TileMode"
	  param inout name "matrix" explicit_type "SkMatrix"
	  param in name "blend" explicit_type "bool"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} * ${p4}${v4}, ${t5} ${p5}${v5}, ${t6} * ${p6}${v6}, ${t7} ${p7}${v7}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} * ${p2}, ${t3} ${p3}, ${t4} * ${p4}, ${t5} ${p5}, ${t6} * ${p6}, ${t7} ${p7}${)}:
        SkiaShader(kLinearGradient, key, tileMode, tileMode, matrix, blend),
        mBounds(bounds), mColors(colors), mPositions(positions), mCount(count) ${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 1132684 "~SkiaLinearGradientShader"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 1132812 "copy"
	preserve_cpp_body_indent public return_type class_ref 431500 // SkiaShader
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1132940 "describe"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 2
	  param inout name "description" type class_ref 433292 // ProgramDescription
	  param in name "extensions" type class_ref 432268 // Extensions
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1133068 "setupProgram"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 4
	  param inout name "program" type class_ref 432140 // Program
	  param in name "modelView" type class_ref 434444 // mat4
	  param in name "snapshot" type class_ref 435596 // Snapshot
	  param inout name "textureUnit" type class_ref 190220 // GLuint
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, const ${t1} & ${p1}${v1}, const ${t2} & ${p2}${v2}, ${t3} * ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, const ${t1} & ${p1}, const ${t2} & ${p2}, ${t3} * ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1133196 "SkiaLinearGradientShader"
	cpp_inline private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} {
    };
"
	
	
	
	
      end

      attribute 1004428 "mIsSimple"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1004556 "mBounds"
	private explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1004684 "mColors"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1004812 "mPositions"
	private explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1004940 "mCount"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 440588 "SkiaSweepGradientShader"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " struct SkiaLinearGradientShader
*
 * A shader that draws a sweep gradient."
      classrelation 910220 // <generalisation>
	relation 910220 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 910220 // <generalisation>
	  b parent class_ref 431500 // SkiaShader
      end

      operation 1133324 "SkiaSweepGradientShader"
	preserve_cpp_body_indent public explicit_return_type "ANDROID_API"
	nparams 8
	  param in name "x" explicit_type "float"
	  param in name "y" explicit_type "float"
	  param inout name "colors" explicit_type "uint32_t"
	  param inout name "positions" explicit_type "float"
	  param in name "count" explicit_type "int"
	  param inout name "key" explicit_type "SkShader"
	  param inout name "matrix" explicit_type "SkMatrix"
	  param in name "blend" explicit_type "bool"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * ${p2}${v2}, ${t3} * ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} * ${p5}${v5}, ${t6} * ${p6}${v6}, ${t7} ${p7}${v7}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} * ${p2}, ${t3} * ${p3}, ${t4} ${p4}, ${t5} * ${p5}, ${t6} * ${p6}, ${t7} ${p7}${)}:
        SkiaShader(kSweepGradient, key, SkShader::kClamp_TileMode,
                SkShader::kClamp_TileMode, matrix, blend),
        mColors(colors), mPositions(positions), mCount(count) ${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 1133452 "~SkiaSweepGradientShader"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 1133580 "copy"
	preserve_cpp_body_indent public return_type class_ref 431500 // SkiaShader
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1133708 "describe"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 2
	  param inout name "description" type class_ref 433292 // ProgramDescription
	  param in name "extensions" type class_ref 432268 // Extensions
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1133836 "setupProgram"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 4
	  param inout name "program" type class_ref 432140 // Program
	  param in name "modelView" type class_ref 434444 // mat4
	  param in name "snapshot" type class_ref 435596 // Snapshot
	  param inout name "textureUnit" type class_ref 190220 // GLuint
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, const ${t1} & ${p1}${v1}, const ${t2} & ${p2}${v2}, ${t3} * ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, const ${t1} & ${p1}, const ${t2} & ${p2}, ${t3} * ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1133964 "SkiaSweepGradientShader"
	preserve_cpp_body_indent protected explicit_return_type ""
	nparams 10
	  param in name "type" type class_ref 440716 // Type
	  param in name "x" explicit_type "float"
	  param in name "y" explicit_type "float"
	  param inout name "colors" explicit_type "uint32_t"
	  param inout name "positions" explicit_type "float"
	  param in name "count" explicit_type "int"
	  param inout name "key" explicit_type "SkShader"
	  param in name "tileMode" explicit_type "SkShader::TileMode"
	  param inout name "matrix" explicit_type "SkMatrix"
	  param in name "blend" explicit_type "bool"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} * ${p3}${v3}, ${t4} * ${p4}${v4}, ${t5} ${p5}${v5}, ${t6} * ${p6}${v6}, ${t7} ${p7}${v7}, ${t8} * ${p8}${v8}, ${t9} ${p9}${v9}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} * ${p3}, ${t4} * ${p4}, ${t5} ${p5}, ${t6} * ${p6}, ${t7} ${p7}, ${t8} * ${p8}, ${t9} ${p9}${)}:
        SkiaShader(type, key, tileMode, tileMode, matrix, blend),
        mColors(colors), mPositions(positions), mCount(count) ${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 1134092 "SkiaSweepGradientShader"
	cpp_inline protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} {
    };
"
	
	
	
	
      end

      attribute 1005068 "mIsSimple"
	protected explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1005196 "mColors"
	protected explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1005324 "mPositions"
	protected explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1005452 "mCount"
	protected explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 440844 "SkiaCircularGradientShader"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " struct SkiaSweepGradientShader
*
 * A shader that draws a circular gradient."
      classrelation 910348 // <generalisation>
	relation 910348 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 910348 // <generalisation>
	  b parent class_ref 440588 // SkiaSweepGradientShader
      end

      operation 1134220 "SkiaCircularGradientShader"
	preserve_cpp_body_indent public explicit_return_type "ANDROID_API"
	nparams 10
	  param in name "x" explicit_type "float"
	  param in name "y" explicit_type "float"
	  param in name "radius" explicit_type "float"
	  param inout name "colors" explicit_type "uint32_t"
	  param inout name "positions" explicit_type "float"
	  param in name "count" explicit_type "int"
	  param inout name "key" explicit_type "SkShader"
	  param in name "tileMode" explicit_type "SkShader::TileMode"
	  param inout name "matrix" explicit_type "SkMatrix"
	  param in name "blend" explicit_type "bool"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} * ${p3}${v3}, ${t4} * ${p4}${v4}, ${t5} ${p5}${v5}, ${t6} * ${p6}${v6}, ${t7} ${p7}${v7}, ${t8} * ${p8}${v8}, ${t9} ${p9}${v9}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} * ${p3}, ${t4} * ${p4}, ${t5} ${p5}, ${t6} * ${p6}, ${t7} ${p7}, ${t8} * ${p8}, ${t9} ${p9}${)}:
        SkiaSweepGradientShader(kCircularGradient, x, y, colors, positions, count, key,
                tileMode, matrix, blend) ${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 1134348 "copy"
	preserve_cpp_body_indent public return_type class_ref 431500 // SkiaShader
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1134476 "describe"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 2
	  param inout name "description" type class_ref 433292 // ProgramDescription
	  param in name "extensions" type class_ref 432268 // Extensions
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1134604 "SkiaCircularGradientShader"
	cpp_inline private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} {
    };
"
	
	
	
	
      end
    end

    class 440972 "SkiaComposeShader"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " struct SkiaCircularGradientShader
*
 * A shader that draws two shaders, composited with an xfermode."
      classrelation 910476 // <generalisation>
	relation 910476 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 910476 // <generalisation>
	  b parent class_ref 431500 // SkiaShader
      end

      operation 1134732 "SkiaComposeShader"
	preserve_cpp_body_indent public explicit_return_type "ANDROID_API"
	nparams 4
	  param inout name "first" type class_ref 431500 // SkiaShader
	  param inout name "second" type class_ref 431500 // SkiaShader
	  param in name "mode" explicit_type "SkXfermode::Mode"
	  param inout name "key" explicit_type "SkShader"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} * ${p3}${v3}${)}${volatile}${throw};
"
	cpp_def "///////////////////////////////////////////////////////////////////////////////
// Compose shader
///////////////////////////////////////////////////////////////////////////////

${inline}${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} ${p2}, ${t3} * ${p3}${)}:
        SkiaShader(kCompose, key, SkShader::kClamp_TileMode, SkShader::kClamp_TileMode,
        NULL, first->blend() || second->blend()),
        mFirst(first), mSecond(second), mMode(mode), mCleanup(false) ${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 1134860 "~SkiaComposeShader"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 1134988 "copy"
	preserve_cpp_body_indent public return_type class_ref 431500 // SkiaShader
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1135116 "set"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 2
	  param inout name "textureCache" type class_ref 440204 // TextureCache
	  param inout name "gradientCache" type class_ref 434060 // GradientCache
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1135244 "describe"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 2
	  param inout name "description" type class_ref 433292 // ProgramDescription
	  param in name "extensions" type class_ref 432268 // Extensions
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1135372 "setupProgram"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 4
	  param inout name "program" type class_ref 432140 // Program
	  param in name "modelView" type class_ref 434444 // mat4
	  param in name "snapshot" type class_ref 435596 // Snapshot
	  param inout name "textureUnit" type class_ref 190220 // GLuint
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, const ${t1} & ${p1}${v1}, const ${t2} & ${p2}${v2}, ${t3} * ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, const ${t1} & ${p1}, const ${t2} & ${p2}, ${t3} * ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1135500 "SkiaComposeShader"
	cpp_inline private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} : mCleanup(false) {
    };
"
	
	
	
	
      end

      operation 1135628 "cleanup"
	cpp_inline private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        mCleanup = true;
    };
"
	
	
	
	
      end

      classrelation 910604 // mFirst (<unidirectional association>)
	relation 910604 --->
	  a role_name "mFirst" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 910604 // mFirst (<unidirectional association>)
	  b parent class_ref 431500 // SkiaShader
      end

      classrelation 910732 // mSecond (<unidirectional association>)
	relation 910732 --->
	  a role_name "mSecond" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 910732 // mSecond (<unidirectional association>)
	  b parent class_ref 431500 // SkiaShader
      end

      attribute 1005580 "mMode"
	private explicit_type "SkXfermode::Mode"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1005708 "mCleanup"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 441356 "ShadowText"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      operation 1137420 "ShadowText"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} : radius(0), len(0), textSize(0.0f), typeface(NULL) {
    };
"
	
	
	
	
      end

      operation 1137548 "ShadowText"
	cpp_inline public explicit_return_type ""
	nparams 5
	  param inout name "paint" explicit_type "SkPaint"
	  param in name "radius" explicit_type "uint32_t"
	  param in name "len" explicit_type "uint32_t"
	  param in name "srcText" explicit_type "char"
	  param in name "positions" explicit_type "float"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, const ${t3} * ${p3}${v3}, const ${t4} * ${p4}${v4}${)}${volatile}${throw} :
            radius(radius), len(len), positions(positions) {
        // TODO: Propagate this through the API, we should not cast here
        text = (const char16_t*) srcText;

        textSize = paint->getTextSize();
        typeface = paint->getTypeface();

        flags = 0;
        if (paint->isFakeBoldText()) {
            flags |= Font::kFakeBold;
        }

        const float skewX = paint->getTextSkewX();
        italicStyle = *(uint32_t*) &skewX;

        const float scaleXFloat = paint->getTextScaleX();
        scaleX = *(uint32_t*) &scaleXFloat;
    };
"
	
	
	
	
      end

      operation 1137676 "~ShadowText"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {
    };
"
	
	
	
	
      end

      attribute 1007372 "radius"
	public explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1007500 "len"
	public explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1007628 "textSize"
	public explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1007756 "typeface"
	public explicit_type "SkTypeface"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1007884 "flags"
	public explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1008012 "italicStyle"
	public explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1008140 "scaleX"
	public explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 912396 // text (<unidirectional association>)
	relation 912396 --->
	  a role_name "text" const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 912396 // text (<unidirectional association>)
	  b parent class_ref 419724 // char16_t
      end

      attribute 1008268 "positions"
	const_attribute public explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 912524 // str (<directional composition>)
	relation 912524 *-->
	  a role_name "str" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 912524 // str (<directional composition>)
	  b parent class_ref 142988 // String16
      end

      attribute 1008396 "positionsCopy"
	public explicit_type "float"
	stereotype "Vector"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 1137804 "copyTextLocally"
	cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        str.setTo((const char16_t*) text, len >> 1);
        text = str.string();
        if (positions != NULL) {
            positionsCopy.clear();
            positionsCopy.appendArray(positions, len);
            positions = positionsCopy.array();
        }
    };
"
	
	
	
	
      end

      operation 1137932 "operator <"
	const cpp_inline public explicit_return_type "bool"
	nparams 1
	  param in name "rhs" type class_ref 441356 // ShadowText
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        LTE_INT(len) {
            LTE_INT(radius) {
                LTE_FLOAT(textSize) {
                    LTE_INT(typeface) {
                        LTE_INT(flags) {
                            LTE_INT(italicStyle) {
                                LTE_INT(scaleX) {
                                    int cmp = memcmp(text, rhs.text, len);
                                    if (cmp < 0) return true;
                                    if (cmp == 0 && rhs.positions != NULL) {
                                        if (positions == NULL) return true;
                                        return memcmp(positions, rhs.positions, len << 2) < 0;
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        return false;
    };
"
	
	
	
	
      end
    end

    class 441484 "ShadowTexture"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " struct ShadowText
*
 * Alpha texture used to represent a shadow."
      classrelation 912652 // <generalisation>
	relation 912652 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 912652 // <generalisation>
	  b parent class_ref 434188 // Texture
      end

      operation 1138060 "ShadowTexture"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} : Texture() {
    };
"
	
	
	
	
      end

      attribute 1008524 "left"
	public explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1008652 "top"
	public explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 441612 "TextDropShadowCache"
      visibility package 
      nactuals 2
      actual class class_ref 407180 // OnEntryRemoved
        rank 0 value class_ref 441356 // ShadowText
      actual class class_ref 407180 // OnEntryRemoved
        rank 1 explicit_value "ShadowTexture*"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " struct ShadowTexture"
      classrelation 912780 // <realization>
	relation 912780 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    classrelation_ref 912780 // <realization>
	  b parent class_ref 407180 // OnEntryRemoved
      end

      operation 1138188 "TextDropShadowCache"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "///////////////////////////////////////////////////////////////////////////////
// Constructors/destructor
///////////////////////////////////////////////////////////////////////////////

${inline}${class}::${name}${(}${)}:
        mCache(GenerationCache<ShadowText, ShadowTexture*>::kUnlimitedCapacity),
        mSize(0), mMaxSize(MB(DEFAULT_DROP_SHADOW_CACHE_SIZE)) ${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 1138316 "TextDropShadowCache"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 1
	  param in name "maxByteSize" explicit_type "uint32_t"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} ${p0}${)}:
        mCache(GenerationCache<ShadowText, ShadowTexture*>::kUnlimitedCapacity),
        mSize(0), mMaxSize(maxByteSize) ${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 1138444 "~TextDropShadowCache"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 1138572 "operator ()"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 2
	  param inout name "text" type class_ref 441356 // ShadowText
	  param inout name "texture" type class_ref 441484 // ShadowTexture
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} * & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "///////////////////////////////////////////////////////////////////////////////
// Callbacks
///////////////////////////////////////////////////////////////////////////////

${inline}${type} ${class}::${name}${(}${t0} & ${p0}, ${t1} * & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Used as a callback when an entry is removed from the cache.
     * Do not invoke directly."
      end

      operation 1138700 "get"
	preserve_cpp_body_indent public return_type class_ref 441484 // ShadowTexture
	nparams 6
	  param inout name "paint" explicit_type "SkPaint"
	  param in name "text" explicit_type "char"
	  param in name "len" explicit_type "uint32_t"
	  param in name "numGlyphs" explicit_type "int"
	  param in name "radius" explicit_type "uint32_t"
	  param in name "positions" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} * ${p0}${v0}, const ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, const ${t5} * ${p5}${v5}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${t0} * ${p0}, const ${t1} * ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, const ${t5} * ${p5}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 1138828 "clear"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "///////////////////////////////////////////////////////////////////////////////
// Caching
///////////////////////////////////////////////////////////////////////////////

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Clears the cache. This causes all textures to be deleted."
      end

      operation 1138956 "setFontRenderer"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "fontRenderer" type class_ref 432524 // FontRenderer
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        mRenderer = &fontRenderer;
    };
"
	
	
	
	
      end

      operation 1139084 "setMaxSize"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "maxSize" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Sets the maximum size of the cache in bytes."
      end

      operation 1139212 "getMaxSize"
	preserve_cpp_body_indent public explicit_return_type "uint32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Returns the maximum size of the cache in bytes."
      end

      operation 1139340 "getSize"
	preserve_cpp_body_indent public explicit_return_type "uint32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "///////////////////////////////////////////////////////////////////////////////
// Size management
///////////////////////////////////////////////////////////////////////////////

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Returns the current size of the cache in bytes."
      end

      operation 1139468 "init"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      classrelation 912908 // mCache (<directional composition>)
	relation 912908 *-->
	  stereotype "GenerationCache"
	  a role_name "mCache" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type},ShadowTexture*> ${name}${value};
"
	    classrelation_ref 912908 // mCache (<directional composition>)
	  b parent class_ref 441356 // ShadowText
      end

      attribute 1008780 "mSize"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1008908 "mMaxSize"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 913036 // mRenderer (<unidirectional association>)
	relation 913036 --->
	  a role_name "mRenderer" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 913036 // mRenderer (<unidirectional association>)
	  b parent class_ref 432524 // FontRenderer
      end

      attribute 1009036 "mDebugEnabled"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 441740 "AutoTexture"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " struct Texture"
      operation 1140236 "AutoTexture"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param in name "texture" type class_ref 434188 // Texture
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} * ${p0}${v0}${)}${volatile}${throw} : mTexture(texture) { };
"
	
	
	
	
      end

      operation 1140364 "~AutoTexture"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {
        if (mTexture && mTexture->cleanup) {
            glDeleteTextures(1, &mTexture->id);
            delete mTexture;
        }
    };
"
	
	
	
	
      end

      classrelation 913804 // mTexture (<unidirectional association>)
	relation 913804 --->
	  a role_name "mTexture" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 913804 // mTexture (<unidirectional association>)
	  b parent class_ref 434188 // Texture
      end
    end

    class 441868 "Vector2"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "/////////////////////////////////////////////////////////////////////////////
 Classes
/////////////////////////////////////////////////////////////////////////////"
      attribute 1010956 "x"
	public explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1011084 "y"
	public explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 1142924 "Vector2"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} :
        x(0.0f), y(0.0f) {
    };
"
	
	
	
	
      end

      operation 1143052 "Vector2"
	cpp_inline public explicit_return_type ""
	nparams 2
	  param in name "px" explicit_type "float"
	  param in name "py" explicit_type "float"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${volatile}${throw} :
        x(px), y(py) {
    };
"
	
	
	
	
      end

      operation 1143180 "length"
	const cpp_inline public explicit_return_type "float"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return sqrt(x * x + y * y);
    };
"
	
	
	
	
      end

      operation 1143308 "operator +="
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "v" type class_ref 441868 // Vector2
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        x += v.x;
        y += v.y;
    };
"
	
	
	
	
      end

      operation 1143436 "operator -="
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "v" type class_ref 441868 // Vector2
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        x -= v.x;
        y -= v.y;
    };
"
	
	
	
	
      end

      operation 1143564 "operator +="
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "v" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        x += v;
        y += v;
    };
"
	
	
	
	
      end

      operation 1143692 "operator -="
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "v" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        x -= v;
        y -= v;
    };
"
	
	
	
	
      end

      operation 1143820 "operator /="
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "s" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        x /= s;
        y /= s;
    };
"
	
	
	
	
      end

      operation 1143948 "operator *="
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "s" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        x *= s;
        y *= s;
    };
"
	
	
	
	
      end

      operation 1144076 "operator +"
	const cpp_inline public return_type class_ref 441868 // Vector2
	nparams 1
	  param in name "v" type class_ref 441868 // Vector2
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        return Vector2(x + v.x, y + v.y);
    };
"
	
	
	
	
      end

      operation 1144204 "operator -"
	const cpp_inline public return_type class_ref 441868 // Vector2
	nparams 1
	  param in name "v" type class_ref 441868 // Vector2
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        return Vector2(x - v.x, y - v.y);
    };
"
	
	
	
	
      end

      operation 1144332 "operator /"
	const cpp_inline public return_type class_ref 441868 // Vector2
	nparams 1
	  param in name "s" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        return Vector2(x / s, y / s);
    };
"
	
	
	
	
      end

      operation 1144460 "operator *"
	const cpp_inline public return_type class_ref 441868 // Vector2
	nparams 1
	  param in name "s" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        return Vector2(x * s, y * s);
    };
"
	
	
	
	
      end

      operation 1144588 "normalize"
	cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        float s = 1.0f / length();
        x *= s;
        y *= s;
    };
"
	
	
	
	
      end

      operation 1144716 "copyNormalized"
	const cpp_inline public return_type class_ref 441868 // Vector2
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        Vector2 v(x, y);
        v.normalize();
        return v;
    };
"
	
	
	
	
      end

      operation 1144844 "dot"
	const cpp_inline public explicit_return_type "float"
	nparams 1
	  param in name "v" type class_ref 441868 // Vector2
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        return x * v.x + y * v.y;
    };
"
	
	
	
	
      end

      operation 1144972 "dump"
	cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        ALOGD(\"Vector2[%.2f, %.2f]\", x, y);
    };
"
	
	
	
	
      end
    end

    class 441996 "vec2"
      visibility package stereotype "typedef" base_type class_ref 441868 // Vector2
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " class Vector2
/////////////////////////////////////////////////////////////////////////////
 Types
/////////////////////////////////////////////////////////////////////////////"
      classrelation 914444 // <dependency>
	relation 914444 -_->
	  a default
	    cpp default "#include in source"
	    classrelation_ref 914444 // <dependency>
	  b parent class_ref 441868 // Vector2
      end
    end

    class 442124 "Vertex"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * Simple structure to describe a vertex with a position and a texture."
      attribute 1011212 "position"
	public explicit_type "float"
	multiplicity "[2]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 1145100 "set"
	class_operation cpp_inline public explicit_return_type "void"
	nparams 3
	  param inout name "vertex" type class_ref 442124 // Vertex
	  param in name "x" explicit_type "float"
	  param in name "y" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract} {
        vertex[0].position[0] = x;
        vertex[0].position[1] = y;
    };
"
	
	
	
	
      end
    end

    class 442252 "AlphaVertex"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " struct TextureVertex
*
 * Simple structure to describe a vertex with a position and an alpha value."
      classrelation 914572 // <generalisation>
	relation 914572 ---|>
	  a private
	    cpp default "${type}"
	    classrelation_ref 914572 // <generalisation>
	  b parent class_ref 442124 // Vertex
      end

      attribute 1011596 "alpha"
	public explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 1145484 "set"
	class_operation cpp_inline public explicit_return_type "void"
	nparams 4
	  param inout name "vertex" type class_ref 442252 // AlphaVertex
	  param in name "x" explicit_type "float"
	  param in name "y" explicit_type "float"
	  param in name "alpha" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract} {
        Vertex::set(vertex, x, y);
        vertex[0].alpha = alpha;
    };
"
	
	
	
	
      end

      operation 1145612 "setColor"
	class_operation cpp_inline public explicit_return_type "void"
	nparams 2
	  param inout name "vertex" type class_ref 442252 // AlphaVertex
	  param in name "alpha" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        vertex[0].alpha = alpha;
    };
"
	
	
	
	
      end
    end

    class 442380 "AAVertex"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " struct AlphaVertex
*
 * Simple structure to describe a vertex with a position and an alpha value."
      classrelation 914700 // <generalisation>
	relation 914700 ---|>
	  a private
	    cpp default "${type}"
	    classrelation_ref 914700 // <generalisation>
	  b parent class_ref 442124 // Vertex
      end

      attribute 1011724 "width"
	public explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1011852 "length"
	public explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 1145740 "set"
	class_operation cpp_inline public explicit_return_type "void"
	nparams 5
	  param inout name "vertex" type class_ref 442380 // AAVertex
	  param in name "x" explicit_type "float"
	  param in name "y" explicit_type "float"
	  param in name "width" explicit_type "float"
	  param in name "length" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}${)}${const}${volatile}${throw}${abstract} {
        Vertex::set(vertex, x, y);
        vertex[0].width = width;
        vertex[0].length = length;
    };
"
	
	
	
	
      end

      operation 1145868 "setColor"
	class_operation cpp_inline public explicit_return_type "void"
	nparams 3
	  param inout name "vertex" type class_ref 442380 // AAVertex
	  param in name "width" explicit_type "float"
	  param in name "length" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract} {
        vertex[0].width = width;
        vertex[0].length = length;
    };
"
	
	
	
	
      end
    end

    class 647180 "Blender"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "/////////////////////////////////////////////////////////////////////////////
 Globals
/////////////////////////////////////////////////////////////////////////////
*
 * Structure mapping Skia xfermodes to OpenGL blending factors."
      attribute 1733260 "mode"
	public explicit_type "SkXfermode::Mode"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 1351564 // src (<directional composition>)
	relation 1351564 *-->
	  a role_name "src" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 1351564 // src (<directional composition>)
	  b parent class_ref 190348 // GLenum
      end

      classrelation 1351692 // dst (<directional composition>)
	relation 1351692 *-->
	  a role_name "dst" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 1351692 // dst (<directional composition>)
	  b parent class_ref 190348 // GLenum
      end
    end

    class 3699852 "mergeid_t"
      visibility package stereotype "typedef" explicit_base_type "void"
      cpp_decl "${comment}typedef ${type}*  ${name};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
    end

    class 3699980 "DeferredDisplayList"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      operation 15680780 "DeferredDisplayList"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} { clear(); };
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 15680908 "~DeferredDisplayList"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} { clear(); };
"
	
	
	
	
      end

      class 3700108 "OpBatchId"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum ${name} {
${items}
};
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 13217548 "kOpBatch_None"
	  public type class_ref 3700108 // OpBatchId
	  init_value " 0"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 13217676 "kOpBatch_Bitmap"
	  public type class_ref 3700108 // OpBatchId
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 13217804 "kOpBatch_Patch"
	  public type class_ref 3700108 // OpBatchId
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 13217932 "kOpBatch_AlphaVertices"
	  public type class_ref 3700108 // OpBatchId
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 13218060 "kOpBatch_Vertices"
	  public type class_ref 3700108 // OpBatchId
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 13218188 "kOpBatch_AlphaMaskTexture"
	  public type class_ref 3700108 // OpBatchId
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 13218316 "kOpBatch_Text"
	  public type class_ref 3700108 // OpBatchId
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 13218444 "kOpBatch_ColorText"
	  public type class_ref 3700108 // OpBatchId
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 13218572 "kOpBatch_Count"
	  public type class_ref 3700108 // OpBatchId
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      operation 15681036 "isEmpty"
	cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return mBatches.isEmpty(); };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15681164 "flush"
	public explicit_return_type "status_t"
	nparams 2
	  param inout name "renderer" type class_ref 431116 // OpenGLRenderer
	  param inout name "dirty" type class_ref 431244 // Rect
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}, ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "*
     * Plays back all of the draw ops recorded into batches to the renderer.
     * Adjusts the state of the renderer as necessary, and restores it when complete"
      end

      operation 15681292 "addClip"
	public explicit_return_type "void"
	nparams 2
	  param inout name "renderer" type class_ref 431116 // OpenGLRenderer
	  param inout name "op" type class_ref 3700236 // ClipOp
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15681420 "addSaveLayer"
	public explicit_return_type "void"
	nparams 3
	  param inout name "renderer" type class_ref 431116 // OpenGLRenderer
	  param inout name "op" type class_ref 3700364 // SaveLayerOp
	  param in name "newSaveCount" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}, ${t1} * ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15681548 "addSave"
	public explicit_return_type "void"
	nparams 3
	  param inout name "renderer" type class_ref 431116 // OpenGLRenderer
	  param inout name "op" type class_ref 3700492 // SaveOp
	  param in name "newSaveCount" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}, ${t1} * ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15681676 "addRestoreToCount"
	public explicit_return_type "void"
	nparams 3
	  param inout name "renderer" type class_ref 431116 // OpenGLRenderer
	  param inout name "op" type class_ref 3700620 // StateOp
	  param in name "newSaveCount" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}, ${t1} * ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15681804 "addDrawOp"
	public explicit_return_type "void"
	nparams 2
	  param inout name "renderer" type class_ref 431116 // OpenGLRenderer
	  param inout name "op" type class_ref 3700748 // DrawOp
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "*
     * Add a draw op into the DeferredDisplayList, reordering as needed (for performance) if
     * disallowReorder is false, respecting draw order when overlaps occur"
      end

      operation 15681932 "resetBatchingState"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "*
     * Resets the batching back-pointers, creating a barrier in the operation stream so that no ops
     * added in the future will be inserted into a batch that already exist."
      end

      operation 15682060 "clear"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15682188 "storeStateOpBarrier"
	private explicit_return_type "void"
	nparams 2
	  param inout name "renderer" type class_ref 431116 // OpenGLRenderer
	  param inout name "op" type class_ref 3700620 // StateOp
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15682316 "storeRestoreToCountBarrier"
	private explicit_return_type "void"
	nparams 3
	  param inout name "renderer" type class_ref 431116 // OpenGLRenderer
	  param inout name "op" type class_ref 3700620 // StateOp
	  param in name "newSaveCount" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}, ${t1} * ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15682444 "recordingComplexClip"
	const cpp_inline private explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return mComplexClipStackStart >= 0; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15682572 "getStateOpDeferFlags"
	const private explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15682700 "getDrawOpDeferFlags"
	const private explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 13218700 "mSaveStack"
	private explicit_type "int"
	stereotype "Vector"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13218828 "mComplexClipStackStart"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 7032460 // mBatches (<unidirectional association>)
	relation 7032332 --->
	  stereotype "Vector"
	  a role_name "mBatches" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}*> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7032460 // mBatches (<unidirectional association>)
	  b parent class_ref 3700876 // Batch
      end

      classrelation 7032588 // mBatchLookup (<unidirectional association>)
	relation 7032460 --->
	  a role_name "mBatchLookup" multiplicity "[kOpBatch_Count]" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${multiplicity}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7032588 // mBatchLookup (<unidirectional association>)
	  b parent class_ref 3700876 // Batch
      end

      attribute 13218956 "mEarliestBatchIndex"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13219084 "mMergingBatches"
	private explicit_type "mergeid_t, DrawBatch*"
	multiplicity "[kOpBatch_Count]"
	stereotype "TinyHashMap"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${multiplicity}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3700236 "ClipOp"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 7035916 // <generalisation>
	relation 7035788 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 7035916 // <generalisation>
	  b parent class_ref 3700620 // StateOp
      end

      operation 15692940 "ClipOp"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param in name "op" explicit_type "SkRegion::Op"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}${)}${volatile}${throw} : mOp(op) {};
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 15693068 "defer"
	cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 4
	  param inout name "deferStruct" type class_ref 3701132 // DeferStateStruct
	  param in name "saveCount" explicit_type "int"
	  param in name "level" explicit_type "int"
	  param in name "useQuickReject" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract} {
        // NOTE: must defer op BEFORE applying state, since it may read clip
        deferStruct.mDeferredList.addClip(deferStruct.mRenderer, this);

        // TODO: Can we avoid applying complex clips at defer time?
        applyState(deferStruct.mRenderer, saveCount);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15693196 "canCauseComplexClip"
	cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return ((mOp != SkRegion::kIntersect_Op) && (mOp != SkRegion::kReplace_Op)) || !isRect();
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15693324 "ClipOp"
	cpp_inline protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} {};
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 15693452 "isRect"
	cpp_virtual cpp_inline protected explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return false; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 13222028 "mOp"
	protected explicit_type "SkRegion::Op"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3700364 "SaveLayerOp"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 7034764 // <generalisation>
	relation 7034636 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 7034764 // <generalisation>
	  b parent class_ref 3700620 // StateOp
      end

      classrelation 7034892 // <dependency>
	relation 7034764 -_->
	  stereotype "friend"
	  a default
	    cpp default "${type}"
	    classrelation_ref 7034892 // <dependency>
	  b parent class_ref 430604 // DisplayList
      end

      operation 15688716 "SaveLayerOp"
	cpp_inline public explicit_return_type ""
	nparams 7
	  param in name "left" explicit_type "float"
	  param in name "top" explicit_type "float"
	  param in name "right" explicit_type "float"
	  param in name "bottom" explicit_type "float"
	  param in name "alpha" explicit_type "int"
	  param in name "mode" explicit_type "SkXfermode::Mode"
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} ${p5}${v5}, ${t6} ${p6}${v6}${)}${volatile}${throw} : mArea(left, top, right, bottom), mAlpha(alpha), mMode(mode), mFlags(flags) {};
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 15688844 "defer"
	cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 4
	  param inout name "deferStruct" type class_ref 3701132 // DeferStateStruct
	  param in name "saveCount" explicit_type "int"
	  param in name "level" explicit_type "int"
	  param in name "useQuickReject" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract} {
        // NOTE: don't bother with actual saveLayer, instead issuing it at flush time
        int newSaveCount = deferStruct.mRenderer.getSaveCount();
        deferStruct.mDeferredList.addSaveLayer(deferStruct.mRenderer, this, newSaveCount);

        // NOTE: don't issue full saveLayer, since that has side effects/is costly. instead just
        // setup the snapshot for deferral, and re-issue the op at flush time
        deferStruct.mRenderer.saveLayerDeferred(mArea.left, mArea.top, mArea.right, mArea.bottom,
                mAlpha, mMode, mFlags);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15688972 "applyState"
	const cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 2
	  param inout name "renderer" type class_ref 431116 // OpenGLRenderer
	  param in name "saveCount" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        renderer.saveLayer(mArea.left, mArea.top, mArea.right, mArea.bottom, mAlpha, mMode, mFlags);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15689100 "output"
	cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "level" explicit_type "int"
	  param in name "logFlags" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        OP_LOG(\"SaveLayer%s of area \" RECT_STRING,
                (isSaveLayerAlpha() ? \"Alpha\" : \"\"),RECT_ARGS(mArea));
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15689228 "name"
	cpp_virtual cpp_inline public explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} { return isSaveLayerAlpha() ? \"SaveLayerAlpha\" : \"SaveLayer\"; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15689356 "getFlags"
	cpp_inline public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return mFlags; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15689484 "SaveLayerOp"
	cpp_inline private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} {};
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
	comment " Special case, reserved for direct DisplayList usage"
      end

      operation 15689612 "reinit"
	cpp_inline private return_type class_ref 3701644 // DisplayListOp
	nparams 7
	  param in name "left" explicit_type "float"
	  param in name "top" explicit_type "float"
	  param in name "right" explicit_type "float"
	  param in name "bottom" explicit_type "float"
	  param in name "alpha" explicit_type "int"
	  param in name "mode" explicit_type "SkXfermode::Mode"
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} ${p5}${v5}, ${t6} ${p6}${v6}${)}${const}${volatile}${throw}${abstract} {
        mArea.set(left, top, right, bottom);
        mAlpha = alpha;
        mMode = mode;
        mFlags = flags;
        return this;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15689740 "isSaveLayerAlpha"
	cpp_inline private explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return mAlpha < 255 && mMode == SkXfermode::kSrcOver_Mode; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 7035020 // mArea (<directional composition>)
	relation 7034892 *-->
	  a role_name "mArea" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7035020 // mArea (<directional composition>)
	  b parent class_ref 431244 // Rect
      end

      attribute 13220492 "mAlpha"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13220620 "mMode"
	private explicit_type "SkXfermode::Mode"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13220748 "mFlags"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3700492 "SaveOp"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "/////////////////////////////////////////////////////////////////////////////
 STATE OPERATIONS - these may affect the state of the canvas/renderer, but do
         not directly draw or alter output
/////////////////////////////////////////////////////////////////////////////"
      classrelation 7034252 // <generalisation>
	relation 7034124 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 7034252 // <generalisation>
	  b parent class_ref 3700620 // StateOp
      end

      classrelation 7034380 // <dependency>
	relation 7034252 -_->
	  stereotype "friend"
	  a default
	    cpp default "${type}"
	    classrelation_ref 7034380 // <dependency>
	  b parent class_ref 430604 // DisplayList
      end

      operation 15686796 "SaveOp"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}${)}${volatile}${throw} : mFlags(flags) {};
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 15686924 "defer"
	cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 4
	  param inout name "deferStruct" type class_ref 3701132 // DeferStateStruct
	  param in name "saveCount" explicit_type "int"
	  param in name "level" explicit_type "int"
	  param in name "useQuickReject" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract} {
        int newSaveCount = deferStruct.mRenderer.save(mFlags);
        deferStruct.mDeferredList.addSave(deferStruct.mRenderer, this, newSaveCount);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15687052 "applyState"
	const cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 2
	  param inout name "renderer" type class_ref 431116 // OpenGLRenderer
	  param in name "saveCount" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        renderer.save(mFlags);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15687180 "output"
	cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "level" explicit_type "int"
	  param in name "logFlags" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        OP_LOG(\"Save flags %x\", mFlags);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15687308 "name"
	cpp_virtual cpp_inline public explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} { return \"Save\"; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15687436 "getFlags"
	const cpp_inline public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return mFlags; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15687564 "SaveOp"
	cpp_inline private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} {};
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 15687692 "reinit"
	cpp_inline private return_type class_ref 3701644 // DisplayListOp
	nparams 1
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        mFlags = flags;
        return this;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 13220236 "mFlags"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3700620 "StateOp"
      abstract visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 7033612 // <generalisation>
	relation 7033484 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 7033612 // <generalisation>
	  b parent class_ref 3701644 // DisplayListOp
      end

      operation 15683980 "StateOp"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} {};
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 15684108 "~StateOp"
	cpp_virtual cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {};
"
	
	
	
	
      end

      operation 15684236 "defer"
	cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 4
	  param inout name "deferStruct" type class_ref 3701132 // DeferStateStruct
	  param in name "saveCount" explicit_type "int"
	  param in name "level" explicit_type "int"
	  param in name "useQuickReject" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract} {
        // default behavior only affects immediate, deferrable state, issue directly to renderer
        applyState(deferStruct.mRenderer, saveCount);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15684364 "replay"
	cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 4
	  param inout name "replayStruct" type class_ref 3701260 // ReplayStateStruct
	  param in name "saveCount" explicit_type "int"
	  param in name "level" explicit_type "int"
	  param in name "useQuickReject" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract} {
        applyState(replayStruct.mRenderer, saveCount);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "*
     * State operations are applied directly to the renderer, but can cause the deferred drawing op
     * list to flush"
      end

      operation 15684492 "applyState"
	abstract const cpp_virtual public explicit_return_type "void"
	nparams 2
	  param inout name "renderer" type class_ref 431116 // OpenGLRenderer
	  param in name "saveCount" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 3700748 "DrawOp"
      abstract visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 7033740 // <generalisation>
	relation 7033612 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 7033740 // <generalisation>
	  b parent class_ref 3701644 // DisplayListOp
      end

      classrelation 7033868 // <dependency>
	relation 7033740 -_->
	  stereotype "friend"
	  a default
	    cpp default "${type}"
	    classrelation_ref 7033868 // <dependency>
	  b parent class_ref 3702028 // MergingDrawBatch
      end

      operation 15684620 "DrawOp"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param inout name "paint" explicit_type "SkPaint"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}${)}${volatile}${throw} : mPaint(paint), mQuickRejected(false) {};
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 15684748 "defer"
	cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 4
	  param inout name "deferStruct" type class_ref 3701132 // DeferStateStruct
	  param in name "saveCount" explicit_type "int"
	  param in name "level" explicit_type "int"
	  param in name "useQuickReject" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract} {
        if (mQuickRejected && CC_LIKELY(useQuickReject)) {
            return;
        }

        if (!getLocalBounds(state.mBounds)) {
            // empty bounds signify bounds can't be calculated
            state.mBounds.setEmpty();
        }

        deferStruct.mDeferredList.addDrawOp(deferStruct.mRenderer, this);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15684876 "replay"
	cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 4
	  param inout name "replayStruct" type class_ref 3701260 // ReplayStateStruct
	  param in name "saveCount" explicit_type "int"
	  param in name "level" explicit_type "int"
	  param in name "useQuickReject" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract} {
        if (mQuickRejected && CC_LIKELY(useQuickReject)) {
            return;
        }

        replayStruct.mDrawGlStatus |= applyDraw(replayStruct.mRenderer, replayStruct.mDirty);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15685004 "applyDraw"
	abstract cpp_virtual public explicit_return_type "status_t"
	nparams 2
	  param inout name "renderer" type class_ref 431116 // OpenGLRenderer
	  param inout name "dirty" type class_ref 431244 // Rect
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15685132 "multiDraw"
	cpp_virtual cpp_inline public explicit_return_type "status_t"
	nparams 4
	  param inout name "renderer" type class_ref 431116 // OpenGLRenderer
	  param inout name "dirty" type class_ref 431244 // Rect
	  param in name "ops" explicit_type "Vector<DrawOp*>"
	  param in name "bounds" type class_ref 431244 // Rect
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} & ${p1}${v1}, const ${t2} & ${p2}${v2}, const ${t3} & ${p3}${v3}${)}${const}${volatile}${throw}${abstract} {
        status_t status = DrawGlInfo::kStatusDone;
        for (unsigned int i = 0; i < ops.size(); i++) {
            renderer.restoreDisplayState(ops[i]->state);
            status |= ops[i]->applyDraw(renderer, dirty);
        }
        return status;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "*
     * Draw multiple instances of an operation, must be overidden for operations that merge
     *
     * Currently guarantees certain similarities between ops (see MergingDrawBatch::canMergeWith),
     * and pure translation transformations. Other guarantees of similarity should be enforced by
     * reducing which operations are tagged as mergeable."
      end

      operation 15685260 "onDefer"
	cpp_virtual cpp_inline public explicit_return_type "bool"
	nparams 3
	  param inout name "renderer" type class_ref 431116 // OpenGLRenderer
	  param inout name "batchId" explicit_type "int"
	  param inout name "mergeId" type class_ref 3699852 // mergeid_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract} {
        return false;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "     * When this method is invoked the state field is initialized to have the
     * final rendering state. We can thus use it to process data as it will be
     * used at draw time.
     *
     * Additionally, this method allows subclasses to provide defer-time preferences for batching
     * and merging.
     *
     * Return true if the op can merge with others of its kind (such subclasses should implement
     * multiDraw)"
      end

      operation 15685388 "getLocalBounds"
	cpp_virtual cpp_inline public explicit_return_type "bool"
	nparams 1
	  param inout name "localBounds" type class_ref 431244 // Rect
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} { return false; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " returns true if bounds exist"
      end

      operation 15685516 "setQuickRejected"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "quickRejected" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} { mQuickRejected = quickRejected; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " TODO: better refine localbounds usage"
      end

      operation 15685644 "getQuickRejected"
	cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return mQuickRejected; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15685772 "getPaintAlpha"
	cpp_inline public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return OpenGLRenderer::getAlphaDirect(mPaint);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15685900 "strokeWidthOutset"
	cpp_inline public explicit_return_type "float"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        float width = mPaint->getStrokeWidth();
        if (width == 0) return 0.5f; // account for hairline
        return width * 0.5f;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15686028 "getPaint"
	cpp_inline protected explicit_return_type "SkPaint"
	nparams 1
	  param inout name "renderer" type class_ref 431116 // OpenGLRenderer
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        return renderer.filterPaint(mPaint);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 13219980 "mPaint"
	protected explicit_type "SkPaint"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " should be accessed via getPaint() when applying"
      end

      attribute 13220108 "mQuickRejected"
	protected explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3700876 "Batch"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
    end

    class 3701132 "DeferStateStruct"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      operation 15682828 "DeferStateStruct"
	cpp_inline public explicit_return_type ""
	nparams 3
	  param inout name "deferredList" type class_ref 3699980 // DeferredDisplayList
	  param inout name "renderer" type class_ref 431116 // OpenGLRenderer
	  param in name "replayFlags" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} & ${p0}${v0}, ${t1} & ${p1}${v1}, ${t2} ${p2}${v2}${)}${volatile}${throw} : mDeferredList(deferredList), mRenderer(renderer), mReplayFlags(replayFlags) {};
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      classrelation 7032716 // mDeferredList (<unidirectional association>)
	relation 7032588 --->
	  a role_name "mDeferredList" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} & ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7032716 // mDeferredList (<unidirectional association>)
	  b parent class_ref 3699980 // DeferredDisplayList
      end

      classrelation 7032844 // mRenderer (<unidirectional association>)
	relation 7032716 --->
	  a role_name "mRenderer" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} & ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7032844 // mRenderer (<unidirectional association>)
	  b parent class_ref 431116 // OpenGLRenderer
      end

      attribute 13219212 "mReplayFlags"
	const_attribute public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3701260 "ReplayStateStruct"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      operation 15682956 "ReplayStateStruct"
	cpp_inline public explicit_return_type ""
	nparams 3
	  param inout name "renderer" type class_ref 431116 // OpenGLRenderer
	  param inout name "dirty" type class_ref 431244 // Rect
	  param in name "replayFlags" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} & ${p0}${v0}, ${t1} & ${p1}${v1}, ${t2} ${p2}${v2}${)}${volatile}${throw} : mRenderer(renderer), mDirty(dirty), mReplayFlags(replayFlags),
            mDrawGlStatus(DrawGlInfo::kStatusDone) {};
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      classrelation 7032972 // mRenderer (<unidirectional association>)
	relation 7032844 --->
	  a role_name "mRenderer" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} & ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7032972 // mRenderer (<unidirectional association>)
	  b parent class_ref 431116 // OpenGLRenderer
      end

      classrelation 7033100 // mDirty (<unidirectional association>)
	relation 7032972 --->
	  a role_name "mDirty" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} & ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7033100 // mDirty (<unidirectional association>)
	  b parent class_ref 431244 // Rect
      end

      attribute 13219340 "mReplayFlags"
	const_attribute public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13219468 "mDrawGlStatus"
	public explicit_type "status_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3701388 "DisplayListData"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * Refcounted structure that holds data used in display list stream"
      classrelation 7033228 // <generalisation>
	relation 7033100 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 7033228 // <generalisation>
	  b parent class_ref 3701516 // typedef5
      end

      attribute 13219596 "allocator"
	public explicit_type "LinearAllocator"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 7033356 // displayListOps (<unidirectional association>)
	relation 7033228 --->
	  stereotype "Vector"
	  a role_name "displayListOps" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}*> ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7033356 // displayListOps (<unidirectional association>)
	  b parent class_ref 3701644 // DisplayListOp
      end
    end

    class 3701516 "typedef5"
      visibility package stereotype "typedef" explicit_base_type "LightRefBase<DisplayListData>"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
    end

    class 3701644 "DisplayListOp"
      abstract visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * Structure for storing canvas operations when they are recorded into a DisplayList, so that they
 * may be replayed to an OpenGLRenderer.
 *
 * To avoid individual memory allocations, DisplayListOps may only be allocated into a
 * LinearAllocator's managed memory buffers.  Each pointer held by a DisplayListOp is either a
 * pointer into memory also allocated in the LinearAllocator (mostly for text and float buffers) or
 * references a externally refcounted object (Sk... and Skia... objects). ~DisplayListOp() is
 * never called as LinearAllocators are simply discarded, so no memory management should be done in
 * this class."
      operation 15683084 "~DisplayListOp"
	cpp_virtual cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} { CRASH(); };
"
	
	
	
	
	comment " These objects should always be allocated with a LinearAllocator, and never destroyed/deleted.
 standard new() intentionally not implemented, and delete/deconstructor should never be used."
      end

      operation 15683212 "operator delete"
	class_operation cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "ptr" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} { CRASH(); };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15683340 "operator new"
	class_operation cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "size" explicit_type "size_t"
	  param inout name "allocator" explicit_type "LinearAllocator"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}, ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        return allocator.alloc(size);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "* static void* operator new(size_t size); PURPOSELY OMITTED *"
      end

      class 3701772 "OpLogFlag"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum ${name} {
${items}
};
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 13219724 "kOpLogFlag_Recurse"
	  public type class_ref 3701772 // OpLogFlag
	  init_value " 0x1"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 13219852 "kOpLogFlag_JSON"
	  public type class_ref 3701772 // OpLogFlag
	  init_value " 0x2 // TODO: add?
    "
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      operation 15683468 "defer"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 4
	  param inout name "deferStruct" type class_ref 3701132 // DeferStateStruct
	  param in name "saveCount" explicit_type "int"
	  param in name "level" explicit_type "int"
	  param in name "useQuickReject" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15683596 "replay"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 4
	  param inout name "replayStruct" type class_ref 3701260 // ReplayStateStruct
	  param in name "saveCount" explicit_type "int"
	  param in name "level" explicit_type "int"
	  param in name "useQuickReject" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15683724 "output"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 2
	  param in name "level" explicit_type "int"
	  param in name "logFlags" explicit_type "uint32_t"
	    defaultvalue "0"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15683852 "name"
	abstract cpp_virtual public explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " NOTE: it would be nice to declare constants and overriding the implementation in each op to
 point at the constants, but that seems to require a .cpp file"
      end

      classrelation 7033484 // state (<directional composition>)
	relation 7033356 *-->
	  a role_name "state" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7033484 // state (<directional composition>)
	  b parent class_ref 3701900 // DeferredDisplayState
      end
    end

    class 3701900 "DeferredDisplayState"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 7041804 // mBounds (<directional composition>)
	relation 7041676 *-->
	  a role_name "mBounds" public
	    comment " global op bounds, mapped by mMatrix to be in screen space coordinates, clipped."
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7041804 // mBounds (<directional composition>)
	  b parent class_ref 431244 // Rect
      end

      attribute 13231628 "mClipValid"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 7041932 // mClip (<directional composition>)
	relation 7041804 *-->
	  a role_name "mClip" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7041932 // mClip (<directional composition>)
	  b parent class_ref 431244 // Rect
      end

      classrelation 7042060 // mMatrix (<directional composition>)
	relation 7041932 *-->
	  a role_name "mMatrix" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7042060 // mMatrix (<directional composition>)
	  b parent class_ref 434444 // mat4
      end

      classrelation 7042188 // mDrawModifiers (<directional composition>)
	relation 7042060 *-->
	  a role_name "mDrawModifiers" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7042188 // mDrawModifiers (<directional composition>)
	  b parent class_ref 3707660 // DrawModifiers
      end

      attribute 13231756 "mAlpha"
	public explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3702028 "MergingDrawBatch"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
    end

    class 3702156 "DrawBoundedOp"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 7033996 // <generalisation>
	relation 7033868 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 7033996 // <generalisation>
	  b parent class_ref 3700748 // DrawOp
      end

      operation 15686156 "DrawBoundedOp"
	cpp_inline public explicit_return_type ""
	nparams 5
	  param in name "left" explicit_type "float"
	  param in name "top" explicit_type "float"
	  param in name "right" explicit_type "float"
	  param in name "bottom" explicit_type "float"
	  param inout name "paint" explicit_type "SkPaint"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} * ${p4}${v4}${)}${volatile}${throw} : DrawOp(paint), mLocalBounds(left, top, right, bottom) {};
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 15686284 "DrawBoundedOp"
	cpp_inline public explicit_return_type ""
	nparams 3
	  param in name "points" explicit_type "float"
	  param in name "count" explicit_type "int"
	  param inout name "paint" explicit_type "SkPaint"
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * ${p2}${v2}${)}${volatile}${throw} : DrawOp(paint), mLocalBounds(points[0], points[1], points[0], points[1]) {
        for (int i = 2; i < count; i += 2) {
            mLocalBounds.left = fminf(mLocalBounds.left, points[i]);
            mLocalBounds.right = fmaxf(mLocalBounds.right, points[i]);
            mLocalBounds.top = fminf(mLocalBounds.top, points[i + 1]);
            mLocalBounds.bottom = fmaxf(mLocalBounds.bottom, points[i + 1]);
        }
    };
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
	comment " Calculates bounds as smallest rect encompassing all points
 NOTE: requires at least 1 vertex, and doesn't account for stroke size (should be handled in
 subclass' constructor)"
      end

      operation 15686412 "DrawBoundedOp"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param inout name "paint" explicit_type "SkPaint"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}${)}${volatile}${throw} : DrawOp(paint) {};
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
	comment " default empty constructor for bounds, to be overridden in child constructor body"
      end

      operation 15686540 "getLocalBounds"
	cpp_inline public explicit_return_type "bool"
	nparams 1
	  param inout name "localBounds" type class_ref 431244 // Rect
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        localBounds.set(mLocalBounds);
        return true;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15686668 "mergeAllowed"
	cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        if (!state.mMatrix.isPureTranslate()) return false;

        // checks that we're unclipped, and srcover
        const Rect& opBounds = state.mBounds;
        return fabs(opBounds.getWidth() - mLocalBounds.getWidth()) < 0.1 &&
                fabs(opBounds.getHeight() - mLocalBounds.getHeight()) < 0.1 &&
                (OpenGLRenderer::getXfermodeDirect(mPaint) == SkXfermode::kSrcOver_Mode);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 7034124 // mLocalBounds (<directional composition>)
	relation 7033996 *-->
	  a role_name "mLocalBounds" protected
	    comment " displayed area in LOCAL coord. doesn't incorporate stroke, so check paint"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7034124 // mLocalBounds (<directional composition>)
	  b parent class_ref 431244 // Rect
      end
    end

    class 3702284 "RestoreToCountOp"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 7034508 // <generalisation>
	relation 7034380 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 7034508 // <generalisation>
	  b parent class_ref 3700620 // StateOp
      end

      classrelation 7034636 // <dependency>
	relation 7034508 -_->
	  stereotype "friend"
	  a default
	    cpp default "${type}"
	    classrelation_ref 7034636 // <dependency>
	  b parent class_ref 430604 // DisplayList
      end

      operation 15687820 "RestoreToCountOp"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param in name "count" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}${)}${volatile}${throw} : mCount(count) {};
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 15687948 "defer"
	cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 4
	  param inout name "deferStruct" type class_ref 3701132 // DeferStateStruct
	  param in name "saveCount" explicit_type "int"
	  param in name "level" explicit_type "int"
	  param in name "useQuickReject" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract} {
        deferStruct.mDeferredList.addRestoreToCount(deferStruct.mRenderer,
                this, saveCount + mCount);
        deferStruct.mRenderer.restoreToCount(saveCount + mCount);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15688076 "applyState"
	const cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 2
	  param inout name "renderer" type class_ref 431116 // OpenGLRenderer
	  param in name "saveCount" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        renderer.restoreToCount(saveCount + mCount);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15688204 "output"
	cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "level" explicit_type "int"
	  param in name "logFlags" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        OP_LOG(\"Restore to count %d\", mCount);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15688332 "name"
	cpp_virtual cpp_inline public explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} { return \"RestoreToCount\"; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15688460 "RestoreToCountOp"
	cpp_inline private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} {};
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 15688588 "reinit"
	cpp_inline private return_type class_ref 3701644 // DisplayListOp
	nparams 1
	  param in name "count" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        mCount = count;
        return this;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 13220364 "mCount"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3702412 "TranslateOp"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 7035148 // <generalisation>
	relation 7035020 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 7035148 // <generalisation>
	  b parent class_ref 3700620 // StateOp
      end

      operation 15689868 "TranslateOp"
	cpp_inline public explicit_return_type ""
	nparams 2
	  param in name "dx" explicit_type "float"
	  param in name "dy" explicit_type "float"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${volatile}${throw} : mDx(dx), mDy(dy) {};
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 15689996 "applyState"
	const cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 2
	  param inout name "renderer" type class_ref 431116 // OpenGLRenderer
	  param in name "saveCount" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        renderer.translate(mDx, mDy);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15690124 "output"
	cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "level" explicit_type "int"
	  param in name "logFlags" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        OP_LOG(\"Translate by %f %f\", mDx, mDy);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15690252 "name"
	cpp_virtual cpp_inline public explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} { return \"Translate\"; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 13220876 "mDx"
	private explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13221004 "mDy"
	private explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3702540 "RotateOp"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 7035276 // <generalisation>
	relation 7035148 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 7035276 // <generalisation>
	  b parent class_ref 3700620 // StateOp
      end

      operation 15690380 "RotateOp"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param in name "degrees" explicit_type "float"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}${)}${volatile}${throw} : mDegrees(degrees) {};
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 15690508 "applyState"
	const cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 2
	  param inout name "renderer" type class_ref 431116 // OpenGLRenderer
	  param in name "saveCount" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        renderer.rotate(mDegrees);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15690636 "output"
	cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "level" explicit_type "int"
	  param in name "logFlags" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        OP_LOG(\"Rotate by %f degrees\", mDegrees);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15690764 "name"
	cpp_virtual cpp_inline public explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} { return \"Rotate\"; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 13221132 "mDegrees"
	private explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3702668 "ScaleOp"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 7035404 // <generalisation>
	relation 7035276 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 7035404 // <generalisation>
	  b parent class_ref 3700620 // StateOp
      end

      operation 15690892 "ScaleOp"
	cpp_inline public explicit_return_type ""
	nparams 2
	  param in name "sx" explicit_type "float"
	  param in name "sy" explicit_type "float"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${volatile}${throw} : mSx(sx), mSy(sy) {};
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 15691020 "applyState"
	const cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 2
	  param inout name "renderer" type class_ref 431116 // OpenGLRenderer
	  param in name "saveCount" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        renderer.scale(mSx, mSy);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15691148 "output"
	cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "level" explicit_type "int"
	  param in name "logFlags" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        OP_LOG(\"Scale by %f %f\", mSx, mSy);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15691276 "name"
	cpp_virtual cpp_inline public explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} { return \"Scale\"; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 13221260 "mSx"
	private explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13221388 "mSy"
	private explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3702796 "SkewOp"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 7035532 // <generalisation>
	relation 7035404 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 7035532 // <generalisation>
	  b parent class_ref 3700620 // StateOp
      end

      operation 15691404 "SkewOp"
	cpp_inline public explicit_return_type ""
	nparams 2
	  param in name "sx" explicit_type "float"
	  param in name "sy" explicit_type "float"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${volatile}${throw} : mSx(sx), mSy(sy) {};
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 15691532 "applyState"
	const cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 2
	  param inout name "renderer" type class_ref 431116 // OpenGLRenderer
	  param in name "saveCount" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        renderer.skew(mSx, mSy);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15691660 "output"
	cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "level" explicit_type "int"
	  param in name "logFlags" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        OP_LOG(\"Skew by %f %f\", mSx, mSy);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15691788 "name"
	cpp_virtual cpp_inline public explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} { return \"Skew\"; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 13221516 "mSx"
	private explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13221644 "mSy"
	private explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3702924 "SetMatrixOp"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 7035660 // <generalisation>
	relation 7035532 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 7035660 // <generalisation>
	  b parent class_ref 3700620 // StateOp
      end

      operation 15691916 "SetMatrixOp"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param inout name "matrix" explicit_type "SkMatrix"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}${)}${volatile}${throw} : mMatrix(matrix) {};
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 15692044 "applyState"
	const cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 2
	  param inout name "renderer" type class_ref 431116 // OpenGLRenderer
	  param in name "saveCount" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        renderer.setMatrix(mMatrix);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15692172 "output"
	cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "level" explicit_type "int"
	  param in name "logFlags" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        OP_LOG(\"SetMatrix \" MATRIX_STRING, MATRIX_ARGS(mMatrix));
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15692300 "name"
	cpp_virtual cpp_inline public explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} { return \"SetMatrix\"; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 13221772 "mMatrix"
	private explicit_type "SkMatrix"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3703052 "ConcatMatrixOp"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 7035788 // <generalisation>
	relation 7035660 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 7035788 // <generalisation>
	  b parent class_ref 3700620 // StateOp
      end

      operation 15692428 "ConcatMatrixOp"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param inout name "matrix" explicit_type "SkMatrix"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}${)}${volatile}${throw} : mMatrix(matrix) {};
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 15692556 "applyState"
	const cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 2
	  param inout name "renderer" type class_ref 431116 // OpenGLRenderer
	  param in name "saveCount" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        renderer.concatMatrix(mMatrix);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15692684 "output"
	cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "level" explicit_type "int"
	  param in name "logFlags" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        OP_LOG(\"ConcatMatrix \" MATRIX_STRING, MATRIX_ARGS(mMatrix));
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15692812 "name"
	cpp_virtual cpp_inline public explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} { return \"ConcatMatrix\"; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 13221900 "mMatrix"
	private explicit_type "SkMatrix"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3703180 "ClipRectOp"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 7036044 // <generalisation>
	relation 7035916 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 7036044 // <generalisation>
	  b parent class_ref 3700236 // ClipOp
      end

      classrelation 7036172 // <dependency>
	relation 7036044 -_->
	  stereotype "friend"
	  a default
	    cpp default "${type}"
	    classrelation_ref 7036172 // <dependency>
	  b parent class_ref 430604 // DisplayList
      end

      operation 15693580 "ClipRectOp"
	cpp_inline public explicit_return_type ""
	nparams 5
	  param in name "left" explicit_type "float"
	  param in name "top" explicit_type "float"
	  param in name "right" explicit_type "float"
	  param in name "bottom" explicit_type "float"
	  param in name "op" explicit_type "SkRegion::Op"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}${)}${volatile}${throw} : ClipOp(op), mArea(left, top, right, bottom) {};
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 15693708 "applyState"
	const cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 2
	  param inout name "renderer" type class_ref 431116 // OpenGLRenderer
	  param in name "saveCount" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        renderer.clipRect(mArea.left, mArea.top, mArea.right, mArea.bottom, mOp);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15693836 "output"
	cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "level" explicit_type "int"
	  param in name "logFlags" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        OP_LOG(\"ClipRect \" RECT_STRING, RECT_ARGS(mArea));
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15693964 "name"
	cpp_virtual cpp_inline public explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} { return \"ClipRect\"; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15694092 "isRect"
	cpp_virtual cpp_inline protected explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return true; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15694220 "ClipRectOp"
	cpp_inline private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} {};
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 15694348 "reinit"
	cpp_inline private return_type class_ref 3701644 // DisplayListOp
	nparams 5
	  param in name "left" explicit_type "float"
	  param in name "top" explicit_type "float"
	  param in name "right" explicit_type "float"
	  param in name "bottom" explicit_type "float"
	  param in name "op" explicit_type "SkRegion::Op"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}${)}${const}${volatile}${throw}${abstract} {
        mOp = op;
        mArea.set(left, top, right, bottom);
        return this;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 7036300 // mArea (<directional composition>)
	relation 7036172 *-->
	  a role_name "mArea" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7036300 // mArea (<directional composition>)
	  b parent class_ref 431244 // Rect
      end
    end

    class 3703308 "ClipPathOp"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 7036428 // <generalisation>
	relation 7036300 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 7036428 // <generalisation>
	  b parent class_ref 3700236 // ClipOp
      end

      operation 15694476 "ClipPathOp"
	cpp_inline public explicit_return_type ""
	nparams 2
	  param inout name "path" explicit_type "SkPath"
	  param in name "op" explicit_type "SkRegion::Op"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${volatile}${throw} : ClipOp(op), mPath(path) {};
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 15694604 "applyState"
	const cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 2
	  param inout name "renderer" type class_ref 431116 // OpenGLRenderer
	  param in name "saveCount" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        renderer.clipPath(mPath, mOp);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15694732 "output"
	cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "level" explicit_type "int"
	  param in name "logFlags" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        SkRect bounds = mPath->getBounds();
        OP_LOG(\"ClipPath bounds \" RECT_STRING,
                bounds.left(), bounds.top(), bounds.right(), bounds.bottom());
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15694860 "name"
	cpp_virtual cpp_inline public explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} { return \"ClipPath\"; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 13222156 "mPath"
	private explicit_type "SkPath"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3703436 "ClipRegionOp"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 7036556 // <generalisation>
	relation 7036428 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 7036556 // <generalisation>
	  b parent class_ref 3700236 // ClipOp
      end

      operation 15694988 "ClipRegionOp"
	cpp_inline public explicit_return_type ""
	nparams 2
	  param inout name "region" explicit_type "SkRegion"
	  param in name "op" explicit_type "SkRegion::Op"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${volatile}${throw} : ClipOp(op), mRegion(region) {};
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 15695116 "applyState"
	const cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 2
	  param inout name "renderer" type class_ref 431116 // OpenGLRenderer
	  param in name "saveCount" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        renderer.clipRegion(mRegion, mOp);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15695244 "output"
	cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "level" explicit_type "int"
	  param in name "logFlags" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        SkIRect bounds = mRegion->getBounds();
        OP_LOG(\"ClipRegion bounds %d %d %d %d\",
                bounds.left(), bounds.top(), bounds.right(), bounds.bottom());
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15695372 "name"
	cpp_virtual cpp_inline public explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} { return \"ClipRegion\"; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 13222284 "mRegion"
	private explicit_type "SkRegion"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13222412 "mOp"
	private explicit_type "SkRegion::Op"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3703564 "ResetShaderOp"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 7036684 // <generalisation>
	relation 7036556 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 7036684 // <generalisation>
	  b parent class_ref 3700620 // StateOp
      end

      operation 15695500 "applyState"
	const cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 2
	  param inout name "renderer" type class_ref 431116 // OpenGLRenderer
	  param in name "saveCount" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        renderer.resetShader();
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15695628 "output"
	cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "level" explicit_type "int"
	  param in name "logFlags" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        OP_LOGS(\"ResetShader\");
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15695756 "name"
	cpp_virtual cpp_inline public explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} { return \"ResetShader\"; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 3703692 "SetupShaderOp"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 7036812 // <generalisation>
	relation 7036684 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 7036812 // <generalisation>
	  b parent class_ref 3700620 // StateOp
      end

      operation 15695884 "SetupShaderOp"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param inout name "shader" type class_ref 431500 // SkiaShader
	cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}${)}${volatile}${throw} : mShader(shader) {};
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 15696012 "applyState"
	const cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 2
	  param inout name "renderer" type class_ref 431116 // OpenGLRenderer
	  param in name "saveCount" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        renderer.setupShader(mShader);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15696140 "output"
	cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "level" explicit_type "int"
	  param in name "logFlags" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        OP_LOG(\"SetupShader, shader %p\", mShader);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15696268 "name"
	cpp_virtual cpp_inline public explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} { return \"SetupShader\"; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 7036940 // mShader (<unidirectional association>)
	relation 7036812 --->
	  a role_name "mShader" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7036940 // mShader (<unidirectional association>)
	  b parent class_ref 431500 // SkiaShader
      end
    end

    class 3703820 "ResetColorFilterOp"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 7037068 // <generalisation>
	relation 7036940 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 7037068 // <generalisation>
	  b parent class_ref 3700620 // StateOp
      end

      operation 15696396 "applyState"
	const cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 2
	  param inout name "renderer" type class_ref 431116 // OpenGLRenderer
	  param in name "saveCount" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        renderer.resetColorFilter();
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15696524 "output"
	cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "level" explicit_type "int"
	  param in name "logFlags" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        OP_LOGS(\"ResetColorFilter\");
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15696652 "name"
	cpp_virtual cpp_inline public explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} { return \"ResetColorFilter\"; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 3703948 "SetupColorFilterOp"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 7037196 // <generalisation>
	relation 7037068 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 7037196 // <generalisation>
	  b parent class_ref 3700620 // StateOp
      end

      operation 15696780 "SetupColorFilterOp"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param inout name "colorFilter" type class_ref 431628 // SkiaColorFilter
	cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}${)}${volatile}${throw} : mColorFilter(colorFilter) {};
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 15696908 "applyState"
	const cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 2
	  param inout name "renderer" type class_ref 431116 // OpenGLRenderer
	  param in name "saveCount" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        renderer.setupColorFilter(mColorFilter);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15697036 "output"
	cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "level" explicit_type "int"
	  param in name "logFlags" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        OP_LOG(\"SetupColorFilter, filter %p\", mColorFilter);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15697164 "name"
	cpp_virtual cpp_inline public explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} { return \"SetupColorFilter\"; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 7037324 // mColorFilter (<unidirectional association>)
	relation 7037196 --->
	  a role_name "mColorFilter" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7037324 // mColorFilter (<unidirectional association>)
	  b parent class_ref 431628 // SkiaColorFilter
      end
    end

    class 3704076 "ResetShadowOp"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 7037452 // <generalisation>
	relation 7037324 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 7037452 // <generalisation>
	  b parent class_ref 3700620 // StateOp
      end

      operation 15697292 "applyState"
	const cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 2
	  param inout name "renderer" type class_ref 431116 // OpenGLRenderer
	  param in name "saveCount" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        renderer.resetShadow();
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15697420 "output"
	cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "level" explicit_type "int"
	  param in name "logFlags" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        OP_LOGS(\"ResetShadow\");
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15697548 "name"
	cpp_virtual cpp_inline public explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} { return \"ResetShadow\"; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 3704204 "SetupShadowOp"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 7037580 // <generalisation>
	relation 7037452 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 7037580 // <generalisation>
	  b parent class_ref 3700620 // StateOp
      end

      operation 15697676 "SetupShadowOp"
	cpp_inline public explicit_return_type ""
	nparams 4
	  param in name "radius" explicit_type "float"
	  param in name "dx" explicit_type "float"
	  param in name "dy" explicit_type "float"
	  param in name "color" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${volatile}${throw} : mRadius(radius), mDx(dx), mDy(dy), mColor(color) {};
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 15697804 "applyState"
	const cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 2
	  param inout name "renderer" type class_ref 431116 // OpenGLRenderer
	  param in name "saveCount" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        renderer.setupShadow(mRadius, mDx, mDy, mColor);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15697932 "output"
	cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "level" explicit_type "int"
	  param in name "logFlags" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        OP_LOG(\"SetupShadow, radius %f, %f, %f, color %#x\", mRadius, mDx, mDy, mColor);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15698060 "name"
	cpp_virtual cpp_inline public explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} { return \"SetupShadow\"; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 13222540 "mRadius"
	private explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13222668 "mDx"
	private explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13222796 "mDy"
	private explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13222924 "mColor"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3704332 "ResetPaintFilterOp"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 7037708 // <generalisation>
	relation 7037580 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 7037708 // <generalisation>
	  b parent class_ref 3700620 // StateOp
      end

      operation 15698188 "applyState"
	const cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 2
	  param inout name "renderer" type class_ref 431116 // OpenGLRenderer
	  param in name "saveCount" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        renderer.resetPaintFilter();
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15698316 "output"
	cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "level" explicit_type "int"
	  param in name "logFlags" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        OP_LOGS(\"ResetPaintFilter\");
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15698444 "name"
	cpp_virtual cpp_inline public explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} { return \"ResetPaintFilter\"; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 3704460 "SetupPaintFilterOp"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 7037836 // <generalisation>
	relation 7037708 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 7037836 // <generalisation>
	  b parent class_ref 3700620 // StateOp
      end

      operation 15698572 "SetupPaintFilterOp"
	cpp_inline public explicit_return_type ""
	nparams 2
	  param in name "clearBits" explicit_type "int"
	  param in name "setBits" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${volatile}${throw} : mClearBits(clearBits), mSetBits(setBits) {};
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 15698700 "applyState"
	const cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 2
	  param inout name "renderer" type class_ref 431116 // OpenGLRenderer
	  param in name "saveCount" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        renderer.setupPaintFilter(mClearBits, mSetBits);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15698828 "output"
	cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "level" explicit_type "int"
	  param in name "logFlags" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        OP_LOG(\"SetupPaintFilter, clear %#x, set %#x\", mClearBits, mSetBits);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15698956 "name"
	cpp_virtual cpp_inline public explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} { return \"SetupPaintFilter\"; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 13223052 "mClearBits"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13223180 "mSetBits"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3704588 "DrawBitmapOp"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "/////////////////////////////////////////////////////////////////////////////
 DRAW OPERATIONS - these are operations that can draw to the canvas's device
/////////////////////////////////////////////////////////////////////////////"
      classrelation 7037964 // <generalisation>
	relation 7037836 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 7037964 // <generalisation>
	  b parent class_ref 3702156 // DrawBoundedOp
      end

      operation 15699084 "DrawBitmapOp"
	cpp_inline public explicit_return_type ""
	nparams 4
	  param inout name "bitmap" explicit_type "SkBitmap"
	  param in name "left" explicit_type "float"
	  param in name "top" explicit_type "float"
	  param inout name "paint" explicit_type "SkPaint"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} * ${p3}${v3}${)}${volatile}${throw} : DrawBoundedOp(left, top, left + bitmap->width(), top + bitmap->height(),
                    paint),
            mBitmap(bitmap) {};
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 15699212 "applyDraw"
	cpp_virtual cpp_inline public explicit_return_type "status_t"
	nparams 2
	  param inout name "renderer" type class_ref 431116 // OpenGLRenderer
	  param inout name "dirty" type class_ref 431244 // Rect
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        return renderer.drawBitmap(mBitmap, mLocalBounds.left, mLocalBounds.top,
                getPaint(renderer));
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15699340 "multiDraw"
	cpp_virtual cpp_inline public explicit_return_type "status_t"
	nparams 4
	  param inout name "renderer" type class_ref 431116 // OpenGLRenderer
	  param inout name "dirty" type class_ref 431244 // Rect
	  param in name "ops" explicit_type "Vector<DrawOp*>"
	  param in name "bounds" type class_ref 431244 // Rect
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} & ${p1}${v1}, const ${t2} & ${p2}${v2}, const ${t3} & ${p3}${v3}${)}${const}${volatile}${throw}${abstract} {
        renderer.restoreDisplayState(state, true); // restore all but the clip
        renderer.setFullScreenClip(); // ensure merged ops aren't clipped
        TextureVertex vertices[6 * ops.size()];
        TextureVertex* vertex = &vertices[0];

        // TODO: manually handle rect clip for bitmaps by adjusting texCoords per op, and allowing
        // them to be merged in getBatchId()
        const Rect texCoords(0, 0, 1, 1);

        const float width = mBitmap->width();
        const float height = mBitmap->height();
        for (unsigned int i = 0; i < ops.size(); i++) {
            const Rect& opBounds = ops[i]->state.mBounds;
            SET_TEXTURE(vertex, opBounds, bounds, texCoords, left, top);
            SET_TEXTURE(vertex, opBounds, bounds, texCoords, right, top);
            SET_TEXTURE(vertex, opBounds, bounds, texCoords, left, bottom);

            SET_TEXTURE(vertex, opBounds, bounds, texCoords, left, bottom);
            SET_TEXTURE(vertex, opBounds, bounds, texCoords, right, top);
            SET_TEXTURE(vertex, opBounds, bounds, texCoords, right, bottom);
        }

        return renderer.drawBitmaps(mBitmap, ops.size(), &vertices[0], bounds, mPaint);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15699468 "output"
	cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "level" explicit_type "int"
	  param in name "logFlags" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        OP_LOG(\"Draw bitmap %p at %f %f\", mBitmap, mLocalBounds.left, mLocalBounds.top);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15699596 "name"
	cpp_virtual cpp_inline public explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} { return \"DrawBitmap\"; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15699724 "onDefer"
	cpp_virtual cpp_inline public explicit_return_type "bool"
	nparams 3
	  param inout name "renderer" type class_ref 431116 // OpenGLRenderer
	  param inout name "batchId" explicit_type "int"
	  param inout name "mergeId" type class_ref 3699852 // mergeid_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract} {
        *batchId = DeferredDisplayList::kOpBatch_Bitmap;
        *mergeId = (mergeid_t)mBitmap;

        // don't merge A8 bitmaps - the paint's color isn't compared by mergeId, or in
        // MergingDrawBatch::canMergeWith
        return mergeAllowed() && (mBitmap->getConfig() != SkBitmap::kA8_Config);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15699852 "bitmap"
	cpp_inline public explicit_return_type "SkBitmap"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} { return mBitmap; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 13223308 "mBitmap"
	protected explicit_type "SkBitmap"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3704716 "DrawBitmapMatrixOp"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 7038092 // <generalisation>
	relation 7037964 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 7038092 // <generalisation>
	  b parent class_ref 3702156 // DrawBoundedOp
      end

      operation 15699980 "DrawBitmapMatrixOp"
	cpp_inline public explicit_return_type ""
	nparams 3
	  param inout name "bitmap" explicit_type "SkBitmap"
	  param inout name "matrix" explicit_type "SkMatrix"
	  param inout name "paint" explicit_type "SkPaint"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}${)}${volatile}${throw} : DrawBoundedOp(paint), mBitmap(bitmap), mMatrix(matrix) {
        mLocalBounds.set(0, 0, bitmap->width(), bitmap->height());
        const mat4 transform(*matrix);
        transform.mapRect(mLocalBounds);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 15700108 "applyDraw"
	cpp_virtual cpp_inline public explicit_return_type "status_t"
	nparams 2
	  param inout name "renderer" type class_ref 431116 // OpenGLRenderer
	  param inout name "dirty" type class_ref 431244 // Rect
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        return renderer.drawBitmap(mBitmap, mMatrix, getPaint(renderer));
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15700236 "output"
	cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "level" explicit_type "int"
	  param in name "logFlags" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        OP_LOG(\"Draw bitmap %p matrix \" MATRIX_STRING, mBitmap, MATRIX_ARGS(mMatrix));
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15700364 "name"
	cpp_virtual cpp_inline public explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} { return \"DrawBitmapMatrix\"; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15700492 "onDefer"
	cpp_virtual cpp_inline public explicit_return_type "bool"
	nparams 3
	  param inout name "renderer" type class_ref 431116 // OpenGLRenderer
	  param inout name "batchId" explicit_type "int"
	  param inout name "mergeId" type class_ref 3699852 // mergeid_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract} {
        *batchId = DeferredDisplayList::kOpBatch_Bitmap;
        return false;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 13223436 "mBitmap"
	private explicit_type "SkBitmap"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13223564 "mMatrix"
	private explicit_type "SkMatrix"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3704844 "DrawBitmapRectOp"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 7038220 // <generalisation>
	relation 7038092 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 7038220 // <generalisation>
	  b parent class_ref 3702156 // DrawBoundedOp
      end

      operation 15700620 "DrawBitmapRectOp"
	cpp_inline public explicit_return_type ""
	nparams 10
	  param inout name "bitmap" explicit_type "SkBitmap"
	  param in name "srcLeft" explicit_type "float"
	  param in name "srcTop" explicit_type "float"
	  param in name "srcRight" explicit_type "float"
	  param in name "srcBottom" explicit_type "float"
	  param in name "dstLeft" explicit_type "float"
	  param in name "dstTop" explicit_type "float"
	  param in name "dstRight" explicit_type "float"
	  param in name "dstBottom" explicit_type "float"
	  param inout name "paint" explicit_type "SkPaint"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} ${p5}${v5}, ${t6} ${p6}${v6}, ${t7} ${p7}${v7}, ${t8} ${p8}${v8}, ${t9} * ${p9}${v9}${)}${volatile}${throw} : DrawBoundedOp(dstLeft, dstTop, dstRight, dstBottom, paint),
            mBitmap(bitmap), mSrc(srcLeft, srcTop, srcRight, srcBottom) {};
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 15700748 "applyDraw"
	cpp_virtual cpp_inline public explicit_return_type "status_t"
	nparams 2
	  param inout name "renderer" type class_ref 431116 // OpenGLRenderer
	  param inout name "dirty" type class_ref 431244 // Rect
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        return renderer.drawBitmap(mBitmap, mSrc.left, mSrc.top, mSrc.right, mSrc.bottom,
                mLocalBounds.left, mLocalBounds.top, mLocalBounds.right, mLocalBounds.bottom,
                getPaint(renderer));
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15700876 "output"
	cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "level" explicit_type "int"
	  param in name "logFlags" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        OP_LOG(\"Draw bitmap %p src=\"RECT_STRING\", dst=\"RECT_STRING,
                mBitmap, RECT_ARGS(mSrc), RECT_ARGS(mLocalBounds));
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15701004 "name"
	cpp_virtual cpp_inline public explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} { return \"DrawBitmapRect\"; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15701132 "onDefer"
	cpp_virtual cpp_inline public explicit_return_type "bool"
	nparams 3
	  param inout name "renderer" type class_ref 431116 // OpenGLRenderer
	  param inout name "batchId" explicit_type "int"
	  param inout name "mergeId" type class_ref 3699852 // mergeid_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract} {
        *batchId = DeferredDisplayList::kOpBatch_Bitmap;
        return false;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 13223692 "mBitmap"
	private explicit_type "SkBitmap"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 7038348 // mSrc (<directional composition>)
	relation 7038220 *-->
	  a role_name "mSrc" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7038348 // mSrc (<directional composition>)
	  b parent class_ref 431244 // Rect
      end
    end

    class 3704972 "DrawBitmapDataOp"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 7038476 // <generalisation>
	relation 7038348 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 7038476 // <generalisation>
	  b parent class_ref 3704588 // DrawBitmapOp
      end

      operation 15701260 "DrawBitmapDataOp"
	cpp_inline public explicit_return_type ""
	nparams 4
	  param inout name "bitmap" explicit_type "SkBitmap"
	  param in name "left" explicit_type "float"
	  param in name "top" explicit_type "float"
	  param inout name "paint" explicit_type "SkPaint"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} * ${p3}${v3}${)}${volatile}${throw} : DrawBitmapOp(bitmap, left, top, paint) {};
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 15701388 "applyDraw"
	cpp_virtual cpp_inline public explicit_return_type "status_t"
	nparams 2
	  param inout name "renderer" type class_ref 431116 // OpenGLRenderer
	  param inout name "dirty" type class_ref 431244 // Rect
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        return renderer.drawBitmapData(mBitmap, mLocalBounds.left,
                mLocalBounds.top, getPaint(renderer));
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15701516 "output"
	cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "level" explicit_type "int"
	  param in name "logFlags" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        OP_LOG(\"Draw bitmap %p\", mBitmap);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15701644 "name"
	cpp_virtual cpp_inline public explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} { return \"DrawBitmapData\"; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15701772 "onDefer"
	cpp_virtual cpp_inline public explicit_return_type "bool"
	nparams 3
	  param inout name "renderer" type class_ref 431116 // OpenGLRenderer
	  param inout name "batchId" explicit_type "int"
	  param inout name "mergeId" type class_ref 3699852 // mergeid_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract} {
        *batchId = DeferredDisplayList::kOpBatch_Bitmap;
        return false;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 3705100 "DrawBitmapMeshOp"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 7038604 // <generalisation>
	relation 7038476 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 7038604 // <generalisation>
	  b parent class_ref 3702156 // DrawBoundedOp
      end

      operation 15701900 "DrawBitmapMeshOp"
	cpp_inline public explicit_return_type ""
	nparams 6
	  param inout name "bitmap" explicit_type "SkBitmap"
	  param in name "meshWidth" explicit_type "int"
	  param in name "meshHeight" explicit_type "int"
	  param inout name "vertices" explicit_type "float"
	  param inout name "colors" explicit_type "int"
	  param inout name "paint" explicit_type "SkPaint"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} * ${p3}${v3}, ${t4} * ${p4}${v4}, ${t5} * ${p5}${v5}${)}${volatile}${throw} : DrawBoundedOp(vertices, 2 * (meshWidth + 1) * (meshHeight + 1), paint),
            mBitmap(bitmap), mMeshWidth(meshWidth), mMeshHeight(meshHeight),
            mVertices(vertices), mColors(colors) {};
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 15702028 "applyDraw"
	cpp_virtual cpp_inline public explicit_return_type "status_t"
	nparams 2
	  param inout name "renderer" type class_ref 431116 // OpenGLRenderer
	  param inout name "dirty" type class_ref 431244 // Rect
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        return renderer.drawBitmapMesh(mBitmap, mMeshWidth, mMeshHeight,
                mVertices, mColors, getPaint(renderer));
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15702156 "output"
	cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "level" explicit_type "int"
	  param in name "logFlags" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        OP_LOG(\"Draw bitmap %p mesh %d x %d\", mBitmap, mMeshWidth, mMeshHeight);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15702284 "name"
	cpp_virtual cpp_inline public explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} { return \"DrawBitmapMesh\"; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15702412 "onDefer"
	cpp_virtual cpp_inline public explicit_return_type "bool"
	nparams 3
	  param inout name "renderer" type class_ref 431116 // OpenGLRenderer
	  param inout name "batchId" explicit_type "int"
	  param inout name "mergeId" type class_ref 3699852 // mergeid_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract} {
        *batchId = DeferredDisplayList::kOpBatch_Bitmap;
        return false;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 13223820 "mBitmap"
	private explicit_type "SkBitmap"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13223948 "mMeshWidth"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13224076 "mMeshHeight"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13224204 "mVertices"
	private explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13224332 "mColors"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3705228 "DrawPatchOp"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 7038732 // <generalisation>
	relation 7038604 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 7038732 // <generalisation>
	  b parent class_ref 3702156 // DrawBoundedOp
      end

      operation 15702540 "DrawPatchOp"
	cpp_inline public explicit_return_type ""
	nparams 13
	  param inout name "bitmap" explicit_type "SkBitmap"
	  param in name "xDivs" explicit_type "int32_t"
	  param in name "yDivs" explicit_type "int32_t"
	  param in name "colors" explicit_type "uint32_t"
	  param in name "width" explicit_type "uint32_t"
	  param in name "height" explicit_type "uint32_t"
	  param in name "numColors" explicit_type "int8_t"
	  param in name "left" explicit_type "float"
	  param in name "top" explicit_type "float"
	  param in name "right" explicit_type "float"
	  param in name "bottom" explicit_type "float"
	  param in name "alpha" explicit_type "int"
	  param in name "mode" explicit_type "SkXfermode::Mode"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}, const ${t1} * ${p1}${v1}, const ${t2} * ${p2}${v2}, const ${t3} * ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} ${p5}${v5}, ${t6} ${p6}${v6}, ${t7} ${p7}${v7}, ${t8} ${p8}${v8}, ${t9} ${p9}${v9}, ${t10} ${p10}${v10}, ${t11} ${p11}${v11}, ${t12} ${p12}${v12}${)}${volatile}${throw} : DrawBoundedOp(left, top, right, bottom, 0),
            mBitmap(bitmap), mxDivs(xDivs), myDivs(yDivs),
            mColors(colors), mxDivsCount(width), myDivsCount(height),
            mNumColors(numColors), mAlpha(alpha), mMode(mode) {};
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 15702668 "applyDraw"
	cpp_virtual cpp_inline public explicit_return_type "status_t"
	nparams 2
	  param inout name "renderer" type class_ref 431116 // OpenGLRenderer
	  param inout name "dirty" type class_ref 431244 // Rect
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        // NOTE: not calling the virtual method, which takes a paint
        return renderer.drawPatch(mBitmap, mxDivs, myDivs, mColors,
                mxDivsCount, myDivsCount, mNumColors,
                mLocalBounds.left, mLocalBounds.top,
                mLocalBounds.right, mLocalBounds.bottom, mAlpha, mMode);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15702796 "output"
	cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "level" explicit_type "int"
	  param in name "logFlags" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        OP_LOG(\"Draw patch \"RECT_STRING, RECT_ARGS(mLocalBounds));
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15702924 "name"
	cpp_virtual cpp_inline public explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} { return \"DrawPatch\"; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15703052 "onDefer"
	cpp_virtual cpp_inline public explicit_return_type "bool"
	nparams 3
	  param inout name "renderer" type class_ref 431116 // OpenGLRenderer
	  param inout name "batchId" explicit_type "int"
	  param inout name "mergeId" type class_ref 3699852 // mergeid_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract} {
        *batchId = DeferredDisplayList::kOpBatch_Patch;
        *mergeId = (mergeid_t)mBitmap;
        return true;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 13224460 "mBitmap"
	private explicit_type "SkBitmap"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13224588 "mxDivs"
	const_attribute private explicit_type "int32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13224716 "myDivs"
	const_attribute private explicit_type "int32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13224844 "mColors"
	const_attribute private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13224972 "mxDivsCount"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13225100 "myDivsCount"
	private explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13225228 "mNumColors"
	private explicit_type "int8_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13225356 "mAlpha"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13225484 "mMode"
	private explicit_type "SkXfermode::Mode"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3705356 "DrawColorOp"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 7038860 // <generalisation>
	relation 7038732 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 7038860 // <generalisation>
	  b parent class_ref 3700748 // DrawOp
      end

      operation 15703180 "DrawColorOp"
	cpp_inline public explicit_return_type ""
	nparams 2
	  param in name "color" explicit_type "int"
	  param in name "mode" explicit_type "SkXfermode::Mode"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${volatile}${throw} : DrawOp(0), mColor(color), mMode(mode) {};
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 15703308 "applyDraw"
	cpp_virtual cpp_inline public explicit_return_type "status_t"
	nparams 2
	  param inout name "renderer" type class_ref 431116 // OpenGLRenderer
	  param inout name "dirty" type class_ref 431244 // Rect
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        return renderer.drawColor(mColor, mMode);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15703436 "output"
	cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "level" explicit_type "int"
	  param in name "logFlags" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        OP_LOG(\"Draw color %#x, mode %d\", mColor, mMode);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15703564 "name"
	cpp_virtual cpp_inline public explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} { return \"DrawColor\"; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 13225612 "mColor"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13225740 "mMode"
	private explicit_type "SkXfermode::Mode"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3705484 "DrawStrokableOp"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 7038988 // <generalisation>
	relation 7038860 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 7038988 // <generalisation>
	  b parent class_ref 3702156 // DrawBoundedOp
      end

      operation 15703692 "DrawStrokableOp"
	cpp_inline public explicit_return_type ""
	nparams 5
	  param in name "left" explicit_type "float"
	  param in name "top" explicit_type "float"
	  param in name "right" explicit_type "float"
	  param in name "bottom" explicit_type "float"
	  param inout name "paint" explicit_type "SkPaint"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} * ${p4}${v4}${)}${volatile}${throw} : DrawBoundedOp(left, top, right, bottom, paint) {};
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 15703820 "getLocalBounds"
	cpp_inline public explicit_return_type "bool"
	nparams 1
	  param inout name "localBounds" type class_ref 431244 // Rect
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        localBounds.set(mLocalBounds);
        if (mPaint && mPaint->getStyle() != SkPaint::kFill_Style) {
            localBounds.outset(strokeWidthOutset());
        }
        return true;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15703948 "onDefer"
	cpp_virtual cpp_inline public explicit_return_type "bool"
	nparams 3
	  param inout name "renderer" type class_ref 431116 // OpenGLRenderer
	  param inout name "batchId" explicit_type "int"
	  param inout name "mergeId" type class_ref 3699852 // mergeid_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract} {
        if (mPaint->getPathEffect()) {
            *batchId = DeferredDisplayList::kOpBatch_AlphaMaskTexture;
        } else {
            *batchId = mPaint->isAntiAlias() ?
                    DeferredDisplayList::kOpBatch_AlphaVertices :
                    DeferredDisplayList::kOpBatch_Vertices;
        }
        return false;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 3705612 "DrawRectOp"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 7039116 // <generalisation>
	relation 7038988 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 7039116 // <generalisation>
	  b parent class_ref 3705484 // DrawStrokableOp
      end

      operation 15704076 "DrawRectOp"
	cpp_inline public explicit_return_type ""
	nparams 5
	  param in name "left" explicit_type "float"
	  param in name "top" explicit_type "float"
	  param in name "right" explicit_type "float"
	  param in name "bottom" explicit_type "float"
	  param inout name "paint" explicit_type "SkPaint"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} * ${p4}${v4}${)}${volatile}${throw} : DrawStrokableOp(left, top, right, bottom, paint) {};
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 15704204 "applyDraw"
	cpp_virtual cpp_inline public explicit_return_type "status_t"
	nparams 2
	  param inout name "renderer" type class_ref 431116 // OpenGLRenderer
	  param inout name "dirty" type class_ref 431244 // Rect
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        return renderer.drawRect(mLocalBounds.left, mLocalBounds.top,
                mLocalBounds.right, mLocalBounds.bottom, getPaint(renderer));
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15704332 "output"
	cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "level" explicit_type "int"
	  param in name "logFlags" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        OP_LOG(\"Draw Rect \"RECT_STRING, RECT_ARGS(mLocalBounds));
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15704460 "name"
	cpp_virtual cpp_inline public explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} { return \"DrawRect\"; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 3705740 "DrawRectsOp"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 7039244 // <generalisation>
	relation 7039116 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 7039244 // <generalisation>
	  b parent class_ref 3702156 // DrawBoundedOp
      end

      operation 15704588 "DrawRectsOp"
	cpp_inline public explicit_return_type ""
	nparams 3
	  param in name "rects" explicit_type "float"
	  param in name "count" explicit_type "int"
	  param inout name "paint" explicit_type "SkPaint"
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * ${p2}${v2}${)}${volatile}${throw} : DrawBoundedOp(rects, count, paint),
            mRects(rects), mCount(count) {};
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 15704716 "applyDraw"
	cpp_virtual cpp_inline public explicit_return_type "status_t"
	nparams 2
	  param inout name "renderer" type class_ref 431116 // OpenGLRenderer
	  param inout name "dirty" type class_ref 431244 // Rect
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        return renderer.drawRects(mRects, mCount, getPaint(renderer));
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15704844 "output"
	cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "level" explicit_type "int"
	  param in name "logFlags" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        OP_LOG(\"Draw Rects count %d\", mCount);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15704972 "name"
	cpp_virtual cpp_inline public explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} { return \"DrawRects\"; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15705100 "onDefer"
	cpp_virtual cpp_inline public explicit_return_type "bool"
	nparams 3
	  param inout name "renderer" type class_ref 431116 // OpenGLRenderer
	  param inout name "batchId" explicit_type "int"
	  param inout name "mergeId" type class_ref 3699852 // mergeid_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract} {
        *batchId = DeferredDisplayList::kOpBatch_Vertices;
        return false;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 13225868 "mRects"
	const_attribute private explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13225996 "mCount"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3705868 "DrawRoundRectOp"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 7039372 // <generalisation>
	relation 7039244 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 7039372 // <generalisation>
	  b parent class_ref 3705484 // DrawStrokableOp
      end

      operation 15705228 "DrawRoundRectOp"
	cpp_inline public explicit_return_type ""
	nparams 7
	  param in name "left" explicit_type "float"
	  param in name "top" explicit_type "float"
	  param in name "right" explicit_type "float"
	  param in name "bottom" explicit_type "float"
	  param in name "rx" explicit_type "float"
	  param in name "ry" explicit_type "float"
	  param inout name "paint" explicit_type "SkPaint"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} ${p5}${v5}, ${t6} * ${p6}${v6}${)}${volatile}${throw} : DrawStrokableOp(left, top, right, bottom, paint), mRx(rx), mRy(ry) {};
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 15705356 "applyDraw"
	cpp_virtual cpp_inline public explicit_return_type "status_t"
	nparams 2
	  param inout name "renderer" type class_ref 431116 // OpenGLRenderer
	  param inout name "dirty" type class_ref 431244 // Rect
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        return renderer.drawRoundRect(mLocalBounds.left, mLocalBounds.top,
                mLocalBounds.right, mLocalBounds.bottom, mRx, mRy, getPaint(renderer));
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15705484 "output"
	cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "level" explicit_type "int"
	  param in name "logFlags" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        OP_LOG(\"Draw RoundRect \"RECT_STRING\", rx %f, ry %f\", RECT_ARGS(mLocalBounds), mRx, mRy);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15705612 "name"
	cpp_virtual cpp_inline public explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} { return \"DrawRoundRect\"; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 13226124 "mRx"
	private explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13226252 "mRy"
	private explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3705996 "DrawCircleOp"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 7039500 // <generalisation>
	relation 7039372 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 7039500 // <generalisation>
	  b parent class_ref 3705484 // DrawStrokableOp
      end

      operation 15705740 "DrawCircleOp"
	cpp_inline public explicit_return_type ""
	nparams 4
	  param in name "x" explicit_type "float"
	  param in name "y" explicit_type "float"
	  param in name "radius" explicit_type "float"
	  param inout name "paint" explicit_type "SkPaint"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} * ${p3}${v3}${)}${volatile}${throw} : DrawStrokableOp(x - radius, y - radius, x + radius, y + radius, paint),
            mX(x), mY(y), mRadius(radius) {};
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 15705868 "applyDraw"
	cpp_virtual cpp_inline public explicit_return_type "status_t"
	nparams 2
	  param inout name "renderer" type class_ref 431116 // OpenGLRenderer
	  param inout name "dirty" type class_ref 431244 // Rect
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        return renderer.drawCircle(mX, mY, mRadius, getPaint(renderer));
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15705996 "output"
	cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "level" explicit_type "int"
	  param in name "logFlags" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        OP_LOG(\"Draw Circle x %f, y %f, r %f\", mX, mY, mRadius);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15706124 "name"
	cpp_virtual cpp_inline public explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} { return \"DrawCircle\"; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 13226380 "mX"
	private explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13226508 "mY"
	private explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13226636 "mRadius"
	private explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3706124 "DrawOvalOp"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 7039628 // <generalisation>
	relation 7039500 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 7039628 // <generalisation>
	  b parent class_ref 3705484 // DrawStrokableOp
      end

      operation 15706252 "DrawOvalOp"
	cpp_inline public explicit_return_type ""
	nparams 5
	  param in name "left" explicit_type "float"
	  param in name "top" explicit_type "float"
	  param in name "right" explicit_type "float"
	  param in name "bottom" explicit_type "float"
	  param inout name "paint" explicit_type "SkPaint"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} * ${p4}${v4}${)}${volatile}${throw} : DrawStrokableOp(left, top, right, bottom, paint) {};
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 15706380 "applyDraw"
	cpp_virtual cpp_inline public explicit_return_type "status_t"
	nparams 2
	  param inout name "renderer" type class_ref 431116 // OpenGLRenderer
	  param inout name "dirty" type class_ref 431244 // Rect
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        return renderer.drawOval(mLocalBounds.left, mLocalBounds.top,
                mLocalBounds.right, mLocalBounds.bottom, getPaint(renderer));
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15706508 "output"
	cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "level" explicit_type "int"
	  param in name "logFlags" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        OP_LOG(\"Draw Oval \"RECT_STRING, RECT_ARGS(mLocalBounds));
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15706636 "name"
	cpp_virtual cpp_inline public explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} { return \"DrawOval\"; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 3706252 "DrawArcOp"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 7039756 // <generalisation>
	relation 7039628 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 7039756 // <generalisation>
	  b parent class_ref 3705484 // DrawStrokableOp
      end

      operation 15706764 "DrawArcOp"
	cpp_inline public explicit_return_type ""
	nparams 8
	  param in name "left" explicit_type "float"
	  param in name "top" explicit_type "float"
	  param in name "right" explicit_type "float"
	  param in name "bottom" explicit_type "float"
	  param in name "startAngle" explicit_type "float"
	  param in name "sweepAngle" explicit_type "float"
	  param in name "useCenter" explicit_type "bool"
	  param inout name "paint" explicit_type "SkPaint"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} ${p5}${v5}, ${t6} ${p6}${v6}, ${t7} * ${p7}${v7}${)}${volatile}${throw} : DrawStrokableOp(left, top, right, bottom, paint),
            mStartAngle(startAngle), mSweepAngle(sweepAngle), mUseCenter(useCenter) {};
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 15706892 "applyDraw"
	cpp_virtual cpp_inline public explicit_return_type "status_t"
	nparams 2
	  param inout name "renderer" type class_ref 431116 // OpenGLRenderer
	  param inout name "dirty" type class_ref 431244 // Rect
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        return renderer.drawArc(mLocalBounds.left, mLocalBounds.top,
                mLocalBounds.right, mLocalBounds.bottom,
                mStartAngle, mSweepAngle, mUseCenter, getPaint(renderer));
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15707020 "output"
	cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "level" explicit_type "int"
	  param in name "logFlags" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        OP_LOG(\"Draw Arc \"RECT_STRING\", start %f, sweep %f, useCenter %d\",
                RECT_ARGS(mLocalBounds), mStartAngle, mSweepAngle, mUseCenter);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15707148 "name"
	cpp_virtual cpp_inline public explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} { return \"DrawArc\"; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 13226764 "mStartAngle"
	private explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13226892 "mSweepAngle"
	private explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13227020 "mUseCenter"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3706380 "DrawPathOp"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 7039884 // <generalisation>
	relation 7039756 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 7039884 // <generalisation>
	  b parent class_ref 3702156 // DrawBoundedOp
      end

      operation 15707276 "DrawPathOp"
	cpp_inline public explicit_return_type ""
	nparams 2
	  param inout name "path" explicit_type "SkPath"
	  param inout name "paint" explicit_type "SkPaint"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${volatile}${throw} : DrawBoundedOp(paint), mPath(path) {
        float left, top, offset;
        uint32_t width, height;
        PathCache::computePathBounds(path, paint, left, top, offset, width, height);
        left -= offset;
        top -= offset;
        mLocalBounds.set(left, top, left + width, top + height);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 15707404 "applyDraw"
	cpp_virtual cpp_inline public explicit_return_type "status_t"
	nparams 2
	  param inout name "renderer" type class_ref 431116 // OpenGLRenderer
	  param inout name "dirty" type class_ref 431244 // Rect
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        return renderer.drawPath(mPath, getPaint(renderer));
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15707532 "onDefer"
	cpp_virtual cpp_inline public explicit_return_type "bool"
	nparams 3
	  param inout name "renderer" type class_ref 431116 // OpenGLRenderer
	  param inout name "batchId" explicit_type "int"
	  param inout name "mergeId" type class_ref 3699852 // mergeid_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract} {
        SkPaint* paint = getPaint(renderer);
        renderer.getCaches().pathCache.precache(mPath, paint);

        *batchId = DeferredDisplayList::kOpBatch_AlphaMaskTexture;
        return false;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15707660 "output"
	cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "level" explicit_type "int"
	  param in name "logFlags" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        OP_LOG(\"Draw Path %p in \"RECT_STRING, mPath, RECT_ARGS(mLocalBounds));
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15707788 "name"
	cpp_virtual cpp_inline public explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} { return \"DrawPath\"; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 13227148 "mPath"
	private explicit_type "SkPath"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3706508 "DrawLinesOp"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 7040012 // <generalisation>
	relation 7039884 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 7040012 // <generalisation>
	  b parent class_ref 3702156 // DrawBoundedOp
      end

      operation 15707916 "DrawLinesOp"
	cpp_inline public explicit_return_type ""
	nparams 3
	  param inout name "points" explicit_type "float"
	  param in name "count" explicit_type "int"
	  param inout name "paint" explicit_type "SkPaint"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * ${p2}${v2}${)}${volatile}${throw} : DrawBoundedOp(points, count, paint),
            mPoints(points), mCount(count) {
        mLocalBounds.outset(strokeWidthOutset());
    };
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 15708044 "applyDraw"
	cpp_virtual cpp_inline public explicit_return_type "status_t"
	nparams 2
	  param inout name "renderer" type class_ref 431116 // OpenGLRenderer
	  param inout name "dirty" type class_ref 431244 // Rect
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        return renderer.drawLines(mPoints, mCount, getPaint(renderer));
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15708172 "output"
	cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "level" explicit_type "int"
	  param in name "logFlags" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        OP_LOG(\"Draw Lines count %d\", mCount);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15708300 "name"
	cpp_virtual cpp_inline public explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} { return \"DrawLines\"; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15708428 "onDefer"
	cpp_virtual cpp_inline public explicit_return_type "bool"
	nparams 3
	  param inout name "renderer" type class_ref 431116 // OpenGLRenderer
	  param inout name "batchId" explicit_type "int"
	  param inout name "mergeId" type class_ref 3699852 // mergeid_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract} {
        *batchId = mPaint->isAntiAlias() ?
                DeferredDisplayList::kOpBatch_AlphaVertices :
                DeferredDisplayList::kOpBatch_Vertices;
        return false;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 13227276 "mPoints"
	protected explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13227404 "mCount"
	protected explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3706636 "DrawPointsOp"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 7040140 // <generalisation>
	relation 7040012 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 7040140 // <generalisation>
	  b parent class_ref 3706508 // DrawLinesOp
      end

      operation 15708556 "DrawPointsOp"
	cpp_inline public explicit_return_type ""
	nparams 3
	  param inout name "points" explicit_type "float"
	  param in name "count" explicit_type "int"
	  param inout name "paint" explicit_type "SkPaint"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * ${p2}${v2}${)}${volatile}${throw} : DrawLinesOp(points, count, paint) {};
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 15708684 "applyDraw"
	cpp_virtual cpp_inline public explicit_return_type "status_t"
	nparams 2
	  param inout name "renderer" type class_ref 431116 // OpenGLRenderer
	  param inout name "dirty" type class_ref 431244 // Rect
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        return renderer.drawPoints(mPoints, mCount, getPaint(renderer));
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15708812 "output"
	cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "level" explicit_type "int"
	  param in name "logFlags" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        OP_LOG(\"Draw Points count %d\", mCount);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15708940 "name"
	cpp_virtual cpp_inline public explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} { return \"DrawPoints\"; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 3706764 "DrawSomeTextOp"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 7040268 // <generalisation>
	relation 7040140 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 7040268 // <generalisation>
	  b parent class_ref 3700748 // DrawOp
      end

      operation 15709068 "DrawSomeTextOp"
	cpp_inline public explicit_return_type ""
	nparams 4
	  param in name "text" explicit_type "char"
	  param in name "bytesCount" explicit_type "int"
	  param in name "count" explicit_type "int"
	  param inout name "paint" explicit_type "SkPaint"
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} * ${p3}${v3}${)}${volatile}${throw} : DrawOp(paint), mText(text), mBytesCount(bytesCount), mCount(count) {};
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 15709196 "output"
	cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "level" explicit_type "int"
	  param in name "logFlags" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        OP_LOG(\"Draw some text, %d bytes\", mBytesCount);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15709324 "onDefer"
	cpp_virtual cpp_inline public explicit_return_type "bool"
	nparams 3
	  param inout name "renderer" type class_ref 431116 // OpenGLRenderer
	  param inout name "batchId" explicit_type "int"
	  param inout name "mergeId" type class_ref 3699852 // mergeid_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract} {
        SkPaint* paint = getPaint(renderer);
        FontRenderer& fontRenderer = renderer.getCaches().fontRenderer->getFontRenderer(paint);
        fontRenderer.precache(paint, mText, mCount, mat4::identity());

        *batchId = mPaint->getColor() == 0xff000000 ?
                DeferredDisplayList::kOpBatch_Text :
                DeferredDisplayList::kOpBatch_ColorText;

        return false;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 13227532 "mText"
	const_attribute protected explicit_type "char"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13227660 "mBytesCount"
	protected explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13227788 "mCount"
	protected explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3706892 "DrawTextOnPathOp"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 7040396 // <generalisation>
	relation 7040268 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 7040396 // <generalisation>
	  b parent class_ref 3706764 // DrawSomeTextOp
      end

      operation 15709452 "DrawTextOnPathOp"
	cpp_inline public explicit_return_type ""
	nparams 7
	  param in name "text" explicit_type "char"
	  param in name "bytesCount" explicit_type "int"
	  param in name "count" explicit_type "int"
	  param inout name "path" explicit_type "SkPath"
	  param in name "hOffset" explicit_type "float"
	  param in name "vOffset" explicit_type "float"
	  param inout name "paint" explicit_type "SkPaint"
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} * ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} ${p5}${v5}, ${t6} * ${p6}${v6}${)}${volatile}${throw} : DrawSomeTextOp(text, bytesCount, count, paint),
            mPath(path), mHOffset(hOffset), mVOffset(vOffset) {
        /* TODO: inherit from DrawBounded and init mLocalBounds */
    };
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 15709580 "applyDraw"
	cpp_virtual cpp_inline public explicit_return_type "status_t"
	nparams 2
	  param inout name "renderer" type class_ref 431116 // OpenGLRenderer
	  param inout name "dirty" type class_ref 431244 // Rect
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        return renderer.drawTextOnPath(mText, mBytesCount, mCount, mPath,
                mHOffset, mVOffset, getPaint(renderer));
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15709708 "name"
	cpp_virtual cpp_inline public explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} { return \"DrawTextOnPath\"; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 13227916 "mPath"
	private explicit_type "SkPath"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13228044 "mHOffset"
	private explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13228172 "mVOffset"
	private explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3707020 "DrawPosTextOp"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 7040524 // <generalisation>
	relation 7040396 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 7040524 // <generalisation>
	  b parent class_ref 3706764 // DrawSomeTextOp
      end

      operation 15709836 "DrawPosTextOp"
	cpp_inline public explicit_return_type ""
	nparams 5
	  param in name "text" explicit_type "char"
	  param in name "bytesCount" explicit_type "int"
	  param in name "count" explicit_type "int"
	  param in name "positions" explicit_type "float"
	  param inout name "paint" explicit_type "SkPaint"
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, const ${t3} * ${p3}${v3}, ${t4} * ${p4}${v4}${)}${volatile}${throw} : DrawSomeTextOp(text, bytesCount, count, paint), mPositions(positions) {
        /* TODO: inherit from DrawBounded and init mLocalBounds */
    };
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 15709964 "applyDraw"
	cpp_virtual cpp_inline public explicit_return_type "status_t"
	nparams 2
	  param inout name "renderer" type class_ref 431116 // OpenGLRenderer
	  param inout name "dirty" type class_ref 431244 // Rect
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        return renderer.drawPosText(mText, mBytesCount, mCount, mPositions, getPaint(renderer));
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15710092 "name"
	cpp_virtual cpp_inline public explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} { return \"DrawPosText\"; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 13228300 "mPositions"
	const_attribute private explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3707148 "DrawTextOp"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 7040652 // <generalisation>
	relation 7040524 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 7040652 // <generalisation>
	  b parent class_ref 3702156 // DrawBoundedOp
      end

      operation 15710220 "DrawTextOp"
	cpp_inline public explicit_return_type ""
	nparams 8
	  param in name "text" explicit_type "char"
	  param in name "bytesCount" explicit_type "int"
	  param in name "count" explicit_type "int"
	  param in name "x" explicit_type "float"
	  param in name "y" explicit_type "float"
	  param in name "positions" explicit_type "float"
	  param inout name "paint" explicit_type "SkPaint"
	  param in name "length" explicit_type "float"
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, const ${t5} * ${p5}${v5}, ${t6} * ${p6}${v6}, ${t7} ${p7}${v7}${)}${volatile}${throw} : DrawBoundedOp(paint), mText(text), mBytesCount(bytesCount), mCount(count),
            mX(x), mY(y), mPositions(positions), mLength(length) {
        // duplicates bounds calculation from OpenGLRenderer::drawText, but doesn't alter mX
        SkPaint::FontMetrics metrics;
        paint->getFontMetrics(&metrics, 0.0f);
        switch (paint->getTextAlign()) {
        case SkPaint::kCenter_Align:
            x -= length / 2.0f;
            break;
        case SkPaint::kRight_Align:
            x -= length;
            break;
        default:
            break;
        }
        mLocalBounds.set(x, mY + metrics.fTop, x + length, mY + metrics.fBottom);
        memset(&mPrecacheTransform.data[0], 0xff, 16 * sizeof(float));
    };
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 15710348 "onDefer"
	cpp_virtual cpp_inline public explicit_return_type "bool"
	nparams 3
	  param inout name "renderer" type class_ref 431116 // OpenGLRenderer
	  param inout name "batchId" explicit_type "int"
	  param inout name "mergeId" type class_ref 3699852 // mergeid_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract} {
        SkPaint* paint = getPaint(renderer);
        FontRenderer& fontRenderer = renderer.getCaches().fontRenderer->getFontRenderer(paint);
        const mat4& transform = renderer.findBestFontTransform(state.mMatrix);
        if (mPrecacheTransform != transform) {
            fontRenderer.precache(paint, mText, mCount, transform);
            mPrecacheTransform = transform;
        }
        *batchId = mPaint->getColor() == 0xff000000 ?
                DeferredDisplayList::kOpBatch_Text :
                DeferredDisplayList::kOpBatch_ColorText;

        *mergeId = (mergeid_t)mPaint->getColor();

        // don't merge decorated text - the decorations won't draw in order
        bool noDecorations = !(mPaint->getFlags() & (SkPaint::kUnderlineText_Flag |
                        SkPaint::kStrikeThruText_Flag));
        return mergeAllowed() && noDecorations;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15710476 "applyDraw"
	cpp_virtual cpp_inline public explicit_return_type "status_t"
	nparams 2
	  param inout name "renderer" type class_ref 431116 // OpenGLRenderer
	  param inout name "dirty" type class_ref 431244 // Rect
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        return renderer.drawText(mText, mBytesCount, mCount, mX, mY,
                mPositions, getPaint(renderer), mLength);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15710604 "multiDraw"
	cpp_virtual cpp_inline public explicit_return_type "status_t"
	nparams 4
	  param inout name "renderer" type class_ref 431116 // OpenGLRenderer
	  param inout name "dirty" type class_ref 431244 // Rect
	  param in name "ops" explicit_type "Vector<DrawOp*>"
	  param in name "bounds" type class_ref 431244 // Rect
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} & ${p1}${v1}, const ${t2} & ${p2}${v2}, const ${t3} & ${p3}${v3}${)}${const}${volatile}${throw}${abstract} {
        status_t status = DrawGlInfo::kStatusDone;
        renderer.setFullScreenClip(); // ensure merged ops aren't clipped
        for (unsigned int i = 0; i < ops.size(); i++) {
            DrawOpMode drawOpMode = (i == ops.size() - 1) ? kDrawOpMode_Flush : kDrawOpMode_Defer;
            renderer.restoreDisplayState(ops[i]->state, true); // restore all but the clip

            DrawTextOp& op = *((DrawTextOp*)ops[i]);
            status |= renderer.drawText(op.mText, op.mBytesCount, op.mCount, op.mX, op.mY,
                    op.mPositions, op.getPaint(renderer), op.mLength, drawOpMode);
        }
        return status;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15710732 "output"
	cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "level" explicit_type "int"
	  param in name "logFlags" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        OP_LOG(\"Draw Text of count %d, bytes %d\", mCount, mBytesCount);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15710860 "name"
	cpp_virtual cpp_inline public explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} { return \"DrawText\"; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 13228428 "mText"
	const_attribute private explicit_type "char"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13228556 "mBytesCount"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13228684 "mCount"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13228812 "mX"
	private explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13228940 "mY"
	private explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13229068 "mPositions"
	const_attribute private explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13229196 "mLength"
	private explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 7040780 // mPrecacheTransform (<directional composition>)
	relation 7040652 *-->
	  a role_name "mPrecacheTransform" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7040780 // mPrecacheTransform (<directional composition>)
	  b parent class_ref 434444 // mat4
      end
    end

    class 3707276 "DrawFunctorOp"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "/////////////////////////////////////////////////////////////////////////////
 SPECIAL DRAW OPERATIONS
/////////////////////////////////////////////////////////////////////////////"
      classrelation 7040908 // <generalisation>
	relation 7040780 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 7040908 // <generalisation>
	  b parent class_ref 3700748 // DrawOp
      end

      operation 15710988 "DrawFunctorOp"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param inout name "functor" explicit_type "Functor"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}${)}${volatile}${throw} : DrawOp(0), mFunctor(functor) {};
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 15711116 "applyDraw"
	cpp_virtual cpp_inline public explicit_return_type "status_t"
	nparams 2
	  param inout name "renderer" type class_ref 431116 // OpenGLRenderer
	  param inout name "dirty" type class_ref 431244 // Rect
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        renderer.startMark(\"GL functor\");
        status_t ret = renderer.callDrawGLFunction(mFunctor, dirty);
        renderer.endMark();
        return ret;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15711244 "output"
	cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "level" explicit_type "int"
	  param in name "logFlags" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        OP_LOG(\"Draw Functor %p\", mFunctor);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15711372 "name"
	cpp_virtual cpp_inline public explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} { return \"DrawFunctor\"; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 13229324 "mFunctor"
	private explicit_type "Functor"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3707404 "DrawDisplayListOp"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 7041036 // <generalisation>
	relation 7040908 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 7041036 // <generalisation>
	  b parent class_ref 3702156 // DrawBoundedOp
      end

      operation 15711500 "DrawDisplayListOp"
	cpp_inline public explicit_return_type ""
	nparams 2
	  param inout name "displayList" type class_ref 430604 // DisplayList
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${volatile}${throw} : DrawBoundedOp(0, 0, displayList->getWidth(), displayList->getHeight(), 0),
            mDisplayList(displayList), mFlags(flags) {};
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 15711628 "defer"
	cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 4
	  param inout name "deferStruct" type class_ref 3701132 // DeferStateStruct
	  param in name "saveCount" explicit_type "int"
	  param in name "level" explicit_type "int"
	  param in name "useQuickReject" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract} {
        if (mDisplayList && mDisplayList->isRenderable()) {
            mDisplayList->defer(deferStruct, level + 1);
        }
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15711756 "replay"
	cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 4
	  param inout name "replayStruct" type class_ref 3701260 // ReplayStateStruct
	  param in name "saveCount" explicit_type "int"
	  param in name "level" explicit_type "int"
	  param in name "useQuickReject" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract} {
        if (mDisplayList && mDisplayList->isRenderable()) {
            mDisplayList->replay(replayStruct, level + 1);
        }
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15711884 "applyDraw"
	cpp_virtual cpp_inline public explicit_return_type "status_t"
	nparams 2
	  param inout name "renderer" type class_ref 431116 // OpenGLRenderer
	  param inout name "dirty" type class_ref 431244 // Rect
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        return DrawGlInfo::kStatusDone;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " NOT USED since replay() is overridden"
      end

      operation 15712012 "output"
	cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "level" explicit_type "int"
	  param in name "logFlags" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        OP_LOG(\"Draw Display List %p, flags %#x\", mDisplayList, mFlags);
        if (mDisplayList && (logFlags & kOpLogFlag_Recurse)) {
            mDisplayList->output(level + 1);
        }
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15712140 "name"
	cpp_virtual cpp_inline public explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} { return \"DrawDisplayList\"; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 7041164 // mDisplayList (<unidirectional association>)
	relation 7041036 --->
	  a role_name "mDisplayList" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7041164 // mDisplayList (<unidirectional association>)
	  b parent class_ref 430604 // DisplayList
      end

      attribute 13229452 "mFlags"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3707532 "DrawLayerOp"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 7041292 // <generalisation>
	relation 7041164 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 7041292 // <generalisation>
	  b parent class_ref 3700748 // DrawOp
      end

      operation 15712268 "DrawLayerOp"
	cpp_inline public explicit_return_type ""
	nparams 3
	  param inout name "layer" type class_ref 431756 // Layer
	  param in name "x" explicit_type "float"
	  param in name "y" explicit_type "float"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${volatile}${throw} : DrawOp(0), mLayer(layer), mX(x), mY(y) {};
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 15712396 "applyDraw"
	cpp_virtual cpp_inline public explicit_return_type "status_t"
	nparams 2
	  param inout name "renderer" type class_ref 431116 // OpenGLRenderer
	  param inout name "dirty" type class_ref 431244 // Rect
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        return renderer.drawLayer(mLayer, mX, mY);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15712524 "output"
	cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "level" explicit_type "int"
	  param in name "logFlags" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        OP_LOG(\"Draw Layer %p at %f %f\", mLayer, mX, mY);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15712652 "name"
	cpp_virtual cpp_inline public explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} { return \"DrawLayer\"; };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 7041420 // mLayer (<unidirectional association>)
	relation 7041292 --->
	  a role_name "mLayer" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7041420 // mLayer (<unidirectional association>)
	  b parent class_ref 431756 // Layer
      end

      attribute 13229580 "mX"
	private explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13229708 "mY"
	private explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3707660 "DrawModifiers"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 7041548 // mShader (<unidirectional association>)
	relation 7041420 --->
	  a role_name "mShader" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7041548 // mShader (<unidirectional association>)
	  b parent class_ref 431500 // SkiaShader
      end

      classrelation 7041676 // mColorFilter (<unidirectional association>)
	relation 7041548 --->
	  a role_name "mColorFilter" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7041676 // mColorFilter (<unidirectional association>)
	  b parent class_ref 431628 // SkiaColorFilter
      end

      attribute 13229836 "mOverrideLayerAlpha"
	public explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13229964 "mHasShadow"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13230092 "mShadowRadius"
	public explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13230220 "mShadowDx"
	public explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13230348 "mShadowDy"
	public explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13230476 "mShadowColor"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13230604 "mHasDrawFilter"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13230732 "mPaintFilterClearBits"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13230860 "mPaintFilterSetBits"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3707788 "StateDeferFlags"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}
};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      attribute 13230988 "kStateDeferFlag_Draw"
	public type class_ref 3707788 // StateDeferFlags
	init_value " 0x1"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13231116 "kStateDeferFlag_Clip"
	public type class_ref 3707788 // StateDeferFlags
	init_value " 0x2
"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3707916 "DrawOpMode"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}
};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      attribute 13231244 "kDrawOpMode_Immediate"
	public type class_ref 3707916 // DrawOpMode
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13231372 "kDrawOpMode_Defer"
	public type class_ref 3707916 // DrawOpMode
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13231500 "kDrawOpMode_Flush"
	public type class_ref 3707916 // DrawOpMode
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3708044 "ShapeType"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}
};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " struct PathTexture"
      attribute 13231884 "kShapeNone"
	public type class_ref 3708044 // ShapeType
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13232012 "kShapeRect"
	public type class_ref 3708044 // ShapeType
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13232140 "kShapeRoundRect"
	public type class_ref 3708044 // ShapeType
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13232268 "kShapeCircle"
	public type class_ref 3708044 // ShapeType
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13232396 "kShapeOval"
	public type class_ref 3708044 // ShapeType
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13232524 "kShapeArc"
	public type class_ref 3708044 // ShapeType
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13232652 "kShapePath"
	public type class_ref 3708044 // ShapeType
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3708172 "PathDescription"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 7042316 // type (<directional composition>)
	relation 7042188 *-->
	  a role_name "type" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7042316 // type (<directional composition>)
	  b parent class_ref 3708044 // ShapeType
      end

      attribute 13232780 "join"
	public explicit_type "SkPaint::Join"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13232908 "cap"
	public explicit_type "SkPaint::Cap"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13233036 "style"
	public explicit_type "SkPaint::Style"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13233164 "miter"
	public explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13233292 "strokeWidth"
	public explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13233420 "pathEffect"
	public explicit_type "SkPathEffect"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      class 3708300 "Shape"
	visibility package stereotype "union"
	cpp_decl "${comment}${template}union ${name} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	class 3708428 "Path"
	  visibility package stereotype "struct"
	  cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
	  java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  
	  attribute 13233548 "mPath"
	    public explicit_type "SkPath"
	    cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	  end
	end

	class 3708556 "RoundRect"
	  visibility package stereotype "struct"
	  cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
	  java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  
	  attribute 13233676 "mWidth"
	    public explicit_type "float"
	    cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	  end

	  attribute 13233804 "mHeight"
	    public explicit_type "float"
	    cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	  end

	  attribute 13233932 "mRx"
	    public explicit_type "float"
	    cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	  end

	  attribute 13234060 "mRy"
	    public explicit_type "float"
	    cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	  end
	end

	class 3708684 "Circle"
	  visibility package stereotype "struct"
	  cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
	  java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  
	  attribute 13234188 "mRadius"
	    public explicit_type "float"
	    cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	  end
	end

	class 3708812 "Oval"
	  visibility package stereotype "struct"
	  cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
	  java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  
	  attribute 13234316 "mWidth"
	    public explicit_type "float"
	    cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	  end

	  attribute 13234444 "mHeight"
	    public explicit_type "float"
	    cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	  end
	end

	class 3708940 "Rect"
	  visibility package stereotype "struct"
	  cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
	  java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  
	  attribute 13234572 "mWidth"
	    public explicit_type "float"
	    cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	  end

	  attribute 13234700 "mHeight"
	    public explicit_type "float"
	    cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	  end
	end

	class 3709068 "Arc"
	  visibility package stereotype "struct"
	  cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
	  java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  
	  attribute 13234828 "mWidth"
	    public explicit_type "float"
	    cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	  end

	  attribute 13234956 "mHeight"
	    public explicit_type "float"
	    cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	  end

	  attribute 13235084 "mStartAngle"
	    public explicit_type "float"
	    cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	  end

	  attribute 13235212 "mSweepAngle"
	    public explicit_type "float"
	    cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	  end

	  attribute 13235340 "mUseCenter"
	    public explicit_type "bool"
	    cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	  end
	end
      end

      operation 15712780 "PathDescription"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 15712908 "PathDescription"
	public explicit_return_type ""
	nparams 2
	  param in name "shapeType" type class_ref 3708044 // ShapeType
	  param inout name "paint" explicit_type "SkPaint"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 15713036 "hash"
	const public explicit_return_type "hash_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15713164 "compare"
	const public explicit_return_type "int"
	nparams 1
	  param in name "rhs" type class_ref 3708172 // PathDescription
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15713292 "operator =="
	const cpp_inline public explicit_return_type "bool"
	nparams 1
	  param in name "other" type class_ref 3708172 // PathDescription
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        return compare(other) == 0;
    };
"
	
	
	
	
      end

      operation 15713420 "operator !="
	const cpp_inline public explicit_return_type "bool"
	nparams 1
	  param in name "other" type class_ref 3708172 // PathDescription
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        return compare(other) != 0;
    };
"
	
	
	
	
      end

      operation 15713548 "strictly_order_type"
	friend cpp_inline public explicit_return_type "int"
	nparams 2
	  param in name "lhs" type class_ref 3708172 // PathDescription
	  param in name "rhs" type class_ref 3708172 // PathDescription
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        return lhs.compare(rhs) < 0;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15713676 "compare_type"
	friend cpp_inline public explicit_return_type "int"
	nparams 2
	  param in name "lhs" type class_ref 3708172 // PathDescription
	  param in name "rhs" type class_ref 3708172 // PathDescription
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        return lhs.compare(rhs);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 15713804 "hash_type"
	friend cpp_inline public explicit_return_type "hash_t"
	nparams 1
	  param in name "entry" type class_ref 3708172 // PathDescription
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        return entry.hash();
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 3709196 "PixelBuffer"
      abstract visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * Represents a pixel buffer. A pixel buffer will be backed either by a
 * PBO on OpenGL ES 3.0 and higher or by an array of uint8_t on other
 * versions. If the buffer is backed by a PBO it will of type
 * GL_PIXEL_UNPACK_BUFFER.
 *
 * To read from or write into a PixelBuffer you must first map the
 * buffer using the map(AccessMode) method. This method returns a
 * pointer to the beginning of the buffer.
 *
 * Before the buffer can be used by the GPU, for instance to upload
 * a texture, you must first unmap the buffer. To do so, call the
 * unmap() method.
 *
 * Mapping and unmapping a PixelBuffer can have the side effect of
 * changing the currently active GL_PIXEL_UNPACK_BUFFER. It is
 * therefore recommended to call Caches::unbindPixelbuffer() after
 * using a PixelBuffer to upload to a texture."
      class 3709324 "BufferType"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum ${name} {
${items}
};
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 13235468 "kBufferType_Auto"
	  public type class_ref 3709324 // BufferType
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 13235596 "kBufferType_CPU"
	  public type class_ref 3709324 // BufferType
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      class 3709452 "AccessMode"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum ${name} {
${items}
};
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 13235724 "kAccessMode_None"
	  public type class_ref 3709452 // AccessMode
	  init_value " 0"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 13235852 "kAccessMode_Read"
	  public type class_ref 3709452 // AccessMode
	  init_value " GL_MAP_READ_BIT"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 13235980 "kAccessMode_Write"
	  public type class_ref 3709452 // AccessMode
	  init_value " GL_MAP_WRITE_BIT"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 13236108 "kAccessMode_ReadWrite"
	  public type class_ref 3709452 // AccessMode
	  init_value " GL_MAP_READ_BIT | GL_MAP_WRITE_BIT
    "
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      operation 15713932 "create"
	class_operation public return_type class_ref 3709196 // PixelBuffer
	nparams 4
	  param in name "format" explicit_type "GLenum"
	  param in name "width" explicit_type "uint32_t"
	  param in name "height" explicit_type "uint32_t"
	  param in name "type" type class_ref 3709324 // BufferType
	    defaultvalue "kBufferType_Auto"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "*
     * Creates a new PixelBuffer object with the specified format and
     * dimensions. The buffer is immediately allocated.
     *
     * The buffer type specifies how the buffer should be allocated.
     * By default this method will automatically choose whether to allocate
     * a CPU or GPU buffer."
      end

      operation 15714060 "~PixelBuffer"
	cpp_virtual cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {
    };
"
	
	
	
	
      end

      operation 15714188 "getFormat"
	const cpp_inline public explicit_return_type "GLenum"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return mFormat;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "*
     * Returns the format of this render buffer."
      end

      operation 15714316 "map"
	abstract cpp_virtual public explicit_return_type "uint8_t"
	nparams 1
	  param in name "mode" type class_ref 3709452 // AccessMode
	    defaultvalue "kAccessMode_ReadWrite"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "*
     * Maps this before with the specified access mode. This method
     * returns a pointer to the region of memory where the buffer was
     * mapped.
     *
     * If the buffer is already mapped when this method is invoked,
     * this method will return the previously mapped pointer. The
     * access mode can only be changed by calling unmap() first.
     *
     * The specified access mode cannot be kAccessMode_None."
      end

      operation 15714444 "unmap"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "*
     * Unmaps this buffer, if needed. After the buffer is unmapped,
     * the pointer previously returned by map() becomes invalid and
     * should not be used. After calling this method, getMappedPointer()
     * will always return NULL."
      end

      operation 15714572 "getAccessMode"
	const cpp_inline public return_type class_ref 3709452 // AccessMode
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return mAccessMode;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "*
     * Returns the current access mode for this buffer. If the buffer
     * is not mapped, this method returns kAccessMode_None."
      end

      operation 15714700 "getMappedPointer"
	abstract const cpp_virtual public explicit_return_type "uint8_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "*
     * Returns the currently mapped pointer. Returns NULL if the buffer
     * is not mapped."
      end

      operation 15714828 "upload"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 5
	  param in name "x" explicit_type "uint32_t"
	  param in name "y" explicit_type "uint32_t"
	  param in name "width" explicit_type "uint32_t"
	  param in name "height" explicit_type "uint32_t"
	  param in name "offset" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "*
     * Upload the specified rectangle of this pixe buffer as a
     * GL_TEXTURE_2D texture. Calling this method will trigger
     * an unmap() if necessary."
      end

      operation 15714956 "getWidth"
	const cpp_inline public explicit_return_type "uint32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return mWidth;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "*
     * Returns the width of the render buffer in pixels."
      end

      operation 15715084 "getHeight"
	const cpp_inline public explicit_return_type "uint32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return mHeight;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "*
     * Returns the height of the render buffer in pixels."
      end

      operation 15715212 "getSize"
	const cpp_inline public explicit_return_type "uint32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return mWidth * mHeight * formatSize(mFormat);
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "*
     * Returns the size of this pixel buffer in bytes."
      end

      operation 15715340 "formatSize"
	class_operation cpp_inline public explicit_return_type "uint32_t"
	nparams 1
	  param in name "format" explicit_type "GLenum"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        switch (format) {
            case GL_ALPHA:
                return 1;
            case GL_RGBA:
                return 4;
        }
        return 0;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "*
     * Returns the number of bytes per pixel in the specified format.
     *
     * Supported formats:
     *      GL_ALPHA
     *      GL_RGBA"
      end

      operation 15715468 "PixelBuffer"
	cpp_inline protected explicit_return_type ""
	nparams 3
	  param in name "format" explicit_type "GLenum"
	  param in name "width" explicit_type "uint32_t"
	  param in name "height" explicit_type "uint32_t"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${volatile}${throw} :
            mFormat(format), mWidth(width), mHeight(height), mAccessMode(kAccessMode_None) {
    };
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
	comment "*
     * Creates a new render buffer in the specified format and dimensions.
     * The format must be GL_ALPHA or GL_RGBA."
      end

      attribute 13236236 "mFormat"
	protected explicit_type "GLenum"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13236364 "mWidth"
	protected explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13236492 "mHeight"
	protected explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 7042444 // mAccessMode (<directional composition>)
	relation 7042316 *-->
	  a role_name "mAccessMode" protected
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7042444 // mAccessMode (<directional composition>)
	  b parent class_ref 3709452 // AccessMode
      end
    end

    class 3709580 "DebugLevel"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}
};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * Debug levels. Debug levels are used as flags."
      attribute 13236620 "kDebugDisabled"
	public type class_ref 3709580 // DebugLevel
	init_value " 0"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13236748 "kDebugMemory"
	public type class_ref 3709580 // DebugLevel
	init_value " 1"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13236876 "kDebugCaches"
	public type class_ref 3709580 // DebugLevel
	init_value " 2"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13237004 "kDebugMoreCaches"
	public type class_ref 3709580 // DebugLevel
	init_value " kDebugMemory | kDebugCaches
"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3838092 "Caches"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 7294476 // layerCache (<unidirectional association>)
	relation 7294348 --->
	  a role_name "layerCache" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 7294476 // layerCache (<unidirectional association>)
	  b parent class_ref 434956 // LayerCache
      end
    end
  end

  deploymentview 144268 "hwui"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 202892 "Caches"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 430220 // CacheLogger
      end
    end

    artifact 203020 "DisplayListLogBuffer"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 430476 // typedef25
	class_ref 430348 // DisplayListLogBuffer
      end
    end

    artifact 203148 "DisplayListRenderer"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 430604 // DisplayList
	class_ref 430732 // DisplayListRenderer
      end
    end

    artifact 203276 "Dither"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 432012 // Dither
      end
    end

    artifact 203404 "Extensions"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 432268 // Extensions
      end
    end

    artifact 203532 "FboCache"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 432396 // FboCache
      end
    end

    artifact 203660 "FontRenderer"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 432524 // FontRenderer
      end
    end

    artifact 203788 "GammaFontRenderer"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 433164 // GammaFontRenderer
	class_ref 433420 // ShaderGammaFontRenderer
	class_ref 433548 // LookupGammaFontRenderer
	class_ref 433676 // Lookup3GammaFontRenderer
      end
    end

    artifact 203916 "GradientCache"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 433932 // GradientCacheEntry
	class_ref 434060 // GradientCache
      end
    end

    artifact 204044 "Layer"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 431756 // Layer
      end
    end

    artifact 204172 "LayerCache"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 434956 // LayerCache
      end
    end

    artifact 204300 "LayerRenderer"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 435212 // LayerRenderer
      end
    end

    artifact 204428 "Matrix"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 434444 // mat4
      end
    end

    artifact 204556 "OpenGLRenderer"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 431116 // OpenGLRenderer
	class_ref 3707660 // DrawModifiers
	class_ref 3707788 // StateDeferFlags
	class_ref 3707916 // DrawOpMode
	class_ref 3701900 // DeferredDisplayState
      end
    end

    artifact 204684 "Patch"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 435724 // Patch
      end
    end

    artifact 204812 "PatchCache"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 435852 // PatchCache
      end
    end

    artifact 204940 "PathCache"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 436108 // PathCacheEntry
	class_ref 436364 // PathCache
	class_ref 3708044 // ShapeType
	class_ref 3708172 // PathDescription
      end
    end

    artifact 205068 "PathRenderer"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 436620 // VertexBuffer
	class_ref 436748 // PathRenderer
      end
    end

    artifact 205196 "Program"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 436876 // programid
	class_ref 433292 // ProgramDescription
	class_ref 432140 // Program
      end
    end

    artifact 205324 "ProgramCache"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 437388 // ProgramCache
      end
    end

    artifact 205580 "Rect"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 431244 // Rect
      end
    end

    artifact 205708 "ResourceCache"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 437772 // ResourceType
	class_ref 437900 // ResourceReference
      end
    end

    artifact 205836 "ShapeCache"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 435340 // PathTexture
	class_ref 436236 // ShapeCacheEntry
	class_ref 438156 // RoundRectShapeCacheEntry
	class_ref 438284 // CircleShapeCacheEntry
	class_ref 438412 // OvalShapeCacheEntry
	class_ref 438540 // RectShapeCacheEntry
	class_ref 438668 // ArcShapeCacheEntry
	class_ref 436492 // ShapeCache
	class_ref 438924 // RoundRectShapeCache
	class_ref 439052 // CircleShapeCache
	class_ref 439180 // OvalShapeCache
	class_ref 439308 // RectShapeCache
	class_ref 439436 // ArcShapeCache
      end
    end

    artifact 205964 "SkiaColorFilter"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 431628 // SkiaColorFilter
	class_ref 439692 // SkiaColorMatrixFilter
	class_ref 439820 // SkiaLightingFilter
	class_ref 439948 // SkiaBlendFilter
      end
    end

    artifact 206092 "SkiaShader"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 431500 // SkiaShader
	class_ref 440332 // SkiaBitmapShader
	class_ref 440460 // SkiaLinearGradientShader
	class_ref 440588 // SkiaSweepGradientShader
	class_ref 440844 // SkiaCircularGradientShader
	class_ref 440972 // SkiaComposeShader
      end
    end

    artifact 206220 "Snapshot"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 435596 // Snapshot
      end
    end

    artifact 206348 "TextDropShadowCache"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 441356 // ShadowText
	class_ref 441484 // ShadowTexture
	class_ref 441612 // TextDropShadowCache
      end
    end

    artifact 206476 "Texture"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 434188 // Texture
	class_ref 441740 // AutoTexture
      end
    end

    artifact 206604 "TextureCache"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 440204 // TextureCache
      end
    end

    artifact 206732 "Vector"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 441868 // Vector2
	class_ref 441996 // vec2
      end
    end

    artifact 206860 "Vertex"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 442124 // Vertex
	class_ref 434700 // TextureVertex
	class_ref 442252 // AlphaVertex
	class_ref 442380 // AAVertex
      end
    end

    artifact 288012 "Blender"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 647180 // Blender
      end
    end

    artifact 1490316 "DeferredDisplayList"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3699852 // mergeid_t
	class_ref 3699980 // DeferredDisplayList
      end
    end

    artifact 1490444 "DisplayList"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3701132 // DeferStateStruct
	class_ref 3701260 // ReplayStateStruct
	class_ref 3701516 // typedef5
	class_ref 3701388 // DisplayListData
      end
    end

    artifact 1490572 "DisplayListOp"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3701644 // DisplayListOp
	class_ref 3700620 // StateOp
	class_ref 3700748 // DrawOp
	class_ref 3702156 // DrawBoundedOp
	class_ref 3700492 // SaveOp
	class_ref 3702284 // RestoreToCountOp
	class_ref 3700364 // SaveLayerOp
	class_ref 3702412 // TranslateOp
	class_ref 3702540 // RotateOp
	class_ref 3702668 // ScaleOp
	class_ref 3702796 // SkewOp
	class_ref 3702924 // SetMatrixOp
	class_ref 3703052 // ConcatMatrixOp
	class_ref 3700236 // ClipOp
	class_ref 3703180 // ClipRectOp
	class_ref 3703308 // ClipPathOp
	class_ref 3703436 // ClipRegionOp
	class_ref 3703564 // ResetShaderOp
	class_ref 3703692 // SetupShaderOp
	class_ref 3703820 // ResetColorFilterOp
	class_ref 3703948 // SetupColorFilterOp
	class_ref 3704076 // ResetShadowOp
	class_ref 3704204 // SetupShadowOp
	class_ref 3704332 // ResetPaintFilterOp
	class_ref 3704460 // SetupPaintFilterOp
	class_ref 3704588 // DrawBitmapOp
	class_ref 3704716 // DrawBitmapMatrixOp
	class_ref 3704844 // DrawBitmapRectOp
	class_ref 3704972 // DrawBitmapDataOp
	class_ref 3705100 // DrawBitmapMeshOp
	class_ref 3705228 // DrawPatchOp
	class_ref 3705356 // DrawColorOp
	class_ref 3705484 // DrawStrokableOp
	class_ref 3705612 // DrawRectOp
	class_ref 3705740 // DrawRectsOp
	class_ref 3705868 // DrawRoundRectOp
	class_ref 3705996 // DrawCircleOp
	class_ref 3706124 // DrawOvalOp
	class_ref 3706252 // DrawArcOp
	class_ref 3706380 // DrawPathOp
	class_ref 3706508 // DrawLinesOp
	class_ref 3706636 // DrawPointsOp
	class_ref 3706764 // DrawSomeTextOp
	class_ref 3706892 // DrawTextOnPathOp
	class_ref 3707020 // DrawPosTextOp
	class_ref 3707148 // DrawTextOp
	class_ref 3707276 // DrawFunctorOp
	class_ref 3707404 // DrawDisplayListOp
	class_ref 3707532 // DrawLayerOp
      end
    end

    artifact 1490700 "PixelBuffer"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3709196 // PixelBuffer
      end
    end

    artifact 1490828 "Properties"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 3709580 // DebugLevel
      end
    end
  end

  package_ref 155916 // font

  package_ref 156044 // hwui

  package_ref 156428 // utils

  package_ref 426124 // thread
end
