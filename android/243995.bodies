class IdentityHashMapIterator
!!!1308315.java!!!	IdentityHashMapIterator(inout value : Type, inout hm : IdentityHashMap)
            associatedMap = hm;
            type = value;
            expectedModCount = hm.modCount;
!!!1308443.java!!!	hasNext() : boolean
            while (position < associatedMap.elementData.length) {
                // if this is an empty spot, go to the next one
                if (associatedMap.elementData[position] == null) {
                    position += 2;
                } else {
                    return true;
                }
            }
            return false;
!!!1308571.java!!!	checkConcurrentMod() : void
            if (expectedModCount != associatedMap.modCount) {
                throw new ConcurrentModificationException();
            }
!!!1308699.java!!!	next() : E
            checkConcurrentMod();
            if (!hasNext()) {
                throw new NoSuchElementException();
            }

            IdentityHashMapEntry<KT, VT> result = associatedMap
                    .getEntry(position);
            lastPosition = position;
            position += 2;

            canRemove = true;
            return type.get(result);
!!!1308827.java!!!	remove() : void
            checkConcurrentMod();
            if (!canRemove) {
                throw new IllegalStateException();
            }

            canRemove = false;
            associatedMap.remove(associatedMap.elementData[lastPosition]);
            position = lastPosition;
            expectedModCount++;
