class DatabaseManager
!!!13394060.java!!!	DatabaseManager(inout context : Context)
        mMediaProvider = context.getContentResolver().acquireProvider("media");
        mMediaScanner = new MediaScanner(context);
!!!13394188.java!!!	insertFile(in path : String) : boolean
        if (DEBUG) Log.d(TAG, "insertFile: " + path);
        Uri result = mMediaScanner.scanSingleFile(path, sExternalVolume, null);
        return result != null;
!!!13394316.java!!!	deleteFile(in path : String) : boolean
        if (DEBUG) Log.d(TAG, "deleteFile: " + path);
        int deleted = 0;
        try {
            deleted = mMediaProvider.delete(sFilesUri, sWherePath, new String[] { path });
        } catch (RemoteException e) {
            Log.e(TAG, "Failed to delete: " + path);
            return false;
        }
        return deleted != 0;
!!!13394444.java!!!	renameFile(in oldPath : String, in newPath : String) : boolean
        if (DEBUG) Log.d(TAG, "renameFile: " + oldPath + ", " + newPath);

        // Finally update database.
        ContentValues values = new ContentValues();
        values.put(Files.FileColumns.DATA, newPath);
        computeDisplayName(newPath, values);
        int updated = 0;
        try {
            // NOTE - we are relying on a special case in MediaProvider.update() to update
            // the paths for all children in the case where this is a directory.
            updated = mMediaProvider.update(
                    sFilesUri, values, sWherePath, new String[] { oldPath });
        } catch (RemoteException e) {
            Log.e(TAG, "RemoteException in mMediaProvider.update", e);
        }
        if (updated == 0) {
            Log.e(TAG, "Unable to update path for " + oldPath + " to " + newPath);
            return false;
        }

        return true;
!!!13394572.java!!!	computeDisplayName(in path : String, inout values : ContentValues) : void
        String displayName = path;
        int idx = path.lastIndexOf('/');
        if (idx >= 0) {
            displayName = path.substring(idx + 1);
        }
        values.put(Files.FileColumns.DISPLAY_NAME, displayName);
