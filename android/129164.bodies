class Vector
!!!1646732.cpp!!!	~Vector()
    finish_vector();
!!!1646860.cpp!!!	operator =(in rhs : Vector) : Vector
    VectorImpl::operator = (static_cast<const VectorImpl&>(rhs));
    return *this;
!!!1646988.cpp!!!	operator =(in rhs : Vector) : Vector
    VectorImpl::operator = (rhs);
    return *this; 
!!!1647116.cpp!!!	operator =(in rhs : SortedVector<TYPE>) : Vector
    VectorImpl::operator = (rhs);
    return *this; 
!!!1647244.cpp!!!	operator =(in rhs : SortedVector<TYPE>) : Vector
    VectorImpl::operator = (static_cast<const VectorImpl&>(rhs));
    return *this;
!!!1648012.cpp!!!	array() : TYPE
    return static_cast<const TYPE *>(arrayImpl());
!!!1648140.cpp!!!	editArray() : TYPE
    return static_cast<TYPE *>(editArrayImpl());
!!!1648268.cpp!!!	operator [](in index : size_t) : TYPE
    LOG_FATAL_IF(index>=size(),
            "%s: index=%u out of range (%u)", __PRETTY_FUNCTION__,
            int(index), int(size()));
    return *(array() + index);
!!!1648396.cpp!!!	itemAt(in index : size_t) : TYPE
    return operator[](index);
!!!1648524.cpp!!!	top() : TYPE
    return *(array() + size() - 1);
!!!1648652.cpp!!!	editItemAt(in index : size_t) : TYPE
    return *( static_cast<TYPE *>(editItemLocation(index)) );
!!!1648780.cpp!!!	editTop() : TYPE
    return *( static_cast<TYPE *>(editItemLocation(size()-1)) );
!!!1648908.cpp!!!	insertVectorAt(in vector : Vector, in index : size_t) : ssize_t
    return VectorImpl::insertVectorAt(reinterpret_cast<const VectorImpl&>(vector), index);
!!!1649036.cpp!!!	appendVector(in vector : Vector) : ssize_t
    return VectorImpl::appendVector(reinterpret_cast<const VectorImpl&>(vector));
!!!1649164.cpp!!!	insertArrayAt(in array : TYPE, in index : size_t, in length : size_t) : ssize_t
    return VectorImpl::insertArrayAt(array, index, length);
!!!1649292.cpp!!!	appendArray(in array : TYPE, in length : size_t) : ssize_t
    return VectorImpl::appendArray(array, length);
!!!1649420.cpp!!!	insertAt(in index : size_t, in numItems : size_t = 1) : ssize_t
    return VectorImpl::insertAt(index, numItems);
!!!1649548.cpp!!!	insertAt(in item : TYPE, in index : size_t, in numItems : size_t = 1) : ssize_t
    return VectorImpl::insertAt(&item, index, numItems);
!!!1649676.cpp!!!	pop() : void
    VectorImpl::pop();
!!!1649804.cpp!!!	push() : void
    VectorImpl::push();
!!!1649932.cpp!!!	push(in item : TYPE) : void
    return VectorImpl::push(&item);
!!!1650060.cpp!!!	add() : ssize_t
    return VectorImpl::add();
!!!1650188.cpp!!!	add(in item : TYPE) : ssize_t
    return VectorImpl::add(&item);
!!!1650316.cpp!!!	replaceAt(in index : size_t) : ssize_t
    return VectorImpl::replaceAt(index);
!!!1650444.cpp!!!	replaceAt(in item : TYPE, in index : size_t) : ssize_t
    return VectorImpl::replaceAt(&item, index);
!!!1650572.cpp!!!	removeItemsAt(in index : size_t, in count : size_t = 1) : ssize_t
    return VectorImpl::removeItemsAt(index, count);
!!!1650828.cpp!!!	sort(in cmp : compar_t) : status_t
    return VectorImpl::sort((VectorImpl::compar_t)cmp);
!!!1650956.cpp!!!	sort(in cmp : compar_r_t, inout state : void) : status_t
    return VectorImpl::sort((VectorImpl::compar_r_t)cmp, state);
!!!1652364.cpp!!!	do_construct(inout storage : void, in num : size_t) : void
    construct_type( reinterpret_cast<TYPE*>(storage), num );
!!!1652492.cpp!!!	do_destroy(inout storage : void, in num : size_t) : void
    destroy_type( reinterpret_cast<TYPE*>(storage), num );
!!!1652620.cpp!!!	do_copy(inout dest : void, in from : void, in num : size_t) : void
    copy_type( reinterpret_cast<TYPE*>(dest), reinterpret_cast<const TYPE*>(from), num );
!!!1652748.cpp!!!	do_splat(inout dest : void, in item : void, in num : size_t) : void
    splat_type( reinterpret_cast<TYPE*>(dest), reinterpret_cast<const TYPE*>(item), num );
!!!1652876.cpp!!!	do_move_forward(inout dest : void, in from : void, in num : size_t) : void
    move_forward_type( reinterpret_cast<TYPE*>(dest), reinterpret_cast<const TYPE*>(from), num );
!!!1653004.cpp!!!	do_move_backward(inout dest : void, in from : void, in num : size_t) : void
    move_backward_type( reinterpret_cast<TYPE*>(dest), reinterpret_cast<const TYPE*>(from), num );
