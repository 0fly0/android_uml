class WidgetFrame
!!!13488268.java!!!	WidgetFrame(inout context : Context, inout view : View)
        mView = (WidgetWrapperLayout) LayoutInflater.from(context).inflate(
                R.layout.widget_frame, null);
        ((ViewGroup) mView.findViewById(R.id.content)).addView(view);
        // Tag the two views so this object can be easily fetched from them.
        mView.setTag(KEY, this);
        getWrappedView().setTag(KEY, this);
        setupFrameView();
!!!13488396.java!!!	getView() : ViewGroup
        return mView;
!!!13488524.java!!!	getWrappedView() : View
        return ((ViewGroup) mView.findViewById(R.id.content)).getChildAt(0);
!!!13488652.java!!!	setData(inout data : T) : void
        mData = data;
!!!13488780.java!!!	getData() : T
        return mData;
!!!13488908.java!!!	setEditing(inout editing : boolean) : void
        mEditing = editing;
        ViewGroup content = (ViewGroup) mView.findViewById(R.id.content);
        int focusability = editing ? ViewGroup.FOCUS_BLOCK_DESCENDANTS :
                ViewGroup.FOCUS_AFTER_DESCENDANTS;
        content.setDescendantFocusability(focusability);
        content.setFocusable(editing);
        getView().setDescendantFocusability(focusability);
        getView().setFocusable(editing);
        getView().getBackground().setLevel(editing ? 1 : 0);
        mView.setInterceptTouchEvents(editing);
!!!13489036.java!!!	setMoving(inout moving : boolean) : void
        mMoving = moving;
        mListener.onSetMoving(moving);
        getView().getBackground().setLevel(moving ? 2 : 1);
!!!13489164.java!!!	isMoving() : boolean
        return mMoving;
!!!13489292.java!!!	forView(inout context : Context, inout view : View) : WidgetFrame
        Object tag = view.getTag(KEY);
        if (tag != null && tag instanceof WidgetFrame<?>) {
            return (WidgetFrame<T>) tag;
        }
        WidgetFrame<T> result = new WidgetFrame<T>(context, view);
        return result;
!!!13489676.java!!!	setOnMoveListener(inout listener : Listener) : void
        mListener = listener;
!!!13489804.java!!!	setupFrameView() : void
        mView.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                // getParent() checks that view is attached to prevent crashes
                if (mEditing && mView.getParent() != null) {
                    if (!isMoving()) {
                        mView.showContextMenu();
                    } else {
                        setMoving(false);
                    }
                }
            }
        });
        mView.setOnKeyListener(new View.OnKeyListener() {
            @Override
            public boolean onKey(View v, int keyCode, KeyEvent event) {
                if (isMoving() && event.getAction() == KeyEvent.ACTION_DOWN) {
                    MoveDirection direction = null;
                    switch (keyCode) {
                        case KeyEvent.KEYCODE_DPAD_UP:
                            direction = MoveDirection.UP;
                            break;
                        case KeyEvent.KEYCODE_DPAD_DOWN:
                            direction = MoveDirection.DOWN;
                            break;
                        case KeyEvent.KEYCODE_DPAD_LEFT:
                            direction = MoveDirection.LEFT;
                            break;
                        case KeyEvent.KEYCODE_DPAD_RIGHT:
                            direction = MoveDirection.RIGHT;
                            break;
                        default:
                            direction = null;
                    }
                    if (direction != null && mListener != null) {
                        mListener.onMoveRequested(mView, direction);
                        return true;
                    }
                } else if (mEditing && Keys.shouldTriggerEdit(keyCode, event)) {
                    mView.showContextMenu();
                    return true;
                }
                return false;
            }
        });
