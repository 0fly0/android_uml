class SelectActionModeCallback
!!!4924556.java!!!	setWebView(inout webView : WebViewClassic) : void
        mWebView = webView;
!!!4924684.java!!!	setTextSelected(inout isTextSelected : boolean) : void
        mIsTextSelected = isTextSelected;
!!!4924812.java!!!	finish() : void
        // It is possible that onCreateActionMode was never called, in the case
        // where there is no ActionBar, for example.
        if (mActionMode != null) {
            mActionMode.finish();
        }
!!!4924940.java!!!	onCreateActionMode(inout mode : ActionMode, inout menu : Menu) : boolean
        mode.getMenuInflater().inflate(com.android.internal.R.menu.webview_copy, menu);

        final Context context = mWebView.getContext();
        mode.setTitle(context.getString(com.android.internal.R.string.textSelectionCABTitle));
        mode.setTitleOptionalHint(true);

        // If the action mode UI we're running in isn't capable of taking window focus
        // the user won't be able to type into the find on page UI. Disable this functionality.
        // (Note that this should only happen in floating dialog windows.)
        // This can be removed once we can handle multiple focusable windows at a time
        // in a better way.
        ClipboardManager cm = (ClipboardManager)(context
                .getSystemService(Context.CLIPBOARD_SERVICE));
        boolean isFocusable = mode.isUiFocusable();
        boolean isEditable = mWebView.focusCandidateIsEditableText();
        boolean canPaste = isEditable && cm.hasPrimaryClip() && isFocusable;
        boolean canFind = !isEditable && isFocusable;
        boolean canCut = isEditable && mIsTextSelected && isFocusable;
        boolean canCopy = mIsTextSelected;
        boolean canWebSearch = mIsTextSelected;
        setMenuVisibility(menu, canFind, com.android.internal.R.id.find);
        setMenuVisibility(menu, canPaste, com.android.internal.R.id.paste);
        setMenuVisibility(menu, canCut, com.android.internal.R.id.cut);
        setMenuVisibility(menu, canCopy, com.android.internal.R.id.copy);
        setMenuVisibility(menu, canWebSearch, com.android.internal.R.id.websearch);
        mActionMode = mode;
        return true;
!!!4925068.java!!!	onPrepareActionMode(inout mode : ActionMode, inout menu : Menu) : boolean
        return true;
!!!4925196.java!!!	onActionItemClicked(inout mode : ActionMode, inout item : MenuItem) : boolean
        switch(item.getItemId()) {
            case android.R.id.cut:
                mWebView.cutSelection();
                mode.finish();
                break;

            case android.R.id.copy:
                mWebView.copySelection();
                mode.finish();
                break;

            case android.R.id.paste:
                mWebView.pasteFromClipboard();
                mode.finish();
                break;

            case com.android.internal.R.id.share:
                String selection = mWebView.getSelection();
                Browser.sendString(mWebView.getContext(), selection);
                mode.finish();
                break;

            case com.android.internal.R.id.select_all:
                mWebView.selectAll();
                break;

            case com.android.internal.R.id.find:
                String sel= mWebView.getSelection();
                mode.finish();
                mWebView.showFindDialog(sel, false);
                break;
            case com.android.internal.R.id.websearch:
                mode.finish();
                Intent i = new Intent(Intent.ACTION_WEB_SEARCH);
                i.putExtra(SearchManager.EXTRA_NEW_SEARCH, true);
                i.putExtra(SearchManager.QUERY, mWebView.getSelection());
                if (!(mWebView.getContext() instanceof Activity)) {
                    i.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
                }
                mWebView.getContext().startActivity(i);
                break;

            default:
                return false;
        }
        return true;
!!!4925324.java!!!	onDestroyActionMode(inout mode : ActionMode) : void
        mWebView.selectionDone();
!!!4925452.java!!!	setMenuVisibility(inout menu : Menu, inout visible : boolean, in resourceId : int) : void
        final MenuItem item = menu.findItem(resourceId);
        if (item != null) {
            item.setVisible(visible);
        }
