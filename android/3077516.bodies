class SubtypePreference
!!!12761100.java!!!	newIncompleteSubtypePreference(inout context : Context, inout proxy : SubtypeDialogProxy) : SubtypePreference
            return new SubtypePreference(context, null, proxy);
!!!12761228.java!!!	SubtypePreference(inout context : Context, inout subtype : InputMethodSubtype, inout proxy : SubtypeDialogProxy)
            super(context, null);
            setDialogLayoutResource(R.layout.additional_subtype_dialog);
            setPersistent(false);
            mProxy = proxy;
            setSubtype(subtype);
!!!12761356.java!!!	show() : void
            showDialog(null);
!!!12761484.java!!!	isIncomplete() : boolean
            return mSubtype == null;
!!!12761612.java!!!	getSubtype() : InputMethodSubtype
            return mSubtype;
!!!12761740.java!!!	setSubtype(inout subtype : InputMethodSubtype) : void
            mPreviousSubtype = mSubtype;
            mSubtype = subtype;
            if (isIncomplete()) {
                setTitle(null);
                setDialogTitle(R.string.add_style);
                setKey(KEY_NEW_SUBTYPE);
            } else {
                final String displayName = SubtypeLocale.getSubtypeDisplayName(
                        subtype, getContext().getResources());
                setTitle(displayName);
                setDialogTitle(displayName);
                setKey(KEY_PREFIX + subtype.getLocale() + "_"
                        + SubtypeLocale.getKeyboardLayoutSetName(subtype));
            }
!!!12761868.java!!!	revert() : void
            setSubtype(mPreviousSubtype);
!!!12761996.java!!!	hasBeenModified() : boolean
            return mSubtype != null && !mSubtype.equals(mPreviousSubtype);
!!!12762124.java!!!	onCreateDialogView() : View
            final View v = super.onCreateDialogView();
            mSubtypeLocaleSpinner = (Spinner) v.findViewById(R.id.subtype_locale_spinner);
            mSubtypeLocaleSpinner.setAdapter(mProxy.getSubtypeLocaleAdapter());
            mKeyboardLayoutSetSpinner = (Spinner) v.findViewById(R.id.keyboard_layout_set_spinner);
            mKeyboardLayoutSetSpinner.setAdapter(mProxy.getKeyboardLayoutSetAdapter());
            return v;
!!!12762252.java!!!	onPrepareDialogBuilder(inout builder : Builder) : void
            final Context context = builder.getContext();
            builder.setCancelable(true).setOnCancelListener(this);
            if (isIncomplete()) {
                builder.setPositiveButton(R.string.add, this)
                        .setNegativeButton(android.R.string.cancel, this);
            } else {
                builder.setPositiveButton(R.string.save, this)
                        .setNeutralButton(android.R.string.cancel, this)
                        .setNegativeButton(R.string.remove, this);
                final SubtypeLocaleItem localeItem = SubtypeLocaleAdapter.createItem(
                        context, mSubtype.getLocale());
                final KeyboardLayoutSetItem layoutItem = new KeyboardLayoutSetItem(mSubtype);
                setSpinnerPosition(mSubtypeLocaleSpinner, localeItem);
                setSpinnerPosition(mKeyboardLayoutSetSpinner, layoutItem);
            }
!!!12762380.java!!!	setSpinnerPosition(inout spinner : Spinner, inout itemToSelect : Object) : void
            final SpinnerAdapter adapter = spinner.getAdapter();
            final int count = adapter.getCount();
            for (int i = 0; i < count; i++) {
                final Object item = spinner.getItemAtPosition(i);
                if (item.equals(itemToSelect)) {
                    spinner.setSelection(i);
                    return;
                }
            }
!!!12762508.java!!!	onCancel(inout dialog : DialogInterface) : void
            if (isIncomplete()) {
                mProxy.onRemovePressed(this);
            }
!!!12762636.java!!!	onClick(inout dialog : DialogInterface, in which : int) : void
            super.onClick(dialog, which);
            switch (which) {
            case DialogInterface.BUTTON_POSITIVE:
                final boolean isEditing = !isIncomplete();
                final SubtypeLocaleItem locale =
                        (SubtypeLocaleItem) mSubtypeLocaleSpinner.getSelectedItem();
                final KeyboardLayoutSetItem layout =
                        (KeyboardLayoutSetItem) mKeyboardLayoutSetSpinner.getSelectedItem();
                final InputMethodSubtype subtype = AdditionalSubtype.createAdditionalSubtype(
                        locale.first, layout.first, ASCII_CAPABLE);
                setSubtype(subtype);
                notifyChanged();
                if (isEditing) {
                    mProxy.onSavePressed(this);
                } else {
                    mProxy.onAddPressed(this);
                }
                break;
            case DialogInterface.BUTTON_NEUTRAL:
                // Nothing to do
                break;
            case DialogInterface.BUTTON_NEGATIVE:
                mProxy.onRemovePressed(this);
                break;
            }
!!!12762764.java!!!	getSpinnerPosition(inout spinner : Spinner) : int
            if (spinner == null) return -1;
            return spinner.getSelectedItemPosition();
!!!12762892.java!!!	setSpinnerPosition(inout spinner : Spinner, in position : int) : void
            if (spinner == null || position < 0) return;
            spinner.setSelection(position);
!!!12763020.java!!!	onSaveInstanceState() : Parcelable
            final Parcelable superState = super.onSaveInstanceState();
            final Dialog dialog = getDialog();
            if (dialog == null || !dialog.isShowing()) {
                return superState;
            }

            final SavedState myState = new SavedState(superState);
            myState.mSubtype = mSubtype;
            myState.mSubtypeLocaleSelectedPos = getSpinnerPosition(mSubtypeLocaleSpinner);
            myState.mKeyboardLayoutSetSelectedPos = getSpinnerPosition(mKeyboardLayoutSetSpinner);
            return myState;
!!!12763148.java!!!	onRestoreInstanceState(inout state : Parcelable) : void
            if (!(state instanceof SavedState)) {
                super.onRestoreInstanceState(state);
                return;
            }

            final SavedState myState = (SavedState) state;
            super.onRestoreInstanceState(myState.getSuperState());
            setSpinnerPosition(mSubtypeLocaleSpinner, myState.mSubtypeLocaleSelectedPos);
            setSpinnerPosition(mKeyboardLayoutSetSpinner, myState.mKeyboardLayoutSetSelectedPos);
            setSubtype(myState.mSubtype);
