class CharEncoding
!!!12875404.java!!!	fitsOnOneByte(in character : int) : boolean
            return character >= MINIMAL_ONE_BYTE_CHARACTER_VALUE
                    && character <= MAXIMAL_ONE_BYTE_CHARACTER_VALUE;
!!!12875532.java!!!	getCharSize(in character : int) : int
            // See char encoding in FusionDictionary.java
            if (fitsOnOneByte(character)) return 1;
            if (INVALID_CHARACTER == character) return 1;
            return 3;
!!!12875660.java!!!	getCharArraySize(in chars : int) : int
            int size = 0;
            for (int character : chars) size += getCharSize(character);
            return size;
!!!12875788.java!!!	writeCharArray(in codePoints : int, in buffer : byte, in index : int) : int
            for (int codePoint : codePoints) {
                if (1 == getCharSize(codePoint)) {
                    buffer[index++] = (byte)codePoint;
                } else {
                    buffer[index++] = (byte)(0xFF & (codePoint >> 16));
                    buffer[index++] = (byte)(0xFF & (codePoint >> 8));
                    buffer[index++] = (byte)(0xFF & codePoint);
                }
            }
            return index;
!!!12875916.java!!!	writeString(in buffer : byte, in origin : int, in word : String) : int
            final int length = word.length();
            int index = origin;
            for (int i = 0; i < length; i = word.offsetByCodePoints(i, 1)) {
                final int codePoint = word.codePointAt(i);
                if (1 == getCharSize(codePoint)) {
                    buffer[index++] = (byte)codePoint;
                } else {
                    buffer[index++] = (byte)(0xFF & (codePoint >> 16));
                    buffer[index++] = (byte)(0xFF & (codePoint >> 8));
                    buffer[index++] = (byte)(0xFF & codePoint);
                }
            }
            buffer[index++] = GROUP_CHARACTERS_TERMINATOR;
            return index - origin;
!!!12876044.java!!!	writeString(inout buffer : ByteArrayOutputStream, in word : String) : void
            final int length = word.length();
            for (int i = 0; i < length; i = word.offsetByCodePoints(i, 1)) {
                final int codePoint = word.codePointAt(i);
                if (1 == getCharSize(codePoint)) {
                    buffer.write((byte) codePoint);
                } else {
                    buffer.write((byte) (0xFF & (codePoint >> 16)));
                    buffer.write((byte) (0xFF & (codePoint >> 8)));
                    buffer.write((byte) (0xFF & codePoint));
                }
            }
            buffer.write(GROUP_CHARACTERS_TERMINATOR);
!!!12876172.java!!!	readString(in source : RandomAccessFile) : String
            final StringBuilder s = new StringBuilder();
            int character = readChar(source);
            while (character != INVALID_CHARACTER) {
                s.appendCodePoint(character);
                character = readChar(source);
            }
            return s.toString();
!!!12876300.java!!!	readChar(inout source : RandomAccessFile) : int
            int character = source.readUnsignedByte();
            if (!fitsOnOneByte(character)) {
                if (GROUP_CHARACTERS_TERMINATOR == character)
                    return INVALID_CHARACTER;
                character <<= 16;
                character += source.readUnsignedShort();
            }
            return character;
