class ViewGroupChildrenTest
!!!6151820.java!!!	ViewGroupChildrenTest()
        super("com.android.frameworks.coretests", ViewGroupChildren.class);
!!!6151948.java!!!	setUp() : void
        super.setUp();

        final ViewGroupChildren a = getActivity();
        mGroup = (ViewGroup) a.findViewById(R.id.group);
!!!6152076.java!!!	testSetUpConditions() : void
        assertNotNull(mGroup);
!!!6152204.java!!!	testStartsEmpty() : void
        assertEquals("A ViewGroup should have no child by default", 0, mGroup.getChildCount());
!!!6152332.java!!!	testAddChild() : void
        View view = createView("1");
        mGroup.addView(view);

        assertEquals(1, mGroup.getChildCount());
        ViewAsserts.assertGroupIntegrity(mGroup);
        ViewAsserts.assertGroupContains(mGroup, view);
!!!6152460.java!!!	testAddChildAtFront() : void
        // 24 should be greater than ViewGroup.ARRAY_CAPACITY_INCREMENT
        for (int i = 0; i < 24; i++) {
            View view = createView(String.valueOf(i + 1));
            mGroup.addView(view);
        }

        View view = createView("X");
        mGroup.addView(view, 0);

        assertEquals(25, mGroup.getChildCount());
        ViewAsserts.assertGroupIntegrity(mGroup);
        ViewAsserts.assertGroupContains(mGroup, view);
        assertSame(view, mGroup.getChildAt(0));
!!!6152588.java!!!	testAddChildInMiddle() : void
        // 24 should be greater than ViewGroup.ARRAY_CAPACITY_INCREMENT
        for (int i = 0; i < 24; i++) {
            View view = createView(String.valueOf(i + 1));
            mGroup.addView(view);
        }

        View view = createView("X");
        mGroup.addView(view, 12);

        assertEquals(25, mGroup.getChildCount());
        ViewAsserts.assertGroupIntegrity(mGroup);
        ViewAsserts.assertGroupContains(mGroup, view);
        assertSame(view, mGroup.getChildAt(12));
!!!6152716.java!!!	testAddChildren() : void
        // 24 should be greater than ViewGroup.ARRAY_CAPACITY_INCREMENT
        for (int i = 0; i < 24; i++) {
            View view = createView(String.valueOf(i + 1));
            mGroup.addView(view);

            ViewAsserts.assertGroupContains(mGroup, view);
        }
        assertEquals(24, mGroup.getChildCount());
!!!6152844.java!!!	testRemoveChild() : void
        View view = createView("1");
        mGroup.addView(view);

        ViewAsserts.assertGroupIntegrity(mGroup);

        mGroup.removeView(view);

        ViewAsserts.assertGroupIntegrity(mGroup);
        ViewAsserts.assertGroupNotContains(mGroup, view);

        assertEquals(0, mGroup.getChildCount());
        assertNull(view.getParent());
!!!6152972.java!!!	testRemoveChildren() : void
        // 24 should be greater than ViewGroup.ARRAY_CAPACITY_INCREMENT
        final View[] views = new View[24];

        for (int i = 0; i < views.length; i++) {
            views[i] = createView(String.valueOf(i + 1));
            mGroup.addView(views[i]);
        }

        for (int i = views.length - 1; i >= 0; i--) {
            mGroup.removeViewAt(i);
            ViewAsserts.assertGroupIntegrity(mGroup);
            ViewAsserts.assertGroupNotContains(mGroup, views[i]);
            assertNull(views[i].getParent());
        }

        assertEquals(0, mGroup.getChildCount());
!!!6153100.java!!!	testRemoveChildrenBulk() : void
        // 24 should be greater than ViewGroup.ARRAY_CAPACITY_INCREMENT
        final View[] views = new View[24];

        for (int i = 0; i < views.length; i++) {
            views[i] = createView(String.valueOf(i + 1));
            mGroup.addView(views[i]);
        }

        mGroup.removeViews(6, 7);
        ViewAsserts.assertGroupIntegrity(mGroup);
        for (int i = 6; i < 13; i++) {
            ViewAsserts.assertGroupNotContains(mGroup, views[i]);
            assertNull(views[i].getParent());
        }

        assertEquals(17, mGroup.getChildCount());
!!!6153228.java!!!	testRemoveChildrenBulkAtFront() : void
        // 24 should be greater than ViewGroup.ARRAY_CAPACITY_INCREMENT
        final View[] views = new View[24];

        for (int i = 0; i < views.length; i++) {
            views[i] = createView(String.valueOf(i + 1));
            mGroup.addView(views[i]);
        }

        mGroup.removeViews(0, 7);
        ViewAsserts.assertGroupIntegrity(mGroup);
        for (int i = 0; i < 7; i++) {
            ViewAsserts.assertGroupNotContains(mGroup, views[i]);
            assertNull(views[i].getParent());
        }

        assertEquals("8", ((TextView) mGroup.getChildAt(0)).getText());
        assertEquals(17, mGroup.getChildCount());
!!!6153356.java!!!	testRemoveChildrenBulkAtEnd() : void
        // 24 should be greater than ViewGroup.ARRAY_CAPACITY_INCREMENT
        final View[] views = new View[24];

        for (int i = 0; i < views.length; i++) {
            views[i] = createView(String.valueOf(i + 1));
            mGroup.addView(views[i]);
        }

        mGroup.removeViews(17, 7);
        ViewAsserts.assertGroupIntegrity(mGroup);
        for (int i = 17; i < 24; i++) {
            ViewAsserts.assertGroupNotContains(mGroup, views[i]);
            assertNull(views[i].getParent());
        }
        assertEquals("17", ((TextView) mGroup.getChildAt(mGroup.getChildCount() - 1)).getText());
        assertEquals(17, mGroup.getChildCount());
!!!6153484.java!!!	testRemoveChildAtFront() : void
        // 24 should be greater than ViewGroup.ARRAY_CAPACITY_INCREMENT
        final View[] views = new View[24];

        for (int i = 0; i < views.length; i++) {
            views[i] = createView(String.valueOf(i + 1));
            mGroup.addView(views[i]);
        }

        mGroup.removeViewAt(0);
        ViewAsserts.assertGroupIntegrity(mGroup);
        ViewAsserts.assertGroupNotContains(mGroup, views[0]);
        assertNull(views[0].getParent());

        assertEquals(views.length - 1, mGroup.getChildCount());
!!!6153612.java!!!	testRemoveChildInMiddle() : void
        // 24 should be greater than ViewGroup.ARRAY_CAPACITY_INCREMENT
        final View[] views = new View[24];

        for (int i = 0; i < views.length; i++) {
            views[i] = createView(String.valueOf(i + 1));
            mGroup.addView(views[i]);
        }

        mGroup.removeViewAt(12);
        ViewAsserts.assertGroupIntegrity(mGroup);
        ViewAsserts.assertGroupNotContains(mGroup, views[12]);
        assertNull(views[12].getParent());

        assertEquals(views.length - 1, mGroup.getChildCount());        
!!!6153740.java!!!	createView(in text : String) : TextView
        TextView view = new TextView(getActivity());
        view.setText(text);
        view.setLayoutParams(new LinearLayout.LayoutParams(
                LinearLayout.LayoutParams.MATCH_PARENT,
                LinearLayout.LayoutParams.WRAP_CONTENT
        ));
        return view;
