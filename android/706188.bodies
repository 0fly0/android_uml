class Interpolator
!!!6372108.java!!!	Interpolator(in valueCount : int)
        mValueCount = valueCount;
        mFrameCount = 2;
        native_instance = nativeConstructor(valueCount, 2);
!!!6372236.java!!!	Interpolator(in valueCount : int, in frameCount : int)
        mValueCount = valueCount;
        mFrameCount = frameCount;
        native_instance = nativeConstructor(valueCount, frameCount);
!!!6372364.java!!!	reset(in valueCount : int) : void
        reset(valueCount, 2);
!!!6372492.java!!!	reset(in valueCount : int, in frameCount : int) : void
        mValueCount = valueCount;
        mFrameCount = frameCount;
        nativeReset(native_instance, valueCount, frameCount);
!!!6372620.java!!!	getKeyFrameCount() : int
        return mFrameCount;
!!!6372748.java!!!	getValueCount() : int
        return mValueCount;
!!!6372876.java!!!	setKeyFrame(in index : int, in msec : int, inout values : float) : void
        setKeyFrame(index, msec, values, null);
!!!6373004.java!!!	setKeyFrame(in index : int, in msec : int, inout values : float, inout blend : float) : void
        if (index < 0 || index >= mFrameCount) {
            throw new IndexOutOfBoundsException();
        }
        if (values.length < mValueCount) {
            throw new ArrayStoreException();
        }
        if (blend != null && blend.length < 4) {
            throw new ArrayStoreException();
        }
        nativeSetKeyFrame(native_instance, index, msec, values, blend);
!!!6373132.java!!!	setRepeatMirror(in repeatCount : float, inout mirror : boolean) : void
        if (repeatCount >= 0) {
            nativeSetRepeatMirror(native_instance, repeatCount, mirror);
        }
!!!6373260.java!!!	timeToValues(inout values : float) : Result
        return timeToValues((int)SystemClock.uptimeMillis(), values);
!!!6373388.java!!!	timeToValues(in msec : int, inout values : float) : Result
        if (values != null && values.length < mValueCount) {
            throw new ArrayStoreException();
        }
        switch (nativeTimeToValues(native_instance, msec, values)) {
            case 0: return Result.NORMAL;
            case 1: return Result.FREEZE_START;
            default: return Result.FREEZE_END;
        }
!!!6373516.java!!!	finalize() : void
        nativeDestructor(native_instance);
