class BnOverscanCalibrator
!!!10990476.cpp!!!	onTransact(in code : uint32_t, in data : Parcel, inout reply : Parcel, in flags : uint32_t = 0) : status_t
    switch (code) {
        case INITIALIZE: {
            CHECK_INTERFACE(IOverscanCalibrator, data, reply);
            reply->writeInt32(initialize());
            return NO_ERROR;
        }
        case CLEANUP: {
            CHECK_INTERFACE(IOverscanCalibrator, data, reply);
            cleanup();
            return NO_ERROR;
        }
        case DRAW_CALIBRATION_RECT: {
            CHECK_INTERFACE(IOverscanCalibrator, data, reply);
            int x = data.readInt32();
            int y = data.readInt32();
            int width = data.readInt32();
            int height = data.readInt32();
            reply->writeInt32(drawCalibrationRect(x, y, width, height));
            return NO_ERROR;
        }
        case GET_OUTPUT_SIZE: {
            CHECK_INTERFACE(IOverscanCalibrator, data, reply);
            int width, heigh;
            reply->writeInt32(getOutputSize(&width, &heigh));
            reply->writeInt32(width);
            reply->writeInt32(heigh);
            return NO_ERROR;
        }
        case SET_RECT_COLOR: {
            CHECK_INTERFACE(IOverscanCalibrator, data, reply);
            int color = data.readInt32();
            reply->writeInt32(setRectColor(color));
            return NO_ERROR;
        }
        case GET_RECT_COLOR: {
            CHECK_INTERFACE(IOverscanCalibrator, data, reply);
            reply->writeInt32(getRectColor());
            return NO_ERROR;
        }
        case SET_OVERSCAN_RECT: {
            CHECK_INTERFACE(IOverscanCalibrator, data, reply);
            int x = data.readInt32();
            int y = data.readInt32();
            int width = data.readInt32();
            int height = data.readInt32();
            reply->writeInt32(setOverscanRectangle(x, y, width, height));
            return NO_ERROR;
        }
        case GET_OVERSCAN_RECT: {
            CHECK_INTERFACE(IOverscanCalibrator, data, reply);
            int x, y, width, height;
            reply->writeInt32(getOverscanRectangle(&x, &y, &width, &height));
            reply->writeInt32(x);
            reply->writeInt32(y);
            reply->writeInt32(width);
            reply->writeInt32(height);
            return NO_ERROR;
        }
        default: {
            return BBinder::onTransact(code, data, reply, flags);
        }
    }
