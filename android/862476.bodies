class Environment
!!!3853964.java!!!	getPrimaryVolume() : StorageVolume
        if (sPrimaryVolume == null) {
            synchronized (sLock) {
                if (sPrimaryVolume == null) {
                    try {
                        IMountService mountService = IMountService.Stub.asInterface(ServiceManager
                                .getService("mount"));
                        final StorageVolume[] volumes = mountService.getVolumeList();
                        sPrimaryVolume = StorageManager.getPrimaryVolume(volumes);
                    } catch (Exception e) {
                        Log.e(TAG, "couldn't talk to MountService", e);
                    }
                }
            }
        }
        return sPrimaryVolume;
!!!3854092.java!!!	initForCurrentUser() : void
        final int userId = UserHandle.myUserId();
        sCurrentUser = new UserEnvironment(userId);

        synchronized (sLock) {
            sPrimaryVolume = null;
        }
!!!3855628.java!!!	getRootDirectory() : File
        return ROOT_DIRECTORY;
!!!3855756.java!!!	getSystemSecureDirectory() : File
        if (isEncryptedFilesystemEnabled()) {
            return new File(SECURE_DATA_DIRECTORY, "system");
        } else {
            return new File(DATA_DIRECTORY, "system");
        }
!!!3855884.java!!!	getSecureDataDirectory() : File
        if (isEncryptedFilesystemEnabled()) {
            return SECURE_DATA_DIRECTORY;
        } else {
            return DATA_DIRECTORY;
        }
!!!3856012.java!!!	getMediaStorageDirectory() : File
        throwIfSystem();
        return sCurrentUser.getMediaStorageDirectory();
!!!3856140.java!!!	getUserSystemDirectory(in userId : int) : File
        return new File(new File(getSystemSecureDirectory(), "users"), Integer.toString(userId));
!!!3856268.java!!!	isEncryptedFilesystemEnabled() : boolean
        return SystemProperties.getBoolean(SYSTEM_PROPERTY_EFS_ENABLED, false);
!!!3856396.java!!!	getDataDirectory() : File
        return DATA_DIRECTORY;
!!!3856524.java!!!	getExternalStorageDirectory() : File
        throwIfSystem();
        return sCurrentUser.getExternalStorageDirectory();
!!!3856652.java!!!	getLegacyExternalStorageDirectory() : File
        return new File(System.getenv(ENV_EXTERNAL_STORAGE));
!!!3856780.java!!!	getLegacyExternalStorageObbDirectory() : File
        return buildPath(getLegacyExternalStorageDirectory(), DIRECTORY_ANDROID, "obb");
!!!3856908.java!!!	getEmulatedStorageSource(in userId : int) : File
        // /mnt/shell/emulated/0
        return new File(System.getenv(ENV_EMULATED_STORAGE_SOURCE), String.valueOf(userId));
!!!3857036.java!!!	getEmulatedStorageObbSource() : File
        // /mnt/shell/emulated/obb
        return new File(System.getenv(ENV_EMULATED_STORAGE_SOURCE), "obb");
!!!3857164.java!!!	getExternalStoragePublicDirectory(in type : String) : File
        throwIfSystem();
        return sCurrentUser.getExternalStoragePublicDirectory(type);
!!!3857292.java!!!	getExternalStorageAndroidDataDir() : File
        throwIfSystem();
        return sCurrentUser.getExternalStorageAndroidDataDir();
!!!3857420.java!!!	getExternalStorageAppDataDirectory(in packageName : String) : File
        throwIfSystem();
        return sCurrentUser.getExternalStorageAppDataDirectory(packageName);
!!!3857548.java!!!	getExternalStorageAppMediaDirectory(in packageName : String) : File
        throwIfSystem();
        return sCurrentUser.getExternalStorageAppMediaDirectory(packageName);
!!!3857676.java!!!	getExternalStorageAppObbDirectory(in packageName : String) : File
        throwIfSystem();
        return sCurrentUser.getExternalStorageAppObbDirectory(packageName);
!!!3857804.java!!!	getExternalStorageAppFilesDirectory(in packageName : String) : File
        throwIfSystem();
        return sCurrentUser.getExternalStorageAppFilesDirectory(packageName);
!!!3857932.java!!!	getExternalStorageAppCacheDirectory(in packageName : String) : File
        throwIfSystem();
        return sCurrentUser.getExternalStorageAppCacheDirectory(packageName);
!!!3858060.java!!!	getDownloadCacheDirectory() : File
        return DOWNLOAD_CACHE_DIRECTORY;
!!!3858188.java!!!	getExternalStorageState() : String
        try {
            IMountService mountService = IMountService.Stub.asInterface(ServiceManager
                    .getService("mount"));
            final StorageVolume primary = getPrimaryVolume();
            return mountService.getVolumeState(primary.getPath());
        } catch (RemoteException rex) {
            Log.w(TAG, "Failed to read external storage state; assuming REMOVED: " + rex);
            return Environment.MEDIA_REMOVED;
        }
!!!3858316.java!!!	isExternalStorageRemovable() : boolean
        final StorageVolume primary = getPrimaryVolume();
        return (primary != null && primary.isRemovable());
!!!3858444.java!!!	isExternalStorageEmulated() : boolean
        final StorageVolume primary = getPrimaryVolume();
        return (primary != null && primary.isEmulated());
!!!3858572.java!!!	getDirectory(in variableName : String, in defaultPath : String) : File
        String path = System.getenv(variableName);
        return path == null ? new File(defaultPath) : new File(path);
!!!3858700.java!!!	throwIfSystem() : void
        if (Process.myUid() == Process.SYSTEM_UID) {
            Log.wtf(TAG, "Static storage paths aren't available from AID_SYSTEM", new Throwable());
        }
!!!3858828.java!!!	buildPath(inout base : File, inout  : String...segments) : File
        File cur = base;
        for (String segment : segments) {
            if (cur == null) {
                cur = new File(segment);
            } else {
                cur = new File(cur, segment);
            }
        }
        return cur;
