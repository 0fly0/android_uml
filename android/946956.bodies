class WordTextSegmentIterator
!!!4444428.java!!!	getInstance(inout locale : Locale) : WordTextSegmentIterator
            if (sInstance == null) {
                sInstance = new WordTextSegmentIterator(locale);
            }
            return sInstance;
!!!4444556.java!!!	WordTextSegmentIterator(inout locale : Locale)
           super(locale);
!!!4444684.java!!!	onLocaleChanged(inout locale : Locale) : void
            mImpl = BreakIterator.getWordInstance(locale);
!!!4444812.java!!!	following(in offset : int) : int
            final int textLegth = mText.length();
            if (textLegth <= 0) {
                return null;
            }
            if (offset >= mText.length()) {
                return null;
            }
            int start = offset;
            if (start < 0) {
                start = 0;
            }
            while (!isLetterOrDigit(start) && !isStartBoundary(start)) {
                start = mImpl.following(start);
                if (start == BreakIterator.DONE) {
                    return null;
                }
            }
            final int end = mImpl.following(start);
            if (end == BreakIterator.DONE || !isEndBoundary(end)) {
                return null;
            }
            return getRange(start, end);
!!!4444940.java!!!	preceding(in offset : int) : int
            final int textLegth = mText.length();
            if (textLegth <= 0) {
                return null;
            }
            if (offset <= 0) {
                return null;
            }
            int end = offset;
            if (end > textLegth) {
                end = textLegth;
            }
            while (end > 0 && !isLetterOrDigit(end - 1) && !isEndBoundary(end)) {
                end = mImpl.preceding(end);
                if (end == BreakIterator.DONE) {
                    return null;
                }
            }
            final int start = mImpl.preceding(end);
            if (start == BreakIterator.DONE || !isStartBoundary(start)) {
                return null;
            }
            return getRange(start, end);
!!!4445068.java!!!	isStartBoundary(in index : int) : boolean
            return isLetterOrDigit(index)
                && (index == 0 || !isLetterOrDigit(index - 1));
!!!4445196.java!!!	isEndBoundary(in index : int) : boolean
            return (index > 0 && isLetterOrDigit(index - 1))
                && (index == mText.length() || !isLetterOrDigit(index));
!!!4445324.java!!!	isLetterOrDigit(in index : int) : boolean
            if (index >= 0 && index < mText.length()) {
                final int codePoint = mText.codePointAt(index);
                return Character.isLetterOrDigit(codePoint);
            }
            return false;
