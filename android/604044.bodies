class MyStreamSource
!!!1801740.cpp!!!	MyStreamSource(in fd : int)
    CHECK_GE(fd, 0);

    mFileSize = lseek64(fd, 0, SEEK_END);
    lseek64(fd, 0, SEEK_SET);
!!!1801868.cpp!!!	setListener(in listener : sp<IStreamListener>) : void
    mListener = listener;
!!!1801996.cpp!!!	setBuffers(in buffers : Vector<sp<IMemory> >) : void
    mBuffers = buffers;
!!!1802124.cpp!!!	onBufferAvailable(in index : size_t) : void
    CHECK_LT(index, mBuffers.size());

#if 0
    if (mNumPacketsSent >= 20000) {
        ALOGI("signalling discontinuity now");

        off64_t offset = 0;
        CHECK((offset % 188) == 0);

        lseek(mFd, offset, SEEK_SET);

        sp<AMessage> extra = new AMessage;
        extra->setInt32(IStreamListener::kKeyFormatChange, 0);

        mListener->issueCommand(
                IStreamListener::DISCONTINUITY, false /* synchronous */, extra);

        mNumPacketsSent = 0;
    }
#endif

    sp<IMemory> mem = mBuffers.itemAt(index);

    ssize_t n = read(mFd, mem->pointer(), mem->size());
    if (n <= 0) {
        mListener->issueCommand(IStreamListener::EOS, false /* synchronous */);
    } else {
        mListener->queueBuffer(index, n);

        mNumPacketsSent += n / 188;
    }
!!!1802252.cpp!!!	~MyStreamSource()
    close(mFd);
    mFd = -1;
