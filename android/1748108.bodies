class AudioStreamOutDump
!!!10045836.cpp!!!	AudioStreamOutDump(inout interface : AudioDumpInterface, in id : int, inout finalStream : AudioStreamOut, in devices : uint32_t, in format : int, in channels : uint32_t, in sampleRate : uint32_t)
    ALOGV("AudioStreamOutDump Constructor %p, mInterface %p, mFinalStream %p", this, mInterface, mFinalStream);
!!!10045964.cpp!!!	~AudioStreamOutDump()
    ALOGV("AudioStreamOutDump destructor");
    Close();
!!!10046092.cpp!!!	write(in buffer : void, in bytes : size_t) : ssize_t
    ssize_t ret;

    if (mFinalStream) {
        ret = mFinalStream->write(buffer, bytes);
    } else {
        usleep((((bytes * 1000) / frameSize()) / sampleRate()) * 1000);
        ret = bytes;
    }
    if(!mFile) {
        if (mInterface->fileName() != "") {
            char name[255];
            sprintf(name, "%s_out_%d_%d.pcm", mInterface->fileName().string(), mId, ++mFileCount);
            mFile = fopen(name, "wb");
            ALOGV("Opening dump file %s, fh %p", name, mFile);
        }
    }
    if (mFile) {
        fwrite(buffer, bytes, 1, mFile);
    }
    return ret;
!!!10046220.cpp!!!	sampleRate() : uint32_t
    if (mFinalStream != 0 ) return mFinalStream->sampleRate();
    return mSampleRate;
!!!10046348.cpp!!!	bufferSize() : size_t
    if (mFinalStream != 0 ) return mFinalStream->bufferSize();
    return mBufferSize;
!!!10046476.cpp!!!	channels() : uint32_t
    if (mFinalStream != 0 ) return mFinalStream->channels();
    return mChannels;
!!!10046604.cpp!!!	format() : int
    if (mFinalStream != 0 ) return mFinalStream->format();
    return mFormat;
!!!10046732.cpp!!!	latency() : uint32_t
    if (mFinalStream != 0 ) return mFinalStream->latency();
    return 0;
!!!10046860.cpp!!!	setVolume(in left : float, in right : float) : status_t
    if (mFinalStream != 0 ) return mFinalStream->setVolume(left, right);
    return NO_ERROR;
!!!10046988.cpp!!!	standby() : status_t
    ALOGV("AudioStreamOutDump standby(), mFile %p, mFinalStream %p", mFile, mFinalStream);

    Close();
    if (mFinalStream != 0 ) return mFinalStream->standby();
    return NO_ERROR;
!!!10047116.cpp!!!	setParameters(in keyValuePairs : String8) : status_t
    ALOGV("AudioStreamOutDump::setParameters %s", keyValuePairs.string());

    if (mFinalStream != 0 ) {
        return mFinalStream->setParameters(keyValuePairs);
    }

    AudioParameter param = AudioParameter(keyValuePairs);
    String8 value;
    int valueInt;
    status_t status = NO_ERROR;

    if (param.getInt(String8("set_id"), valueInt) == NO_ERROR) {
        mId = valueInt;
    }

    if (param.getInt(String8("format"), valueInt) == NO_ERROR) {
        if (mFile == 0) {
            mFormat = valueInt;
        } else {
            status = INVALID_OPERATION;
        }
    }
    if (param.getInt(String8("channels"), valueInt) == NO_ERROR) {
        if (valueInt == AudioSystem::CHANNEL_OUT_STEREO || valueInt == AudioSystem::CHANNEL_OUT_MONO) {
            mChannels = valueInt;
        } else {
            status = BAD_VALUE;
        }
    }
    if (param.getInt(String8("sampling_rate"), valueInt) == NO_ERROR) {
        if (valueInt > 0 && valueInt <= 48000) {
            if (mFile == 0) {
                mSampleRate = valueInt;
            } else {
                status = INVALID_OPERATION;
            }
        } else {
            status = BAD_VALUE;
        }
    }
    return status;
!!!10047244.cpp!!!	getParameters(in keys : String8) : String8
    if (mFinalStream != 0 ) return mFinalStream->getParameters(keys);

    AudioParameter param = AudioParameter(keys);
    return param.toString();
!!!10047372.cpp!!!	dump(in fd : int, in args : Vector<String16>) : status_t
    if (mFinalStream != 0 ) return mFinalStream->dump(fd, args);
    return NO_ERROR;
!!!10048012.cpp!!!	getRenderPosition(inout dspFrames : uint32_t) : status_t
    if (mFinalStream != 0 ) return mFinalStream->getRenderPosition(dspFrames);
    return INVALID_OPERATION;
