format 74
"graphics" // framework::base::core::jni::android::graphics
  revision 2
  modified_by 12 "shchen"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  cpp_h_dir "/home/shchen/work/jellybean/framework/base/core/jni/android/graphics/"
  cpp_src_dir "/home/shchen/work/jellybean/framework/base/core/jni/android/graphics/"
  classview 145548 "graphics"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 404236 "AutoDecoderCancel"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      operation 940684 "AutoDecoderCancel"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 2
	  param in name "joptions" explicit_type "jobject"
	  param inout name "decoder" explicit_type "SkImageDecoder"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 940812 "~AutoDecoderCancel"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 940940 "RequestCancel"
	class_operation preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 1
	  param in name "joptions" explicit_type "jobject"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      classrelation 866572 // fNext (<unidirectional association>)
	relation 866572 --->
	  a role_name "fNext" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 866572 // fNext (<unidirectional association>)
	  b parent class_ref 404236 // AutoDecoderCancel
      end

      classrelation 866700 // fPrev (<unidirectional association>)
	relation 866700 --->
	  a role_name "fPrev" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 866700 // fPrev (<unidirectional association>)
	  b parent class_ref 404236 // AutoDecoderCancel
      end

      attribute 891276 "fJOptions"
	private explicit_type "jobject"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " java options object"
      end

      attribute 891404 "fDecoder"
	private explicit_type "SkImageDecoder"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 941068 "Validate"
	class_operation preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "// can only call this inside a lock on gAutoDecoderCancelMutex

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 941196 "Validate"
	class_operation cpp_inline private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {};
"
	
	
	
	
      end
    end

    class 404364 "GraphicsJNI"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      operation 941324 "hasException"
	class_operation preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 1
	  param inout name "env" explicit_type "JNIEnv"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " returns true if an exception is set (and dumps it out to the Log)"
      end

      operation 941452 "get_jrect"
	class_operation preserve_cpp_body_indent public explicit_return_type "void"
	nparams 6
	  param inout name "env" explicit_type "JNIEnv"
	  param in name "obj" explicit_type "jobject"
	  param inout name "L" explicit_type "int"
	  param inout name "T" explicit_type "int"
	  param inout name "R" explicit_type "int"
	  param inout name "B" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * ${p2}${v2}, ${t3} * ${p3}${v3}, ${t4} * ${p4}${v4}, ${t5} * ${p5}${v5}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "///////////////////////////////////////////////////////////////////////////////

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}, ${t2} * ${p2}, ${t3} * ${p3}, ${t4} * ${p4}, ${t5} * ${p5}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 941580 "set_jrect"
	class_operation preserve_cpp_body_indent public explicit_return_type "void"
	nparams 6
	  param inout name "env" explicit_type "JNIEnv"
	  param in name "obj" explicit_type "jobject"
	  param in name "L" explicit_type "int"
	  param in name "T" explicit_type "int"
	  param in name "R" explicit_type "int"
	  param in name "B" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} ${p5}${v5}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 941708 "jrect_to_irect"
	class_operation preserve_cpp_body_indent public explicit_return_type "SkIRect"
	nparams 3
	  param inout name "env" explicit_type "JNIEnv"
	  param in name "obj" explicit_type "jobject"
	  param inout name "ir" explicit_type "SkIRect"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 941836 "irect_to_jrect"
	class_operation preserve_cpp_body_indent public explicit_return_type "void"
	nparams 3
	  param in name "ir" explicit_type "SkIRect"
	  param inout name "env" explicit_type "JNIEnv"
	  param in name "obj" explicit_type "jobject"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} * ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 941964 "jrectf_to_rect"
	class_operation preserve_cpp_body_indent public explicit_return_type "SkRect"
	nparams 3
	  param inout name "env" explicit_type "JNIEnv"
	  param in name "obj" explicit_type "jobject"
	  param inout name "r" explicit_type "SkRect"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 942092 "jrect_to_rect"
	class_operation preserve_cpp_body_indent public explicit_return_type "SkRect"
	nparams 3
	  param inout name "env" explicit_type "JNIEnv"
	  param in name "obj" explicit_type "jobject"
	  param inout name "r" explicit_type "SkRect"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 942220 "rect_to_jrectf"
	class_operation preserve_cpp_body_indent public explicit_return_type "void"
	nparams 3
	  param in name "r" explicit_type "SkRect"
	  param inout name "env" explicit_type "JNIEnv"
	  param in name "obj" explicit_type "jobject"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} * ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 942348 "set_jpoint"
	class_operation public explicit_return_type "void"
	nparams 4
	  param inout name "" explicit_type "JNIEnv"
	  param in name "jrect" explicit_type "jobject"
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 942476 "jpoint_to_ipoint"
	class_operation preserve_cpp_body_indent public explicit_return_type "SkIPoint"
	nparams 3
	  param inout name "env" explicit_type "JNIEnv"
	  param in name "obj" explicit_type "jobject"
	  param inout name "point" explicit_type "SkIPoint"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 942604 "ipoint_to_jpoint"
	class_operation preserve_cpp_body_indent public explicit_return_type "void"
	nparams 3
	  param in name "ir" explicit_type "SkIPoint"
	  param inout name "env" explicit_type "JNIEnv"
	  param in name "obj" explicit_type "jobject"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} * ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 942732 "jpointf_to_point"
	class_operation preserve_cpp_body_indent public explicit_return_type "SkPoint"
	nparams 3
	  param inout name "env" explicit_type "JNIEnv"
	  param in name "obj" explicit_type "jobject"
	  param inout name "point" explicit_type "SkPoint"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 942860 "point_to_jpointf"
	class_operation preserve_cpp_body_indent public explicit_return_type "void"
	nparams 3
	  param in name "r" explicit_type "SkPoint"
	  param inout name "env" explicit_type "JNIEnv"
	  param in name "obj" explicit_type "jobject"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} * ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 942988 "getNativeCanvas"
	class_operation preserve_cpp_body_indent public explicit_return_type "SkCanvas"
	nparams 2
	  param inout name "env" explicit_type "JNIEnv"
	  param in name "canvas" explicit_type "jobject"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 943116 "getNativePaint"
	class_operation preserve_cpp_body_indent public explicit_return_type "SkPaint"
	nparams 2
	  param inout name "env" explicit_type "JNIEnv"
	  param in name "paint" explicit_type "jobject"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 943244 "getNativeBitmap"
	class_operation preserve_cpp_body_indent public explicit_return_type "SkBitmap"
	nparams 2
	  param inout name "env" explicit_type "JNIEnv"
	  param in name "bitmap" explicit_type "jobject"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 943372 "getNativePicture"
	class_operation preserve_cpp_body_indent public explicit_return_type "SkPicture"
	nparams 2
	  param inout name "env" explicit_type "JNIEnv"
	  param in name "picture" explicit_type "jobject"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 943500 "getNativeRegion"
	class_operation preserve_cpp_body_indent public explicit_return_type "SkRegion"
	nparams 2
	  param inout name "env" explicit_type "JNIEnv"
	  param in name "region" explicit_type "jobject"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 943628 "getNativeBitmapConfig"
	class_operation preserve_cpp_body_indent public explicit_return_type "SkBitmap::Config"
	nparams 2
	  param inout name "env" explicit_type "JNIEnv"
	  param in name "jconfig" explicit_type "jobject"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "* Return the corresponding native config from the java Config enum,
        or kNo_Config if the java object is null."
      end

      operation 943756 "createBitmap"
	class_operation preserve_cpp_body_indent public explicit_return_type "jobject"
	nparams 7
	  param inout name "env" explicit_type "JNIEnv"
	  param inout name "bitmap" explicit_type "SkBitmap"
	  param in name "buffer" explicit_type "jbyteArray"
	  param in name "isMutable" explicit_type "bool"
	  param in name "ninepatch" explicit_type "jbyteArray"
	  param in name "layoutbounds" explicit_type "jintArray"
	  param in name "density" explicit_type "int"
	    defaultvalue "-1"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} ${p5}${v5}, ${t6} ${p6}${v6}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "///////////////////////////////////////////////////////////////////////////////////////////

${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "* Create a java Bitmap object given the native bitmap (required) and optional
        storage array (may be null)."
      end

      operation 943884 "createBitmap"
	class_operation preserve_cpp_body_indent public explicit_return_type "jobject"
	nparams 5
	  param inout name "env" explicit_type "JNIEnv"
	  param inout name "bitmap" explicit_type "SkBitmap"
	  param in name "isMutable" explicit_type "bool"
	  param in name "ninepatch" explicit_type "jbyteArray"
	  param in name "density" explicit_type "int"
	    defaultvalue "-1"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 944012 "createRegion"
	class_operation preserve_cpp_body_indent public explicit_return_type "jobject"
	nparams 2
	  param inout name "env" explicit_type "JNIEnv"
	  param inout name "region" explicit_type "SkRegion"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 944140 "createBitmapRegionDecoder"
	class_operation preserve_cpp_body_indent public explicit_return_type "jobject"
	nparams 2
	  param inout name "env" explicit_type "JNIEnv"
	  param inout name "bitmap" explicit_type "SkBitmapRegionDecoder"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 944268 "allocateJavaPixelRef"
	class_operation preserve_cpp_body_indent public explicit_return_type "jbyteArray"
	nparams 3
	  param inout name "env" explicit_type "JNIEnv"
	  param inout name "bitmap" explicit_type "SkBitmap"
	  param inout name "ctable" explicit_type "SkColorTable"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 944396 "SetPixels"
	class_operation preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 9
	  param inout name "env" explicit_type "JNIEnv"
	  param in name "srcColors" explicit_type "jintArray"
	  param in name "srcOffset" explicit_type "int"
	  param in name "srcStride" explicit_type "int"
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	  param in name "dstBitmap" explicit_type "SkBitmap"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} ${p5}${v5}, ${t6} ${p6}${v6}, ${t7} ${p7}${v7}, const ${t8} & ${p8}${v8}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}, const ${t8} & ${p8}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "* Copy the colors in colors[] to the bitmap, convert to the correct
        format along the way."
      end

      operation 944524 "getBitmapStorageObj"
	class_operation public explicit_return_type "jbyteArray"
	nparams 1
	  param inout name "pixref" explicit_type "SkPixelRef"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end
    end

    class 404492 "AndroidPixelRef"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 866828 // <generalisation>
	relation 866828 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 866828 // <generalisation>
	  b parent class_ref 404620 // typedef20
      end

      operation 944652 "AndroidPixelRef"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 5
	  param inout name "env" explicit_type "JNIEnv"
	  param inout name "storage" explicit_type "void"
	  param in name "size" explicit_type "size_t"
	  param in name "storageObj" explicit_type "jbyteArray"
	  param inout name "ctable" explicit_type "SkColorTable"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} * ${p4}${v4}${)}${volatile}${throw};
"
	cpp_def "///////////////////////////////////////////////////////////////////////////////

${inline}${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} * ${p4}${)} : SkMallocPixelRef(storage, size, ctable) ${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 944780 "~AndroidPixelRef"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 944908 "getStorageObj"
	cpp_inline public explicit_return_type "jbyteArray"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return fStorageObj; };
"
	
	
	
	
      end

      operation 945036 "setLocalJNIRef"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "arr" explicit_type "jbyteArray"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 945164 "globalRef"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "localref" explicit_type "void"
	    defaultvalue "NULL"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "* Used to hold a ref to the pixels when the Java bitmap may be collected.
     *  If specified, 'localref' is a valid JNI local reference to the byte array
     *  containing the pixel data.
     *
     *  'localref' may only be NULL if setLocalJNIRef() was already called with
     *  a JNI local ref that is still valid."
      end

      operation 945292 "globalUnref"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "* Release a ref that was acquired using globalRef(). "
      end

      attribute 891532 "fVM"
	private explicit_type "JavaVM"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 891660 "fOnJavaHeap"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " If true, the memory was allocated on the Java heap"
      end

      attribute 891788 "fStorageObj"
	private explicit_type "jbyteArray"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " The Java byte[] object used as the bitmap backing store"
      end

      attribute 891916 "fHasGlobalRef"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " If true, fStorageObj holds a JNI global ref"
      end

      attribute 892044 "fGlobalRefCnt"
	private explicit_type "int32_t"
	cpp_mutable cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 404620 "typedef20"
      visibility package stereotype "typedef" explicit_base_type "SkMallocPixelRef"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
    end

    class 404748 "JavaHeapBitmapRef"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "* A helper class for accessing Java-heap-allocated bitmaps.
 *  This should be used when calling into a JNI method that retains a
 *  reference to the bitmap longer than the lifetime of the Java Bitmap.
 *
 *  After creating an instance of this class, a call to
 *  AndroidPixelRef::globalRef() will allocate a JNI global reference
 *  to the backing buffer object."
      operation 945420 "JavaHeapBitmapRef"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 3
	  param inout name "env" explicit_type "JNIEnv"
	  param inout name "nativeBitmap" explicit_type "SkBitmap"
	  param in name "buffer" explicit_type "jbyteArray"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}${)}${volatile}${throw};
"
	cpp_def "////////////////////////////////////////////////////////////////////////////////

${inline}${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} ${p2}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 945548 "~JavaHeapBitmapRef"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      attribute 892172 "fEnv"
	private explicit_type "JNIEnv"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 892300 "fNativeBitmap"
	private explicit_type "SkBitmap"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 892428 "fBuffer"
	private explicit_type "jbyteArray"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 404876 "JavaPixelAllocator"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "* Allocator which allocates the backing buffer in the Java heap.
 *  Instances can only be used to perform a single allocation, which helps
 *  ensure that the allocated buffer is properly accounted for with a
 *  reference in the heap (or a JNI global reference)."
      classrelation 866956 // <generalisation>
	relation 866956 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 866956 // <generalisation>
	  b parent class_ref 405004 // typedef21
      end

      operation 945676 "JavaPixelAllocator"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 1
	  param inout name "env" explicit_type "JNIEnv"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}${)}${volatile}${throw};
"
	cpp_def "///////////////////////////////////////////////////////////////////////////////

${inline}${class}::${name}${(}${t0} * ${p0}${)}
    : fStorageObj(NULL),
      fAllocCount(0) ${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 945804 "allocPixelRef"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "bool"
	nparams 2
	  param inout name "bitmap" explicit_type "SkBitmap"
	  param inout name "ctable" explicit_type "SkColorTable"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " overrides"
      end

      operation 945932 "getStorageObj"
	cpp_inline public explicit_return_type "jbyteArray"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return fStorageObj; };
"
	
	
	
	
	comment "* Return the Java array object created for the last allocation.
     *  This returns a local JNI reference which the caller is responsible
     *  for storing appropriately (usually by passing it to the Bitmap
     *  constructor)."
      end

      operation 946060 "getStorageObjAndReset"
	cpp_inline public explicit_return_type "jbyteArray"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        jbyteArray result = fStorageObj;
        fStorageObj = NULL;
        fAllocCount = 0;
        return result;
    };
"
	
	
	
	
	comment "* Same as getStorageObj(), but also resets the allocator so that it
     *  can allocate again."
      end

      attribute 892556 "fVM"
	private explicit_type "JavaVM"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 892684 "fAllocateInJavaHeap"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 892812 "fStorageObj"
	private explicit_type "jbyteArray"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 892940 "fAllocCount"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 405004 "typedef21"
      visibility package stereotype "typedef" explicit_base_type "SkBitmap::Allocator"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
    end

    class 405132 "JNIAccess"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}
};
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      attribute 893068 "kRO_JNIAccess"
	public type class_ref 405132 // JNIAccess
	cpp_decl "  ${name}${value},${comment}"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 893196 "kRW_JNIAccess"
	public type class_ref 405132 // JNIAccess
	cpp_decl "  ${name}${value},${comment}"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 405260 "AutoJavaFloatArray"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      operation 946188 "AutoJavaFloatArray"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 4
	  param inout name "env" explicit_type "JNIEnv"
	  param in name "array" explicit_type "jfloatArray"
	  param in name "minLength" explicit_type "int"
	    defaultvalue "0"
	  param in name "access" type class_ref 405132 // JNIAccess
	    defaultvalue "kRW_JNIAccess"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${volatile}${throw};
"
	cpp_def "///////////////////////////////////////////////////////////////////////////////

${inline}${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}
: fEnv(env), fArray(array), fPtr(NULL), fLen(0) ${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 946316 "~AutoJavaFloatArray"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 946444 "ptr"
	const cpp_inline public explicit_return_type "float"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} { return fPtr; };
"
	
	
	
	
      end

      operation 946572 "length"
	const cpp_inline public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return fLen; };
"
	
	
	
	
      end

      attribute 893324 "fEnv"
	private explicit_type "JNIEnv"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 893452 "fArray"
	private explicit_type "jfloatArray"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 893580 "fPtr"
	private explicit_type "float"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 893708 "fLen"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 893836 "fReleaseMode"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 405388 "AutoJavaIntArray"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      operation 946700 "AutoJavaIntArray"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 3
	  param inout name "env" explicit_type "JNIEnv"
	  param in name "array" explicit_type "jintArray"
	  param in name "minLength" explicit_type "int"
	    defaultvalue "0"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}
: fEnv(env), fArray(array), fPtr(NULL), fLen(0) ${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 946828 "~AutoJavaIntArray"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 946956 "ptr"
	const cpp_inline public explicit_return_type "jint"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} { return fPtr; };
"
	
	
	
	
      end

      operation 947084 "length"
	const cpp_inline public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return fLen; };
"
	
	
	
	
      end

      attribute 893964 "fEnv"
	private explicit_type "JNIEnv"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 894092 "fArray"
	private explicit_type "jintArray"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 894220 "fPtr"
	private explicit_type "jint"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 894348 "fLen"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 405516 "AutoJavaShortArray"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      operation 947212 "AutoJavaShortArray"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 4
	  param inout name "env" explicit_type "JNIEnv"
	  param in name "array" explicit_type "jshortArray"
	  param in name "minLength" explicit_type "int"
	    defaultvalue "0"
	  param in name "access" type class_ref 405132 // JNIAccess
	    defaultvalue "kRW_JNIAccess"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}
: fEnv(env), fArray(array), fPtr(NULL), fLen(0) ${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 947340 "~AutoJavaShortArray"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 947468 "ptr"
	const cpp_inline public explicit_return_type "jshort"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} { return fPtr; };
"
	
	
	
	
      end

      operation 947596 "length"
	const cpp_inline public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return fLen; };
"
	
	
	
	
      end

      attribute 894476 "fEnv"
	private explicit_type "JNIEnv"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 894604 "fArray"
	private explicit_type "jshortArray"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 894732 "fPtr"
	private explicit_type "jshort"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 894860 "fLen"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 894988 "fReleaseMode"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 405644 "AutoJavaByteArray"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      operation 947724 "AutoJavaByteArray"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 3
	  param inout name "env" explicit_type "JNIEnv"
	  param in name "array" explicit_type "jbyteArray"
	  param in name "minLength" explicit_type "int"
	    defaultvalue "0"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}
: fEnv(env), fArray(array), fPtr(NULL), fLen(0) ${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 947852 "~AutoJavaByteArray"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 947980 "ptr"
	const cpp_inline public explicit_return_type "jbyte"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} { return fPtr; };
"
	
	
	
	
      end

      operation 948108 "length"
	const cpp_inline public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return fLen; };
"
	
	
	
	
      end

      attribute 895116 "fEnv"
	private explicit_type "JNIEnv"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 895244 "fArray"
	private explicit_type "jbyteArray"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 895372 "fPtr"
	private explicit_type "jbyte"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 895500 "fLen"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 405772 "NinePatchPeeker"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 867084 // <generalisation>
	relation 867084 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 867084 // <generalisation>
	  b parent class_ref 405900 // typedef22
      end

      attribute 895628 "fHost"
	private explicit_type "SkImageDecoder"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 948236 "NinePatchPeeker"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param inout name "host" explicit_type "SkImageDecoder"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}${)}${volatile}${throw} {
        // the host lives longer than we do, so a raw ptr is safe
        fHost = host;
        fPatch = NULL;
        fLayoutBounds = NULL;
    };
"
	
	
	
	
      end

      operation 948364 "~NinePatchPeeker"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {
        free(fPatch);
        delete fLayoutBounds;
    };
"
	
	
	
	
      end

      classrelation 867212 // fPatch (<unidirectional association>)
	relation 867212 --->
	  a role_name "fPatch" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 867212 // fPatch (<unidirectional association>)
	  b parent class_ref 406028 // Res_png_9patch
      end

      attribute 895756 "fLayoutBounds"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 948492 "peek"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "bool"
	nparams 3
	  param in name "tag" explicit_type "char"
	  param in name "data" explicit_type "void"
	  param in name "length" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} ${p0}[]${v0}, const ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} ${p0}[], const ${t1} * ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end
    end

    class 405900 "typedef22"
      visibility package stereotype "typedef" explicit_base_type "SkImageDecoder::Peeker"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
    end

    class 406284 "anonymous166"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum  {
${items}
};
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      attribute 896396 "kBidi_LTR"
	public type class_ref 406284 // anonymous166
	init_value " 0"
	cpp_decl "  ${name}${value},${comment}"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 896524 "kBidi_RTL"
	public type class_ref 406284 // anonymous166
	init_value " 1"
	cpp_decl "  ${name}${value},${comment}"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 896652 "kBidi_Default_LTR"
	public type class_ref 406284 // anonymous166
	init_value " 2"
	cpp_decl "  ${name}${value},${comment}"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 896780 "kBidi_Default_RTL"
	public type class_ref 406284 // anonymous166
	init_value " 3"
	cpp_decl "  ${name}${value},${comment}"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 896908 "kBidi_Force_LTR"
	public type class_ref 406284 // anonymous166
	init_value " 4"
	cpp_decl "  ${name}${value},${comment}"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 897036 "kBidi_Force_RTL"
	public type class_ref 406284 // anonymous166
	init_value " 5"
	cpp_decl "  ${name}${value},${comment}"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 897164 "kBidi_Mask"
	public type class_ref 406284 // anonymous166
	init_value " 0x7
"
	cpp_decl "  ${name}${value},${comment}"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 406412 "anonymous167"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum  {
${items}
};
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      attribute 897292 "kDirection_LTR"
	public type class_ref 406412 // anonymous167
	init_value " 0"
	cpp_decl "  ${name}${value},${comment}"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 897420 "kDirection_RTL"
	public type class_ref 406412 // anonymous167
	init_value " 1"
	cpp_decl "  ${name}${value},${comment}"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 897548 "kDirection_Mask"
	public type class_ref 406412 // anonymous167
	init_value " 0x1
"
	cpp_decl "  ${name}${value},${comment}"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 408076 "YuvToJpegEncoder"
      abstract visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      operation 955916 "create"
	class_operation preserve_cpp_body_indent public return_type class_ref 408076 // YuvToJpegEncoder
	nparams 2
	  param in name "format" explicit_type "int"
	  param inout name "strides" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "* Create an encoder based on the YUV format.
     *
     *  @param pixelFormat The yuv pixel format as defined in ui/PixelFormat.h.
     *  @param strides The number of row bytes in each image plane.
     *  @return an encoder based on the pixelFormat."
      end

      operation 956044 "YuvToJpegEncoder"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 1
	  param inout name "strides" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} * ${p0}${)} : fStrides(strides) ${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 956172 "encode"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 6
	  param inout name "stream" explicit_type "SkWStream"
	  param inout name "inYuv" explicit_type "void"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	  param inout name "offsets" explicit_type "int"
	  param in name "jpegQuality" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} * ${p4}${v4}, ${t5} ${p5}${v5}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} * ${p4}, ${t5} ${p5}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "* Encode YUV data to jpeg,  which is output to a stream.
     *
     *  @param stream The jpeg output stream.
     *  @param inYuv The input yuv data.
     *  @param width Width of the the Yuv data in terms of pixels.
     *  @param height Height of the Yuv data in terms of pixels.
     *  @param offsets The offsets in each image plane with respect to inYuv.
     *  @param jpegQuality Picture quality in [0, 100].
     *  @return true if successfully compressed the stream."
      end

      operation 956300 "~YuvToJpegEncoder"
	cpp_virtual cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {};
"
	
	
	
	
      end

      attribute 901900 "fNumPlanes"
	protected explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 902028 "fStrides"
	protected explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 956428 "setJpegCompressStruct"
	preserve_cpp_body_indent protected explicit_return_type "void"
	nparams 4
	  param inout name "cinfo" explicit_type "jpeg_compress_struct"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	  param in name "quality" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 956556 "configSamplingFactors"
	abstract cpp_virtual protected explicit_return_type "void"
	nparams 1
	  param inout name "cinfo" explicit_type "jpeg_compress_struct"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
      end

      operation 956684 "compress"
	abstract cpp_virtual protected explicit_return_type "void"
	nparams 3
	  param inout name "cinfo" explicit_type "jpeg_compress_struct"
	  param inout name "yuv" explicit_type "uint8_t"
	  param inout name "offsets" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
      end
    end

    class 408204 "Yuv420SpToJpegEncoder"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 869004 // <generalisation>
	relation 869004 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 869004 // <generalisation>
	  b parent class_ref 408076 // YuvToJpegEncoder
      end

      operation 956812 "Yuv420SpToJpegEncoder"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 1
	  param inout name "strides" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}${)}${volatile}${throw};
"
	cpp_def "///////////////////////////////////////////////////////////////////

${inline}${class}::${name}${(}${t0} * ${p0}${)} :
        YuvToJpegEncoder(strides) ${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 956940 "~Yuv420SpToJpegEncoder"
	cpp_virtual cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {};
"
	
	
	
	
      end

      operation 957068 "configSamplingFactors"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 1
	  param inout name "cinfo" explicit_type "jpeg_compress_struct"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 957196 "deinterleaveYuv"
	private explicit_return_type "void"
	nparams 6
	  param inout name "yuv" explicit_type "uint8_t"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	  param inout name "yPlanar" explicit_type "uint8_t"
	  param inout name "uPlanar" explicit_type "uint8_t"
	  param inout name "vPlanar" explicit_type "uint8_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} * & ${p3}${v3}, ${t4} * & ${p4}${v4}, ${t5} * & ${p5}${v5}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} * & ${p3}, ${t4} * & ${p4}, ${t5} * & ${p5}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 957324 "deinterleave"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 6
	  param inout name "vuPlanar" explicit_type "uint8_t"
	  param inout name "uRows" explicit_type "uint8_t"
	  param inout name "vRows" explicit_type "uint8_t"
	  param in name "rowIndex" explicit_type "int"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} ${p5}${v5}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} * ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 957452 "compress"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 3
	  param inout name "cinfo" explicit_type "jpeg_compress_struct"
	  param inout name "yuv" explicit_type "uint8_t"
	  param inout name "offsets" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end
    end

    class 408332 "Yuv422IToJpegEncoder"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 869132 // <generalisation>
	relation 869132 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 869132 // <generalisation>
	  b parent class_ref 408076 // YuvToJpegEncoder
      end

      operation 957580 "Yuv422IToJpegEncoder"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 1
	  param inout name "strides" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}${)}${volatile}${throw};
"
	cpp_def "///////////////////////////////////////////////////////////////////////////////

${inline}${class}::${name}${(}${t0} * ${p0}${)} :
        YuvToJpegEncoder(strides) ${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 957708 "~Yuv422IToJpegEncoder"
	cpp_virtual cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {};
"
	
	
	
	
      end

      operation 957836 "configSamplingFactors"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 1
	  param inout name "cinfo" explicit_type "jpeg_compress_struct"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 957964 "compress"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 3
	  param inout name "cinfo" explicit_type "jpeg_compress_struct"
	  param inout name "yuv" explicit_type "uint8_t"
	  param inout name "offsets" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 958092 "deinterleave"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 7
	  param inout name "yuv" explicit_type "uint8_t"
	  param inout name "yRows" explicit_type "uint8_t"
	  param inout name "uRows" explicit_type "uint8_t"
	  param inout name "vRows" explicit_type "uint8_t"
	  param in name "rowIndex" explicit_type "int"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}, ${t3} * ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} ${p5}${v5}, ${t6} ${p6}${v6}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} * ${p2}, ${t3} * ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end
    end

    class 639244 "FromColorProc"
      visibility package stereotype "typedef" explicit_base_type "void"
      cpp_decl "${comment}typedef ${type}(* ${name})(void* dst, const SkColor src[], int width,
                              int x, int y);
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "/////////////////////////////////////////////////////////////////////////////
 Conversions to/from SkColor, for get/setPixels, and the create method, which
 is basically like setPixels"
    end

    class 639372 "ToColorProc"
      visibility package stereotype "typedef" explicit_base_type "void"
      cpp_decl "${comment}typedef ${type}(* ${name})(SkColor dst[], const void* src, int width,
                            SkColorTable*);
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "////////////////// ToColor procs"
    end

    class 639500 "JavaEncodeFormat"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}
};
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " These must match the int values in Bitmap.java"
      attribute 1720716 "kJPEG_JavaEncodeFormat"
	public type class_ref 639500 // JavaEncodeFormat
	init_value " 0"
	cpp_decl "  ${name}${value},${comment}"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1720844 "kPNG_JavaEncodeFormat"
	public type class_ref 639500 // JavaEncodeFormat
	init_value " 1"
	cpp_decl "  ${name}${value},${comment}"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1720972 "kWEBP_JavaEncodeFormat"
	public type class_ref 639500 // JavaEncodeFormat
	init_value " 2
"
	cpp_decl "  ${name}${value},${comment}"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 639884 "JavaInputStreamAdaptor"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 1347980 // <generalisation>
	relation 1347980 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 1347980 // <generalisation>
	  b parent class_ref 640012 // typedef56
      end

      operation 1949708 "JavaInputStreamAdaptor"
	cpp_inline public explicit_return_type ""
	nparams 3
	  param inout name "env" explicit_type "JNIEnv"
	  param in name "js" explicit_type "jobject"
	  param in name "ar" explicit_type "jbyteArray"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${volatile}${throw} : fEnv(env), fJavaInputStream(js), fJavaByteArray(ar) {
        SkASSERT(ar);
        fCapacity   = env->GetArrayLength(ar);
        SkASSERT(fCapacity > 0);
        fBytesRead  = 0;
    };
"
	
	
	
	
      end

      operation 1949836 "rewind"
	cpp_virtual cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        JNIEnv* env = fEnv;

        fBytesRead = 0;

        env->CallVoidMethod(fJavaInputStream, gInputStream_resetMethodID);
        if (env->ExceptionCheck()) {
            env->ExceptionDescribe();
            env->ExceptionClear();
            SkDebugf(\"------- reset threw an exception\\n\");
            return false;
        }
        return true;
    };
"
	
	
	
	
      end

      operation 1949964 "doRead"
	cpp_inline public explicit_return_type "size_t"
	nparams 2
	  param inout name "buffer" explicit_type "void"
	  param in name "size" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        JNIEnv* env = fEnv;
        size_t bytesRead = 0;
        // read the bytes
        do {
            size_t requested = size;
            if (requested > fCapacity)
                requested = fCapacity;

            jint n = env->CallIntMethod(fJavaInputStream,
                                        gInputStream_readMethodID, fJavaByteArray, 0, requested);
            if (env->ExceptionCheck()) {
                env->ExceptionDescribe();
                env->ExceptionClear();
                SkDebugf(\"---- read threw an exception\\n\");
                return 0;
            }

            if (n < 0) { // n == 0 should not be possible, see InputStream read() specifications.
                break;  // eof
            }

            env->GetByteArrayRegion(fJavaByteArray, 0, n,
                                    reinterpret_cast<jbyte*>(buffer));
            if (env->ExceptionCheck()) {
                env->ExceptionDescribe();
                env->ExceptionClear();
                SkDebugf(\"---- read:GetByteArrayRegion threw an exception\\n\");
                return 0;
            }

            buffer = (void*)((char*)buffer + n);
            bytesRead += n;
            size -= n;
            fBytesRead += n;
        } while (size != 0);

        return bytesRead;
    };
"
	
	
	
	
      end

      operation 1950092 "doSkip"
	cpp_inline public explicit_return_type "size_t"
	nparams 1
	  param in name "size" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        JNIEnv* env = fEnv;

        jlong skipped = env->CallLongMethod(fJavaInputStream,
                                            gInputStream_skipMethodID, (jlong)size);
        if (env->ExceptionCheck()) {
            env->ExceptionDescribe();
            env->ExceptionClear();
            SkDebugf(\"------- skip threw an exception\\n\");
            return 0;
        }
        if (skipped < 0) {
            skipped = 0;
        }

        return (size_t)skipped;
    };
"
	
	
	
	
      end

      operation 1950220 "doSize"
	cpp_inline public explicit_return_type "size_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        JNIEnv* env = fEnv;
        jint avail = env->CallIntMethod(fJavaInputStream,
                                        gInputStream_availableMethodID);
        if (env->ExceptionCheck()) {
            env->ExceptionDescribe();
            env->ExceptionClear();
            SkDebugf(\"------- available threw an exception\\n\");
            avail = 0;
        }
        return avail;
    };
"
	
	
	
	
      end

      operation 1950348 "read"
	cpp_virtual cpp_inline public explicit_return_type "size_t"
	nparams 2
	  param inout name "buffer" explicit_type "void"
	  param in name "size" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        JNIEnv* env = fEnv;
        if (NULL == buffer) {
            if (0 == size) {
                return this->doSize();
            } else {
                /*  InputStream.skip(n) can return <=0 but still not be at EOF
                    If we see that value, we need to call read(), which will
                    block if waiting for more data, or return -1 at EOF
                 */
                size_t amountSkipped = 0;
                do {
                    size_t amount = this->doSkip(size - amountSkipped);
                    if (0 == amount) {
                        char tmp;
                        amount = this->doRead(&tmp, 1);
                        if (0 == amount) {
                            // if read returned 0, we're at EOF
                            break;
                        }
                    }
                    amountSkipped += amount;
                } while (amountSkipped < size);
                return amountSkipped;
            }
        }
        return this->doRead(buffer, size);
    };
"
	
	
	
	
      end

      attribute 1721100 "fEnv"
	private explicit_type "JNIEnv"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1721228 "fJavaInputStream"
	private explicit_type "jobject"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " the caller owns this object"
      end

      attribute 1721356 "fJavaByteArray"
	private explicit_type "jbyteArray"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " the caller owns this object"
      end

      attribute 1721484 "fCapacity"
	private explicit_type "size_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1721612 "fBytesRead"
	private explicit_type "size_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 640012 "typedef56"
      visibility package stereotype "typedef" explicit_base_type "SkStream"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
    end

    class 640140 "SkJavaOutputStream"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 1348108 // <generalisation>
	relation 1348108 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 1348108 // <generalisation>
	  b parent class_ref 640268 // typedef57
      end

      operation 1950476 "SkJavaOutputStream"
	cpp_inline public explicit_return_type ""
	nparams 3
	  param inout name "env" explicit_type "JNIEnv"
	  param in name "stream" explicit_type "jobject"
	  param in name "storage" explicit_type "jbyteArray"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${volatile}${throw} : fEnv(env), fJavaOutputStream(stream), fJavaByteArray(storage) {
        fCapacity = env->GetArrayLength(storage);
    };
"
	
	
	
	
      end

      operation 1950604 "write"
	cpp_virtual cpp_inline public explicit_return_type "bool"
	nparams 2
	  param in name "buffer" explicit_type "void"
	  param in name "size" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        JNIEnv* env = fEnv;
        jbyteArray storage = fJavaByteArray;

        while (size > 0) {
            size_t requested = size;
            if (requested > fCapacity) {
                requested = fCapacity;
            }

            env->SetByteArrayRegion(storage, 0, requested,
                                    reinterpret_cast<const jbyte*>(buffer));
            if (env->ExceptionCheck()) {
                env->ExceptionDescribe();
                env->ExceptionClear();
                SkDebugf(\"--- write:SetByteArrayElements threw an exception\\n\");
                return false;
            }

            fEnv->CallVoidMethod(fJavaOutputStream, gOutputStream_writeMethodID,
                                 storage, 0, requested);
            if (env->ExceptionCheck()) {
                env->ExceptionDescribe();
                env->ExceptionClear();
                SkDebugf(\"------- write threw an exception\\n\");
                return false;
            }

            buffer = (void*)((char*)buffer + requested);
            size -= requested;
        }
        return true;
    };
"
	
	
	
	
      end

      operation 1950732 "flush"
	cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        fEnv->CallVoidMethod(fJavaOutputStream, gOutputStream_flushMethodID);
    };
"
	
	
	
	
      end

      attribute 1721740 "fEnv"
	private explicit_type "JNIEnv"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1721868 "fJavaOutputStream"
	private explicit_type "jobject"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " the caller owns this object"
      end

      attribute 1721996 "fJavaByteArray"
	private explicit_type "jbyteArray"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " the caller owns this object"
      end

      attribute 1722124 "fCapacity"
	private explicit_type "size_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 640268 "typedef57"
      visibility package stereotype "typedef" explicit_base_type "SkWStream"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
    end

    class 640524 "SkLayerRasterizerGlue"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      operation 1951116 "create"
	class_operation cpp_inline public explicit_return_type "SkRasterizer"
	nparams 2
	  param inout name "env" explicit_type "JNIEnv"
	  param in name "" explicit_type "jobject"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        return new SkLayerRasterizer();
    };
"
	
	
	
	
      end

      operation 1951244 "addLayer"
	class_operation cpp_inline public explicit_return_type "void"
	nparams 6
	  param inout name "env" explicit_type "JNIEnv"
	  param in name "" explicit_type "jobject"
	  param inout name "layer" explicit_type "SkLayerRasterizer"
	  param in name "paint" explicit_type "SkPaint"
	  param in name "dx" explicit_type "float"
	  param in name "dy" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * ${p2}${v2}, const ${t3} * ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} ${p5}${v5}${)}${const}${volatile}${throw}${abstract} {
        SkASSERT(layer);
        SkASSERT(paint);
        layer->addLayer(*paint, SkFloatToScalar(dx), SkFloatToScalar(dy));
    };
"
	
	
	
	
      end
    end

    class 640652 "SkMaskFilterGlue"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      operation 1951372 "destructor"
	class_operation cpp_inline public explicit_return_type "void"
	nparams 3
	  param inout name "env" explicit_type "JNIEnv"
	  param in name "" explicit_type "jobject"
	  param inout name "filter" explicit_type "SkMaskFilter"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract} {
        SkSafeUnref(filter);
    };
"
	
	
	
	
      end

      operation 1951500 "createBlur"
	class_operation cpp_inline public explicit_return_type "SkMaskFilter"
	nparams 4
	  param inout name "env" explicit_type "JNIEnv"
	  param in name "" explicit_type "jobject"
	  param in name "radius" explicit_type "float"
	  param in name "blurStyle" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract} {
        SkMaskFilter* filter = SkBlurMaskFilter::Create(SkFloatToScalar(radius),
                                        (SkBlurMaskFilter::BlurStyle)blurStyle);
        ThrowIAE_IfNull(env, filter);
        return filter;
    };
"
	
	
	
	
      end

      operation 1951628 "createEmboss"
	class_operation cpp_inline public explicit_return_type "SkMaskFilter"
	nparams 6
	  param inout name "env" explicit_type "JNIEnv"
	  param in name "" explicit_type "jobject"
	  param in name "dirArray" explicit_type "jfloatArray"
	  param in name "ambient" explicit_type "float"
	  param in name "specular" explicit_type "float"
	  param in name "radius" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} ${p5}${v5}${)}${const}${volatile}${throw}${abstract} {
        SkScalar direction[3];

        AutoJavaFloatArray autoDir(env, dirArray, 3);
        float* values = autoDir.ptr();
        for (int i = 0; i < 3; i++) {
            direction[i] = SkFloatToScalar(values[i]);
        }

        SkMaskFilter* filter =  SkBlurMaskFilter::CreateEmboss(direction,
                                                      SkFloatToScalar(ambient),
                                                      SkFloatToScalar(specular),
                                                      SkFloatToScalar(radius));
        ThrowIAE_IfNull(env, filter);
        return filter;
    };
"
	
	
	
	
      end

      operation 1951756 "createTable"
	class_operation cpp_inline public explicit_return_type "SkMaskFilter"
	nparams 3
	  param inout name "env" explicit_type "JNIEnv"
	  param in name "" explicit_type "jobject"
	  param in name "jtable" explicit_type "jbyteArray"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract} {
        AutoJavaByteArray autoTable(env, jtable, 256);
        return new SkTableMaskFilter((const uint8_t*)autoTable.ptr());
    };
"
	
	
	
	
      end

      operation 1951884 "createClipTable"
	class_operation cpp_inline public explicit_return_type "SkMaskFilter"
	nparams 4
	  param inout name "env" explicit_type "JNIEnv"
	  param in name "" explicit_type "jobject"
	  param in name "min" explicit_type "int"
	  param in name "max" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract} {
        return SkTableMaskFilter::CreateClip(min, max);
    };
"
	
	
	
	
      end

      operation 1952012 "createGammaTable"
	class_operation cpp_inline public explicit_return_type "SkMaskFilter"
	nparams 3
	  param inout name "env" explicit_type "JNIEnv"
	  param in name "" explicit_type "jobject"
	  param in name "gamma" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract} {
        return SkTableMaskFilter::CreateGamma(gamma);
    };
"
	
	
	
	
      end
    end

    class 640908 "SkNinePatchGlue"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      operation 1957388 "isNinePatchChunk"
	class_operation cpp_inline public explicit_return_type "jboolean"
	nparams 3
	  param inout name "env" explicit_type "JNIEnv"
	  param in name "" explicit_type "jobject"
	  param in name "obj" explicit_type "jbyteArray"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract} {
        if (NULL == obj) {
            return false;
        }
        if (env->GetArrayLength(obj) < (int)sizeof(Res_png_9patch)) {
            return false;
        }
        const jbyte* array = env->GetByteArrayElements(obj, 0);
        if (array != NULL) {
            const Res_png_9patch* chunk =
                                reinterpret_cast<const Res_png_9patch*>(array);
            int8_t wasDeserialized = chunk->wasDeserialized;
            env->ReleaseByteArrayElements(obj, const_cast<jbyte*>(array),
                                          JNI_ABORT);
            return wasDeserialized != -1;
        }
        return false;
    };
"
	
	
	
	
      end

      operation 1957516 "validateNinePatchChunk"
	class_operation cpp_inline public explicit_return_type "void"
	nparams 4
	  param inout name "env" explicit_type "JNIEnv"
	  param in name "" explicit_type "jobject"
	  param in name "" explicit_type "jint"
	  param in name "obj" explicit_type "jbyteArray"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract} {
        if (env->GetArrayLength(obj) < (int) (sizeof(Res_png_9patch))) {
            jniThrowRuntimeException(env, \"Array too small for chunk.\");
            return;
        }

        // XXX Also check that dimensions are correct.
    };
"
	
	
	
	
      end

      operation 1957644 "draw"
	class_operation cpp_inline public explicit_return_type "void"
	nparams 8
	  param inout name "env" explicit_type "JNIEnv"
	  param inout name "canvas" explicit_type "SkCanvas"
	  param inout name "bounds" explicit_type "SkRect"
	  param in name "bitmap" explicit_type "SkBitmap"
	  param in name "chunkObj" explicit_type "jbyteArray"
	  param in name "paint" explicit_type "SkPaint"
	  param in name "destDensity" explicit_type "jint"
	  param in name "srcDensity" explicit_type "jint"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} & ${p2}${v2}, const ${t3} * ${p3}${v3}, ${t4} ${p4}${v4}, const ${t5} * ${p5}${v5}, ${t6} ${p6}${v6}, ${t7} ${p7}${v7}${)}${const}${volatile}${throw}${abstract} {
        size_t chunkSize = env->GetArrayLength(chunkObj);
        void* storage = alloca(chunkSize);
        env->GetByteArrayRegion(chunkObj, 0, chunkSize,
                                reinterpret_cast<jbyte*>(storage));
        if (!env->ExceptionCheck()) {
            // need to deserialize the chunk
            Res_png_9patch* chunk = static_cast<Res_png_9patch*>(storage);
            assert(chunkSize == chunk->serializedSize());
            // this relies on deserialization being done in place
            Res_png_9patch::deserialize(chunk);

            if (destDensity == srcDensity || destDensity == 0
                    || srcDensity == 0) {
                ALOGV(\"Drawing unscaled 9-patch: (%g,%g)-(%g,%g)\",
                        SkScalarToFloat(bounds.fLeft), SkScalarToFloat(bounds.fTop),
                        SkScalarToFloat(bounds.fRight), SkScalarToFloat(bounds.fBottom));
                NinePatch_Draw(canvas, bounds, *bitmap, *chunk, paint, NULL);
            } else {
                canvas->save();

                SkScalar scale = SkFloatToScalar(destDensity / (float)srcDensity);
                canvas->translate(bounds.fLeft, bounds.fTop);
                canvas->scale(scale, scale);

                bounds.fRight = SkScalarDiv(bounds.fRight-bounds.fLeft, scale);
                bounds.fBottom = SkScalarDiv(bounds.fBottom-bounds.fTop, scale);
                bounds.fLeft = bounds.fTop = 0;

                ALOGV(\"Drawing scaled 9-patch: (%g,%g)-(%g,%g) srcDensity=%d destDensity=%d\",
                        SkScalarToFloat(bounds.fLeft), SkScalarToFloat(bounds.fTop),
                        SkScalarToFloat(bounds.fRight), SkScalarToFloat(bounds.fBottom),
                        srcDensity, destDensity);

                NinePatch_Draw(canvas, bounds, *bitmap, *chunk, paint, NULL);

                canvas->restore();
            }
        }
    };
"
	
	
	
	
      end

      operation 1957772 "drawF"
	class_operation cpp_inline public explicit_return_type "void"
	nparams 9
	  param inout name "env" explicit_type "JNIEnv"
	  param in name "" explicit_type "jobject"
	  param inout name "canvas" explicit_type "SkCanvas"
	  param in name "boundsRectF" explicit_type "jobject"
	  param in name "bitmap" explicit_type "SkBitmap"
	  param in name "chunkObj" explicit_type "jbyteArray"
	  param in name "paint" explicit_type "SkPaint"
	  param in name "destDensity" explicit_type "jint"
	  param in name "srcDensity" explicit_type "jint"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * ${p2}${v2}, ${t3} ${p3}${v3}, const ${t4} * ${p4}${v4}, ${t5} ${p5}${v5}, const ${t6} * ${p6}${v6}, ${t7} ${p7}${v7}, ${t8} ${p8}${v8}${)}${const}${volatile}${throw}${abstract} {
        SkASSERT(canvas);
        SkASSERT(boundsRectF);
        SkASSERT(bitmap);
        SkASSERT(chunkObj);
        // paint is optional

        SkRect      bounds;
        GraphicsJNI::jrectf_to_rect(env, boundsRectF, &bounds);

        draw(env, canvas, bounds, bitmap, chunkObj, paint, destDensity, srcDensity);
    };
"
	
	
	
	
      end

      operation 1957900 "drawI"
	class_operation cpp_inline public explicit_return_type "void"
	nparams 9
	  param inout name "env" explicit_type "JNIEnv"
	  param in name "" explicit_type "jobject"
	  param inout name "canvas" explicit_type "SkCanvas"
	  param in name "boundsRect" explicit_type "jobject"
	  param in name "bitmap" explicit_type "SkBitmap"
	  param in name "chunkObj" explicit_type "jbyteArray"
	  param in name "paint" explicit_type "SkPaint"
	  param in name "destDensity" explicit_type "jint"
	  param in name "srcDensity" explicit_type "jint"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * ${p2}${v2}, ${t3} ${p3}${v3}, const ${t4} * ${p4}${v4}, ${t5} ${p5}${v5}, const ${t6} * ${p6}${v6}, ${t7} ${p7}${v7}, ${t8} ${p8}${v8}${)}${const}${volatile}${throw}${abstract} {
        SkASSERT(canvas);
        SkASSERT(boundsRect);
        SkASSERT(bitmap);
        SkASSERT(chunkObj);
        // paint is optional

        SkRect      bounds;
        GraphicsJNI::jrect_to_rect(env, boundsRect, &bounds);
        draw(env, canvas, bounds, bitmap, chunkObj, paint, destDensity, srcDensity);
    };
"
	
	
	
	
      end

      operation 1958028 "getTransparentRegion"
	class_operation cpp_inline public explicit_return_type "jint"
	nparams 5
	  param inout name "env" explicit_type "JNIEnv"
	  param in name "" explicit_type "jobject"
	  param in name "bitmap" explicit_type "SkBitmap"
	  param in name "chunkObj" explicit_type "jbyteArray"
	  param in name "boundsRect" explicit_type "jobject"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, const ${t2} * ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}${)}${const}${volatile}${throw}${abstract} {
        SkASSERT(bitmap);
        SkASSERT(chunkObj);
        SkASSERT(boundsRect);

        SkRect      bounds;
        GraphicsJNI::jrect_to_rect(env, boundsRect, &bounds);
        size_t chunkSize = env->GetArrayLength(chunkObj);
        void* storage = alloca(chunkSize);
        env->GetByteArrayRegion(chunkObj, 0, chunkSize,
                                reinterpret_cast<jbyte*>(storage));
        if (!env->ExceptionCheck()) {
            // need to deserialize the chunk
            Res_png_9patch* chunk = static_cast<Res_png_9patch*>(storage);
            assert(chunkSize == chunk->serializedSize());
            // this relies on deserialization being done in place
            Res_png_9patch::deserialize(chunk);
            SkRegion* region = NULL;
            NinePatch_Draw(NULL, bounds, *bitmap, *chunk, NULL, &region);
            return (jint)region;
        }
        return 0;
    };
"
	
	
	
	
      end
    end

    class 641548 "SkPathEffectGlue"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      operation 1972876 "destructor"
	class_operation cpp_inline public explicit_return_type "void"
	nparams 3
	  param inout name "env" explicit_type "JNIEnv"
	  param in name "" explicit_type "jobject"
	  param inout name "effect" explicit_type "SkPathEffect"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract} {
        SkSafeUnref(effect);
    };
"
	
	
	
	
      end

      operation 1973004 "Compose_constructor"
	class_operation cpp_inline public explicit_return_type "SkPathEffect"
	nparams 4
	  param inout name "env" explicit_type "JNIEnv"
	  param in name "" explicit_type "jobject"
	  param inout name "outer" explicit_type "SkPathEffect"
	  param inout name "inner" explicit_type "SkPathEffect"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * ${p2}${v2}, ${t3} * ${p3}${v3}${)}${const}${volatile}${throw}${abstract} {
        return new SkComposePathEffect(outer, inner);
    };
"
	
	
	
	
      end

      operation 1973132 "Sum_constructor"
	class_operation cpp_inline public explicit_return_type "SkPathEffect"
	nparams 4
	  param inout name "env" explicit_type "JNIEnv"
	  param in name "" explicit_type "jobject"
	  param inout name "first" explicit_type "SkPathEffect"
	  param inout name "second" explicit_type "SkPathEffect"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * ${p2}${v2}, ${t3} * ${p3}${v3}${)}${const}${volatile}${throw}${abstract} {
        return new SkSumPathEffect(first, second);
    };
"
	
	
	
	
      end

      operation 1973260 "Dash_constructor"
	class_operation cpp_inline public explicit_return_type "SkPathEffect"
	nparams 4
	  param inout name "env" explicit_type "JNIEnv"
	  param in name "" explicit_type "jobject"
	  param in name "intervalArray" explicit_type "jfloatArray"
	  param in name "phase" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract} {
        AutoJavaFloatArray autoInterval(env, intervalArray);
        int     count = autoInterval.length() & ~1;  // even number
        float*  values = autoInterval.ptr();

        SkAutoSTMalloc<32, SkScalar>    storage(count);
        SkScalar*                       intervals = storage.get();
        for (int i = 0; i < count; i++) {
            intervals[i] = SkFloatToScalar(values[i]);
        }
        return new SkDashPathEffect(intervals, count, SkFloatToScalar(phase));
    };
"
	
	
	
	
      end

      operation 1973388 "OneD_constructor"
	class_operation cpp_inline public explicit_return_type "SkPathEffect"
	nparams 6
	  param inout name "env" explicit_type "JNIEnv"
	  param in name "" explicit_type "jobject"
	  param in name "shape" explicit_type "SkPath"
	  param in name "advance" explicit_type "float"
	  param in name "phase" explicit_type "float"
	  param in name "style" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, const ${t2} * ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} ${p5}${v5}${)}${const}${volatile}${throw}${abstract} {
        SkASSERT(shape != NULL);
        return new SkPath1DPathEffect(*shape, SkFloatToScalar(advance),
                     SkFloatToScalar(phase), (SkPath1DPathEffect::Style)style);
    };
"
	
	
	
	
      end

      operation 1973516 "Corner_constructor"
	class_operation cpp_inline public explicit_return_type "SkPathEffect"
	nparams 3
	  param inout name "env" explicit_type "JNIEnv"
	  param in name "" explicit_type "jobject"
	  param in name "radius" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract} {
        return new SkCornerPathEffect(SkFloatToScalar(radius));
    };
"
	
	
	
	
      end

      operation 1973644 "Discrete_constructor"
	class_operation cpp_inline public explicit_return_type "SkPathEffect"
	nparams 4
	  param inout name "env" explicit_type "JNIEnv"
	  param in name "" explicit_type "jobject"
	  param in name "length" explicit_type "float"
	  param in name "deviation" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract} {
        return new SkDiscretePathEffect(SkFloatToScalar(length),
                                        SkFloatToScalar(deviation));
    };
"
	
	
	
	
      end
    end

    class 641676 "PathMeasurePair"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "  We declare an explicit pair, so that we don't have to rely on the java
    client to be sure not to edit the path while we have an active measure
    object associated with it.
 
    This costs us the copy of the path, for the sake of not allowing a bad
    java client to randomly crash (since we can't detect the case where the
    native path has been modified).
 
    The C side does have this risk, but it chooses for speed over safety. If it
    later changes this, and is internally safe from changes to the path, then
    we can remove this explicit copy from our JNI code.
 
    Note that we do not have a reference on the java side to the java path.
    Were we to not need the native copy here, we would want to add a java
    reference, so that the java path would not get GD'd while the measure object
    was still alive."
      operation 1973772 "PathMeasurePair"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} {};
"
	
	
	
	
      end

      operation 1973900 "PathMeasurePair"
	cpp_inline public explicit_return_type ""
	nparams 2
	  param in name "path" explicit_type "SkPath"
	  param in name "forceClosed" explicit_type "bool"
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${volatile}${throw} : fPath(path), fMeasure(fPath, forceClosed) {};
"
	
	
	
	
      end

      attribute 1723532 "fPath"
	public explicit_type "SkPath"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " copy of the user's path"
      end

      attribute 1723660 "fMeasure"
	public explicit_type "SkPathMeasure"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " this guy points to fPath"
      end
    end

    class 642700 "AutoJavaStringToUTF8"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      operation 1977484 "AutoJavaStringToUTF8"
	cpp_inline public explicit_return_type ""
	nparams 2
	  param inout name "env" explicit_type "JNIEnv"
	  param in name "str" explicit_type "jstring"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${volatile}${throw} : fEnv(env), fJStr(str)
    {
        fCStr = env->GetStringUTFChars(str, NULL);
    };
"
	
	
	
	
      end

      operation 1977612 "~AutoJavaStringToUTF8"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {
        fEnv->ReleaseStringUTFChars(fJStr, fCStr);
    };
"
	
	
	
	
      end

      operation 1977740 "c_str"
	const cpp_inline public explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} { return fCStr; };
"
	
	
	
	
      end

      attribute 1724556 "fEnv"
	private explicit_type "JNIEnv"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1724684 "fJStr"
	private explicit_type "jstring"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 1724812 "fCStr"
	const_attribute private explicit_type "char"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 642828 "AssetStream"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 1348364 // <generalisation>
	relation 1348364 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 1348364 // <generalisation>
	  b parent class_ref 640012 // typedef56
      end

      operation 1977868 "AssetStream"
	cpp_inline public explicit_return_type ""
	nparams 2
	  param inout name "asset" type class_ref 407820 // Asset
	  param in name "hasMemoryBase" explicit_type "bool"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${volatile}${throw} : fAsset(asset)
    {
        fMemoryBase = hasMemoryBase ? fAsset->getBuffer(false) : NULL;
    };
"
	
	
	
	
      end

      operation 1977996 "~AssetStream"
	cpp_virtual cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {
        delete fAsset;
    };
"
	
	
	
	
      end

      operation 1978124 "getMemoryBase"
	cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return fMemoryBase;
    };
"
	
	
	
	
      end

      operation 1978252 "rewind"
	cpp_virtual cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        off64_t pos = fAsset->seek(0, SEEK_SET);
        return pos != (off64_t)-1;
    };
"
	
	
	
	
      end

      operation 1978380 "read"
	cpp_virtual cpp_inline public explicit_return_type "size_t"
	nparams 2
	  param inout name "buffer" explicit_type "void"
	  param in name "size" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        ssize_t amount;

        if (NULL == buffer)
        {
            if (0 == size)  // caller is asking us for our total length
                return fAsset->getLength();

            // asset->seek returns new total offset
            // we want to return amount that was skipped

            off64_t oldOffset = fAsset->seek(0, SEEK_CUR);
            if (-1 == oldOffset)
                return 0;
            off64_t newOffset = fAsset->seek(size, SEEK_CUR);
            if (-1 == newOffset)
                return 0;

            amount = newOffset - oldOffset;
        }
        else
        {
            amount = fAsset->read(buffer, size);
        }

        if (amount < 0)
            amount = 0;
        return amount;
    };
"
	
	
	
	
      end

      classrelation 1348492 // fAsset (<unidirectional association>)
	relation 1348492 --->
	  a role_name "fAsset" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 1348492 // fAsset (<unidirectional association>)
	  b parent class_ref 407820 // Asset
      end

      attribute 1724940 "fMemoryBase"
	const_attribute private explicit_type "void"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3681676 "anonymous3"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum  {
${items}
};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      attribute 13152012 "kBidi_LTR"
	public type class_ref 3681676 // anonymous3
	init_value " 0"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13152140 "kBidi_RTL"
	public type class_ref 3681676 // anonymous3
	init_value " 1"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13152268 "kBidi_Default_LTR"
	public type class_ref 3681676 // anonymous3
	init_value " 2"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13152396 "kBidi_Default_RTL"
	public type class_ref 3681676 // anonymous3
	init_value " 3"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13152524 "kBidi_Force_LTR"
	public type class_ref 3681676 // anonymous3
	init_value " 4"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13152652 "kBidi_Force_RTL"
	public type class_ref 3681676 // anonymous3
	init_value " 5"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13152780 "kBidi_Mask"
	public type class_ref 3681676 // anonymous3
	init_value " 0x7
"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 3681804 "anonymous4"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum  {
${items}
};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      attribute 13152908 "kDirection_LTR"
	public type class_ref 3681804 // anonymous4
	init_value " 0"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13153036 "kDirection_RTL"
	public type class_ref 3681804 // anonymous4
	init_value " 1"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13153164 "kDirection_Mask"
	public type class_ref 3681804 // anonymous4
	init_value " 0x1
"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end
  end

  deploymentview 143116 "graphics"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 197516 "AutoDecodeCancel"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 404236 // AutoDecoderCancel
      end
    end

    artifact 197644 "GraphicsJNI"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 404364 // GraphicsJNI
	class_ref 404620 // typedef20
	class_ref 404492 // AndroidPixelRef
	class_ref 404748 // JavaHeapBitmapRef
	class_ref 405004 // typedef21
	class_ref 404876 // JavaPixelAllocator
	class_ref 405132 // JNIAccess
	class_ref 405260 // AutoJavaFloatArray
	class_ref 405388 // AutoJavaIntArray
	class_ref 405516 // AutoJavaShortArray
	class_ref 405644 // AutoJavaByteArray
      end
    end

    artifact 197772 "NinePatchPeeker"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 405900 // typedef22
	class_ref 405772 // NinePatchPeeker
      end
    end

    artifact 198028 "TextLayout"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 406284 // anonymous166
	class_ref 406412 // anonymous167
	class_ref 3681676 // anonymous3
	class_ref 3681804 // anonymous4
      end
    end

    artifact 198540 "YuvToJpegEncoder"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 408076 // YuvToJpegEncoder
	class_ref 408204 // Yuv420SpToJpegEncoder
	class_ref 408332 // Yuv422IToJpegEncoder
      end
    end

    artifact 280588 "FromColorProc"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 639244 // FromColorProc
      end
    end

    artifact 280716 "ToColorProc"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 639372 // ToColorProc
      end
    end

    artifact 280844 "JavaEncodeFormat"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 639500 // JavaEncodeFormat
      end
    end

    artifact 281228 "typedef56"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 640012 // typedef56
      end
    end

    artifact 281356 "JavaInputStreamAdaptor"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 639884 // JavaInputStreamAdaptor
      end
    end

    artifact 281484 "typedef57"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 640268 // typedef57
      end
    end

    artifact 281612 "SkJavaOutputStream"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 640140 // SkJavaOutputStream
      end
    end

    artifact 281868 "SkLayerRasterizerGlue"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 640524 // SkLayerRasterizerGlue
      end
    end

    artifact 281996 "SkMaskFilterGlue"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 640652 // SkMaskFilterGlue
      end
    end

    artifact 282252 "SkNinePatchGlue"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 640908 // SkNinePatchGlue
      end
    end

    artifact 282764 "SkPathEffectGlue"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 641548 // SkPathEffectGlue
      end
    end

    artifact 282892 "PathMeasurePair"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 641676 // PathMeasurePair
      end
    end

    artifact 283916 "AutoJavaStringToUTF8"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 642700 // AutoJavaStringToUTF8
      end
    end

    artifact 284044 "AssetStream"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 642828 // AssetStream
      end
    end
  end

  package_ref 154636 // android
end
