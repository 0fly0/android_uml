class AtomicIntegerArray
!!!1631259.java!!!	checkedByteOffset(in i : int) : long
        if (i < 0 || i >= array.length)
            throw new IndexOutOfBoundsException("index " + i);

        return byteOffset(i);
!!!1631387.java!!!	byteOffset(in i : int) : long
        return ((long) i << shift) + base;
!!!1631515.java!!!	AtomicIntegerArray(in length : int)
        array = new int[length];
!!!1631643.java!!!	AtomicIntegerArray(inout array : int)
        // Visibility guaranteed by final field guarantees
        this.array = array.clone();
!!!1631771.java!!!	length() : int
        return array.length;
!!!1631899.java!!!	get(in i : int) : int
        return getRaw(checkedByteOffset(i));
!!!1632027.java!!!	getRaw(in offset : long) : int
        return unsafe.getIntVolatile(array, offset);
!!!1632155.java!!!	set(in i : int, in newValue : int) : void
        unsafe.putIntVolatile(array, checkedByteOffset(i), newValue);
!!!1632283.java!!!	lazySet(in i : int, in newValue : int) : void
        unsafe.putOrderedInt(array, checkedByteOffset(i), newValue);
!!!1632411.java!!!	getAndSet(in i : int, in newValue : int) : int
        long offset = checkedByteOffset(i);
        while (true) {
            int current = getRaw(offset);
            if (compareAndSetRaw(offset, current, newValue))
                return current;
        }
!!!1632539.java!!!	compareAndSet(in i : int, in expect : int, in update : int) : boolean
        return compareAndSetRaw(checkedByteOffset(i), expect, update);
!!!1632667.java!!!	compareAndSetRaw(in offset : long, in expect : int, in update : int) : boolean
        return unsafe.compareAndSwapInt(array, offset, expect, update);
!!!1632795.java!!!	weakCompareAndSet(in i : int, in expect : int, in update : int) : boolean
        return compareAndSet(i, expect, update);
!!!1632923.java!!!	getAndIncrement(in i : int) : int
        return getAndAdd(i, 1);
!!!1633051.java!!!	getAndDecrement(in i : int) : int
        return getAndAdd(i, -1);
!!!1633179.java!!!	getAndAdd(in i : int, in delta : int) : int
        long offset = checkedByteOffset(i);
        while (true) {
            int current = getRaw(offset);
            if (compareAndSetRaw(offset, current, current + delta))
                return current;
        }
!!!1633307.java!!!	incrementAndGet(in i : int) : int
        return addAndGet(i, 1);
!!!1633435.java!!!	decrementAndGet(in i : int) : int
        return addAndGet(i, -1);
!!!1633563.java!!!	addAndGet(in i : int, in delta : int) : int
        long offset = checkedByteOffset(i);
        while (true) {
            int current = getRaw(offset);
            int next = current + delta;
            if (compareAndSetRaw(offset, current, next))
                return next;
        }
!!!1633691.java!!!	toString() : String
        int iMax = array.length - 1;
        if (iMax == -1)
            return "[]";

        StringBuilder b = new StringBuilder();
        b.append('[');
        for (int i = 0; ; i++) {
            b.append(getRaw(byteOffset(i)));
            if (i == iMax)
                return b.append(']').toString();
            b.append(',').append(' ');
        }
