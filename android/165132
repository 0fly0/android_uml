format 74
"android" // framework::av::camera::android
  revision 2
  modified_by 12 "shchen"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  cpp_h_dir "/home/shchen/work/jellybean/framework/av/camera/"
  cpp_src_dir "/home/shchen/work/jellybean/framework/av/camera/"
  cpp_namespace "android"
  classview 153868 "camera"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 601740 "BpCamera"
      visibility package 
      nactuals 2
      actual class class_ref 135180 // BpInterface
        rank 0 value class_ref 140940 // ICamera
      actual class class_ref 135180 // BpInterface
        rank 1 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 1284236 // <realization>
	relation 1284236 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    classrelation_ref 1284236 // <realization>
	  b parent class_ref 135180 // BpInterface
      end

      operation 1794572 "BpCamera"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param in name "impl" explicit_type "sp<IBinder>"
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}${)}${volatile}${throw} : BpInterface<ICamera>(impl)
    {
    };
"
	
	
	
	
      end

      operation 1794700 "disconnect"
	cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        ALOGV(\"disconnect\");
        Parcel data, reply;
        data.writeInterfaceToken(ICamera::getInterfaceDescriptor());
        remote()->transact(DISCONNECT, data, &reply);
    };
"
	
	
	
	
	comment " disconnect from camera service"
      end

      operation 1794828 "setPreviewDisplay"
	cpp_inline public return_type class_ref 128268 // status_t
	nparams 1
	  param in name "surface" explicit_type "sp<Surface>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        ALOGV(\"setPreviewDisplay\");
        Parcel data, reply;
        data.writeInterfaceToken(ICamera::getInterfaceDescriptor());
        Surface::writeToParcel(surface, &data);
        remote()->transact(SET_PREVIEW_DISPLAY, data, &reply);
        return reply.readInt32();
    };
"
	
	
	
	
	comment " pass the buffered Surface to the camera service"
      end

      operation 1794956 "setPreviewTexture"
	cpp_inline public return_type class_ref 128268 // status_t
	nparams 1
	  param in name "surfaceTexture" explicit_type "sp<ISurfaceTexture>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        ALOGV(\"setPreviewTexture\");
        Parcel data, reply;
        data.writeInterfaceToken(ICamera::getInterfaceDescriptor());
        sp<IBinder> b(surfaceTexture->asBinder());
        data.writeStrongBinder(b);
        remote()->transact(SET_PREVIEW_TEXTURE, data, &reply);
        return reply.readInt32();
    };
"
	
	
	
	
	comment " pass the buffered SurfaceTexture to the camera service"
      end

      operation 1795084 "setPreviewCallbackFlag"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "flag" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        ALOGV(\"setPreviewCallbackFlag(%d)\", flag);
        Parcel data, reply;
        data.writeInterfaceToken(ICamera::getInterfaceDescriptor());
        data.writeInt32(flag);
        remote()->transact(SET_PREVIEW_CALLBACK_FLAG, data, &reply);
    };
"
	
	
	
	
	comment " set the preview callback flag to affect how the received frames from
 preview are handled. See Camera.h for details."
      end

      operation 1795212 "startPreview"
	cpp_inline public return_type class_ref 128268 // status_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        ALOGV(\"startPreview\");
        Parcel data, reply;
        data.writeInterfaceToken(ICamera::getInterfaceDescriptor());
        remote()->transact(START_PREVIEW, data, &reply);
        return reply.readInt32();
    };
"
	
	
	
	
	comment " start preview mode, must call setPreviewDisplay first"
      end

      operation 1795340 "startRecording"
	cpp_inline public return_type class_ref 128268 // status_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        ALOGV(\"startRecording\");
        Parcel data, reply;
        data.writeInterfaceToken(ICamera::getInterfaceDescriptor());
        remote()->transact(START_RECORDING, data, &reply);
        return reply.readInt32();
    };
"
	
	
	
	
	comment " start recording mode, must call setPreviewDisplay first"
      end

      operation 1795468 "stopPreview"
	cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        ALOGV(\"stopPreview\");
        Parcel data, reply;
        data.writeInterfaceToken(ICamera::getInterfaceDescriptor());
        remote()->transact(STOP_PREVIEW, data, &reply);
    };
"
	
	
	
	
	comment " stop preview mode"
      end

      operation 1795596 "stopRecording"
	cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        ALOGV(\"stopRecording\");
        Parcel data, reply;
        data.writeInterfaceToken(ICamera::getInterfaceDescriptor());
        remote()->transact(STOP_RECORDING, data, &reply);
    };
"
	
	
	
	
	comment " stop recording mode"
      end

      operation 1795724 "releaseRecordingFrame"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "mem" explicit_type "sp<IMemory>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        ALOGV(\"releaseRecordingFrame\");
        Parcel data, reply;
        data.writeInterfaceToken(ICamera::getInterfaceDescriptor());
        data.writeStrongBinder(mem->asBinder());
        remote()->transact(RELEASE_RECORDING_FRAME, data, &reply);
    };
"
	
	
	
	
      end

      operation 1795852 "storeMetaDataInBuffers"
	cpp_inline public return_type class_ref 128268 // status_t
	nparams 1
	  param in name "enabled" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        ALOGV(\"storeMetaDataInBuffers: %s\", enabled? \"true\": \"false\");
        Parcel data, reply;
        data.writeInterfaceToken(ICamera::getInterfaceDescriptor());
        data.writeInt32(enabled);
        remote()->transact(STORE_META_DATA_IN_BUFFERS, data, &reply);
        return reply.readInt32();
    };
"
	
	
	
	
      end

      operation 1795980 "previewEnabled"
	cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        ALOGV(\"previewEnabled\");
        Parcel data, reply;
        data.writeInterfaceToken(ICamera::getInterfaceDescriptor());
        remote()->transact(PREVIEW_ENABLED, data, &reply);
        return reply.readInt32();
    };
"
	
	
	
	
	comment " check preview state"
      end

      operation 1796108 "recordingEnabled"
	cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        ALOGV(\"recordingEnabled\");
        Parcel data, reply;
        data.writeInterfaceToken(ICamera::getInterfaceDescriptor());
        remote()->transact(RECORDING_ENABLED, data, &reply);
        return reply.readInt32();
    };
"
	
	
	
	
	comment " check recording state"
      end

      operation 1796236 "autoFocus"
	cpp_inline public return_type class_ref 128268 // status_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        ALOGV(\"autoFocus\");
        Parcel data, reply;
        data.writeInterfaceToken(ICamera::getInterfaceDescriptor());
        remote()->transact(AUTO_FOCUS, data, &reply);
        status_t ret = reply.readInt32();
        return ret;
    };
"
	
	
	
	
	comment " auto focus"
      end

      operation 1796364 "cancelAutoFocus"
	cpp_inline public return_type class_ref 128268 // status_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        ALOGV(\"cancelAutoFocus\");
        Parcel data, reply;
        data.writeInterfaceToken(ICamera::getInterfaceDescriptor());
        remote()->transact(CANCEL_AUTO_FOCUS, data, &reply);
        status_t ret = reply.readInt32();
        return ret;
    };
"
	
	
	
	
	comment " cancel focus"
      end

      operation 1796492 "takePicture"
	cpp_inline public return_type class_ref 128268 // status_t
	nparams 1
	  param in name "msgType" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        ALOGV(\"takePicture: 0x%x\", msgType);
        Parcel data, reply;
        data.writeInterfaceToken(ICamera::getInterfaceDescriptor());
        data.writeInt32(msgType);
        remote()->transact(TAKE_PICTURE, data, &reply);
        status_t ret = reply.readInt32();
        return ret;
    };
"
	
	
	
	
	comment " take a picture - returns an IMemory (ref-counted mmap)"
      end

      operation 1796620 "setParameters"
	cpp_inline public return_type class_ref 128268 // status_t
	nparams 1
	  param in name "params" type class_ref 131340 // String8
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        ALOGV(\"setParameters\");
        Parcel data, reply;
        data.writeInterfaceToken(ICamera::getInterfaceDescriptor());
        data.writeString8(params);
        remote()->transact(SET_PARAMETERS, data, &reply);
        return reply.readInt32();
    };
"
	
	
	
	
	comment " set preview/capture parameters - key/value pairs"
      end

      operation 1796748 "getParameters"
	const cpp_inline public return_type class_ref 131340 // String8
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        ALOGV(\"getParameters\");
        Parcel data, reply;
        data.writeInterfaceToken(ICamera::getInterfaceDescriptor());
        remote()->transact(GET_PARAMETERS, data, &reply);
        return reply.readString8();
    };
"
	
	
	
	
	comment " get preview/capture parameters - key/value pairs"
      end

      operation 1796876 "sendCommand"
	cpp_virtual cpp_inline public return_type class_ref 128268 // status_t
	nparams 3
	  param in name "cmd" explicit_type "int32_t"
	  param in name "arg1" explicit_type "int32_t"
	  param in name "arg2" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract} {
        ALOGV(\"sendCommand\");
        Parcel data, reply;
        data.writeInterfaceToken(ICamera::getInterfaceDescriptor());
        data.writeInt32(cmd);
        data.writeInt32(arg1);
        data.writeInt32(arg2);
        remote()->transact(SEND_COMMAND, data, &reply);
        return reply.readInt32();
    };
"
	
	
	
	
      end

      operation 1797004 "connect"
	cpp_virtual cpp_inline public return_type class_ref 128268 // status_t
	nparams 1
	  param in name "cameraClient" explicit_type "sp<ICameraClient>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        Parcel data, reply;
        data.writeInterfaceToken(ICamera::getInterfaceDescriptor());
        data.writeStrongBinder(cameraClient->asBinder());
        remote()->transact(CONNECT, data, &reply);
        return reply.readInt32();
    };
"
	
	
	
	
      end

      operation 1797132 "lock"
	cpp_virtual cpp_inline public return_type class_ref 128268 // status_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        Parcel data, reply;
        data.writeInterfaceToken(ICamera::getInterfaceDescriptor());
        remote()->transact(LOCK, data, &reply);
        return reply.readInt32();
    };
"
	
	
	
	
      end

      operation 1797260 "unlock"
	cpp_virtual cpp_inline public return_type class_ref 128268 // status_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        Parcel data, reply;
        data.writeInterfaceToken(ICamera::getInterfaceDescriptor());
        remote()->transact(UNLOCK, data, &reply);
        return reply.readInt32();
    };
"
	
	
	
	
      end
    end

    class 601996 "BpCameraClient"
      visibility package 
      nactuals 2
      actual class class_ref 135180 // BpInterface
        rank 0 value class_ref 141708 // ICameraClient
      actual class class_ref 135180 // BpInterface
        rank 1 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 1284364 // <realization>
	relation 1284364 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    classrelation_ref 1284364 // <realization>
	  b parent class_ref 135180 // BpInterface
      end

      operation 1797388 "BpCameraClient"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param in name "impl" explicit_type "sp<IBinder>"
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}${)}${volatile}${throw} : BpInterface<ICameraClient>(impl)
    {
    };
"
	
	
	
	
      end

      operation 1797516 "notifyCallback"
	cpp_inline public explicit_return_type "void"
	nparams 3
	  param in name "msgType" explicit_type "int32_t"
	  param in name "ext1" explicit_type "int32_t"
	  param in name "ext2" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract} {
        ALOGV(\"notifyCallback\");
        Parcel data, reply;
        data.writeInterfaceToken(ICameraClient::getInterfaceDescriptor());
        data.writeInt32(msgType);
        data.writeInt32(ext1);
        data.writeInt32(ext2);
        remote()->transact(NOTIFY_CALLBACK, data, &reply, IBinder::FLAG_ONEWAY);
    };
"
	
	
	
	
	comment " generic callback from camera service to app"
      end

      operation 1797644 "dataCallback"
	cpp_inline public explicit_return_type "void"
	nparams 3
	  param in name "msgType" explicit_type "int32_t"
	  param in name "imageData" explicit_type "sp<IMemory>"
	  param inout name "metadata" explicit_type "camera_frame_metadata_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract} {
        ALOGV(\"dataCallback\");
        Parcel data, reply;
        data.writeInterfaceToken(ICameraClient::getInterfaceDescriptor());
        data.writeInt32(msgType);
        data.writeStrongBinder(imageData->asBinder());
        if (metadata) {
            data.writeInt32(metadata->number_of_faces);
            data.write(metadata->faces, sizeof(camera_face_t) * metadata->number_of_faces);
        }
        remote()->transact(DATA_CALLBACK, data, &reply, IBinder::FLAG_ONEWAY);
    };
"
	
	
	
	
	comment " generic data callback from camera service to app with image data"
      end

      operation 1797772 "dataCallbackTimestamp"
	cpp_inline public explicit_return_type "void"
	nparams 3
	  param in name "timestamp" type class_ref 140172 // nsecs_t
	  param in name "msgType" explicit_type "int32_t"
	  param in name "imageData" explicit_type "sp<IMemory>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, const ${t2} & ${p2}${v2}${)}${const}${volatile}${throw}${abstract} {
        ALOGV(\"dataCallback\");
        Parcel data, reply;
        data.writeInterfaceToken(ICameraClient::getInterfaceDescriptor());
        data.writeInt64(timestamp);
        data.writeInt32(msgType);
        data.writeStrongBinder(imageData->asBinder());
        remote()->transact(DATA_CALLBACK_TIMESTAMP, data, &reply, IBinder::FLAG_ONEWAY);
    };
"
	
	
	
	
	comment " generic data callback from camera service to app with image data"
      end
    end

    class 602252 "BpCameraRecordingProxy"
      visibility package 
      nactuals 2
      actual class class_ref 135180 // BpInterface
        rank 0 value class_ref 141836 // ICameraRecordingProxy
      actual class class_ref 135180 // BpInterface
        rank 1 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 1284492 // <realization>
	relation 1284492 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    classrelation_ref 1284492 // <realization>
	  b parent class_ref 135180 // BpInterface
      end

      operation 1797900 "BpCameraRecordingProxy"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param in name "impl" explicit_type "sp<IBinder>"
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}${)}${volatile}${throw} : BpInterface<ICameraRecordingProxy>(impl)
    {
    };
"
	
	
	
	
      end

      operation 1798028 "startRecording"
	cpp_inline public return_type class_ref 128268 // status_t
	nparams 1
	  param in name "listener" explicit_type "sp<ICameraRecordingProxyListener>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        ALOGV(\"startRecording\");
        Parcel data, reply;
        data.writeInterfaceToken(ICameraRecordingProxy::getInterfaceDescriptor());
        data.writeStrongBinder(listener->asBinder());
        remote()->transact(START_RECORDING, data, &reply);
        return reply.readInt32();
    };
"
	
	
	
	
      end

      operation 1798156 "stopRecording"
	cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        ALOGV(\"stopRecording\");
        Parcel data, reply;
        data.writeInterfaceToken(ICameraRecordingProxy::getInterfaceDescriptor());
        remote()->transact(STOP_RECORDING, data, &reply);
    };
"
	
	
	
	
      end

      operation 1798284 "releaseRecordingFrame"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "mem" explicit_type "sp<IMemory>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        ALOGV(\"releaseRecordingFrame\");
        Parcel data, reply;
        data.writeInterfaceToken(ICameraRecordingProxy::getInterfaceDescriptor());
        data.writeStrongBinder(mem->asBinder());
        remote()->transact(RELEASE_RECORDING_FRAME, data, &reply);
    };
"
	
	
	
	
      end
    end

    class 602508 "BpCameraRecordingProxyListener"
      visibility package 
      nactuals 2
      actual class class_ref 135180 // BpInterface
        rank 0 value class_ref 141068 // ICameraRecordingProxyListener
      actual class class_ref 135180 // BpInterface
        rank 1 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 1284620 // <realization>
	relation 1284620 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    classrelation_ref 1284620 // <realization>
	  b parent class_ref 135180 // BpInterface
      end

      operation 1798412 "BpCameraRecordingProxyListener"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param in name "impl" explicit_type "sp<IBinder>"
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}${)}${volatile}${throw} : BpInterface<ICameraRecordingProxyListener>(impl)
    {
    };
"
	
	
	
	
      end

      operation 1798540 "dataCallbackTimestamp"
	cpp_inline public explicit_return_type "void"
	nparams 3
	  param in name "timestamp" type class_ref 140172 // nsecs_t
	  param in name "msgType" explicit_type "int32_t"
	  param in name "imageData" explicit_type "sp<IMemory>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, const ${t2} & ${p2}${v2}${)}${const}${volatile}${throw}${abstract} {
        ALOGV(\"dataCallback\");
        Parcel data, reply;
        data.writeInterfaceToken(ICameraRecordingProxyListener::getInterfaceDescriptor());
        data.writeInt64(timestamp);
        data.writeInt32(msgType);
        data.writeStrongBinder(imageData->asBinder());
        remote()->transact(DATA_CALLBACK_TIMESTAMP, data, &reply, IBinder::FLAG_ONEWAY);
    };
"
	
	
	
	
      end
    end

    class 602636 "BpCameraService"
      visibility package 
      nactuals 2
      actual class class_ref 135180 // BpInterface
        rank 0 value class_ref 141196 // ICameraService
      actual class class_ref 135180 // BpInterface
        rank 1 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 1284748 // <realization>
	relation 1284748 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    classrelation_ref 1284748 // <realization>
	  b parent class_ref 135180 // BpInterface
      end

      operation 1798668 "BpCameraService"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param in name "impl" explicit_type "sp<IBinder>"
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}${)}${volatile}${throw} : BpInterface<ICameraService>(impl)
    {
    };
"
	
	
	
	
      end

      operation 1798796 "getNumberOfCameras"
	cpp_virtual cpp_inline public explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        Parcel data, reply;
        data.writeInterfaceToken(ICameraService::getInterfaceDescriptor());
        remote()->transact(BnCameraService::GET_NUMBER_OF_CAMERAS, data, &reply);
        return reply.readInt32();
    };
"
	
	
	
	
	comment " get number of cameras available"
      end

      operation 1798924 "getCameraInfo"
	cpp_virtual cpp_inline public return_type class_ref 128268 // status_t
	nparams 2
	  param in name "cameraId" explicit_type "int"
	  param inout name "cameraInfo" type class_ref 139788 // CameraInfo
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        Parcel data, reply;
        data.writeInterfaceToken(ICameraService::getInterfaceDescriptor());
        data.writeInt32(cameraId);
        remote()->transact(BnCameraService::GET_CAMERA_INFO, data, &reply);
        cameraInfo->facing = reply.readInt32();
        cameraInfo->orientation = reply.readInt32();
        return reply.readInt32();
    };
"
	
	
	
	
	comment " get information about a camera"
      end

      operation 1799052 "connect"
	cpp_virtual cpp_inline public explicit_return_type "sp<ICamera>"
	nparams 2
	  param in name "cameraClient" explicit_type "sp<ICameraClient>"
	  param in name "cameraId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        Parcel data, reply;
        data.writeInterfaceToken(ICameraService::getInterfaceDescriptor());
        data.writeStrongBinder(cameraClient->asBinder());
        data.writeInt32(cameraId);
        remote()->transact(BnCameraService::CONNECT, data, &reply);
        return interface_cast<ICamera>(reply.readStrongBinder());
    };
"
	
	
	
	
	comment " connect to camera service"
      end
    end
  end

  deploymentview 152844 "android"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 243212 "BpCamera"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 601740 // BpCamera
      end
    end

    artifact 243468 "BpCameraClient"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 601996 // BpCameraClient
      end
    end

    artifact 243724 "BpCameraRecordingProxy"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 602252 // BpCameraRecordingProxy
      end
    end

    artifact 243980 "BpCameraRecordingProxyListener"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 602508 // BpCameraRecordingProxyListener
      end
    end

    artifact 244108 "BpCameraService"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 602636 // BpCameraService
      end
    end
  end
end
