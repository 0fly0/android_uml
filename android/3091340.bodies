class KeyDetector
!!!12943500.java!!!	KeyDetector(in keyHysteresisDistance : float)
        mKeyHysteresisDistanceSquared = (int)(keyHysteresisDistance * keyHysteresisDistance);
!!!12943628.java!!!	setKeyboard(inout keyboard : Keyboard, in correctionX : float, in correctionY : float) : void
        if (keyboard == null)
            throw new NullPointerException();
        mCorrectionX = (int)correctionX;
        mCorrectionY = (int)correctionY;
        mKeyboard = keyboard;
!!!12943756.java!!!	getKeyHysteresisDistanceSquared() : int
        return mKeyHysteresisDistanceSquared;
!!!12943884.java!!!	getTouchX(in x : int) : int
        return x + mCorrectionX;
!!!12944012.java!!!	getTouchY(in y : int) : int
        return y + mCorrectionY;
!!!12944140.java!!!	getKeyboard() : Keyboard
        if (mKeyboard == null)
            throw new IllegalStateException("keyboard isn't set");
        return mKeyboard;
!!!12944268.java!!!	setProximityCorrectionEnabled(inout enabled : boolean) : void
        mProximityCorrectOn = enabled;
!!!12944396.java!!!	isProximityCorrectionEnabled() : boolean
        return mProximityCorrectOn;
!!!12944524.java!!!	alwaysAllowsSlidingInput() : boolean
        return false;
!!!12944652.java!!!	detectHitKey(in x : int, in y : int) : Key
        final int touchX = getTouchX(x);
        final int touchY = getTouchY(y);

        int minDistance = Integer.MAX_VALUE;
        Key primaryKey = null;
        for (final Key key: mKeyboard.getNearestKeys(touchX, touchY)) {
            final boolean isOnKey = key.isOnKey(touchX, touchY);
            final int distance = key.squaredDistanceToEdge(touchX, touchY);
            // To take care of hitbox overlaps, we compare mCode here too.
            if (primaryKey == null || distance < minDistance
                    || (distance == minDistance && isOnKey && key.mCode > primaryKey.mCode)) {
                minDistance = distance;
                primaryKey = key;
            }
        }
        return primaryKey;
!!!12944780.java!!!	printableCode(inout key : Key) : String
        return key != null ? Keyboard.printableCode(key.mCode) : "none";
!!!12944908.java!!!	printableCodes(inout codes : int) : String
        final StringBuilder sb = new StringBuilder();
        boolean addDelimiter = false;
        for (final int code : codes) {
            if (code == NOT_A_CODE) break;
            if (addDelimiter) sb.append(", ");
            sb.append(Keyboard.printableCode(code));
            addDelimiter = true;
        }
        return "[" + sb + "]";
