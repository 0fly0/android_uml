class Engine
!!!2177563.java!!!	Engine(inout service : String)
        this.serviceName = service;
!!!2177691.java!!!	getInstance(inout algorithm : String, inout param : Object) : SpiAndProvider
        if (algorithm == null) {
            throw new NoSuchAlgorithmException("Null algorithm name");
        }
        int newCacheVersion = Services.getCacheVersion();
        Provider.Service service;
        ServiceCacheEntry cacheEntry = this.serviceCache;
        if (cacheEntry != null
                && cacheEntry.algorithm.equalsIgnoreCase(algorithm)
                && newCacheVersion == cacheEntry.cacheVersion) {
            service = cacheEntry.service;
        } else {
            if (Services.isEmpty()) {
                throw notFound(serviceName, algorithm);
            }
            String name = this.serviceName + "." + algorithm.toUpperCase(Locale.US);
            service = Services.getService(name);
            if (service == null) {
                throw notFound(serviceName, algorithm);
            }
            this.serviceCache = new ServiceCacheEntry(algorithm, newCacheVersion, service);
        }
        return new SpiAndProvider(service.newInstance(param), service.getProvider());
!!!2177819.java!!!	getInstance(inout algorithm : String, inout provider : Provider, inout param : Object) : Object
        if (algorithm == null) {
            throw new NoSuchAlgorithmException("algorithm == null");
        }
        Provider.Service service = provider.getService(serviceName, algorithm);
        if (service == null) {
            throw notFound(serviceName, algorithm);
        }
        return service.newInstance(param);
!!!2177947.java!!!	notFound(inout serviceName : String, inout algorithm : String) : NoSuchAlgorithmException
        throw new NoSuchAlgorithmException(serviceName + " " + algorithm
                                           + " implementation not found");
