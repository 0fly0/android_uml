class FacFunctionImpl
!!!12384012.java!!!	FacFunctionImpl()
        if (!Utils.isPrototyping()) {

            mJniWrapper = FactorySettingJNIWrapper.getInstance();

            IBinder binder = null;
            int tryCount = 0;
            do {
                Object[] argArray = new Object[1];
                argArray[0] = KEYFILTER_SERVICE_NAME;
                binder = (IBinder) Utils.invokeStaticMethod("android.os.ServiceManager",
                        "getService", argArray);
                try {
                    Thread.sleep(100);
                } catch (InterruptedException e) {
                    Log.w(TAG, "getService e = " + e);
                }
            } while (null == binder && tryCount++ < 10);

            if (binder != null) {
                sKeyFilterService = IKeyFilterService.Stub.asInterface(binder);
            }
        }
!!!12384140.java!!!	getInstance() : FacFunctionImpl
        if (instance == null) {
            instance = new FacFunctionImpl();
        }
        return instance;

!!!12384268.java!!!	setContext(inout context : Context) : void
        mContext = context;

!!!12384396.java!!!	execWhenHisFacEnding() : void

        mJniWrapper.JniClose();

!!!12384524.java!!!	setRDRV(in value : int) : void

        setWhiteBalanceValue(RDRV_INDEX, value);

!!!12384652.java!!!	getRDRV() : int

        // getWhiteBalanceValues();
        return getWhiteBalanceValue(RDRV_INDEX);
!!!12384780.java!!!	setGDRV(in value : int) : void

        setWhiteBalanceValue(GDRV_INDEX, value);

!!!12384908.java!!!	getGDRV() : int

        return getWhiteBalanceValue(GDRV_INDEX);
!!!12385036.java!!!	setBDRV(in value : int) : void

        setWhiteBalanceValue(BDRV_INDEX, value);

!!!12385164.java!!!	getBDRV() : int

        return getWhiteBalanceValue(BDRV_INDEX);
!!!12385292.java!!!	setRCUT(in value : int) : void

        setWhiteBalanceValue(RCUT_INDEX, value);

!!!12385420.java!!!	getRCUT() : int

        return getWhiteBalanceValue(RCUT_INDEX);
!!!12385548.java!!!	setGCUT(in value : int) : void

        setWhiteBalanceValue(GCUT_INDEX, value);

!!!12385676.java!!!	getGCUT() : int

        return getWhiteBalanceValue(GCUT_INDEX);
!!!12385804.java!!!	setBCUT(in value : int) : void

        setWhiteBalanceValue(BCUT_INDEX, value);

!!!12385932.java!!!	getBCUT() : int

        return getWhiteBalanceValue(BCUT_INDEX);
!!!12386060.java!!!	setModelPanel(in value : int) : void
        mJniWrapper.SetSysControl(SystemProperty.MV_FS_CTRL_PANEL_INDEX.ordinal(), value);
!!!12386188.java!!!	getModelPanel() : int
        int[] panelId = new int[1];
        mJniWrapper.GetSysControl(SystemProperty.MV_FS_CTRL_PANEL_INDEX.ordinal(), panelId);
        return panelId[0];
!!!12386316.java!!!	setModelIndex(in value : int) : void
        mJniWrapper.SetModelID(value, 0);
!!!12386444.java!!!	getModelIndex() : int
        int[] modeIndex = new int[1];
        mJniWrapper.GetSysControl(SystemProperty.MV_FS_CTRL_MODEL_INDEX.ordinal(), modeIndex);
        return modeIndex[0];
!!!12386572.java!!!	setColorTemperature(in value : int) : void
        ColorTemperature sourceTemp = null;
        MVColorMode targetTemp = null;
        for (ColorTemperature temp : ColorTemperature.values()) {
            if (temp.ordinal() == value) {
                sourceTemp = temp;
                break;
            }
        }
        Set<Entry<MVColorMode, ColorTemperature>> entries = EnumMapping.colorModeMapping.entrySet();
        for (Entry<MVColorMode, ColorTemperature> entry : entries) {
            ColorTemperature colorTemp = entry.getValue();
            if (colorTemp == sourceTemp) {
                targetTemp = entry.getKey();
                break;
            }
        }

        if (targetTemp != null) {
            mJniWrapper.SetVideoProperty(VideoProperty.MV_FS_VIDEO_COLOR_TEMPERATURE.ordinal(),
                targetTemp.ordinal());
        }
        getColorTempOffsetValues();
!!!12386700.java!!!	getColorTemperature() : int
        ColorTemperature targetTemp = null;
        MVColorMode sourceTemp = null;
        int curColorTempMode[] = new int[1];
        mJniWrapper.GetVideoProperty(VideoProperty.MV_FS_VIDEO_COLOR_TEMPERATURE.ordinal(),
                curColorTempMode);
        for (MVColorMode temp : MVColorMode.values()) {
            if (temp.ordinal() == curColorTempMode[0]) {
                sourceTemp = temp;
                break;
            }
        }
        targetTemp = EnumMapping.colorModeMapping.get(sourceTemp);
        if (targetTemp != null) {
            return targetTemp.ordinal();
        } else {
            return 0;
        }
!!!12386828.java!!!	setFactoryLogo(in value : int) : void
        mJniWrapper.SetSysControl(SystemProperty.MV_FS_CTRL_BOOTUP_LOGO.ordinal(), value);
!!!12386956.java!!!	getFactoryLogo() : int
        int[] value = new int[1];
        mJniWrapper.GetSysControl(SystemProperty.MV_FS_CTRL_BOOTUP_LOGO.ordinal(), value);
        return value[0];
!!!12387084.java!!!	setRDRVOffset(in value : int) : void
        setColorTempOffset(RDRV_INDEX, value);
!!!12387212.java!!!	getRDRVOffset() : int

        // getColorTempOffsetValues();
        return getColorTempOffset(RDRV_INDEX);
!!!12387340.java!!!	setGDRVOffset(in value : int) : void

        setColorTempOffset(GDRV_INDEX, value);

!!!12387468.java!!!	getGDRVOffset() : int

        return getColorTempOffset(GDRV_INDEX);
!!!12387596.java!!!	setBDRVOffset(in value : int) : void

        setColorTempOffset(BDRV_INDEX, value);

!!!12387724.java!!!	getBDRVOffset() : int

        return getColorTempOffset(BDRV_INDEX);
!!!12387852.java!!!	setRCUTOffset(in value : int) : void
        setColorTempOffset(RCUT_INDEX, value);
!!!12387980.java!!!	getRCUTOffset() : int
        return getColorTempOffset(RCUT_INDEX);
!!!12388108.java!!!	setGCUTOffset(in value : int) : void
        setColorTempOffset(GCUT_INDEX, value);
!!!12388236.java!!!	getGCUTOffset() : int
        return getColorTempOffset(GCUT_INDEX);
!!!12388364.java!!!	setBCUTOffset(in value : int) : void
        setColorTempOffset(BCUT_INDEX, value);
!!!12388492.java!!!	getBCUTOffset() : int
        return getColorTempOffset(BCUT_INDEX);
!!!12388620.java!!!	getCurrentSource() : int
        MVSourceType mvSource = null;
        int curSourceIndex[] = new int[1];
        mJniWrapper.GetSysControl(SystemProperty.MV_FS_CTRL_INPUT_SOURCE.ordinal(), curSourceIndex);
        for (MVSourceType source : MVSourceType.values()) {
            if (source.ordinal() == curSourceIndex[0]) {
                mvSource = source;
                break;
            }
        }
        SourceEnum target = EnumMapping.sourceInputMapping.get(mvSource);
        if (target != null) {
            return target.ordinal();
        } else {
            return 0;
        }
!!!12388748.java!!!	setCurrentSource(in input : int) : void
        SourceEnum sourceEnum = null;
        MVSourceType mvSource = null;
        for (SourceEnum source : SourceEnum.values()) {
            if (source.ordinal() == input) {
                sourceEnum = source;
                break;
            }
        }
        Set<Entry<MVSourceType, SourceEnum>> entries = EnumMapping.sourceInputMapping.entrySet();
        for (Entry<MVSourceType, SourceEnum> entry : entries) {
            SourceEnum value = entry.getValue();
            if (value == sourceEnum) {
                mvSource = entry.getKey();
                break;
            }
        }
        if (mvSource != null) {
            mJniWrapper.SetSysControl(SystemProperty.MV_FS_CTRL_INPUT_SOURCE.ordinal(),
                mvSource.ordinal());
        }
!!!12388876.java!!!	setToFac(in value : int) : void
        mJniWrapper.SetSysControl(SystemProperty.MV_FS_CTRL_RC_TO_FACTORY.ordinal(), value);
!!!12389004.java!!!	getToFac() : int
        int toFacMode[] = new int[1];
        mJniWrapper.GetSysControl(SystemProperty.MV_FS_CTRL_RC_TO_FACTORY.ordinal(), toFacMode);
        return toFacMode[0];
!!!12389132.java!!!	setFactoryStatus(in value : int) : void
        mJniWrapper.SetSysControl(SystemProperty.MV_FS_CTRL_FACTORY_STATUS.ordinal(), value);
        showOrHideLogo(value);
!!!12389260.java!!!	getFactoryStatus() : int
        int status[] = new int[1];
        mJniWrapper.GetSysControl(SystemProperty.MV_FS_CTRL_FACTORY_STATUS.ordinal(), status);
        return status[0];
!!!12389388.java!!!	setPowerOnMode(in value : int) : void
        mJniWrapper.SetSysControl(SystemProperty.MV_FS_CTRL_POWER_MODE.ordinal(), value);
!!!12389516.java!!!	getPowerOnMode() : int
        int[] powerMode = new int[1];
        mJniWrapper.GetSysControl(SystemProperty.MV_FS_CTRL_POWER_MODE.ordinal(), powerMode);
        return powerMode[0];
!!!12389644.java!!!	setBTSCMode(in value : int) : void

!!!12389772.java!!!	getBTSCMode() : int

        return 0;
!!!12389900.java!!!	openOrCloseCCD() : void

!!!12390028.java!!!	setSpeakerMode(inout value : boolean) : void

!!!12390156.java!!!	getSpeakerMode() : boolean

        return false;
!!!12390284.java!!!	setResetAll(in i : int) : void
        notifyTvReseted();
        mJniWrapper.DoResetFactory(RESET_PARAM.MASTER_CLEAR.ordinal());

!!!12390412.java!!!	setFactoryOk(in i : int) : void
        notifyTvReseted();
        mJniWrapper.DoResetUser(RESET_PARAM.MASTER_CLEAR.ordinal());

!!!12390540.java!!!	notifyTvReseted() : void
        if (mContext != null) {
            Intent i = new Intent("com.marvell.willowtv.TV_FACTORY_RESETED");
            mContext.startService(i);
        }
!!!12390668.java!!!	getNetMacAddr() : String
        return null;
!!!12390796.java!!!	setNetMacAddr(in port : int, in addr : String) : void
        String arrs[] = addr.split(":");
        int addrs[] = new int[6];
        for (int i = 0; i < 6; i++) {
            addrs[i] = (Integer.valueOf(arrs[i], 16) & 0xffff);
        }
        mJniWrapper.SetNetMacAddr(port, addrs);
!!!12390924.java!!!	setEthMacAddr(in addr : String) : void
        setNetMacAddr(0, addr);
!!!12391052.java!!!	getEthMacAddr() : String
        return getNetMacAddr(0);
!!!12391180.java!!!	setWifiMacAddr(in addr : String) : void
        setNetMacAddr(1, addr);
!!!12391308.java!!!	getWifiMacAddr() : String
        return getNetMacAddr(1);
!!!12391436.java!!!	getNetMacAddr(in port : int) : String
        StringBuffer buffer = new StringBuffer();
        mJniWrapper.GetNetMacAddr(port, buffer);
        return buffer.toString();
!!!12391564.java!!!	getNetIpAddr(in port : int) : String
        StringBuffer buffer = new StringBuffer();
        mJniWrapper.GetNetIpAddr(port, buffer);
        return buffer.toString();
!!!12391692.java!!!	setNetIpAddr(in port : int, in addr : String) : void
        String arrs[] = addr.split(".");
        int addrs[] = new int[4];
        for (int i = 0; i < 4; i++) {
            addrs[i] = Integer.parseInt(arrs[i]);
        }
        mJniWrapper.SetNetIpAddr(port, addrs);
!!!12391820.java!!!	setSapMode(in mode : int) : void
        mJniWrapper.SetSysControl(SystemProperty.MV_FS_CTRL_CHANNEL_MTS_MODE.ordinal(), mode);
!!!12391948.java!!!	getSapMode() : int
        int mode[] = new int[1];
        mJniWrapper.GetSysControl(SystemProperty.MV_FS_CTRL_CHANNEL_MTS_MODE.ordinal(), mode);
        return mode[0];
!!!12392076.java!!!	setAudioLanguage(in lan : int) : void
        mJniWrapper.SetSysControl(SystemProperty.MV_FS_CTRL_AUDIO_LANUAGE.ordinal(), lan);
!!!12392204.java!!!	getAudioLanguage() : int
        int lan[] = new int[1];
        mJniWrapper.GetSysControl(SystemProperty.MV_FS_CTRL_AUDIO_LANUAGE.ordinal(), lan);
        return lan[0];
!!!12392332.java!!!	setPictureMode(in value : int) : void
        MVPicMode mvPicMode = null;
        PictureMode pictureMode = null;
        for (PictureMode pm : PictureMode.values()) {
            if (pm.ordinal() == value) {
                pictureMode = pm;
                break;
            }
        }
        Set<Entry<MVPicMode, PictureMode>> entries = EnumMapping.picModeMapping.entrySet();
        for (Entry<MVPicMode, PictureMode> entry : entries) {
            PictureMode pm = entry.getValue();
            if (pm == pictureMode) {
                mvPicMode = entry.getKey();
                break;
            }
        }
        if (mvPicMode != null) {
            mJniWrapper.SetVideoProperty(VideoProperty.MV_FS_VIDEO_PICTUREMODE.ordinal(),
                mvPicMode.ordinal());
        }
!!!12392460.java!!!	getPictureMode() : int
        MVPicMode mvPicMode = null;
        PictureMode pictureMode = null;
        int picMode[] = new int[1];
        mJniWrapper.GetVideoProperty(VideoProperty.MV_FS_VIDEO_PICTUREMODE.ordinal(), picMode);
        for (MVPicMode mode : MVPicMode.values()) {
            if (mode.ordinal() == picMode[0]) {
                mvPicMode = mode;
                break;
            }
        }
        pictureMode = EnumMapping.picModeMapping.get(mvPicMode);
        if (pictureMode != null) {
            return pictureMode.ordinal();
        } else {
            return 0;
        }
!!!12392588.java!!!	setBrightness(in value : int) : void
        mJniWrapper.SetVideoProperty(VideoProperty.MV_FS_VIDEO_BRIGHTNESS.ordinal(), value);
!!!12392716.java!!!	getBrightness() : int
        int brightnessValue[] = new int[1];
        mJniWrapper.GetVideoProperty(VideoProperty.MV_FS_VIDEO_BRIGHTNESS.ordinal(),
                brightnessValue);
        return brightnessValue[0];
!!!12392844.java!!!	setContrast(in value : int) : void
        mJniWrapper.SetVideoProperty(VideoProperty.MV_FS_VIDEO_CONTRAST.ordinal(), value);
!!!12392972.java!!!	getContrast() : int
        int contrastValue[] = new int[1];
        mJniWrapper.GetVideoProperty(VideoProperty.MV_FS_VIDEO_CONTRAST.ordinal(), contrastValue);
        return contrastValue[0];
!!!12393100.java!!!	setColor(in value : int) : void
        mJniWrapper.SetVideoProperty(VideoProperty.MV_FS_VIDEO_SATUATION.ordinal(), value);
!!!12393228.java!!!	getColor() : int
        int colorValue[] = new int[1];
        mJniWrapper.GetVideoProperty(VideoProperty.MV_FS_VIDEO_SATUATION.ordinal(), colorValue);
        return colorValue[0];
!!!12393356.java!!!	setSharpness(in value : int) : void
        mJniWrapper.SetVideoProperty(VideoProperty.MV_FS_VIDEO_SHARPNESS.ordinal(), value);
!!!12393484.java!!!	getSharpness() : int
        int sharpnessMode[] = new int[1];
        mJniWrapper.GetVideoProperty(VideoProperty.MV_FS_VIDEO_SHARPNESS.ordinal(), sharpnessMode);
        return sharpnessMode[0];
!!!12393612.java!!!	setVideoCurveModeGroup(in value : int) : void

!!!12393740.java!!!	getVideoCurveModeGroup() : int

        return 0;
!!!12393868.java!!!	set2Dor3D(in value : int) : void

!!!12393996.java!!!	get2Dor3D() : int

        return 0;
!!!12394124.java!!!	setPictureCurve(in nType : int, in nMode : int, inout value : int) : int
        return mJniWrapper.SetPictureCurve(nType, nMode, value);
!!!12394252.java!!!	getPictureCurve(in nType : int, in nMode : int) : int
        int curveValue[] = new int[1];
        mJniWrapper.GetPictureCurve(nType, nMode, curveValue);
        return curveValue[0];
!!!12394380.java!!!	setPictureCurveMode(in mode : int) : void
        picCurveMode = mode;

!!!12394508.java!!!	getPictureCurveMode() : int
        return picCurveMode;
!!!12394636.java!!!	setPictureCurve0(in value : int) : int

        return setPictureCurve(CURVE_POINT_0, picCurveMode, new int[] {
                value
        });

!!!12394764.java!!!	getPictureCurve0() : int

        return getPictureCurve(CURVE_POINT_0, picCurveMode);
!!!12394892.java!!!	setPictureCurve25(in value : int) : int

        return setPictureCurve(CURVE_POINT_25, picCurveMode, new int[] {
                value
        });

!!!12395020.java!!!	getPictureCurve25() : int

        return getPictureCurve(CURVE_POINT_25, picCurveMode);
!!!12395148.java!!!	setPictureCurve50(in value : int) : int

        return setPictureCurve(CURVE_POINT_50, picCurveMode, new int[] {
                value
        });
!!!12395276.java!!!	getPictureCurve50() : int

        return getPictureCurve(CURVE_POINT_50, picCurveMode);
!!!12395404.java!!!	setPictureCurve75(in value : int) : int

        return setPictureCurve(CURVE_POINT_75, picCurveMode, new int[] {
                value
        });

!!!12395532.java!!!	getPictureCurve75() : int

        return getPictureCurve(CURVE_POINT_75, picCurveMode);
!!!12395660.java!!!	setPictureCurve100(in value : int) : int

        return setPictureCurve(CURVE_POINT_100, picCurveMode, new int[] {
                value
        });

!!!12395788.java!!!	getPictureCurve100() : int

        return getPictureCurve(CURVE_POINT_100, picCurveMode);
!!!12395916.java!!!	getPcitureType() : int
        int _3DMode = get3DMode();
        if (_3DMode == THREEDMODE_OFF) {
            return PICTURETYPE_2D;
        } else {
            return PICTURETYPE_3D;
        }
!!!12396044.java!!!	getPictureCurveMaximum() : int

        return 0;
!!!12396172.java!!!	getPictureCurveMinimum() : int

        return 0;
!!!12396300.java!!!	setAudioMode(in value : int) : void

!!!12396428.java!!!	getAudioMode() : int

        return 0;
!!!12396556.java!!!	setEqualizer(in nType : int, in value : int) : void
        mJniWrapper.SetSoundEqualizer(nType, new int[] {
                value
        });
!!!12396684.java!!!	getEqualizer(in nType : int) : int
        int value[] = new int[1];
        mJniWrapper.GetSoundEqualizer(nType, value);
        return value[0];
!!!12396812.java!!!	setEqualizer120Hz(in value : int) : void

        setEqualizer(EQ_120HZ, value);

!!!12396940.java!!!	setEqualizer500Hz(in value : int) : void

        setEqualizer(EQ_500HZ, value);

!!!12397068.java!!!	setEqualizer1500Hz(in value : int) : void

        setEqualizer(EQ_1_5KHZ, value);

!!!12397196.java!!!	setEqualizer5KHz(in value : int) : void

        setEqualizer(EQ_5KHZ, value);

!!!12397324.java!!!	setEqualizer10KHz(in value : int) : void

        setEqualizer(EQ_10KHZ, value);

!!!12397452.java!!!	getEqualizer120Hz() : int

        return getEqualizer(EQ_120HZ);
!!!12397580.java!!!	getEqualizer500Hz() : int

        return getEqualizer(EQ_500HZ);
!!!12397708.java!!!	getEqualizer1500Hz() : int

        return getEqualizer(EQ_1_5KHZ);
!!!12397836.java!!!	getEqualizer5KHz() : int

        return getEqualizer(EQ_5KHZ);
!!!12397964.java!!!	getEqualizer10KHz() : int

        return getEqualizer(EQ_10KHZ);
!!!12398092.java!!!	setPrescale(in value : int) : void
        Log.d(TAG, "setPrescale value=" + value);
        mJniWrapper.SetSysControl(SystemProperty.MV_FS_CTRL_AUDIO_VOLUME_PRESCALE.ordinal(), value);
!!!12398220.java!!!	getPrescale() : int

        Log.d(TAG, "FacFunctionImpl getPrescale##########");
        int[] value = new int[1];
        mJniWrapper.GetSysControl(SystemProperty.MV_FS_CTRL_AUDIO_VOLUME_PRESCALE.ordinal(), value);
        return value[0];
!!!12398348.java!!!	setVolumeCurve(in nType : int, in value : int) : int
        Log.d(TAG, "setVolumeCurve value=" + value);
        return mJniWrapper.SetVolumeCurve(nType, new int[] {
                value
        });
!!!12398476.java!!!	getVolumeCurve(in nType : int) : int
        int value[] = new int[1];
        mJniWrapper.GetVolumeCurve(nType, value);
        return value[0];
!!!12398604.java!!!	setVolumeCurve0(in value : int) : void

        Log.d(TAG, "setVolumeCurve0 value=" + value);
        setVolumeCurve(CURVE_POINT_0, value);

!!!12398732.java!!!	getVolumeCurve0() : int

        return getVolumeCurve(CURVE_POINT_0);
!!!12398860.java!!!	setVolumeCurve25(in value : int) : void

        setVolumeCurve(CURVE_POINT_25, value);

!!!12398988.java!!!	getVolumeCurve25() : int

        return getVolumeCurve(CURVE_POINT_25);
!!!12399116.java!!!	setVolumeCurve50(in value : int) : void

        setVolumeCurve(CURVE_POINT_50, value);

!!!12399244.java!!!	getVolumeCurve50() : int

        return getVolumeCurve(CURVE_POINT_50);
!!!12399372.java!!!	setVolumeCurve75(in value : int) : void

        setVolumeCurve(CURVE_POINT_75, value);

!!!12399500.java!!!	getVolumeCurve75() : int

        return getVolumeCurve(CURVE_POINT_75);
!!!12399628.java!!!	setVolumeCurve100(in value : int) : void

        setVolumeCurve(CURVE_POINT_100, value);

!!!12399756.java!!!	getVolumeCurve100() : int

        return getVolumeCurve(CURVE_POINT_100);
!!!12399884.java!!!	setVolume(in value : int) : void
        mJniWrapper.SetAudioProperty(AudioProperty.MV_FS_AUDIO_VOLUME.ordinal(), value);
!!!12400012.java!!!	getVolume() : int
        int soundVolume[] = new int[1];
        mJniWrapper.GetAudioProperty(AudioProperty.MV_FS_AUDIO_VOLUME.ordinal(), soundVolume);
        return soundVolume[0];
!!!12400140.java!!!	getCurrentOverScanTiming() : int

        return 0;
!!!12400268.java!!!	setHPosition(in value : int) : void
        mJniWrapper.SetSysControl(SystemProperty.MV_FS_CTRL_VIDEO_HORIZONTAL_POSITION.ordinal(),
                value);
!!!12400396.java!!!	getHPosition() : int
        int hPosition[] = new int[1];
        mJniWrapper.GetSysControl(SystemProperty.MV_FS_CTRL_VIDEO_HORIZONTAL_POSITION.ordinal(),
                hPosition);
        return hPosition[0];
!!!12400524.java!!!	setVPosition(in value : int) : void
        mJniWrapper.SetSysControl(SystemProperty.MV_FS_CTRL_VIDEO_VERTICAL_POSITION.ordinal(),
                value);
!!!12400652.java!!!	getVPosition() : int
        int vPosition[] = new int[1];
        mJniWrapper.GetSysControl(SystemProperty.MV_FS_CTRL_VIDEO_VERTICAL_POSITION.ordinal(),
                vPosition);
        return vPosition[0];
!!!12400780.java!!!	setHSize(in value : int) : void
        mJniWrapper.SetSysControl(SystemProperty.MV_FS_CTRL_VIDEO_HORIZONTAL_SIZE.ordinal(), value);
!!!12400908.java!!!	getHSize() : int
        int hSize[] = new int[1];
        mJniWrapper.GetSysControl(SystemProperty.MV_FS_CTRL_VIDEO_HORIZONTAL_SIZE.ordinal(), hSize);
        return hSize[0];
!!!12401036.java!!!	setVSize(in value : int) : void
        mJniWrapper.SetSysControl(SystemProperty.MV_FS_CTRL_VIDEO_VERTICAL_SIZE.ordinal(), value);
!!!12401164.java!!!	getVSize() : int
        int vSize[] = new int[1];
        mJniWrapper.GetSysControl(SystemProperty.MV_FS_CTRL_VIDEO_VERTICAL_SIZE.ordinal(), vSize);
        return vSize[0];
!!!12401292.java!!!	setSavingMode(in value : int) : void

!!!12401420.java!!!	getSavingMode() : int

        return 0;
!!!12401548.java!!!	setZoomMode(in value : int) : void
        mJniWrapper.SetVideoProperty(VideoProperty.MV_FS_VIDEO_SCREENMODE.ordinal(), value);
!!!12401676.java!!!	getZoomMode() : int

        int zoomMode[] = new int[1];
        mJniWrapper.GetVideoProperty(VideoProperty.MV_FS_VIDEO_SCREENMODE.ordinal(), zoomMode);
        return zoomMode[0];
!!!12401804.java!!!	getIPAddress() : String

        return null;
!!!12401932.java!!!	setBalance(in value : int) : void

!!!12402060.java!!!	getBalance() : int

        return 0;
!!!12402188.java!!!	setMacAddress(in strmac : String) : boolean

        return false;
!!!12402316.java!!!	getMacAddress() : String

        return null;
!!!12402444.java!!!	get3DMode() : int

        int mode[] = new int[1];
        mJniWrapper.GetVideoProperty(
                FacPropertyConstants.VideoProperty.MV_FS_VIDEO_3DMODE.ordinal(), mode);
        return mode[0];
!!!12402572.java!!!	set3DMode(in value : int) : void

        mJniWrapper.SetVideoProperty(
                FacPropertyConstants.VideoProperty.MV_FS_VIDEO_3DMODE.ordinal(), value);

!!!12402700.java!!!	setLeftRightSwap(in value : int) : void

!!!12402828.java!!!	getLeftRightSwap() : int

        return 0;
!!!12402956.java!!!	setFieldDepth(in value : int) : void

!!!12403084.java!!!	getFieldDepth() : int

        return 0;
!!!12403212.java!!!	setConvergence(in value : int) : void

!!!12403340.java!!!	getConvergence() : int

        return 0;
!!!12403468.java!!!	set3Dto2D(in value : int) : void

!!!12403596.java!!!	get3Dto2D() : int

        return 0;
!!!12403724.java!!!	getPanelType() : String

        return null;
!!!12403852.java!!!	getVersionInfo() : String

        return Utils.SystemInfo.getString(Utils.SystemInfo.VERSION);
!!!12403980.java!!!	getBoardVersion() : int
        int values[] = new int[1];
        mJniWrapper.GetSysControl(SystemProperty.MV_FS_CTRL_BOARD_MODEL.ordinal(), values);
        Log.d(TAG, "getBoardType=" + values[0]);
        return values[0];

!!!12404108.java!!!	setBoardVersion(in value : int) : void
        mJniWrapper.SetSysControl(SystemProperty.MV_FS_CTRL_BOARD_MODEL.ordinal(), value);

!!!12404236.java!!!	getModuleNumber() : String
        return Utils.SystemInfo.getString(Utils.SystemInfo.MODULE_NUMBER);
!!!12404364.java!!!	getBuildTime() : String
        return Utils.SystemInfo.getString(Utils.SystemInfo.BUILD_TIME);
!!!12404492.java!!!	getDefaultMacAddress() : String

        return null;
!!!12404620.java!!!	adcCalibration() : boolean

        return false;
!!!12404748.java!!!	setADCRedGain(in value : int) : void

        setAdcData(MV_FACTORY_ADC_GAIN_RED, value);

!!!12404876.java!!!	getADCRedGain() : int

        return getAdcData(MV_FACTORY_ADC_GAIN_RED);
!!!12405004.java!!!	setADCGreenGain(in value : int) : void

        setAdcData(MV_FACTORY_ADC_GAIN_GREEN, value);

!!!12405132.java!!!	getADCGreenGain() : int

        return getAdcData(MV_FACTORY_ADC_GAIN_GREEN);
!!!12405260.java!!!	setADCBlueGain(in value : int) : void

        setAdcData(MV_FACTORY_ADC_GAIN_BLUE, value);

!!!12405388.java!!!	getADCBlueGain() : int

        return getAdcData(MV_FACTORY_ADC_GAIN_BLUE);
!!!12405516.java!!!	setADCRedOffset(in value : int) : void

        setAdcData(MV_FACTORY_ADC_OFFSET_RED, value);

!!!12405644.java!!!	getADCRedOffset() : int

        return getAdcData(MV_FACTORY_ADC_OFFSET_RED);
!!!12405772.java!!!	setADCGreenOffset(in value : int) : void

        setAdcData(MV_FACTORY_ADC_OFFSET_GREEN, value);
!!!12405900.java!!!	getADCGreenOffset() : int

        return getAdcData(MV_FACTORY_ADC_OFFSET_GREEN);
!!!12406028.java!!!	setADCBlueOffset(in value : int) : void

        setAdcData(MV_FACTORY_ADC_OFFSET_BLUE, value);

!!!12406156.java!!!	getADCBlueOffset() : int

        return getAdcData(MV_FACTORY_ADC_OFFSET_BLUE);
!!!12406284.java!!!	setSSCLVDSEnable(in value : int) : void
        mJniWrapper.SetSysControl(SystemProperty.MV_FS_CTRL_SSC_ONOFF.ordinal(), value);
!!!12406412.java!!!	getSSCLVDSEnable() : int

        int[] ssp = new int[1];
        mJniWrapper.GetSysControl(SystemProperty.MV_FS_CTRL_SSC_ONOFF.ordinal(), ssp);
        return ssp[0];
!!!12406540.java!!!	setSSCLVDSSpan(in value : int) : void

        Log.d(TAG, "setSSCLVDSSpan value=" + value);
        mJniWrapper.SetSscAmp(value / 10f);

!!!12406668.java!!!	getSSCLVDSSpan() : int

        float[] amp = new float[1];
        mJniWrapper.GetSscAmp(amp);
        return (int) (amp[0] * 10);
!!!12406796.java!!!	setSSCLVDSFreq(in value : int) : void
        mJniWrapper.SetSysControl(SystemProperty.MV_FS_CTRL_SSC_FREQ.ordinal(), value);
!!!12406924.java!!!	getSSCLVDSFreq() : int

        int[] sspFreq = new int[1];
        mJniWrapper.GetSysControl(SystemProperty.MV_FS_CTRL_SSC_FREQ.ordinal(), sspFreq);
        return sspFreq[0];
!!!12407052.java!!!	getUsbDiskAbsolutePath() : String

        return null;
!!!12407180.java!!!	setChannelUp(in up : int) : void

        mJniWrapper.DoChannelUp();

!!!12407308.java!!!	setChannelDown(in down : int) : void

        mJniWrapper.DoChannelDown();

!!!12407436.java!!!	setDTVPresetChannel(in chnum : int) : void

        mJniWrapper.SetDTVChannelPreset(chnum);

!!!12407564.java!!!	setChannel(in major : int, in minor : int) : int

        return mJniWrapper.SetChannel(major, minor);

!!!12407692.java!!!	getChannel() : int
        int channel[] = new int[1];
        mJniWrapper.GetSysControl(SystemProperty.MV_FS_CTRL_CHANNEL_PRESET.ordinal(), channel);
        return channel[0];
!!!12407820.java!!!	setTVPresetChannel(in i : int) : int
        return mJniWrapper.SetATVChannelPreset();
!!!12407948.java!!!	setSoundHardBypass(in i : int) : void
        mJniWrapper.SetSysControl(SystemProperty.MV_FS_CTRL_AUDIO_HARD_BYPASS.ordinal(), i);
!!!12408076.java!!!	getSoundHardBypass() : int
        int mode[] = new int[1];
        mJniWrapper.GetSysControl(SystemProperty.MV_FS_CTRL_AUDIO_HARD_BYPASS.ordinal(), mode);
        return mode[0];
!!!12408204.java!!!	setPicTestPattern(in type : int, inout value : int) : void
        mJniWrapper.SetPicTestPattern(type, value);
!!!12408332.java!!!	setOffTestPattern(in value : int) : void
        setPicTestPattern(MV_COLOR_OFF, new int[] {
                value
        });
!!!12408460.java!!!	setRedTestPattern(in value : int) : void
        setPicTestPattern(MV_COLOR_RED, new int[] {
                value
        });
!!!12408588.java!!!	setGreenTestPattern(in value : int) : void
        setPicTestPattern(MV_COLOR_GREEN, new int[] {
                value
        });
!!!12408716.java!!!	setBlueTestPattern(in value : int) : void
        setPicTestPattern(MV_COLOR_BLUE, new int[] {
                value
        });
!!!12408844.java!!!	setBlackTestPattern(in value : int) : void
        setPicTestPattern(MV_COLOR_GREY, new int[] {
                value
        });
!!!12408972.java!!!	setWhiteTestPattern(in value : int) : void
        setPicTestPattern(MV_COLOR_GREY, new int[] {
                value
        });
!!!12409100.java!!!	setBacklight(in value : int) : void
        mJniWrapper.SetVideoProperty(VideoProperty.MV_FS_VIDEO_BACKLIGHT.ordinal(), value);
!!!12409228.java!!!	getBacklight() : int
        int value[] = new int[1];
        mJniWrapper.GetVideoProperty(VideoProperty.MV_FS_VIDEO_BACKLIGHT.ordinal(), value);
        return value[0];
!!!12409356.java!!!	setSoundSpeaker(in value : int) : void
        mJniWrapper.SetAudioProperty(AudioProperty.MV_FS_AUDIO_SPEAKER.ordinal(), value);
!!!12409484.java!!!	getSoundSpeaker() : int
        int value[] = new int[1];
        mJniWrapper.GetAudioProperty(AudioProperty.MV_FS_AUDIO_SPEAKER.ordinal(), value);
        return value[0];
!!!12409612.java!!!	setSoundBalance(in value : int) : void
        mJniWrapper.SetAudioProperty(AudioProperty.MV_FS_AUDIO_BALANCE.ordinal(), value);
!!!12409740.java!!!	getSoundBalance() : int
        int value[] = new int[1];
        mJniWrapper.GetAudioProperty(AudioProperty.MV_FS_AUDIO_BALANCE.ordinal(), value);
        return value[0];
!!!12409868.java!!!	setDynType(in type : int) : void
        property = type;

!!!12409996.java!!!	getDynType() : int
        return property;
!!!12410124.java!!!	setDynValue(in value : int) : void
        mJniWrapper.SetVideoProperty(dynTypeToVideoProperty(property), value);
!!!12410252.java!!!	getDynValue() : int
        int values[] = new int[1];
        mJniWrapper.GetVideoProperty(dynTypeToVideoProperty(property), values);
        return values[0];
!!!12410380.java!!!	setSensorValue(in value : int) : void
        mJniWrapper.SetVideoProperty(sensorTypeToVideoProperty(property), value);
!!!12410508.java!!!	getSensorValue() : int
        int values[] = new int[1];
        mJniWrapper.GetVideoProperty(sensorTypeToVideoProperty(property), values);
        Log.d(TAG, "property=" + sensorTypeToVideoProperty(property) + " getSensorValue value="
                + values[0]);
        return values[0];
!!!12410636.java!!!	setSmartDimmingValue(in smartDimming : int) : void
        Log.d(TAG, "setSmartDimmingValue smartDimming=" + smartDimming);
        mJniWrapper.SetVideoProperty(
                FacPropertyConstants.VideoProperty.MV_FS_VIDEO_SMART_DIMMING.ordinal(),
                smartDimming);
!!!12410764.java!!!	getSmartDimmingValue() : int
        int values[] = new int[1];
        mJniWrapper.GetVideoProperty(
                FacPropertyConstants.VideoProperty.MV_FS_VIDEO_SMART_DIMMING.ordinal(),
                values);
        Log.d(TAG, "getSmartDimmingValue smartDimming=" + values[0]);
        return values[0];
!!!12410892.java!!!	sensorTypeToVideoProperty(in property : int) : int
        DynbackLight dynType = null;
        VideoProperty videoType = null;
        for (DynbackLight temp : DynbackLight.values()) {
            if (temp.ordinal() == property) {
                dynType = temp;
                break;
            }
        }
        Set<Entry<VideoProperty, DynbackLight>> entries = EnumMapping.lightSensorMapping.entrySet();
        for (Entry<VideoProperty, DynbackLight> entry : entries) {
            DynbackLight dv = entry.getValue();
            if (dv == dynType) {
                videoType = entry.getKey();
                break;
            }
        }
        if (videoType != null) {
            return videoType.ordinal();
        } else {
            return 0;
        }
!!!12411020.java!!!	dynTypeToVideoProperty(in property : int) : int
        DynbackLight dynType = null;
        VideoProperty videoType = null;
        for (DynbackLight temp : DynbackLight.values()) {
            if (temp.ordinal() == property) {
                dynType = temp;
                break;
            }
        }
        Set<Entry<VideoProperty, DynbackLight>> entries = EnumMapping.dyncbackMapping.entrySet();
        for (Entry<VideoProperty, DynbackLight> entry : entries) {
            DynbackLight dv = entry.getValue();
            if (dv == dynType) {
                videoType = entry.getKey();
                break;
            }
        }
        if (videoType != null) {
            return videoType.ordinal();
        } else {
            return 0;
        }
!!!12411148.java!!!	setCloseCaption(in value : int) : void
        Log.d(TAG, "setSysControl value=" + value);
        mJniWrapper.SetSysControl(MV_FS_CTRL_CCD_MODE, value);

!!!12411276.java!!!	getCloseCaption() : int
        int value[] = new int[1];
        mJniWrapper.GetSysControl(MV_FS_CTRL_CCD_MODE, value);
        Log.d(TAG, "getSysControl value=" + value[0]);
        return value[0];
!!!12411404.java!!!	setBassBoost(in value : int) : void
        mJniWrapper.SetAudioProperty(MV_FS_AUDIO_BASS_VOLUME, value);
!!!12411532.java!!!	getBassBoost() : int
        int value[] = new int[1];
        mJniWrapper.GetAudioProperty(MV_FS_AUDIO_BASS_VOLUME, value);
        return value[0];
!!!12411660.java!!!	setDynEnable(in value : int) : void
        mJniWrapper.SetVideoProperty(
                FacPropertyConstants.VideoProperty.MV_FS_VIDEO_DYN_BACKLIGHT.ordinal(), value);
!!!12411788.java!!!	getDynEnable() : int
        int mode[] = new int[1];
        mJniWrapper.GetVideoProperty(
                FacPropertyConstants.VideoProperty.MV_FS_VIDEO_DYN_BACKLIGHT.ordinal(), mode);
        Log.d(TAG, "getDynEnable mode=" + mode[0]);
        return mode[0];
!!!12411916.java!!!	setAgingFlag(in value : int) : void
        mJniWrapper.SetSysControl(SystemProperty.MV_FS_CTRL_VIDEO_AGING_MODE.ordinal(), value);
        Intent i = new Intent("com.marvell.willowtv.CHECK_AGINGMODE");
        mContext.sendBroadcast(i);
!!!12412044.java!!!	enableKeyFilter(inout enable : boolean) : void
        if (enable) {
            if (sKeyFilterService != null) {
                try {
                    sKeyFilterService.setKeyFilterMode(0); // only allow key in
                    // list
                    sKeyFilterService.setFilterKeyCode(0, 0, 0); // clear key
                    // list
                    // sKeyFilterService.setFilterKeyCode(1,
                    // KeyEvent.KEYCODE_DPAD_DOWN, 0); // add key
                    // sKeyFilterService.setFilterKeyCode(1,
                    // KeyEvent.KEYCODE_DPAD_UP, 0); // add key
                    sKeyFilterService.setFilterKeyCode(1, KeyEvent.KEYCODE_DPAD_LEFT, 0); // add
                    // key
                    sKeyFilterService.setFilterKeyCode(1, KeyEvent.KEYCODE_DPAD_RIGHT, 0); // add
                    // key
                    // sKeyFilterService.setFilterKeyCode(1,
                    // KeyEvent.KEYCODE_FORWARD, 0); // add key
                } catch (RemoteException e) {
                    Log.e(TAG, "enableKeyFilter exception" + e);
                }
            }
        } else {
            if (sKeyFilterService != null) {
                try {
                    sKeyFilterService.setKeyFilterMode(1); // only block key in
                    // list
                    sKeyFilterService.setFilterKeyCode(0, 0, 0); // clear key
                    // list
                } catch (RemoteException e) {
                    Log.e(TAG, "enableKeyFilter exception" + e);
                }
            }
        }
!!!12412172.java!!!	setSoundMode(in mode : int) : void
        mJniWrapper.SetAudioProperty(AudioProperty.MV_FS_AUDIO_MODE.ordinal(), mode);
!!!12412300.java!!!	getSoundMode() : int
        int mode[] = new int[1];
        mJniWrapper.GetAudioProperty(AudioProperty.MV_FS_AUDIO_MODE.ordinal(), mode);
        return mode[0];
!!!12412428.java!!!	getAgingFlag() : int
        int agingMode[] = new int[1];
        mJniWrapper.GetSysControl(SystemProperty.MV_FS_CTRL_VIDEO_AGING_MODE.ordinal(), agingMode);
        return agingMode[0];
!!!12412556.java!!!	setTunerMode(in mode : int) : void
        mJniWrapper.SetSysControl(SystemProperty.MV_FS_CTRL_CHANNEL_TRANSMISSION_TYPE.ordinal(),
                mode);
!!!12412684.java!!!	getTunerMode() : int
        int[] tunerMode = new int[1];
        mJniWrapper.GetSysControl(SystemProperty.MV_FS_CTRL_CHANNEL_TRANSMISSION_TYPE.ordinal(),
                tunerMode);
        return tunerMode[0];

!!!12412812.java!!!	getADCResult() : int
        int mode[] = new int[1];
        mJniWrapper.GetSysControl(SystemProperty.MV_FS_CTRL_VIDEO_ADC_STATUS.ordinal(), mode);
        Log.d(TAG, "getADCResult");
        return mode[0];
!!!12412940.java!!!	setADCCalibration() : void
        Log.d(TAG, "setADCCalibration");
        mJniWrapper.DoADCCalibration();
!!!12413068.java!!!	writeEdid(in port : int, inout data : int) : int
        Log.d(TAG, "writeHdmiEdid");
        return mJniWrapper.SetEdid(port, data);
!!!12413196.java!!!	readEdid(in port : int, inout data : int) : int
        Log.d(TAG, "readHdmiEdid,port=" + port);
        return mJniWrapper.GetEdid(port, data);
!!!12413324.java!!!	setWhiteBalanceValue(in colorIndex : int, in value : int) : void
        int tempValues[] = new int[COLORTEMPCOUNT];
        mJniWrapper.GetColortempValue(MVColorMode.FSSERVICE_TUNING_CT_Normal.ordinal(), tempValues);
        tempValues[colorIndex] = value;
        mJniWrapper.SetColortempValue(MVColorMode.FSSERVICE_TUNING_CT_Normal.ordinal(), tempValues);

!!!12413452.java!!!	getWhiteBalanceValue(in colorIndex : int) : int
        // int tempValues[] = new int[COLORTEMPCOUNT];
        // mJniWrapper.GetColortempValue(MVColorMode.FACTORY_COLOR_TEMP_TYPE_STANDARD.ordinal(),
        // tempValues);
        return whiteBalanceValues[colorIndex];
!!!12413580.java!!!	getWhiteBalanceValues() : void
        int tempValues[] = new int[COLORTEMPCOUNT];
        mJniWrapper.GetColortempValue(MVColorMode.FSSERVICE_TUNING_CT_Normal.ordinal(),
                whiteBalanceValues);
!!!12413708.java!!!	setColorTempOffset(in colorIndex : int, in value : int) : void

        int colortempMode[] = new int[1];
        mJniWrapper.GetVideoProperty(VideoProperty.MV_FS_VIDEO_COLOR_TEMPERATURE.ordinal(),
                colortempMode);
        int offsetValue[] = new int[6];
        mJniWrapper.GetWhitebalValue(colortempMode[0], offsetValue);
        offsetValue[colorIndex] = value;
        mJniWrapper.SetWhitebalValue(colortempMode[0], offsetValue);
!!!12413836.java!!!	getColorTempOffset(in colorIndex : int) : int
        return colortempValues[colorIndex];
!!!12413964.java!!!	getColorTempOffsetValues() : void
        int colortempMode[] = new int[1];
        mJniWrapper.GetVideoProperty(VideoProperty.MV_FS_VIDEO_COLOR_TEMPERATURE.ordinal(),
                colortempMode);
        mJniWrapper.GetWhitebalValue(colortempMode[0], colortempValues);
!!!12414092.java!!!	setAdcData(in colorIndex : int, in value : int) : void
        int curAdcValues[] = new int[ADC_DATA_COUNT];
        mJniWrapper.GetADCData(curAdcValues);
        curAdcValues[colorIndex] = value;
        mJniWrapper.SetADCData(curAdcValues);

!!!12414220.java!!!	getAdcData(in colorIndex : int) : int
        int curAdcValues[] = new int[ADC_DATA_COUNT];
        mJniWrapper.GetADCData(curAdcValues);
        return curAdcValues[colorIndex];
!!!12414348.java!!!	DoRebootRecovery() : void
        Log.d(TAG, "DoRebootRecovery");
        mJniWrapper.DoRebootRecovery();
!!!12414476.java!!!	showOrHideLogo(in currValue : int) : void
        if (currValue == FACTORYSTATUS_OFF) {
            if (Utils.isServiceAlive(mContext, FlowLogoService.SERVICE_NAME)) {
                Utils.startOrStopService(mContext,
                        FlowLogoService.CLOSE_SERVICE_ACTION);

            }
        } else {
            if (!Utils.isServiceAlive(mContext, FlowLogoService.SERVICE_NAME)) {
                Utils.startOrStopService(mContext,
                        FlowLogoService.START_SERVICE_ACTION);

            }
        }
