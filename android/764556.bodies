class RouteInfo
!!!2842124.java!!!	RouteInfo(inout category : RouteCategory)
            mCategory = category;
!!!2842252.java!!!	getName() : CharSequence
            return getName(sStatic.mResources);
!!!2842380.java!!!	getName(inout context : Context) : CharSequence
            return getName(context.getResources());
!!!2842508.java!!!	getName(inout res : Resources) : CharSequence
            if (mNameResId != 0) {
                return mName = res.getText(mNameResId);
            }
            return mName;
!!!2842636.java!!!	getStatus() : CharSequence
            return mStatus;
!!!2842764.java!!!	setStatusCode(in statusCode : int) : boolean
            if (statusCode != mStatusCode) {
                mStatusCode = statusCode;
                int resId = 0;
                switch (statusCode) {
                    case STATUS_SCANNING:
                        resId = com.android.internal.R.string.media_route_status_scanning;
                        break;
                    case STATUS_CONNECTING:
                        resId = com.android.internal.R.string.media_route_status_connecting;
                        break;
                    case STATUS_AVAILABLE:
                        resId = com.android.internal.R.string.media_route_status_available;
                        break;
                    case STATUS_NOT_AVAILABLE:
                        resId = com.android.internal.R.string.media_route_status_not_available;
                        break;
                }
                mStatus = resId != 0 ? sStatic.mResources.getText(resId) : null;
                return true;
            }
            return false;
!!!2842892.java!!!	getStatusCode() : int
            return mStatusCode;
!!!2843020.java!!!	getSupportedTypes() : int
            return mSupportedTypes;
!!!2843148.java!!!	getGroup() : RouteGroup
            return mGroup;
!!!2843276.java!!!	getCategory() : RouteCategory
            return mCategory;
!!!2843404.java!!!	getIconDrawable() : Drawable
            return mIcon;
!!!2843532.java!!!	setTag(inout tag : Object) : void
            mTag = tag;
            routeUpdated();
!!!2843660.java!!!	getTag() : Object
            return mTag;
!!!2843788.java!!!	getPlaybackType() : int
            return mPlaybackType;
!!!2843916.java!!!	getPlaybackStream() : int
            return mPlaybackStream;
!!!2844044.java!!!	getVolume() : int
            if (mPlaybackType == PLAYBACK_TYPE_LOCAL) {
                int vol = 0;
                try {
                    vol = sStatic.mAudioService.getStreamVolume(mPlaybackStream);
                } catch (RemoteException e) {
                    Log.e(TAG, "Error getting local stream volume", e);
                }
                return vol;
            } else {
                return mVolume;
            }
!!!2844172.java!!!	requestSetVolume(in volume : int) : void
            if (mPlaybackType == PLAYBACK_TYPE_LOCAL) {
                try {
                    sStatic.mAudioService.setStreamVolume(mPlaybackStream, volume, 0);
                } catch (RemoteException e) {
                    Log.e(TAG, "Error setting local stream volume", e);
                }
            } else {
                Log.e(TAG, getClass().getSimpleName() + ".requestSetVolume(): " +
                        "Non-local volume playback on system route? " +
                        "Could not request volume change.");
            }
!!!2844300.java!!!	requestUpdateVolume(in direction : int) : void
            if (mPlaybackType == PLAYBACK_TYPE_LOCAL) {
                try {
                    final int volume =
                            Math.max(0, Math.min(getVolume() + direction, getVolumeMax()));
                    sStatic.mAudioService.setStreamVolume(mPlaybackStream, volume, 0);
                } catch (RemoteException e) {
                    Log.e(TAG, "Error setting local stream volume", e);
                }
            } else {
                Log.e(TAG, getClass().getSimpleName() + ".requestChangeVolume(): " +
                        "Non-local volume playback on system route? " +
                        "Could not request volume change.");
            }
!!!2844428.java!!!	getVolumeMax() : int
            if (mPlaybackType == PLAYBACK_TYPE_LOCAL) {
                int volMax = 0;
                try {
                    volMax = sStatic.mAudioService.getStreamMaxVolume(mPlaybackStream);
                } catch (RemoteException e) {
                    Log.e(TAG, "Error getting local stream volume", e);
                }
                return volMax;
            } else {
                return mVolumeMax;
            }
!!!2844556.java!!!	getVolumeHandling() : int
            return mVolumeHandling;
!!!2844684.java!!!	getPresentationDisplay() : Display
            return mPresentationDisplay;
!!!2844812.java!!!	isEnabled() : boolean
            return mEnabled;
!!!2844940.java!!!	setStatusInt(inout status : CharSequence) : void
            if (!status.equals(mStatus)) {
                mStatus = status;
                if (mGroup != null) {
                    mGroup.memberStatusChanged(this, status);
                }
                routeUpdated();
            }
!!!2845068.java!!!	routeUpdated() : void
            updateRoute(this);
!!!2845196.java!!!	toString() : String
            String supportedTypes = typesToString(getSupportedTypes());
            return getClass().getSimpleName() + "{ name=" + getName() +
                    ", status=" + getStatus() +
                    ", category=" + getCategory() +
                    ", supportedTypes=" + supportedTypes +
                    ", presentationDisplay=" + mPresentationDisplay + "}";
