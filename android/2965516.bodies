class MainActivity
!!!12018572.java!!!	onCreate(inout savedInstanceState : Bundle) : void
        super.onCreate(savedInstanceState);
        setContentView(R.layout.main);

        this.caseSrv = new UnitTestCaseService(this);
        this.resultSrv = new ShowResultService(this);
        this.listView = (ListView) this.findViewById(R.id.list_view_id);
        this.showCases();
        this.currRunner = null;
        this.listView.setOnItemClickListener(new OnCaseItemClickListener());
        Button delBtn = (Button) this.findViewById(R.id.delete_button_id);
        Button runBtn = (Button) this.findViewById(R.id.run_button_id);
        delBtn.setOnClickListener(new DeleteButtonOnClickListener());
        runBtn.setOnClickListener(new RunButtonOnClickListener());
!!!12018700.java!!!	addCase(inout v : View) : void
        Intent intent = new Intent();
        intent.setClass(this, AddCaseActivity.class);
        this.startActivityForResult(intent, 100);
!!!12018828.java!!!	onKeyDown(in keyCode : int, inout event : KeyEvent) : boolean
        boolean ret = false;
        Log.i("UnitTestTool", "MainActivity::onKeyDown, keyCode=" + keyCode +
              ", ret = " + ret + ".\n");
        if (this.currRunner != null && this.currRunner.hasExitted()) {
            Log.i("UnitTestTool", "current runner was found exitted.\n");
            this.currRunner = null;
        }

        if (this.currRunner != null) {
            Log.i("UnitTestTool", "Call native key event handler.\n");
            if (keyCode == android.view.KeyEvent.KEYCODE_ESCAPE) {
                currRunner.stop();
                this.currRunner = null;
            }

            // Do not call base class' onKeyDown
            ret = true;
        } else {
            Log.i("UnitTestTool", "Return to parent activity.\n");

            // Call base class' onKeyDown
            ret = super.onKeyDown(keyCode, event);
            Log.i("UnitTestTool", "Parent onKeyDown returns " + ret + ".\n");
        }

        return ret;
!!!12019212.java!!!	runAllCases(inout v : View) : void
        /*
        resultSrv.clear();
        List<UnitTestCase> allCases = caseSrv.getAllData();
        for (UnitTestCase oneCase : allCases) {
            int caseId = oneCase.getId();
            if (caseId <= 0) {
                Toast.makeText(MainActivity.this, "Case " + String.valueOf(caseId) +
                               " not run.", Toast.LENGTH_SHORT);
                return;
            }

            TestRunner tr = new TestRunner(oneCase.getCategory(), oneCase.getName());
            int result = tr.run();
            Toast.makeText(MainActivity.this, "result: " + String.valueOf(result),
                           Toast.LENGTH_LONG).show();

            String status = null;
            if (result == 0) {
                status = "Passed";
            } else if (result == -1){
                status = "Not run";
            } else if (result == -2) {
                status = "Init pthread error";
            } else {
                status = "Failed";
            }

            resultSrv.add(new TestResult(oneCase.getId(), oneCase.getName(),
                          oneCase.getCategory(), status));
        }
        */
!!!12019340.java!!!	showResult(inout v : View) : void
        Intent intent = new Intent();
        intent.setClass(this, ShowResultActivity.class);
        this.startActivity(intent);
!!!12019468.java!!!	showCases() : void
        Cursor cursor = caseSrv.getAllCursorData();
        SimpleCursorAdapter scAdapter = new SimpleCursorAdapter(this, R.layout.case_item,
                cursor, new String[] {"_id", "name", "category"},
                new int[] {R.id.case_id_id, R.id.case_name_id, R.id.case_category_id});
        listView.setAdapter(scAdapter);
!!!12019724.java!!!	onActivityResult(in requestCode : int, in resultCode : int, inout data : Intent) : void
        if (requestCode == 100 && resultCode == 1000) {
            Boolean success = data.getBooleanExtra("success", false);
            if (success) {
                MainActivity.this.updateViewList();
            }
        }
!!!12019852.java!!!	updateViewList() : void
        Cursor cursor = this.caseSrv.getAllCursorData();
        SimpleCursorAdapter scadapter = (SimpleCursorAdapter) listView.getAdapter();
        scadapter.changeCursor(cursor);
        scadapter.notifyDataSetChanged();
        Toast.makeText(this, "success", Toast.LENGTH_LONG).show();
