class OmxAmpMp3Port
!!!11100812.cpp!!!	OmxAmpMp3Port(in dir : OMX_DIRTYPE)
  mDefinition.eDir = dir;
  mDefinition.eDomain = OMX_PortDomainAudio;
  mDefinition.nBufferCountMin = kNumBuffers;
  mDefinition.nBufferCountActual = mDefinition.nBufferCountMin;
  mDefinition.bBuffersContiguous = OMX_FALSE;

  if (dir == OMX_DirInput) {
    mDefinition.nBufferSize = 8192;
    mDefinition.nBufferAlignment = 1;
    mDefinition.format.audio.eEncoding = OMX_AUDIO_CodingMP3;
    // mDefinition.format.audio.cMIMEType = const_cast<char *>("audio/mpeg");
  } else if (dir == OMX_DirOutput) {
    mDefinition.nBufferSize = kOutputBufferSize;
    mDefinition.nBufferAlignment = 2;
    mDefinition.format.audio.eEncoding = OMX_AUDIO_CodingPCM;
    // mDefinition.format.audio.cMIMEType = const_cast<char *>("audio/raw");
  } else {
    OMX_LOGE("Error dir %d\n", dir);
  }
  mDefinition.format.audio.pNativeRender = NULL;
  mDefinition.format.audio.bFlagErrorConcealment = OMX_FALSE;
  updateDomainParameter();
  InitOmxHeader(&mCodecParam.mp3);
  mCodecParam.mp3.nPortIndex = mDefinition.nPortIndex;
!!!11100940.cpp!!!	OmxAmpMp3Port(in index : OMX_U32, in dir : OMX_DIRTYPE)
  mDefinition.nPortIndex = index;
  mDefinition.eDir = dir;
  mDefinition.eDomain = OMX_PortDomainAudio;
  mDefinition.nBufferCountMin = kNumBuffers;
  mDefinition.nBufferCountActual = mDefinition.nBufferCountMin;
  mDefinition.bBuffersContiguous = OMX_FALSE;

  if (dir == OMX_DirInput) {
    mDefinition.nBufferSize = 8192;
    mDefinition.nBufferAlignment = 1;
    mDefinition.format.audio.eEncoding = OMX_AUDIO_CodingMP3;
    // mDefinition.format.audio.cMIMEType = const_cast<char *>("audio/mpeg");
  } else if (dir == OMX_DirOutput) {
    mDefinition.nBufferSize = kOutputBufferSize;
    mDefinition.nBufferAlignment = 2;
    mDefinition.format.audio.eEncoding = OMX_AUDIO_CodingPCM;
    // mDefinition.format.audio.cMIMEType = const_cast<char *>("audio/raw");
  } else {
    OMX_LOGE("Error dir %d\n", dir);
  }
  mDefinition.format.audio.pNativeRender = NULL;
  mDefinition.format.audio.bFlagErrorConcealment = OMX_FALSE;
  updateDomainParameter();
  InitOmxHeader(&mCodecParam.mp3);
  mCodecParam.mp3.nPortIndex = mDefinition.nPortIndex;
