class PIPControllerActivity
!!!12733964.java!!!	onStart() : void
        super.onStart();

        setVisible(false);

        mServiceConnection = new PIPServiceConnection(this) {
            @Override
            public void onConnected() {
                mService = mServiceConnection.getBoundService();
                processIntent(getIntent());
            }
        };
        mServiceConnection.connect();
!!!12734092.java!!!	onStop() : void
        if (mServiceConnection != null) {
            mServiceConnection.disconnect();
            mServiceConnection = null;
            mService = null;
        }

        super.onStop();
!!!12734220.java!!!	processIntent(inout intent : Intent) : void
        if (TvIntent.ACTION_PIP.equals(intent.getAction())) {
            togglePIP();
        }
        finish();
!!!12734348.java!!!	togglePIP() : void
        if (mService == null) {
            throw new IllegalStateException("mService is unexpectedly null");
        }

        try {
            boolean visible = mService.isWindowVisible();
            if (visible) {
                // Currently visible, so make it invisible, and launch TvPlayer.
                mService.setWindowVisible(false);
                startActivity(new Intent(TvIntent.ACTION_TV)
                        .putExtra(TvPlayerConstants.EXTRA_FROM_PIP, true));
                finish();
            } else {
                // Currently invisible, so shut down TvPlayer, and make it visible.
                int order = ActivityUtils.getTaskOrderOfActivity(
                        this, TvPlayerConstants.TV_PLAYER_ACTIVITY);
                if (order != -1) {
                    mLog.d("TvPlayer activity running");
                    startActivity(new Intent(TvPlayerConstants.ACTION_EXIT));

                    // An activity on the top task is always PIPControllerActivity.
                    // So if order is 1, then it means that TvPlayer activity is
                    // running on top.
                    if (order <= 1) {
                        mLog.d("TvPlayer activity running on top");
                        mService.setWindowVisibleWithAudioFocus(true);
                    } else {
                        mLog.d("TvPlayer activity running on background");
                        mService.setWindowVisible(true);
                    }
                } else {
                    mLog.d("TvPlayer activity NOT running");
                    mService.setWindowVisible(true);
                }
            }
        } catch (RemoteException ex) {
            mLog.e("PIPService exception", ex);
        }
