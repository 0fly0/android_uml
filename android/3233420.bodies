class AccountPreferenceBase
!!!13905676.java!!!	onAccountsUpdated(inout accounts : Account) : void

!!!13905804.java!!!	onAuthDescriptionsUpdated() : void

!!!13905932.java!!!	onSyncStateUpdated() : void

!!!13906060.java!!!	onActivityCreated(inout savedInstanceState : Bundle) : void
        super.onActivityCreated(savedInstanceState);

        final Activity activity = getActivity();

        mDateFormat = DateFormat.getDateFormat(activity);
        mTimeFormat = DateFormat.getTimeFormat(activity);
!!!13906188.java!!!	onResume() : void
        super.onResume();
        mStatusChangeListenerHandle = ContentResolver.addStatusChangeListener(
                ContentResolver.SYNC_OBSERVER_TYPE_ACTIVE
                | ContentResolver.SYNC_OBSERVER_TYPE_STATUS
                | ContentResolver.SYNC_OBSERVER_TYPE_SETTINGS,
                mSyncStatusObserver);
        onSyncStateUpdated();
!!!13906316.java!!!	onPause() : void
        super.onPause();
        ContentResolver.removeStatusChangeListener(mStatusChangeListenerHandle);
!!!13906444.java!!!	getAuthoritiesForAccountType(in type : String) : ArrayList<String>
        if (mAccountTypeToAuthorities == null) {
            mAccountTypeToAuthorities = Maps.newHashMap();
            SyncAdapterType[] syncAdapters = ContentResolver.getSyncAdapterTypes();
            for (int i = 0, n = syncAdapters.length; i < n; i++) {
                final SyncAdapterType sa = syncAdapters[i];
                ArrayList<String> authorities = mAccountTypeToAuthorities.get(sa.accountType);
                if (authorities == null) {
                    authorities = new ArrayList<String>();
                    mAccountTypeToAuthorities.put(sa.accountType, authorities);
                }
                if (Log.isLoggable(TAG, Log.VERBOSE)) {
                    Log.d(TAG, "added authority " + sa.authority + " to accountType "
                            + sa.accountType);
                }
                authorities.add(sa.authority);
            }
        }
        return mAccountTypeToAuthorities.get(type);
!!!13906572.java!!!	addPreferencesForType(in accountType : String, inout parent : PreferenceScreen) : PreferenceScreen
        PreferenceScreen prefs = null;
        if (mAuthenticatorHelper.containsAccountType(accountType)) {
            AuthenticatorDescription desc = null;
            try {
                desc = mAuthenticatorHelper.getAccountTypeDescription(accountType);
                if (desc != null && desc.accountPreferencesId != 0) {
                    Context authContext = getActivity().createPackageContext(desc.packageName, 0);
                    prefs = getPreferenceManager().inflateFromResource(authContext,
                            desc.accountPreferencesId, parent);
                }
            } catch (PackageManager.NameNotFoundException e) {
                Log.w(TAG, "Couldn't load preferences.xml file from " + desc.packageName);
            } catch (Resources.NotFoundException e) {
                Log.w(TAG, "Couldn't load preferences.xml file from " + desc.packageName);
            }
        }
        return prefs;
!!!13906700.java!!!	updateAuthDescriptions() : void
        mAuthenticatorHelper.updateAuthDescriptions(getActivity());
        onAuthDescriptionsUpdated();
!!!13906828.java!!!	getDrawableForType(in accountType : String) : Drawable
        return mAuthenticatorHelper.getDrawableForType(getActivity(), accountType);
!!!13906956.java!!!	getLabelForType(in accountType : String) : CharSequence
        return mAuthenticatorHelper.getLabelForType(getActivity(), accountType);
!!!13907084.java!!!	formatSyncDate(inout date : Date) : String
        // TODO: Switch to using DateUtils.formatDateTime
        return mDateFormat.format(date) + " " + mTimeFormat.format(date);
