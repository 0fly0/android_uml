class TvFeedbackService
!!!14179980.java!!!	TvFeedbackService()
        super("TvFeedbackService");
!!!14180108.java!!!	onCreate() : void
        super.onCreate();

        WindowManager windowManager = (WindowManager) getSystemService(Context.WINDOW_SERVICE);
        windowManager.getDefaultDisplay().getRealMetrics(mDisplayMetrics);
!!!14180236.java!!!	onHandleIntent(inout intent : Intent) : void
        boolean isEnabled = TvSettings.Secure.getBoolean(getContentResolver(),
                TvSettings.Secure.USER_INITIATED_FEEDBACK_ENABLED, false);
        if (!isEnabled) {
            return;
        }

        final Parcel parcel = Parcel.obtain();
        Bitmap b = getCurrentScreenshot();
        if (b != null) {
            b.writeToParcel(parcel, 0);
        }

        // Workaround to attach system logs to feedback.
        // For now, only first feedback contains system logs while the feedback
        // process is alive.
        // https://gtv-git.corp.google.com/g/#/c/26886/ was upmerged to resolve
        // this issue in GoogleFeedback, but it isn't yet available in android jb
        // mr1.
        ActivityManager am = (ActivityManager) getSystemService(ACTIVITY_SERVICE);
        am.killBackgroundProcesses("com.google.android.feedback");

        Intent feedback_intent = new Intent(Intent.ACTION_BUG_REPORT);
        ServiceConnection conn = new ServiceConnection() {
            @Override
            public void onServiceConnected(ComponentName name, IBinder service) {
                try {
                    service.transact(Binder.FIRST_CALL_TRANSACTION, parcel, null, 0);
                    getApplicationContext().unbindService(this);
                } catch (RemoteException e) {
                    Log.d(TAG, "ServiceConn : " + e.getMessage(), e);
                }
            }

            @Override
            public void onServiceDisconnected(ComponentName name) {
            }
        };
        getApplicationContext().bindService(feedback_intent, conn, Activity.BIND_AUTO_CREATE);
!!!14180364.java!!!	getCurrentScreenshot() : Bitmap
        try {
            int width = Math.min(mDisplayMetrics.widthPixels, MAX_WIDTH);
            int height = Math.min(mDisplayMetrics.widthPixels, MAX_HEIGHT);
            return Surface.screenshot(width, height);
        } catch (Exception e) {
            Log.e(TAG, "Failed to get screenshot", e);
            return null;
        }
