class DisplayManager
!!!2833164.java!!!	DisplayManager(inout context : Context)
        mContext = context;
        mGlobal = DisplayManagerGlobal.getInstance();
!!!2833292.java!!!	getDisplay(in displayId : int) : Display
        synchronized (mLock) {
            return getOrCreateDisplayLocked(displayId, false /*assumeValid*/);
        }
!!!2833420.java!!!	getDisplays() : Display
        return getDisplays(null);
!!!2833548.java!!!	getDisplays(in category : String) : Display
        final int[] displayIds = mGlobal.getDisplayIds();
        synchronized (mLock) {
            try {
                if (category == null) {
                    addMatchingDisplaysLocked(mTempDisplays, displayIds, -1);
                } else if (category.equals(DISPLAY_CATEGORY_PRESENTATION)) {
                    addMatchingDisplaysLocked(mTempDisplays, displayIds, Display.TYPE_WIFI);
                    addMatchingDisplaysLocked(mTempDisplays, displayIds, Display.TYPE_HDMI);
                    addMatchingDisplaysLocked(mTempDisplays, displayIds, Display.TYPE_OVERLAY);
                }
                return mTempDisplays.toArray(new Display[mTempDisplays.size()]);
            } finally {
                mTempDisplays.clear();
            }
        }
!!!2833676.java!!!	addMatchingDisplaysLocked(inout displays : ArrayList<Display>, inout displayIds : int, in matchType : int) : void
        for (int i = 0; i < displayIds.length; i++) {
            Display display = getOrCreateDisplayLocked(displayIds[i], true /*assumeValid*/);
            if (display != null
                    && (matchType < 0 || display.getType() == matchType)) {
                displays.add(display);
            }
        }
!!!2833804.java!!!	getOrCreateDisplayLocked(in displayId : int, inout assumeValid : boolean) : Display
        Display display = mDisplays.get(displayId);
        if (display == null) {
            display = mGlobal.getCompatibleDisplay(displayId,
                    mContext.getCompatibilityInfo(displayId));
            if (display != null) {
                mDisplays.put(displayId, display);
            }
        } else if (!assumeValid && !display.isValid()) {
            display = null;
        }
        return display;
!!!2833932.java!!!	registerDisplayListener(inout listener : DisplayListener, inout handler : Handler) : void
        mGlobal.registerDisplayListener(listener, handler);
!!!2834060.java!!!	unregisterDisplayListener(inout listener : DisplayListener) : void
        mGlobal.unregisterDisplayListener(listener);
!!!2834188.java!!!	scanWifiDisplays() : void
        mGlobal.scanWifiDisplays();
!!!2834316.java!!!	connectWifiDisplay(in deviceAddress : String) : void
        mGlobal.connectWifiDisplay(deviceAddress);
!!!2834444.java!!!	disconnectWifiDisplay() : void
        mGlobal.disconnectWifiDisplay();
!!!2834572.java!!!	renameWifiDisplay(in deviceAddress : String, in alias : String) : void
        mGlobal.renameWifiDisplay(deviceAddress, alias);
!!!2834700.java!!!	forgetWifiDisplay(in deviceAddress : String) : void
        mGlobal.forgetWifiDisplay(deviceAddress);
!!!2834828.java!!!	getWifiDisplayStatus() : WifiDisplayStatus
        return mGlobal.getWifiDisplayStatus();
