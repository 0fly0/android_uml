class WallpaperSourceFragment
!!!13450252.java!!!	onActivityCreated(inout savedInstanceState : Bundle) : void
        super.onActivityCreated(savedInstanceState);
        mPackageManager = getActivity().getPackageManager();
        mAdapter = new ArrayAdapter<ResolveInfo>(getActivity(),
                R.layout.wallpaper_source_picker_item, R.id.wallpaper_name) {
            @Override
            public View getView(int position, View convertView, ViewGroup parent) {
                ResolveInfo info = mAdapter.getItem(position);
                View view = super.getView(position, convertView, parent);
                TextView name = (TextView) view.findViewById(R.id.wallpaper_name);
                name.setText(info.loadLabel(mPackageManager));
                ImageView preview = (ImageView) view.findViewById(R.id.wallpaper_preview);
                preview.setImageDrawable(getWallpaperPreview(info));
                return view;
            }
        };
        Gallery gallery = (Gallery) getView().findViewById(R.id.wallpaper_gallery);
        loadWallpaperSources();
        gallery.setAdapter(mAdapter);
        gallery.setOnItemClickListener(new OnItemClickListener() {
            @Override
            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
                ResolveInfo info = mAdapter.getItem(position);
                Intent intent = new Intent();
                intent.setAction(Intent.ACTION_SET_WALLPAPER);
                intent.setClassName(info.activityInfo.packageName, info.activityInfo.name);
                startActivity(intent);
                getActivity().finish();
            }
        });
!!!13450380.java!!!	onCreateView(inout inflater : LayoutInflater, inout container : ViewGroup, inout savedInstanceState : Bundle) : View
        View v = inflater.inflate(R.layout.wallpaper_source_picker, container, false);
        return v;
!!!13450508.java!!!	loadWallpaperSources() : void
        Intent wallpapersIntent = new Intent(Intent.ACTION_SET_WALLPAPER);
        List<ResolveInfo> wallpaperSources = mPackageManager.queryIntentActivities(wallpapersIntent,
                PackageManager.GET_META_DATA);
        for (ResolveInfo source : wallpaperSources) {
            mAdapter.add(source);
        }
!!!13450636.java!!!	getWallpaperPreview(inout info : ResolveInfo) : Drawable
        Drawable preview = parseWallpaperPreviewXml(info);
        if (preview != null) {
            return preview;
        } else {
            // If no icon exists, use the app icon.
            // TODO(justinkoh): implement this.
            return null;
        }
!!!13450764.java!!!	parseWallpaperPreviewXml(inout info : ResolveInfo) : Drawable
        ActivityInfo activityInfo = info.activityInfo;
        XmlResourceParser parser = null;
        try {
            parser = activityInfo.loadXmlMetaData(mPackageManager,
                    WallpaperManager.WALLPAPER_PREVIEW_META_DATA);
            if (parser == null) {
                return getDefaultPreview(info);
            }

            AttributeSet attrs = Xml.asAttributeSet(parser);
            int type;
            while ((type = parser.next()) != XmlPullParser.END_DOCUMENT) {
                if (type == XmlPullParser.START_TAG) {
                    String name = parser.getName();
                    if (!"wallpaper-preview".equals(name)) {
                        return null;
                    }
                    Resources resources = mPackageManager.getResourcesForApplication(
                            activityInfo.applicationInfo);
                    TypedArray styleAttributes = resources.obtainAttributes(attrs,
                            com.android.internal.R.styleable.WallpaperPreviewInfo);
                    TypedValue value = styleAttributes.peekValue(
                            com.android.internal.R.styleable.WallpaperPreviewInfo_staticWallpaperPreview);
                    if (value != null) {
                        return resources.getDrawable(value.resourceId);
                    }
                }
            }
        } catch (XmlPullParserException e) {
            // Do nothing.
        } catch (IOException e) {
            // Do nothing.
        } catch (NameNotFoundException e) {
            // Do nothing.
        } finally {
            if (parser != null) {
                parser.close();
            }
        }
        return null;
!!!13450892.java!!!	getDefaultPreview(inout info : ResolveInfo) : Drawable
        int width = getResources().getDimensionPixelSize(R.dimen.wallpaper_source_width);
        int height = getResources().getDimensionPixelSize(R.dimen.wallpaper_source_height);
        Drawable iconDrawable = info.loadIcon(mPackageManager);
        return Views.getDefaultPreview(getActivity(), iconDrawable, width, height);
