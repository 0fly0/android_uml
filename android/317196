format 74
"websocket" // vendor::tv::chrome::plugins::drmserver_adapter::jni::ppapi::utility::websocket
  revision 1
  modified_by 12 "shchen"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  cpp_h_dir "/home/shchen/work/jellybean/vendor/tv/chrome/plugins/drmserver_adapter/jni/ppapi/utility/websocket/"
  cpp_src_dir "/home/shchen/work/jellybean/vendor/tv/chrome/plugins/drmserver_adapter/jni/ppapi/utility/websocket/"
  cpp_namespace "pp"
  classview 276748 "websocket"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 2817164 "WebSocketAPI"
      abstract visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "/ The <code>WebSocketAPI</code> class"
      operation 11536524 "WebSocketAPI"
	public explicit_return_type ""
	nparams 1
	  param inout name "instance" type class_ref 2792716 // Instance
	cpp_decl "    ${comment}${inline}explicit ${name}${(}${t0} * ${p0}${v0}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} * ${p0}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
	comment "/ Constructs a WebSocketAPI object."
      end

      operation 11536652 "~WebSocketAPI"
	cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
	comment "/ Destructs a WebSocketAPI object."
      end

      operation 11536780 "Connect"
	public return_type class_ref 2409996 // int32_t
	nparams 3
	  param in name "url" type class_ref 2789260 // Var
	  param in name "protocols" type class_ref 2789260 // Var
	  param in name "protocol_count" type class_ref 2345996 // uint32_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} ${p1}[]${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} ${p1}[], ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "/ Connect() connects to the specified WebSocket server. Caller can call
/ this method at most once.
/
/ @param[in] url A <code>Var</code> of string type representing a WebSocket
/ server URL.
/ @param[in] protocols A pointer to an array of string type
/ <code>Var</code> specifying sub-protocols. Each <code>Var</code>
/ represents one sub-protocol and its <code>PP_VarType</code> must be
/ <code>PP_VARTYPE_STRING</code>. This argument can be null only if
/ <code>protocol_count</code> is 0.
/ @param[in] protocol_count The number of sub-protocols in
/ <code>protocols</code>.
/
/ @return An int32_t containing an error code from
/ <code>pp_errors.h</code>.
/ See also <code>pp::WebSocket::Connect</code>."
      end

      operation 11536908 "Close"
	public return_type class_ref 2409996 // int32_t
	nparams 2
	  param in name "code" type class_ref 2347788 // uint16_t
	  param in name "reason" type class_ref 2789260 // Var
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "/ Close() closes the specified WebSocket connection by specifying
/ <code>code</code> and <code>reason</code>.
/
/ @param[in] code The WebSocket close code. Ignored if it is 0.
/ @param[in] reason A <code>Var</code> of string type which represents the
/ WebSocket close reason. Ignored if it is undefined type.
/
/ @return An int32_t containing an error code from
/ <code>pp_errors.h</code>.
/ See also <code>pp::WebSocket::Close</code>."
      end

      operation 11537036 "Send"
	public return_type class_ref 2409996 // int32_t
	nparams 1
	  param in name "data" type class_ref 2789260 // Var
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "/ Send() sends a message to the WebSocket server.
/
/ @param[in] data A message to send. The message is copied to internal
/ buffer. So caller can free <code>data</code> safely after returning
/ from the function.
/
/ @return An int32_t containing an error code from
/ <code>pp_errors.h</code>.
/ See also <code>pp::WebSocket::SendMessage</code>."
      end

      operation 11537164 "GetBufferedAmount"
	public explicit_return_type "uint64_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "/ GetBufferedAmount() returns the number of bytes of text and binary
/ messages that have been queued for the WebSocket connection to send but
/ have not been transmitted to the network yet.
/
/ @return Returns the number of bytes."
      end

      operation 11537292 "GetExtensions"
	public return_type class_ref 2789260 // Var
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "/ GetExtensions() returns the extensions selected by the server for the
/ specified WebSocket connection.
/
/ @return Returns a <code>Var</code> of string type. If called before the
/ connection is established, its data is empty string.
/ Currently its data is always an empty string."
      end

      operation 11537420 "GetProtocol"
	public return_type class_ref 2789260 // Var
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "/ GetProtocol() returns the sub-protocol chosen by the server for the
/ specified WebSocket connection.
/
/ @return Returns a <code>Var</code> of string type. If called before the
/ connection is established, it contains the empty string."
      end

      operation 11537548 "GetReadyState"
	public return_type class_ref 2754444 // PP_WebSocketReadyState
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "/ GetReadyState() returns the ready state of the specified WebSocket
/ connection.
/
/ @return Returns <code>PP_WEBSOCKETREADYSTATE_INVALID</code> if called
/ before connect() is called."
      end

      operation 11537676 "GetURL"
	public return_type class_ref 2789260 // Var
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "/ GetURL() returns the URL associated with specified WebSocket connection.
/
/ @return Returns a <code>Var</code> of string type. If called before the
/ connection is established, it contains the empty string."
      end

      operation 11537804 "WebSocketDidOpen"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "/ WebSocketDidOpen() is invoked when the connection is established by
/ Connect()."
      end

      operation 11537932 "WebSocketDidClose"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 3
	  param in name "wasClean" type class_ref 2322828 // bool
	  param in name "code" type class_ref 2347788 // uint16_t
	  param in name "reason" type class_ref 2789260 // Var
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, const ${t2} & ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "/ WebSocketDidClose() is invoked when the connection is closed by errors or
/ Close()."
      end

      operation 11538060 "HandleWebSocketMessage"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "message" type class_ref 2789260 // Var
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "/ HandleWebSocketMessage() is invoked when a message is received."
      end

      operation 11538188 "HandleWebSocketError"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "/ HandleWebSocketError() is invoked if the user agent was required to fail
/ the WebSocket connection or the WebSocket connection is closed with
/ prejudice. DidClose() always follows HandleError()."
      end

      extra_member 178060 "Implement"
	
	stereotype "class"
	cpp "    class Implement;
" ""
	java ""
	php ""
	python ""
	idl ""
      end

      attribute 10060684 "impl_"
	private explicit_type "Implement"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end
  end

  deploymentview 263052 "websocket"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 1062796 "websocket_api"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 2817164 // WebSocketAPI
      end
    end
  end
end
