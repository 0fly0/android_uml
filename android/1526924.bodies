class JavaBridgeTestBase
!!!9356556.java!!!	JavaBridgeTestBase()
        super(WebViewStubActivity.class);
!!!9356684.java!!!	setUpWebView(in object : Object, in name : String) : void
        mWebViewClient = new TestWebViewClient();
        // This starts the activity, so must be called on the test thread.
        final WebViewStubActivity activity = getActivity();
        // On the UI thread, load an empty page and wait for it to finish
        // loading so that the Java object is injected.
        try {
            runTestOnUiThread(new Runnable() {
                @Override
                public void run() {
                    WebView webView = activity.getWebView();
                    webView.addJavascriptInterface(object, name);
                    webView.getSettings().setJavaScriptEnabled(true);
                    webView.setWebViewClient(mWebViewClient);
                    webView.loadData("<!DOCTYPE html><title></title>", "text/html", null);
                }
            });
            mWebViewClient.waitForOnPageFinished();
        } catch (Throwable e) {
            throw new RuntimeException("Failed to set up WebView: " + Log.getStackTraceString(e));
        }
!!!9356812.java!!!	executeJavaScript(in script : String) : void
        runTestOnUiThread(new Runnable() {
            @Override
            public void run() {
                // When a JavaScript URL is executed, if the value of the last
                // expression evaluated is not 'undefined', this value is
                // converted to a string and used as the new document for the
                // frame. We don't want this behaviour, so wrap the script in
                // an anonymous function.
                getWebView().loadUrl("javascript:(function() { " + script + " })()");
            }
        });
!!!9356940.java!!!	getWebView() : WebView
        return getActivity().getWebView();
