class CompatModePanel
!!!7710220.java!!!	CompatModePanel(inout context : Context, inout attrs : AttributeSet)
        super(context, attrs);
        mContext = context;
        mAM = (ActivityManager) context.getSystemService(Context.ACTIVITY_SERVICE);
!!!7710348.java!!!	onFinishInflate() : void
        mOnButton  = (RadioButton) findViewById(R.id.compat_mode_on_radio);
        mOffButton = (RadioButton) findViewById(R.id.compat_mode_off_radio);
        mOnButton.setOnClickListener(this);
        mOffButton.setOnClickListener(this);

        refresh();
!!!7710476.java!!!	onDetachedFromWindow() : void
        super.onDetachedFromWindow();
        if (mAttached) {
            mAttached = false;
        }
!!!7710604.java!!!	onAttachedToWindow() : void
        super.onAttachedToWindow();
        if (!mAttached) {
            mAttached = true;
        }
!!!7710732.java!!!	onClick(inout v : View) : void
        if (v == mOnButton) {
            mAM.setFrontActivityScreenCompatMode(ActivityManager.COMPAT_MODE_ENABLED);
        } else if (v == mOffButton) {
            mAM.setFrontActivityScreenCompatMode(ActivityManager.COMPAT_MODE_DISABLED);
        }
!!!7710860.java!!!	isInContentArea(in x : int, in y : int) : boolean
        return false;
!!!7710988.java!!!	dispatchHoverEvent(inout event : MotionEvent) : boolean
        // Ignore hover events outside of this panel bounds since such events
        // generate spurious accessibility events with the panel content when
        // tapping outside of it, thus confusing the user.
        final int x = (int) event.getX();
        final int y = (int) event.getY();
        if (x >= 0 && x < getWidth() && y >= 0 && y < getHeight()) {
            return super.dispatchHoverEvent(event);
        }
        return true;
!!!7711116.java!!!	setTrigger(inout v : View) : void
        mTrigger = v;
!!!7711244.java!!!	openPanel() : void
        setVisibility(View.VISIBLE);
        if (mTrigger != null) mTrigger.setSelected(true);
        refresh();
!!!7711372.java!!!	closePanel() : void
        setVisibility(View.GONE);
        if (mTrigger != null) mTrigger.setSelected(false);
!!!7711500.java!!!	refresh() : void
        int mode = mAM.getFrontActivityScreenCompatMode();
        if (mode == ActivityManager.COMPAT_MODE_ALWAYS
                || mode == ActivityManager.COMPAT_MODE_NEVER) {
            // No longer have something to switch.
            closePanel();
            return;
        }
        final boolean on = (mode == ActivityManager.COMPAT_MODE_ENABLED);
        mOnButton.setChecked(on);
        mOffButton.setChecked(!on);
