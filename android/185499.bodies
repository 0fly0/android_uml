class FloatArrayBuffer
!!!734747.java!!!	FloatArrayBuffer(inout array : float)
    this(array.length, array, 0, false);
!!!734875.java!!!	FloatArrayBuffer(in capacity : int, inout backingArray : float, in arrayOffset : int, inout isReadOnly : boolean)
    super(capacity);
    this.backingArray = backingArray;
    this.arrayOffset = arrayOffset;
    this.isReadOnly = isReadOnly;
!!!735003.java!!!	copy(inout other : FloatArrayBuffer, in markOfOther : int, inout isReadOnly : boolean) : FloatArrayBuffer
    FloatArrayBuffer buf = new FloatArrayBuffer(other.capacity(), other.backingArray, other.arrayOffset, isReadOnly);
    buf.limit = other.limit;
    buf.position = other.position();
    buf.mark = markOfOther;
    return buf;
!!!735131.java!!!	asReadOnlyBuffer() : FloatBuffer
    return copy(this, mark, true);
!!!735259.java!!!	compact() : FloatBuffer
    if (isReadOnly) {
      throw new ReadOnlyBufferException();
    }
    System.arraycopy(backingArray, position + arrayOffset, backingArray, arrayOffset, remaining());
    position = limit - position;
    limit = capacity;
    mark = UNSET_MARK;
    return this;
!!!735387.java!!!	duplicate() : FloatBuffer
    return copy(this, mark, isReadOnly);
!!!735515.java!!!	slice() : FloatBuffer
    return new FloatArrayBuffer(remaining(), backingArray, arrayOffset + position, isReadOnly);
!!!735643.java!!!	isReadOnly() : boolean
    return isReadOnly;
!!!735771.java!!!	protectedArray() : float
    if (isReadOnly) {
      throw new ReadOnlyBufferException();
    }
    return backingArray;
!!!735899.java!!!	protectedArrayOffset() : int
    if (isReadOnly) {
      throw new ReadOnlyBufferException();
    }
    return arrayOffset;
!!!736027.java!!!	protectedHasArray() : boolean
    if (isReadOnly) {
      return false;
    }
    return true;
!!!736155.java!!!	get() : float
    if (position == limit) {
      throw new BufferUnderflowException();
    }
    return backingArray[arrayOffset + position++];
!!!736283.java!!!	get(in index : int) : float
    checkIndex(index);
    return backingArray[arrayOffset + index];
!!!736411.java!!!	get(inout dst : float, in dstOffset : int, in floatCount : int) : FloatBuffer
    if (floatCount > remaining()) {
      throw new BufferUnderflowException();
    }
    System.arraycopy(backingArray, arrayOffset + position, dst, dstOffset, floatCount);
    position += floatCount;
    return this;
!!!736539.java!!!	isDirect() : boolean
    return false;
!!!736667.java!!!	order() : ByteOrder
    return ByteOrder.nativeOrder();
!!!736795.java!!!	put(in c : float) : FloatBuffer
    if (isReadOnly) {
      throw new ReadOnlyBufferException();
    }
    if (position == limit) {
      throw new BufferOverflowException();
    }
    backingArray[arrayOffset + position++] = c;
    return this;
!!!736923.java!!!	put(in index : int, in c : float) : FloatBuffer
    if (isReadOnly) {
      throw new ReadOnlyBufferException();
    }
    checkIndex(index);
    backingArray[arrayOffset + index] = c;
    return this;
!!!737051.java!!!	put(inout src : float, in srcOffset : int, in floatCount : int) : FloatBuffer
    if (isReadOnly) {
      throw new ReadOnlyBufferException();
    }
    if (floatCount > remaining()) {
      throw new BufferOverflowException();
    }
    System.arraycopy(src, srcOffset, backingArray, arrayOffset + position, floatCount);
    position += floatCount;
    return this;
