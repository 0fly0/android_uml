class KeyStore
!!!856091.java!!!	KeyStore(inout keyStoreSpi : KeyStoreSpi, inout provider : Provider, inout type : String)
        this.type = type;
        this.provider = provider;
        this.implSpi = keyStoreSpi;
        isInit = false;
!!!856219.java!!!	throwNotInitialized() : void
        throw new KeyStoreException("KeyStore was not initialized");
!!!856347.java!!!	getInstance(inout type : String) : KeyStore
        if (type == null) {
            throw new NullPointerException("type == null");
        }
        try {
            Engine.SpiAndProvider sap = ENGINE.getInstance(type, null);
            return new KeyStore((KeyStoreSpi) sap.spi, sap.provider, type);
        } catch (NoSuchAlgorithmException e) {
            throw new KeyStoreException(e);
        }
!!!856475.java!!!	getInstance(inout type : String, inout provider : String) : KeyStore
        if (provider == null || provider.isEmpty()) {
            throw new IllegalArgumentException();
        }
        Provider impProvider = Security.getProvider(provider);
        if (impProvider == null) {
            throw new NoSuchProviderException(provider);
        }
        try {
            return getInstance(type, impProvider);
        } catch (Exception e) {
            throw new KeyStoreException(e);
        }
!!!856603.java!!!	getInstance(inout type : String, inout provider : Provider) : KeyStore
        // check parameters
        if (provider == null) {
            throw new IllegalArgumentException("provider == null");
        }
        if (type == null) {
            throw new NullPointerException("type == null");
        }
        // return KeyStore instance
        try {
            Object spi = ENGINE.getInstance(type, provider, null);
            return new KeyStore((KeyStoreSpi) spi, provider, type);
        } catch (Exception e) {
            // override exception
            throw new KeyStoreException(e);
        }
!!!856731.java!!!	getDefaultType() : String
        String dt = Security.getProperty(PROPERTY_NAME);
        return (dt == null ? DEFAULT_KEYSTORE_TYPE : dt);
!!!856859.java!!!	getProvider() : Provider
        return provider;
!!!856987.java!!!	getType() : String
        return type;
!!!857115.java!!!	getKey(inout alias : String, inout password : char) : Key
        if (!isInit) {
            throwNotInitialized();
        }
        return implSpi.engineGetKey(alias, password);
!!!857243.java!!!	getCertificateChain(inout alias : String) : Certificate
        if (!isInit) {
            throwNotInitialized();
        }
        return implSpi.engineGetCertificateChain(alias);
!!!857371.java!!!	getCertificate(inout alias : String) : Certificate
        if (!isInit) {
            throwNotInitialized();
        }
        return implSpi.engineGetCertificate(alias);
!!!857499.java!!!	getCreationDate(inout alias : String) : Date
        if (!isInit) {
            throwNotInitialized();
        }
        return implSpi.engineGetCreationDate(alias);
!!!857627.java!!!	setKeyEntry(inout alias : String, inout key : Key, inout password : char, inout chain : Certificate) : void
        if (!isInit) {
            throwNotInitialized();
        }

        // Certificate chain is required for PrivateKey
        if (key != null && key instanceof PrivateKey && (chain == null || chain.length == 0)) {
            throw new IllegalArgumentException("Certificate chain is not defined for Private key");
        }
        implSpi.engineSetKeyEntry(alias, key, password, chain);
!!!857755.java!!!	setKeyEntry(inout alias : String, inout key : byte, inout chain : Certificate) : void
        if (!isInit) {
            throwNotInitialized();
        }
        implSpi.engineSetKeyEntry(alias, key, chain);
!!!857883.java!!!	setCertificateEntry(inout alias : String, inout cert : Certificate) : void
        if (!isInit) {
            throwNotInitialized();
        }
        implSpi.engineSetCertificateEntry(alias, cert);
!!!858011.java!!!	deleteEntry(inout alias : String) : void
        if (!isInit) {
            throwNotInitialized();
        }
        implSpi.engineDeleteEntry(alias);
!!!858139.java!!!	aliases() : Enumeration
        if (!isInit) {
            throwNotInitialized();
        }
        return implSpi.engineAliases();
!!!858267.java!!!	containsAlias(inout alias : String) : boolean
        if (!isInit) {
            throwNotInitialized();
        }
        return implSpi.engineContainsAlias(alias);
!!!858395.java!!!	size() : int
        if (!isInit) {
            throwNotInitialized();
        }
        return implSpi.engineSize();
!!!858523.java!!!	isKeyEntry(inout alias : String) : boolean
        if (!isInit) {
            throwNotInitialized();
        }
        return implSpi.engineIsKeyEntry(alias);
!!!858651.java!!!	isCertificateEntry(inout alias : String) : boolean
        if (!isInit) {
            throwNotInitialized();
        }
        return implSpi.engineIsCertificateEntry(alias);
!!!858779.java!!!	getCertificateAlias(inout cert : Certificate) : String
        if (!isInit) {
            throwNotInitialized();
        }
        return implSpi.engineGetCertificateAlias(cert);
!!!858907.java!!!	store(inout stream : OutputStream, inout password : char) : void
        if (!isInit) {
            throwNotInitialized();
        }

        //Just delegate stream and password to implSpi
        implSpi.engineStore(stream, password);
!!!859035.java!!!	store(inout param : LoadStoreParameter) : void
        if (!isInit) {
            throwNotInitialized();
        }
        implSpi.engineStore(param);
!!!859163.java!!!	load(inout stream : InputStream, inout password : char) : void
        implSpi.engineLoad(stream, password);
        isInit = true;
!!!859291.java!!!	load(inout param : LoadStoreParameter) : void
        implSpi.engineLoad(param);
        isInit = true;
!!!859419.java!!!	getEntry(inout alias : String, inout param : ProtectionParameter) : Entry
        if (alias == null) {
            throw new NullPointerException("alias == null");
        }
        if (!isInit) {
            throwNotInitialized();
        }
        return implSpi.engineGetEntry(alias, param);
!!!859547.java!!!	setEntry(inout alias : String, inout entry : Entry, inout param : ProtectionParameter) : void
        if (!isInit) {
            throwNotInitialized();
        }
        if (alias == null) {
            throw new NullPointerException("alias == null");
        }
        if (entry == null) {
            throw new NullPointerException("entry == null");
        }
        implSpi.engineSetEntry(alias, entry, param);
!!!859675.java!!!	entryInstanceOf(inout alias : String, inout entryClass : Class) : boolean
        if (alias == null) {
            throw new NullPointerException("alias == null");
        }
        if (entryClass == null) {
            throw new NullPointerException("entryClass == null");
        }

        if (!isInit) {
            throwNotInitialized();
        }
        return implSpi.engineEntryInstanceOf(alias, entryClass);
