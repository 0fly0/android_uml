format 74
"sax" // framework::base::opengl::java::javax::xml::transform::sax
  revision 1
  modified_by 27 "shchen"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "/home/shchen/work/android-x86/libcore/luni/src/main/java/javax/xml/transform/sax/"
  java_package "javax.xml.transform.sax"
  classview 135707 "sax"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 307355 "SAXResult"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>Acts as an holder for a transformation Result.</p>

@author <a href=\"Jeff.Suttor@Sun.com\">Jeff Suttor</a>"
      classrelation 545947 // <realization>
	relation 545947 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 545947 // <realization>
	  b parent class_ref 305819 // Result
      end

      classrelation 546075 // FEATURE (<unidirectional association>)
	relation 546075 --->
	  a role_name "FEATURE" init_value "
        \"http://javax.xml.transform.sax.SAXResult/feature\"" class_relation const_relation public
	    comment "
If {@link javax.xml.transform.TransformerFactory#getFeature}
returns true when passed this value as an argument,
the Transformer supports Result output of this type.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 546075 // FEATURE (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      operation 1928475 "SAXResult"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Zero-argument default constructor."
      end

      operation 1928603 "SAXResult"
	public explicit_return_type ""
	nparams 1
	  param inout name "handler" type class_ref 307483 // ContentHandler
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a SAXResult that targets a SAX2 {@link org.xml.sax.ContentHandler}.

@param handler Must be a non-null ContentHandler reference."
      end

      operation 1928731 "setHandler"
	public explicit_return_type "void"
	nparams 1
	  param inout name "handler" type class_ref 307483 // ContentHandler
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the target to be a SAX2 {@link org.xml.sax.ContentHandler}.

@param handler Must be a non-null ContentHandler reference."
      end

      operation 1928859 "getHandler"
	public return_type class_ref 307483 // ContentHandler
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the {@link org.xml.sax.ContentHandler} that is the Result.

@return The ContentHandler that is to be transformation output."
      end

      operation 1928987 "setLexicalHandler"
	public explicit_return_type "void"
	nparams 1
	  param inout name "handler" type class_ref 307611 // LexicalHandler
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the SAX2 {@link org.xml.sax.ext.LexicalHandler} for the output.

<p>This is needed to handle XML comments and the like.  If the
lexical handler is not set, an attempt should be made by the
transformer to cast the {@link org.xml.sax.ContentHandler} to a
<code>LexicalHandler</code>.</p>

@param handler A non-null <code>LexicalHandler</code> for
handling lexical parse events."
      end

      operation 1929115 "getLexicalHandler"
	public return_type class_ref 307611 // LexicalHandler
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get a SAX2 {@link org.xml.sax.ext.LexicalHandler} for the output.

@return A <code>LexicalHandler</code>, or null."
      end

      operation 1929243 "setSystemId"
	public explicit_return_type "void"
	nparams 1
	  param inout name "systemId" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Method setSystemId Set the systemID that may be used in association
with the {@link org.xml.sax.ContentHandler}.

@param systemId The system identifier as a URI string."
      end

      operation 1929371 "getSystemId"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the system identifier that was set with setSystemId.

@return The system identifier that was set with setSystemId, or null
if setSystemId was not called."
      end

      classrelation 546203 // handler (<unidirectional association>)
	relation 546203 --->
	  a role_name "handler" private
	    comment "////////////////////////////////////////////////////////////////////
 Internal state.
////////////////////////////////////////////////////////////////////

The handler for parse events.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 546203 // handler (<unidirectional association>)
	  b parent class_ref 307483 // ContentHandler
      end

      classrelation 546331 // lexhandler (<unidirectional association>)
	relation 546331 --->
	  a role_name "lexhandler" private
	    comment "
The handler for lexical events.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 546331 // lexhandler (<unidirectional association>)
	  b parent class_ref 307611 // LexicalHandler
      end

      classrelation 546459 // systemId (<unidirectional association>)
	relation 546459 --->
	  a role_name "systemId" private
	    comment "
The systemID that may be used in association
with the node.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 546459 // systemId (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end
    end

    class 307739 "SAXSource"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "<p>Acts as an holder for SAX-style Source.</p>

<p>Note that XSLT requires namespace support. Attempting to transform an
input source that is not
generated with a namespace-aware parser may result in errors.
Parsers can be made namespace aware by calling the
{@link javax.xml.parsers.SAXParserFactory#setNamespaceAware(boolean awareness)} method.</p>

@author <a href=\"mailto:Jeff.Suttor@Sun.com\">Jeff Suttor</a>
@version $Revision: 446598 $, $Date: 2006-09-15 05:55:40 -0700 (Fri, 15 Sep 2006) $"
      classrelation 546587 // <realization>
	relation 546587 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 546587 // <realization>
	  b parent class_ref 305947 // Source
      end

      classrelation 546715 // FEATURE (<unidirectional association>)
	relation 546715 --->
	  a role_name "FEATURE" init_value "
        \"http://javax.xml.transform.sax.SAXSource/feature\"" class_relation const_relation public
	    comment "
If {@link javax.xml.transform.TransformerFactory#getFeature}
returns true when passed this value as an argument,
the Transformer supports Source input of this type.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 546715 // FEATURE (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      operation 1929499 "SAXSource"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Zero-argument default constructor.  If this constructor is used, and
no SAX source is set using
{@link #setInputSource(InputSource inputSource)} , then the
<code>Transformer</code> will
create an empty source {@link org.xml.sax.InputSource} using
{@link org.xml.sax.InputSource#InputSource() new InputSource()}.</p>

@see javax.xml.transform.Transformer#transform(Source xmlSource, Result outputTarget)"
      end

      operation 1929627 "SAXSource"
	public explicit_return_type ""
	nparams 2
	  param inout name "reader" type class_ref 304923 // XMLReader
	  param inout name "inputSource" type class_ref 303259 // InputSource
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a <code>SAXSource</code>, using an {@link org.xml.sax.XMLReader}
and a SAX InputSource. The {@link javax.xml.transform.Transformer}
or {@link javax.xml.transform.sax.SAXTransformerFactory} will set itself
to be the reader's {@link org.xml.sax.ContentHandler}, and then will call
reader.parse(inputSource).

@param reader An XMLReader to be used for the parse.
@param inputSource A SAX input source reference that must be non-null
and that will be passed to the reader parse method."
      end

      operation 1929755 "SAXSource"
	public explicit_return_type ""
	nparams 1
	  param inout name "inputSource" type class_ref 303259 // InputSource
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a <code>SAXSource</code>, using a SAX <code>InputSource</code>.
The {@link javax.xml.transform.Transformer} or
{@link javax.xml.transform.sax.SAXTransformerFactory} creates a
reader via {@link org.xml.sax.helpers.XMLReaderFactory}
(if setXMLReader is not used), sets itself as
the reader's {@link org.xml.sax.ContentHandler}, and calls
reader.parse(inputSource).

@param inputSource An input source reference that must be non-null
and that will be passed to the parse method of the reader."
      end

      operation 1929883 "setXMLReader"
	public explicit_return_type "void"
	nparams 1
	  param inout name "reader" type class_ref 304923 // XMLReader
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the XMLReader to be used for the Source.

@param reader A valid XMLReader or XMLFilter reference."
      end

      operation 1930011 "getXMLReader"
	public return_type class_ref 304923 // XMLReader
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the XMLReader to be used for the Source.

@return A valid XMLReader or XMLFilter reference, or null."
      end

      operation 1930139 "setInputSource"
	public explicit_return_type "void"
	nparams 1
	  param inout name "inputSource" type class_ref 303259 // InputSource
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the SAX InputSource to be used for the Source.

@param inputSource A valid InputSource reference."
      end

      operation 1930267 "getInputSource"
	public return_type class_ref 303259 // InputSource
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the SAX InputSource to be used for the Source.

@return A valid InputSource reference, or null."
      end

      operation 1930395 "setSystemId"
	public explicit_return_type "void"
	nparams 1
	  param inout name "systemId" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the system identifier for this Source.  If an input source
has already been set, it will set the system ID or that
input source, otherwise it will create a new input source.

<p>The system identifier is optional if there is a byte stream
or a character stream, but it is still useful to provide one,
since the application can use it to resolve relative URIs
and can include it in error messages and warnings (the parser
will attempt to open a connection to the URI only if
no byte stream or character stream is specified).</p>

@param systemId The system identifier as a URI string."
      end

      operation 1930523 "getSystemId"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Get the base ID (URI or system ID) from where URIs
will be resolved.</p>

@return Base URL for the <code>Source</code>, or <code>null</code>."
      end

      classrelation 546843 // reader (<unidirectional association>)
	relation 546843 --->
	  a role_name "reader" private
	    comment "
The XMLReader to be used for the source tree input. May be null.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 546843 // reader (<unidirectional association>)
	  b parent class_ref 304923 // XMLReader
      end

      classrelation 546971 // inputSource (<unidirectional association>)
	relation 546971 --->
	  a role_name "inputSource" private
	    comment "
<p>The SAX InputSource to be used for the source tree input.
Should not be <code>null<code>.</p>

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 546971 // inputSource (<unidirectional association>)
	  b parent class_ref 303259 // InputSource
      end

      operation 1930651 "sourceToInputSource"
	class_operation public return_type class_ref 303259 // InputSource
	nparams 1
	  param inout name "source" type class_ref 305947 // Source
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Attempt to obtain a SAX InputSource object from a Source
object.

@param source Must be a non-null Source reference.

@return An InputSource, or null if Source can not be converted."
      end
    end

    class 307867 "SAXTransformerFactory"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class extends TransformerFactory to provide SAX-specific
factory methods.  It provides two types of ContentHandlers,
one for creating Transformers, the other for creating Templates
objects.

<p>If an application wants to set the ErrorHandler or EntityResolver
for an XMLReader used during a transformation, it should use a URIResolver
to return the SAXSource which provides (with getXMLReader) a reference to
the XMLReader.</p>"
      classrelation 547099 // <generalisation>
	relation 547099 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 547099 // <generalisation>
	  b parent class_ref 306715 // TransformerFactory
      end

      classrelation 547227 // FEATURE (<unidirectional association>)
	relation 547227 --->
	  a role_name "FEATURE" init_value "
        \"http://javax.xml.transform.sax.SAXTransformerFactory/feature\"" class_relation const_relation public
	    comment " If {@link javax.xml.transform.TransformerFactory#getFeature}
returns true when passed this value as an argument,
the TransformerFactory returned from
{@link javax.xml.transform.TransformerFactory#newInstance} may
be safely cast to a SAXTransformerFactory.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 547227 // FEATURE (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      classrelation 547355 // FEATURE_XMLFILTER (<unidirectional association>)
	relation 547355 --->
	  a role_name "FEATURE_XMLFILTER" init_value "
        \"http://javax.xml.transform.sax.SAXTransformerFactory/feature/xmlfilter\"" class_relation const_relation public
	    comment " If {@link javax.xml.transform.TransformerFactory#getFeature}
returns true when passed this value as an argument,
the {@link #newXMLFilter(Source src)}
and {@link #newXMLFilter(Templates templates)} methods are supported.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 547355 // FEATURE_XMLFILTER (<unidirectional association>)
	  b parent class_ref 3399692 // String
      end

      operation 1930779 "SAXTransformerFactory"
	protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The default constructor is protected on purpose."
      end

      operation 1930907 "newTransformerHandler"
	abstract public return_type class_ref 307995 // TransformerHandler
	nparams 1
	  param inout name "src" type class_ref 305947 // Source
	nexceptions 1
	  exception class_ref 306459 // TransformerConfigurationException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get a TransformerHandler object that can process SAX
ContentHandler events into a Result, based on the transformation
instructions specified by the argument.

@param src The Source of the transformation instructions.

@return TransformerHandler ready to transform SAX events.

@throws TransformerConfigurationException If for some reason the
TransformerHandler can not be created."
      end

      operation 1931035 "newTransformerHandler"
	abstract public return_type class_ref 307995 // TransformerHandler
	nparams 1
	  param inout name "templates" type class_ref 306203 // Templates
	nexceptions 1
	  exception class_ref 306459 // TransformerConfigurationException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get a TransformerHandler object that can process SAX
ContentHandler events into a Result, based on the Templates argument.

@param templates The compiled transformation instructions.

@return TransformerHandler ready to transform SAX events.

@throws TransformerConfigurationException If for some reason the
TransformerHandler can not be created."
      end

      operation 1931163 "newTransformerHandler"
	abstract public return_type class_ref 307995 // TransformerHandler
	nparams 0
	nexceptions 1
	  exception class_ref 306459 // TransformerConfigurationException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get a TransformerHandler object that can process SAX
ContentHandler events into a Result. The transformation
is defined as an identity (or copy) transformation, for example
to copy a series of SAX parse events into a DOM tree.

@return A non-null reference to a TransformerHandler, that may
be used as a ContentHandler for SAX parse events.

@throws TransformerConfigurationException If for some reason the
TransformerHandler cannot be created."
      end

      operation 1931291 "newTemplatesHandler"
	abstract public return_type class_ref 308123 // TemplatesHandler
	nparams 0
	nexceptions 1
	  exception class_ref 306459 // TransformerConfigurationException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get a TemplatesHandler object that can process SAX
ContentHandler events into a Templates object.

@return A non-null reference to a TransformerHandler, that may
be used as a ContentHandler for SAX parse events.

@throws TransformerConfigurationException If for some reason the
TemplatesHandler cannot be created."
      end

      operation 1931419 "newXMLFilter"
	abstract public return_type class_ref 308251 // XMLFilter
	nparams 1
	  param inout name "src" type class_ref 305947 // Source
	nexceptions 1
	  exception class_ref 306459 // TransformerConfigurationException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create an XMLFilter that uses the given Source as the
transformation instructions.

@param src The Source of the transformation instructions.

@return An XMLFilter object, or null if this feature is not supported.

@throws TransformerConfigurationException If for some reason the
TemplatesHandler cannot be created."
      end

      operation 1931547 "newXMLFilter"
	abstract public return_type class_ref 308251 // XMLFilter
	nparams 1
	  param inout name "templates" type class_ref 306203 // Templates
	nexceptions 1
	  exception class_ref 306459 // TransformerConfigurationException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create an XMLFilter, based on the Templates argument..

@param templates The compiled transformation instructions.

@return An XMLFilter object, or null if this feature is not supported.

@throws TransformerConfigurationException If for some reason the
TemplatesHandler cannot be created."
      end
    end

    class 307995 "TransformerHandler"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A TransformerHandler
listens for SAX ContentHandler parse events and transforms
them to a Result."
      classrelation 547611 // <generalisation>
	relation 547611 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 547611 // <generalisation>
	  b parent class_ref 307483 // ContentHandler
      end

      classrelation 547739 // <generalisation>
	relation 547739 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 547739 // <generalisation>
	  b parent class_ref 307611 // LexicalHandler
      end

      classrelation 547867 // <generalisation>
	relation 547867 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 547867 // <generalisation>
	  b parent class_ref 308635 // DTDHandler
      end

      operation 1934619 "setResult"
	public explicit_return_type "void"
	nparams 1
	  param inout name "result" type class_ref 305819 // Result
	nexceptions 1
	  exception class_ref 128283 // IllegalArgumentException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Set  the <code>Result</code> associated with this
<code>TransformerHandler</code> to be used for the transformation.</p>

@param result A <code>Result</code> instance, should not be
  <code>null</code>.

@throws IllegalArgumentException if result is invalid for some reason."
      end

      operation 1934747 "setSystemId"
	public explicit_return_type "void"
	nparams 1
	  param inout name "systemID" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the base ID (URI or system ID) from where relative
URLs will be resolved.
@param systemID Base URI for the source tree."
      end

      operation 1934875 "getSystemId"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the base ID (URI or system ID) from where relative
URLs will be resolved.
@return The systemID that was set with {@link #setSystemId}."
      end

      operation 1935003 "getTransformer"
	public return_type class_ref 306331 // Transformer
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>Get the <code>Transformer</code> associated with this handler, which
is needed in order to set parameters and output properties.</p>

@return <code>Transformer</code> associated with this
  <code>TransformerHandler</code>."
      end
    end

    class 308123 "TemplatesHandler"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A SAX ContentHandler that may be used to process SAX
parse events (parsing transformation instructions) into a Templates object.

<p>Note that TemplatesHandler does not need to implement LexicalHandler.</p>"
      classrelation 547483 // <generalisation>
	relation 547483 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 547483 // <generalisation>
	  b parent class_ref 307483 // ContentHandler
      end

      operation 1933083 "getTemplates"
	public return_type class_ref 306203 // Templates
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "When a TemplatesHandler object is used as a ContentHandler
for the parsing of transformation instructions, it creates a Templates object,
which the caller can get once the SAX events have been completed.

@return The Templates object that was created during
the SAX event process, or null if no Templates object has
been created.
"
      end

      operation 1933211 "setSystemId"
	public explicit_return_type "void"
	nparams 1
	  param inout name "systemID" type class_ref 3399692 // String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the base ID (URI or system ID) for the Templates object
created by this builder.  This must be set in order to
resolve relative URIs in the stylesheet.  This must be
called before the startDocument event.

@param systemID Base URI for this stylesheet."
      end

      operation 1933339 "getSystemId"
	public return_type class_ref 3399692 // String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the base ID (URI or system ID) from where relative
URLs will be resolved.
@return The systemID that was set with {@link #setSystemId}."
      end
    end
  end

  deploymentview 134555 "sax"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 261147 "SAXResult"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import javax.xml.transform.Result;
import org.xml.sax.ContentHandler;
import org.xml.sax.ext.LexicalHandler;
${definition}"
      associated_classes
	class_ref 307355 // SAXResult
      end
      comment "Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

 $Id: SAXResult.java 446598 2006-09-15 12:55:40Z jeremias $"
    end

    artifact 261275 "SAXSource"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import javax.xml.transform.Source;
import javax.xml.transform.stream.StreamSource;
import org.xml.sax.InputSource;
import org.xml.sax.XMLReader;
${definition}"
      associated_classes
	class_ref 307739 // SAXSource
      end
      comment "Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

 $Id: SAXSource.java 446598 2006-09-15 12:55:40Z jeremias $"
    end

    artifact 261403 "SAXTransformerFactory"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import javax.xml.transform.Source;
import javax.xml.transform.Templates;
import javax.xml.transform.TransformerConfigurationException;
import javax.xml.transform.TransformerFactory;
import org.xml.sax.XMLFilter;
${definition}"
      associated_classes
	class_ref 307867 // SAXTransformerFactory
      end
      comment "Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

 $Id: SAXTransformerFactory.java 446598 2006-09-15 12:55:40Z jeremias $"
    end

    artifact 261659 "TemplatesHandler"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import javax.xml.transform.Templates;
import org.xml.sax.ContentHandler;
${definition}"
      associated_classes
	class_ref 308123 // TemplatesHandler
      end
      comment "Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

 $Id: TemplatesHandler.java 446598 2006-09-15 12:55:40Z jeremias $"
    end

    artifact 262043 "TransformerHandler"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import javax.xml.transform.Result;
import javax.xml.transform.Transformer;
import org.xml.sax.ContentHandler;
import org.xml.sax.DTDHandler;
import org.xml.sax.ext.LexicalHandler;
${definition}"
      associated_classes
	class_ref 307995 // TransformerHandler
      end
      comment "Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the \"License\"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

 $Id: TransformerHandler.java 446598 2006-09-15 12:55:40Z jeremias $"
    end
  end
end
