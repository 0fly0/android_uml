class CECBroadcastHandler
!!!12108044.java!!!	onReceive(inout context : Context, inout intent : Intent) : void
        // TODO Auto-generated method stub
        if (mActivityMgr == null) {
            mActivityMgr = (ActivityManager)context.getSystemService(Activity.ACTIVITY_SERVICE);
        }

        if (null == intent) {
            Log.e(TAG, "receive a broadcast with null intent");
            return;
        } else {
            Log.d(TAG, "receive a broadcast(intent " + intent + ")");
        }

        if (intent.getAction().equals(HdmiCecUtils.ACTION_HDMI_CEC_ACTIVE_SOURCE)) {
            List<RunningTaskInfo> list = mActivityMgr.getRunningTasks(2);
            if (isTVPlayerForeground(context)) {
                Log.d(TAG, "LiveTV foreground, so bring last task to frontend");
                if (list.size() > 1) {
                    mActivityMgr.moveTaskToFront(list.get(1).id, 0);
                } else {
                    launchHome(context);
                }
            } else {
                mActivityMgr.moveTaskToFront(list.get(0).id, 0);
            }
        } else if (intent.getAction().equals(HdmiCecUtils.ACTION_SET_STREAM_PATH)) {
            if (isTVPlayerForeground(context)) {
                // TODO: check the target source to switch when has multiple inputs
                Log.d(TAG, "livetv already frontend, return directly ");
                return;
            }
            int port = intent.getIntExtra(HdmiCecUtils.EXTRA_HDMI_PORT, INVALID_HDMI_PORT);
            Log.d(TAG, "Set stream path, target port = " + port);
            String launchTVPlayerAction =
                context.getResources().getString(R.string.action_launch_tvplayer);
            Intent launchTVPlayerIntent = new Intent(launchTVPlayerAction);
            launchTVPlayerIntent.addCategory(Intent.CATEGORY_DEFAULT);
            launchTVPlayerIntent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK
                                          | Intent.FLAG_ACTIVITY_RESET_TASK_IF_NEEDED);
            launchTVPlayerIntent.putExtra(HdmiCecUtils.EXTRA_HDMI_PORT, port);
            if (INVALID_HDMI_PORT != port) {
                launchActivity(context, launchTVPlayerIntent);
            }
        } else if (intent.getAction().equals(HdmiCecUtils.ACTION_REQUEST_MENU_ON)) {
            Intent launchSettingsIntent = new Intent(HdmiCecUtils.ACTION_LAUNCH_SYSTEM_SETTINGS);
            launchSettingsIntent.addCategory(Intent.CATEGORY_DEFAULT);
            launchActivity(context, launchSettingsIntent);
        } else if (intent.getAction().equals(HdmiCecUtils.ACTION_REQUEST_MENU_OFF)) {
            launchHome(context);
        }
!!!12108172.java!!!	launchActivity(inout context : Context, inout intent : Intent) : void
        Log.d(TAG, "launchActivity with intent " + intent);
        if (context == null || intent == null) {
            return;
        }
        try {
            context.startActivity(intent);
        } catch(ActivityNotFoundException exception) {
            Log.e(TAG, "Activity with intent("
                    + intent
                    + " not found!");
        }

!!!12108300.java!!!	launchHome(inout context : Context) : void
        Intent launchHomeIntent = new Intent(Intent.ACTION_MAIN);
        launchHomeIntent.addCategory(Intent.CATEGORY_HOME);
        launchHomeIntent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK
                                  | Intent.FLAG_ACTIVITY_RESET_TASK_IF_NEEDED);
        launchActivity(context, launchHomeIntent);
!!!12108428.java!!!	isForegroundApp(in pkgName : String, in clsName : String) : boolean
        if (pkgName == null || clsName == null || mActivityMgr == null) {
            return false;
        }
        Log.d(TAG, "isForegroundApp() pkg:" + pkgName);
        Log.d(TAG, "isForegroundApp() clsName:" + clsName);

        List<RunningTaskInfo> tasks = mActivityMgr.getRunningTasks(1);
        if (tasks.size() == 0) {
            return false;
        }

        boolean isForeground = pkgName.equals(tasks.get(0).baseActivity.getPackageName())
            && clsName.equals(tasks.get(0).baseActivity.getClassName());

        Log.d(TAG, "Current foreground app:" + tasks.get(0).baseActivity);
        Log.d(TAG, "isForeground:" + isForeground);
        return isForeground;
!!!12108556.java!!!	isTVPlayerForeground(inout context : Context) : boolean
        if (TVPlayer_PKG == null) {
            TVPlayer_PKG = context.getResources().getString(R.string.tvplayer_pkg);
        }
        if (TVPlayer_CLS == null) {
            TVPlayer_CLS = context.getResources().getString(R.string.tvplayer_cls);
        }

        if (DEBUG) {
            Log.d(TAG, "TVPlayer_PKG:" + TVPlayer_PKG);
            Log.d(TAG, "TVPlayer_CLS:" + TVPlayer_CLS);
        }
        return isForegroundApp(TVPlayer_PKG, TVPlayer_CLS);
