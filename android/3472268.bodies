class DexIndexPrinter
!!!15049868.java!!!	DexIndexPrinter(inout file : File)
        this.dexBuffer = new DexBuffer(file);
        this.tableOfContents = dexBuffer.getTableOfContents();
!!!15049996.java!!!	printMap() : void
        for (TableOfContents.Section section : tableOfContents.sections) {
            if (section.off != -1) {
                System.out.println("section " + Integer.toHexString(section.type)
                        + " off=" + Integer.toHexString(section.off)
                        + " size=" + Integer.toHexString(section.size)
                        + " byteCount=" + Integer.toHexString(section.byteCount));
            }
        }
!!!15050124.java!!!	printStrings() : void
        int index = 0;
        for (String string : dexBuffer.strings()) {
            System.out.println("string " + index + ": " + string);
            index++;
        }
!!!15050252.java!!!	printTypeIds() : void
        int index = 0;
        for (Integer type : dexBuffer.typeIds()) {
            System.out.println("type " + index + ": " + dexBuffer.strings().get(type));
            index++;
        }
!!!15050380.java!!!	printProtoIds() : void
        int index = 0;
        for (ProtoId protoId : dexBuffer.protoIds()) {
            System.out.println("proto " + index + ": " + protoId);
            index++;
        }
!!!15050508.java!!!	printFieldIds() : void
        int index = 0;
        for (FieldId fieldId : dexBuffer.fieldIds()) {
            System.out.println("field " + index + ": " + fieldId);
            index++;
        }
!!!15050636.java!!!	printMethodIds() : void
        int index = 0;
        for (MethodId methodId : dexBuffer.methodIds()) {
            System.out.println("methodId " + index + ": " + methodId);
            index++;
        }
!!!15050764.java!!!	printTypeLists() : void
        if (tableOfContents.typeLists.off == -1) {
            System.out.println("No type lists");
            return;
        }
        DexBuffer.Section in = dexBuffer.open(tableOfContents.typeLists.off);
        for (int i = 0; i < tableOfContents.typeLists.size; i++) {
            int size = in.readInt();
            System.out.print("Type list i=" + i + ", size=" + size + ", elements=");
            for (int t = 0; t < size; t++) {
                System.out.print(" " + dexBuffer.typeNames().get((int) in.readShort()));
            }
            if (size % 2 == 1) {
                in.readShort(); // retain alignment
            }
            System.out.println();
        }
!!!15050892.java!!!	printClassDefs() : void
        int index = 0;
        for (ClassDef classDef : dexBuffer.classDefs()) {
            System.out.println("class def " + index + ": " + classDef);
            index++;
        }
!!!15051020.java!!!	main(inout args : String) : void
        DexIndexPrinter indexPrinter = new DexIndexPrinter(new File(args[0]));
        indexPrinter.printMap();
        indexPrinter.printStrings();
        indexPrinter.printTypeIds();
        indexPrinter.printProtoIds();
        indexPrinter.printFieldIds();
        indexPrinter.printMethodIds();
        indexPrinter.printTypeLists();
        indexPrinter.printClassDefs();
