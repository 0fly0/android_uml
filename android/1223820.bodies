class MediaProperties
!!!6909324.java!!!	getAllSupportedAspectRatios() : int
        return ASPECT_RATIOS;
!!!6909452.java!!!	getSupportedResolutions(in aspectRatio : int) : Pair
        final Pair<Integer, Integer>[] resolutions;
        switch (aspectRatio) {
            case ASPECT_RATIO_3_2: {
                resolutions = ASPECT_RATIO_3_2_RESOLUTIONS;
                break;
            }

            case ASPECT_RATIO_4_3: {
                resolutions = ASPECT_RATIO_4_3_RESOLUTIONS;
                break;
            }

            case ASPECT_RATIO_5_3: {
                resolutions = ASPECT_RATIO_5_3_RESOLUTIONS;
                break;
            }

            case ASPECT_RATIO_11_9: {
                resolutions = ASPECT_RATIO_11_9_RESOLUTIONS;
                break;
            }

            case ASPECT_RATIO_16_9: {
                resolutions = ASPECT_RATIO_16_9_RESOLUTIONS;
                break;
            }

            default: {
                throw new IllegalArgumentException("Unknown aspect ratio: " + aspectRatio);
            }
        }

        /** Check the platform specific maximum export resolution */
        VideoEditorProfile veProfile = VideoEditorProfile.get();
        if (veProfile == null) {
            throw new RuntimeException("Can't get the video editor profile");
        }
        final int maxWidth = veProfile.maxOutputVideoFrameWidth;
        final int maxHeight = veProfile.maxOutputVideoFrameHeight;
        Pair<Integer, Integer>[] tmpResolutions = new Pair[resolutions.length];
        int numSupportedResolution = 0;
        int i = 0;

        /** Get supported resolution list */
        for (i = 0; i < resolutions.length; i++) {
            if ((resolutions[i].first <= maxWidth) &&
                (resolutions[i].second <= maxHeight)) {
                tmpResolutions[numSupportedResolution] = resolutions[i];
                numSupportedResolution++;
            }
        }
        final Pair<Integer, Integer>[] supportedResolutions =
            new Pair[numSupportedResolution];
        System.arraycopy(tmpResolutions, 0,
            supportedResolutions, 0, numSupportedResolution);

        return supportedResolutions;
!!!6909580.java!!!	getSupportedVideoCodecs() : int
        return SUPPORTED_VCODECS;
!!!6909708.java!!!	getSupportedAudioCodecs() : int
        return SUPPORTED_ACODECS;
!!!6909836.java!!!	getSupportedVideoFileFormat() : int
        return SUPPORTED_VIDEO_FILE_FORMATS;
!!!6909964.java!!!	getSupportedVideoBitrates() : int
        return SUPPORTED_BITRATES;
!!!6910092.java!!!	getSupportedMaxVolume() : int
        return MediaProperties.AUDIO_MAX_VOLUME_PERCENT;
!!!6910220.java!!!	getSupportedAudioTrackCount() : int
        return MediaProperties.AUDIO_MAX_TRACK_COUNT;
