class FilterPort
!!!6972556.java!!!	FilterPort(inout filter : Filter, in name : String)
        mName = name;
        mFilter = filter;
        mLogVerbose = Log.isLoggable(TAG, Log.VERBOSE);
!!!6972684.java!!!	isAttached() : boolean
        return mFilter != null;
!!!6972812.java!!!	getPortFormat() : FrameFormat
        return mPortFormat;
!!!6972940.java!!!	setPortFormat(inout format : FrameFormat) : void
        mPortFormat = format;
!!!6973068.java!!!	getFilter() : Filter
        return mFilter;
!!!6973196.java!!!	getName() : String
        return mName;
!!!6973324.java!!!	setBlocking(inout blocking : boolean) : void
        mIsBlocking = blocking;
!!!6973452.java!!!	setChecksType(inout checksType : boolean) : void
        mChecksType = checksType;
!!!6973580.java!!!	open() : void
        if (!mIsOpen) {
            if (mLogVerbose) Log.v(TAG, "Opening " + this);
        }
        mIsOpen = true;
!!!6973708.java!!!	close() : void
        if (mIsOpen) {
            if (mLogVerbose) Log.v(TAG, "Closing " + this);
        }
        mIsOpen = false;
!!!6973836.java!!!	isOpen() : boolean
        return mIsOpen;
!!!6973964.java!!!	isBlocking() : boolean
        return mIsBlocking;
!!!6974988.java!!!	toString() : String
        return "port '" + mName + "' of " + mFilter;
!!!6975116.java!!!	assertPortIsOpen() : void
        if (!isOpen()) {
            throw new RuntimeException("Illegal operation on closed " + this + "!");
        }
!!!6975244.java!!!	checkFrameType(inout frame : Frame, inout forceCheck : boolean) : void
        if ((mChecksType || forceCheck)
            && mPortFormat != null
            && !frame.getFormat().isCompatibleWith(mPortFormat)) {
            throw new RuntimeException("Frame passed to " + this + " is of incorrect type! "
                + "Expected " + mPortFormat + " but got " + frame.getFormat());
        }
!!!6975372.java!!!	checkFrameManager(inout frame : Frame, inout context : FilterContext) : void
        if (frame.getFrameManager() != null
            && frame.getFrameManager() != context.getFrameManager()) {
            throw new RuntimeException("Frame " + frame + " is managed by foreign FrameManager! ");
        }
