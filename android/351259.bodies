class AlertProtocol
!!!2334619.java!!!	setRecordProtocol(inout recordProtocol : SSLRecordProtocol) : void
        this.recordProtocol = recordProtocol;
!!!2334747.java!!!	alert(in level : byte, in description : byte) : void
        if (logger != null) {
            logger.println("Alert.alert: "+level+" "+description);
        }
        this.alert[0] = level;
        this.alert[1] = description;
!!!2334875.java!!!	getDescriptionCode() : byte
        return (alert[0] != 0) ? alert[1] : -100;
!!!2335003.java!!!	setProcessed() : void
        // free the info about alert
        if (logger != null) {
            logger.println("Alert.setProcessed");
        }
        this.alert[0] = 0;
!!!2335131.java!!!	hasAlert() : boolean
        return (alert[0] != 0);
!!!2335259.java!!!	isFatalAlert() : boolean
        return (alert[0] == 2);
!!!2335387.java!!!	getAlertDescription() : String
        switch (alert[1]) {
        case CLOSE_NOTIFY:
            return "close_notify";
        case UNEXPECTED_MESSAGE:
            return "unexpected_message";
        case BAD_RECORD_MAC:
            return "bad_record_mac";
        case DECRYPTION_FAILED:
            return "decryption_failed";
        case RECORD_OVERFLOW:
            return "record_overflow";
        case DECOMPRESSION_FAILURE:
            return "decompression_failure";
        case HANDSHAKE_FAILURE:
            return "handshake_failure";
        case BAD_CERTIFICATE:
            return "bad_certificate";
        case UNSUPPORTED_CERTIFICATE:
            return "unsupported_certificate";
        case CERTIFICATE_REVOKED:
            return "certificate_revoked";
        case CERTIFICATE_EXPIRED:
            return "certificate_expired";
        case CERTIFICATE_UNKNOWN:
            return "certificate_unknown";
        case ILLEGAL_PARAMETER:
            return "illegal_parameter";
        case UNKNOWN_CA:
            return "unknown_ca";
        case ACCESS_DENIED:
            return "access_denied";
        case DECODE_ERROR:
            return "decode_error";
        case DECRYPT_ERROR:
            return "decrypt_error";
        case EXPORT_RESTRICTION:
            return "export_restriction";
        case PROTOCOL_VERSION:
            return "protocol_version";
        case INSUFFICIENT_SECURITY:
            return "insufficient_security";
        case INTERNAL_ERROR:
            return "internal_error";
        case USER_CANCELED:
            return "user_canceled";
        case NO_RENEGOTIATION:
            return "no_renegotiation";
        }
        return null;
!!!2335515.java!!!	wrap() : byte
        byte[] res = recordProtocol.wrap(ContentType.ALERT, alert, 0, 2);
        return res;
!!!2335643.java!!!	shutdown() : void
        alert[0] = 0;
        alert[1] = 0;
        recordProtocol = null;
