class DeqIterator
!!!1178395.java!!!	hasNext() : boolean
            return cursor != fence;
!!!1178523.java!!!	next() : E
            if (cursor == fence)
                throw new NoSuchElementException();
            @SuppressWarnings("unchecked") E result = (E) elements[cursor];
            // This check doesn't catch all possible comodifications,
            // but does catch the ones that corrupt traversal
            if (tail != fence || result == null)
                throw new ConcurrentModificationException();
            lastRet = cursor;
            cursor = (cursor + 1) & (elements.length - 1);
            return result;
!!!1178651.java!!!	remove() : void
            if (lastRet < 0)
                throw new IllegalStateException();
            if (delete(lastRet)) { // if left-shifted, undo increment in next()
                cursor = (cursor - 1) & (elements.length - 1);
                fence = tail;
            }
            lastRet = -1;
