class StrippedModeController
!!!13477516.java!!!	StrippedModeController(inout context : Context, inout view : View)
        mContext = context;
        mView = view;
        setupStrippedModeActions();
        setStrippedModeMessage();
!!!13477644.java!!!	destroy() : void
        mView = null;
        mContext = null;
        mListener = null;
!!!13477772.java!!!	setListener(inout listener : Listener) : void
        mListener = listener;
!!!13477900.java!!!	getLaunchVideoIntent(inout context : Context) : Intent
        return getUriIntentFromResource(context,
                R.string.stripped_mode_video_uri);
!!!13478028.java!!!	getUriIntentFromResource(inout context : Context, in resourceId : int) : Intent
        Uri uri;
        try {
            uri = Uri.parse(context.getString(resourceId));
        } catch (NullPointerException e) {
            uri = null;
        }
        if (uri != null) {
            return new Intent(Intent.ACTION_VIEW, uri);
        }
        return null;
!!!13478156.java!!!	setupStrippedModeActions() : void
        GridView gridView = (GridView) mView.findViewById(R.id.action_grid);
        final ArrayAdapter<Action> adapter = new ArrayAdapter<Action>(mContext,
                R.layout.stripped_mode_item, R.id.title) {
            @Override
            public View getView(int position, View convertView,
                    ViewGroup parent) {
                View view = super.getView(position, convertView,
                        parent);
                TextView name = (TextView) view.findViewById(R.id.title);
                ImageView image = (ImageView) view.findViewById(R.id.icon);
                Action action = getItem(position);
                name.setText(mContext.getString(action.mStringId));
                name.setGravity(Gravity.CENTER_HORIZONTAL);
                image.setImageResource(action.getDrawableId());
                image.setScaleType(ScaleType.CENTER);
                return view;
            }
        };
        loadActions(adapter);
        gridView.setNumColumns(adapter.getCount());
        gridView.setAdapter(adapter);
        gridView.setOnItemClickListener(new OnItemClickListener() {
            public void onItemClick(AdapterView<?> parent, View view,
                    int position, long id) {
                Action action = adapter.getItem(position);
                Intent intent = null;
                if (action == Action.VIDEO) {
                    intent = getLaunchVideoIntent(mContext);
                } else if (action == Action.SETTINGS) {
                    intent = new Intent(Settings.ACTION_SETTINGS);
                } else if (action == Action.SETUP) {
                    intent = new Intent(TvIntent.ACTION_SETUP);
                } else if (action == Action.DEMO) {
                    intent = getUriIntentFromResource(mContext,
                            R.string.stripped_mode_demo_uri);
                } else if (action == Action.HELP) {
                    intent = getUriIntentFromResource(mContext,
                            R.string.stripped_mode_help_uri);
                }
                if (mListener != null) {
                    mListener.onIntentStartRequested(intent);
                }
            }
        });
!!!13478284.java!!!	loadActions(inout adapter : ArrayAdapter) : void
        adapter.add(Action.VIDEO);
        adapter.add(Action.SETUP);
        adapter.add(Action.SETTINGS);
        adapter.add(isRetailMode() ? Action.DEMO : Action.HELP);
!!!13478412.java!!!	isRetailMode() : boolean
        return SystemProperties.getBoolean(PROPERTY_RETAIL_MODE_KEY, false);
!!!13478540.java!!!	setStrippedModeMessage() : void
        TextView message = (TextView) mView.findViewById(R.id.message);
        int strippedMode = Settings.Secure.getInt(mContext.getContentResolver(),
                TvSettings.Secure.STRIPPED_MODE_ENABLED, 0);
        if ((strippedMode & TvSettings.Secure.USER_STRIPPED_MODE)
                == TvSettings.Secure.USER_STRIPPED_MODE) {
            message.setText(R.string.stripped_mode_message);
        } else {
            // User is only in this mode because of the property key, so they only need
            // to update to get out, not run through setup again.
            message.setText(R.string.stripped_mode_message_forced);
        }
