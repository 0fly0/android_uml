format 74
"libcameraservice" // framework::av::services::camera::libcameraservice
  revision 1
  modified_by 12 "shchen"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  cpp_h_dir "/home/shchen/work/jellybean/framework/av/services/camera/libcameraservice/"
  cpp_src_dir "/home/shchen/work/jellybean/framework/av/services/camera/libcameraservice/"
  cpp_namespace "android"
  classview 144396 "libcameraservice"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 391692 "Camera2Client"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * Implements the android.hardware.camera API on top of
 * camera device HAL version 2."
      classrelation 842380 // <generalisation>
	relation 842380 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 842380 // <generalisation>
	  b parent class_ref 391948 // Client
      end

      classrelation 842508 // <generalisation>
	relation 842508 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 842508 // <generalisation>
	  b parent class_ref 392204 // NotificationListener
      end

      operation 879372 "disconnect"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "// ICamera interface

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * ICamera interface (see ICamera for details)"
      end

      operation 879500 "connect"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 128268 // status_t
	nparams 1
	  param in name "client" explicit_type "sp<ICameraClient>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 879628 "lock"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 128268 // status_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 879756 "unlock"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 128268 // status_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 879884 "setPreviewDisplay"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 128268 // status_t
	nparams 1
	  param in name "surface" explicit_type "sp<Surface>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 880012 "setPreviewTexture"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 128268 // status_t
	nparams 1
	  param in name "surfaceTexture" explicit_type "sp<ISurfaceTexture>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 880140 "setPreviewCallbackFlag"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "flag" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 880268 "startPreview"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 128268 // status_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 880396 "stopPreview"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 880524 "previewEnabled"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 880652 "storeMetaDataInBuffers"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 128268 // status_t
	nparams 1
	  param in name "enabled" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 880780 "startRecording"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 128268 // status_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 880908 "stopRecording"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 881036 "recordingEnabled"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 881164 "releaseRecordingFrame"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "mem" explicit_type "sp<IMemory>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 881292 "autoFocus"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 128268 // status_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 881420 "cancelAutoFocus"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 128268 // status_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 881548 "takePicture"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 128268 // status_t
	nparams 1
	  param in name "msgType" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 881676 "setParameters"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 128268 // status_t
	nparams 1
	  param in name "params" type class_ref 131340 // String8
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 881804 "getParameters"
	preserve_cpp_body_indent const cpp_virtual public return_type class_ref 131340 // String8
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 881932 "sendCommand"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 128268 // status_t
	nparams 3
	  param in name "cmd" explicit_type "int32_t"
	  param in name "arg1" explicit_type "int32_t"
	  param in name "arg2" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 882060 "Camera2Client"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 6
	  param in name "cameraService" explicit_type "sp<CameraService>"
	  param in name "cameraClient" explicit_type "sp<ICameraClient>"
	  param in name "cameraId" explicit_type "int"
	  param in name "cameraFacing" explicit_type "int"
	  param in name "clientPid" explicit_type "int"
	  param in name "servicePid" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} ${p5}${v5}${)}${volatile}${throw};
"
	cpp_def "// Interface used by CameraService

${inline}${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}:
        Client(cameraService, cameraClient,
                cameraId, cameraFacing, clientPid, servicePid),
        mSharedCameraClient(cameraClient),
        mParameters(cameraId, cameraFacing)
${throw}{
  ${body}}
"
	
	
	
	
	comment "*
     * Interface used by CameraService"
      end

      operation 882188 "~Camera2Client"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 882316 "initialize"
	preserve_cpp_body_indent public return_type class_ref 128268 // status_t
	nparams 1
	  param inout name "module" explicit_type "camera_module_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 882444 "dump"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 128268 // status_t
	nparams 2
	  param in name "fd" explicit_type "int"
	  param in name "args" explicit_type "Vector<String16>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 882572 "notifyError"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 3
	  param in name "errorCode" explicit_type "int"
	  param in name "arg1" explicit_type "int"
	  param in name "arg2" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//* Device-related methods 

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Interface used by Camera2Device"
      end

      operation 882700 "notifyShutter"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 2
	  param in name "frameNumber" explicit_type "int"
	  param in name "timestamp" type class_ref 140172 // nsecs_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 882828 "notifyAutoFocus"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 2
	  param in name "newState" explicit_type "uint8_t"
	  param in name "triggerId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 882956 "notifyAutoExposure"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 2
	  param in name "newState" explicit_type "uint8_t"
	  param in name "triggerId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 883084 "notifyAutoWhitebalance"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 2
	  param in name "newState" explicit_type "uint8_t"
	  param in name "triggerId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 883212 "getCameraId"
	preserve_cpp_body_indent const public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Interface used by independent components of Camera2Client."
      end

      operation 883340 "getCameraDevice"
	preserve_cpp_body_indent public explicit_return_type "sp<Camera2Device>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}const ${type} & ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 883468 "getCameraService"
	preserve_cpp_body_indent public explicit_return_type "sp<CameraService>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}const ${type} & ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 883596 "getParameters"
	preserve_cpp_body_indent public explicit_return_type "camera2::SharedParameters"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} & ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 883724 "getPreviewStreamId"
	preserve_cpp_body_indent const public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 883852 "getCaptureStreamId"
	preserve_cpp_body_indent const public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 883980 "getCallbackStreamId"
	preserve_cpp_body_indent const public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 884108 "getRecordingStreamId"
	preserve_cpp_body_indent const public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 884236 "getZslStreamId"
	preserve_cpp_body_indent const public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 884364 "registerFrameListener"
	preserve_cpp_body_indent public return_type class_ref 128268 // status_t
	nparams 3
	  param in name "minId" explicit_type "int32_t"
	  param in name "maxId" explicit_type "int32_t"
	  param in name "listener" explicit_type "wp<camera2::FrameProcessor::FilteredListener>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 884492 "removeFrameListener"
	preserve_cpp_body_indent public return_type class_ref 128268 // status_t
	nparams 3
	  param in name "minId" explicit_type "int32_t"
	  param in name "maxId" explicit_type "int32_t"
	  param in name "listener" explicit_type "wp<camera2::FrameProcessor::FilteredListener>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 884620 "stopStream"
	preserve_cpp_body_indent public return_type class_ref 128268 // status_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      class 392332 "SharedCameraClient"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	class 392460 "Lock"
	  visibility package 
	  cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	  java_decl ""
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  
	  operation 884748 "Lock"
	    preserve_cpp_body_indent public explicit_return_type ""
	    nparams 1
	      param inout name "client" type class_ref 392332 // SharedCameraClient
	    cpp_decl "    ${comment}${inline}${name}${(}${t0} & ${p0}${v0}${)}${volatile}${throw};
"
	    cpp_def "${comment}${inline}${class}::${name}${(}${t0} & ${p0}${)}:
        mCameraClient(client.mCameraClient),
        mSharedClient(client) ${throw}{
  ${body}}
"
	    
	    
	    
	    
	  end

	  operation 884876 "~Lock"
	    preserve_cpp_body_indent public explicit_return_type ""
	    nparams 0
	    cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	    cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	    
	    
	    
	    
	  end

	  attribute 860940 "mCameraClient"
	    public explicit_type "ICameraClient"
	    stereotype "sp"
	    cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> & ${name}${value};
"
	    java_decl ""
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	  end

	  classrelation 842636 // mSharedClient (<unidirectional association>)
	    relation 842636 --->
	      a role_name "mSharedClient" private
		cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} & ${name}${value};
"
		classrelation_ref 842636 // mSharedClient (<unidirectional association>)
	      b parent class_ref 392332 // SharedCameraClient
	  end
	end

	operation 885004 "SharedCameraClient"
	  preserve_cpp_body_indent public explicit_return_type ""
	  nparams 1
	    param in name "client" explicit_type "sp<ICameraClient>"
	  cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}const ${t0} & ${p0}${)}:
        mCameraClient(client) ${throw}{
  ${body}}
"
	  
	  
	  
	  
	end

	operation 885132 "operator ="
	  preserve_cpp_body_indent public return_type class_ref 392332 // SharedCameraClient
	  nparams 1
	    param in name "client" explicit_type "sp<ICameraClient>"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} & ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  
	  
	  
	  
	end

	operation 885260 "clear"
	  preserve_cpp_body_indent public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  
	  
	  
	  
	end

	classrelation 842764 // mCameraClient (<directional composition>)
	  relation 842764 *-->
	    stereotype "sp"
	    a role_name "mCameraClient" private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	      classrelation_ref 842764 // mCameraClient (<directional composition>)
	    b parent class_ref 141708 // ICameraClient
	end

	classrelation 842892 // mCameraClientLock (<directional composition>)
	  relation 842892 *-->
	    a role_name "mCameraClientLock" private
	      cpp mutable default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	      classrelation_ref 842892 // mCameraClientLock (<directional composition>)
	    b parent class_ref 133132 // Mutex
	end
      end

      operation 885388 "calculateBufferSize"
	class_operation preserve_cpp_body_indent public explicit_return_type "size_t"
	nparams 4
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	  param in name "format" explicit_type "int"
	  param in name "stride" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      attribute 861068 "kPreviewRequestIdStart"
	class_attribute const_attribute public explicit_type "int32_t"
	init_value "=  10000000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 861196 "kPreviewRequestIdEnd"
	class_attribute const_attribute public explicit_type "int32_t"
	init_value "=  20000000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 861324 "kRecordingRequestIdStart"
	class_attribute const_attribute public explicit_type "int32_t"
	init_value "=  20000000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 861452 "kRecordingRequestIdEnd"
	class_attribute const_attribute public explicit_type "int32_t"
	init_value "=  30000000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 861580 "kCaptureRequestIdStart"
	class_attribute const_attribute public explicit_type "int32_t"
	init_value "=  30000000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 861708 "kCaptureRequestIdEnd"
	class_attribute const_attribute public explicit_type "int32_t"
	init_value "=  40000000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 843020 // mICameraLock (<directional composition>)
	relation 843020 *-->
	  a role_name "mICameraLock" private
	    cpp mutable default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 843020 // mICameraLock (<directional composition>)
	  b parent class_ref 133132 // Mutex
      end

      class 392588 "Parameters"
	visibility package stereotype "typedef" explicit_base_type "camera2::Parameters"
	cpp_decl "${comment}typedef ${type} ${name};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
      end

      class 392844 "CameraMetadata"
	visibility package stereotype "typedef" base_type class_ref 392716 // CameraMetadata
	cpp_decl "${comment}typedef ${type} ${name};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 843148 // <dependency>
	  relation 843148 -_->
	    a default
	      cpp default "#include in source"
	      classrelation_ref 843148 // <dependency>
	    b parent class_ref 392716 // CameraMetadata
	end
      end

      operation 885516 "setPreviewWindowL"
	preserve_cpp_body_indent private return_type class_ref 128268 // status_t
	nparams 2
	  param in name "binder" explicit_type "sp<IBinder>"
	  param in name "window" explicit_type "sp<ANativeWindow>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 885644 "startPreviewL"
	preserve_cpp_body_indent private return_type class_ref 128268 // status_t
	nparams 2
	  param inout name "params" type class_ref 392588 // Parameters
	  param in name "restart" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 885772 "stopPreviewL"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 885900 "startRecordingL"
	preserve_cpp_body_indent private return_type class_ref 128268 // status_t
	nparams 2
	  param inout name "params" type class_ref 392588 // Parameters
	  param in name "restart" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 886028 "recordingEnabledL"
	preserve_cpp_body_indent private explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 886156 "commandStartSmoothZoomL"
	preserve_cpp_body_indent private return_type class_ref 128268 // status_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " Individual commands for sendCommand()"
      end

      operation 886284 "commandStopSmoothZoomL"
	preserve_cpp_body_indent private return_type class_ref 128268 // status_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 886412 "commandSetDisplayOrientationL"
	preserve_cpp_body_indent private return_type class_ref 128268 // status_t
	nparams 1
	  param in name "degrees" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 886540 "commandEnableShutterSoundL"
	preserve_cpp_body_indent private return_type class_ref 128268 // status_t
	nparams 1
	  param in name "enable" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 886668 "commandPlayRecordingSoundL"
	preserve_cpp_body_indent private return_type class_ref 128268 // status_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 886796 "commandStartFaceDetectionL"
	preserve_cpp_body_indent private return_type class_ref 128268 // status_t
	nparams 1
	  param in name "type" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 886924 "commandStopFaceDetectionL"
	preserve_cpp_body_indent private return_type class_ref 128268 // status_t
	nparams 1
	  param inout name "params" type class_ref 392588 // Parameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 887052 "commandEnableFocusMoveMsgL"
	preserve_cpp_body_indent private return_type class_ref 128268 // status_t
	nparams 1
	  param in name "enable" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 887180 "commandPingL"
	preserve_cpp_body_indent private return_type class_ref 128268 // status_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 887308 "commandSetVideoBufferCountL"
	preserve_cpp_body_indent private return_type class_ref 128268 // status_t
	nparams 1
	  param in name "count" explicit_type "size_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      attribute 861836 "mParameters"
	private explicit_type "camera2::SharedParameters"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 887436 "setPreviewCallbackFlagL"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 2
	  param inout name "params" type class_ref 392588 // Parameters
	  param in name "flag" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "* Camera device-related private members "
      end

      operation 887564 "updateRequests"
	preserve_cpp_body_indent private return_type class_ref 128268 // status_t
	nparams 1
	  param inout name "params" type class_ref 392588 // Parameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//* Utility methods 

${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      attribute 861964 "NO_STREAM"
	class_attribute const_attribute private explicit_type "int"
	init_value "=  -1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 843276 // mFrameProcessor (<directional composition>)
	relation 843276 *-->
	  stereotype "sp"
	  a role_name "mFrameProcessor" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 843276 // mFrameProcessor (<directional composition>)
	  b parent class_ref 392972 // FrameProcessor
      end

      classrelation 843404 // mPreviewSurface (<directional composition>)
	relation 843404 *-->
	  stereotype "sp"
	  a role_name "mPreviewSurface" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 843404 // mPreviewSurface (<directional composition>)
	  b parent class_ref 134028 // IBinder
      end

      classrelation 843532 // mStreamingProcessor (<directional composition>)
	relation 843532 *-->
	  stereotype "sp"
	  a role_name "mStreamingProcessor" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 843532 // mStreamingProcessor (<directional composition>)
	  b parent class_ref 393100 // StreamingProcessor
      end

      classrelation 843660 // mCallbackProcessor (<directional composition>)
	relation 843660 *-->
	  stereotype "sp"
	  a role_name "mCallbackProcessor" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 843660 // mCallbackProcessor (<directional composition>)
	  b parent class_ref 393228 // CallbackProcessor
      end

      classrelation 843788 // mCaptureSequencer (<directional composition>)
	relation 843788 *-->
	  stereotype "sp"
	  a role_name "mCaptureSequencer" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 843788 // mCaptureSequencer (<directional composition>)
	  b parent class_ref 393356 // CaptureSequencer
      end

      classrelation 843916 // mJpegProcessor (<directional composition>)
	relation 843916 *-->
	  stereotype "sp"
	  a role_name "mJpegProcessor" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 843916 // mJpegProcessor (<directional composition>)
	  b parent class_ref 393484 // JpegProcessor
      end

      classrelation 844044 // mZslProcessor (<directional composition>)
	relation 844044 *-->
	  stereotype "sp"
	  a role_name "mZslProcessor" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 844044 // mZslProcessor (<directional composition>)
	  b parent class_ref 393612 // ZslProcessor
      end

      attribute 862092 "mAfInMotion"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 844172 // mDevice (<directional composition>)
	relation 844172 *-->
	  stereotype "sp"
	  a role_name "mDevice" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 844172 // mDevice (<directional composition>)
	  b parent class_ref 392076 // Camera2Device
      end

      operation 887692 "syncWithDevice"
	preserve_cpp_body_indent private return_type class_ref 128268 // status_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "* Utility members 
 Wait until the camera device has received the latest control settings"
      end

      operation 887820 "checkPid"
	preserve_cpp_body_indent const private return_type class_ref 128268 // status_t
	nparams 1
	  param in name "checkLocation" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " Verify that caller is the owner of the camera"
      end
    end

    class 391820 "CameraService"
      visibility package 
      nactuals 1
      actual class class_ref 379788 // BinderService
        rank 0 value class_ref 391820 // CameraService
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      class 391948 "Client"
	abstract visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 850316 // <generalisation>
	  relation 850316 ---|>
	    a public
	      cpp default "${type}"
	      classrelation_ref 850316 // <generalisation>
	    b parent class_ref 141580 // BnCamera
	end

	operation 913420 "disconnect"
	  preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "// NOTE: function is idempotent

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  
	  
	  
	  
	  comment " ICamera interface (see ICamera for details)"
	end

	operation 913548 "connect"
	  abstract cpp_virtual public return_type class_ref 128268 // status_t
	  nparams 1
	    param in name "client" explicit_type "sp<ICameraClient>"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	  
	  
	  
	  
	end

	operation 913676 "lock"
	  abstract cpp_virtual public return_type class_ref 128268 // status_t
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  
	  
	  
	  
	end

	operation 913804 "unlock"
	  abstract cpp_virtual public return_type class_ref 128268 // status_t
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  
	  
	  
	  
	end

	operation 913932 "setPreviewDisplay"
	  abstract cpp_virtual public return_type class_ref 128268 // status_t
	  nparams 1
	    param in name "surface" explicit_type "sp<Surface>"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	  
	  
	  
	  
	end

	operation 914060 "setPreviewTexture"
	  abstract cpp_virtual public return_type class_ref 128268 // status_t
	  nparams 1
	    param in name "surfaceTexture" explicit_type "sp<ISurfaceTexture>"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	  
	  
	  
	  
	end

	operation 914188 "setPreviewCallbackFlag"
	  abstract cpp_virtual public explicit_return_type "void"
	  nparams 1
	    param in name "flag" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	  
	  
	  
	  
	end

	operation 914316 "startPreview"
	  abstract cpp_virtual public return_type class_ref 128268 // status_t
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  
	  
	  
	  
	end

	operation 914444 "stopPreview"
	  abstract cpp_virtual public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  
	  
	  
	  
	end

	operation 914572 "previewEnabled"
	  abstract cpp_virtual public explicit_return_type "bool"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  
	  
	  
	  
	end

	operation 914700 "storeMetaDataInBuffers"
	  abstract cpp_virtual public return_type class_ref 128268 // status_t
	  nparams 1
	    param in name "enabled" explicit_type "bool"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	  
	  
	  
	  
	end

	operation 914828 "startRecording"
	  abstract cpp_virtual public return_type class_ref 128268 // status_t
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  
	  
	  
	  
	end

	operation 914956 "stopRecording"
	  abstract cpp_virtual public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  
	  
	  
	  
	end

	operation 915084 "recordingEnabled"
	  abstract cpp_virtual public explicit_return_type "bool"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  
	  
	  
	  
	end

	operation 915212 "releaseRecordingFrame"
	  abstract cpp_virtual public explicit_return_type "void"
	  nparams 1
	    param in name "mem" explicit_type "sp<IMemory>"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	  
	  
	  
	  
	end

	operation 915340 "autoFocus"
	  abstract cpp_virtual public return_type class_ref 128268 // status_t
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  
	  
	  
	  
	end

	operation 915468 "cancelAutoFocus"
	  abstract cpp_virtual public return_type class_ref 128268 // status_t
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  
	  
	  
	  
	end

	operation 915596 "takePicture"
	  abstract cpp_virtual public return_type class_ref 128268 // status_t
	  nparams 1
	    param in name "msgType" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	  
	  
	  
	  
	end

	operation 915724 "setParameters"
	  abstract cpp_virtual public return_type class_ref 128268 // status_t
	  nparams 1
	    param in name "params" type class_ref 131340 // String8
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	  
	  
	  
	  
	end

	operation 915852 "getParameters"
	  abstract const cpp_virtual public return_type class_ref 131340 // String8
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  
	  
	  
	  
	end

	operation 915980 "sendCommand"
	  abstract cpp_virtual public return_type class_ref 128268 // status_t
	  nparams 3
	    param in name "cmd" explicit_type "int32_t"
	    param in name "arg1" explicit_type "int32_t"
	    param in name "arg2" explicit_type "int32_t"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	  
	  
	  
	  
	end

	operation 916108 "Client"
	  preserve_cpp_body_indent public explicit_return_type ""
	  nparams 6
	    param in name "cameraService" explicit_type "sp<CameraService>"
	    param in name "cameraClient" explicit_type "sp<ICameraClient>"
	    param in name "cameraId" explicit_type "int"
	    param in name "cameraFacing" explicit_type "int"
	    param in name "clientPid" explicit_type "int"
	    param in name "servicePid" explicit_type "int"
	  cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} ${p5}${v5}${)}${volatile}${throw};
"
	  cpp_def "// ----------------------------------------------------------------------------

${inline}${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throw}{
  ${body}}
"
	  
	  
	  
	  
	  comment " Interface used by CameraService"
	end

	operation 916236 "~Client"
	  preserve_cpp_body_indent public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "// tear down the client

${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	  
	  
	  
	  
	end

	operation 916364 "getCameraClient"
	  cpp_inline public explicit_return_type "sp<ICameraClient>"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract} {
            return mCameraClient;
        };
"
	  
	  
	  
	  
	  comment " return our camera client"
	end

	operation 916492 "initialize"
	  abstract cpp_virtual public return_type class_ref 128268 // status_t
	  nparams 1
	    param inout name "module" explicit_type "camera_module_t"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	  
	  
	  
	  
	end

	operation 916620 "dump"
	  abstract cpp_virtual public return_type class_ref 128268 // status_t
	  nparams 2
	    param in name "fd" explicit_type "int"
	    param in name "args" explicit_type "Vector<String16>"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	  
	  
	  
	  
	end

	operation 916748 "getClientLockFromCookie"
	  class_operation preserve_cpp_body_indent protected return_type class_ref 133132 // Mutex
	  nparams 1
	    param inout name "user" explicit_type "void"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "// ----------------------------------------------------------------------------

${inline}${type} * ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  
	  
	  
	  
	end

	operation 916876 "getClientFromCookie"
	  class_operation preserve_cpp_body_indent protected return_type class_ref 391948 // Client
	  nparams 1
	    param inout name "user" explicit_type "void"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "// Provide client pointer for callbacks. Client lock returned from getClientLockFromCookie should
// be acquired for this to be safe

${inline}${type} * ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  
	  
	  
	  
	  comment " convert client from cookie. Client lock should be acquired before getting Client."
	end

	attribute 869004 "mDestructionStarted"
	  protected explicit_type "bool"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 850444 // mCameraService (<directional composition>)
	  relation 850444 *-->
	    stereotype "sp"
	    a role_name "mCameraService" protected
	      comment " immutable after constructor"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	      classrelation_ref 850444 // mCameraService (<directional composition>)
	    b parent class_ref 391820 // CameraService
	end

	classrelation 850572 // mCameraClient (<directional composition>)
	  relation 850572 *-->
	    stereotype "sp"
	    a role_name "mCameraClient" protected
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	      classrelation_ref 850572 // mCameraClient (<directional composition>)
	    b parent class_ref 141708 // ICameraClient
	end

	attribute 869132 "mCameraId"
	  protected explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " immutable after constructor"
	end

	attribute 869260 "mCameraFacing"
	  protected explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " immutable after constructor"
	end

	attribute 869388 "mClientPid"
	  protected explicit_type "pid_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 869516 "mServicePid"
	  protected explicit_type "pid_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " immutable after constructor"
	end
      end

      classrelation 849804 // <realization>
	relation 849804 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    classrelation_ref 849804 // <realization>
	  b parent class_ref 379788 // BinderService
      end

      classrelation 849932 // <generalisation>
	relation 849932 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 849932 // <generalisation>
	  b parent class_ref 142220 // BnCameraService
      end

      classrelation 850060 // <generalisation>
	relation 850060 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 850060 // <generalisation>
	  b parent class_ref 134156 // DeathRecipient
      end

      classrelation 850188 // <dependency>
	relation 850188 -_->
	  stereotype "friend"
	  a default
	    cpp default "Generated"
	    classrelation_ref 850188 // <dependency>
	  b parent class_ref 379788 // BinderService
      end

      extra_member 136844 "Client"
	
	stereotype "class"
	cpp "    class Client;
" ""
	java ""
	php ""
	python ""
	idl ""
      end

      operation 911372 "getServiceName"
	class_operation cpp_inline public explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} { return \"media.camera\"; };
"
	
	
	
	
      end

      operation 911500 "CameraService"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}
:mSoundRef(0), mModule(0)
${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 911628 "~CameraService"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 911756 "getNumberOfCameras"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "int32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 911884 "getCameraInfo"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 128268 // status_t
	nparams 2
	  param in name "cameraId" explicit_type "int"
	  param inout name "cameraInfo" type class_ref 139788 // CameraInfo
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 912012 "connect"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "sp<ICamera>"
	nparams 2
	  param in name "cameraClient" explicit_type "sp<ICameraClient>"
	  param in name "cameraId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 912140 "removeClient"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "cameraClient" explicit_type "sp<ICameraClient>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 912268 "getClientByIdUnsafe"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 391948 // Client
	nparams 1
	  param in name "cameraId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " returns plain pointer of client. Note that mClientLock should be acquired to
 prevent the client from destruction. The result can be NULL."
      end

      operation 912396 "getClientLockById"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 133132 // Mutex
	nparams 1
	  param in name "cameraId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 912524 "getClientByRemote"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "sp<Client>"
	nparams 1
	  param in name "cameraClient" explicit_type "wp<IBinder>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 912652 "dump"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 128268 // status_t
	nparams 2
	  param in name "fd" explicit_type "int"
	  param in name "args" explicit_type "Vector<String16>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 912780 "onTransact"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 128268 // status_t
	nparams 4
	  param in name "code" explicit_type "uint32_t"
	  param in name "data" type class_ref 135436 // Parcel
	  param inout name "reply" type class_ref 135436 // Parcel
	  param in name "flags" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} * ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, const ${t1} & ${p1}, ${t2} * ${p2}, ${t3} ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 912908 "onFirstRef"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      class 396812 "sound_kind"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum ${name} {
${items}
};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 868620 "SOUND_SHUTTER"
	  public type class_ref 396812 // sound_kind
	  init_value " 0"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 868748 "SOUND_RECORDING"
	  public type class_ref 396812 // sound_kind
	  init_value " 1"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 868876 "NUM_SOUNDS"
	  public type class_ref 396812 // sound_kind
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      operation 913036 "loadSound"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 913164 "playSound"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "kind" type class_ref 396812 // sound_kind
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 913292 "releaseSound"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      classrelation 850700 // mServiceLock (<directional composition>)
	relation 850700 *-->
	  a role_name "mServiceLock" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 850700 // mServiceLock (<directional composition>)
	  b parent class_ref 133132 // Mutex
      end

      attribute 869644 "mClient"
	private explicit_type "Client"
	multiplicity "[MAX_CAMERAS]"
	stereotype "wp"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${multiplicity}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " protected by mServiceLock"
      end

      classrelation 850828 // mClientLock (<directional composition>)
	relation 850828 *-->
	  a role_name "mClientLock" multiplicity "[MAX_CAMERAS]" private
	    comment " prevent Client destruction inside callbacks"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	    classrelation_ref 850828 // mClientLock (<directional composition>)
	  b parent class_ref 133132 // Mutex
      end

      attribute 869772 "mNumberOfCameras"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 917004 "findClientUnsafe"
	preserve_cpp_body_indent private explicit_return_type "sp<Client>"
	nparams 2
	  param in name "cameraClient" explicit_type "wp<IBinder>"
	  param inout name "outIndex" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " needs to be called with mServiceLock held"
      end

      attribute 869900 "mBusy"
	volatile private explicit_type "int32_t"
	multiplicity "[MAX_CAMERAS]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 917132 "setCameraBusy"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 1
	  param in name "cameraId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "// The reason we need this busy bit is a new CameraService::connect() request
// may come in while the previous Client's destructor has not been run or is
// still running. If the last strong reference of the previous Client is gone
// but the destructor has not been finished, we should not allow the new Client
// to be created because we need to wait for the previous Client to tear down
// the hardware first.

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 917260 "setCameraFree"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 1
	  param in name "cameraId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 917388 "newMediaPlayer"
	preserve_cpp_body_indent private return_type class_ref 161548 // MediaPlayer
	nparams 1
	  param in name "file" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "// We share the media players for shutter and recording sound for all clients.
// A reference count is kept to determine when we will actually release the
// media players.

${inline}${type} * ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " sounds"
      end

      classrelation 850956 // mSoundLock (<directional composition>)
	relation 850956 *-->
	  a role_name "mSoundLock" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 850956 // mSoundLock (<directional composition>)
	  b parent class_ref 133132 // Mutex
      end

      attribute 870028 "mSoundPlayer"
	private explicit_type "MediaPlayer"
	multiplicity "[NUM_SOUNDS]"
	stereotype "sp"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${multiplicity}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 870156 "mSoundRef"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " reference count (release all MediaPlayer when 0)"
      end

      attribute 870284 "mModule"
	private explicit_type "camera_module_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 917516 "binderDied"
	preserve_cpp_body_indent cpp_virtual private explicit_return_type "void"
	nparams 1
	  param in name "who" explicit_type "wp<IBinder>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//virtual

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " IBinder::DeathRecipient implementation"
      end
    end

    class 392076 "Camera2Device"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      class 392204 "NotificationListener"
	abstract visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 890252 "notifyError"
	  abstract cpp_virtual public explicit_return_type "void"
	  nparams 3
	    param in name "errorCode" explicit_type "int"
	    param in name "arg1" explicit_type "int"
	    param in name "arg2" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	  
	  
	  
	  
	  comment " Refer to the Camera2 HAL definition for notification definitions"
	end

	operation 890380 "notifyShutter"
	  abstract cpp_virtual public explicit_return_type "void"
	  nparams 2
	    param in name "frameNumber" explicit_type "int"
	    param in name "timestamp" type class_ref 140172 // nsecs_t
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	  
	  
	  
	  
	end

	operation 890508 "notifyAutoFocus"
	  abstract cpp_virtual public explicit_return_type "void"
	  nparams 2
	    param in name "newState" explicit_type "uint8_t"
	    param in name "triggerId" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	  
	  
	  
	  
	end

	operation 890636 "notifyAutoExposure"
	  abstract cpp_virtual public explicit_return_type "void"
	  nparams 2
	    param in name "newState" explicit_type "uint8_t"
	    param in name "triggerId" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	  
	  
	  
	  
	end

	operation 890764 "notifyAutoWhitebalance"
	  abstract cpp_virtual public explicit_return_type "void"
	  nparams 2
	    param in name "newState" explicit_type "uint8_t"
	    param in name "triggerId" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	  
	  
	  
	  
	end

	operation 890892 "~NotificationListener"
	  preserve_cpp_body_indent cpp_virtual protected explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "//*
// * Camera2Device::NotificationListener

${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	  
	  
	  
	  
	end
      end

      classrelation 844300 // <generalisation>
	relation 844300 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 844300 // <generalisation>
	  b parent class_ref 393740 // typedef11
      end

      classrelation 844428 // <generalisation>
	relation 844428 ---|>
	  a private
	    cpp default "${type}"
	    classrelation_ref 844428 // <generalisation>
	  b parent class_ref 140044 // RefBase
      end

      class 393868 "CameraMetadata"
	visibility package stereotype "typedef" base_type class_ref 392716 // CameraMetadata
	cpp_decl "${comment}typedef ${type} ${name};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 844556 // <dependency>
	  relation 844556 -_->
	    a default
	      cpp default "#include in source"
	      classrelation_ref 844556 // <dependency>
	    b parent class_ref 392716 // CameraMetadata
	end
      end

      operation 887948 "Camera2Device"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 1
	  param in name "id" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} ${p0}${)}:
        mId(id),
        mDevice(NULL)
${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 888076 "~Camera2Device"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 888204 "initialize"
	preserve_cpp_body_indent public return_type class_ref 128268 // status_t
	nparams 1
	  param inout name "module" explicit_type "camera_module_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 888332 "disconnect"
	preserve_cpp_body_indent public return_type class_ref 128268 // status_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 888460 "dump"
	preserve_cpp_body_indent public return_type class_ref 128268 // status_t
	nparams 2
	  param in name "fd" explicit_type "int"
	  param in name "args" explicit_type "Vector<String16>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 888588 "info"
	preserve_cpp_body_indent const public return_type class_ref 393868 // CameraMetadata
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}const ${type} & ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * The device's static characteristics metadata buffer"
      end

      operation 888716 "capture"
	preserve_cpp_body_indent public return_type class_ref 128268 // status_t
	nparams 1
	  param inout name "request" type class_ref 393868 // CameraMetadata
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Submit request for capture. The Camera2Device takes ownership of the
     * passed-in buffer."
      end

      operation 888844 "setStreamingRequest"
	preserve_cpp_body_indent public return_type class_ref 128268 // status_t
	nparams 1
	  param in name "request" type class_ref 393868 // CameraMetadata
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Submit request for streaming. The Camera2Device makes a copy of the
     * passed-in buffer and the caller retains ownership."
      end

      operation 888972 "clearStreamingRequest"
	preserve_cpp_body_indent public return_type class_ref 128268 // status_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Clear the streaming request slot."
      end

      operation 889100 "waitUntilRequestReceived"
	preserve_cpp_body_indent public return_type class_ref 128268 // status_t
	nparams 2
	  param in name "requestId" explicit_type "int32_t"
	  param in name "timeout" type class_ref 140172 // nsecs_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Wait until a request with the given ID has been dequeued by the
     * HAL. Returns TIMED_OUT if the timeout duration is reached. Returns
     * immediately if the latest request received by the HAL has this id."
      end

      operation 889228 "createStream"
	preserve_cpp_body_indent public return_type class_ref 128268 // status_t
	nparams 6
	  param in name "consumer" explicit_type "sp<ANativeWindow>"
	  param in name "width" explicit_type "uint32_t"
	  param in name "height" explicit_type "uint32_t"
	  param in name "format" explicit_type "int"
	  param in name "size" explicit_type "size_t"
	  param inout name "id" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} * ${p5}${v5}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} * ${p5}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Create an output stream of the requested size and format.
     *
     * If format is CAMERA2_HAL_PIXEL_FORMAT_OPAQUE, then the HAL device selects
     * an appropriate format; it can be queried with getStreamInfo.
     *
     * If format is HAL_PIXEL_FORMAT_COMPRESSED, the size parameter must be
     * equal to the size in bytes of the buffers to allocate for the stream. For
     * other formats, the size parameter is ignored."
      end

      operation 889356 "createReprocessStreamFromStream"
	preserve_cpp_body_indent public return_type class_ref 128268 // status_t
	nparams 2
	  param in name "outputId" explicit_type "int"
	  param inout name "id" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Create an input reprocess stream that uses buffers from an existing
     * output stream."
      end

      operation 889484 "getStreamInfo"
	preserve_cpp_body_indent public return_type class_ref 128268 // status_t
	nparams 4
	  param in name "id" explicit_type "int"
	  param inout name "width" explicit_type "uint32_t"
	  param inout name "height" explicit_type "uint32_t"
	  param inout name "format" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} * ${p2}${v2}, ${t3} * ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}, ${t2} * ${p2}, ${t3} * ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Get information about a given stream."
      end

      operation 889612 "setStreamTransform"
	preserve_cpp_body_indent public return_type class_ref 128268 // status_t
	nparams 2
	  param in name "id" explicit_type "int"
	  param in name "transform" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Set stream gralloc buffer transform"
      end

      operation 889740 "deleteStream"
	preserve_cpp_body_indent public return_type class_ref 128268 // status_t
	nparams 1
	  param in name "id" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Delete stream. Must not be called if there are requests in flight which
     * reference that stream."
      end

      operation 889868 "deleteReprocessStream"
	preserve_cpp_body_indent public return_type class_ref 128268 // status_t
	nparams 1
	  param in name "id" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Delete reprocess stream. Must not be called if there are requests in
     * flight which reference that stream."
      end

      operation 889996 "createDefaultRequest"
	preserve_cpp_body_indent public return_type class_ref 128268 // status_t
	nparams 2
	  param in name "templateId" explicit_type "int"
	  param inout name "request" type class_ref 393868 // CameraMetadata
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Create a metadata buffer with fields that the HAL device believes are
     * best for the given use case"
      end

      operation 890124 "waitUntilDrained"
	preserve_cpp_body_indent public return_type class_ref 128268 // status_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Wait until all requests have been processed. Returns INVALID_OPERATION if
     * the streaming slot is not empty, or TIMED_OUT if the requests haven't
     * finished processing in 10 seconds."
      end

      operation 891020 "setNotifyCallback"
	preserve_cpp_body_indent public return_type class_ref 128268 // status_t
	nparams 1
	  param inout name "listener" type class_ref 392204 // NotificationListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Connect HAL notifications to a listener. Overwrites previous
     * listener. Set to NULL to stop receiving notifications."
      end

      operation 891148 "waitForNextFrame"
	preserve_cpp_body_indent public return_type class_ref 128268 // status_t
	nparams 1
	  param in name "timeout" type class_ref 140172 // nsecs_t
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Wait for a new frame to be produced, with timeout in nanoseconds.
     * Returns TIMED_OUT when no frame produced within the specified duration"
      end

      operation 891276 "getNextFrame"
	preserve_cpp_body_indent public return_type class_ref 128268 // status_t
	nparams 1
	  param inout name "frame" type class_ref 393868 // CameraMetadata
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Get next metadata frame from the frame queue. Returns NULL if the queue
     * is empty; caller takes ownership of the metadata buffer."
      end

      operation 891404 "triggerAutofocus"
	preserve_cpp_body_indent public return_type class_ref 128268 // status_t
	nparams 1
	  param in name "id" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Trigger auto-focus. The latest ID used in a trigger autofocus or cancel
     * autofocus call will be returned by the HAL in all subsequent AF
     * notifications."
      end

      operation 891532 "triggerCancelAutofocus"
	preserve_cpp_body_indent public return_type class_ref 128268 // status_t
	nparams 1
	  param in name "id" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Cancel auto-focus. The latest ID used in a trigger autofocus/cancel
     * autofocus call will be returned by the HAL in all subsequent AF
     * notifications."
      end

      operation 891660 "triggerPrecaptureMetering"
	preserve_cpp_body_indent public return_type class_ref 128268 // status_t
	nparams 1
	  param in name "id" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Trigger pre-capture metering. The latest ID used in a trigger pre-capture
     * call will be returned by the HAL in all subsequent AE and AWB
     * notifications."
      end

      class 393996 "BufferReleasedListener"
	abstract visibility package stereotype "struct"
	cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 844684 // <generalisation>
	  relation 844684 ---|>
	    a public
	      cpp default "${type}"
	      classrelation_ref 844684 // <generalisation>
	    b parent class_ref 394124 // typedef12
	end

	classrelation 844812 // <generalisation>
	  relation 844812 ---|>
	    a private
	      cpp default "${type}"
	      classrelation_ref 844812 // <generalisation>
	    b parent class_ref 140044 // RefBase
	end

	operation 891788 "onBufferReleased"
	  abstract cpp_virtual public explicit_return_type "void"
	  nparams 1
	    param inout name "handle" explicit_type "buffer_handle_t"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	  
	  
	  
	  
	end
      end

      class 394124 "typedef12"
	visibility package stereotype "typedef" explicit_base_type "virtual"
	cpp_decl "${comment}typedef ${type} ${name};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
      end

      operation 891916 "pushReprocessBuffer"
	preserve_cpp_body_indent public return_type class_ref 128268 // status_t
	nparams 3
	  param in name "reprocessStreamId" explicit_type "int"
	  param inout name "buffer" explicit_type "buffer_handle_t"
	  param in name "listener" explicit_type "wp<BufferReleasedListener>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "*
     * Push a buffer to be reprocessed into a reprocessing stream, and
     * provide a listener to call once the buffer is returned by the HAL"
      end

      attribute 862220 "mId"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 862348 "mDevice"
	private explicit_type "camera2_device_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 844940 // mDeviceInfo (<directional composition>)
	relation 844940 *-->
	  a role_name "mDeviceInfo" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 844940 // mDeviceInfo (<directional composition>)
	  b parent class_ref 393868 // CameraMetadata
      end

      attribute 862476 "mVendorTagOps"
	private explicit_type "vendor_tag_query_ops_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      class 394252 "MetadataQueue"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 845068 // <generalisation>
	  relation 845068 ---|>
	    a public
	      cpp default "${type}"
	      classrelation_ref 845068 // <generalisation>
	    b parent class_ref 394380 // typedef13
	end

	classrelation 845196 // <generalisation>
	  relation 845196 ---|>
	    a public
	      cpp default "${type}"
	      classrelation_ref 845196 // <generalisation>
	    b parent class_ref 394508 // typedef14
	end

	operation 892044 "MetadataQueue"
	  preserve_cpp_body_indent public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "//*
// * Camera2Device::MetadataQueue

${inline}${class}::${name}${(}${)}:
            mDevice(NULL),
            mFrameCount(0),
            mLatestRequestId(0),
            mCount(0),
            mStreamSlotCount(0),
            mSignalConsumer(true)
${throw}{
  ${body}}
"
	  
	  
	  
	  
	end

	operation 892172 "~MetadataQueue"
	  preserve_cpp_body_indent public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	  
	  
	  
	  
	end

	operation 892300 "getToConsumerInterface"
	  public explicit_return_type "camera2_request_queue_src_ops_t"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}const ${type} * ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  
	  
	  
	  
	  comment " Interface to camera2 HAL device, either for requests (device is
 consumer) or for frames (device is producer)"
	end

	operation 892428 "setFromConsumerInterface"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "d" explicit_type "camera2_device_t"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  
	  
	  
	  
	end

	operation 892556 "setConsumerDevice"
	  preserve_cpp_body_indent public return_type class_ref 128268 // status_t
	  nparams 1
	    param inout name "d" explicit_type "camera2_device_t"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "// Connect to camera2 HAL as consumer (input requests/reprocessing)

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  
	  
	  
	  
	  comment " Connect queue consumer endpoint to a camera2 device"
	end

	operation 892684 "setProducerDevice"
	  preserve_cpp_body_indent public return_type class_ref 128268 // status_t
	  nparams 1
	    param inout name "d" explicit_type "camera2_device_t"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  
	  
	  
	  
	  comment " Connect queue producer endpoint to a camera2 device"
	end

	operation 892812 "getToProducerInterface"
	  public explicit_return_type "camera2_frame_queue_dst_ops_t"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}const ${type} * ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  
	  
	  
	  
	end

	operation 892940 "enqueue"
	  preserve_cpp_body_indent public return_type class_ref 128268 // status_t
	  nparams 1
	    param inout name "buf" explicit_type "camera_metadata_t"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "// Real interfaces

${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  
	  
	  
	  
	  comment " Real interfaces. On enqueue, queue takes ownership of buffer pointer
 On dequeue, user takes ownership of buffer pointer."
	end

	operation 893068 "dequeue"
	  preserve_cpp_body_indent public return_type class_ref 128268 // status_t
	  nparams 2
	    param inout name "buf" explicit_type "camera_metadata_t"
	    param in name "incrementCount" explicit_type "bool"
	      defaultvalue "false"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  
	  
	  
	  
	end

	operation 893196 "getBufferCount"
	  preserve_cpp_body_indent public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  
	  
	  
	  
	end

	operation 893324 "waitForBuffer"
	  preserve_cpp_body_indent public return_type class_ref 128268 // status_t
	  nparams 1
	    param in name "timeout" type class_ref 140172 // nsecs_t
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  
	  
	  
	  
	end

	operation 893452 "waitForDequeue"
	  preserve_cpp_body_indent public return_type class_ref 128268 // status_t
	  nparams 2
	    param in name "id" explicit_type "int32_t"
	    param in name "timeout" type class_ref 140172 // nsecs_t
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  
	  
	  
	  
	  comment " Wait until a buffer with the given ID is dequeued. Will return
 immediately if the latest buffer dequeued has that ID."
	end

	operation 893580 "setStreamSlot"
	  preserve_cpp_body_indent public return_type class_ref 128268 // status_t
	  nparams 1
	    param inout name "buf" explicit_type "camera_metadata_t"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  
	  
	  
	  
	  comment " Set repeating buffer(s); if the queue is empty on a dequeue call, the
 queue copies the contents of the stream slot into the queue, and then
 dequeues the first new entry. The metadata buffers passed in are
 copied."
	end

	operation 893708 "setStreamSlot"
	  preserve_cpp_body_indent public return_type class_ref 128268 // status_t
	  nparams 1
	    param in name "bufs" explicit_type "List<camera_metadata_t*>"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  
	  
	  
	  
	end

	operation 893836 "dump"
	  preserve_cpp_body_indent public return_type class_ref 128268 // status_t
	  nparams 2
	    param in name "fd" explicit_type "int"
	    param in name "args" explicit_type "Vector<String16>"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  
	  
	  
	  
	end

	operation 893964 "signalConsumerLocked"
	  preserve_cpp_body_indent private return_type class_ref 128268 // status_t
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  
	  
	  
	  
	end

	operation 894092 "freeBuffers"
	  preserve_cpp_body_indent private return_type class_ref 128268 // status_t
	  nparams 2
	    param in name "start" type class_ref 394636 // iterator
	    param in name "end" type class_ref 394636 // iterator
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  
	  
	  
	  
	end

	attribute 862604 "mDevice"
	  private explicit_type "camera2_device_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 845324 // mMutex (<directional composition>)
	  relation 845324 *-->
	    a role_name "mMutex" private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	      classrelation_ref 845324 // mMutex (<directional composition>)
	    b parent class_ref 133132 // Mutex
	end

	classrelation 845452 // notEmpty (<directional composition>)
	  relation 845452 *-->
	    a role_name "notEmpty" private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	      classrelation_ref 845452 // notEmpty (<directional composition>)
	    b parent class_ref 159244 // Condition
	end

	attribute 862732 "mFrameCount"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 862860 "mLatestRequestId"
	  private explicit_type "int32_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 845580 // mNewRequestId (<directional composition>)
	  relation 845580 *-->
	    a role_name "mNewRequestId" private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	      classrelation_ref 845580 // mNewRequestId (<directional composition>)
	    b parent class_ref 159244 // Condition
	end

	attribute 862988 "mCount"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 863116 "mEntries"
	  private explicit_type "camera_metadata_t*"
	  stereotype "List"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 863244 "mStreamSlotCount"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 863372 "mStreamSlot"
	  private explicit_type "camera_metadata_t*"
	  stereotype "List"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 863500 "mSignalConsumer"
	  private explicit_type "bool"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 894220 "getInstance"
	  class_operation preserve_cpp_body_indent private return_type class_ref 394252 // MetadataQueue
	  nparams 1
	    param in name "q" explicit_type "camera2_frame_queue_dst_ops_t"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} * ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  
	  
	  
	  
	end

	operation 894348 "getInstance"
	  class_operation preserve_cpp_body_indent private return_type class_ref 394252 // MetadataQueue
	  nparams 1
	    param in name "q" explicit_type "camera2_request_queue_src_ops_t"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} * ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  
	  
	  
	  
	end

	operation 894476 "consumer_buffer_count"
	  class_operation preserve_cpp_body_indent private explicit_return_type "int"
	  nparams 1
	    param in name "q" explicit_type "camera2_request_queue_src_ops_t"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  
	  
	  
	  
	end

	operation 894604 "consumer_dequeue"
	  class_operation preserve_cpp_body_indent private explicit_return_type "int"
	  nparams 2
	    param in name "q" explicit_type "camera2_request_queue_src_ops_t"
	    param inout name "buffer" explicit_type "camera_metadata_t"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} * * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, ${t1} * * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  
	  
	  
	  
	end

	operation 894732 "consumer_free"
	  class_operation preserve_cpp_body_indent private explicit_return_type "int"
	  nparams 2
	    param in name "q" explicit_type "camera2_request_queue_src_ops_t"
	    param inout name "old_buffer" explicit_type "camera_metadata_t"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  
	  
	  
	  
	end

	operation 894860 "producer_dequeue"
	  class_operation preserve_cpp_body_indent private explicit_return_type "int"
	  nparams 4
	    param in name "q" explicit_type "camera2_frame_queue_dst_ops_t"
	    param in name "entries" explicit_type "size_t"
	    param in name "bytes" explicit_type "size_t"
	    param inout name "buffer" explicit_type "camera_metadata_t"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} * * ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} * * ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	  
	  
	  
	  
	end

	operation 894988 "producer_cancel"
	  class_operation preserve_cpp_body_indent private explicit_return_type "int"
	  nparams 2
	    param in name "q" explicit_type "camera2_frame_queue_dst_ops_t"
	    param inout name "old_buffer" explicit_type "camera_metadata_t"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  
	  
	  
	  
	end

	operation 895116 "producer_enqueue"
	  class_operation preserve_cpp_body_indent private explicit_return_type "int"
	  nparams 2
	    param in name "q" explicit_type "camera2_frame_queue_dst_ops_t"
	    param inout name "filled_buffer" explicit_type "camera_metadata_t"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  
	  
	  
	  
	end
      end

      class 394380 "typedef13"
	visibility package stereotype "typedef" explicit_base_type "camera2_request_queue_src_ops_t"
	cpp_decl "${comment}typedef ${type} ${name};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
      end

      class 394508 "typedef14"
	visibility package stereotype "typedef" explicit_base_type "camera2_frame_queue_dst_ops_t"
	cpp_decl "${comment}typedef ${type} ${name};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
      end

      classrelation 845708 // mRequestQueue (<directional composition>)
	relation 845708 *-->
	  a role_name "mRequestQueue" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 845708 // mRequestQueue (<directional composition>)
	  b parent class_ref 394252 // MetadataQueue
      end

      classrelation 845836 // mFrameQueue (<directional composition>)
	relation 845836 *-->
	  a role_name "mFrameQueue" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 845836 // mFrameQueue (<directional composition>)
	  b parent class_ref 394252 // MetadataQueue
      end

      class 394764 "StreamAdapter"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 845964 // <generalisation>
	  relation 845964 ---|>
	    a public
	      cpp default "${type}"
	      classrelation_ref 845964 // <generalisation>
	    b parent class_ref 394892 // typedef15
	end

	classrelation 846092 // <generalisation>
	  relation 846092 ---|>
	    a public
	      cpp default "${type}"
	      classrelation_ref 846092 // <generalisation>
	    b parent class_ref 394124 // typedef12
	end

	classrelation 846220 // <generalisation>
	  relation 846220 ---|>
	    a private
	      cpp default "${type}"
	      classrelation_ref 846220 // <generalisation>
	    b parent class_ref 140044 // RefBase
	end

	operation 895244 "StreamAdapter"
	  preserve_cpp_body_indent public explicit_return_type ""
	  nparams 1
	    param inout name "d" explicit_type "camera2_device_t"
	  cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${t0} * ${p0}${)}:
        mState(RELEASED),
        mDevice(d),
        mId(-1),
        mWidth(0), mHeight(0), mFormat(0), mSize(0), mUsage(0),
        mMaxProducerBuffers(0), mMaxConsumerBuffers(0),
        mTotalBuffers(0),
        mFormatRequested(0),
        mActiveBuffers(0),
        mFrameCount(0),
        mLastTimestamp(0)
${throw}{
  ${body}}
"
	  
	  
	  
	  
	end

	operation 895372 "~StreamAdapter"
	  preserve_cpp_body_indent public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	  
	  
	  
	  
	end

	operation 895500 "connectToDevice"
	  preserve_cpp_body_indent public return_type class_ref 128268 // status_t
	  nparams 5
	    param in name "consumer" explicit_type "sp<ANativeWindow>"
	    param in name "width" explicit_type "uint32_t"
	    param in name "height" explicit_type "uint32_t"
	    param in name "format" explicit_type "int"
	    param in name "size" explicit_type "size_t"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${const}${throw}${staticnl}{
  ${body}}
"
	  
	  
	  
	  
	  comment "*
         * Create a HAL device stream of the requested size and format.
         *
         * If format is CAMERA2_HAL_PIXEL_FORMAT_OPAQUE, then the HAL device
         * selects an appropriate format; it can be queried with getFormat.
         *
         * If format is HAL_PIXEL_FORMAT_COMPRESSED, the size parameter must
         * be equal to the size in bytes of the buffers to allocate for the
         * stream. For other formats, the size parameter is ignored."
	end

	operation 895628 "release"
	  preserve_cpp_body_indent public return_type class_ref 128268 // status_t
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  
	  
	  
	  
	end

	operation 895756 "setTransform"
	  preserve_cpp_body_indent public return_type class_ref 128268 // status_t
	  nparams 1
	    param in name "transform" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  
	  
	  
	  
	end

	operation 895884 "getId"
	  const cpp_inline public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return mId; };
"
	  
	  
	  
	  
	  comment " Get stream parameters.
 Only valid after a successful connectToDevice call."
	end

	operation 896012 "getWidth"
	  const cpp_inline public explicit_return_type "uint32_t"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return mWidth; };
"
	  
	  
	  
	  
	end

	operation 896140 "getHeight"
	  const cpp_inline public explicit_return_type "uint32_t"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return mHeight; };
"
	  
	  
	  
	  
	end

	operation 896268 "getFormat"
	  const cpp_inline public explicit_return_type "uint32_t"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return mFormat; };
"
	  
	  
	  
	  
	end

	operation 896396 "dump"
	  preserve_cpp_body_indent public return_type class_ref 128268 // status_t
	  nparams 2
	    param in name "fd" explicit_type "int"
	    param in name "args" explicit_type "Vector<String16>"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  
	  
	  
	  
	  comment " Dump stream information"
	end

	attribute 863628 "mState"
	  private explicit_type "<complex type>"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}enum  {
            ERROR = -1,
            RELEASED = 0,
            ALLOCATED,
            CONNECTED,
            ACTIVE
        } ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 846348 // mConsumerInterface (<directional composition>)
	  relation 846348 *-->
	    stereotype "sp"
	    a role_name "mConsumerInterface" private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	      classrelation_ref 846348 // mConsumerInterface (<directional composition>)
	    b parent class_ref 175628 // ANativeWindow
	end

	attribute 863756 "mDevice"
	  private explicit_type "camera2_device_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 863884 "mId"
	  private explicit_type "uint32_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 864012 "mWidth"
	  private explicit_type "uint32_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 864140 "mHeight"
	  private explicit_type "uint32_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 864268 "mFormat"
	  private explicit_type "uint32_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 864396 "mSize"
	  private explicit_type "size_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 864524 "mUsage"
	  private explicit_type "uint32_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 864652 "mMaxProducerBuffers"
	  private explicit_type "uint32_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 864780 "mMaxConsumerBuffers"
	  private explicit_type "uint32_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 864908 "mTotalBuffers"
	  private explicit_type "uint32_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 865036 "mFormatRequested"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 865164 "mActiveBuffers"
	  private explicit_type "uint32_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 865292 "mFrameCount"
	  private explicit_type "uint32_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 865420 "mLastTimestamp"
	  private explicit_type "int64_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 896524 "getStreamOps"
	  preserve_cpp_body_indent private explicit_return_type "camera2_stream_ops"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}const ${type} * ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  
	  
	  
	  
	end

	operation 896652 "toANW"
	  class_operation preserve_cpp_body_indent private return_type class_ref 175628 // ANativeWindow
	  nparams 1
	    param in name "w" explicit_type "camera2_stream_ops_t"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} * ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  
	  
	  
	  
	end

	operation 896780 "dequeue_buffer"
	  class_operation preserve_cpp_body_indent private explicit_return_type "int"
	  nparams 2
	    param in name "w" explicit_type "camera2_stream_ops_t"
	    param inout name "buffer" explicit_type "buffer_handle_t"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} * * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, ${t1} * * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  
	  
	  
	  
	end

	operation 896908 "enqueue_buffer"
	  class_operation preserve_cpp_body_indent private explicit_return_type "int"
	  nparams 3
	    param in name "w" explicit_type "camera2_stream_ops_t"
	    param in name "timestamp" explicit_type "int64_t"
	    param inout name "buffer" explicit_type "buffer_handle_t"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, ${t1} ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	  
	  
	  
	  
	end

	operation 897036 "cancel_buffer"
	  class_operation preserve_cpp_body_indent private explicit_return_type "int"
	  nparams 2
	    param in name "w" explicit_type "camera2_stream_ops_t"
	    param inout name "buffer" explicit_type "buffer_handle_t"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  
	  
	  
	  
	end

	operation 897164 "set_crop"
	  class_operation preserve_cpp_body_indent private explicit_return_type "int"
	  nparams 5
	    param in name "w" explicit_type "camera2_stream_ops_t"
	    param in name "left" explicit_type "int"
	    param in name "top" explicit_type "int"
	    param in name "right" explicit_type "int"
	    param in name "bottom" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${const}${throw}${staticnl}{
  ${body}}
"
	  
	  
	  
	  
	end
      end

      class 394892 "typedef15"
	visibility package stereotype "typedef" explicit_base_type "camera2_stream_ops"
	cpp_decl "${comment}typedef ${type} ${name};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
      end

      class 395020 "StreamList"
	visibility package stereotype "typedef" explicit_base_type "List<sp<StreamAdapter> >"
	cpp_decl "${comment}typedef ${type} ${name};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
      end

      classrelation 846476 // mStreams (<directional composition>)
	relation 846476 *-->
	  a role_name "mStreams" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 846476 // mStreams (<directional composition>)
	  b parent class_ref 395020 // StreamList
      end

      class 395148 "ReprocessStreamAdapter"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 846604 // <generalisation>
	  relation 846604 ---|>
	    a public
	      cpp default "${type}"
	      classrelation_ref 846604 // <generalisation>
	    b parent class_ref 395276 // typedef16
	end

	classrelation 846732 // <generalisation>
	  relation 846732 ---|>
	    a public
	      cpp default "${type}"
	      classrelation_ref 846732 // <generalisation>
	    b parent class_ref 394124 // typedef12
	end

	classrelation 846860 // <generalisation>
	  relation 846860 ---|>
	    a private
	      cpp default "${type}"
	      classrelation_ref 846860 // <generalisation>
	    b parent class_ref 140044 // RefBase
	end

	operation 897292 "ReprocessStreamAdapter"
	  preserve_cpp_body_indent public explicit_return_type ""
	  nparams 1
	    param inout name "d" explicit_type "camera2_device_t"
	  cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${t0} * ${p0}${)}:
        mState(RELEASED),
        mDevice(d),
        mId(-1),
        mWidth(0), mHeight(0), mFormat(0),
        mActiveBuffers(0),
        mFrameCount(0)
${throw}{
  ${body}}
"
	  
	  
	  
	  
	end

	operation 897420 "~ReprocessStreamAdapter"
	  preserve_cpp_body_indent public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	  
	  
	  
	  
	end

	operation 897548 "connectToDevice"
	  preserve_cpp_body_indent public return_type class_ref 128268 // status_t
	  nparams 1
	    param in name "outputStream" explicit_type "sp<StreamAdapter>"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  
	  
	  
	  
	  comment "*
         * Create a HAL device reprocess stream based on an existing output stream."
	end

	operation 897676 "release"
	  preserve_cpp_body_indent public return_type class_ref 128268 // status_t
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  
	  
	  
	  
	end

	operation 897804 "pushIntoStream"
	  preserve_cpp_body_indent public return_type class_ref 128268 // status_t
	  nparams 2
	    param inout name "handle" explicit_type "buffer_handle_t"
	    param in name "releaseListener" explicit_type "wp<BufferReleasedListener>"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  
	  
	  
	  
	  comment "*
         * Push buffer into stream for reprocessing. Takes ownership until it notifies
         * that the buffer has been released"
	end

	operation 897932 "getId"
	  const cpp_inline public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return mId; };
"
	  
	  
	  
	  
	  comment "*
         * Get stream parameters.
         * Only valid after a successful connectToDevice call."
	end

	operation 898060 "getWidth"
	  const cpp_inline public explicit_return_type "uint32_t"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return mWidth; };
"
	  
	  
	  
	  
	end

	operation 898188 "getHeight"
	  const cpp_inline public explicit_return_type "uint32_t"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return mHeight; };
"
	  
	  
	  
	  
	end

	operation 898316 "getFormat"
	  const cpp_inline public explicit_return_type "uint32_t"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return mFormat; };
"
	  
	  
	  
	  
	end

	operation 898444 "dump"
	  preserve_cpp_body_indent public return_type class_ref 128268 // status_t
	  nparams 2
	    param in name "fd" explicit_type "int"
	    param in name "args" explicit_type "Vector<String16>"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  
	  
	  
	  
	  comment " Dump stream information"
	end

	attribute 865548 "mState"
	  private explicit_type "<complex type>"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}enum  {
            ERROR = -1,
            RELEASED = 0,
            ACTIVE
        } ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 846988 // mConsumerInterface (<directional composition>)
	  relation 846988 *-->
	    stereotype "sp"
	    a role_name "mConsumerInterface" private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	      classrelation_ref 846988 // mConsumerInterface (<directional composition>)
	    b parent class_ref 175628 // ANativeWindow
	end

	classrelation 847116 // mBaseStream (<directional composition>)
	  relation 847116 *-->
	    stereotype "wp"
	    a role_name "mBaseStream" private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	      classrelation_ref 847116 // mBaseStream (<directional composition>)
	    b parent class_ref 394764 // StreamAdapter
	end

	class 395404 "QueueEntry"
	  visibility package stereotype "struct"
	  cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
	  java_decl ""
	  php_decl ""
	  python_2_2 python_decl ""
	  idl_decl ""
	  explicit_switch_type ""
	  
	  attribute 865676 "handle"
	    public explicit_type "buffer_handle_t"
	    cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java_decl ""
	    php_decl ""
	    python_decl ""
	    idl_decl ""
	  end

	  classrelation 847244 // releaseListener (<directional composition>)
	    relation 847244 *-->
	      stereotype "wp"
	      a role_name "releaseListener" public
		cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
		classrelation_ref 847244 // releaseListener (<directional composition>)
	      b parent class_ref 393996 // BufferReleasedListener
	  end
	end

	classrelation 847372 // mQueue (<directional composition>)
	  relation 847372 *-->
	    stereotype "List"
	    a role_name "mQueue" private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	      classrelation_ref 847372 // mQueue (<directional composition>)
	    b parent class_ref 395404 // QueueEntry
	end

	classrelation 847500 // mInFlightQueue (<directional composition>)
	  relation 847500 *-->
	    stereotype "List"
	    a role_name "mInFlightQueue" private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	      classrelation_ref 847500 // mInFlightQueue (<directional composition>)
	    b parent class_ref 395404 // QueueEntry
	end

	attribute 865804 "mDevice"
	  private explicit_type "camera2_device_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 865932 "mId"
	  private explicit_type "uint32_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 866060 "mWidth"
	  private explicit_type "uint32_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 866188 "mHeight"
	  private explicit_type "uint32_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 866316 "mFormat"
	  private explicit_type "uint32_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 866444 "mActiveBuffers"
	  private explicit_type "uint32_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 866572 "mFrameCount"
	  private explicit_type "uint32_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 866700 "mLastTimestamp"
	  private explicit_type "int64_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 898572 "getStreamOps"
	  preserve_cpp_body_indent private explicit_return_type "camera2_stream_in_ops"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}const ${type} * ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  
	  
	  
	  
	end

	operation 898700 "acquire_buffer"
	  class_operation preserve_cpp_body_indent private explicit_return_type "int"
	  nparams 2
	    param in name "w" explicit_type "camera2_stream_in_ops_t"
	    param inout name "buffer" explicit_type "buffer_handle_t"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} * * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, ${t1} * * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  
	  
	  
	  
	end

	operation 898828 "release_buffer"
	  class_operation preserve_cpp_body_indent private explicit_return_type "int"
	  nparams 2
	    param in name "w" explicit_type "camera2_stream_in_ops_t"
	    param inout name "buffer" explicit_type "buffer_handle_t"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  
	  
	  
	  
	end
      end

      class 395276 "typedef16"
	visibility package stereotype "typedef" explicit_base_type "camera2_stream_in_ops"
	cpp_decl "${comment}typedef ${type} ${name};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
      end

      class 395532 "ReprocessStreamList"
	visibility package stereotype "typedef" explicit_base_type "List<sp<ReprocessStreamAdapter> >"
	cpp_decl "${comment}typedef ${type} ${name};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
      end

      classrelation 847628 // mReprocessStreams (<directional composition>)
	relation 847628 *-->
	  a role_name "mReprocessStreams" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 847628 // mReprocessStreams (<directional composition>)
	  b parent class_ref 395532 // ReprocessStreamList
      end

      operation 898956 "notificationCallback"
	class_operation preserve_cpp_body_indent private explicit_return_type "void"
	nparams 5
	  param in name "msg_type" explicit_type "int32_t"
	  param in name "ext1" explicit_type "int32_t"
	  param in name "ext2" explicit_type "int32_t"
	  param in name "ext3" explicit_type "int32_t"
	  param inout name "user" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} * ${p4}${v4}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} * ${p4}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " Receives HAL notifications and routes them to the NotificationListener"
      end
    end

    class 393740 "typedef11"
      visibility package stereotype "typedef" explicit_base_type "virtual"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
    end

    class 395660 "CameraClient"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 847756 // <generalisation>
	relation 847756 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 847756 // <generalisation>
	  b parent class_ref 391948 // Client
      end

      operation 899084 "disconnect"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " ICamera interface (see ICamera for details)"
      end

      operation 899212 "connect"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 128268 // status_t
	nparams 1
	  param in name "client" explicit_type "sp<ICameraClient>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "// connect a new client to the camera

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 899340 "lock"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 128268 // status_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 899468 "unlock"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 128268 // status_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 899596 "setPreviewDisplay"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 128268 // status_t
	nparams 1
	  param in name "surface" explicit_type "sp<Surface>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "// set the Surface that the preview will use

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 899724 "setPreviewTexture"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 128268 // status_t
	nparams 1
	  param in name "surfaceTexture" explicit_type "sp<ISurfaceTexture>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "// set the SurfaceTexture that the preview will use

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 899852 "setPreviewCallbackFlag"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "callback_flag" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "// set the preview callback flag to affect how the received frames from
// preview are handled.

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 899980 "startPreview"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 128268 // status_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "// start preview mode

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 900108 "stopPreview"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "// stop preview mode

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 900236 "previewEnabled"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 900364 "storeMetaDataInBuffers"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 128268 // status_t
	nparams 1
	  param in name "enabled" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 900492 "startRecording"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 128268 // status_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "// start recording mode

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 900620 "stopRecording"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "// stop recording mode

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 900748 "recordingEnabled"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 900876 "releaseRecordingFrame"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "mem" explicit_type "sp<IMemory>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "// release a recording frame

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 901004 "autoFocus"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 128268 // status_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 901132 "cancelAutoFocus"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 128268 // status_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 901260 "takePicture"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 128268 // status_t
	nparams 1
	  param in name "msgType" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "// take a picture - image is returned in callback

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 901388 "setParameters"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 128268 // status_t
	nparams 1
	  param in name "params" type class_ref 131340 // String8
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "// set preview/capture parameters - key/value pairs

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 901516 "getParameters"
	preserve_cpp_body_indent const cpp_virtual public return_type class_ref 131340 // String8
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "// get preview/capture parameters - key/value pairs

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 901644 "sendCommand"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 128268 // status_t
	nparams 3
	  param in name "cmd" explicit_type "int32_t"
	  param in name "arg1" explicit_type "int32_t"
	  param in name "arg2" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 901772 "CameraClient"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 6
	  param in name "cameraService" explicit_type "sp<CameraService>"
	  param in name "cameraClient" explicit_type "sp<ICameraClient>"
	  param in name "cameraId" explicit_type "int"
	  param in name "cameraFacing" explicit_type "int"
	  param in name "clientPid" explicit_type "int"
	  param in name "servicePid" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} ${p5}${v5}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}:
        Client(cameraService, cameraClient,
                cameraId, cameraFacing, clientPid, servicePid)
${throw}{
  ${body}}
"
	
	
	
	
	comment " Interface used by CameraService"
      end

      operation 901900 "~CameraClient"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "// tear down the client

${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 902028 "initialize"
	preserve_cpp_body_indent public return_type class_ref 128268 // status_t
	nparams 1
	  param inout name "module" explicit_type "camera_module_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 902156 "dump"
	preserve_cpp_body_indent public return_type class_ref 128268 // status_t
	nparams 2
	  param in name "fd" explicit_type "int"
	  param in name "args" explicit_type "Vector<String16>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 902284 "checkPid"
	preserve_cpp_body_indent const private return_type class_ref 128268 // status_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "// ----------------------------------------------------------------------------

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " check whether the calling process matches mClientPid."
      end

      operation 902412 "checkPidAndHardware"
	preserve_cpp_body_indent const private return_type class_ref 128268 // status_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 902540 "registerPreviewBuffers"
	private return_type class_ref 128268 // status_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " also check mHardware != 0
 these are internal functions used to set up preview buffers"
      end

      class 395788 "camera_mode"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum ${name} {
${items}
};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 866828 "CAMERA_PREVIEW_MODE"
	  public type class_ref 395788 // camera_mode
	  init_value " 0"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 866956 "CAMERA_RECORDING_MODE"
	  public type class_ref 395788 // camera_mode
	  init_value " 1"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      operation 902668 "startCameraMode"
	preserve_cpp_body_indent private return_type class_ref 128268 // status_t
	nparams 1
	  param in name "mode" type class_ref 395788 // camera_mode
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "// start preview or recording

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " these are internal functions used for preview/recording"
      end

      operation 902796 "startPreviewMode"
	preserve_cpp_body_indent private return_type class_ref 128268 // status_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 902924 "startRecordingMode"
	preserve_cpp_body_indent private return_type class_ref 128268 // status_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 903052 "enableShutterSound"
	preserve_cpp_body_indent private return_type class_ref 128268 // status_t
	nparams 1
	  param in name "enable" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "// enable shutter sound

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " internal function used by sendCommand to enable/disable shutter sound."
      end

      operation 903180 "notifyCallback"
	class_operation preserve_cpp_body_indent private explicit_return_type "void"
	nparams 4
	  param in name "msgType" explicit_type "int32_t"
	  param in name "ext1" explicit_type "int32_t"
	  param in name "ext2" explicit_type "int32_t"
	  param inout name "user" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} * ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "// Callback messages can be dispatched to internal handlers or pass to our
// client's callback functions, depending on the message type.
//
// notifyCallback:
//      CAMERA_MSG_SHUTTER              handleShutter
//      (others)                        c->notifyCallback
// dataCallback:
//      CAMERA_MSG_PREVIEW_FRAME        handlePreviewData
//      CAMERA_MSG_POSTVIEW_FRAME       handlePostview
//      CAMERA_MSG_RAW_IMAGE            handleRawPicture
//      CAMERA_MSG_COMPRESSED_IMAGE     handleCompressedPicture
//      (others)                        c->dataCallback
// dataCallbackTimestamp
//      (others)                        c->dataCallbackTimestamp
//
// NOTE: the *Callback functions grab mLock of the client before passing
// control to handle* functions. So the handle* functions must release the
// lock before calling the ICameraClient's callbacks, so those callbacks can
// invoke methods in the Client class again (For example, the preview frame
// callback may want to releaseRecordingFrame). The handle* functions must
// release the lock after all accesses to member variables, so it must be
// handled very carefully.

${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} * ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " these are static callback functions"
      end

      operation 903308 "dataCallback"
	class_operation preserve_cpp_body_indent private explicit_return_type "void"
	nparams 4
	  param in name "msgType" explicit_type "int32_t"
	  param in name "dataPtr" explicit_type "sp<IMemory>"
	  param inout name "metadata" explicit_type "camera_frame_metadata_t"
	  param inout name "user" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} * ${p2}${v2}, ${t3} * ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, const ${t1} & ${p1}, ${t2} * ${p2}, ${t3} * ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 903436 "dataCallbackTimestamp"
	class_operation preserve_cpp_body_indent private explicit_return_type "void"
	nparams 4
	  param in name "timestamp" type class_ref 140172 // nsecs_t
	  param in name "msgType" explicit_type "int32_t"
	  param in name "dataPtr" explicit_type "sp<IMemory>"
	  param inout name "user" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, const ${t2} & ${p2}${v2}, ${t3} * ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, const ${t2} & ${p2}, ${t3} * ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 903564 "handleShutter"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 1
	  param in name "" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "// snapshot taken callback

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " handlers for messages"
      end

      operation 903692 "handlePreviewData"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 3
	  param in name "msgType" explicit_type "int32_t"
	  param in name "mem" explicit_type "sp<IMemory>"
	  param inout name "metadata" explicit_type "camera_frame_metadata_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "// preview callback - frame buffer update

${inline}${type} ${class}::${name}${(}${t0} ${p0}, const ${t1} & ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 903820 "handlePostview"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 1
	  param in name "mem" explicit_type "sp<IMemory>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "// picture callback - postview image ready

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 903948 "handleRawPicture"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 1
	  param in name "mem" explicit_type "sp<IMemory>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "// picture callback - raw image ready

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 904076 "handleCompressedPicture"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 1
	  param in name "mem" explicit_type "sp<IMemory>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "// picture callback - compressed picture ready

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 904204 "handleGenericNotify"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 3
	  param in name "msgType" explicit_type "int32_t"
	  param in name "ext1" explicit_type "int32_t"
	  param in name "ext2" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 904332 "handleGenericData"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 3
	  param in name "msgType" explicit_type "int32_t"
	  param in name "dataPtr" explicit_type "sp<IMemory>"
	  param inout name "metadata" explicit_type "camera_frame_metadata_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, const ${t1} & ${p1}, ${t2} * ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 904460 "handleGenericDataTimestamp"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 3
	  param in name "timestamp" type class_ref 140172 // nsecs_t
	  param in name "msgType" explicit_type "int32_t"
	  param in name "dataPtr" explicit_type "sp<IMemory>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, const ${t2} & ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, const ${t2} & ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 904588 "copyFrameAndPostCopiedFrame"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 6
	  param in name "msgType" explicit_type "int32_t"
	  param in name "client" explicit_type "sp<ICameraClient>"
	  param in name "heap" explicit_type "sp<IMemoryHeap>"
	  param in name "offset" explicit_type "size_t"
	  param in name "size" explicit_type "size_t"
	  param inout name "metadata" explicit_type "camera_frame_metadata_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}, const ${t2} & ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}, ${t5} * ${p5}${v5}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, const ${t1} & ${p1}, const ${t2} & ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} * ${p5}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 904716 "getOrientation"
	preserve_cpp_body_indent private explicit_return_type "int"
	nparams 2
	  param in name "degrees" explicit_type "int"
	  param in name "mirror" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 904844 "setPreviewWindow"
	preserve_cpp_body_indent private return_type class_ref 128268 // status_t
	nparams 2
	  param in name "binder" explicit_type "sp<IBinder>"
	  param in name "window" explicit_type "sp<ANativeWindow>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "// ----------------------------------------------------------------------------

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      classrelation 847884 // mHardware (<directional composition>)
	relation 847884 *-->
	  stereotype "sp"
	  a role_name "mHardware" private
	    comment " cleared after disconnect()"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 847884 // mHardware (<directional composition>)
	  b parent class_ref 395916 // CameraHardwareInterface
      end

      attribute 867084 "mPreviewCallbackFlag"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 867212 "mOrientation"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Current display orientation"
      end

      attribute 867340 "mPlayShutterSound"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 848012 // mLock (<directional composition>)
	relation 848012 *-->
	  a role_name "mLock" private
	    cpp mutable default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 848012 // mLock (<directional composition>)
	  b parent class_ref 133132 // Mutex
      end

      classrelation 848140 // mSurface (<directional composition>)
	relation 848140 *-->
	  stereotype "sp"
	  a role_name "mSurface" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 848140 // mSurface (<directional composition>)
	  b parent class_ref 134028 // IBinder
      end

      classrelation 848268 // mPreviewWindow (<directional composition>)
	relation 848268 *-->
	  stereotype "sp"
	  a role_name "mPreviewWindow" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 848268 // mPreviewWindow (<directional composition>)
	  b parent class_ref 175628 // ANativeWindow
      end

      classrelation 848396 // mPreviewBuffer (<directional composition>)
	relation 848396 *-->
	  stereotype "sp"
	  a role_name "mPreviewBuffer" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 848396 // mPreviewBuffer (<directional composition>)
	  b parent class_ref 270220 // MemoryHeapBase
      end

      operation 904972 "enableMsgType"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 1
	  param in name "msgType" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "// ----------------------------------------------------------------------------

${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " We need to avoid the deadlock when the incoming command thread and
 the CameraHardwareInterface callback thread both want to grab mLock.
 An extra flag is used to tell the callback thread that it should stop
 trying to deliver the callback messages if the client is not
 interested in it anymore. For example, if the client is calling
 stopPreview(), the preview frame messages do not need to be delivered
 anymore.
 This function takes the same parameter as the enableMsgType() and
 disableMsgType() functions in CameraHardwareInterface."
      end

      operation 905100 "disableMsgType"
	preserve_cpp_body_indent private explicit_return_type "void"
	nparams 1
	  param in name "msgType" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      attribute 867468 "mMsgEnabled"
	volatile private explicit_type "int32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 905228 "lockIfMessageWanted"
	preserve_cpp_body_indent private explicit_return_type "bool"
	nparams 1
	  param in name "msgType" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " This function keeps trying to grab mLock, or give up if the message
 is found to be disabled. It returns true if mLock is grabbed."
      end
    end

    class 395916 "CameraHardwareInterface"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * CameraHardwareInterface.h defines the interface to the
 * camera hardware abstraction layer, used for setting and getting
 * parameters, live previewing, and taking pictures.
 *
 * It is a referenced counted interface with RefBase as its base class.
 * CameraService calls openCameraHardware() to retrieve a strong pointer to the
 * instance of this interface and may be called multiple times. The
 * following steps describe a typical sequence:
 *
 *   -# After CameraService calls openCameraHardware(), getParameters() and
 *      setParameters() are used to initialize the camera instance.
 *      CameraService calls getPreviewHeap() to establish access to the
 *      preview heap so it can be registered with SurfaceFlinger for
 *      efficient display updating while in preview mode.
 *   -# startPreview() is called.  The camera instance then periodically
 *      sends the message CAMERA_MSG_PREVIEW_FRAME (if enabled) each time
 *      a new preview frame is available.  If data callback code needs to use
 *      this memory after returning, it must copy the data.
 *
 * Prior to taking a picture, CameraService calls autofocus(). When auto
 * focusing has completed, the camera instance sends a CAMERA_MSG_FOCUS notification,
 * which informs the application whether focusing was successful. The camera instance
 * only sends this message once and it is up  to the application to call autoFocus()
 * again if refocusing is desired.
 *
 * CameraService calls takePicture() to request the camera instance take a
 * picture. At this point, if a shutter, postview, raw, and/or compressed callback
 * is desired, the corresponding message must be enabled. As with CAMERA_MSG_PREVIEW_FRAME,
 * any memory provided in a data callback must be copied if it's needed after returning."
      classrelation 848524 // <generalisation>
	relation 848524 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 848524 // <generalisation>
	  b parent class_ref 393740 // typedef11
      end

      classrelation 848652 // <generalisation>
	relation 848652 ---|>
	  a private
	    cpp default "${type}"
	    classrelation_ref 848652 // <generalisation>
	  b parent class_ref 140044 // RefBase
      end

      operation 905356 "CameraHardwareInterface"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param in name "name" explicit_type "char"
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} * ${p0}${v0}${)}${volatile}${throw} {
        mDevice = 0;
        mName = name;
    };
"
	
	
	
	
      end

      operation 905484 "~CameraHardwareInterface"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {
        ALOGI(\"Destroying camera %s\", mName.string());
        if(mDevice) {
            int rc = mDevice->common.close(&mDevice->common);
            if (rc != OK)
                ALOGE(\"Could not close camera %s: %d\", mName.string(), rc);
        }
    };
"
	
	
	
	
      end

      operation 905612 "initialize"
	cpp_inline public return_type class_ref 128268 // status_t
	nparams 1
	  param inout name "module" explicit_type "hw_module_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        ALOGI(\"Opening camera %s\", mName.string());
        int rc = module->methods->open(module, mName.string(),
                                       (hw_device_t **)&mDevice);
        if (rc != OK) {
            ALOGE(\"Could not open camera %s: %d\", mName.string(), rc);
            return rc;
        }
        initHalPreviewWindow();
        return rc;
    };
"
	
	
	
	
      end

      operation 905740 "setPreviewWindow"
	cpp_inline public return_type class_ref 128268 // status_t
	nparams 1
	  param in name "buf" explicit_type "sp<ANativeWindow>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        ALOGV(\"%s(%s) buf %p\", __FUNCTION__, mName.string(), buf.get());

        if (mDevice->ops->set_preview_window) {
            mPreviewWindow = buf;
            mHalPreviewWindow.user = this;
            ALOGV(\"%s &mHalPreviewWindow %p mHalPreviewWindow.user %p\", __FUNCTION__,
                    &mHalPreviewWindow, mHalPreviewWindow.user);
            return mDevice->ops->set_preview_window(mDevice,
                    buf.get() ? &mHalPreviewWindow.nw : 0);
        }
        return INVALID_OPERATION;
    };
"
	
	
	
	
	comment "* Set the ANativeWindow to which preview frames are sent "
      end

      operation 905868 "setCallbacks"
	cpp_inline public explicit_return_type "void"
	nparams 4
	  param in name "notify_cb" type class_ref 396044 // notify_callback
	  param in name "data_cb" type class_ref 396172 // data_callback
	  param in name "data_cb_timestamp" type class_ref 396300 // data_callback_timestamp
	  param inout name "user" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} * ${p3}${v3}${)}${const}${volatile}${throw}${abstract} {
        mNotifyCb = notify_cb;
        mDataCb = data_cb;
        mDataCbTimestamp = data_cb_timestamp;
        mCbUser = user;

        ALOGV(\"%s(%s)\", __FUNCTION__, mName.string());

        if (mDevice->ops->set_callbacks) {
            mDevice->ops->set_callbacks(mDevice,
                                   __notify_cb,
                                   __data_cb,
                                   __data_cb_timestamp,
                                   __get_memory,
                                   this);
        }
    };
"
	
	
	
	
	comment "* Set the notification and data callbacks "
      end

      operation 905996 "enableMsgType"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "msgType" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        ALOGV(\"%s(%s)\", __FUNCTION__, mName.string());
        if (mDevice->ops->enable_msg_type)
            mDevice->ops->enable_msg_type(mDevice, msgType);
    };
"
	
	
	
	
	comment "*
     * The following three functions all take a msgtype,
     * which is a bitmask of the messages defined in
     * include/ui/Camera.h
     
*
     * Enable a message, or set of messages."
      end

      operation 906124 "disableMsgType"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "msgType" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        ALOGV(\"%s(%s)\", __FUNCTION__, mName.string());
        if (mDevice->ops->disable_msg_type)
            mDevice->ops->disable_msg_type(mDevice, msgType);
    };
"
	
	
	
	
	comment "*
     * Disable a message, or a set of messages.
     *
     * Once received a call to disableMsgType(CAMERA_MSG_VIDEO_FRAME), camera hal
     * should not rely on its client to call releaseRecordingFrame() to release
     * video recording frames sent out by the cameral hal before and after the
     * disableMsgType(CAMERA_MSG_VIDEO_FRAME) call. Camera hal clients must not
     * modify/access any video recording frame after calling
     * disableMsgType(CAMERA_MSG_VIDEO_FRAME)."
      end

      operation 906252 "msgTypeEnabled"
	cpp_inline public explicit_return_type "int"
	nparams 1
	  param in name "msgType" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        ALOGV(\"%s(%s)\", __FUNCTION__, mName.string());
        if (mDevice->ops->msg_type_enabled)
            return mDevice->ops->msg_type_enabled(mDevice, msgType);
        return false;
    };
"
	
	
	
	
	comment "*
     * Query whether a message, or a set of messages, is enabled.
     * Note that this is operates as an AND, if any of the messages
     * queried are off, this will return false."
      end

      operation 906380 "startPreview"
	cpp_inline public return_type class_ref 128268 // status_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        ALOGV(\"%s(%s)\", __FUNCTION__, mName.string());
        if (mDevice->ops->start_preview)
            return mDevice->ops->start_preview(mDevice);
        return INVALID_OPERATION;
    };
"
	
	
	
	
	comment "*
     * Start preview mode."
      end

      operation 906508 "stopPreview"
	cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        ALOGV(\"%s(%s)\", __FUNCTION__, mName.string());
        if (mDevice->ops->stop_preview)
            mDevice->ops->stop_preview(mDevice);
    };
"
	
	
	
	
	comment "*
     * Stop a previously started preview."
      end

      operation 906636 "previewEnabled"
	cpp_inline public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        ALOGV(\"%s(%s)\", __FUNCTION__, mName.string());
        if (mDevice->ops->preview_enabled)
            return mDevice->ops->preview_enabled(mDevice);
        return false;
    };
"
	
	
	
	
	comment "*
     * Returns true if preview is enabled."
      end

      operation 906764 "storeMetaDataInBuffers"
	cpp_inline public return_type class_ref 128268 // status_t
	nparams 1
	  param in name "enable" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        ALOGV(\"%s(%s)\", __FUNCTION__, mName.string());
        if (mDevice->ops->store_meta_data_in_buffers)
            return mDevice->ops->store_meta_data_in_buffers(mDevice, enable);
        return enable ? INVALID_OPERATION: OK;
    };
"
	
	
	
	
	comment "*
     * Request the camera hal to store meta data or real YUV data in
     * the video buffers send out via CAMERA_MSG_VIDEO_FRRAME for a
     * recording session. If it is not called, the default camera
     * hal behavior is to store real YUV data in the video buffers.
     *
     * This method should be called before startRecording() in order
     * to be effective.
     *
     * If meta data is stored in the video buffers, it is up to the
     * receiver of the video buffers to interpret the contents and
     * to find the actual frame data with the help of the meta data
     * in the buffer. How this is done is outside of the scope of
     * this method.
     *
     * Some camera hal may not support storing meta data in the video
     * buffers, but all camera hal should support storing real YUV data
     * in the video buffers. If the camera hal does not support storing
     * the meta data in the video buffers when it is requested to do
     * do, INVALID_OPERATION must be returned. It is very useful for
     * the camera hal to pass meta data rather than the actual frame
     * data directly to the video encoder, since the amount of the
     * uncompressed frame data can be very large if video size is large.
     *
     * @param enable if true to instruct the camera hal to store
     *      meta data in the video buffers; false to instruct
     *      the camera hal to store real YUV data in the video
     *      buffers.
     *
     * @return OK on success."
      end

      operation 906892 "startRecording"
	cpp_inline public return_type class_ref 128268 // status_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        ALOGV(\"%s(%s)\", __FUNCTION__, mName.string());
        if (mDevice->ops->start_recording)
            return mDevice->ops->start_recording(mDevice);
        return INVALID_OPERATION;
    };
"
	
	
	
	
	comment "*
     * Start record mode. When a record image is available a CAMERA_MSG_VIDEO_FRAME
     * message is sent with the corresponding frame. Every record frame must be released
     * by a cameral hal client via releaseRecordingFrame() before the client calls
     * disableMsgType(CAMERA_MSG_VIDEO_FRAME). After the client calls
     * disableMsgType(CAMERA_MSG_VIDEO_FRAME), it is camera hal's responsibility
     * to manage the life-cycle of the video recording frames, and the client must
     * not modify/access any video recording frames."
      end

      operation 907020 "stopRecording"
	cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        ALOGV(\"%s(%s)\", __FUNCTION__, mName.string());
        if (mDevice->ops->stop_recording)
            mDevice->ops->stop_recording(mDevice);
    };
"
	
	
	
	
	comment "*
     * Stop a previously started recording."
      end

      operation 907148 "recordingEnabled"
	cpp_inline public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        ALOGV(\"%s(%s)\", __FUNCTION__, mName.string());
        if (mDevice->ops->recording_enabled)
            return mDevice->ops->recording_enabled(mDevice);
        return false;
    };
"
	
	
	
	
	comment "*
     * Returns true if recording is enabled."
      end

      operation 907276 "releaseRecordingFrame"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "mem" explicit_type "sp<IMemory>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        ALOGV(\"%s(%s)\", __FUNCTION__, mName.string());
        if (mDevice->ops->release_recording_frame) {
            ssize_t offset;
            size_t size;
            sp<IMemoryHeap> heap = mem->getMemory(&offset, &size);
            void *data = ((uint8_t *)heap->base()) + offset;
            return mDevice->ops->release_recording_frame(mDevice, data);
        }
    };
"
	
	
	
	
	comment "*
     * Release a record frame previously returned by CAMERA_MSG_VIDEO_FRAME.
     *
     * It is camera hal client's responsibility to release video recording
     * frames sent out by the camera hal before the camera hal receives
     * a call to disableMsgType(CAMERA_MSG_VIDEO_FRAME). After it receives
     * the call to disableMsgType(CAMERA_MSG_VIDEO_FRAME), it is camera hal's
     * responsibility of managing the life-cycle of the video recording
     * frames."
      end

      operation 907404 "autoFocus"
	cpp_inline public return_type class_ref 128268 // status_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        ALOGV(\"%s(%s)\", __FUNCTION__, mName.string());
        if (mDevice->ops->auto_focus)
            return mDevice->ops->auto_focus(mDevice);
        return INVALID_OPERATION;
    };
"
	
	
	
	
	comment "*
     * Start auto focus, the notification callback routine is called
     * with CAMERA_MSG_FOCUS once when focusing is complete. autoFocus()
     * will be called again if another auto focus is needed."
      end

      operation 907532 "cancelAutoFocus"
	cpp_inline public return_type class_ref 128268 // status_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        ALOGV(\"%s(%s)\", __FUNCTION__, mName.string());
        if (mDevice->ops->cancel_auto_focus)
            return mDevice->ops->cancel_auto_focus(mDevice);
        return INVALID_OPERATION;
    };
"
	
	
	
	
	comment "*
     * Cancels auto-focus function. If the auto-focus is still in progress,
     * this function will cancel it. Whether the auto-focus is in progress
     * or not, this function will return the focus position to the default.
     * If the camera does not support auto-focus, this is a no-op."
      end

      operation 907660 "takePicture"
	cpp_inline public return_type class_ref 128268 // status_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        ALOGV(\"%s(%s)\", __FUNCTION__, mName.string());
        if (mDevice->ops->take_picture)
            return mDevice->ops->take_picture(mDevice);
        return INVALID_OPERATION;
    };
"
	
	
	
	
	comment "*
     * Take a picture."
      end

      operation 907788 "cancelPicture"
	cpp_inline public return_type class_ref 128268 // status_t
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        ALOGV(\"%s(%s)\", __FUNCTION__, mName.string());
        if (mDevice->ops->cancel_picture)
            return mDevice->ops->cancel_picture(mDevice);
        return INVALID_OPERATION;
    };
"
	
	
	
	
	comment "*
     * Cancel a picture that was started with takePicture.  Calling this
     * method when no picture is being taken is a no-op."
      end

      operation 907916 "setParameters"
	cpp_inline public return_type class_ref 128268 // status_t
	nparams 1
	  param in name "params" type class_ref 141452 // CameraParameters
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        ALOGV(\"%s(%s)\", __FUNCTION__, mName.string());
        if (mDevice->ops->set_parameters)
            return mDevice->ops->set_parameters(mDevice,
                                               params.flatten().string());
        return INVALID_OPERATION;
    };
"
	
	
	
	
	comment "*
     * Set the camera parameters. This returns BAD_VALUE if any parameter is
     * invalid or not supported. "
      end

      operation 908044 "getParameters"
	const cpp_inline public return_type class_ref 141452 // CameraParameters
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        ALOGV(\"%s(%s)\", __FUNCTION__, mName.string());
        CameraParameters parms;
        if (mDevice->ops->get_parameters) {
            char *temp = mDevice->ops->get_parameters(mDevice);
            String8 str_parms(temp);
            if (mDevice->ops->put_parameters)
                mDevice->ops->put_parameters(mDevice, temp);
            else
                free(temp);
            parms.unflatten(str_parms);
        }
        return parms;
    };
"
	
	
	
	
	comment "* Return the camera parameters. "
      end

      operation 908172 "sendCommand"
	cpp_inline public return_type class_ref 128268 // status_t
	nparams 3
	  param in name "cmd" explicit_type "int32_t"
	  param in name "arg1" explicit_type "int32_t"
	  param in name "arg2" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract} {
        ALOGV(\"%s(%s)\", __FUNCTION__, mName.string());
        if (mDevice->ops->send_command)
            return mDevice->ops->send_command(mDevice, cmd, arg1, arg2);
        return INVALID_OPERATION;
    };
"
	
	
	
	
	comment "*
     * Send command to camera driver."
      end

      operation 908300 "release"
	cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        ALOGV(\"%s(%s)\", __FUNCTION__, mName.string());
        if (mDevice->ops->release)
            mDevice->ops->release(mDevice);
    };
"
	
	
	
	
	comment "*
     * Release the hardware resources owned by this object.  Note that this is
     * *not* done in the destructor."
      end

      operation 908428 "dump"
	const cpp_inline public return_type class_ref 128268 // status_t
	nparams 2
	  param in name "fd" explicit_type "int"
	  param in name "args" explicit_type "Vector<String16>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        ALOGV(\"%s(%s)\", __FUNCTION__, mName.string());
        if (mDevice->ops->dump)
            return mDevice->ops->dump(mDevice, fd);
        return OK; // It's fine if the HAL doesn't implement dump()
    };
"
	
	
	
	
	comment "*
     * Dump state of the camera hardware"
      end

      attribute 867596 "mDevice"
	private explicit_type "camera_device_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 848780 // mName (<directional composition>)
	relation 848780 *-->
	  a role_name "mName" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 848780 // mName (<directional composition>)
	  b parent class_ref 131340 // String8
      end

      operation 908556 "__notify_cb"
	class_operation cpp_inline private explicit_return_type "void"
	nparams 4
	  param in name "msg_type" explicit_type "int32_t"
	  param in name "ext1" explicit_type "int32_t"
	  param in name "ext2" explicit_type "int32_t"
	  param inout name "user" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} * ${p3}${v3}${)}${const}${volatile}${throw}${abstract} {
        ALOGV(\"%s\", __FUNCTION__);
        CameraHardwareInterface *__this =
                static_cast<CameraHardwareInterface *>(user);
        __this->mNotifyCb(msg_type, ext1, ext2, __this->mCbUser);
    };
"
	
	
	
	
      end

      operation 908684 "__data_cb"
	class_operation cpp_inline private explicit_return_type "void"
	nparams 5
	  param in name "msg_type" explicit_type "int32_t"
	  param in name "data" explicit_type "camera_memory_t"
	  param in name "index" explicit_type "uint"
	  param inout name "metadata" explicit_type "camera_frame_metadata_t"
	  param inout name "user" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} * ${p3}${v3}, ${t4} * ${p4}${v4}${)}${const}${volatile}${throw}${abstract} {
        ALOGV(\"%s\", __FUNCTION__);
        CameraHardwareInterface *__this =
                static_cast<CameraHardwareInterface *>(user);
        sp<CameraHeapMemory> mem(static_cast<CameraHeapMemory *>(data->handle));
        if (index >= mem->mNumBufs) {
            ALOGE(\"%s: invalid buffer index %d, max allowed is %d\", __FUNCTION__,
                 index, mem->mNumBufs);
            return;
        }
        __this->mDataCb(msg_type, mem->mBuffers[index], metadata, __this->mCbUser);
    };
"
	
	
	
	
      end

      operation 908812 "__data_cb_timestamp"
	class_operation cpp_inline private explicit_return_type "void"
	nparams 5
	  param in name "timestamp" type class_ref 140172 // nsecs_t
	  param in name "msg_type" explicit_type "int32_t"
	  param in name "data" explicit_type "camera_memory_t"
	  param in name "index" explicit_type "uint"
	  param inout name "user" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, const ${t2} * ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} * ${p4}${v4}${)}${const}${volatile}${throw}${abstract} {
        ALOGV(\"%s\", __FUNCTION__);
        CameraHardwareInterface *__this =
                static_cast<CameraHardwareInterface *>(user);
        // Start refcounting the heap object from here on.  When the clients
        // drop all references, it will be destroyed (as well as the enclosed
        // MemoryHeapBase.
        sp<CameraHeapMemory> mem(static_cast<CameraHeapMemory *>(data->handle));
        if (index >= mem->mNumBufs) {
            ALOGE(\"%s: invalid buffer index %d, max allowed is %d\", __FUNCTION__,
                 index, mem->mNumBufs);
            return;
        }
        __this->mDataCbTimestamp(timestamp, msg_type, mem->mBuffers[index], __this->mCbUser);
    };
"
	
	
	
	
      end

      class 396428 "CameraHeapMemory"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 848908 // <generalisation>
	  relation 848908 ---|>
	    a public
	      cpp default "${type}"
	      classrelation_ref 848908 // <generalisation>
	    b parent class_ref 140044 // RefBase
	end

	operation 908940 "CameraHeapMemory"
	  cpp_inline public explicit_return_type ""
	  nparams 3
	    param in name "fd" explicit_type "int"
	    param in name "buf_size" explicit_type "size_t"
	    param in name "num_buffers" explicit_type "uint_t"
	      defaultvalue "1"
	  cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${volatile}${throw} :
                         mBufSize(buf_size),
                         mNumBufs(num_buffers)
        {
            mHeap = new MemoryHeapBase(fd, buf_size * num_buffers);
            commonInitialization();
        };
"
	  
	  
	  
	  
	end

	operation 909068 "CameraHeapMemory"
	  cpp_inline public explicit_return_type ""
	  nparams 2
	    param in name "buf_size" explicit_type "size_t"
	    param in name "num_buffers" explicit_type "uint_t"
	      defaultvalue "1"
	  cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${volatile}${throw} :
                         mBufSize(buf_size),
                         mNumBufs(num_buffers)
        {
            mHeap = new MemoryHeapBase(buf_size * num_buffers);
            commonInitialization();
        };
"
	  
	  
	  
	  
	end

	operation 909196 "commonInitialization"
	  cpp_inline public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
            handle.data = mHeap->base();
            handle.size = mBufSize * mNumBufs;
            handle.handle = this;

            mBuffers = new sp<MemoryBase>[mNumBufs];
            for (uint_t i = 0; i < mNumBufs; i++)
                mBuffers[i] = new MemoryBase(mHeap,
                                             i * mBufSize,
                                             mBufSize);

            handle.release = __put_memory;
        };
"
	  
	  
	  
	  
	end

	operation 909324 "~CameraHeapMemory"
	  cpp_virtual cpp_inline public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {
            delete [] mBuffers;
        };
"
	  
	  
	  
	  
	end

	attribute 867724 "mBufSize"
	  public explicit_type "size_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 867852 "mNumBufs"
	  public explicit_type "uint_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 849036 // mHeap (<directional composition>)
	  relation 849036 *-->
	    stereotype "sp"
	    a role_name "mHeap" public
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	      classrelation_ref 849036 // mHeap (<directional composition>)
	    b parent class_ref 270220 // MemoryHeapBase
	end

	attribute 867980 "mBuffers"
	  public explicit_type "MemoryBase"
	  stereotype "sp"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> * ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 868108 "handle"
	  public explicit_type "camera_memory_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      operation 909452 "__get_memory"
	class_operation private explicit_return_type "camera_memory_t"
	nparams 3
	  param in name "fd" explicit_type "int"
	  param in name "buf_size" explicit_type "size_t"
	  param in name "num_bufs" explicit_type "uint_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 909580 "__put_memory"
	class_operation cpp_inline private explicit_return_type "void"
	nparams 1
	  param inout name "data" explicit_type "camera_memory_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        if (!data)
            return;

        CameraHeapMemory *mem = static_cast<CameraHeapMemory *>(data->handle);
        mem->decStrong(mem);
    };
"
	
	
	
	
      end

      operation 909708 "__to_anw"
	class_operation cpp_inline private return_type class_ref 175628 // ANativeWindow
	nparams 1
	  param inout name "user" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        CameraHardwareInterface *__this =
                reinterpret_cast<CameraHardwareInterface *>(user);
        return __this->mPreviewWindow.get();
    };
"
	
	
	
	
      end

      operation 909836 "__dequeue_buffer"
	class_operation cpp_inline private explicit_return_type "int"
	nparams 3
	  param inout name "w" explicit_type "preview_stream_ops"
	  param inout name "buffer" explicit_type "buffer_handle_t"
	  param inout name "stride" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * * ${p1}${v1}, ${t2} * ${p2}${v2}${)}${const}${volatile}${throw}${abstract} {
        int rc;
        ANativeWindow *a = anw(w);
        ANativeWindowBuffer* anb;
        rc = native_window_dequeue_buffer_and_wait(a, &anb);
        if (!rc) {
            *buffer = &anb->handle;
            *stride = anb->stride;
        }
        return rc;
    };
"
	
	
	
	
      end

      operation 909964 "__lock_buffer"
	class_operation cpp_inline private explicit_return_type "int"
	nparams 2
	  param inout name "w" explicit_type "preview_stream_ops"
	  param inout name "buffer" explicit_type "buffer_handle_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        ANativeWindow *a = anw(w);
        return 0;
    };
"
	
	
	
	
      end

      operation 910092 "__enqueue_buffer"
	class_operation cpp_inline private explicit_return_type "int"
	nparams 2
	  param inout name "w" explicit_type "preview_stream_ops"
	  param inout name "buffer" explicit_type "buffer_handle_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        ANativeWindow *a = anw(w);
        return a->queueBuffer(a,
                  container_of(buffer, ANativeWindowBuffer, handle), -1);
    };
"
	
	
	
	
      end

      operation 910220 "__cancel_buffer"
	class_operation cpp_inline private explicit_return_type "int"
	nparams 2
	  param inout name "w" explicit_type "preview_stream_ops"
	  param inout name "buffer" explicit_type "buffer_handle_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        ANativeWindow *a = anw(w);
        return a->cancelBuffer(a,
                  container_of(buffer, ANativeWindowBuffer, handle), -1);
    };
"
	
	
	
	
      end

      operation 910348 "__set_buffer_count"
	class_operation cpp_inline private explicit_return_type "int"
	nparams 2
	  param inout name "w" explicit_type "preview_stream_ops"
	  param in name "count" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        ANativeWindow *a = anw(w);
        return native_window_set_buffer_count(a, count);
    };
"
	
	
	
	
      end

      operation 910476 "__set_buffers_geometry"
	class_operation cpp_inline private explicit_return_type "int"
	nparams 4
	  param inout name "w" explicit_type "preview_stream_ops"
	  param in name "width" explicit_type "int"
	  param in name "height" explicit_type "int"
	  param in name "format" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract} {
        ANativeWindow *a = anw(w);
        return native_window_set_buffers_geometry(a,
                          width, height, format);
    };
"
	
	
	
	
      end

      operation 910604 "__set_crop"
	class_operation cpp_inline private explicit_return_type "int"
	nparams 5
	  param inout name "w" explicit_type "preview_stream_ops"
	  param in name "left" explicit_type "int"
	  param in name "top" explicit_type "int"
	  param in name "right" explicit_type "int"
	  param in name "bottom" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}${)}${const}${volatile}${throw}${abstract} {
        ANativeWindow *a = anw(w);
        android_native_rect_t crop;
        crop.left = left;
        crop.top = top;
        crop.right = right;
        crop.bottom = bottom;
        return native_window_set_crop(a, &crop);
    };
"
	
	
	
	
      end

      operation 910732 "__set_timestamp"
	class_operation cpp_inline private explicit_return_type "int"
	nparams 2
	  param inout name "w" explicit_type "preview_stream_ops"
	  param in name "timestamp" explicit_type "int64_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        ANativeWindow *a = anw(w);
        return native_window_set_buffers_timestamp(a, timestamp);
    };
"
	
	
	
	
      end

      operation 910860 "__set_usage"
	class_operation cpp_inline private explicit_return_type "int"
	nparams 2
	  param inout name "w" explicit_type "preview_stream_ops"
	  param in name "usage" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        ANativeWindow *a = anw(w);
        return native_window_set_usage(a, usage);
    };
"
	
	
	
	
      end

      operation 910988 "__set_swap_interval"
	class_operation cpp_inline private explicit_return_type "int"
	nparams 2
	  param inout name "w" explicit_type "preview_stream_ops"
	  param in name "interval" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        ANativeWindow *a = anw(w);
        return a->setSwapInterval(a, interval);
    };
"
	
	
	
	
      end

      operation 911116 "__get_min_undequeued_buffer_count"
	class_operation cpp_inline private explicit_return_type "int"
	nparams 2
	  param in name "w" explicit_type "preview_stream_ops"
	  param inout name "count" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        ANativeWindow *a = anw(w);
        return a->query(a, NATIVE_WINDOW_MIN_UNDEQUEUED_BUFFERS, count);
    };
"
	
	
	
	
      end

      operation 911244 "initHalPreviewWindow"
	cpp_inline private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        mHalPreviewWindow.nw.cancel_buffer = __cancel_buffer;
        mHalPreviewWindow.nw.lock_buffer = __lock_buffer;
        mHalPreviewWindow.nw.dequeue_buffer = __dequeue_buffer;
        mHalPreviewWindow.nw.enqueue_buffer = __enqueue_buffer;
        mHalPreviewWindow.nw.set_buffer_count = __set_buffer_count;
        mHalPreviewWindow.nw.set_buffers_geometry = __set_buffers_geometry;
        mHalPreviewWindow.nw.set_crop = __set_crop;
        mHalPreviewWindow.nw.set_timestamp = __set_timestamp;
        mHalPreviewWindow.nw.set_usage = __set_usage;
        mHalPreviewWindow.nw.set_swap_interval = __set_swap_interval;

        mHalPreviewWindow.nw.get_min_undequeued_buffer_count =
                __get_min_undequeued_buffer_count;
    };
"
	
	
	
	
      end

      classrelation 849164 // mPreviewWindow (<directional composition>)
	relation 849164 *-->
	  stereotype "sp"
	  a role_name "mPreviewWindow" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 849164 // mPreviewWindow (<directional composition>)
	  b parent class_ref 175628 // ANativeWindow
      end

      class 396684 "camera_preview_window"
	visibility package stereotype "struct"
	cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 868236 "nw"
	  public explicit_type "preview_stream_ops"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}struct ${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 868364 "user"
	  public explicit_type "void"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      classrelation 849292 // mHalPreviewWindow (<directional composition>)
	relation 849292 *-->
	  a role_name "mHalPreviewWindow" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}struct ${type} ${name}${value};
"
	    classrelation_ref 849292 // mHalPreviewWindow (<directional composition>)
	  b parent class_ref 396684 // camera_preview_window
      end

      classrelation 849420 // mNotifyCb (<directional composition>)
	relation 849420 *-->
	  a role_name "mNotifyCb" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 849420 // mNotifyCb (<directional composition>)
	  b parent class_ref 396044 // notify_callback
      end

      classrelation 849548 // mDataCb (<directional composition>)
	relation 849548 *-->
	  a role_name "mDataCb" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 849548 // mDataCb (<directional composition>)
	  b parent class_ref 396172 // data_callback
      end

      classrelation 849676 // mDataCbTimestamp (<directional composition>)
	relation 849676 *-->
	  a role_name "mDataCbTimestamp" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 849676 // mDataCbTimestamp (<directional composition>)
	  b parent class_ref 396300 // data_callback_timestamp
      end

      attribute 868492 "mCbUser"
	private explicit_type "void"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 396044 "notify_callback"
      visibility package stereotype "typedef" explicit_base_type "void"
      cpp_decl "${comment}typedef ${type}(* ${name})(int32_t msgType,
                            int32_t ext1,
                            int32_t ext2,
                            void* user);
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
    end

    class 396172 "data_callback"
      visibility package stereotype "typedef" explicit_base_type "void"
      cpp_decl "${comment}typedef ${type}(* ${name})(int32_t msgType,
                            const sp<IMemory> &dataPtr,
                            camera_frame_metadata_t *metadata,
                            void* user);
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
    end

    class 396300 "data_callback_timestamp"
      visibility package stereotype "typedef" explicit_base_type "void"
      cpp_decl "${comment}typedef ${type}(* ${name})(nsecs_t timestamp,
                            int32_t msgType,
                            const sp<IMemory> &dataPtr,
                            void *user);
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
    end
  end

  package_ref 153100 // camera2

  deploymentview 142092 "libcameraservice"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 194188 "Camera2Client"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 391692 // Camera2Client
      end
    end

    artifact 194316 "Camera2Device"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 393740 // typedef11
	class_ref 392076 // Camera2Device
      end
    end

    artifact 194444 "CameraClient"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 395660 // CameraClient
      end
    end

    artifact 194572 "CameraHardwareInterface"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 396044 // notify_callback
	class_ref 396172 // data_callback
	class_ref 396300 // data_callback_timestamp
	class_ref 395916 // CameraHardwareInterface
      end
    end

    artifact 194700 "CameraService"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 391820 // CameraService
      end
    end
  end
end
